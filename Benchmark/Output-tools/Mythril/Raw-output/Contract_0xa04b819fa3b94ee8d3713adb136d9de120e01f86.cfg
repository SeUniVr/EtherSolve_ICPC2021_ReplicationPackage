<!DOCTYPE html>
<html>
<head>
    <title>Call Graph</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.css" integrity="sha256-iq5ygGJ7021Pi7H5S+QAUXCPUfaBzfqeplbg/KlEssg=" crossorigin="anonymous" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.js" integrity="sha256-JuQeAGbk9rG/EoRMixuy5X8syzICcvB0dj3KindZkY0=" crossorigin="anonymous"></script>

    
    <style type="text/css">
        #mynetwork {
          height: 100%;
            background-color: #232625;
        }
        body {
            background-color: #232625;
            color: #ffffff;
            font-size: 10px;
        }
        html, body {
          height: 95%;
        }
    </style>
    

    <script>
        var options = {"autoResize": true, "edges": {"font": {"align": "horizontal", "background": "none", "color": "#FFFFFF", "face": "arial", "multi": false, "strokeColor": "#ffffff", "strokeWidth": 0, "vadjust": 0}}, "height": "100%", "layout": {"hierarchical": {"blockShifting": true, "direction": "LR", "edgeMinimization": true, "enabled": true, "levelSeparation": 450, "nodeSpacing": 200, "parentCentralization": false, "sortMethod": "directed", "treeSpacing": 100}, "improvedLayout": true}, "manipulation": false, "nodes": {"borderWidth": 1, "borderWidthSelected": 2, "chosen": true, "color": "#000000", "font": {"align": "left", "color": "#FFFFFF"}, "shape": "box"}, "physics": {"enabled": false}, "width": "100%"};
        var nodes = [{"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "0 PUSH1 0x80\n2 PUSH1 0x40\n4 MSTORE\n5 PUSH1 0x04\n7 CALLDATASIZE\n8 LT\n9 PUSH2 0x00e6\n12 JUMPI", "id": "0", "isExpanded": false, "label": "0 PUSH1 0x80\n2 PUSH1 0x40\n4 MSTORE\n5 PUSH1 0x04\n7 CALLDATASIZE\n8 LT\n(click to expand +)", "size": 150, "truncLabel": "0 PUSH1 0x80\n2 PUSH1 0x40\n4 MSTORE\n5 PUSH1 0x04\n7 CALLDATASIZE\n8 LT\n(click to expand +)"}, {"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "230 JUMPDEST\n231 PUSH1 0x00\n233 PUSH1 0x0c\n235 PUSH1 0x00\n237 SWAP1\n238 SLOAD\n239 SWAP1\n240 PUSH2 0x0100\n243 EXP\n244 SWAP1\n245 DIV\n246 PUSH20 0xffffffff(...)\n267 AND\n268 SWAP1\n269 POP\n270 PUSH1 0x40\n272 MLOAD\n273 CALLDATASIZE\n274 PUSH1 0x00\n276 DUP3\n277 CALLDATACOPY\n278 PUSH1 0x00\n280 DUP1\n281 CALLDATASIZE\n282 DUP4\n283 DUP6\n284 GAS\n285 DELEGATECALL\n286 RETURNDATASIZE\n287 DUP1\n288 PUSH1 0x00\n290 DUP5\n291 RETURNDATACOPY\n292 DUP2\n293 PUSH1 0x00\n295 DUP2\n296 EQ\n297 PUSH2 0x0139\n300 JUMPI", "id": "1", "isExpanded": false, "label": "230 JUMPDEST\n231 PUSH1 0x00\n233 PUSH1 0x0c\n235 PUSH1 0x00\n237 SWAP1\n238 SLOAD\n(click to expand +)", "size": 150, "truncLabel": "230 JUMPDEST\n231 PUSH1 0x00\n233 PUSH1 0x0c\n235 PUSH1 0x00\n237 SWAP1\n238 SLOAD\n(click to expand +)"}, {"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "301 PUSH1 0x01\n303 DUP2\n304 EQ\n305 PUSH2 0x013d\n308 JUMPI", "id": "2", "isExpanded": false, "label": "301 PUSH1 0x01\n303 DUP2\n304 EQ\n305 PUSH2 0x013d\n308 JUMPI", "size": 150, "truncLabel": "301 PUSH1 0x01\n303 DUP2\n304 EQ\n305 PUSH2 0x013d\n308 JUMPI"}, {"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "313 JUMPDEST\n314 DUP2\n315 DUP5\n316 REVERT", "id": "3", "isExpanded": false, "label": "313 JUMPDEST\n314 DUP2\n315 DUP5\n316 REVERT", "size": 150, "truncLabel": "313 JUMPDEST\n314 DUP2\n315 DUP5\n316 REVERT"}, {"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "309 PUSH2 0x0141\n312 JUMP", "id": "4", "isExpanded": false, "label": "309 PUSH2 0x0141\n312 JUMP", "size": 150, "truncLabel": "309 PUSH2 0x0141\n312 JUMP"}, {"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "317 JUMPDEST\n318 DUP2\n319 DUP5\n320 RETURN", "id": "5", "isExpanded": false, "label": "317 JUMPDEST\n318 DUP2\n319 DUP5\n320 RETURN", "size": 150, "truncLabel": "317 JUMPDEST\n318 DUP2\n319 DUP5\n320 RETURN"}, {"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "321 JUMPDEST\n322 POP\n323 POP\n324 POP\n325 POP\n326 POP\n327 STOP", "id": "6", "isExpanded": false, "label": "321 JUMPDEST\n322 POP\n323 POP\n324 POP\n325 POP\n326 POP\n(click to expand +)", "size": 150, "truncLabel": "321 JUMPDEST\n322 POP\n323 POP\n324 POP\n325 POP\n326 POP\n(click to expand +)"}];
        var edges = [{"arrows": "to", "from": "0", "label": "True", "smooth": {"type": "cubicBezier"}, "to": "1"}, {"arrows": "to", "from": "1", "label": "Not(1_retval_285 == 0)", "smooth": {"type": "cubicBezier"}, "to": "2"}, {"arrows": "to", "from": "1", "label": "1_retval_285 == 0", "smooth": {"type": "cubicBezier"}, "to": "3"}, {"arrows": "to", "from": "2", "label": "Not(1_retval_285 == 1)", "smooth": {"type": "cubicBezier"}, "to": "4"}, {"arrows": "to", "from": "2", "label": "1_retval_285 == 1", "smooth": {"type": "cubicBezier"}, "to": "5"}, {"arrows": "to", "from": "4", "label": "", "smooth": {"type": "cubicBezier"}, "to": "6"}];
    </script>
</head>
<body>
<p>Mythril / Ethereum LASER Symbolic VM</p>
<div id="mynetwork"></div>
<script type="text/javascript">
    var container = document.getElementById('mynetwork');

    var nodesSet = new vis.DataSet(nodes);
    var edgesSet = new vis.DataSet(edges);
    var data = {'nodes': nodesSet, 'edges': edgesSet}

    var gph = new vis.Network(container, data, options);
    gph.on("click", function (params) {
        // parse node id
        var nodeID = params['nodes']['0'];
        if (nodeID) {
            var clickedNode = nodesSet.get(nodeID);

            if(clickedNode.isExpanded) {
                clickedNode.label = clickedNode.truncLabel;
            }
            else {
                clickedNode.label = clickedNode.fullLabel;
            }

            clickedNode.isExpanded = !clickedNode.isExpanded;

            nodesSet.update(clickedNode);
        }
    });
</script>
</body>
</html>