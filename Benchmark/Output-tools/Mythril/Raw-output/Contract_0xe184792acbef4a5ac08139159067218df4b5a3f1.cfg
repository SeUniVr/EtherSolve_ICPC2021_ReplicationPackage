<!DOCTYPE html>
<html>
<head>
    <title>Call Graph</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.css" integrity="sha256-iq5ygGJ7021Pi7H5S+QAUXCPUfaBzfqeplbg/KlEssg=" crossorigin="anonymous" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.js" integrity="sha256-JuQeAGbk9rG/EoRMixuy5X8syzICcvB0dj3KindZkY0=" crossorigin="anonymous"></script>

    
    <style type="text/css">
        #mynetwork {
          height: 100%;
            background-color: #232625;
        }
        body {
            background-color: #232625;
            color: #ffffff;
            font-size: 10px;
        }
        html, body {
          height: 95%;
        }
    </style>
    

    <script>
        var options = {"autoResize": true, "edges": {"font": {"align": "horizontal", "background": "none", "color": "#FFFFFF", "face": "arial", "multi": false, "strokeColor": "#ffffff", "strokeWidth": 0, "vadjust": 0}}, "height": "100%", "layout": {"hierarchical": {"blockShifting": true, "direction": "LR", "edgeMinimization": true, "enabled": true, "levelSeparation": 450, "nodeSpacing": 200, "parentCentralization": false, "sortMethod": "directed", "treeSpacing": 100}, "improvedLayout": true}, "manipulation": false, "nodes": {"borderWidth": 1, "borderWidthSelected": 2, "chosen": true, "color": "#000000", "font": {"align": "left", "color": "#FFFFFF"}, "shape": "box"}, "physics": {"enabled": false}, "width": "100%"};
        var nodes = [{"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "0 PUSH1 0x80\n2 PUSH1 0x40\n4 MSTORE\n5 PUSH1 0x04\n7 CALLDATASIZE\n8 LT\n9 PUSH2 0x00af\n12 JUMPI", "id": "0", "isExpanded": false, "label": "0 PUSH1 0x80\n2 PUSH1 0x40\n4 MSTORE\n5 PUSH1 0x04\n7 CALLDATASIZE\n8 LT\n(click to expand +)", "size": 150, "truncLabel": "0 PUSH1 0x80\n2 PUSH1 0x40\n4 MSTORE\n5 PUSH1 0x04\n7 CALLDATASIZE\n8 LT\n(click to expand +)"}, {"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "175 JUMPDEST\n176 PUSH1 0x00\n178 PUSH1 0x04\n180 PUSH1 0x00\n182 SWAP1\n183 SLOAD\n184 SWAP1\n185 PUSH2 0x0100\n188 EXP\n189 SWAP1\n190 DIV\n191 PUSH20 0xffffffff(...)\n212 AND\n213 SWAP1\n214 POP\n215 PUSH1 0x40\n217 MLOAD\n218 CALLDATASIZE\n219 PUSH1 0x00\n221 DUP3\n222 CALLDATACOPY\n223 PUSH1 0x00\n225 DUP1\n226 CALLDATASIZE\n227 DUP4\n228 DUP6\n229 GAS\n230 DELEGATECALL\n231 RETURNDATASIZE\n232 DUP1\n233 PUSH1 0x00\n235 DUP5\n236 RETURNDATACOPY\n237 DUP2\n238 PUSH1 0x00\n240 DUP2\n241 EQ\n242 PUSH2 0x0102\n245 JUMPI", "id": "1", "isExpanded": false, "label": "175 JUMPDEST\n176 PUSH1 0x00\n178 PUSH1 0x04\n180 PUSH1 0x00\n182 SWAP1\n183 SLOAD\n(click to expand +)", "size": 150, "truncLabel": "175 JUMPDEST\n176 PUSH1 0x00\n178 PUSH1 0x04\n180 PUSH1 0x00\n182 SWAP1\n183 SLOAD\n(click to expand +)"}, {"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "246 PUSH1 0x01\n248 DUP2\n249 EQ\n250 PUSH2 0x0106\n253 JUMPI", "id": "2", "isExpanded": false, "label": "246 PUSH1 0x01\n248 DUP2\n249 EQ\n250 PUSH2 0x0106\n253 JUMPI", "size": 150, "truncLabel": "246 PUSH1 0x01\n248 DUP2\n249 EQ\n250 PUSH2 0x0106\n253 JUMPI"}, {"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "258 JUMPDEST\n259 DUP2\n260 DUP5\n261 REVERT", "id": "3", "isExpanded": false, "label": "258 JUMPDEST\n259 DUP2\n260 DUP5\n261 REVERT", "size": 150, "truncLabel": "258 JUMPDEST\n259 DUP2\n260 DUP5\n261 REVERT"}, {"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "254 PUSH2 0x010a\n257 JUMP", "id": "4", "isExpanded": false, "label": "254 PUSH2 0x010a\n257 JUMP", "size": 150, "truncLabel": "254 PUSH2 0x010a\n257 JUMP"}, {"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "262 JUMPDEST\n263 DUP2\n264 DUP5\n265 RETURN", "id": "5", "isExpanded": false, "label": "262 JUMPDEST\n263 DUP2\n264 DUP5\n265 RETURN", "size": 150, "truncLabel": "262 JUMPDEST\n263 DUP2\n264 DUP5\n265 RETURN"}, {"color": {"background": "#2f7e5b", "border": "#26996f", "highlight": {"background": "#28a16f", "border": "#26996f"}}, "fullLabel": "266 JUMPDEST\n267 POP\n268 POP\n269 POP\n270 POP\n271 POP\n272 STOP", "id": "6", "isExpanded": false, "label": "266 JUMPDEST\n267 POP\n268 POP\n269 POP\n270 POP\n271 POP\n(click to expand +)", "size": 150, "truncLabel": "266 JUMPDEST\n267 POP\n268 POP\n269 POP\n270 POP\n271 POP\n(click to expand +)"}];
        var edges = [{"arrows": "to", "from": "0", "label": "True", "smooth": {"type": "cubicBezier"}, "to": "1"}, {"arrows": "to", "from": "1", "label": "Not(1_retval_230 == 0)", "smooth": {"type": "cubicBezier"}, "to": "2"}, {"arrows": "to", "from": "1", "label": "1_retval_230 == 0", "smooth": {"type": "cubicBezier"}, "to": "3"}, {"arrows": "to", "from": "2", "label": "Not(1_retval_230 == 1)", "smooth": {"type": "cubicBezier"}, "to": "4"}, {"arrows": "to", "from": "2", "label": "1_retval_230 == 1", "smooth": {"type": "cubicBezier"}, "to": "5"}, {"arrows": "to", "from": "4", "label": "", "smooth": {"type": "cubicBezier"}, "to": "6"}];
    </script>
</head>
<body>
<p>Mythril / Ethereum LASER Symbolic VM</p>
<div id="mynetwork"></div>
<script type="text/javascript">
    var container = document.getElementById('mynetwork');

    var nodesSet = new vis.DataSet(nodes);
    var edgesSet = new vis.DataSet(edges);
    var data = {'nodes': nodesSet, 'edges': edgesSet}

    var gph = new vis.Network(container, data, options);
    gph.on("click", function (params) {
        // parse node id
        var nodeID = params['nodes']['0'];
        if (nodeID) {
            var clickedNode = nodesSet.get(nodeID);

            if(clickedNode.isExpanded) {
                clickedNode.label = clickedNode.truncLabel;
            }
            else {
                clickedNode.label = clickedNode.fullLabel;
            }

            clickedNode.isExpanded = !clickedNode.isExpanded;

            nodesSet.update(clickedNode);
        }
    });
</script>
</body>
</html>