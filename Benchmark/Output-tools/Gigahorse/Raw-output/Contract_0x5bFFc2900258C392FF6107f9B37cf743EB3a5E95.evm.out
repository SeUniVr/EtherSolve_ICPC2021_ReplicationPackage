
Begin block 0x0
prev = {}, next = {'0xc', '0x10'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x1a', '0x41c'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x418: v418(0x41c) = CONST 
0x419: JUMPI v418(0x41c) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x41c', '0x41f'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x8f4ffcb1) = CONST 
0x26: v26 = EQ v21(0x8f4ffcb1) v1f
0x41a: v41a(0x41f) = CONST 
0x41b: JUMPI v41a(0x41f) v26
----------------------------------

Begin block 0x2b
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x2b
0x2c: v2c(0x0) = CONST 
0x2f: REVERT v2c(0x0) v2c(0x0)
----------------------------------

Begin block 0x30
prev = {}, next = {'0x46', '0x42'}
----------------------------------
function receiveApproval(address,uint256,address,bytes)()
Block 0x30
0x31: v31(0xf5) = CONST 
0x34: v34(0x4) = CONST 
0x37: v37 = CALLDATASIZE 
0x38: v38 = SUB v37 v34(0x4)
0x39: v39(0x80) = CONST 
0x3c: v3c = LT v38 v39(0x80)
0x3d: v3d = ISZERO v3c
0x3e: v3e(0x46) = CONST 
0x41: JUMPI v3e(0x46) v3d
----------------------------------

Begin block 0x42
prev = {'0x30'}, next = {}
----------------------------------
Block 0x42
0x42: v42(0x0) = CONST 
0x45: REVERT v42(0x0) v42(0x0)
----------------------------------

Begin block 0x46
prev = {'0x30'}, next = {'0x80', '0x7c'}
----------------------------------
Block 0x46
0x47: v47(0x1) = CONST 
0x49: v49(0x1) = CONST 
0x4b: v4b(0xa0) = CONST 
0x4d: v4d(0x10000000000000000000000000000000000000000) = SHL v4b(0xa0) v49(0x1)
0x4e: v4e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4d(0x10000000000000000000000000000000000000000) v47(0x1)
0x50: v50 = CALLDATALOAD v34(0x4)
0x52: v52 = AND v4e(0xffffffffffffffffffffffffffffffffffffffff) v50
0x54: v54(0x20) = CONST 
0x57: v57 = ADD v34(0x4) v54(0x20)
0x58: v58 = CALLDATALOAD v57
0x5a: v5a(0x40) = CONST 
0x5d: v5d = ADD v34(0x4) v5a(0x40)
0x5e: v5e = CALLDATALOAD v5d
0x61: v61 = AND v4e(0xffffffffffffffffffffffffffffffffffffffff) v5e
0x64: v64 = ADD v34(0x4) v38
0x66: v66(0x80) = CONST 
0x69: v69 = ADD v34(0x4) v66(0x80)
0x6a: v6a(0x60) = CONST 
0x6d: v6d = ADD v34(0x4) v6a(0x60)
0x6e: v6e = CALLDATALOAD v6d
0x6f: v6f(0x100000000) = CONST 
0x76: v76 = GT v6e v6f(0x100000000)
0x77: v77 = ISZERO v76
0x78: v78(0x80) = CONST 
0x7b: JUMPI v78(0x80) v77
----------------------------------

Begin block 0x7c
prev = {'0x46'}, next = {}
----------------------------------
Block 0x7c
0x7c: v7c(0x0) = CONST 
0x7f: REVERT v7c(0x0) v7c(0x0)
----------------------------------

Begin block 0x80
prev = {'0x46'}, next = {'0x8e', '0x92'}
----------------------------------
Block 0x80
0x82: v82 = ADD v34(0x4) v6e
0x84: v84(0x20) = CONST 
0x87: v87 = ADD v82 v84(0x20)
0x88: v88 = GT v87 v64
0x89: v89 = ISZERO v88
0x8a: v8a(0x92) = CONST 
0x8d: JUMPI v8a(0x92) v89
----------------------------------

Begin block 0x8e
prev = {'0x80'}, next = {}
----------------------------------
Block 0x8e
0x8e: v8e(0x0) = CONST 
0x91: REVERT v8e(0x0) v8e(0x0)
----------------------------------

Begin block 0x92
prev = {'0x80'}, next = {'0xb4', '0xb0'}
----------------------------------
Block 0x92
0x94: v94 = CALLDATALOAD v82
0x96: v96(0x20) = CONST 
0x98: v98 = ADD v96(0x20) v82
0x9b: v9b(0x1) = CONST 
0x9e: v9e = MUL v94 v9b(0x1)
0xa0: va0 = ADD v98 v9e
0xa1: va1 = GT va0 v64
0xa2: va2(0x100000000) = CONST 
0xa9: va9 = GT v94 va2(0x100000000)
0xaa: vaa = OR va9 va1
0xab: vab = ISZERO vaa
0xac: vac(0xb4) = CONST 
0xaf: JUMPI vac(0xb4) vab
----------------------------------

Begin block 0xb0
prev = {'0x92'}, next = {}
----------------------------------
Block 0xb0
0xb0: vb0(0x0) = CONST 
0xb3: REVERT vb0(0x0) vb0(0x0)
----------------------------------

Begin block 0xb4
prev = {'0x92'}, next = {'0xf7'}
----------------------------------
Block 0xb4
0xb9: vb9(0x1f) = CONST 
0xbb: vbb = ADD vb9(0x1f) v94
0xbc: vbc(0x20) = CONST 
0xc0: vc0 = DIV vbb vbc(0x20)
0xc1: vc1 = MUL vc0 vbc(0x20)
0xc2: vc2(0x20) = CONST 
0xc4: vc4 = ADD vc2(0x20) vc1
0xc5: vc5(0x40) = CONST 
0xc7: vc7 = MLOAD vc5(0x40)
0xca: vca = ADD vc7 vc4
0xcb: vcb(0x40) = CONST 
0xcd: MSTORE vcb(0x40) vca
0xd5: MSTORE vc7 v94
0xd6: vd6(0x20) = CONST 
0xd8: vd8 = ADD vd6(0x20) vc7
0xde: CALLDATACOPY vd8 v98 v94
0xdf: vdf(0x0) = CONST 
0xe2: ve2 = ADD vd8 v94
0xe6: MSTORE ve2 vdf(0x0)
0xeb: veb(0xf7) = CONST 
0xf4: JUMP veb(0xf7)
----------------------------------

Begin block 0xf5
prev = {'0x3a4'}, next = {}
----------------------------------
Block 0xf5
0xf6: STOP 
----------------------------------

Begin block 0xf7
prev = {'0xb4'}, next = {'0x152', '0x156'}
----------------------------------
Block 0xf7
0xf8: vf8(0x0) = CONST 
0xfb: vfb = SLOAD vf8(0x0)
0xfc: vfc(0x40) = CONST 
0xff: vff = MLOAD vfc(0x40)
0x100: v100(0x23b872dd) = CONST 
0x105: v105(0xe0) = CONST 
0x107: v107(0x23b872dd00000000000000000000000000000000000000000000000000000000) = SHL v105(0xe0) v100(0x23b872dd)
0x109: MSTORE vff v107(0x23b872dd00000000000000000000000000000000000000000000000000000000)
0x10a: v10a(0x1) = CONST 
0x10c: v10c(0x1) = CONST 
0x10e: v10e(0xa0) = CONST 
0x110: v110(0x10000000000000000000000000000000000000000) = SHL v10e(0xa0) v10c(0x1)
0x111: v111(0xffffffffffffffffffffffffffffffffffffffff) = SUB v110(0x10000000000000000000000000000000000000000) v10a(0x1)
0x114: v114 = AND v111(0xffffffffffffffffffffffffffffffffffffffff) v52
0x115: v115(0x4) = CONST 
0x118: v118 = ADD vff v115(0x4)
0x119: MSTORE v118 v114
0x11a: v11a = ADDRESS 
0x11b: v11b(0x24) = CONST 
0x11e: v11e = ADD vff v11b(0x24)
0x11f: MSTORE v11e v11a
0x120: v120(0x44) = CONST 
0x123: v123 = ADD vff v120(0x44)
0x126: MSTORE v123 v58
0x128: v128 = MLOAD vfc(0x40)
0x12c: v12c = AND vfb v111(0xffffffffffffffffffffffffffffffffffffffff)
0x12e: v12e(0x23b872dd) = CONST 
0x134: v134(0x64) = CONST 
0x138: v138 = ADD vff v134(0x64)
0x13a: v13a(0x20) = CONST 
0x141: v141 = SUB vff v128
0x144: v144 = ADD v134(0x64) v141
0x14a: v14a = EXTCODESIZE v12c
0x14b: v14b = ISZERO v14a
0x14d: v14d = ISZERO v14b
0x14e: v14e(0x156) = CONST 
0x151: JUMPI v14e(0x156) v14d
----------------------------------

Begin block 0x152
prev = {'0xf7'}, next = {}
----------------------------------
Block 0x152
0x152: v152(0x0) = CONST 
0x155: REVERT v152(0x0) v152(0x0)
----------------------------------

Begin block 0x156
prev = {'0xf7'}, next = {'0x161', '0x16a'}
----------------------------------
Block 0x156
0x158: v158 = GAS 
0x159: v159 = CALL v158 v12c vf8(0x0) v128 v144 v128 v13a(0x20)
0x15a: v15a = ISZERO v159
0x15c: v15c = ISZERO v15a
0x15d: v15d(0x16a) = CONST 
0x160: JUMPI v15d(0x16a) v15c
----------------------------------

Begin block 0x161
prev = {'0x156'}, next = {}
----------------------------------
Block 0x161
0x161: v161 = RETURNDATASIZE 
0x162: v162(0x0) = CONST 
0x165: RETURNDATACOPY v162(0x0) v162(0x0) v161
0x166: v166 = RETURNDATASIZE 
0x167: v167(0x0) = CONST 
0x169: REVERT v167(0x0) v166
----------------------------------

Begin block 0x16a
prev = {'0x156'}, next = {'0x180', '0x17c'}
----------------------------------
Block 0x16a
0x16f: v16f(0x40) = CONST 
0x171: v171 = MLOAD v16f(0x40)
0x172: v172 = RETURNDATASIZE 
0x173: v173(0x20) = CONST 
0x176: v176 = LT v172 v173(0x20)
0x177: v177 = ISZERO v176
0x178: v178(0x180) = CONST 
0x17b: JUMPI v178(0x180) v177
----------------------------------

Begin block 0x17c
prev = {'0x16a'}, next = {}
----------------------------------
Block 0x17c
0x17c: v17c(0x0) = CONST 
0x17f: REVERT v17c(0x0) v17c(0x0)
----------------------------------

Begin block 0x180
prev = {'0x16a'}, next = {'0x1de', '0x1da'}
----------------------------------
Block 0x180
0x183: v183(0x0) = CONST 
0x186: v186 = SLOAD v183(0x0)
0x187: v187(0x1) = CONST 
0x189: v189 = SLOAD v187(0x1)
0x18a: v18a(0x40) = CONST 
0x18d: v18d = MLOAD v18a(0x40)
0x18e: v18e(0x95ea7b3) = CONST 
0x193: v193(0xe0) = CONST 
0x195: v195(0x95ea7b300000000000000000000000000000000000000000000000000000000) = SHL v193(0xe0) v18e(0x95ea7b3)
0x197: MSTORE v18d v195(0x95ea7b300000000000000000000000000000000000000000000000000000000)
0x198: v198(0x1) = CONST 
0x19a: v19a(0x1) = CONST 
0x19c: v19c(0xa0) = CONST 
0x19e: v19e(0x10000000000000000000000000000000000000000) = SHL v19c(0xa0) v19a(0x1)
0x19f: v19f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v19e(0x10000000000000000000000000000000000000000) v198(0x1)
0x1a2: v1a2 = AND v19f(0xffffffffffffffffffffffffffffffffffffffff) v189
0x1a3: v1a3(0x4) = CONST 
0x1a6: v1a6 = ADD v18d v1a3(0x4)
0x1a7: MSTORE v1a6 v1a2
0x1a8: v1a8(0x24) = CONST 
0x1ab: v1ab = ADD v18d v1a8(0x24)
0x1ae: MSTORE v1ab v58
0x1b0: v1b0 = MLOAD v18a(0x40)
0x1b4: v1b4 = AND v186 v19f(0xffffffffffffffffffffffffffffffffffffffff)
0x1b6: v1b6(0x95ea7b3) = CONST 
0x1bc: v1bc(0x44) = CONST 
0x1c0: v1c0 = ADD v18d v1bc(0x44)
0x1c2: v1c2(0x20) = CONST 
0x1c9: v1c9 = SUB v18d v1b0
0x1cc: v1cc = ADD v1bc(0x44) v1c9
0x1d2: v1d2 = EXTCODESIZE v1b4
0x1d3: v1d3 = ISZERO v1d2
0x1d5: v1d5 = ISZERO v1d3
0x1d6: v1d6(0x1de) = CONST 
0x1d9: JUMPI v1d6(0x1de) v1d5
----------------------------------

Begin block 0x1da
prev = {'0x180'}, next = {}
----------------------------------
Block 0x1da
0x1da: v1da(0x0) = CONST 
0x1dd: REVERT v1da(0x0) v1da(0x0)
----------------------------------

Begin block 0x1de
prev = {'0x180'}, next = {'0x1f2', '0x1e9'}
----------------------------------
Block 0x1de
0x1e0: v1e0 = GAS 
0x1e1: v1e1 = CALL v1e0 v1b4 v183(0x0) v1b0 v1cc v1b0 v1c2(0x20)
0x1e2: v1e2 = ISZERO v1e1
0x1e4: v1e4 = ISZERO v1e2
0x1e5: v1e5(0x1f2) = CONST 
0x1e8: JUMPI v1e5(0x1f2) v1e4
----------------------------------

Begin block 0x1e9
prev = {'0x1de'}, next = {}
----------------------------------
Block 0x1e9
0x1e9: v1e9 = RETURNDATASIZE 
0x1ea: v1ea(0x0) = CONST 
0x1ed: RETURNDATACOPY v1ea(0x0) v1ea(0x0) v1e9
0x1ee: v1ee = RETURNDATASIZE 
0x1ef: v1ef(0x0) = CONST 
0x1f1: REVERT v1ef(0x0) v1ee
----------------------------------

Begin block 0x1f2
prev = {'0x1de'}, next = {'0x204', '0x208'}
----------------------------------
Block 0x1f2
0x1f7: v1f7(0x40) = CONST 
0x1f9: v1f9 = MLOAD v1f7(0x40)
0x1fa: v1fa = RETURNDATASIZE 
0x1fb: v1fb(0x20) = CONST 
0x1fe: v1fe = LT v1fa v1fb(0x20)
0x1ff: v1ff = ISZERO v1fe
0x200: v200(0x208) = CONST 
0x203: JUMPI v200(0x208) v1ff
----------------------------------

Begin block 0x204
prev = {'0x1f2'}, next = {}
----------------------------------
Block 0x204
0x204: v204(0x0) = CONST 
0x207: REVERT v204(0x0) v204(0x0)
----------------------------------

Begin block 0x208
prev = {'0x1f2'}, next = {'0x22c', '0x262'}
----------------------------------
Block 0x208
0x20b: v20b(0x20) = CONST 
0x20e: v20e = ADD vc7 v20b(0x20)
0x20f: v20f = MLOAD v20e
0x210: v210(0xff) = CONST 
0x212: v212(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v210(0xff)
0x214: v214 = AND v20f v212(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00)
0x216: v216(0x1) = CONST 
0x218: v218(0x1) = CONST 
0x21a: v21a(0xe0) = CONST 
0x21c: v21c(0x100000000000000000000000000000000000000000000000000000000) = SHL v21a(0xe0) v218(0x1)
0x21d: v21d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v21c(0x100000000000000000000000000000000000000000000000000000000) v216(0x1)
0x21e: v21e(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v21d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x21f: v21f = AND v21e(0xffffffff00000000000000000000000000000000000000000000000000000000) v20f
0x220: v220(0xa74cd7) = CONST 
0x224: v224(0xe2) = CONST 
0x226: v226(0x29d335c00000000000000000000000000000000000000000000000000000000) = SHL v224(0xe2) v220(0xa74cd7)
0x227: v227 = EQ v226(0x29d335c00000000000000000000000000000000000000000000000000000000) v21f
0x228: v228(0x262) = CONST 
0x22b: JUMPI v228(0x262) v227
----------------------------------

Begin block 0x22c
prev = {'0x208'}, next = {}
----------------------------------
Block 0x22c
0x22c: v22c(0x40) = CONST 
0x22e: v22e = MLOAD v22c(0x40)
0x22f: v22f(0x461bcd) = CONST 
0x233: v233(0xe5) = CONST 
0x235: v235(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v233(0xe5) v22f(0x461bcd)
0x237: MSTORE v22e v235(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x238: v238(0x4) = CONST 
0x23a: v23a = ADD v238(0x4) v22e
0x23d: v23d(0x20) = CONST 
0x23f: v23f = ADD v23d(0x20) v23a
0x242: v242 = SUB v23f v23a
0x244: MSTORE v23a v242
0x245: v245(0x34) = CONST 
0x248: MSTORE v23f v245(0x34)
0x249: v249(0x20) = CONST 
0x24b: v24b = ADD v249(0x20) v23f
0x24d: v24d(0x3b0) = CONST 
0x250: v250(0x34) = CONST 
0x253: CODECOPY v24b v24d(0x3b0) v250(0x34)
0x254: v254(0x40) = CONST 
0x256: v256 = ADD v254(0x40) v24b
0x25a: v25a(0x40) = CONST 
0x25c: v25c = MLOAD v25a(0x40)
0x25f: v25f = SUB v256 v25c
0x261: REVERT v25c v25f
----------------------------------

Begin block 0x262
prev = {'0x208'}, next = {'0x28a'}
----------------------------------
Block 0x262
0x263: v263(0x1) = CONST 
0x265: v265 = SLOAD v263(0x1)
0x266: v266(0x40) = CONST 
0x268: v268 = MLOAD v266(0x40)
0x26a: v26a = MLOAD vc7
0x26b: v26b(0x0) = CONST 
0x26e: v26e(0x60) = CONST 
0x271: v271(0x1) = CONST 
0x273: v273(0x1) = CONST 
0x275: v275(0xa0) = CONST 
0x277: v277(0x10000000000000000000000000000000000000000) = SHL v275(0xa0) v273(0x1)
0x278: v278(0xffffffffffffffffffffffffffffffffffffffff) = SUB v277(0x10000000000000000000000000000000000000000) v271(0x1)
0x27b: v27b = AND v265 v278(0xffffffffffffffffffffffffffffffffffffffff)
0x282: v282(0x20) = CONST 
0x285: v285 = ADD vc7 v282(0x20)
----------------------------------

Begin block 0x28a
prev = {'0x293', '0x262'}, next = {'0x293', '0x2a9'}
----------------------------------
Block 0x28a
0x28a_0x2: v28a_2 = PHI v26a v29c
0x28b: v28b(0x20) = CONST 
0x28e: v28e = LT v28a_2 v28b(0x20)
0x28f: v28f(0x2a9) = CONST 
0x292: JUMPI v28f(0x2a9) v28e
----------------------------------

Begin block 0x293
prev = {'0x28a'}, next = {'0x28a'}
----------------------------------
Block 0x293
0x293_0x0: v293_0 = PHI v285 v2a4
0x293_0x1: v293_1 = PHI v268 v2a2
0x293_0x2: v293_2 = PHI v26a v29c
0x294: v294 = MLOAD v293_0
0x296: MSTORE v293_1 v294
0x297: v297(0x1f) = CONST 
0x299: v299(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v297(0x1f)
0x29c: v29c = ADD v293_2 v299(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
0x29e: v29e(0x20) = CONST 
0x2a2: v2a2 = ADD v29e(0x20) v293_1
0x2a4: v2a4 = ADD v29e(0x20) v293_0
0x2a5: v2a5(0x28a) = CONST 
0x2a8: JUMP v2a5(0x28a)
----------------------------------

Begin block 0x2a9
prev = {'0x28a'}, next = {'0x30b', '0x2ea'}
----------------------------------
Block 0x2a9
0x2a9_0x0: v2a9_0 = PHI v285 v2a4
0x2a9_0x1: v2a9_1 = PHI v268 v2a2
0x2a9_0x2: v2a9_2 = PHI v26a v29c
0x2aa: v2aa(0x1) = CONST 
0x2ad: v2ad(0x20) = CONST 
0x2af: v2af = SUB v2ad(0x20) v2a9_2
0x2b0: v2b0(0x100) = CONST 
0x2b3: v2b3 = EXP v2b0(0x100) v2af
0x2b4: v2b4 = SUB v2b3 v2aa(0x1)
0x2b6: v2b6 = NOT v2b4
0x2b8: v2b8 = MLOAD v2a9_0
0x2b9: v2b9 = AND v2b8 v2b6
0x2bc: v2bc = MLOAD v2a9_1
0x2bd: v2bd = AND v2bc v2b4
0x2c0: v2c0 = OR v2b9 v2bd
0x2c2: MSTORE v2a9_1 v2c0
0x2cb: v2cb = ADD v26a v268
0x2cf: v2cf(0x0) = CONST 
0x2d1: v2d1(0x40) = CONST 
0x2d3: v2d3 = MLOAD v2d1(0x40)
0x2d6: v2d6 = SUB v2cb v2d3
0x2d8: v2d8(0x0) = CONST 
0x2db: v2db = GAS 
0x2dc: v2dc = CALL v2db v27b v2d8(0x0) v2d3 v2d6 v2d3 v2cf(0x0)
0x2e0: v2e0 = RETURNDATASIZE 
0x2e2: v2e2(0x0) = CONST 
0x2e5: v2e5 = EQ v2e0 v2e2(0x0)
0x2e6: v2e6(0x30b) = CONST 
0x2e9: JUMPI v2e6(0x30b) v2e5
----------------------------------

Begin block 0x2ea
prev = {'0x2a9'}, next = {'0x310'}
----------------------------------
Block 0x2ea
0x2ea: v2ea(0x40) = CONST 
0x2ec: v2ec = MLOAD v2ea(0x40)
0x2ef: v2ef(0x1f) = CONST 
0x2f1: v2f1(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v2ef(0x1f)
0x2f2: v2f2(0x3f) = CONST 
0x2f4: v2f4 = RETURNDATASIZE 
0x2f5: v2f5 = ADD v2f4 v2f2(0x3f)
0x2f6: v2f6 = AND v2f5 v2f1(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
0x2f8: v2f8 = ADD v2ec v2f6
0x2f9: v2f9(0x40) = CONST 
0x2fb: MSTORE v2f9(0x40) v2f8
0x2fc: v2fc = RETURNDATASIZE 
0x2fe: MSTORE v2ec v2fc
0x2ff: v2ff = RETURNDATASIZE 
0x300: v300(0x0) = CONST 
0x302: v302(0x20) = CONST 
0x305: v305 = ADD v2ec v302(0x20)
0x306: RETURNDATACOPY v305 v300(0x0) v2ff
0x307: v307(0x310) = CONST 
0x30a: JUMP v307(0x310)
----------------------------------

Begin block 0x30b
prev = {'0x2a9'}, next = {'0x310'}
----------------------------------
Block 0x30b
0x30c: v30c(0x60) = CONST 
----------------------------------

Begin block 0x310
prev = {'0x30b', '0x2ea'}, next = {'0x3a4', '0x321'}
----------------------------------
Block 0x310
0x310_0x1: v310_1 = PHI v2ec v30c(0x60)
0x317: v317(0x44) = CONST 
0x31a: v31a = ADD v310_1 v317(0x44)
0x31d: v31d(0x3a4) = CONST 
0x320: JUMPI v31d(0x3a4) v2dc
----------------------------------

Begin block 0x321
prev = {'0x310'}, next = {'0x351'}
----------------------------------
Block 0x321
0x321: v321(0x40) = CONST 
0x323: v323 = MLOAD v321(0x40)
0x324: v324(0x461bcd) = CONST 
0x328: v328(0xe5) = CONST 
0x32a: v32a(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v328(0xe5) v324(0x461bcd)
0x32c: MSTORE v323 v32a(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x32d: v32d(0x4) = CONST 
0x32f: v32f = ADD v32d(0x4) v323
0x332: v332(0x20) = CONST 
0x334: v334 = ADD v332(0x20) v32f
0x337: v337 = SUB v334 v32f
0x339: MSTORE v32f v337
0x33d: v33d = MLOAD v31a
0x33f: MSTORE v334 v33d
0x340: v340(0x20) = CONST 
0x342: v342 = ADD v340(0x20) v334
0x346: v346 = MLOAD v31a
0x348: v348(0x20) = CONST 
0x34a: v34a = ADD v348(0x20) v31a
0x34f: v34f(0x0) = CONST 
----------------------------------

Begin block 0x351
prev = {'0x35a', '0x321'}, next = {'0x369', '0x35a'}
----------------------------------
Block 0x351
0x351_0x0: v351_0 = PHI v34f(0x0) v364
0x354: v354 = LT v351_0 v346
0x355: v355 = ISZERO v354
0x356: v356(0x369) = CONST 
0x359: JUMPI v356(0x369) v355
----------------------------------

Begin block 0x35a
prev = {'0x351'}, next = {'0x351'}
----------------------------------
Block 0x35a
0x35a_0x0: v35a_0 = PHI v34f(0x0) v364
0x35c: v35c = ADD v35a_0 v34a
0x35d: v35d = MLOAD v35c
0x360: v360 = ADD v35a_0 v342
0x361: MSTORE v360 v35d
0x362: v362(0x20) = CONST 
0x364: v364 = ADD v362(0x20) v35a_0
0x365: v365(0x351) = CONST 
0x368: JUMP v365(0x351)
----------------------------------

Begin block 0x369
prev = {'0x351'}, next = {'0x396', '0x37d'}
----------------------------------
Block 0x369
0x372: v372 = ADD v346 v342
0x374: v374(0x1f) = CONST 
0x376: v376 = AND v374(0x1f) v346
0x378: v378 = ISZERO v376
0x379: v379(0x396) = CONST 
0x37c: JUMPI v379(0x396) v378
----------------------------------

Begin block 0x37d
prev = {'0x369'}, next = {'0x396'}
----------------------------------
Block 0x37d
0x37f: v37f = SUB v372 v376
0x381: v381 = MLOAD v37f
0x382: v382(0x1) = CONST 
0x385: v385(0x20) = CONST 
0x387: v387 = SUB v385(0x20) v376
0x388: v388(0x100) = CONST 
0x38b: v38b = EXP v388(0x100) v387
0x38c: v38c = SUB v38b v382(0x1)
0x38d: v38d = NOT v38c
0x38e: v38e = AND v38d v381
0x390: MSTORE v37f v38e
0x391: v391(0x20) = CONST 
0x393: v393 = ADD v391(0x20) v37f
----------------------------------

Begin block 0x396
prev = {'0x369', '0x37d'}, next = {}
----------------------------------
Block 0x396
0x396_0x1: v396_1 = PHI v372 v393
0x39c: v39c(0x40) = CONST 
0x39e: v39e = MLOAD v39c(0x40)
0x3a1: v3a1 = SUB v396_1 v39e
0x3a3: REVERT v39e v3a1
----------------------------------

Begin block 0x3a4
prev = {'0x310'}, next = {'0xf5'}
----------------------------------
Block 0x3a4
0x3ae: JUMP v31(0xf5)
----------------------------------

Begin block 0x41c
prev = {'0x1a', '0x10'}, next = {}
----------------------------------
Block 0x41c
0x41d: v41d(0x2b) = CONST 
0x41e: CALLPRIVATE v41d(0x2b)
----------------------------------

Begin block 0x41f
prev = {'0x1a'}, next = {}
----------------------------------
Block 0x41f
0x420: v420(0x30) = CONST 
0x421: CALLPRIVATE v420(0x30)
----------------------------------
