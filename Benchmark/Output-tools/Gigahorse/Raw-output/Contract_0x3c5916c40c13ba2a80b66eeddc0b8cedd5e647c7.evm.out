
Begin block 0x0
prev = {}, next = {'0xb93', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0xb69: vb69(0xb93) = CONST 
0xb6a: JUMPI vb69(0xb93) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x40', '0xb96'}
----------------------------------
Block 0xd
0xd: vd(0xffffffff) = CONST 
0x12: v12(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x30: v30(0x0) = CONST 
0x32: v32 = CALLDATALOAD v30(0x0)
0x33: v33 = DIV v32 v12(0x100000000000000000000000000000000000000000000000000000000)
0x34: v34 = AND v33 vd(0xffffffff)
0x35: v35(0x6fdde03) = CONST 
0x3b: v3b = EQ v34 v35(0x6fdde03)
0xb6b: vb6b(0xb96) = CONST 
0xb6c: JUMPI vb6b(0xb96) v3b
----------------------------------

Begin block 0x40
prev = {'0xd'}, next = {'0x4b', '0xb99'}
----------------------------------
Block 0x40
0x41: v41(0x95ea7b3) = CONST 
0x46: v46 = EQ v41(0x95ea7b3) v34
0xb6d: vb6d(0xb99) = CONST 
0xb6e: JUMPI vb6d(0xb99) v46
----------------------------------

Begin block 0x4b
prev = {'0x40'}, next = {'0x56', '0xb9c'}
----------------------------------
Block 0x4b
0x4c: v4c(0x18160ddd) = CONST 
0x51: v51 = EQ v4c(0x18160ddd) v34
0xb6f: vb6f(0xb9c) = CONST 
0xb70: JUMPI vb6f(0xb9c) v51
----------------------------------

Begin block 0x56
prev = {'0x4b'}, next = {'0xb9f', '0x61'}
----------------------------------
Block 0x56
0x57: v57(0x23b872dd) = CONST 
0x5c: v5c = EQ v57(0x23b872dd) v34
0xb71: vb71(0xb9f) = CONST 
0xb72: JUMPI vb71(0xb9f) v5c
----------------------------------

Begin block 0x61
prev = {'0x56'}, next = {'0x6c', '0xba2'}
----------------------------------
Block 0x61
0x62: v62(0x313ce567) = CONST 
0x67: v67 = EQ v62(0x313ce567) v34
0xb73: vb73(0xba2) = CONST 
0xb74: JUMPI vb73(0xba2) v67
----------------------------------

Begin block 0x6c
prev = {'0x61'}, next = {'0xba5', '0x77'}
----------------------------------
Block 0x6c
0x6d: v6d(0x3eaaf86b) = CONST 
0x72: v72 = EQ v6d(0x3eaaf86b) v34
0xb75: vb75(0xba5) = CONST 
0xb76: JUMPI vb75(0xba5) v72
----------------------------------

Begin block 0x77
prev = {'0x6c'}, next = {'0x82', '0xba8'}
----------------------------------
Block 0x77
0x78: v78(0x70a08231) = CONST 
0x7d: v7d = EQ v78(0x70a08231) v34
0xb77: vb77(0xba8) = CONST 
0xb78: JUMPI vb77(0xba8) v7d
----------------------------------

Begin block 0x82
prev = {'0x77'}, next = {'0xbab', '0x8d'}
----------------------------------
Block 0x82
0x83: v83(0x79ba5097) = CONST 
0x88: v88 = EQ v83(0x79ba5097) v34
0xb79: vb79(0xbab) = CONST 
0xb7a: JUMPI vb79(0xbab) v88
----------------------------------

Begin block 0x8d
prev = {'0x82'}, next = {'0xbae', '0x98'}
----------------------------------
Block 0x8d
0x8e: v8e(0x8da5cb5b) = CONST 
0x93: v93 = EQ v8e(0x8da5cb5b) v34
0xb7b: vb7b(0xbae) = CONST 
0xb7c: JUMPI vb7b(0xbae) v93
----------------------------------

Begin block 0x98
prev = {'0x8d'}, next = {'0xbb1', '0xa3'}
----------------------------------
Block 0x98
0x99: v99(0x95d89b41) = CONST 
0x9e: v9e = EQ v99(0x95d89b41) v34
0xb7d: vb7d(0xbb1) = CONST 
0xb7e: JUMPI vb7d(0xbb1) v9e
----------------------------------

Begin block 0xa3
prev = {'0x98'}, next = {'0xbb4', '0xae'}
----------------------------------
Block 0xa3
0xa4: va4(0xa293d1e8) = CONST 
0xa9: va9 = EQ va4(0xa293d1e8) v34
0xb7f: vb7f(0xbb4) = CONST 
0xb80: JUMPI vb7f(0xbb4) va9
----------------------------------

Begin block 0xae
prev = {'0xa3'}, next = {'0xbb7', '0xb9'}
----------------------------------
Block 0xae
0xaf: vaf(0xa9059cbb) = CONST 
0xb4: vb4 = EQ vaf(0xa9059cbb) v34
0xb81: vb81(0xbb7) = CONST 
0xb82: JUMPI vb81(0xbb7) vb4
----------------------------------

Begin block 0xb9
prev = {'0xae'}, next = {'0xbba', '0xc4'}
----------------------------------
Block 0xb9
0xba: vba(0xb5931f7c) = CONST 
0xbf: vbf = EQ vba(0xb5931f7c) v34
0xb83: vb83(0xbba) = CONST 
0xb84: JUMPI vb83(0xbba) vbf
----------------------------------

Begin block 0xc4
prev = {'0xb9'}, next = {'0xbbd', '0xcf'}
----------------------------------
Block 0xc4
0xc5: vc5(0xcae9ca51) = CONST 
0xca: vca = EQ vc5(0xcae9ca51) v34
0xb85: vb85(0xbbd) = CONST 
0xb86: JUMPI vb85(0xbbd) vca
----------------------------------

Begin block 0xcf
prev = {'0xc4'}, next = {'0xbc0', '0xda'}
----------------------------------
Block 0xcf
0xd0: vd0(0xd05c78da) = CONST 
0xd5: vd5 = EQ vd0(0xd05c78da) v34
0xb87: vb87(0xbc0) = CONST 
0xb88: JUMPI vb87(0xbc0) vd5
----------------------------------

Begin block 0xda
prev = {'0xcf'}, next = {'0xe5', '0xbc3'}
----------------------------------
Block 0xda
0xdb: vdb(0xd4ee1d90) = CONST 
0xe0: ve0 = EQ vdb(0xd4ee1d90) v34
0xb89: vb89(0xbc3) = CONST 
0xb8a: JUMPI vb89(0xbc3) ve0
----------------------------------

Begin block 0xe5
prev = {'0xda'}, next = {'0xf0', '0xbc6'}
----------------------------------
Block 0xe5
0xe6: ve6(0xdc39d06d) = CONST 
0xeb: veb = EQ ve6(0xdc39d06d) v34
0xb8b: vb8b(0xbc6) = CONST 
0xb8c: JUMPI vb8b(0xbc6) veb
----------------------------------

Begin block 0xf0
prev = {'0xe5'}, next = {'0xfb', '0xbc9'}
----------------------------------
Block 0xf0
0xf1: vf1(0xdd62ed3e) = CONST 
0xf6: vf6 = EQ vf1(0xdd62ed3e) v34
0xb8d: vb8d(0xbc9) = CONST 
0xb8e: JUMPI vb8d(0xbc9) vf6
----------------------------------

Begin block 0xfb
prev = {'0xf0'}, next = {'0x106', '0xbcc'}
----------------------------------
Block 0xfb
0xfc: vfc(0xe6cb9013) = CONST 
0x101: v101 = EQ vfc(0xe6cb9013) v34
0xb8f: vb8f(0xbcc) = CONST 
0xb90: JUMPI vb8f(0xbcc) v101
----------------------------------

Begin block 0x106
prev = {'0xfb'}, next = {'0xb93', '0xbcf'}
----------------------------------
Block 0x106
0x107: v107(0xf2fde38b) = CONST 
0x10c: v10c = EQ v107(0xf2fde38b) v34
0xb91: vb91(0xbcf) = CONST 
0xb92: JUMPI vb91(0xbcf) v10c
----------------------------------

Begin block 0x111
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x111
0x112: v112(0x0) = CONST 
0x115: REVERT v112(0x0) v112(0x0)
----------------------------------

Begin block 0x116
prev = {}, next = {'0x11e', '0x122'}
----------------------------------
function name()()
Block 0x116
0x117: v117 = CALLVALUE 
0x119: v119 = ISZERO v117
0x11a: v11a(0x122) = CONST 
0x11d: JUMPI v11a(0x122) v119
----------------------------------

Begin block 0x11e
prev = {'0x116'}, next = {}
----------------------------------
Block 0x11e
0x11e: v11e(0x0) = CONST 
0x121: REVERT v11e(0x0) v11e(0x0)
----------------------------------

Begin block 0x122
prev = {'0x116'}, next = {'0x12b0x116'}
----------------------------------
Block 0x122
0x124: v124(0x12b) = CONST 
0x127: v127(0x461) = CONST 
0x12a: v12a_0, v12a_1 = CALLPRIVATE v127(0x461) v124(0x12b)
----------------------------------

Begin block 0x12b0x116
prev = {'0x122'}, next = {'0x14d0x116'}
----------------------------------
Block 0x12b0x116
0x12c0x116: v11612c(0x40) = CONST 
0x12f0x116: v11612f = MLOAD v11612c(0x40)
0x1300x116: v116130(0x20) = CONST 
0x1340x116: MSTORE v11612f v116130(0x20)
0x1360x116: v116136 = MLOAD v12a_0
0x1390x116: v116139 = ADD v11612f v116130(0x20)
0x13a0x116: MSTORE v116139 v116136
0x13c0x116: v11613c = MLOAD v12a_0
0x1430x116: v116143 = ADD v11612f v11612c(0x40)
0x1460x116: v116146 = ADD v12a_0 v116130(0x20)
0x14b0x116: v11614b(0x0) = CONST 
----------------------------------

Begin block 0x12b0x2d2
prev = {'0x2de'}, next = {'0x14d0x2d2'}
----------------------------------
Block 0x12b0x2d2
0x12c0x2d2: v2d212c(0x40) = CONST 
0x12f0x2d2: v2d212f = MLOAD v2d212c(0x40)
0x1300x2d2: v2d2130(0x20) = CONST 
0x1340x2d2: MSTORE v2d212f v2d2130(0x20)
0x1360x2d2: v2d2136 = MLOAD v2e6_0
0x1390x2d2: v2d2139 = ADD v2d212f v2d2130(0x20)
0x13a0x2d2: MSTORE v2d2139 v2d2136
0x13c0x2d2: v2d213c = MLOAD v2e6_0
0x1430x2d2: v2d2143 = ADD v2d212f v2d212c(0x40)
0x1460x2d2: v2d2146 = ADD v2e6_0 v2d2130(0x20)
0x14b0x2d2: v2d214b(0x0) = CONST 
----------------------------------

Begin block 0x14d0x116
prev = {'0x12b0x116', '0x1560x116'}, next = {'0x1560x116', '0x1650x116'}
----------------------------------
Block 0x14d0x116
0x14d0x116_0x0: v14d116_0 = PHI v11614b(0x0) v116160
0x1500x116: v116150 = LT v14d116_0 v11613c
0x1510x116: v116151 = ISZERO v116150
0x1520x116: v116152(0x165) = CONST 
0x1550x116: JUMPI v116152(0x165) v116151
----------------------------------

Begin block 0x14d0x2d2
prev = {'0x1560x2d2', '0x12b0x2d2'}, next = {'0x1560x2d2', '0x1650x2d2'}
----------------------------------
Block 0x14d0x2d2
0x14d0x2d2_0x0: v14d2d2_0 = PHI v2d214b(0x0) v2d2160
0x1500x2d2: v2d2150 = LT v14d2d2_0 v2d213c
0x1510x2d2: v2d2151 = ISZERO v2d2150
0x1520x2d2: v2d2152(0x165) = CONST 
0x1550x2d2: JUMPI v2d2152(0x165) v2d2151
----------------------------------

Begin block 0x1560x116
prev = {'0x14d0x116'}, next = {'0x14d0x116'}
----------------------------------
Block 0x1560x116
0x1560x116_0x0: v156116_0 = PHI v11614b(0x0) v116160
0x1580x116: v116158 = ADD v156116_0 v116146
0x1590x116: v116159 = MLOAD v116158
0x15c0x116: v11615c = ADD v156116_0 v116143
0x15d0x116: MSTORE v11615c v116159
0x15e0x116: v11615e(0x20) = CONST 
0x1600x116: v116160 = ADD v11615e(0x20) v156116_0
0x1610x116: v116161(0x14d) = CONST 
0x1640x116: JUMP v116161(0x14d)
----------------------------------

Begin block 0x1560x2d2
prev = {'0x14d0x2d2'}, next = {'0x14d0x2d2'}
----------------------------------
Block 0x1560x2d2
0x1560x2d2_0x0: v1562d2_0 = PHI v2d214b(0x0) v2d2160
0x1580x2d2: v2d2158 = ADD v1562d2_0 v2d2146
0x1590x2d2: v2d2159 = MLOAD v2d2158
0x15c0x2d2: v2d215c = ADD v1562d2_0 v2d2143
0x15d0x2d2: MSTORE v2d215c v2d2159
0x15e0x2d2: v2d215e(0x20) = CONST 
0x1600x2d2: v2d2160 = ADD v2d215e(0x20) v1562d2_0
0x1610x2d2: v2d2161(0x14d) = CONST 
0x1640x2d2: JUMP v2d2161(0x14d)
----------------------------------

Begin block 0x1650x116
prev = {'0x14d0x116'}, next = {'0x1790x116', '0x1920x116'}
----------------------------------
Block 0x1650x116
0x16e0x116: v11616e = ADD v11613c v116143
0x1700x116: v116170(0x1f) = CONST 
0x1720x116: v116172 = AND v116170(0x1f) v11613c
0x1740x116: v116174 = ISZERO v116172
0x1750x116: v116175(0x192) = CONST 
0x1780x116: JUMPI v116175(0x192) v116174
----------------------------------

Begin block 0x1650x2d2
prev = {'0x14d0x2d2'}, next = {'0x1920x2d2', '0x1790x2d2'}
----------------------------------
Block 0x1650x2d2
0x16e0x2d2: v2d216e = ADD v2d213c v2d2143
0x1700x2d2: v2d2170(0x1f) = CONST 
0x1720x2d2: v2d2172 = AND v2d2170(0x1f) v2d213c
0x1740x2d2: v2d2174 = ISZERO v2d2172
0x1750x2d2: v2d2175(0x192) = CONST 
0x1780x2d2: JUMPI v2d2175(0x192) v2d2174
----------------------------------

Begin block 0x1790x116
prev = {'0x1650x116'}, next = {'0x1920x116'}
----------------------------------
Block 0x1790x116
0x17b0x116: v11617b = SUB v11616e v116172
0x17d0x116: v11617d = MLOAD v11617b
0x17e0x116: v11617e(0x1) = CONST 
0x1810x116: v116181(0x20) = CONST 
0x1830x116: v116183 = SUB v116181(0x20) v116172
0x1840x116: v116184(0x100) = CONST 
0x1870x116: v116187 = EXP v116184(0x100) v116183
0x1880x116: v116188 = SUB v116187 v11617e(0x1)
0x1890x116: v116189 = NOT v116188
0x18a0x116: v11618a = AND v116189 v11617d
0x18c0x116: MSTORE v11617b v11618a
0x18d0x116: v11618d(0x20) = CONST 
0x18f0x116: v11618f = ADD v11618d(0x20) v11617b
----------------------------------

Begin block 0x1790x2d2
prev = {'0x1650x2d2'}, next = {'0x1920x2d2'}
----------------------------------
Block 0x1790x2d2
0x17b0x2d2: v2d217b = SUB v2d216e v2d2172
0x17d0x2d2: v2d217d = MLOAD v2d217b
0x17e0x2d2: v2d217e(0x1) = CONST 
0x1810x2d2: v2d2181(0x20) = CONST 
0x1830x2d2: v2d2183 = SUB v2d2181(0x20) v2d2172
0x1840x2d2: v2d2184(0x100) = CONST 
0x1870x2d2: v2d2187 = EXP v2d2184(0x100) v2d2183
0x1880x2d2: v2d2188 = SUB v2d2187 v2d217e(0x1)
0x1890x2d2: v2d2189 = NOT v2d2188
0x18a0x2d2: v2d218a = AND v2d2189 v2d217d
0x18c0x2d2: MSTORE v2d217b v2d218a
0x18d0x2d2: v2d218d(0x20) = CONST 
0x18f0x2d2: v2d218f = ADD v2d218d(0x20) v2d217b
----------------------------------

Begin block 0x1920x116
prev = {'0x1790x116', '0x1650x116'}, next = {}
----------------------------------
Block 0x1920x116
0x1920x116_0x1: v192116_1 = PHI v11616e v11618f
0x1980x116: v116198(0x40) = CONST 
0x19a0x116: v11619a = MLOAD v116198(0x40)
0x19d0x116: v11619d = SUB v192116_1 v11619a
0x19f0x116: RETURN v11619a v11619d
----------------------------------

Begin block 0x1920x2d2
prev = {'0x1650x2d2', '0x1790x2d2'}, next = {}
----------------------------------
Block 0x1920x2d2
0x1920x2d2_0x1: v1922d2_1 = PHI v2d216e v2d218f
0x1980x2d2: v2d2198(0x40) = CONST 
0x19a0x2d2: v2d219a = MLOAD v2d2198(0x40)
0x19d0x2d2: v2d219d = SUB v1922d2_1 v2d219a
0x19f0x2d2: RETURN v2d219a v2d219d
----------------------------------

Begin block 0x1a0
prev = {}, next = {'0x1ac', '0x1a8'}
----------------------------------
function approve(address,uint256)()
Block 0x1a0
0x1a1: v1a1 = CALLVALUE 
0x1a3: v1a3 = ISZERO v1a1
0x1a4: v1a4(0x1ac) = CONST 
0x1a7: JUMPI v1a4(0x1ac) v1a3
----------------------------------

Begin block 0x1a8
prev = {'0x1a0'}, next = {}
----------------------------------
Block 0x1a8
0x1a8: v1a8(0x0) = CONST 
0x1ab: REVERT v1a8(0x0) v1a8(0x0)
----------------------------------

Begin block 0x1ac
prev = {'0x1a0'}, next = {'0x1c40x1a0'}
----------------------------------
Block 0x1ac
0x1ae: v1ae(0x1c4) = CONST 
0x1b1: v1b1(0x1) = CONST 
0x1b3: v1b3(0xa0) = CONST 
0x1b5: v1b5(0x2) = CONST 
0x1b7: v1b7(0x10000000000000000000000000000000000000000) = EXP v1b5(0x2) v1b3(0xa0)
0x1b8: v1b8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1b7(0x10000000000000000000000000000000000000000) v1b1(0x1)
0x1b9: v1b9(0x4) = CONST 
0x1bb: v1bb = CALLDATALOAD v1b9(0x4)
0x1bc: v1bc = AND v1bb v1b8(0xffffffffffffffffffffffffffffffffffffffff)
0x1bd: v1bd(0x24) = CONST 
0x1bf: v1bf = CALLDATALOAD v1bd(0x24)
0x1c0: v1c0(0x4ef) = CONST 
0x1c3: v1c3_0 = CALLPRIVATE v1c0(0x4ef) v1bf v1bc v1ae(0x1c4)
----------------------------------

Begin block 0x1c40x1a0
prev = {'0x1ac'}, next = {}
----------------------------------
Block 0x1c40x1a0
0x1c50x1a0: v1a01c5(0x40) = CONST 
0x1c80x1a0: v1a01c8 = MLOAD v1a01c5(0x40)
0x1ca0x1a0: v1a01ca = ISZERO v1c3_0
0x1cb0x1a0: v1a01cb = ISZERO v1a01ca
0x1cd0x1a0: MSTORE v1a01c8 v1a01cb
0x1ce0x1a0: v1a01ce = MLOAD v1a01c5(0x40)
0x1d20x1a0: v1a01d2 = SUB v1a01c8 v1a01ce
0x1d30x1a0: v1a01d3(0x20) = CONST 
0x1d50x1a0: v1a01d5 = ADD v1a01d3(0x20) v1a01d2
0x1d70x1a0: RETURN v1a01ce v1a01d5
----------------------------------

Begin block 0x1c40x1ff
prev = {'0x620'}, next = {}
----------------------------------
Block 0x1c40x1ff
0x1c50x1ff: v1ff1c5(0x40) = CONST 
0x1c80x1ff: v1ff1c8 = MLOAD v1ff1c5(0x40)
0x1ca0x1ff: v1ff1ca = ISZERO v679(0x1)
0x1cb0x1ff: v1ff1cb = ISZERO v1ff1ca
0x1cd0x1ff: MSTORE v1ff1c8 v1ff1cb
0x1ce0x1ff: v1ff1ce = MLOAD v1ff1c5(0x40)
0x1d20x1ff: v1ff1d2 = SUB v1ff1c8 v1ff1ce
0x1d30x1ff: v1ff1d3(0x20) = CONST 
0x1d50x1ff: v1ff1d5 = ADD v1ff1d3(0x20) v1ff1d2
0x1d70x1ff: RETURN v1ff1ce v1ff1d5
----------------------------------

Begin block 0x1c40x302
prev = {'0x7f5'}, next = {}
----------------------------------
Block 0x1c40x302
0x1c50x302: v3021c5(0x40) = CONST 
0x1c80x302: v3021c8 = MLOAD v3021c5(0x40)
0x1ca0x302: v3021ca = ISZERO v84c(0x1)
0x1cb0x302: v3021cb = ISZERO v3021ca
0x1cd0x302: MSTORE v3021c8 v3021cb
0x1ce0x302: v3021ce = MLOAD v3021c5(0x40)
0x1d20x302: v3021d2 = SUB v3021c8 v3021ce
0x1d30x302: v3021d3(0x20) = CONST 
0x1d50x302: v3021d5 = ADD v3021d3(0x20) v3021d2
0x1d70x302: RETURN v3021ce v3021d5
----------------------------------

Begin block 0x1c40x341
prev = {'0x9c7'}, next = {}
----------------------------------
Block 0x1c40x341
0x1c50x341: v3411c5(0x40) = CONST 
0x1c80x341: v3411c8 = MLOAD v3411c5(0x40)
0x1ca0x341: v3411ca = ISZERO v9c9(0x1)
0x1cb0x341: v3411cb = ISZERO v3411ca
0x1cd0x341: MSTORE v3411c8 v3411cb
0x1ce0x341: v3411ce = MLOAD v3411c5(0x40)
0x1d20x341: v3411d2 = SUB v3411c8 v3411ce
0x1d30x341: v3411d3(0x20) = CONST 
0x1d50x341: v3411d5 = ADD v3411d3(0x20) v3411d2
0x1d70x341: RETURN v3411ce v3411d5
----------------------------------

Begin block 0x1c40x3da
prev = {'0xabb'}, next = {}
----------------------------------
Block 0x1c40x3da
0x1c50x3da: v3da1c5(0x40) = CONST 
0x1c80x3da: v3da1c8 = MLOAD v3da1c5(0x40)
0x1ca0x3da: v3da1ca = ISZERO vabd
0x1cb0x3da: v3da1cb = ISZERO v3da1ca
0x1cd0x3da: MSTORE v3da1c8 v3da1cb
0x1ce0x3da: v3da1ce = MLOAD v3da1c5(0x40)
0x1d20x3da: v3da1d2 = SUB v3da1c8 v3da1ce
0x1d30x3da: v3da1d3(0x20) = CONST 
0x1d50x3da: v3da1d5 = ADD v3da1d3(0x20) v3da1d2
0x1d70x3da: RETURN v3da1ce v3da1d5
----------------------------------

Begin block 0x1d8
prev = {}, next = {'0x1e0', '0x1e4'}
----------------------------------
function totalSupply()()
Block 0x1d8
0x1d9: v1d9 = CALLVALUE 
0x1db: v1db = ISZERO v1d9
0x1dc: v1dc(0x1e4) = CONST 
0x1df: JUMPI v1dc(0x1e4) v1db
----------------------------------

Begin block 0x1e0
prev = {'0x1d8'}, next = {}
----------------------------------
Block 0x1e0
0x1e0: v1e0(0x0) = CONST 
0x1e3: REVERT v1e0(0x0) v1e0(0x0)
----------------------------------

Begin block 0x1e4
prev = {'0x1d8'}, next = {'0x556'}
----------------------------------
Block 0x1e4
0x1e6: v1e6(0x1ed) = CONST 
0x1e9: v1e9(0x556) = CONST 
0x1ec: JUMP v1e9(0x556)
----------------------------------

Begin block 0x1ed0x1d8
prev = {'0x556'}, next = {}
----------------------------------
Block 0x1ed0x1d8
0x1ee0x1d8: v1d81ee(0x40) = CONST 
0x1f10x1d8: v1d81f1 = MLOAD v1d81ee(0x40)
0x1f40x1d8: MSTORE v1d81f1 v585
0x1f50x1d8: v1d81f5 = MLOAD v1d81ee(0x40)
0x1f90x1d8: v1d81f9 = SUB v1d81f1 v1d81f5
0x1fa0x1d8: v1d81fa(0x20) = CONST 
0x1fc0x1d8: v1d81fc = ADD v1d81fa(0x20) v1d81f9
0x1fe0x1d8: RETURN v1d81f5 v1d81fc
----------------------------------

Begin block 0x1ed0x254
prev = {'0x68a'}, next = {}
----------------------------------
Block 0x1ed0x254
0x1ee0x254: v2541ee(0x40) = CONST 
0x1f10x254: v2541f1 = MLOAD v2541ee(0x40)
0x1f40x254: MSTORE v2541f1 v68d
0x1f50x254: v2541f5 = MLOAD v2541ee(0x40)
0x1f90x254: v2541f9 = SUB v2541f1 v2541f5
0x1fa0x254: v2541fa(0x20) = CONST 
0x1fc0x254: v2541fc = ADD v2541fa(0x20) v2541f9
0x1fe0x254: RETURN v2541f5 v2541fc
----------------------------------

Begin block 0x1ed0x269
prev = {'0x690'}, next = {}
----------------------------------
Block 0x1ed0x269
0x1ee0x269: v2691ee(0x40) = CONST 
0x1f10x269: v2691f1 = MLOAD v2691ee(0x40)
0x1f40x269: MSTORE v2691f1 v6a8
0x1f50x269: v2691f5 = MLOAD v2691ee(0x40)
0x1f90x269: v2691f9 = SUB v2691f1 v2691f5
0x1fa0x269: v2691fa(0x20) = CONST 
0x1fc0x269: v2691fc = ADD v2691fa(0x20) v2691f9
0x1fe0x269: RETURN v2691f5 v2691fc
----------------------------------

Begin block 0x1ed0x2e7
prev = {'0x2f3'}, next = {}
----------------------------------
Block 0x1ed0x2e7
0x1ee0x2e7: v2e71ee(0x40) = CONST 
0x1f10x2e7: v2e71f1 = MLOAD v2e71ee(0x40)
0x1f40x2e7: MSTORE v2e71f1 v301_0
0x1f50x2e7: v2e71f5 = MLOAD v2e71ee(0x40)
0x1f90x2e7: v2e71f9 = SUB v2e71f1 v2e71f5
0x1fa0x2e7: v2e71fa(0x20) = CONST 
0x1fc0x2e7: v2e71fc = ADD v2e71fa(0x20) v2e71f9
0x1fe0x2e7: RETURN v2e71f5 v2e71fc
----------------------------------

Begin block 0x1ed0x326
prev = {'0x86c'}, next = {}
----------------------------------
Block 0x1ed0x326
0x1ee0x326: v3261ee(0x40) = CONST 
0x1f10x326: v3261f1 = MLOAD v3261ee(0x40)
0x1f40x326: MSTORE v3261f1 v86d
0x1f50x326: v3261f5 = MLOAD v3261ee(0x40)
0x1f90x326: v3261f9 = SUB v3261f1 v3261f5
0x1fa0x326: v3261fa(0x20) = CONST 
0x1fc0x326: v3261fc = ADD v3261fa(0x20) v3261f9
0x1fe0x326: RETURN v3261f5 v3261fc
----------------------------------

Begin block 0x1ed0x3aa
prev = {'0x3b6'}, next = {}
----------------------------------
Block 0x1ed0x3aa
0x1ee0x3aa: v3aa1ee(0x40) = CONST 
0x1f10x3aa: v3aa1f1 = MLOAD v3aa1ee(0x40)
0x1f40x3aa: MSTORE v3aa1f1 v3c4_0
0x1f50x3aa: v3aa1f5 = MLOAD v3aa1ee(0x40)
0x1f90x3aa: v3aa1f9 = SUB v3aa1f1 v3aa1f5
0x1fa0x3aa: v3aa1fa(0x20) = CONST 
0x1fc0x3aa: v3aa1fc = ADD v3aa1fa(0x20) v3aa1f9
0x1fe0x3aa: RETURN v3aa1f5 v3aa1fc
----------------------------------

Begin block 0x1ed0x3fe
prev = {'0xac4'}, next = {}
----------------------------------
Block 0x1ed0x3fe
0x1ee0x3fe: v3fe1ee(0x40) = CONST 
0x1f10x3fe: v3fe1f1 = MLOAD v3fe1ee(0x40)
0x1f40x3fe: MSTORE v3fe1f1 vaec
0x1f50x3fe: v3fe1f5 = MLOAD v3fe1ee(0x40)
0x1f90x3fe: v3fe1f9 = SUB v3fe1f1 v3fe1f5
0x1fa0x3fe: v3fe1fa(0x20) = CONST 
0x1fc0x3fe: v3fe1fc = ADD v3fe1fa(0x20) v3fe1f9
0x1fe0x3fe: RETURN v3fe1f5 v3fe1fc
----------------------------------

Begin block 0x1ed0x425
prev = {'0x431'}, next = {}
----------------------------------
Block 0x1ed0x425
0x1ee0x425: v4251ee(0x40) = CONST 
0x1f10x425: v4251f1 = MLOAD v4251ee(0x40)
0x1f40x425: MSTORE v4251f1 v43f_0
0x1f50x425: v4251f5 = MLOAD v4251ee(0x40)
0x1f90x425: v4251f9 = SUB v4251f1 v4251f5
0x1fa0x425: v4251fa(0x20) = CONST 
0x1fc0x425: v4251fc = ADD v4251fa(0x20) v4251f9
0x1fe0x425: RETURN v4251f5 v4251fc
----------------------------------

Begin block 0x1ff
prev = {}, next = {'0x20b', '0x207'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x1ff
0x200: v200 = CALLVALUE 
0x202: v202 = ISZERO v200
0x203: v203(0x20b) = CONST 
0x206: JUMPI v203(0x20b) v202
----------------------------------

Begin block 0x207
prev = {'0x1ff'}, next = {}
----------------------------------
Block 0x207
0x207: v207(0x0) = CONST 
0x20a: REVERT v207(0x0) v207(0x0)
----------------------------------

Begin block 0x20b
prev = {'0x1ff'}, next = {'0x588'}
----------------------------------
Block 0x20b
0x20d: v20d(0x1c4) = CONST 
0x210: v210(0x1) = CONST 
0x212: v212(0xa0) = CONST 
0x214: v214(0x2) = CONST 
0x216: v216(0x10000000000000000000000000000000000000000) = EXP v214(0x2) v212(0xa0)
0x217: v217(0xffffffffffffffffffffffffffffffffffffffff) = SUB v216(0x10000000000000000000000000000000000000000) v210(0x1)
0x218: v218(0x4) = CONST 
0x21a: v21a = CALLDATALOAD v218(0x4)
0x21c: v21c = AND v217(0xffffffffffffffffffffffffffffffffffffffff) v21a
0x21e: v21e(0x24) = CONST 
0x220: v220 = CALLDATALOAD v21e(0x24)
0x221: v221 = AND v220 v217(0xffffffffffffffffffffffffffffffffffffffff)
0x222: v222(0x44) = CONST 
0x224: v224 = CALLDATALOAD v222(0x44)
0x225: v225(0x588) = CONST 
0x228: JUMP v225(0x588)
----------------------------------

Begin block 0x229
prev = {}, next = {'0x231', '0x235'}
----------------------------------
function decimals()()
Block 0x229
0x22a: v22a = CALLVALUE 
0x22c: v22c = ISZERO v22a
0x22d: v22d(0x235) = CONST 
0x230: JUMPI v22d(0x235) v22c
----------------------------------

Begin block 0x231
prev = {'0x229'}, next = {}
----------------------------------
Block 0x231
0x231: v231(0x0) = CONST 
0x234: REVERT v231(0x0) v231(0x0)
----------------------------------

Begin block 0x235
prev = {'0x229'}, next = {'0x681'}
----------------------------------
Block 0x235
0x237: v237(0x23e) = CONST 
0x23a: v23a(0x681) = CONST 
0x23d: JUMP v23a(0x681)
----------------------------------

Begin block 0x23e
prev = {'0x681'}, next = {}
----------------------------------
Block 0x23e
0x23f: v23f(0x40) = CONST 
0x242: v242 = MLOAD v23f(0x40)
0x243: v243(0xff) = CONST 
0x247: v247 = AND v687 v243(0xff)
0x249: MSTORE v242 v247
0x24a: v24a = MLOAD v23f(0x40)
0x24e: v24e = SUB v242 v24a
0x24f: v24f(0x20) = CONST 
0x251: v251 = ADD v24f(0x20) v24e
0x253: RETURN v24a v251
----------------------------------

Begin block 0x254
prev = {}, next = {'0x25c', '0x260'}
----------------------------------
function _totalSupply()()
Block 0x254
0x255: v255 = CALLVALUE 
0x257: v257 = ISZERO v255
0x258: v258(0x260) = CONST 
0x25b: JUMPI v258(0x260) v257
----------------------------------

Begin block 0x25c
prev = {'0x254'}, next = {}
----------------------------------
Block 0x25c
0x25c: v25c(0x0) = CONST 
0x25f: REVERT v25c(0x0) v25c(0x0)
----------------------------------

Begin block 0x260
prev = {'0x254'}, next = {'0x68a'}
----------------------------------
Block 0x260
0x262: v262(0x1ed) = CONST 
0x265: v265(0x68a) = CONST 
0x268: JUMP v265(0x68a)
----------------------------------

Begin block 0x269
prev = {}, next = {'0x271', '0x275'}
----------------------------------
function balanceOf(address)()
Block 0x269
0x26a: v26a = CALLVALUE 
0x26c: v26c = ISZERO v26a
0x26d: v26d(0x275) = CONST 
0x270: JUMPI v26d(0x275) v26c
----------------------------------

Begin block 0x271
prev = {'0x269'}, next = {}
----------------------------------
Block 0x271
0x271: v271(0x0) = CONST 
0x274: REVERT v271(0x0) v271(0x0)
----------------------------------

Begin block 0x275
prev = {'0x269'}, next = {'0x690'}
----------------------------------
Block 0x275
0x277: v277(0x1ed) = CONST 
0x27a: v27a(0x1) = CONST 
0x27c: v27c(0xa0) = CONST 
0x27e: v27e(0x2) = CONST 
0x280: v280(0x10000000000000000000000000000000000000000) = EXP v27e(0x2) v27c(0xa0)
0x281: v281(0xffffffffffffffffffffffffffffffffffffffff) = SUB v280(0x10000000000000000000000000000000000000000) v27a(0x1)
0x282: v282(0x4) = CONST 
0x284: v284 = CALLDATALOAD v282(0x4)
0x285: v285 = AND v284 v281(0xffffffffffffffffffffffffffffffffffffffff)
0x286: v286(0x690) = CONST 
0x289: JUMP v286(0x690)
----------------------------------

Begin block 0x28a
prev = {}, next = {'0x296', '0x292'}
----------------------------------
function acceptOwnership()()
Block 0x28a
0x28b: v28b = CALLVALUE 
0x28d: v28d = ISZERO v28b
0x28e: v28e(0x296) = CONST 
0x291: JUMPI v28e(0x296) v28d
----------------------------------

Begin block 0x292
prev = {'0x28a'}, next = {}
----------------------------------
Block 0x292
0x292: v292(0x0) = CONST 
0x295: REVERT v292(0x0) v292(0x0)
----------------------------------

Begin block 0x296
prev = {'0x28a'}, next = {'0x6ab'}
----------------------------------
Block 0x296
0x298: v298(0x29f) = CONST 
0x29b: v29b(0x6ab) = CONST 
0x29e: JUMP v29b(0x6ab)
----------------------------------

Begin block 0x29f0x28a
prev = {'0x6c2'}, next = {}
----------------------------------
Block 0x29f0x28a
0x2a00x28a: STOP 
----------------------------------

Begin block 0x29f0x440
prev = {'0xb16'}, next = {}
----------------------------------
Block 0x29f0x440
0x2a00x440: STOP 
----------------------------------

Begin block 0x2a1
prev = {}, next = {'0x2a9', '0x2ad'}
----------------------------------
function owner()()
Block 0x2a1
0x2a2: v2a2 = CALLVALUE 
0x2a4: v2a4 = ISZERO v2a2
0x2a5: v2a5(0x2ad) = CONST 
0x2a8: JUMPI v2a5(0x2ad) v2a4
----------------------------------

Begin block 0x2a9
prev = {'0x2a1'}, next = {}
----------------------------------
Block 0x2a9
0x2a9: v2a9(0x0) = CONST 
0x2ac: REVERT v2a9(0x0) v2a9(0x0)
----------------------------------

Begin block 0x2ad
prev = {'0x2a1'}, next = {'0x733'}
----------------------------------
Block 0x2ad
0x2af: v2af(0x2b6) = CONST 
0x2b2: v2b2(0x733) = CONST 
0x2b5: JUMP v2b2(0x733)
----------------------------------

Begin block 0x2b60x2a1
prev = {'0x733'}, next = {}
----------------------------------
Block 0x2b60x2a1
0x2b70x2a1: v2a12b7(0x40) = CONST 
0x2ba0x2a1: v2a12ba = MLOAD v2a12b7(0x40)
0x2bb0x2a1: v2a12bb(0x1) = CONST 
0x2bd0x2a1: v2a12bd(0xa0) = CONST 
0x2bf0x2a1: v2a12bf(0x2) = CONST 
0x2c10x2a1: v2a12c1(0x10000000000000000000000000000000000000000) = EXP v2a12bf(0x2) v2a12bd(0xa0)
0x2c20x2a1: v2a12c2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2a12c1(0x10000000000000000000000000000000000000000) v2a12bb(0x1)
0x2c50x2a1: v2a12c5 = AND v73f v2a12c2(0xffffffffffffffffffffffffffffffffffffffff)
0x2c70x2a1: MSTORE v2a12ba v2a12c5
0x2c80x2a1: v2a12c8 = MLOAD v2a12b7(0x40)
0x2cc0x2a1: v2a12cc = SUB v2a12ba v2a12c8
0x2cd0x2a1: v2a12cd(0x20) = CONST 
0x2cf0x2a1: v2a12cf = ADD v2a12cd(0x20) v2a12cc
0x2d10x2a1: RETURN v2a12c8 v2a12cf
----------------------------------

Begin block 0x2b60x3c5
prev = {'0x9fa'}, next = {}
----------------------------------
Block 0x2b60x3c5
0x2b70x3c5: v3c52b7(0x40) = CONST 
0x2ba0x3c5: v3c52ba = MLOAD v3c52b7(0x40)
0x2bb0x3c5: v3c52bb(0x1) = CONST 
0x2bd0x3c5: v3c52bd(0xa0) = CONST 
0x2bf0x3c5: v3c52bf(0x2) = CONST 
0x2c10x3c5: v3c52c1(0x10000000000000000000000000000000000000000) = EXP v3c52bf(0x2) v3c52bd(0xa0)
0x2c20x3c5: v3c52c2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3c52c1(0x10000000000000000000000000000000000000000) v3c52bb(0x1)
0x2c50x3c5: v3c52c5 = AND va06 v3c52c2(0xffffffffffffffffffffffffffffffffffffffff)
0x2c70x3c5: MSTORE v3c52ba v3c52c5
0x2c80x3c5: v3c52c8 = MLOAD v3c52b7(0x40)
0x2cc0x3c5: v3c52cc = SUB v3c52ba v3c52c8
0x2cd0x3c5: v3c52cd(0x20) = CONST 
0x2cf0x3c5: v3c52cf = ADD v3c52cd(0x20) v3c52cc
0x2d10x3c5: RETURN v3c52c8 v3c52cf
----------------------------------

Begin block 0x2d2
prev = {}, next = {'0x2de', '0x2da'}
----------------------------------
function symbol()()
Block 0x2d2
0x2d3: v2d3 = CALLVALUE 
0x2d5: v2d5 = ISZERO v2d3
0x2d6: v2d6(0x2de) = CONST 
0x2d9: JUMPI v2d6(0x2de) v2d5
----------------------------------

Begin block 0x2da
prev = {'0x2d2'}, next = {}
----------------------------------
Block 0x2da
0x2da: v2da(0x0) = CONST 
0x2dd: REVERT v2da(0x0) v2da(0x0)
----------------------------------

Begin block 0x2de
prev = {'0x2d2'}, next = {'0x12b0x2d2'}
----------------------------------
Block 0x2de
0x2e0: v2e0(0x12b) = CONST 
0x2e3: v2e3(0x742) = CONST 
0x2e6: v2e6_0, v2e6_1 = CALLPRIVATE v2e3(0x742) v2e0(0x12b)
----------------------------------

Begin block 0x2e7
prev = {}, next = {'0x2ef', '0x2f3'}
----------------------------------
function safeSub(uint256,uint256)()
Block 0x2e7
0x2e8: v2e8 = CALLVALUE 
0x2ea: v2ea = ISZERO v2e8
0x2eb: v2eb(0x2f3) = CONST 
0x2ee: JUMPI v2eb(0x2f3) v2ea
----------------------------------

Begin block 0x2ef
prev = {'0x2e7'}, next = {}
----------------------------------
Block 0x2ef
0x2ef: v2ef(0x0) = CONST 
0x2f2: REVERT v2ef(0x0) v2ef(0x0)
----------------------------------

Begin block 0x2f3
prev = {'0x2e7'}, next = {'0x1ed0x2e7'}
----------------------------------
Block 0x2f3
0x2f5: v2f5(0x1ed) = CONST 
0x2f8: v2f8(0x4) = CONST 
0x2fa: v2fa = CALLDATALOAD v2f8(0x4)
0x2fb: v2fb(0x24) = CONST 
0x2fd: v2fd = CALLDATALOAD v2fb(0x24)
0x2fe: v2fe(0x79a) = CONST 
0x301: v301_0 = CALLPRIVATE v2fe(0x79a) v2fd v2fa v2f5(0x1ed)
----------------------------------

Begin block 0x302
prev = {}, next = {'0x30a', '0x30e'}
----------------------------------
function transfer(address,uint256)()
Block 0x302
0x303: v303 = CALLVALUE 
0x305: v305 = ISZERO v303
0x306: v306(0x30e) = CONST 
0x309: JUMPI v306(0x30e) v305
----------------------------------

Begin block 0x30a
prev = {'0x302'}, next = {}
----------------------------------
Block 0x30a
0x30a: v30a(0x0) = CONST 
0x30d: REVERT v30a(0x0) v30a(0x0)
----------------------------------

Begin block 0x30e
prev = {'0x302'}, next = {'0x7af'}
----------------------------------
Block 0x30e
0x310: v310(0x1c4) = CONST 
0x313: v313(0x1) = CONST 
0x315: v315(0xa0) = CONST 
0x317: v317(0x2) = CONST 
0x319: v319(0x10000000000000000000000000000000000000000) = EXP v317(0x2) v315(0xa0)
0x31a: v31a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v319(0x10000000000000000000000000000000000000000) v313(0x1)
0x31b: v31b(0x4) = CONST 
0x31d: v31d = CALLDATALOAD v31b(0x4)
0x31e: v31e = AND v31d v31a(0xffffffffffffffffffffffffffffffffffffffff)
0x31f: v31f(0x24) = CONST 
0x321: v321 = CALLDATALOAD v31f(0x24)
0x322: v322(0x7af) = CONST 
0x325: JUMP v322(0x7af)
----------------------------------

Begin block 0x326
prev = {}, next = {'0x32e', '0x332'}
----------------------------------
function safeDiv(uint256,uint256)()
Block 0x326
0x327: v327 = CALLVALUE 
0x329: v329 = ISZERO v327
0x32a: v32a(0x332) = CONST 
0x32d: JUMPI v32a(0x332) v329
----------------------------------

Begin block 0x32e
prev = {'0x326'}, next = {}
----------------------------------
Block 0x32e
0x32e: v32e(0x0) = CONST 
0x331: REVERT v32e(0x0) v32e(0x0)
----------------------------------

Begin block 0x332
prev = {'0x326'}, next = {'0x853'}
----------------------------------
Block 0x332
0x334: v334(0x1ed) = CONST 
0x337: v337(0x4) = CONST 
0x339: v339 = CALLDATALOAD v337(0x4)
0x33a: v33a(0x24) = CONST 
0x33c: v33c = CALLDATALOAD v33a(0x24)
0x33d: v33d(0x853) = CONST 
0x340: JUMP v33d(0x853)
----------------------------------

Begin block 0x341
prev = {}, next = {'0x349', '0x34d'}
----------------------------------
function approveAndCall(address,uint256,bytes)()
Block 0x341
0x342: v342 = CALLVALUE 
0x344: v344 = ISZERO v342
0x345: v345(0x34d) = CONST 
0x348: JUMPI v345(0x34d) v344
----------------------------------

Begin block 0x349
prev = {'0x341'}, next = {}
----------------------------------
Block 0x349
0x349: v349(0x0) = CONST 
0x34c: REVERT v349(0x0) v349(0x0)
----------------------------------

Begin block 0x34d
prev = {'0x341'}, next = {'0x874'}
----------------------------------
Block 0x34d
0x34f: v34f(0x40) = CONST 
0x352: v352 = MLOAD v34f(0x40)
0x353: v353(0x20) = CONST 
0x355: v355(0x4) = CONST 
0x357: v357(0x44) = CONST 
0x359: v359 = CALLDATALOAD v357(0x44)
0x35c: v35c = ADD v359 v355(0x4)
0x35d: v35d = CALLDATALOAD v35c
0x35e: v35e(0x1f) = CONST 
0x361: v361 = ADD v35d v35e(0x1f)
0x364: v364 = DIV v361 v353(0x20)
0x366: v366 = MUL v353(0x20) v364
0x368: v368 = ADD v352 v366
0x36a: v36a = ADD v353(0x20) v368
0x36d: MSTORE v34f(0x40) v36a
0x370: MSTORE v352 v35d
0x371: v371(0x1c4) = CONST 
0x376: v376 = CALLDATALOAD v355(0x4)
0x377: v377(0x1) = CONST 
0x379: v379(0xa0) = CONST 
0x37b: v37b(0x2) = CONST 
0x37d: v37d(0x10000000000000000000000000000000000000000) = EXP v37b(0x2) v379(0xa0)
0x37e: v37e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v37d(0x10000000000000000000000000000000000000000) v377(0x1)
0x37f: v37f = AND v37e(0xffffffffffffffffffffffffffffffffffffffff) v376
0x381: v381(0x24) = CONST 
0x384: v384 = CALLDATALOAD v381(0x24)
0x386: v386 = CALLDATASIZE 
0x389: v389(0x64) = CONST 
0x38d: v38d = ADD v381(0x24) v359
0x393: v393 = ADD v352 v353(0x20)
0x399: CALLDATACOPY v393 v38d v35d
0x39e: v39e(0x874) = CONST 
0x3a9: JUMP v39e(0x874)
----------------------------------

Begin block 0x3aa
prev = {}, next = {'0x3b2', '0x3b6'}
----------------------------------
function safeMul(uint256,uint256)()
Block 0x3aa
0x3ab: v3ab = CALLVALUE 
0x3ad: v3ad = ISZERO v3ab
0x3ae: v3ae(0x3b6) = CONST 
0x3b1: JUMPI v3ae(0x3b6) v3ad
----------------------------------

Begin block 0x3b2
prev = {'0x3aa'}, next = {}
----------------------------------
Block 0x3b2
0x3b2: v3b2(0x0) = CONST 
0x3b5: REVERT v3b2(0x0) v3b2(0x0)
----------------------------------

Begin block 0x3b6
prev = {'0x3aa'}, next = {'0x1ed0x3aa'}
----------------------------------
Block 0x3b6
0x3b8: v3b8(0x1ed) = CONST 
0x3bb: v3bb(0x4) = CONST 
0x3bd: v3bd = CALLDATALOAD v3bb(0x4)
0x3be: v3be(0x24) = CONST 
0x3c0: v3c0 = CALLDATALOAD v3be(0x24)
0x3c1: v3c1(0x9d5) = CONST 
0x3c4: v3c4_0 = CALLPRIVATE v3c1(0x9d5) v3c0 v3bd v3b8(0x1ed)
----------------------------------

Begin block 0x3c5
prev = {}, next = {'0x3d1', '0x3cd'}
----------------------------------
function newOwner()()
Block 0x3c5
0x3c6: v3c6 = CALLVALUE 
0x3c8: v3c8 = ISZERO v3c6
0x3c9: v3c9(0x3d1) = CONST 
0x3cc: JUMPI v3c9(0x3d1) v3c8
----------------------------------

Begin block 0x3cd
prev = {'0x3c5'}, next = {}
----------------------------------
Block 0x3cd
0x3cd: v3cd(0x0) = CONST 
0x3d0: REVERT v3cd(0x0) v3cd(0x0)
----------------------------------

Begin block 0x3d1
prev = {'0x3c5'}, next = {'0x9fa'}
----------------------------------
Block 0x3d1
0x3d3: v3d3(0x2b6) = CONST 
0x3d6: v3d6(0x9fa) = CONST 
0x3d9: JUMP v3d6(0x9fa)
----------------------------------

Begin block 0x3da
prev = {}, next = {'0x3e6', '0x3e2'}
----------------------------------
function transferAnyERC20Token(address,uint256)()
Block 0x3da
0x3db: v3db = CALLVALUE 
0x3dd: v3dd = ISZERO v3db
0x3de: v3de(0x3e6) = CONST 
0x3e1: JUMPI v3de(0x3e6) v3dd
----------------------------------

Begin block 0x3e2
prev = {'0x3da'}, next = {}
----------------------------------
Block 0x3e2
0x3e2: v3e2(0x0) = CONST 
0x3e5: REVERT v3e2(0x0) v3e2(0x0)
----------------------------------

Begin block 0x3e6
prev = {'0x3da'}, next = {'0xa09'}
----------------------------------
Block 0x3e6
0x3e8: v3e8(0x1c4) = CONST 
0x3eb: v3eb(0x1) = CONST 
0x3ed: v3ed(0xa0) = CONST 
0x3ef: v3ef(0x2) = CONST 
0x3f1: v3f1(0x10000000000000000000000000000000000000000) = EXP v3ef(0x2) v3ed(0xa0)
0x3f2: v3f2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3f1(0x10000000000000000000000000000000000000000) v3eb(0x1)
0x3f3: v3f3(0x4) = CONST 
0x3f5: v3f5 = CALLDATALOAD v3f3(0x4)
0x3f6: v3f6 = AND v3f5 v3f2(0xffffffffffffffffffffffffffffffffffffffff)
0x3f7: v3f7(0x24) = CONST 
0x3f9: v3f9 = CALLDATALOAD v3f7(0x24)
0x3fa: v3fa(0xa09) = CONST 
0x3fd: JUMP v3fa(0xa09)
----------------------------------

Begin block 0x3fe
prev = {}, next = {'0x406', '0x40a'}
----------------------------------
function allowance(address,address)()
Block 0x3fe
0x3ff: v3ff = CALLVALUE 
0x401: v401 = ISZERO v3ff
0x402: v402(0x40a) = CONST 
0x405: JUMPI v402(0x40a) v401
----------------------------------

Begin block 0x406
prev = {'0x3fe'}, next = {}
----------------------------------
Block 0x406
0x406: v406(0x0) = CONST 
0x409: REVERT v406(0x0) v406(0x0)
----------------------------------

Begin block 0x40a
prev = {'0x3fe'}, next = {'0xac4'}
----------------------------------
Block 0x40a
0x40c: v40c(0x1ed) = CONST 
0x40f: v40f(0x1) = CONST 
0x411: v411(0xa0) = CONST 
0x413: v413(0x2) = CONST 
0x415: v415(0x10000000000000000000000000000000000000000) = EXP v413(0x2) v411(0xa0)
0x416: v416(0xffffffffffffffffffffffffffffffffffffffff) = SUB v415(0x10000000000000000000000000000000000000000) v40f(0x1)
0x417: v417(0x4) = CONST 
0x419: v419 = CALLDATALOAD v417(0x4)
0x41b: v41b = AND v416(0xffffffffffffffffffffffffffffffffffffffff) v419
0x41d: v41d(0x24) = CONST 
0x41f: v41f = CALLDATALOAD v41d(0x24)
0x420: v420 = AND v41f v416(0xffffffffffffffffffffffffffffffffffffffff)
0x421: v421(0xac4) = CONST 
0x424: JUMP v421(0xac4)
----------------------------------

Begin block 0x425
prev = {}, next = {'0x431', '0x42d'}
----------------------------------
function safeAdd(uint256,uint256)()
Block 0x425
0x426: v426 = CALLVALUE 
0x428: v428 = ISZERO v426
0x429: v429(0x431) = CONST 
0x42c: JUMPI v429(0x431) v428
----------------------------------

Begin block 0x42d
prev = {'0x425'}, next = {}
----------------------------------
Block 0x42d
0x42d: v42d(0x0) = CONST 
0x430: REVERT v42d(0x0) v42d(0x0)
----------------------------------

Begin block 0x431
prev = {'0x425'}, next = {'0x1ed0x425'}
----------------------------------
Block 0x431
0x433: v433(0x1ed) = CONST 
0x436: v436(0x4) = CONST 
0x438: v438 = CALLDATALOAD v436(0x4)
0x439: v439(0x24) = CONST 
0x43b: v43b = CALLDATALOAD v439(0x24)
0x43c: v43c(0xaef) = CONST 
0x43f: v43f_0 = CALLPRIVATE v43c(0xaef) v43b v438 v433(0x1ed)
----------------------------------

Begin block 0x440
prev = {}, next = {'0x44c', '0x448'}
----------------------------------
function transferOwnership(address)()
Block 0x440
0x441: v441 = CALLVALUE 
0x443: v443 = ISZERO v441
0x444: v444(0x44c) = CONST 
0x447: JUMPI v444(0x44c) v443
----------------------------------

Begin block 0x448
prev = {'0x440'}, next = {}
----------------------------------
Block 0x448
0x448: v448(0x0) = CONST 
0x44b: REVERT v448(0x0) v448(0x0)
----------------------------------

Begin block 0x44c
prev = {'0x440'}, next = {'0xaff'}
----------------------------------
Block 0x44c
0x44e: v44e(0x29f) = CONST 
0x451: v451(0x1) = CONST 
0x453: v453(0xa0) = CONST 
0x455: v455(0x2) = CONST 
0x457: v457(0x10000000000000000000000000000000000000000) = EXP v455(0x2) v453(0xa0)
0x458: v458(0xffffffffffffffffffffffffffffffffffffffff) = SUB v457(0x10000000000000000000000000000000000000000) v451(0x1)
0x459: v459(0x4) = CONST 
0x45b: v45b = CALLDATALOAD v459(0x4)
0x45c: v45c = AND v45b v458(0xffffffffffffffffffffffffffffffffffffffff)
0x45d: v45d(0xaff) = CONST 
0x460: JUMP v45d(0xaff)
----------------------------------

Begin block 0x461
prev = {}, next = {'0x4e70x461', '0x4a1'}
----------------------------------
function 0x461(v461arg0)
Block 0x461
0x462: v462(0x3) = CONST 
0x465: v465 = SLOAD v462(0x3)
0x466: v466(0x40) = CONST 
0x469: v469 = MLOAD v466(0x40)
0x46a: v46a(0x20) = CONST 
0x46c: v46c(0x2) = CONST 
0x46e: v46e(0x1) = CONST 
0x471: v471 = AND v465 v46e(0x1)
0x472: v472 = ISZERO v471
0x473: v473(0x100) = CONST 
0x476: v476 = MUL v473(0x100) v472
0x477: v477(0x0) = CONST 
0x479: v479(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v477(0x0)
0x47a: v47a = ADD v479(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v476
0x47d: v47d = AND v465 v47a
0x481: v481 = DIV v47d v46c(0x2)
0x482: v482(0x1f) = CONST 
0x485: v485 = ADD v481 v482(0x1f)
0x488: v488 = DIV v485 v46a(0x20)
0x48a: v48a = MUL v46a(0x20) v488
0x48c: v48c = ADD v469 v48a
0x48e: v48e = ADD v46a(0x20) v48c
0x491: MSTORE v466(0x40) v48e
0x494: MSTORE v469 v481
0x498: v498 = ADD v469 v46a(0x20)
0x49c: v49c = ISZERO v481
0x49d: v49d(0x4e7) = CONST 
0x4a0: JUMPI v49d(0x4e7) v49c
----------------------------------

Begin block 0x4a1
prev = {'0x461'}, next = {'0x4a9', '0x4bc0x461'}
----------------------------------
Block 0x4a1
0x4a2: v4a2(0x1f) = CONST 
0x4a4: v4a4 = LT v4a2(0x1f) v481
0x4a5: v4a5(0x4bc) = CONST 
0x4a8: JUMPI v4a5(0x4bc) v4a4
----------------------------------

Begin block 0x4a9
prev = {'0x4a1'}, next = {'0x4e70x461'}
----------------------------------
Block 0x4a9
0x4a9: v4a9(0x100) = CONST 
0x4ae: v4ae = SLOAD v462(0x3)
0x4af: v4af = DIV v4ae v4a9(0x100)
0x4b0: v4b0 = MUL v4af v4a9(0x100)
0x4b2: MSTORE v498 v4b0
0x4b4: v4b4(0x20) = CONST 
0x4b6: v4b6 = ADD v4b4(0x20) v498
0x4b8: v4b8(0x4e7) = CONST 
0x4bb: JUMP v4b8(0x4e7)
----------------------------------

Begin block 0x4bc0x461
prev = {'0x4a1'}, next = {'0x4ca0x461'}
----------------------------------
Block 0x4bc0x461
0x4be0x461: v4614be = ADD v498 v481
0x4c10x461: v4614c1(0x0) = CONST 
0x4c30x461: MSTORE v4614c1(0x0) v462(0x3)
0x4c40x461: v4614c4(0x20) = CONST 
0x4c60x461: v4614c6(0x0) = CONST 
0x4c80x461: v4614c8 = SHA3 v4614c6(0x0) v4614c4(0x20)
----------------------------------

Begin block 0x4bc0x742
prev = {'0x77f'}, next = {'0x4ca0x742'}
----------------------------------
Block 0x4bc0x742
0x4be0x742: v7424be = ADD v776 v75f
0x4c10x742: v7424c1(0x0) = CONST 
0x4c30x742: MSTORE v7424c1(0x0) v743(0x2)
0x4c40x742: v7424c4(0x20) = CONST 
0x4c60x742: v7424c6(0x0) = CONST 
0x4c80x742: v7424c8 = SHA3 v7424c6(0x0) v7424c4(0x20)
----------------------------------

Begin block 0x4ca0x461
prev = {'0x4bc0x461', '0x4ca0x461'}, next = {'0x4de0x461', '0x4ca0x461'}
----------------------------------
Block 0x4ca0x461
0x4ca0x461_0x0: v4ca461_0 = PHI v498 v4614d6
0x4ca0x461_0x1: v4ca461_1 = PHI v4614d2 v4614c8
0x4cc0x461: v4614cc = SLOAD v4ca461_1
0x4ce0x461: MSTORE v4ca461_0 v4614cc
0x4d00x461: v4614d0(0x1) = CONST 
0x4d20x461: v4614d2 = ADD v4614d0(0x1) v4ca461_1
0x4d40x461: v4614d4(0x20) = CONST 
0x4d60x461: v4614d6 = ADD v4614d4(0x20) v4ca461_0
0x4d90x461: v4614d9 = GT v4614be v4614d6
0x4da0x461: v4614da(0x4ca) = CONST 
0x4dd0x461: JUMPI v4614da(0x4ca) v4614d9
----------------------------------

Begin block 0x4ca0x742
prev = {'0x4bc0x742', '0x4ca0x742'}, next = {'0x4ca0x742', '0x4de0x742'}
----------------------------------
Block 0x4ca0x742
0x4ca0x742_0x0: v4ca742_0 = PHI v776 v7424d6
0x4ca0x742_0x1: v4ca742_1 = PHI v7424d2 v7424c8
0x4cc0x742: v7424cc = SLOAD v4ca742_1
0x4ce0x742: MSTORE v4ca742_0 v7424cc
0x4d00x742: v7424d0(0x1) = CONST 
0x4d20x742: v7424d2 = ADD v7424d0(0x1) v4ca742_1
0x4d40x742: v7424d4(0x20) = CONST 
0x4d60x742: v7424d6 = ADD v7424d4(0x20) v4ca742_0
0x4d90x742: v7424d9 = GT v7424be v7424d6
0x4da0x742: v7424da(0x4ca) = CONST 
0x4dd0x742: JUMPI v7424da(0x4ca) v7424d9
----------------------------------

Begin block 0x4de0x461
prev = {'0x4ca0x461'}, next = {'0x4e70x461'}
----------------------------------
Block 0x4de0x461
0x4e00x461: v4614e0 = SUB v4614d6 v4614be
0x4e10x461: v4614e1(0x1f) = CONST 
0x4e30x461: v4614e3 = AND v4614e1(0x1f) v4614e0
0x4e50x461: v4614e5 = ADD v4614be v4614e3
----------------------------------

Begin block 0x4de0x742
prev = {'0x4ca0x742'}, next = {'0x4e70x742'}
----------------------------------
Block 0x4de0x742
0x4e00x742: v7424e0 = SUB v7424d6 v7424be
0x4e10x742: v7424e1(0x1f) = CONST 
0x4e30x742: v7424e3 = AND v7424e1(0x1f) v7424e0
0x4e50x742: v7424e5 = ADD v7424be v7424e3
----------------------------------

Begin block 0x4e70x461
prev = {'0x4a9', '0x4de0x461', '0x461'}, next = {}
----------------------------------
Block 0x4e70x461
0x4ee0x461: RETURNPRIVATE v461arg0 v469 v461arg0
----------------------------------

Begin block 0x4e70x742
prev = {'0x787', '0x742', '0x4de0x742'}, next = {}
----------------------------------
Block 0x4e70x742
0x4ee0x742: RETURNPRIVATE v742arg0 v74a v742arg0
----------------------------------

Begin block 0x4ef
prev = {}, next = {'0x5500x4ef'}
----------------------------------
function 0x4ef(v4efarg0, v4efarg1, v4efarg2)
Block 0x4ef
0x4f0: v4f0 = CALLER 
0x4f1: v4f1(0x0) = CONST 
0x4f5: MSTORE v4f1(0x0) v4f0
0x4f6: v4f6(0x7) = CONST 
0x4f8: v4f8(0x20) = CONST 
0x4fc: MSTORE v4f8(0x20) v4f6(0x7)
0x4fd: v4fd(0x40) = CONST 
0x501: v501 = SHA3 v4f1(0x0) v4fd(0x40)
0x502: v502(0x1) = CONST 
0x504: v504(0xa0) = CONST 
0x506: v506(0x2) = CONST 
0x508: v508(0x10000000000000000000000000000000000000000) = EXP v506(0x2) v504(0xa0)
0x509: v509(0xffffffffffffffffffffffffffffffffffffffff) = SUB v508(0x10000000000000000000000000000000000000000) v502(0x1)
0x50b: v50b = AND v4efarg1 v509(0xffffffffffffffffffffffffffffffffffffffff)
0x50e: MSTORE v4f1(0x0) v50b
0x511: MSTORE v4f8(0x20) v501
0x514: v514 = SHA3 v4f1(0x0) v4fd(0x40)
0x517: SSTORE v514 v4efarg0
0x519: v519 = MLOAD v4fd(0x40)
0x51c: MSTORE v519 v4efarg0
0x51e: v51e = MLOAD v4fd(0x40)
0x525: v525(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0x549: v549 = SUB v519 v51e
0x54a: v54a = ADD v549 v4f8(0x20)
0x54c: LOG3 v51e v54a v525(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) v4f0 v50b
0x54e: v54e(0x1) = CONST 
----------------------------------

Begin block 0x5500x4ef
prev = {'0x4ef'}, next = {}
----------------------------------
Block 0x5500x4ef
0x5550x4ef: RETURNPRIVATE v4efarg2 v54e(0x1)
----------------------------------

Begin block 0x5500x9d5
prev = {'0x9ef'}, next = {}
----------------------------------
Block 0x5500x9d5
0x5550x9d5: RETURNPRIVATE v9d5arg2 v9d8
----------------------------------

Begin block 0x5500xaef
prev = {'0xaef'}, next = {}
----------------------------------
Block 0x5500xaef
0x5550xaef: RETURNPRIVATE vaefarg2 vaf2
----------------------------------

Begin block 0x556
prev = {'0x1e4'}, next = {'0x1ed0x1d8'}
----------------------------------
Block 0x556
0x557: v557(0x0) = CONST 
0x55a: MSTORE v557(0x0) v557(0x0)
0x55b: v55b(0x6) = CONST 
0x55d: v55d(0x20) = CONST 
0x55f: MSTORE v55d(0x20) v55b(0x6)
0x560: v560(0x54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f8) = CONST 
0x581: v581 = SLOAD v560(0x54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f8)
0x582: v582(0x5) = CONST 
0x584: v584 = SLOAD v582(0x5)
0x585: v585 = SUB v584 v581
0x587: JUMP v1e6(0x1ed)
----------------------------------

Begin block 0x588
prev = {'0x20b'}, next = {'0x5ab'}
----------------------------------
Block 0x588
0x589: v589(0x1) = CONST 
0x58b: v58b(0xa0) = CONST 
0x58d: v58d(0x2) = CONST 
0x58f: v58f(0x10000000000000000000000000000000000000000) = EXP v58d(0x2) v58b(0xa0)
0x590: v590(0xffffffffffffffffffffffffffffffffffffffff) = SUB v58f(0x10000000000000000000000000000000000000000) v589(0x1)
0x592: v592 = AND v21c v590(0xffffffffffffffffffffffffffffffffffffffff)
0x593: v593(0x0) = CONST 
0x597: MSTORE v593(0x0) v592
0x598: v598(0x6) = CONST 
0x59a: v59a(0x20) = CONST 
0x59c: MSTORE v59a(0x20) v598(0x6)
0x59d: v59d(0x40) = CONST 
0x5a0: v5a0 = SHA3 v593(0x0) v59d(0x40)
0x5a1: v5a1 = SLOAD v5a0
0x5a2: v5a2(0x5ab) = CONST 
0x5a7: v5a7(0x79a) = CONST 
0x5aa: v5aa_0 = CALLPRIVATE v5a7(0x79a) v224 v5a1 v5a2(0x5ab)
----------------------------------

Begin block 0x5ab
prev = {'0x588'}, next = {'0x5e2'}
----------------------------------
Block 0x5ab
0x5ac: v5ac(0x1) = CONST 
0x5ae: v5ae(0xa0) = CONST 
0x5b0: v5b0(0x2) = CONST 
0x5b2: v5b2(0x10000000000000000000000000000000000000000) = EXP v5b0(0x2) v5ae(0xa0)
0x5b3: v5b3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5b2(0x10000000000000000000000000000000000000000) v5ac(0x1)
0x5b5: v5b5 = AND v21c v5b3(0xffffffffffffffffffffffffffffffffffffffff)
0x5b6: v5b6(0x0) = CONST 
0x5ba: MSTORE v5b6(0x0) v5b5
0x5bb: v5bb(0x6) = CONST 
0x5bd: v5bd(0x20) = CONST 
0x5c1: MSTORE v5bd(0x20) v5bb(0x6)
0x5c2: v5c2(0x40) = CONST 
0x5c6: v5c6 = SHA3 v5b6(0x0) v5c2(0x40)
0x5ca: SSTORE v5c6 v5aa_0
0x5cb: v5cb(0x7) = CONST 
0x5ce: MSTORE v5bd(0x20) v5cb(0x7)
0x5d1: v5d1 = SHA3 v5b6(0x0) v5c2(0x40)
0x5d2: v5d2 = CALLER 
0x5d4: MSTORE v5b6(0x0) v5d2
0x5d6: MSTORE v5bd(0x20) v5d1
0x5d7: v5d7 = SHA3 v5b6(0x0) v5c2(0x40)
0x5d8: v5d8 = SLOAD v5d7
0x5d9: v5d9(0x5e2) = CONST 
0x5de: v5de(0x79a) = CONST 
0x5e1: v5e1_0 = CALLPRIVATE v5de(0x79a) v224 v5d8 v5d9(0x5e2)
----------------------------------

Begin block 0x5e2
prev = {'0x5ab'}, next = {'0x620'}
----------------------------------
Block 0x5e2
0x5e3: v5e3(0x1) = CONST 
0x5e5: v5e5(0xa0) = CONST 
0x5e7: v5e7(0x2) = CONST 
0x5e9: v5e9(0x10000000000000000000000000000000000000000) = EXP v5e7(0x2) v5e5(0xa0)
0x5ea: v5ea(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5e9(0x10000000000000000000000000000000000000000) v5e3(0x1)
0x5ed: v5ed = AND v21c v5ea(0xffffffffffffffffffffffffffffffffffffffff)
0x5ee: v5ee(0x0) = CONST 
0x5f2: MSTORE v5ee(0x0) v5ed
0x5f3: v5f3(0x7) = CONST 
0x5f5: v5f5(0x20) = CONST 
0x5f9: MSTORE v5f5(0x20) v5f3(0x7)
0x5fa: v5fa(0x40) = CONST 
0x5fe: v5fe = SHA3 v5ee(0x0) v5fa(0x40)
0x5ff: v5ff = CALLER 
0x601: MSTORE v5ee(0x0) v5ff
0x603: MSTORE v5f5(0x20) v5fe
0x606: v606 = SHA3 v5ee(0x0) v5fa(0x40)
0x60a: SSTORE v606 v5e1_0
0x60d: v60d = AND v221 v5ea(0xffffffffffffffffffffffffffffffffffffffff)
0x60f: MSTORE v5ee(0x0) v60d
0x610: v610(0x6) = CONST 
0x614: MSTORE v5f5(0x20) v610(0x6)
0x615: v615 = SHA3 v5ee(0x0) v5fa(0x40)
0x616: v616 = SLOAD v615
0x617: v617(0x620) = CONST 
0x61c: v61c(0xaef) = CONST 
0x61f: v61f_0 = CALLPRIVATE v61c(0xaef) v224 v616 v617(0x620)
----------------------------------

Begin block 0x620
prev = {'0x5e2'}, next = {'0x1c40x1ff'}
----------------------------------
Block 0x620
0x621: v621(0x1) = CONST 
0x623: v623(0xa0) = CONST 
0x625: v625(0x2) = CONST 
0x627: v627(0x10000000000000000000000000000000000000000) = EXP v625(0x2) v623(0xa0)
0x628: v628(0xffffffffffffffffffffffffffffffffffffffff) = SUB v627(0x10000000000000000000000000000000000000000) v621(0x1)
0x62b: v62b = AND v221 v628(0xffffffffffffffffffffffffffffffffffffffff)
0x62c: v62c(0x0) = CONST 
0x630: MSTORE v62c(0x0) v62b
0x631: v631(0x6) = CONST 
0x633: v633(0x20) = CONST 
0x637: MSTORE v633(0x20) v631(0x6)
0x638: v638(0x40) = CONST 
0x63d: v63d = SHA3 v62c(0x0) v638(0x40)
0x641: SSTORE v63d v61f_0
0x643: v643 = MLOAD v638(0x40)
0x646: MSTORE v643 v224
0x648: v648 = MLOAD v638(0x40)
0x64d: v64d = AND v21c v628(0xffffffffffffffffffffffffffffffffffffffff)
0x64f: v64f(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x674: v674 = SUB v643 v648
0x675: v675 = ADD v674 v633(0x20)
0x677: LOG3 v648 v675 v64f(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v64d v62b
0x679: v679(0x1) = CONST 
0x680: JUMP v20d(0x1c4)
----------------------------------

Begin block 0x681
prev = {'0x235'}, next = {'0x23e'}
----------------------------------
Block 0x681
0x682: v682(0x4) = CONST 
0x684: v684 = SLOAD v682(0x4)
0x685: v685(0xff) = CONST 
0x687: v687 = AND v685(0xff) v684
0x689: JUMP v237(0x23e)
----------------------------------

Begin block 0x68a
prev = {'0x260'}, next = {'0x1ed0x254'}
----------------------------------
Block 0x68a
0x68b: v68b(0x5) = CONST 
0x68d: v68d = SLOAD v68b(0x5)
0x68f: JUMP v262(0x1ed)
----------------------------------

Begin block 0x690
prev = {'0x275'}, next = {'0x1ed0x269'}
----------------------------------
Block 0x690
0x691: v691(0x1) = CONST 
0x693: v693(0xa0) = CONST 
0x695: v695(0x2) = CONST 
0x697: v697(0x10000000000000000000000000000000000000000) = EXP v695(0x2) v693(0xa0)
0x698: v698(0xffffffffffffffffffffffffffffffffffffffff) = SUB v697(0x10000000000000000000000000000000000000000) v691(0x1)
0x699: v699 = AND v698(0xffffffffffffffffffffffffffffffffffffffff) v285
0x69a: v69a(0x0) = CONST 
0x69e: MSTORE v69a(0x0) v699
0x69f: v69f(0x6) = CONST 
0x6a1: v6a1(0x20) = CONST 
0x6a3: MSTORE v6a1(0x20) v69f(0x6)
0x6a4: v6a4(0x40) = CONST 
0x6a7: v6a7 = SHA3 v69a(0x0) v6a4(0x40)
0x6a8: v6a8 = SLOAD v6a7
0x6aa: JUMP v277(0x1ed)
----------------------------------

Begin block 0x6ab
prev = {'0x296'}, next = {'0x6c2', '0x6be'}
----------------------------------
Block 0x6ab
0x6ac: v6ac(0x1) = CONST 
0x6ae: v6ae = SLOAD v6ac(0x1)
0x6af: v6af(0x1) = CONST 
0x6b1: v6b1(0xa0) = CONST 
0x6b3: v6b3(0x2) = CONST 
0x6b5: v6b5(0x10000000000000000000000000000000000000000) = EXP v6b3(0x2) v6b1(0xa0)
0x6b6: v6b6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6b5(0x10000000000000000000000000000000000000000) v6af(0x1)
0x6b7: v6b7 = AND v6b6(0xffffffffffffffffffffffffffffffffffffffff) v6ae
0x6b8: v6b8 = CALLER 
0x6b9: v6b9 = EQ v6b8 v6b7
0x6ba: v6ba(0x6c2) = CONST 
0x6bd: JUMPI v6ba(0x6c2) v6b9
----------------------------------

Begin block 0x6be
prev = {'0x6ab'}, next = {}
----------------------------------
Block 0x6be
0x6be: v6be(0x0) = CONST 
0x6c1: REVERT v6be(0x0) v6be(0x0)
----------------------------------

Begin block 0x6c2
prev = {'0x6ab'}, next = {'0x29f0x28a'}
----------------------------------
Block 0x6c2
0x6c3: v6c3(0x1) = CONST 
0x6c5: v6c5 = SLOAD v6c3(0x1)
0x6c6: v6c6(0x0) = CONST 
0x6c9: v6c9 = SLOAD v6c6(0x0)
0x6ca: v6ca(0x40) = CONST 
0x6cc: v6cc = MLOAD v6ca(0x40)
0x6cd: v6cd(0x1) = CONST 
0x6cf: v6cf(0xa0) = CONST 
0x6d1: v6d1(0x2) = CONST 
0x6d3: v6d3(0x10000000000000000000000000000000000000000) = EXP v6d1(0x2) v6cf(0xa0)
0x6d4: v6d4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6d3(0x10000000000000000000000000000000000000000) v6cd(0x1)
0x6d7: v6d7 = AND v6d4(0xffffffffffffffffffffffffffffffffffffffff) v6c5
0x6db: v6db = AND v6c9 v6d4(0xffffffffffffffffffffffffffffffffffffffff)
0x6dd: v6dd(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x6ff: LOG3 v6cc v6c6(0x0) v6dd(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v6db v6d7
0x700: v700(0x1) = CONST 
0x703: v703 = SLOAD v700(0x1)
0x704: v704(0x0) = CONST 
0x707: v707 = SLOAD v704(0x0)
0x708: v708(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x71d: v71d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v708(0xffffffffffffffffffffffffffffffffffffffff)
0x720: v720 = AND v71d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v707
0x721: v721(0x1) = CONST 
0x723: v723(0xa0) = CONST 
0x725: v725(0x2) = CONST 
0x727: v727(0x10000000000000000000000000000000000000000) = EXP v725(0x2) v723(0xa0)
0x728: v728(0xffffffffffffffffffffffffffffffffffffffff) = SUB v727(0x10000000000000000000000000000000000000000) v721(0x1)
0x72a: v72a = AND v703 v728(0xffffffffffffffffffffffffffffffffffffffff)
0x72b: v72b = OR v72a v720
0x72e: SSTORE v704(0x0) v72b
0x72f: v72f = AND v71d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v703
0x731: SSTORE v700(0x1) v72f
0x732: JUMP v298(0x29f)
----------------------------------

Begin block 0x733
prev = {'0x2ad'}, next = {'0x2b60x2a1'}
----------------------------------
Block 0x733
0x734: v734(0x0) = CONST 
0x736: v736 = SLOAD v734(0x0)
0x737: v737(0x1) = CONST 
0x739: v739(0xa0) = CONST 
0x73b: v73b(0x2) = CONST 
0x73d: v73d(0x10000000000000000000000000000000000000000) = EXP v73b(0x2) v739(0xa0)
0x73e: v73e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v73d(0x10000000000000000000000000000000000000000) v737(0x1)
0x73f: v73f = AND v73e(0xffffffffffffffffffffffffffffffffffffffff) v736
0x741: JUMP v2af(0x2b6)
----------------------------------

Begin block 0x742
prev = {}, next = {'0x4e70x742', '0x77f'}
----------------------------------
function 0x742(v742arg0)
Block 0x742
0x743: v743(0x2) = CONST 
0x746: v746 = SLOAD v743(0x2)
0x747: v747(0x40) = CONST 
0x74a: v74a = MLOAD v747(0x40)
0x74b: v74b(0x20) = CONST 
0x74d: v74d(0x1) = CONST 
0x750: v750 = AND v746 v74d(0x1)
0x751: v751 = ISZERO v750
0x752: v752(0x100) = CONST 
0x755: v755 = MUL v752(0x100) v751
0x756: v756(0x0) = CONST 
0x758: v758(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v756(0x0)
0x759: v759 = ADD v758(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v755
0x75c: v75c = AND v746 v759
0x75f: v75f = DIV v75c v743(0x2)
0x760: v760(0x1f) = CONST 
0x763: v763 = ADD v75f v760(0x1f)
0x766: v766 = DIV v763 v74b(0x20)
0x768: v768 = MUL v74b(0x20) v766
0x76a: v76a = ADD v74a v768
0x76c: v76c = ADD v74b(0x20) v76a
0x76f: MSTORE v747(0x40) v76c
0x772: MSTORE v74a v75f
0x776: v776 = ADD v74a v74b(0x20)
0x77a: v77a = ISZERO v75f
0x77b: v77b(0x4e7) = CONST 
0x77e: JUMPI v77b(0x4e7) v77a
----------------------------------

Begin block 0x77f
prev = {'0x742'}, next = {'0x4bc0x742', '0x787'}
----------------------------------
Block 0x77f
0x780: v780(0x1f) = CONST 
0x782: v782 = LT v780(0x1f) v75f
0x783: v783(0x4bc) = CONST 
0x786: JUMPI v783(0x4bc) v782
----------------------------------

Begin block 0x787
prev = {'0x77f'}, next = {'0x4e70x742'}
----------------------------------
Block 0x787
0x787: v787(0x100) = CONST 
0x78c: v78c = SLOAD v743(0x2)
0x78d: v78d = DIV v78c v787(0x100)
0x78e: v78e = MUL v78d v787(0x100)
0x790: MSTORE v776 v78e
0x792: v792(0x20) = CONST 
0x794: v794 = ADD v792(0x20) v776
0x796: v796(0x4e7) = CONST 
0x799: JUMP v796(0x4e7)
----------------------------------

Begin block 0x79a
prev = {}, next = {'0x7a5', '0x7a9'}
----------------------------------
function 0x79a(v79aarg0, v79aarg1, v79aarg2)
Block 0x79a
0x79b: v79b(0x0) = CONST 
0x79f: v79f = GT v79aarg0 v79aarg1
0x7a0: v7a0 = ISZERO v79f
0x7a1: v7a1(0x7a9) = CONST 
0x7a4: JUMPI v7a1(0x7a9) v7a0
----------------------------------

Begin block 0x7a5
prev = {'0x79a'}, next = {}
----------------------------------
Block 0x7a5
0x7a5: v7a5(0x0) = CONST 
0x7a8: REVERT v7a5(0x0) v7a5(0x0)
----------------------------------

Begin block 0x7a9
prev = {'0x79a'}, next = {}
----------------------------------
Block 0x7a9
0x7ac: v7ac = SUB v79aarg1 v79aarg0
0x7ae: RETURNPRIVATE v79aarg2 v7ac
----------------------------------

Begin block 0x7af
prev = {'0x30e'}, next = {'0x7c9'}
----------------------------------
Block 0x7af
0x7b0: v7b0 = CALLER 
0x7b1: v7b1(0x0) = CONST 
0x7b5: MSTORE v7b1(0x0) v7b0
0x7b6: v7b6(0x6) = CONST 
0x7b8: v7b8(0x20) = CONST 
0x7ba: MSTORE v7b8(0x20) v7b6(0x6)
0x7bb: v7bb(0x40) = CONST 
0x7be: v7be = SHA3 v7b1(0x0) v7bb(0x40)
0x7bf: v7bf = SLOAD v7be
0x7c0: v7c0(0x7c9) = CONST 
0x7c5: v7c5(0x79a) = CONST 
0x7c8: v7c8_0 = CALLPRIVATE v7c5(0x79a) v321 v7bf v7c0(0x7c9)
----------------------------------

Begin block 0x7c9
prev = {'0x7af'}, next = {'0x7f5'}
----------------------------------
Block 0x7c9
0x7ca: v7ca = CALLER 
0x7cb: v7cb(0x0) = CONST 
0x7cf: MSTORE v7cb(0x0) v7ca
0x7d0: v7d0(0x6) = CONST 
0x7d2: v7d2(0x20) = CONST 
0x7d4: MSTORE v7d2(0x20) v7d0(0x6)
0x7d5: v7d5(0x40) = CONST 
0x7d9: v7d9 = SHA3 v7cb(0x0) v7d5(0x40)
0x7dd: SSTORE v7d9 v7c8_0
0x7de: v7de(0x1) = CONST 
0x7e0: v7e0(0xa0) = CONST 
0x7e2: v7e2(0x2) = CONST 
0x7e4: v7e4(0x10000000000000000000000000000000000000000) = EXP v7e2(0x2) v7e0(0xa0)
0x7e5: v7e5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e4(0x10000000000000000000000000000000000000000) v7de(0x1)
0x7e7: v7e7 = AND v31e v7e5(0xffffffffffffffffffffffffffffffffffffffff)
0x7e9: MSTORE v7cb(0x0) v7e7
0x7ea: v7ea = SHA3 v7cb(0x0) v7d5(0x40)
0x7eb: v7eb = SLOAD v7ea
0x7ec: v7ec(0x7f5) = CONST 
0x7f1: v7f1(0xaef) = CONST 
0x7f4: v7f4_0 = CALLPRIVATE v7f1(0xaef) v321 v7eb v7ec(0x7f5)
----------------------------------

Begin block 0x7f5
prev = {'0x7c9'}, next = {'0x1c40x302'}
----------------------------------
Block 0x7f5
0x7f6: v7f6(0x1) = CONST 
0x7f8: v7f8(0xa0) = CONST 
0x7fa: v7fa(0x2) = CONST 
0x7fc: v7fc(0x10000000000000000000000000000000000000000) = EXP v7fa(0x2) v7f8(0xa0)
0x7fd: v7fd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7fc(0x10000000000000000000000000000000000000000) v7f6(0x1)
0x7ff: v7ff = AND v31e v7fd(0xffffffffffffffffffffffffffffffffffffffff)
0x800: v800(0x0) = CONST 
0x804: MSTORE v800(0x0) v7ff
0x805: v805(0x6) = CONST 
0x807: v807(0x20) = CONST 
0x80b: MSTORE v807(0x20) v805(0x6)
0x80c: v80c(0x40) = CONST 
0x811: v811 = SHA3 v800(0x0) v80c(0x40)
0x815: SSTORE v811 v7f4_0
0x817: v817 = MLOAD v80c(0x40)
0x81a: MSTORE v817 v321
0x81c: v81c = MLOAD v80c(0x40)
0x81f: v81f = CALLER 
0x821: v821(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x845: v845 = SUB v817 v81c
0x848: v848 = ADD v807(0x20) v845
0x84a: LOG3 v81c v848 v821(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v81f v7ff
0x84c: v84c(0x1) = CONST 
0x852: JUMP v310(0x1c4)
----------------------------------

Begin block 0x853
prev = {'0x332'}, next = {'0x861', '0x85d'}
----------------------------------
Block 0x853
0x854: v854(0x0) = CONST 
0x858: v858 = GT v33c v854(0x0)
0x859: v859(0x861) = CONST 
0x85c: JUMPI v859(0x861) v858
----------------------------------

Begin block 0x85d
prev = {'0x853'}, next = {}
----------------------------------
Block 0x85d
0x85d: v85d(0x0) = CONST 
0x860: REVERT v85d(0x0) v85d(0x0)
----------------------------------

Begin block 0x861
prev = {'0x853'}, next = {'0x86c', '0x86b'}
----------------------------------
Block 0x861
0x865: v865 = ISZERO v33c
0x866: v866 = ISZERO v865
0x867: v867(0x86c) = CONST 
0x86a: JUMPI v867(0x86c) v866
----------------------------------

Begin block 0x86b
prev = {'0x861'}, next = {}
----------------------------------
Block 0x86b
0x86b: THROW 
----------------------------------

Begin block 0x86c
prev = {'0x861'}, next = {'0x1ed0x326'}
----------------------------------
Block 0x86c
0x86d: v86d = DIV v339 v33c
0x873: JUMP v334(0x1ed)
----------------------------------

Begin block 0x874
prev = {'0x34d'}, next = {'0x94c'}
----------------------------------
Block 0x874
0x875: v875 = CALLER 
0x876: v876(0x0) = CONST 
0x87a: MSTORE v876(0x0) v875
0x87b: v87b(0x7) = CONST 
0x87d: v87d(0x20) = CONST 
0x881: MSTORE v87d(0x20) v87b(0x7)
0x882: v882(0x40) = CONST 
0x886: v886 = SHA3 v876(0x0) v882(0x40)
0x887: v887(0x1) = CONST 
0x889: v889(0xa0) = CONST 
0x88b: v88b(0x2) = CONST 
0x88d: v88d(0x10000000000000000000000000000000000000000) = EXP v88b(0x2) v889(0xa0)
0x88e: v88e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v88d(0x10000000000000000000000000000000000000000) v887(0x1)
0x890: v890 = AND v37f v88e(0xffffffffffffffffffffffffffffffffffffffff)
0x893: MSTORE v876(0x0) v890
0x896: MSTORE v87d(0x20) v886
0x899: v899 = SHA3 v876(0x0) v882(0x40)
0x89c: SSTORE v899 v384
0x89e: v89e = MLOAD v882(0x40)
0x8a1: MSTORE v89e v384
0x8a3: v8a3 = MLOAD v882(0x40)
0x8aa: v8aa(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0x8ce: v8ce = SUB v89e v8a3
0x8cf: v8cf = ADD v8ce v87d(0x20)
0x8d1: LOG3 v8a3 v8cf v8aa(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) v875 v890
0x8d2: v8d2(0x40) = CONST 
0x8d4: v8d4 = MLOAD v8d2(0x40)
0x8d5: v8d5(0x8f4ffcb100000000000000000000000000000000000000000000000000000000) = CONST 
0x8f7: MSTORE v8d4 v8d5(0x8f4ffcb100000000000000000000000000000000000000000000000000000000)
0x8f8: v8f8 = CALLER 
0x8f9: v8f9(0x4) = CONST 
0x8fc: v8fc = ADD v8d4 v8f9(0x4)
0x8ff: MSTORE v8fc v8f8
0x900: v900(0x24) = CONST 
0x903: v903 = ADD v8d4 v900(0x24)
0x906: MSTORE v903 v384
0x907: v907 = ADDRESS 
0x908: v908(0x44) = CONST 
0x90b: v90b = ADD v8d4 v908(0x44)
0x90e: MSTORE v90b v907
0x90f: v90f(0x80) = CONST 
0x911: v911(0x64) = CONST 
0x914: v914 = ADD v8d4 v911(0x64)
0x917: MSTORE v914 v90f(0x80)
0x919: v919 = MLOAD v352
0x91a: v91a(0x84) = CONST 
0x91d: v91d = ADD v8d4 v91a(0x84)
0x91e: MSTORE v91d v919
0x920: v920 = MLOAD v352
0x921: v921(0x1) = CONST 
0x923: v923(0xa0) = CONST 
0x925: v925(0x2) = CONST 
0x927: v927(0x10000000000000000000000000000000000000000) = EXP v925(0x2) v923(0xa0)
0x928: v928(0xffffffffffffffffffffffffffffffffffffffff) = SUB v927(0x10000000000000000000000000000000000000000) v921(0x1)
0x92a: v92a = AND v37f v928(0xffffffffffffffffffffffffffffffffffffffff)
0x92c: v92c(0x8f4ffcb1) = CONST 
0x93c: v93c(0xa4) = CONST 
0x940: v940 = ADD v8d4 v93c(0xa4)
0x942: v942(0x20) = CONST 
0x945: v945 = ADD v352 v942(0x20)
0x94a: v94a(0x0) = CONST 
----------------------------------

Begin block 0x94c
prev = {'0x874', '0x955'}, next = {'0x964', '0x955'}
----------------------------------
Block 0x94c
0x94c_0x0: v94c_0 = PHI v94a(0x0) v95f
0x94f: v94f = LT v94c_0 v920
0x950: v950 = ISZERO v94f
0x951: v951(0x964) = CONST 
0x954: JUMPI v951(0x964) v950
----------------------------------

Begin block 0x955
prev = {'0x94c'}, next = {'0x94c'}
----------------------------------
Block 0x955
0x955_0x0: v955_0 = PHI v94a(0x0) v95f
0x957: v957 = ADD v955_0 v945
0x958: v958 = MLOAD v957
0x95b: v95b = ADD v955_0 v940
0x95c: MSTORE v95b v958
0x95d: v95d(0x20) = CONST 
0x95f: v95f = ADD v95d(0x20) v955_0
0x960: v960(0x94c) = CONST 
0x963: JUMP v960(0x94c)
----------------------------------

Begin block 0x964
prev = {'0x94c'}, next = {'0x978', '0x991'}
----------------------------------
Block 0x964
0x96d: v96d = ADD v920 v940
0x96f: v96f(0x1f) = CONST 
0x971: v971 = AND v96f(0x1f) v920
0x973: v973 = ISZERO v971
0x974: v974(0x991) = CONST 
0x977: JUMPI v974(0x991) v973
----------------------------------

Begin block 0x978
prev = {'0x964'}, next = {'0x991'}
----------------------------------
Block 0x978
0x97a: v97a = SUB v96d v971
0x97c: v97c = MLOAD v97a
0x97d: v97d(0x1) = CONST 
0x980: v980(0x20) = CONST 
0x982: v982 = SUB v980(0x20) v971
0x983: v983(0x100) = CONST 
0x986: v986 = EXP v983(0x100) v982
0x987: v987 = SUB v986 v97d(0x1)
0x988: v988 = NOT v987
0x989: v989 = AND v988 v97c
0x98b: MSTORE v97a v989
0x98c: v98c(0x20) = CONST 
0x98e: v98e = ADD v98c(0x20) v97a
----------------------------------

Begin block 0x991
prev = {'0x978', '0x964'}, next = {'0x9af', '0x9b3'}
----------------------------------
Block 0x991
0x991_0x1: v991_1 = PHI v96d v98e
0x99a: v99a(0x0) = CONST 
0x99c: v99c(0x40) = CONST 
0x99e: v99e = MLOAD v99c(0x40)
0x9a1: v9a1 = SUB v991_1 v99e
0x9a3: v9a3(0x0) = CONST 
0x9a7: v9a7 = EXTCODESIZE v92a
0x9a8: v9a8 = ISZERO v9a7
0x9aa: v9aa = ISZERO v9a8
0x9ab: v9ab(0x9b3) = CONST 
0x9ae: JUMPI v9ab(0x9b3) v9aa
----------------------------------

Begin block 0x9af
prev = {'0x991'}, next = {}
----------------------------------
Block 0x9af
0x9af: v9af(0x0) = CONST 
0x9b2: REVERT v9af(0x0) v9af(0x0)
----------------------------------

Begin block 0x9b3
prev = {'0x991'}, next = {'0x9be', '0x9c7'}
----------------------------------
Block 0x9b3
0x9b5: v9b5 = GAS 
0x9b6: v9b6 = CALL v9b5 v92a v9a3(0x0) v99e v9a1 v99e v99a(0x0)
0x9b7: v9b7 = ISZERO v9b6
0x9b9: v9b9 = ISZERO v9b7
0x9ba: v9ba(0x9c7) = CONST 
0x9bd: JUMPI v9ba(0x9c7) v9b9
----------------------------------

Begin block 0x9be
prev = {'0x9b3'}, next = {}
----------------------------------
Block 0x9be
0x9be: v9be = RETURNDATASIZE 
0x9bf: v9bf(0x0) = CONST 
0x9c2: RETURNDATACOPY v9bf(0x0) v9bf(0x0) v9be
0x9c3: v9c3 = RETURNDATASIZE 
0x9c4: v9c4(0x0) = CONST 
0x9c6: REVERT v9c4(0x0) v9c3
----------------------------------

Begin block 0x9c7
prev = {'0x9b3'}, next = {'0x1c40x341'}
----------------------------------
Block 0x9c7
0x9c9: v9c9(0x1) = CONST 
0x9d4: JUMP v371(0x1c4)
----------------------------------

Begin block 0x9d5
prev = {}, next = {'0x9e0', '0x9ef'}
----------------------------------
function 0x9d5(v9d5arg0, v9d5arg1, v9d5arg2)
Block 0x9d5
0x9d8: v9d8 = MUL v9d5arg0 v9d5arg1
0x9da: v9da = ISZERO v9d5arg1
0x9dc: v9dc(0x9ef) = CONST 
0x9df: JUMPI v9dc(0x9ef) v9da
----------------------------------

Begin block 0x9e0
prev = {'0x9d5'}, next = {'0x9ec', '0x9eb'}
----------------------------------
Block 0x9e0
0x9e5: v9e5 = ISZERO v9d5arg1
0x9e6: v9e6 = ISZERO v9e5
0x9e7: v9e7(0x9ec) = CONST 
0x9ea: JUMPI v9e7(0x9ec) v9e6
----------------------------------

Begin block 0x9eb
prev = {'0x9e0'}, next = {}
----------------------------------
Block 0x9eb
0x9eb: THROW 
----------------------------------

Begin block 0x9ec
prev = {'0x9e0'}, next = {'0x9ef'}
----------------------------------
Block 0x9ec
0x9ed: v9ed = DIV v9d8 v9d5arg1
0x9ee: v9ee = EQ v9ed v9d5arg0
----------------------------------

Begin block 0x9ef
prev = {'0x9ec', '0x9d5'}, next = {'0x9f6', '0x5500x9d5'}
----------------------------------
Block 0x9ef
0x9ef_0x0: v9ef_0 = PHI v9da v9ee
0x9f0: v9f0 = ISZERO v9ef_0
0x9f1: v9f1 = ISZERO v9f0
0x9f2: v9f2(0x550) = CONST 
0x9f5: JUMPI v9f2(0x550) v9f1
----------------------------------

Begin block 0x9f6
prev = {'0x9ef'}, next = {}
----------------------------------
Block 0x9f6
0x9f6: v9f6(0x0) = CONST 
0x9f9: REVERT v9f6(0x0) v9f6(0x0)
----------------------------------

Begin block 0x9fa
prev = {'0x3d1'}, next = {'0x2b60x3c5'}
----------------------------------
Block 0x9fa
0x9fb: v9fb(0x1) = CONST 
0x9fd: v9fd = SLOAD v9fb(0x1)
0x9fe: v9fe(0x1) = CONST 
0xa00: va00(0xa0) = CONST 
0xa02: va02(0x2) = CONST 
0xa04: va04(0x10000000000000000000000000000000000000000) = EXP va02(0x2) va00(0xa0)
0xa05: va05(0xffffffffffffffffffffffffffffffffffffffff) = SUB va04(0x10000000000000000000000000000000000000000) v9fe(0x1)
0xa06: va06 = AND va05(0xffffffffffffffffffffffffffffffffffffffff) v9fd
0xa08: JUMP v3d3(0x2b6)
----------------------------------

Begin block 0xa09
prev = {'0x3e6'}, next = {'0xa1d', '0xa21'}
----------------------------------
Block 0xa09
0xa0a: va0a(0x0) = CONST 
0xa0d: va0d = SLOAD va0a(0x0)
0xa0e: va0e(0x1) = CONST 
0xa10: va10(0xa0) = CONST 
0xa12: va12(0x2) = CONST 
0xa14: va14(0x10000000000000000000000000000000000000000) = EXP va12(0x2) va10(0xa0)
0xa15: va15(0xffffffffffffffffffffffffffffffffffffffff) = SUB va14(0x10000000000000000000000000000000000000000) va0e(0x1)
0xa16: va16 = AND va15(0xffffffffffffffffffffffffffffffffffffffff) va0d
0xa17: va17 = CALLER 
0xa18: va18 = EQ va17 va16
0xa19: va19(0xa21) = CONST 
0xa1c: JUMPI va19(0xa21) va18
----------------------------------

Begin block 0xa1d
prev = {'0xa09'}, next = {}
----------------------------------
Block 0xa1d
0xa1d: va1d(0x0) = CONST 
0xa20: REVERT va1d(0x0) va1d(0x0)
----------------------------------

Begin block 0xa21
prev = {'0xa09'}, next = {'0xa91', '0xa8d'}
----------------------------------
Block 0xa21
0xa22: va22(0x0) = CONST 
0xa25: va25 = SLOAD va22(0x0)
0xa26: va26(0x40) = CONST 
0xa29: va29 = MLOAD va26(0x40)
0xa2a: va2a(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = CONST 
0xa4c: MSTORE va29 va2a(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0xa4d: va4d(0x1) = CONST 
0xa4f: va4f(0xa0) = CONST 
0xa51: va51(0x2) = CONST 
0xa53: va53(0x10000000000000000000000000000000000000000) = EXP va51(0x2) va4f(0xa0)
0xa54: va54(0xffffffffffffffffffffffffffffffffffffffff) = SUB va53(0x10000000000000000000000000000000000000000) va4d(0x1)
0xa57: va57 = AND va54(0xffffffffffffffffffffffffffffffffffffffff) va25
0xa58: va58(0x4) = CONST 
0xa5b: va5b = ADD va29 va58(0x4)
0xa5c: MSTORE va5b va57
0xa5d: va5d(0x24) = CONST 
0xa60: va60 = ADD va29 va5d(0x24)
0xa63: MSTORE va60 v3f9
0xa65: va65 = MLOAD va26(0x40)
0xa68: va68 = AND v3f6 va54(0xffffffffffffffffffffffffffffffffffffffff)
0xa6a: va6a(0xa9059cbb) = CONST 
0xa70: va70(0x44) = CONST 
0xa74: va74 = ADD va29 va70(0x44)
0xa76: va76(0x20) = CONST 
0xa7c: va7c = SUB va29 va65
0xa7f: va7f = ADD va70(0x44) va7c
0xa85: va85 = EXTCODESIZE va68
0xa86: va86 = ISZERO va85
0xa88: va88 = ISZERO va86
0xa89: va89(0xa91) = CONST 
0xa8c: JUMPI va89(0xa91) va88
----------------------------------

Begin block 0xa8d
prev = {'0xa21'}, next = {}
----------------------------------
Block 0xa8d
0xa8d: va8d(0x0) = CONST 
0xa90: REVERT va8d(0x0) va8d(0x0)
----------------------------------

Begin block 0xa91
prev = {'0xa21'}, next = {'0xaa5', '0xa9c'}
----------------------------------
Block 0xa91
0xa93: va93 = GAS 
0xa94: va94 = CALL va93 va68 va22(0x0) va65 va7f va65 va76(0x20)
0xa95: va95 = ISZERO va94
0xa97: va97 = ISZERO va95
0xa98: va98(0xaa5) = CONST 
0xa9b: JUMPI va98(0xaa5) va97
----------------------------------

Begin block 0xa9c
prev = {'0xa91'}, next = {}
----------------------------------
Block 0xa9c
0xa9c: va9c = RETURNDATASIZE 
0xa9d: va9d(0x0) = CONST 
0xaa0: RETURNDATACOPY va9d(0x0) va9d(0x0) va9c
0xaa1: vaa1 = RETURNDATASIZE 
0xaa2: vaa2(0x0) = CONST 
0xaa4: REVERT vaa2(0x0) vaa1
----------------------------------

Begin block 0xaa5
prev = {'0xa91'}, next = {'0xab7', '0xabb'}
----------------------------------
Block 0xaa5
0xaaa: vaaa(0x40) = CONST 
0xaac: vaac = MLOAD vaaa(0x40)
0xaad: vaad = RETURNDATASIZE 
0xaae: vaae(0x20) = CONST 
0xab1: vab1 = LT vaad vaae(0x20)
0xab2: vab2 = ISZERO vab1
0xab3: vab3(0xabb) = CONST 
0xab6: JUMPI vab3(0xabb) vab2
----------------------------------

Begin block 0xab7
prev = {'0xaa5'}, next = {}
----------------------------------
Block 0xab7
0xab7: vab7(0x0) = CONST 
0xaba: REVERT vab7(0x0) vab7(0x0)
----------------------------------

Begin block 0xabb
prev = {'0xaa5'}, next = {'0x1c40x3da'}
----------------------------------
Block 0xabb
0xabd: vabd = MLOAD vaac
0xac3: JUMP v3e8(0x1c4)
----------------------------------

Begin block 0xac4
prev = {'0x40a'}, next = {'0x1ed0x3fe'}
----------------------------------
Block 0xac4
0xac5: vac5(0x1) = CONST 
0xac7: vac7(0xa0) = CONST 
0xac9: vac9(0x2) = CONST 
0xacb: vacb(0x10000000000000000000000000000000000000000) = EXP vac9(0x2) vac7(0xa0)
0xacc: vacc(0xffffffffffffffffffffffffffffffffffffffff) = SUB vacb(0x10000000000000000000000000000000000000000) vac5(0x1)
0xacf: vacf = AND vacc(0xffffffffffffffffffffffffffffffffffffffff) v41b
0xad0: vad0(0x0) = CONST 
0xad4: MSTORE vad0(0x0) vacf
0xad5: vad5(0x7) = CONST 
0xad7: vad7(0x20) = CONST 
0xadb: MSTORE vad7(0x20) vad5(0x7)
0xadc: vadc(0x40) = CONST 
0xae0: vae0 = SHA3 vad0(0x0) vadc(0x40)
0xae4: vae4 = AND vacc(0xffffffffffffffffffffffffffffffffffffffff) v420
0xae6: MSTORE vad0(0x0) vae4
0xaea: MSTORE vad7(0x20) vae0
0xaeb: vaeb = SHA3 vad0(0x0) vadc(0x40)
0xaec: vaec = SLOAD vaeb
0xaee: JUMP v40c(0x1ed)
----------------------------------

Begin block 0xaef
prev = {}, next = {'0x5500xaef', '0xafb'}
----------------------------------
function 0xaef(vaefarg0, vaefarg1, vaefarg2)
Block 0xaef
0xaf2: vaf2 = ADD vaefarg0 vaefarg1
0xaf5: vaf5 = LT vaf2 vaefarg1
0xaf6: vaf6 = ISZERO vaf5
0xaf7: vaf7(0x550) = CONST 
0xafa: JUMPI vaf7(0x550) vaf6
----------------------------------

Begin block 0xafb
prev = {'0xaef'}, next = {}
----------------------------------
Block 0xafb
0xafb: vafb(0x0) = CONST 
0xafe: REVERT vafb(0x0) vafb(0x0)
----------------------------------

Begin block 0xaff
prev = {'0x44c'}, next = {'0xb16', '0xb12'}
----------------------------------
Block 0xaff
0xb00: vb00(0x0) = CONST 
0xb02: vb02 = SLOAD vb00(0x0)
0xb03: vb03(0x1) = CONST 
0xb05: vb05(0xa0) = CONST 
0xb07: vb07(0x2) = CONST 
0xb09: vb09(0x10000000000000000000000000000000000000000) = EXP vb07(0x2) vb05(0xa0)
0xb0a: vb0a(0xffffffffffffffffffffffffffffffffffffffff) = SUB vb09(0x10000000000000000000000000000000000000000) vb03(0x1)
0xb0b: vb0b = AND vb0a(0xffffffffffffffffffffffffffffffffffffffff) vb02
0xb0c: vb0c = CALLER 
0xb0d: vb0d = EQ vb0c vb0b
0xb0e: vb0e(0xb16) = CONST 
0xb11: JUMPI vb0e(0xb16) vb0d
----------------------------------

Begin block 0xb12
prev = {'0xaff'}, next = {}
----------------------------------
Block 0xb12
0xb12: vb12(0x0) = CONST 
0xb15: REVERT vb12(0x0) vb12(0x0)
----------------------------------

Begin block 0xb16
prev = {'0xaff'}, next = {'0x29f0x440'}
----------------------------------
Block 0xb16
0xb17: vb17(0x1) = CONST 
0xb1a: vb1a = SLOAD vb17(0x1)
0xb1b: vb1b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xb30: vb30(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vb1b(0xffffffffffffffffffffffffffffffffffffffff)
0xb31: vb31 = AND vb30(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) vb1a
0xb32: vb32(0x1) = CONST 
0xb34: vb34(0xa0) = CONST 
0xb36: vb36(0x2) = CONST 
0xb38: vb38(0x10000000000000000000000000000000000000000) = EXP vb36(0x2) vb34(0xa0)
0xb39: vb39(0xffffffffffffffffffffffffffffffffffffffff) = SUB vb38(0x10000000000000000000000000000000000000000) vb32(0x1)
0xb3d: vb3d = AND vb39(0xffffffffffffffffffffffffffffffffffffffff) v45c
0xb41: vb41 = OR vb3d vb31
0xb43: SSTORE vb17(0x1) vb41
0xb44: JUMP v44e(0x29f)
----------------------------------

Begin block 0xb93
prev = {'0x106', '0x0'}, next = {}
----------------------------------
Block 0xb93
0xb94: vb94(0x111) = CONST 
0xb95: CALLPRIVATE vb94(0x111)
----------------------------------

Begin block 0xb96
prev = {'0xd'}, next = {}
----------------------------------
Block 0xb96
0xb97: vb97(0x116) = CONST 
0xb98: CALLPRIVATE vb97(0x116)
----------------------------------

Begin block 0xb99
prev = {'0x40'}, next = {}
----------------------------------
Block 0xb99
0xb9a: vb9a(0x1a0) = CONST 
0xb9b: CALLPRIVATE vb9a(0x1a0)
----------------------------------

Begin block 0xb9c
prev = {'0x4b'}, next = {}
----------------------------------
Block 0xb9c
0xb9d: vb9d(0x1d8) = CONST 
0xb9e: CALLPRIVATE vb9d(0x1d8)
----------------------------------

Begin block 0xb9f
prev = {'0x56'}, next = {}
----------------------------------
Block 0xb9f
0xba0: vba0(0x1ff) = CONST 
0xba1: CALLPRIVATE vba0(0x1ff)
----------------------------------

Begin block 0xba2
prev = {'0x61'}, next = {}
----------------------------------
Block 0xba2
0xba3: vba3(0x229) = CONST 
0xba4: CALLPRIVATE vba3(0x229)
----------------------------------

Begin block 0xba5
prev = {'0x6c'}, next = {}
----------------------------------
Block 0xba5
0xba6: vba6(0x254) = CONST 
0xba7: CALLPRIVATE vba6(0x254)
----------------------------------

Begin block 0xba8
prev = {'0x77'}, next = {}
----------------------------------
Block 0xba8
0xba9: vba9(0x269) = CONST 
0xbaa: CALLPRIVATE vba9(0x269)
----------------------------------

Begin block 0xbab
prev = {'0x82'}, next = {}
----------------------------------
Block 0xbab
0xbac: vbac(0x28a) = CONST 
0xbad: CALLPRIVATE vbac(0x28a)
----------------------------------

Begin block 0xbae
prev = {'0x8d'}, next = {}
----------------------------------
Block 0xbae
0xbaf: vbaf(0x2a1) = CONST 
0xbb0: CALLPRIVATE vbaf(0x2a1)
----------------------------------

Begin block 0xbb1
prev = {'0x98'}, next = {}
----------------------------------
Block 0xbb1
0xbb2: vbb2(0x2d2) = CONST 
0xbb3: CALLPRIVATE vbb2(0x2d2)
----------------------------------

Begin block 0xbb4
prev = {'0xa3'}, next = {}
----------------------------------
Block 0xbb4
0xbb5: vbb5(0x2e7) = CONST 
0xbb6: CALLPRIVATE vbb5(0x2e7)
----------------------------------

Begin block 0xbb7
prev = {'0xae'}, next = {}
----------------------------------
Block 0xbb7
0xbb8: vbb8(0x302) = CONST 
0xbb9: CALLPRIVATE vbb8(0x302)
----------------------------------

Begin block 0xbba
prev = {'0xb9'}, next = {}
----------------------------------
Block 0xbba
0xbbb: vbbb(0x326) = CONST 
0xbbc: CALLPRIVATE vbbb(0x326)
----------------------------------

Begin block 0xbbd
prev = {'0xc4'}, next = {}
----------------------------------
Block 0xbbd
0xbbe: vbbe(0x341) = CONST 
0xbbf: CALLPRIVATE vbbe(0x341)
----------------------------------

Begin block 0xbc0
prev = {'0xcf'}, next = {}
----------------------------------
Block 0xbc0
0xbc1: vbc1(0x3aa) = CONST 
0xbc2: CALLPRIVATE vbc1(0x3aa)
----------------------------------

Begin block 0xbc3
prev = {'0xda'}, next = {}
----------------------------------
Block 0xbc3
0xbc4: vbc4(0x3c5) = CONST 
0xbc5: CALLPRIVATE vbc4(0x3c5)
----------------------------------

Begin block 0xbc6
prev = {'0xe5'}, next = {}
----------------------------------
Block 0xbc6
0xbc7: vbc7(0x3da) = CONST 
0xbc8: CALLPRIVATE vbc7(0x3da)
----------------------------------

Begin block 0xbc9
prev = {'0xf0'}, next = {}
----------------------------------
Block 0xbc9
0xbca: vbca(0x3fe) = CONST 
0xbcb: CALLPRIVATE vbca(0x3fe)
----------------------------------

Begin block 0xbcc
prev = {'0xfb'}, next = {}
----------------------------------
Block 0xbcc
0xbcd: vbcd(0x425) = CONST 
0xbce: CALLPRIVATE vbcd(0x425)
----------------------------------

Begin block 0xbcf
prev = {'0x106'}, next = {}
----------------------------------
Block 0xbcf
0xbd0: vbd0(0x440) = CONST 
0xbd1: CALLPRIVATE vbd0(0x440)
----------------------------------
