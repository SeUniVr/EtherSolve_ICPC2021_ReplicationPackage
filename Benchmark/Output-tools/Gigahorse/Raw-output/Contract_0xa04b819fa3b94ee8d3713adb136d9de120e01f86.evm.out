
Begin block 0x0
prev = {}, next = {'0x874', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x852: v852(0x874) = CONST 
0x853: JUMPI v852(0x874) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x41', '0x877'}
----------------------------------
Block 0xd
0xd: vd(0x0) = CONST 
0xf: vf = CALLDATALOAD vd(0x0)
0x10: v10(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x2f: v2f = DIV vf v10(0x100000000000000000000000000000000000000000000000000000000)
0x30: v30(0xffffffff) = CONST 
0x35: v35 = AND v30(0xffffffff) v2f
0x37: v37(0x880193c) = CONST 
0x3c: v3c = EQ v37(0x880193c) v35
0x854: v854(0x877) = CONST 
0x855: JUMPI v854(0x877) v3c
----------------------------------

Begin block 0x41
prev = {'0xd'}, next = {'0x87a', '0x4c'}
----------------------------------
Block 0x41
0x42: v42(0xb63c855) = CONST 
0x47: v47 = EQ v42(0xb63c855) v35
0x856: v856(0x87a) = CONST 
0x857: JUMPI v856(0x87a) v47
----------------------------------

Begin block 0x4c
prev = {'0x41'}, next = {'0x87d', '0x57'}
----------------------------------
Block 0x4c
0x4d: v4d(0x1c5de29d) = CONST 
0x52: v52 = EQ v4d(0x1c5de29d) v35
0x858: v858(0x87d) = CONST 
0x859: JUMPI v858(0x87d) v52
----------------------------------

Begin block 0x57
prev = {'0x4c'}, next = {'0x62', '0x880'}
----------------------------------
Block 0x57
0x58: v58(0x3a16a72e) = CONST 
0x5d: v5d = EQ v58(0x3a16a72e) v35
0x85a: v85a(0x880) = CONST 
0x85b: JUMPI v85a(0x880) v5d
----------------------------------

Begin block 0x62
prev = {'0x57'}, next = {'0x6d', '0x883'}
----------------------------------
Block 0x62
0x63: v63(0x3ab41493) = CONST 
0x68: v68 = EQ v63(0x3ab41493) v35
0x85c: v85c(0x883) = CONST 
0x85d: JUMPI v85c(0x883) v68
----------------------------------

Begin block 0x6d
prev = {'0x62'}, next = {'0x886', '0x78'}
----------------------------------
Block 0x6d
0x6e: v6e(0x477bddaa) = CONST 
0x73: v73 = EQ v6e(0x477bddaa) v35
0x85e: v85e(0x886) = CONST 
0x85f: JUMPI v85e(0x886) v73
----------------------------------

Begin block 0x78
prev = {'0x6d'}, next = {'0x889', '0x83'}
----------------------------------
Block 0x78
0x79: v79(0x6d81250b) = CONST 
0x7e: v7e = EQ v79(0x6d81250b) v35
0x860: v860(0x889) = CONST 
0x861: JUMPI v860(0x889) v7e
----------------------------------

Begin block 0x83
prev = {'0x78'}, next = {'0x8e', '0x88c'}
----------------------------------
Block 0x83
0x84: v84(0x715018a6) = CONST 
0x89: v89 = EQ v84(0x715018a6) v35
0x862: v862(0x88c) = CONST 
0x863: JUMPI v862(0x88c) v89
----------------------------------

Begin block 0x8e
prev = {'0x83'}, next = {'0x99', '0x88f'}
----------------------------------
Block 0x8e
0x8f: v8f(0x8da5cb5b) = CONST 
0x94: v94 = EQ v8f(0x8da5cb5b) v35
0x864: v864(0x88f) = CONST 
0x865: JUMPI v864(0x88f) v94
----------------------------------

Begin block 0x99
prev = {'0x8e'}, next = {'0xa4', '0x892'}
----------------------------------
Block 0x99
0x9a: v9a(0x8f32d59b) = CONST 
0x9f: v9f = EQ v9a(0x8f32d59b) v35
0x866: v866(0x892) = CONST 
0x867: JUMPI v866(0x892) v9f
----------------------------------

Begin block 0xa4
prev = {'0x99'}, next = {'0xaf', '0x895'}
----------------------------------
Block 0xa4
0xa5: va5(0x9cbba816) = CONST 
0xaa: vaa = EQ va5(0x9cbba816) v35
0x868: v868(0x895) = CONST 
0x869: JUMPI v868(0x895) vaa
----------------------------------

Begin block 0xaf
prev = {'0xa4'}, next = {'0x898', '0xba'}
----------------------------------
Block 0xaf
0xb0: vb0(0xab80e2b3) = CONST 
0xb5: vb5 = EQ vb0(0xab80e2b3) v35
0x86a: v86a(0x898) = CONST 
0x86b: JUMPI v86a(0x898) vb5
----------------------------------

Begin block 0xba
prev = {'0xaf'}, next = {'0xc5', '0x89b'}
----------------------------------
Block 0xba
0xbb: vbb(0xae1b95c5) = CONST 
0xc0: vc0 = EQ vbb(0xae1b95c5) v35
0x86c: v86c(0x89b) = CONST 
0x86d: JUMPI v86c(0x89b) vc0
----------------------------------

Begin block 0xc5
prev = {'0xba'}, next = {'0x89e', '0xd0'}
----------------------------------
Block 0xc5
0xc6: vc6(0xf2059268) = CONST 
0xcb: vcb = EQ vc6(0xf2059268) v35
0x86e: v86e(0x89e) = CONST 
0x86f: JUMPI v86e(0x89e) vcb
----------------------------------

Begin block 0xd0
prev = {'0xc5'}, next = {'0xdb', '0x8a1'}
----------------------------------
Block 0xd0
0xd1: vd1(0xf2fde38b) = CONST 
0xd6: vd6 = EQ vd1(0xf2fde38b) v35
0x870: v870(0x8a1) = CONST 
0x871: JUMPI v870(0x8a1) vd6
----------------------------------

Begin block 0xdb
prev = {'0xd0'}, next = {'0x874', '0x8a4'}
----------------------------------
Block 0xdb
0xdc: vdc(0xf4ad3869) = CONST 
0xe1: ve1 = EQ vdc(0xf4ad3869) v35
0x872: v872(0x8a4) = CONST 
0x873: JUMPI v872(0x8a4) ve1
----------------------------------

Begin block 0xe6
prev = {}, next = {'0x12d', '0x139'}
----------------------------------
function batchLock_63efZf()()
Block 0xe6
0xe7: ve7(0x0) = CONST 
0xe9: ve9(0xc) = CONST 
0xeb: veb(0x0) = CONST 
0xee: vee = SLOAD ve9(0xc)
0xf0: vf0(0x100) = CONST 
0xf3: vf3(0x1) = EXP vf0(0x100) veb(0x0)
0xf5: vf5 = DIV vee vf3(0x1)
0xf6: vf6(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x10b: v10b = AND vf6(0xffffffffffffffffffffffffffffffffffffffff) vf5
0x10e: v10e(0x40) = CONST 
0x110: v110 = MLOAD v10e(0x40)
0x111: v111 = CALLDATASIZE 
0x112: v112(0x0) = CONST 
0x115: CALLDATACOPY v110 v112(0x0) v111
0x116: v116(0x0) = CONST 
0x119: v119 = CALLDATASIZE 
0x11c: v11c = GAS 
0x11d: v11d = DELEGATECALL v11c v10b v110 v119 v116(0x0) v116(0x0)
0x11e: v11e = RETURNDATASIZE 
0x120: v120(0x0) = CONST 
0x123: RETURNDATACOPY v110 v120(0x0) v11e
0x125: v125(0x0) = CONST 
0x128: v128 = EQ v11d v125(0x0)
0x129: v129(0x139) = CONST 
0x12c: JUMPI v129(0x139) v128
----------------------------------

Begin block 0x12d
prev = {'0xe6'}, next = {'0x13d', '0x135'}
----------------------------------
Block 0x12d
0x12d: v12d(0x1) = CONST 
0x130: v130 = EQ v11d v12d(0x1)
0x131: v131(0x13d) = CONST 
0x134: JUMPI v131(0x13d) v130
----------------------------------

Begin block 0x135
prev = {'0x12d'}, next = {'0x141'}
----------------------------------
Block 0x135
0x135: v135(0x141) = CONST 
0x138: JUMP v135(0x141)
----------------------------------

Begin block 0x139
prev = {'0xe6'}, next = {}
----------------------------------
Block 0x139
0x13c: REVERT v110 v11e
----------------------------------

Begin block 0x13d
prev = {'0x12d'}, next = {}
----------------------------------
Block 0x13d
0x140: RETURN v110 v11e
----------------------------------

Begin block 0x141
prev = {'0x135'}, next = {}
----------------------------------
Block 0x141
0x147: STOP 
----------------------------------

Begin block 0x148
prev = {}, next = {'0x154', '0x150'}
----------------------------------
function INITIAL_THRESHOLD()()
Block 0x148
0x149: v149 = CALLVALUE 
0x14b: v14b = ISZERO v149
0x14c: v14c(0x154) = CONST 
0x14f: JUMPI v14c(0x154) v14b
----------------------------------

Begin block 0x150
prev = {'0x148'}, next = {}
----------------------------------
Block 0x150
0x150: v150(0x0) = CONST 
0x153: REVERT v150(0x0) v150(0x0)
----------------------------------

Begin block 0x154
prev = {'0x148'}, next = {'0x4c8'}
----------------------------------
Block 0x154
0x156: v156(0x15d) = CONST 
0x159: v159(0x4c8) = CONST 
0x15c: JUMP v159(0x4c8)
----------------------------------

Begin block 0x15d
prev = {'0x4c8'}, next = {}
----------------------------------
Block 0x15d
0x15e: v15e(0x40) = CONST 
0x160: v160 = MLOAD v15e(0x40)
0x164: MSTORE v160 v4cb
0x165: v165(0x20) = CONST 
0x167: v167 = ADD v165(0x20) v160
0x16b: v16b(0x40) = CONST 
0x16d: v16d = MLOAD v16b(0x40)
0x170: v170 = SUB v167 v16d
0x172: RETURN v16d v170
----------------------------------

Begin block 0x173
prev = {}, next = {'0x17f', '0x17b'}
----------------------------------
function ROLE_ADVERTISER()()
Block 0x173
0x174: v174 = CALLVALUE 
0x176: v176 = ISZERO v174
0x177: v177(0x17f) = CONST 
0x17a: JUMPI v177(0x17f) v176
----------------------------------

Begin block 0x17b
prev = {'0x173'}, next = {}
----------------------------------
Block 0x17b
0x17b: v17b(0x0) = CONST 
0x17e: REVERT v17b(0x0) v17b(0x0)
----------------------------------

Begin block 0x17f
prev = {'0x173'}, next = {'0x4ce'}
----------------------------------
Block 0x17f
0x181: v181(0x188) = CONST 
0x184: v184(0x4ce) = CONST 
0x187: JUMP v184(0x4ce)
----------------------------------

Begin block 0x188
prev = {'0x4ce'}, next = {}
----------------------------------
Block 0x188
0x189: v189(0x40) = CONST 
0x18b: v18b = MLOAD v189(0x40)
0x18f: MSTORE v18b v4cf(0x2)
0x190: v190(0x20) = CONST 
0x192: v192 = ADD v190(0x20) v18b
0x196: v196(0x40) = CONST 
0x198: v198 = MLOAD v196(0x40)
0x19b: v19b = SUB v192 v198
0x19d: RETURN v198 v19b
----------------------------------

Begin block 0x19e
prev = {}, next = {'0x1a6', '0x1aa'}
----------------------------------
function BLOCK_DEPOSIT()()
Block 0x19e
0x19f: v19f = CALLVALUE 
0x1a1: v1a1 = ISZERO v19f
0x1a2: v1a2(0x1aa) = CONST 
0x1a5: JUMPI v1a2(0x1aa) v1a1
----------------------------------

Begin block 0x1a6
prev = {'0x19e'}, next = {}
----------------------------------
Block 0x1a6
0x1a6: v1a6(0x0) = CONST 
0x1a9: REVERT v1a6(0x0) v1a6(0x0)
----------------------------------

Begin block 0x1aa
prev = {'0x19e'}, next = {'0x4d3'}
----------------------------------
Block 0x1aa
0x1ac: v1ac(0x1b3) = CONST 
0x1af: v1af(0x4d3) = CONST 
0x1b2: JUMP v1af(0x4d3)
----------------------------------

Begin block 0x1b3
prev = {'0x4d3'}, next = {}
----------------------------------
Block 0x1b3
0x1b4: v1b4(0x40) = CONST 
0x1b6: v1b6 = MLOAD v1b4(0x40)
0x1ba: MSTORE v1b6 v4d6
0x1bb: v1bb(0x20) = CONST 
0x1bd: v1bd = ADD v1bb(0x20) v1b6
0x1c1: v1c1(0x40) = CONST 
0x1c3: v1c3 = MLOAD v1c1(0x40)
0x1c6: v1c6 = SUB v1bd v1c3
0x1c8: RETURN v1c3 v1c6
----------------------------------

Begin block 0x1c9
prev = {}, next = {'0x1d5', '0x1d1'}
----------------------------------
function CONTRACT_MEMBERS()()
Block 0x1c9
0x1ca: v1ca = CALLVALUE 
0x1cc: v1cc = ISZERO v1ca
0x1cd: v1cd(0x1d5) = CONST 
0x1d0: JUMPI v1cd(0x1d5) v1cc
----------------------------------

Begin block 0x1d1
prev = {'0x1c9'}, next = {}
----------------------------------
Block 0x1d1
0x1d1: v1d1(0x0) = CONST 
0x1d4: REVERT v1d1(0x0) v1d1(0x0)
----------------------------------

Begin block 0x1d5
prev = {'0x1c9'}, next = {'0x4d9'}
----------------------------------
Block 0x1d5
0x1d7: v1d7(0x1de) = CONST 
0x1da: v1da(0x4d9) = CONST 
0x1dd: JUMP v1da(0x4d9)
----------------------------------

Begin block 0x1de
prev = {'0x4d9'}, next = {}
----------------------------------
Block 0x1de
0x1df: v1df(0x40) = CONST 
0x1e1: v1e1 = MLOAD v1df(0x40)
0x1e4: v1e4(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x1f9: v1f9 = AND v1e4(0xffffffffffffffffffffffffffffffffffffffff) v4fb
0x1fa: v1fa(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x20f: v20f = AND v1fa(0xffffffffffffffffffffffffffffffffffffffff) v1f9
0x211: MSTORE v1e1 v20f
0x212: v212(0x20) = CONST 
0x214: v214 = ADD v212(0x20) v1e1
0x218: v218(0x40) = CONST 
0x21a: v21a = MLOAD v218(0x40)
0x21d: v21d = SUB v214 v21a
0x21f: RETURN v21a v21d
----------------------------------

Begin block 0x220
prev = {}, next = {'0x228', '0x22c'}
----------------------------------
function ROLE_BIDDER()()
Block 0x220
0x221: v221 = CALLVALUE 
0x223: v223 = ISZERO v221
0x224: v224(0x22c) = CONST 
0x227: JUMPI v224(0x22c) v223
----------------------------------

Begin block 0x228
prev = {'0x220'}, next = {}
----------------------------------
Block 0x228
0x228: v228(0x0) = CONST 
0x22b: REVERT v228(0x0) v228(0x0)
----------------------------------

Begin block 0x22c
prev = {'0x220'}, next = {'0x4fe'}
----------------------------------
Block 0x22c
0x22e: v22e(0x235) = CONST 
0x231: v231(0x4fe) = CONST 
0x234: JUMP v231(0x4fe)
----------------------------------

Begin block 0x235
prev = {'0x4fe'}, next = {}
----------------------------------
Block 0x235
0x236: v236(0x40) = CONST 
0x238: v238 = MLOAD v236(0x40)
0x23c: MSTORE v238 v4ff(0x1)
0x23d: v23d(0x20) = CONST 
0x23f: v23f = ADD v23d(0x20) v238
0x243: v243(0x40) = CONST 
0x245: v245 = MLOAD v243(0x40)
0x248: v248 = SUB v23f v245
0x24a: RETURN v245 v248
----------------------------------

Begin block 0x24b
prev = {}, next = {'0x253', '0x257'}
----------------------------------
function setContractAddress(address)()
Block 0x24b
0x24c: v24c = CALLVALUE 
0x24e: v24e = ISZERO v24c
0x24f: v24f(0x257) = CONST 
0x252: JUMPI v24f(0x257) v24e
----------------------------------

Begin block 0x253
prev = {'0x24b'}, next = {}
----------------------------------
Block 0x253
0x253: v253(0x0) = CONST 
0x256: REVERT v253(0x0) v253(0x0)
----------------------------------

Begin block 0x257
prev = {'0x24b'}, next = {'0x503'}
----------------------------------
Block 0x257
0x259: v259(0x28c) = CONST 
0x25c: v25c(0x4) = CONST 
0x25f: v25f = CALLDATASIZE 
0x260: v260 = SUB v25f v25c(0x4)
0x262: v262 = ADD v25c(0x4) v260
0x266: v266 = CALLDATALOAD v25c(0x4)
0x267: v267(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x27c: v27c = AND v267(0xffffffffffffffffffffffffffffffffffffffff) v266
0x27e: v27e(0x20) = CONST 
0x280: v280(0x24) = ADD v27e(0x20) v25c(0x4)
0x288: v288(0x503) = CONST 
0x28b: JUMP v288(0x503)
----------------------------------

Begin block 0x28c
prev = {'0x516'}, next = {}
----------------------------------
Block 0x28c
0x28d: STOP 
----------------------------------

Begin block 0x28e
prev = {}, next = {'0x296', '0x29a'}
----------------------------------
function MAJORITY()()
Block 0x28e
0x28f: v28f = CALLVALUE 
0x291: v291 = ISZERO v28f
0x292: v292(0x29a) = CONST 
0x295: JUMPI v292(0x29a) v291
----------------------------------

Begin block 0x296
prev = {'0x28e'}, next = {}
----------------------------------
Block 0x296
0x296: v296(0x0) = CONST 
0x299: REVERT v296(0x0) v296(0x0)
----------------------------------

Begin block 0x29a
prev = {'0x28e'}, next = {'0x55a'}
----------------------------------
Block 0x29a
0x29c: v29c(0x2a3) = CONST 
0x29f: v29f(0x55a) = CONST 
0x2a2: JUMP v29f(0x55a)
----------------------------------

Begin block 0x2a3
prev = {'0x55a'}, next = {}
----------------------------------
Block 0x2a3
0x2a4: v2a4(0x40) = CONST 
0x2a6: v2a6 = MLOAD v2a4(0x40)
0x2aa: MSTORE v2a6 v55d
0x2ab: v2ab(0x20) = CONST 
0x2ad: v2ad = ADD v2ab(0x20) v2a6
0x2b1: v2b1(0x40) = CONST 
0x2b3: v2b3 = MLOAD v2b1(0x40)
0x2b6: v2b6 = SUB v2ad v2b3
0x2b8: RETURN v2b3 v2b6
----------------------------------

Begin block 0x2b9
prev = {}, next = {'0x2c5', '0x2c1'}
----------------------------------
function renounceOwnership()()
Block 0x2b9
0x2ba: v2ba = CALLVALUE 
0x2bc: v2bc = ISZERO v2ba
0x2bd: v2bd(0x2c5) = CONST 
0x2c0: JUMPI v2bd(0x2c5) v2bc
----------------------------------

Begin block 0x2c1
prev = {'0x2b9'}, next = {}
----------------------------------
Block 0x2c1
0x2c1: v2c1(0x0) = CONST 
0x2c4: REVERT v2c1(0x0) v2c1(0x0)
----------------------------------

Begin block 0x2c5
prev = {'0x2b9'}, next = {'0x560'}
----------------------------------
Block 0x2c5
0x2c7: v2c7(0x2ce) = CONST 
0x2ca: v2ca(0x560) = CONST 
0x2cd: JUMP v2ca(0x560)
----------------------------------

Begin block 0x2ce
prev = {'0x573'}, next = {}
----------------------------------
Block 0x2ce
0x2cf: STOP 
----------------------------------

Begin block 0x2d0
prev = {}, next = {'0x2dc', '0x2d8'}
----------------------------------
function owner()()
Block 0x2d0
0x2d1: v2d1 = CALLVALUE 
0x2d3: v2d3 = ISZERO v2d1
0x2d4: v2d4(0x2dc) = CONST 
0x2d7: JUMPI v2d4(0x2dc) v2d3
----------------------------------

Begin block 0x2d8
prev = {'0x2d0'}, next = {}
----------------------------------
Block 0x2d8
0x2d8: v2d8(0x0) = CONST 
0x2db: REVERT v2d8(0x0) v2d8(0x0)
----------------------------------

Begin block 0x2dc
prev = {'0x2d0'}, next = {'0x634'}
----------------------------------
Block 0x2dc
0x2de: v2de(0x2e5) = CONST 
0x2e1: v2e1(0x634) = CONST 
0x2e4: JUMP v2e1(0x634)
----------------------------------

Begin block 0x2e5
prev = {'0x634'}, next = {}
----------------------------------
Block 0x2e5
0x2e6: v2e6(0x40) = CONST 
0x2e8: v2e8 = MLOAD v2e6(0x40)
0x2eb: v2eb(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x300: v300 = AND v2eb(0xffffffffffffffffffffffffffffffffffffffff) v659
0x301: v301(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x316: v316 = AND v301(0xffffffffffffffffffffffffffffffffffffffff) v300
0x318: MSTORE v2e8 v316
0x319: v319(0x20) = CONST 
0x31b: v31b = ADD v319(0x20) v2e8
0x31f: v31f(0x40) = CONST 
0x321: v321 = MLOAD v31f(0x40)
0x324: v324 = SUB v31b v321
0x326: RETURN v321 v324
----------------------------------

Begin block 0x327
prev = {}, next = {'0x32f', '0x333'}
----------------------------------
function isOwner()()
Block 0x327
0x328: v328 = CALLVALUE 
0x32a: v32a = ISZERO v328
0x32b: v32b(0x333) = CONST 
0x32e: JUMPI v32b(0x333) v32a
----------------------------------

Begin block 0x32f
prev = {'0x327'}, next = {}
----------------------------------
Block 0x32f
0x32f: v32f(0x0) = CONST 
0x332: REVERT v32f(0x0) v32f(0x0)
----------------------------------

Begin block 0x333
prev = {'0x327'}, next = {'0x33c'}
----------------------------------
Block 0x333
0x335: v335(0x33c) = CONST 
0x338: v338(0x65e) = CONST 
0x33b: v33b_0 = CALLPRIVATE v338(0x65e) v335(0x33c)
----------------------------------

Begin block 0x33c
prev = {'0x333'}, next = {}
----------------------------------
Block 0x33c
0x33d: v33d(0x40) = CONST 
0x33f: v33f = MLOAD v33d(0x40)
0x342: v342 = ISZERO v33b_0
0x343: v343 = ISZERO v342
0x344: v344 = ISZERO v343
0x345: v345 = ISZERO v344
0x347: MSTORE v33f v345
0x348: v348(0x20) = CONST 
0x34a: v34a = ADD v348(0x20) v33f
0x34e: v34e(0x40) = CONST 
0x350: v350 = MLOAD v34e(0x40)
0x353: v353 = SUB v34a v350
0x355: RETURN v350 v353
----------------------------------

Begin block 0x356
prev = {}, next = {'0x362', '0x35e'}
----------------------------------
function ROLE_VOTER()()
Block 0x356
0x357: v357 = CALLVALUE 
0x359: v359 = ISZERO v357
0x35a: v35a(0x362) = CONST 
0x35d: JUMPI v35a(0x362) v359
----------------------------------

Begin block 0x35e
prev = {'0x356'}, next = {}
----------------------------------
Block 0x35e
0x35e: v35e(0x0) = CONST 
0x361: REVERT v35e(0x0) v35e(0x0)
----------------------------------

Begin block 0x362
prev = {'0x356'}, next = {'0x6b6'}
----------------------------------
Block 0x362
0x364: v364(0x36b) = CONST 
0x367: v367(0x6b6) = CONST 
0x36a: JUMP v367(0x6b6)
----------------------------------

Begin block 0x36b
prev = {'0x6b6'}, next = {}
----------------------------------
Block 0x36b
0x36c: v36c(0x40) = CONST 
0x36e: v36e = MLOAD v36c(0x40)
0x372: MSTORE v36e v6b7(0x4)
0x373: v373(0x20) = CONST 
0x375: v375 = ADD v373(0x20) v36e
0x379: v379(0x40) = CONST 
0x37b: v37b = MLOAD v379(0x40)
0x37e: v37e = SUB v375 v37b
0x380: RETURN v37b v37e
----------------------------------

Begin block 0x381
prev = {}, next = {'0x389', '0x38d'}
----------------------------------
function ROLE_PUBLISHER()()
Block 0x381
0x382: v382 = CALLVALUE 
0x384: v384 = ISZERO v382
0x385: v385(0x38d) = CONST 
0x388: JUMPI v385(0x38d) v384
----------------------------------

Begin block 0x389
prev = {'0x381'}, next = {}
----------------------------------
Block 0x389
0x389: v389(0x0) = CONST 
0x38c: REVERT v389(0x0) v389(0x0)
----------------------------------

Begin block 0x38d
prev = {'0x381'}, next = {'0x6bb'}
----------------------------------
Block 0x38d
0x38f: v38f(0x396) = CONST 
0x392: v392(0x6bb) = CONST 
0x395: JUMP v392(0x6bb)
----------------------------------

Begin block 0x396
prev = {'0x6bb'}, next = {}
----------------------------------
Block 0x396
0x397: v397(0x40) = CONST 
0x399: v399 = MLOAD v397(0x40)
0x39d: MSTORE v399 v6bc(0x3)
0x39e: v39e(0x20) = CONST 
0x3a0: v3a0 = ADD v39e(0x20) v399
0x3a4: v3a4(0x40) = CONST 
0x3a6: v3a6 = MLOAD v3a4(0x40)
0x3a9: v3a9 = SUB v3a0 v3a6
0x3ab: RETURN v3a6 v3a9
----------------------------------

Begin block 0x3ac
prev = {}, next = {'0x3b4', '0x3b8'}
----------------------------------
function THRESHOLD_STEP()()
Block 0x3ac
0x3ad: v3ad = CALLVALUE 
0x3af: v3af = ISZERO v3ad
0x3b0: v3b0(0x3b8) = CONST 
0x3b3: JUMPI v3b0(0x3b8) v3af
----------------------------------

Begin block 0x3b4
prev = {'0x3ac'}, next = {}
----------------------------------
Block 0x3b4
0x3b4: v3b4(0x0) = CONST 
0x3b7: REVERT v3b4(0x0) v3b4(0x0)
----------------------------------

Begin block 0x3b8
prev = {'0x3ac'}, next = {'0x6c0'}
----------------------------------
Block 0x3b8
0x3ba: v3ba(0x3c1) = CONST 
0x3bd: v3bd(0x6c0) = CONST 
0x3c0: JUMP v3bd(0x6c0)
----------------------------------

Begin block 0x3c1
prev = {'0x6c0'}, next = {}
----------------------------------
Block 0x3c1
0x3c2: v3c2(0x40) = CONST 
0x3c4: v3c4 = MLOAD v3c2(0x40)
0x3c8: MSTORE v3c4 v6c3
0x3c9: v3c9(0x20) = CONST 
0x3cb: v3cb = ADD v3c9(0x20) v3c4
0x3cf: v3cf(0x40) = CONST 
0x3d1: v3d1 = MLOAD v3cf(0x40)
0x3d4: v3d4 = SUB v3cb v3d1
0x3d6: RETURN v3d1 v3d4
----------------------------------

Begin block 0x3d7
prev = {}, next = {'0x3e3', '0x3df'}
----------------------------------
function VOTER_POOL()()
Block 0x3d7
0x3d8: v3d8 = CALLVALUE 
0x3da: v3da = ISZERO v3d8
0x3db: v3db(0x3e3) = CONST 
0x3de: JUMPI v3db(0x3e3) v3da
----------------------------------

Begin block 0x3df
prev = {'0x3d7'}, next = {}
----------------------------------
Block 0x3df
0x3df: v3df(0x0) = CONST 
0x3e2: REVERT v3df(0x0) v3df(0x0)
----------------------------------

Begin block 0x3e3
prev = {'0x3d7'}, next = {'0x6c6'}
----------------------------------
Block 0x3e3
0x3e5: v3e5(0x3ec) = CONST 
0x3e8: v3e8(0x6c6) = CONST 
0x3eb: JUMP v3e8(0x6c6)
----------------------------------

Begin block 0x3ec
prev = {'0x6c6'}, next = {}
----------------------------------
Block 0x3ec
0x3ed: v3ed(0x40) = CONST 
0x3ef: v3ef = MLOAD v3ed(0x40)
0x3f2: v3f2(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x407: v407 = AND v3f2(0xffffffffffffffffffffffffffffffffffffffff) v6e9
0x408: v408(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x41d: v41d = AND v408(0xffffffffffffffffffffffffffffffffffffffff) v407
0x41f: MSTORE v3ef v41d
0x420: v420(0x20) = CONST 
0x422: v422 = ADD v420(0x20) v3ef
0x426: v426(0x40) = CONST 
0x428: v428 = MLOAD v426(0x40)
0x42b: v42b = SUB v422 v428
0x42d: RETURN v428 v42b
----------------------------------

Begin block 0x42e
prev = {}, next = {'0x43a', '0x436'}
----------------------------------
function transferOwnership(address)()
Block 0x42e
0x42f: v42f = CALLVALUE 
0x431: v431 = ISZERO v42f
0x432: v432(0x43a) = CONST 
0x435: JUMPI v432(0x43a) v431
----------------------------------

Begin block 0x436
prev = {'0x42e'}, next = {}
----------------------------------
Block 0x436
0x436: v436(0x0) = CONST 
0x439: REVERT v436(0x0) v436(0x0)
----------------------------------

Begin block 0x43a
prev = {'0x42e'}, next = {'0x6ec'}
----------------------------------
Block 0x43a
0x43c: v43c(0x46f) = CONST 
0x43f: v43f(0x4) = CONST 
0x442: v442 = CALLDATASIZE 
0x443: v443 = SUB v442 v43f(0x4)
0x445: v445 = ADD v43f(0x4) v443
0x449: v449 = CALLDATALOAD v43f(0x4)
0x44a: v44a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x45f: v45f = AND v44a(0xffffffffffffffffffffffffffffffffffffffff) v449
0x461: v461(0x20) = CONST 
0x463: v463(0x24) = ADD v461(0x20) v43f(0x4)
0x46b: v46b(0x6ec) = CONST 
0x46e: JUMP v46b(0x6ec)
----------------------------------

Begin block 0x46f
prev = {'0x708'}, next = {}
----------------------------------
Block 0x46f
0x470: STOP 
----------------------------------

Begin block 0x471
prev = {}, next = {'0x479', '0x47d'}
----------------------------------
function CONTRACT_TOKEN()()
Block 0x471
0x472: v472 = CALLVALUE 
0x474: v474 = ISZERO v472
0x475: v475(0x47d) = CONST 
0x478: JUMPI v475(0x47d) v474
----------------------------------

Begin block 0x479
prev = {'0x471'}, next = {}
----------------------------------
Block 0x479
0x479: v479(0x0) = CONST 
0x47c: REVERT v479(0x0) v479(0x0)
----------------------------------

Begin block 0x47d
prev = {'0x471'}, next = {'0x70b'}
----------------------------------
Block 0x47d
0x47f: v47f(0x486) = CONST 
0x482: v482(0x70b) = CONST 
0x485: JUMP v482(0x70b)
----------------------------------

Begin block 0x486
prev = {'0x70b'}, next = {}
----------------------------------
Block 0x486
0x487: v487(0x40) = CONST 
0x489: v489 = MLOAD v487(0x40)
0x48c: v48c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x4a1: v4a1 = AND v48c(0xffffffffffffffffffffffffffffffffffffffff) v72e
0x4a2: v4a2(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x4b7: v4b7 = AND v4a2(0xffffffffffffffffffffffffffffffffffffffff) v4a1
0x4b9: MSTORE v489 v4b7
0x4ba: v4ba(0x20) = CONST 
0x4bc: v4bc = ADD v4ba(0x20) v489
0x4c0: v4c0(0x40) = CONST 
0x4c2: v4c2 = MLOAD v4c0(0x40)
0x4c5: v4c5 = SUB v4bc v4c2
0x4c7: RETURN v4c2 v4c5
----------------------------------

Begin block 0x4c8
prev = {'0x154'}, next = {'0x15d'}
----------------------------------
Block 0x4c8
0x4c9: v4c9(0x3) = CONST 
0x4cb: v4cb = SLOAD v4c9(0x3)
0x4cd: JUMP v156(0x15d)
----------------------------------

Begin block 0x4ce
prev = {'0x17f'}, next = {'0x188'}
----------------------------------
Block 0x4ce
0x4cf: v4cf(0x2) = CONST 
0x4d2: JUMP v181(0x188)
----------------------------------

Begin block 0x4d3
prev = {'0x1aa'}, next = {'0x1b3'}
----------------------------------
Block 0x4d3
0x4d4: v4d4(0x5) = CONST 
0x4d6: v4d6 = SLOAD v4d4(0x5)
0x4d8: JUMP v1ac(0x1b3)
----------------------------------

Begin block 0x4d9
prev = {'0x1d5'}, next = {'0x1de'}
----------------------------------
Block 0x4d9
0x4da: v4da(0x0) = CONST 
0x4de: v4de = SLOAD v4da(0x0)
0x4e0: v4e0(0x100) = CONST 
0x4e3: v4e3(0x1) = EXP v4e0(0x100) v4da(0x0)
0x4e5: v4e5 = DIV v4de v4e3(0x1)
0x4e6: v4e6(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x4fb: v4fb = AND v4e6(0xffffffffffffffffffffffffffffffffffffffff) v4e5
0x4fd: JUMP v1d7(0x1de)
----------------------------------

Begin block 0x4fe
prev = {'0x22c'}, next = {'0x235'}
----------------------------------
Block 0x4fe
0x4ff: v4ff(0x1) = CONST 
0x502: JUMP v22e(0x235)
----------------------------------

Begin block 0x503
prev = {'0x257'}, next = {'0x50b'}
----------------------------------
Block 0x503
0x504: v504(0x50b) = CONST 
0x507: v507(0x65e) = CONST 
0x50a: v50a_0 = CALLPRIVATE v507(0x65e) v504(0x50b)
----------------------------------

Begin block 0x50b
prev = {'0x503'}, next = {'0x512', '0x516'}
----------------------------------
Block 0x50b
0x50c: v50c = ISZERO v50a_0
0x50d: v50d = ISZERO v50c
0x50e: v50e(0x516) = CONST 
0x511: JUMPI v50e(0x516) v50d
----------------------------------

Begin block 0x512
prev = {'0x50b'}, next = {}
----------------------------------
Block 0x512
0x512: v512(0x0) = CONST 
0x515: REVERT v512(0x0) v512(0x0)
----------------------------------

Begin block 0x516
prev = {'0x50b'}, next = {'0x28c'}
----------------------------------
Block 0x516
0x518: v518(0xc) = CONST 
0x51a: v51a(0x0) = CONST 
0x51c: v51c(0x100) = CONST 
0x51f: v51f(0x1) = EXP v51c(0x100) v51a(0x0)
0x521: v521 = SLOAD v518(0xc)
0x523: v523(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x538: v538(0xffffffffffffffffffffffffffffffffffffffff) = MUL v523(0xffffffffffffffffffffffffffffffffffffffff) v51f(0x1)
0x539: v539(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v538(0xffffffffffffffffffffffffffffffffffffffff)
0x53a: v53a = AND v539(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v521
0x53d: v53d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x552: v552 = AND v53d(0xffffffffffffffffffffffffffffffffffffffff) v27c
0x553: v553 = MUL v552 v51f(0x1)
0x554: v554 = OR v553 v53a
0x556: SSTORE v518(0xc) v554
0x559: JUMP v259(0x28c)
----------------------------------

Begin block 0x55a
prev = {'0x29a'}, next = {'0x2a3'}
----------------------------------
Block 0x55a
0x55b: v55b(0x6) = CONST 
0x55d: v55d = SLOAD v55b(0x6)
0x55f: JUMP v29c(0x2a3)
----------------------------------

Begin block 0x560
prev = {'0x2c5'}, next = {'0x568'}
----------------------------------
Block 0x560
0x561: v561(0x568) = CONST 
0x564: v564(0x65e) = CONST 
0x567: v567_0 = CALLPRIVATE v564(0x65e) v561(0x568)
----------------------------------

Begin block 0x568
prev = {'0x560'}, next = {'0x56f', '0x573'}
----------------------------------
Block 0x568
0x569: v569 = ISZERO v567_0
0x56a: v56a = ISZERO v569
0x56b: v56b(0x573) = CONST 
0x56e: JUMPI v56b(0x573) v56a
----------------------------------

Begin block 0x56f
prev = {'0x568'}, next = {}
----------------------------------
Block 0x56f
0x56f: v56f(0x0) = CONST 
0x572: REVERT v56f(0x0) v56f(0x0)
----------------------------------

Begin block 0x573
prev = {'0x568'}, next = {'0x2ce'}
----------------------------------
Block 0x573
0x574: v574(0x0) = CONST 
0x576: v576(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x58b: v58b(0x0) = AND v576(0xffffffffffffffffffffffffffffffffffffffff) v574(0x0)
0x58c: v58c(0xb) = CONST 
0x58e: v58e(0x0) = CONST 
0x591: v591 = SLOAD v58c(0xb)
0x593: v593(0x100) = CONST 
0x596: v596(0x1) = EXP v593(0x100) v58e(0x0)
0x598: v598 = DIV v591 v596(0x1)
0x599: v599(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x5ae: v5ae = AND v599(0xffffffffffffffffffffffffffffffffffffffff) v598
0x5af: v5af(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x5c4: v5c4 = AND v5af(0xffffffffffffffffffffffffffffffffffffffff) v5ae
0x5c5: v5c5(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x5e6: v5e6(0x40) = CONST 
0x5e8: v5e8 = MLOAD v5e6(0x40)
0x5e9: v5e9(0x40) = CONST 
0x5eb: v5eb = MLOAD v5e9(0x40)
0x5ee: v5ee = SUB v5e8 v5eb
0x5f0: LOG3 v5eb v5ee v5c5(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v5c4 v58b(0x0)
0x5f1: v5f1(0x0) = CONST 
0x5f3: v5f3(0xb) = CONST 
0x5f5: v5f5(0x0) = CONST 
0x5f7: v5f7(0x100) = CONST 
0x5fa: v5fa(0x1) = EXP v5f7(0x100) v5f5(0x0)
0x5fc: v5fc = SLOAD v5f3(0xb)
0x5fe: v5fe(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x613: v613(0xffffffffffffffffffffffffffffffffffffffff) = MUL v5fe(0xffffffffffffffffffffffffffffffffffffffff) v5fa(0x1)
0x614: v614(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v613(0xffffffffffffffffffffffffffffffffffffffff)
0x615: v615 = AND v614(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v5fc
0x618: v618(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x62d: v62d(0x0) = AND v618(0xffffffffffffffffffffffffffffffffffffffff) v5f1(0x0)
0x62e: v62e(0x0) = MUL v62d(0x0) v5fa(0x1)
0x62f: v62f = OR v62e(0x0) v615
0x631: SSTORE v5f3(0xb) v62f
0x633: JUMP v2c7(0x2ce)
----------------------------------

Begin block 0x634
prev = {'0x2dc'}, next = {'0x2e5'}
----------------------------------
Block 0x634
0x635: v635(0x0) = CONST 
0x637: v637(0xb) = CONST 
0x639: v639(0x0) = CONST 
0x63c: v63c = SLOAD v637(0xb)
0x63e: v63e(0x100) = CONST 
0x641: v641(0x1) = EXP v63e(0x100) v639(0x0)
0x643: v643 = DIV v63c v641(0x1)
0x644: v644(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x659: v659 = AND v644(0xffffffffffffffffffffffffffffffffffffffff) v643
0x65d: JUMP v2de(0x2e5)
----------------------------------

Begin block 0x65e
prev = {}, next = {}
----------------------------------
function 0x65e(v65earg0)
Block 0x65e
0x65f: v65f(0x0) = CONST 
0x661: v661(0xb) = CONST 
0x663: v663(0x0) = CONST 
0x666: v666 = SLOAD v661(0xb)
0x668: v668(0x100) = CONST 
0x66b: v66b(0x1) = EXP v668(0x100) v663(0x0)
0x66d: v66d = DIV v666 v66b(0x1)
0x66e: v66e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x683: v683 = AND v66e(0xffffffffffffffffffffffffffffffffffffffff) v66d
0x684: v684(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x699: v699 = AND v684(0xffffffffffffffffffffffffffffffffffffffff) v683
0x69a: v69a = CALLER 
0x69b: v69b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x6b0: v6b0 = AND v69b(0xffffffffffffffffffffffffffffffffffffffff) v69a
0x6b1: v6b1 = EQ v6b0 v699
0x6b5: RETURNPRIVATE v65earg0 v6b1
----------------------------------

Begin block 0x6b6
prev = {'0x362'}, next = {'0x36b'}
----------------------------------
Block 0x6b6
0x6b7: v6b7(0x4) = CONST 
0x6ba: JUMP v364(0x36b)
----------------------------------

Begin block 0x6bb
prev = {'0x38d'}, next = {'0x396'}
----------------------------------
Block 0x6bb
0x6bc: v6bc(0x3) = CONST 
0x6bf: JUMP v38f(0x396)
----------------------------------

Begin block 0x6c0
prev = {'0x3b8'}, next = {'0x3c1'}
----------------------------------
Block 0x6c0
0x6c1: v6c1(0x4) = CONST 
0x6c3: v6c3 = SLOAD v6c1(0x4)
0x6c5: JUMP v3ba(0x3c1)
----------------------------------

Begin block 0x6c6
prev = {'0x3e3'}, next = {'0x3ec'}
----------------------------------
Block 0x6c6
0x6c7: v6c7(0x2) = CONST 
0x6c9: v6c9(0x0) = CONST 
0x6cc: v6cc = SLOAD v6c7(0x2)
0x6ce: v6ce(0x100) = CONST 
0x6d1: v6d1(0x1) = EXP v6ce(0x100) v6c9(0x0)
0x6d3: v6d3 = DIV v6cc v6d1(0x1)
0x6d4: v6d4(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x6e9: v6e9 = AND v6d4(0xffffffffffffffffffffffffffffffffffffffff) v6d3
0x6eb: JUMP v3e5(0x3ec)
----------------------------------

Begin block 0x6ec
prev = {'0x43a'}, next = {'0x6f4'}
----------------------------------
Block 0x6ec
0x6ed: v6ed(0x6f4) = CONST 
0x6f0: v6f0(0x65e) = CONST 
0x6f3: v6f3_0 = CALLPRIVATE v6f0(0x65e) v6ed(0x6f4)
----------------------------------

Begin block 0x6f4
prev = {'0x6ec'}, next = {'0x6ff', '0x6fb'}
----------------------------------
Block 0x6f4
0x6f5: v6f5 = ISZERO v6f3_0
0x6f6: v6f6 = ISZERO v6f5
0x6f7: v6f7(0x6ff) = CONST 
0x6fa: JUMPI v6f7(0x6ff) v6f6
----------------------------------

Begin block 0x6fb
prev = {'0x6f4'}, next = {}
----------------------------------
Block 0x6fb
0x6fb: v6fb(0x0) = CONST 
0x6fe: REVERT v6fb(0x0) v6fb(0x0)
----------------------------------

Begin block 0x6ff
prev = {'0x6f4'}, next = {'0x731'}
----------------------------------
Block 0x6ff
0x700: v700(0x708) = CONST 
0x704: v704(0x731) = CONST 
0x707: JUMP v704(0x731)
----------------------------------

Begin block 0x708
prev = {'0x76d'}, next = {'0x46f'}
----------------------------------
Block 0x708
0x70a: JUMP v43c(0x46f)
----------------------------------

Begin block 0x70b
prev = {'0x47d'}, next = {'0x486'}
----------------------------------
Block 0x70b
0x70c: v70c(0x1) = CONST 
0x70e: v70e(0x0) = CONST 
0x711: v711 = SLOAD v70c(0x1)
0x713: v713(0x100) = CONST 
0x716: v716(0x1) = EXP v713(0x100) v70e(0x0)
0x718: v718 = DIV v711 v716(0x1)
0x719: v719(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x72e: v72e = AND v719(0xffffffffffffffffffffffffffffffffffffffff) v718
0x730: JUMP v47f(0x486)
----------------------------------

Begin block 0x731
prev = {'0x6ff'}, next = {'0x769', '0x76d'}
----------------------------------
Block 0x731
0x732: v732(0x0) = CONST 
0x734: v734(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x749: v749(0x0) = AND v734(0xffffffffffffffffffffffffffffffffffffffff) v732(0x0)
0x74b: v74b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x760: v760 = AND v74b(0xffffffffffffffffffffffffffffffffffffffff) v45f
0x761: v761 = EQ v760 v749(0x0)
0x762: v762 = ISZERO v761
0x763: v763 = ISZERO v762
0x764: v764 = ISZERO v763
0x765: v765(0x76d) = CONST 
0x768: JUMPI v765(0x76d) v764
----------------------------------

Begin block 0x769
prev = {'0x731'}, next = {}
----------------------------------
Block 0x769
0x769: v769(0x0) = CONST 
0x76c: REVERT v769(0x0) v769(0x0)
----------------------------------

Begin block 0x76d
prev = {'0x731'}, next = {'0x708'}
----------------------------------
Block 0x76d
0x76f: v76f(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x784: v784 = AND v76f(0xffffffffffffffffffffffffffffffffffffffff) v45f
0x785: v785(0xb) = CONST 
0x787: v787(0x0) = CONST 
0x78a: v78a = SLOAD v785(0xb)
0x78c: v78c(0x100) = CONST 
0x78f: v78f(0x1) = EXP v78c(0x100) v787(0x0)
0x791: v791 = DIV v78a v78f(0x1)
0x792: v792(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x7a7: v7a7 = AND v792(0xffffffffffffffffffffffffffffffffffffffff) v791
0x7a8: v7a8(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x7bd: v7bd = AND v7a8(0xffffffffffffffffffffffffffffffffffffffff) v7a7
0x7be: v7be(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x7df: v7df(0x40) = CONST 
0x7e1: v7e1 = MLOAD v7df(0x40)
0x7e2: v7e2(0x40) = CONST 
0x7e4: v7e4 = MLOAD v7e2(0x40)
0x7e7: v7e7 = SUB v7e1 v7e4
0x7e9: LOG3 v7e4 v7e7 v7be(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v7bd v784
0x7eb: v7eb(0xb) = CONST 
0x7ed: v7ed(0x0) = CONST 
0x7ef: v7ef(0x100) = CONST 
0x7f2: v7f2(0x1) = EXP v7ef(0x100) v7ed(0x0)
0x7f4: v7f4 = SLOAD v7eb(0xb)
0x7f6: v7f6(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x80b: v80b(0xffffffffffffffffffffffffffffffffffffffff) = MUL v7f6(0xffffffffffffffffffffffffffffffffffffffff) v7f2(0x1)
0x80c: v80c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v80b(0xffffffffffffffffffffffffffffffffffffffff)
0x80d: v80d = AND v80c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v7f4
0x810: v810(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x825: v825 = AND v810(0xffffffffffffffffffffffffffffffffffffffff) v45f
0x826: v826 = MUL v825 v7f2(0x1)
0x827: v827 = OR v826 v80d
0x829: SSTORE v7eb(0xb) v827
0x82c: JUMP v700(0x708)
----------------------------------

Begin block 0x874
prev = {'0xdb', '0x0'}, next = {}
----------------------------------
Block 0x874
0x875: v875(0xe6) = CONST 
0x876: CALLPRIVATE v875(0xe6)
----------------------------------

Begin block 0x877
prev = {'0xd'}, next = {}
----------------------------------
Block 0x877
0x878: v878(0x148) = CONST 
0x879: CALLPRIVATE v878(0x148)
----------------------------------

Begin block 0x87a
prev = {'0x41'}, next = {}
----------------------------------
Block 0x87a
0x87b: v87b(0x173) = CONST 
0x87c: CALLPRIVATE v87b(0x173)
----------------------------------

Begin block 0x87d
prev = {'0x4c'}, next = {}
----------------------------------
Block 0x87d
0x87e: v87e(0x19e) = CONST 
0x87f: CALLPRIVATE v87e(0x19e)
----------------------------------

Begin block 0x880
prev = {'0x57'}, next = {}
----------------------------------
Block 0x880
0x881: v881(0x1c9) = CONST 
0x882: CALLPRIVATE v881(0x1c9)
----------------------------------

Begin block 0x883
prev = {'0x62'}, next = {}
----------------------------------
Block 0x883
0x884: v884(0x220) = CONST 
0x885: CALLPRIVATE v884(0x220)
----------------------------------

Begin block 0x886
prev = {'0x6d'}, next = {}
----------------------------------
Block 0x886
0x887: v887(0x24b) = CONST 
0x888: CALLPRIVATE v887(0x24b)
----------------------------------

Begin block 0x889
prev = {'0x78'}, next = {}
----------------------------------
Block 0x889
0x88a: v88a(0x28e) = CONST 
0x88b: CALLPRIVATE v88a(0x28e)
----------------------------------

Begin block 0x88c
prev = {'0x83'}, next = {}
----------------------------------
Block 0x88c
0x88d: v88d(0x2b9) = CONST 
0x88e: CALLPRIVATE v88d(0x2b9)
----------------------------------

Begin block 0x88f
prev = {'0x8e'}, next = {}
----------------------------------
Block 0x88f
0x890: v890(0x2d0) = CONST 
0x891: CALLPRIVATE v890(0x2d0)
----------------------------------

Begin block 0x892
prev = {'0x99'}, next = {}
----------------------------------
Block 0x892
0x893: v893(0x327) = CONST 
0x894: CALLPRIVATE v893(0x327)
----------------------------------

Begin block 0x895
prev = {'0xa4'}, next = {}
----------------------------------
Block 0x895
0x896: v896(0x356) = CONST 
0x897: CALLPRIVATE v896(0x356)
----------------------------------

Begin block 0x898
prev = {'0xaf'}, next = {}
----------------------------------
Block 0x898
0x899: v899(0x381) = CONST 
0x89a: CALLPRIVATE v899(0x381)
----------------------------------

Begin block 0x89b
prev = {'0xba'}, next = {}
----------------------------------
Block 0x89b
0x89c: v89c(0x3ac) = CONST 
0x89d: CALLPRIVATE v89c(0x3ac)
----------------------------------

Begin block 0x89e
prev = {'0xc5'}, next = {}
----------------------------------
Block 0x89e
0x89f: v89f(0x3d7) = CONST 
0x8a0: CALLPRIVATE v89f(0x3d7)
----------------------------------

Begin block 0x8a1
prev = {'0xd0'}, next = {}
----------------------------------
Block 0x8a1
0x8a2: v8a2(0x42e) = CONST 
0x8a3: CALLPRIVATE v8a2(0x42e)
----------------------------------

Begin block 0x8a4
prev = {'0xdb'}, next = {}
----------------------------------
Block 0x8a4
0x8a5: v8a5(0x471) = CONST 
0x8a6: CALLPRIVATE v8a5(0x471)
----------------------------------
