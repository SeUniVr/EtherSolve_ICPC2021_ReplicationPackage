
Begin block 0x0
prev = {}, next = {'0x194f', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x1917: v1917(0x194f) = CONST 
0x1918: JUMPI v1917(0x194f) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x1e', '0xec'}
----------------------------------
Block 0xd
0xd: vd(0x0) = CONST 
0xf: vf = CALLDATALOAD vd(0x0)
0x10: v10(0xe0) = CONST 
0x12: v12 = SHR v10(0xe0) vf
0x14: v14(0x5f71f317) = CONST 
0x19: v19 = GT v14(0x5f71f317) v12
0x1a: v1a(0xec) = CONST 
0x1d: JUMPI v1a(0xec) v19
----------------------------------

Begin block 0x1e
prev = {'0xd'}, next = {'0x29', '0x8a'}
----------------------------------
Block 0x1e
0x1f: v1f(0x95367758) = CONST 
0x24: v24 = GT v1f(0x95367758) v12
0x25: v25(0x8a) = CONST 
0x28: JUMPI v25(0x8a) v24
----------------------------------

Begin block 0x29
prev = {'0x1e'}, next = {'0x34', '0x64'}
----------------------------------
Block 0x29
0x2a: v2a(0xb1770991) = CONST 
0x2f: v2f = GT v2a(0xb1770991) v12
0x30: v30(0x64) = CONST 
0x33: JUMPI v30(0x64) v2f
----------------------------------

Begin block 0x34
prev = {'0x29'}, next = {'0x1997', '0x3f'}
----------------------------------
Block 0x34
0x35: v35(0xb1770991) = CONST 
0x3a: v3a = EQ v35(0xb1770991) v12
0x1919: v1919(0x1997) = CONST 
0x191a: JUMPI v1919(0x1997) v3a
----------------------------------

Begin block 0x3f
prev = {'0x34'}, next = {'0x4a', '0x199a'}
----------------------------------
Block 0x3f
0x40: v40(0xd1ac6235) = CONST 
0x45: v45 = EQ v40(0xd1ac6235) v12
0x191b: v191b(0x199a) = CONST 
0x191c: JUMPI v191b(0x199a) v45
----------------------------------

Begin block 0x4a
prev = {'0x3f'}, next = {'0x55', '0x199d'}
----------------------------------
Block 0x4a
0x4b: v4b(0xd4ee1d90) = CONST 
0x50: v50 = EQ v4b(0xd4ee1d90) v12
0x191d: v191d(0x199d) = CONST 
0x191e: JUMPI v191d(0x199d) v50
----------------------------------

Begin block 0x55
prev = {'0x4a'}, next = {'0x60', '0x19a0'}
----------------------------------
Block 0x55
0x56: v56(0xf2fde38b) = CONST 
0x5b: v5b = EQ v56(0xf2fde38b) v12
0x191f: v191f(0x19a0) = CONST 
0x1920: JUMPI v191f(0x19a0) v5b
----------------------------------

Begin block 0x60
prev = {'0x55'}, next = {'0x19c0x0'}
----------------------------------
Block 0x60
0x60: v60(0x19c) = CONST 
0x63: JUMP v60(0x19c)
----------------------------------

Begin block 0x64
prev = {'0x29'}, next = {'0x198e', '0x70'}
----------------------------------
Block 0x64
0x66: v66(0x95367758) = CONST 
0x6b: v6b = EQ v66(0x95367758) v12
0x1921: v1921(0x198e) = CONST 
0x1922: JUMPI v1921(0x198e) v6b
----------------------------------

Begin block 0x70
prev = {'0x64'}, next = {'0x7b', '0x1991'}
----------------------------------
Block 0x70
0x71: v71(0x95d89b41) = CONST 
0x76: v76 = EQ v71(0x95d89b41) v12
0x1923: v1923(0x1991) = CONST 
0x1924: JUMPI v1923(0x1991) v76
----------------------------------

Begin block 0x7b
prev = {'0x70'}, next = {'0x1994', '0x86'}
----------------------------------
Block 0x7b
0x7c: v7c(0xa9059cbb) = CONST 
0x81: v81 = EQ v7c(0xa9059cbb) v12
0x1925: v1925(0x1994) = CONST 
0x1926: JUMPI v1925(0x1994) v81
----------------------------------

Begin block 0x86
prev = {'0x7b'}, next = {'0x19c0x0'}
----------------------------------
Block 0x86
0x86: v86(0x19c) = CONST 
0x89: JUMP v86(0x19c)
----------------------------------

Begin block 0x8a
prev = {'0x1e'}, next = {'0x96', '0xc6'}
----------------------------------
Block 0x8a
0x8c: v8c(0x78e97925) = CONST 
0x91: v91 = GT v8c(0x78e97925) v12
0x92: v92(0xc6) = CONST 
0x95: JUMPI v92(0xc6) v91
----------------------------------

Begin block 0x96
prev = {'0x8a'}, next = {'0x1982', '0xa1'}
----------------------------------
Block 0x96
0x97: v97(0x78e97925) = CONST 
0x9c: v9c = EQ v97(0x78e97925) v12
0x1927: v1927(0x1982) = CONST 
0x1928: JUMPI v1927(0x1982) v9c
----------------------------------

Begin block 0xa1
prev = {'0x96'}, next = {'0x1985', '0xac'}
----------------------------------
Block 0xa1
0xa2: va2(0x79ba5097) = CONST 
0xa7: va7 = EQ va2(0x79ba5097) v12
0x1929: v1929(0x1985) = CONST 
0x192a: JUMPI v1929(0x1985) va7
----------------------------------

Begin block 0xac
prev = {'0xa1'}, next = {'0xb7', '0x1988'}
----------------------------------
Block 0xac
0xad: vad(0x8b3948bd) = CONST 
0xb2: vb2 = EQ vad(0x8b3948bd) v12
0x192b: v192b(0x1988) = CONST 
0x192c: JUMPI v192b(0x1988) vb2
----------------------------------

Begin block 0xb7
prev = {'0xac'}, next = {'0xc2', '0x198b'}
----------------------------------
Block 0xb7
0xb8: vb8(0x8da5cb5b) = CONST 
0xbd: vbd = EQ vb8(0x8da5cb5b) v12
0x192d: v192d(0x198b) = CONST 
0x192e: JUMPI v192d(0x198b) vbd
----------------------------------

Begin block 0xc2
prev = {'0xb7'}, next = {'0x19c0x0'}
----------------------------------
Block 0xc2
0xc2: vc2(0x19c) = CONST 
0xc5: JUMP vc2(0x19c)
----------------------------------

Begin block 0xc6
prev = {'0x8a'}, next = {'0xd2', '0x1979'}
----------------------------------
Block 0xc6
0xc8: vc8(0x5f71f317) = CONST 
0xcd: vcd = EQ vc8(0x5f71f317) v12
0x192f: v192f(0x1979) = CONST 
0x1930: JUMPI v192f(0x1979) vcd
----------------------------------

Begin block 0xd2
prev = {'0xc6'}, next = {'0x197c', '0xdd'}
----------------------------------
Block 0xd2
0xd3: vd3(0x675cef14) = CONST 
0xd8: vd8 = EQ vd3(0x675cef14) v12
0x1931: v1931(0x197c) = CONST 
0x1932: JUMPI v1931(0x197c) vd8
----------------------------------

Begin block 0xdd
prev = {'0xd2'}, next = {'0xe8', '0x197f'}
----------------------------------
Block 0xdd
0xde: vde(0x70a08231) = CONST 
0xe3: ve3 = EQ vde(0x70a08231) v12
0x1933: v1933(0x197f) = CONST 
0x1934: JUMPI v1933(0x197f) ve3
----------------------------------

Begin block 0xe8
prev = {'0xdd'}, next = {'0x19c0x0'}
----------------------------------
Block 0xe8
0xe8: ve8(0x19c) = CONST 
0xeb: JUMP ve8(0x19c)
----------------------------------

Begin block 0xec
prev = {'0xd'}, next = {'0xf8', '0x159'}
----------------------------------
Block 0xec
0xee: vee(0x3197cbb6) = CONST 
0xf3: vf3 = GT vee(0x3197cbb6) v12
0xf4: vf4(0x159) = CONST 
0xf7: JUMPI vf4(0x159) vf3
----------------------------------

Begin block 0xf8
prev = {'0xec'}, next = {'0x133', '0x103'}
----------------------------------
Block 0xf8
0xf9: vf9(0x4b6f6710) = CONST 
0xfe: vfe = GT vf9(0x4b6f6710) v12
0xff: vff(0x133) = CONST 
0x102: JUMPI vff(0x133) vfe
----------------------------------

Begin block 0x103
prev = {'0xf8'}, next = {'0x10e', '0x196d'}
----------------------------------
Block 0x103
0x104: v104(0x4b6f6710) = CONST 
0x109: v109 = EQ v104(0x4b6f6710) v12
0x1935: v1935(0x196d) = CONST 
0x1936: JUMPI v1935(0x196d) v109
----------------------------------

Begin block 0x10e
prev = {'0x103'}, next = {'0x1970', '0x119'}
----------------------------------
Block 0x10e
0x10f: v10f(0x521eb273) = CONST 
0x114: v114 = EQ v10f(0x521eb273) v12
0x1937: v1937(0x1970) = CONST 
0x1938: JUMPI v1937(0x1970) v114
----------------------------------

Begin block 0x119
prev = {'0x10e'}, next = {'0x1973', '0x124'}
----------------------------------
Block 0x119
0x11a: v11a(0x55a373d6) = CONST 
0x11f: v11f = EQ v11a(0x55a373d6) v12
0x1939: v1939(0x1973) = CONST 
0x193a: JUMPI v1939(0x1973) v11f
----------------------------------

Begin block 0x124
prev = {'0x119'}, next = {'0x1976', '0x12f'}
----------------------------------
Block 0x124
0x125: v125(0x59d4bc64) = CONST 
0x12a: v12a = EQ v125(0x59d4bc64) v12
0x193b: v193b(0x1976) = CONST 
0x193c: JUMPI v193b(0x1976) v12a
----------------------------------

Begin block 0x12f
prev = {'0x124'}, next = {'0x19c0x0'}
----------------------------------
Block 0x12f
0x12f: v12f(0x19c) = CONST 
0x132: JUMP v12f(0x19c)
----------------------------------

Begin block 0x133
prev = {'0xf8'}, next = {'0x13f', '0x1964'}
----------------------------------
Block 0x133
0x135: v135(0x3197cbb6) = CONST 
0x13a: v13a = EQ v135(0x3197cbb6) v12
0x193d: v193d(0x1964) = CONST 
0x193e: JUMPI v193d(0x1964) v13a
----------------------------------

Begin block 0x13f
prev = {'0x133'}, next = {'0x1967', '0x14a'}
----------------------------------
Block 0x13f
0x140: v140(0x3a0b5b0f) = CONST 
0x145: v145 = EQ v140(0x3a0b5b0f) v12
0x193f: v193f(0x1967) = CONST 
0x1940: JUMPI v193f(0x1967) v145
----------------------------------

Begin block 0x14a
prev = {'0x13f'}, next = {'0x196a', '0x155'}
----------------------------------
Block 0x14a
0x14b: v14b(0x452b614f) = CONST 
0x150: v150 = EQ v14b(0x452b614f) v12
0x1941: v1941(0x196a) = CONST 
0x1942: JUMPI v1941(0x196a) v150
----------------------------------

Begin block 0x155
prev = {'0x14a'}, next = {'0x19c0x0'}
----------------------------------
Block 0x155
0x155: v155(0x19c) = CONST 
0x158: JUMP v155(0x19c)
----------------------------------

Begin block 0x159
prev = {'0xec'}, next = {'0x1952', '0x165'}
----------------------------------
Block 0x159
0x15b: v15b(0x24801f0) = CONST 
0x160: v160 = EQ v15b(0x24801f0) v12
0x1943: v1943(0x1952) = CONST 
0x1944: JUMPI v1943(0x1952) v160
----------------------------------

Begin block 0x165
prev = {'0x159'}, next = {'0x170', '0x1955'}
----------------------------------
Block 0x165
0x166: v166(0x6b091f9) = CONST 
0x16b: v16b = EQ v166(0x6b091f9) v12
0x1945: v1945(0x1955) = CONST 
0x1946: JUMPI v1945(0x1955) v16b
----------------------------------

Begin block 0x170
prev = {'0x165'}, next = {'0x1958', '0x17b'}
----------------------------------
Block 0x170
0x171: v171(0x6fdde03) = CONST 
0x176: v176 = EQ v171(0x6fdde03) v12
0x1947: v1947(0x1958) = CONST 
0x1948: JUMPI v1947(0x1958) v176
----------------------------------

Begin block 0x17b
prev = {'0x170'}, next = {'0x195b', '0x186'}
----------------------------------
Block 0x17b
0x17c: v17c(0x12111168) = CONST 
0x181: v181 = EQ v17c(0x12111168) v12
0x1949: v1949(0x195b) = CONST 
0x194a: JUMPI v1949(0x195b) v181
----------------------------------

Begin block 0x186
prev = {'0x17b'}, next = {'0x191', '0x195e'}
----------------------------------
Block 0x186
0x187: v187(0x18160ddd) = CONST 
0x18c: v18c = EQ v187(0x18160ddd) v12
0x194b: v194b(0x195e) = CONST 
0x194c: JUMPI v194b(0x195e) v18c
----------------------------------

Begin block 0x191
prev = {'0x186'}, next = {'0x194f', '0x1961'}
----------------------------------
Block 0x191
0x192: v192(0x313ce567) = CONST 
0x197: v197 = EQ v192(0x313ce567) v12
0x194d: v194d(0x1961) = CONST 
0x194e: JUMPI v194d(0x1961) v197
----------------------------------

Begin block 0x19c
prev = {}, next = {'0x1a50x19c'}
----------------------------------
function batchLock_63efZf()()
Block 0x19c
0x19d: v19d(0x1a5) = CONST 
0x1a0: v1a0 = CALLER 
0x1a1: v1a1(0x8cc) = CONST 
0x1a4: CALLPRIVATE v1a1(0x8cc) v1a0 v19d(0x1a5)
----------------------------------

Begin block 0x19c0x0
prev = {'0x60', '0x194f', '0x86', '0xe8', '0xc2', '0x12f', '0x155'}, next = {'0x1a50x0'}
----------------------------------
Block 0x19c0x0
0x19d0x0: v019d(0x1a5) = CONST 
0x1a00x0: v01a0 = CALLER 
0x1a10x0: v01a1(0x8cc) = CONST 
0x1a40x0: CALLPRIVATE v01a1(0x8cc) v01a0 v019d(0x1a5)
----------------------------------

Begin block 0x1a50x0
prev = {'0x19c0x0'}, next = {}
----------------------------------
Block 0x1a50x0
0x1a60x0: STOP 
----------------------------------

Begin block 0x1a50x19c
prev = {'0x19c'}, next = {}
----------------------------------
Block 0x1a50x19c
0x1a60x19c: STOP 
----------------------------------

Begin block 0x1a50x342
prev = {'0xef8'}, next = {}
----------------------------------
Block 0x1a50x342
0x1a60x342: STOP 
----------------------------------

Begin block 0x1a50x52b
prev = {'0x1057'}, next = {}
----------------------------------
Block 0x1a50x52b
0x1a60x52b: STOP 
----------------------------------

Begin block 0x1a50x5bb
prev = {'0x10f3'}, next = {}
----------------------------------
Block 0x1a50x5bb
0x1a60x5bb: STOP 
----------------------------------

Begin block 0x1a50x5fa
prev = {'0x1423'}, next = {}
----------------------------------
Block 0x1a50x5fa
0x1a60x5fa: STOP 
----------------------------------

Begin block 0x1a50x7c1
prev = {'0x1546'}, next = {}
----------------------------------
Block 0x1a50x7c1
0x1a60x7c1: STOP 
----------------------------------

Begin block 0x1a50x899
prev = {'0x160f'}, next = {}
----------------------------------
Block 0x1a50x899
0x1a60x899: STOP 
----------------------------------

Begin block 0x1a7
prev = {}, next = {'0x1b3', '0x1af'}
----------------------------------
function tknLocked()()
Block 0x1a7
0x1a8: v1a8 = CALLVALUE 
0x1aa: v1aa = ISZERO v1a8
0x1ab: v1ab(0x1b3) = CONST 
0x1ae: JUMPI v1ab(0x1b3) v1aa
----------------------------------

Begin block 0x1af
prev = {'0x1a7'}, next = {}
----------------------------------
Block 0x1af
0x1af: v1af(0x0) = CONST 
0x1b2: REVERT v1af(0x0) v1af(0x0)
----------------------------------

Begin block 0x1b3
prev = {'0x1a7'}, next = {'0xc83'}
----------------------------------
Block 0x1b3
0x1b5: v1b5(0x1bc) = CONST 
0x1b8: v1b8(0xc83) = CONST 
0x1bb: JUMP v1b8(0xc83)
----------------------------------

Begin block 0x1bc0x1a7
prev = {'0xc83'}, next = {}
----------------------------------
Block 0x1bc0x1a7
0x1bd0x1a7: v1a71bd(0x40) = CONST 
0x1c00x1a7: v1a71c0 = MLOAD v1a71bd(0x40)
0x1c30x1a7: MSTORE v1a71c0 vc86
0x1c40x1a7: v1a71c4 = MLOAD v1a71bd(0x40)
0x1c80x1a7: v1a71c8 = SUB v1a71c0 v1a71c4
0x1c90x1a7: v1a71c9(0x20) = CONST 
0x1cb0x1a7: v1a71cb = ADD v1a71c9(0x20) v1a71c8
0x1cd0x1a7: RETURN v1a71c4 v1a71cb
----------------------------------

Begin block 0x1bc0x2a5
prev = {'0xdf8'}, next = {}
----------------------------------
Block 0x1bc0x2a5
0x1bd0x2a5: v2a51bd(0x40) = CONST 
0x1c00x2a5: v2a51c0 = MLOAD v2a51bd(0x40)
0x1c30x2a5: MSTORE v2a51c0 ve07
0x1c40x2a5: v2a51c4 = MLOAD v2a51bd(0x40)
0x1c80x2a5: v2a51c8 = SUB v2a51c0 v2a51c4
0x1c90x2a5: v2a51c9(0x20) = CONST 
0x1cb0x2a5: v2a51cb = ADD v2a51c9(0x20) v2a51c8
0x1cd0x2a5: RETURN v2a51c4 v2a51cb
----------------------------------

Begin block 0x1bc0x2d8
prev = {'0x2e4'}, next = {}
----------------------------------
Block 0x1bc0x2d8
0x1bd0x2d8: v2d81bd(0x40) = CONST 
0x1c00x2d8: v2d81c0 = MLOAD v2d81bd(0x40)
0x1c30x2d8: MSTORE v2d81c0 v2ec_0
0x1c40x2d8: v2d81c4 = MLOAD v2d81bd(0x40)
0x1c80x2d8: v2d81c8 = SUB v2d81c0 v2d81c4
0x1c90x2d8: v2d81c9(0x20) = CONST 
0x1cb0x2d8: v2d81cb = ADD v2d81c9(0x20) v2d81c8
0x1cd0x2d8: RETURN v2d81c4 v2d81cb
----------------------------------

Begin block 0x1bc0x318
prev = {'0xe1a'}, next = {}
----------------------------------
Block 0x1bc0x318
0x1bd0x318: v3181bd(0x40) = CONST 
0x1c00x318: v3181c0 = MLOAD v3181bd(0x40)
0x1c30x318: MSTORE v3181c0 ve1d
0x1c40x318: v3181c4 = MLOAD v3181bd(0x40)
0x1c80x318: v3181c8 = SUB v3181c0 v3181c4
0x1c90x318: v3181c9(0x20) = CONST 
0x1cb0x318: v3181cb = ADD v3181c9(0x20) v3181c8
0x1cd0x318: RETURN v3181c4 v3181cb
----------------------------------

Begin block 0x1bc0x32d
prev = {'0x339'}, next = {}
----------------------------------
Block 0x1bc0x32d
0x1bd0x32d: v32d1bd(0x40) = CONST 
0x1c00x32d: v32d1c0 = MLOAD v32d1bd(0x40)
0x1c30x32d: MSTORE v32d1c0 v341_0
0x1c40x32d: v32d1c4 = MLOAD v32d1bd(0x40)
0x1c80x32d: v32d1c8 = SUB v32d1c0 v32d1c4
0x1c90x32d: v32d1c9(0x20) = CONST 
0x1cb0x32d: v32d1cb = ADD v32d1c9(0x20) v32d1c8
0x1cd0x32d: RETURN v32d1c4 v32d1cb
----------------------------------

Begin block 0x1bc0x516
prev = {'0xf80'}, next = {}
----------------------------------
Block 0x1bc0x516
0x1bd0x516: v5161bd(0x40) = CONST 
0x1c00x516: v5161c0 = MLOAD v5161bd(0x40)
0x1c30x516: MSTORE v5161c0 vf83
0x1c40x516: v5161c4 = MLOAD v5161bd(0x40)
0x1c80x516: v5161c8 = SUB v5161c0 v5161c4
0x1c90x516: v5161c9(0x20) = CONST 
0x1cb0x516: v5161cb = ADD v5161c9(0x20) v5161c8
0x1cd0x516: RETURN v5161c4 v5161cb
----------------------------------

Begin block 0x1bc0x55e
prev = {'0x1074'}, next = {}
----------------------------------
Block 0x1bc0x55e
0x1bd0x55e: v55e1bd(0x40) = CONST 
0x1c00x55e: v55e1c0 = MLOAD v55e1bd(0x40)
0x1c30x55e: MSTORE v55e1c0 v1077
0x1c40x55e: v55e1c4 = MLOAD v55e1bd(0x40)
0x1c80x55e: v55e1c8 = SUB v55e1c0 v55e1c4
0x1c90x55e: v55e1c9(0x20) = CONST 
0x1cb0x55e: v55e1cb = ADD v55e1c9(0x20) v55e1c8
0x1cd0x55e: RETURN v55e1c4 v55e1cb
----------------------------------

Begin block 0x1bc0x573
prev = {'0x107a'}, next = {}
----------------------------------
Block 0x1bc0x573
0x1bd0x573: v5731bd(0x40) = CONST 
0x1c00x573: v5731c0 = MLOAD v5731bd(0x40)
0x1c30x573: MSTORE v5731c0 v1092
0x1c40x573: v5731c4 = MLOAD v5731bd(0x40)
0x1c80x573: v5731c8 = SUB v5731c0 v5731c4
0x1c90x573: v5731c9(0x20) = CONST 
0x1cb0x573: v5731cb = ADD v5731c9(0x20) v5731c8
0x1cd0x573: RETURN v5731c4 v5731cb
----------------------------------

Begin block 0x1bc0x5a6
prev = {'0x1095'}, next = {}
----------------------------------
Block 0x1bc0x5a6
0x1bd0x5a6: v5a61bd(0x40) = CONST 
0x1c00x5a6: v5a61c0 = MLOAD v5a61bd(0x40)
0x1c30x5a6: MSTORE v5a61c0 v1098
0x1c40x5a6: v5a61c4 = MLOAD v5a61bd(0x40)
0x1c80x5a6: v5a61c8 = SUB v5a61c0 v5a61c4
0x1c90x5a6: v5a61c9(0x20) = CONST 
0x1cb0x5a6: v5a61cb = ADD v5a61c9(0x20) v5a61c8
0x1cd0x5a6: RETURN v5a61c4 v5a61cb
----------------------------------

Begin block 0x1bc0x5d0
prev = {'0x5dc'}, next = {}
----------------------------------
Block 0x1bc0x5d0
0x1bd0x5d0: v5d01bd(0x40) = CONST 
0x1c00x5d0: v5d01c0 = MLOAD v5d01bd(0x40)
0x1c30x5d0: MSTORE v5d01c0 v5e4_0
0x1c40x5d0: v5d01c4 = MLOAD v5d01bd(0x40)
0x1c80x5d0: v5d01c8 = SUB v5d01c0 v5d01c4
0x1c90x5d0: v5d01c9(0x20) = CONST 
0x1cb0x5d0: v5d01cb = ADD v5d01c9(0x20) v5d01c8
0x1cd0x5d0: RETURN v5d01c4 v5d01cb
----------------------------------

Begin block 0x1bc0x86f
prev = {'0x154a'}, next = {}
----------------------------------
Block 0x1bc0x86f
0x1bd0x86f: v86f1bd(0x40) = CONST 
0x1c00x86f: v86f1c0 = MLOAD v86f1bd(0x40)
0x1c30x86f: MSTORE v86f1c0 v154d
0x1c40x86f: v86f1c4 = MLOAD v86f1bd(0x40)
0x1c80x86f: v86f1c8 = SUB v86f1c0 v86f1c4
0x1c90x86f: v86f1c9(0x20) = CONST 
0x1cb0x86f: v86f1cb = ADD v86f1c9(0x20) v86f1c8
0x1cd0x86f: RETURN v86f1c4 v86f1cb
----------------------------------

Begin block 0x1ce
prev = {}, next = {'0x1da', '0x1d6'}
----------------------------------
function withdrawTokens(address,uint256)()
Block 0x1ce
0x1cf: v1cf = CALLVALUE 
0x1d1: v1d1 = ISZERO v1cf
0x1d2: v1d2(0x1da) = CONST 
0x1d5: JUMPI v1d2(0x1da) v1d1
----------------------------------

Begin block 0x1d6
prev = {'0x1ce'}, next = {}
----------------------------------
Block 0x1d6
0x1d6: v1d6(0x0) = CONST 
0x1d9: REVERT v1d6(0x0) v1d6(0x0)
----------------------------------

Begin block 0x1da
prev = {'0x1ce'}, next = {'0x1f1', '0x1ed'}
----------------------------------
Block 0x1da
0x1dc: v1dc(0x207) = CONST 
0x1df: v1df(0x4) = CONST 
0x1e2: v1e2 = CALLDATASIZE 
0x1e3: v1e3 = SUB v1e2 v1df(0x4)
0x1e4: v1e4(0x40) = CONST 
0x1e7: v1e7 = LT v1e3 v1e4(0x40)
0x1e8: v1e8 = ISZERO v1e7
0x1e9: v1e9(0x1f1) = CONST 
0x1ec: JUMPI v1e9(0x1f1) v1e8
----------------------------------

Begin block 0x1ed
prev = {'0x1da'}, next = {}
----------------------------------
Block 0x1ed
0x1ed: v1ed(0x0) = CONST 
0x1f0: REVERT v1ed(0x0) v1ed(0x0)
----------------------------------

Begin block 0x1f1
prev = {'0x1da'}, next = {'0xc89'}
----------------------------------
Block 0x1f1
0x1f3: v1f3(0x1) = CONST 
0x1f5: v1f5(0x1) = CONST 
0x1f7: v1f7(0xa0) = CONST 
0x1f9: v1f9(0x10000000000000000000000000000000000000000) = SHL v1f7(0xa0) v1f5(0x1)
0x1fa: v1fa(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1f9(0x10000000000000000000000000000000000000000) v1f3(0x1)
0x1fc: v1fc = CALLDATALOAD v1df(0x4)
0x1fd: v1fd = AND v1fc v1fa(0xffffffffffffffffffffffffffffffffffffffff)
0x1ff: v1ff(0x20) = CONST 
0x201: v201 = ADD v1ff(0x20) v1df(0x4)
0x202: v202 = CALLDATALOAD v201
0x203: v203(0xc89) = CONST 
0x206: JUMP v203(0xc89)
----------------------------------

Begin block 0x207
prev = {'0xd640x1ce'}, next = {}
----------------------------------
Block 0x207
0x208: v208(0x40) = CONST 
0x20b: v20b = MLOAD v208(0x40)
0x20d: v20d = ISZERO vd61
0x20e: v20e = ISZERO v20d
0x210: MSTORE v20b v20e
0x211: v211 = MLOAD v208(0x40)
0x215: v215 = SUB v20b v211
0x216: v216(0x20) = CONST 
0x218: v218 = ADD v216(0x20) v215
0x21a: RETURN v211 v218
----------------------------------

Begin block 0x21b
prev = {}, next = {'0x223', '0x227'}
----------------------------------
function name()()
Block 0x21b
0x21c: v21c = CALLVALUE 
0x21e: v21e = ISZERO v21c
0x21f: v21f(0x227) = CONST 
0x222: JUMPI v21f(0x227) v21e
----------------------------------

Begin block 0x223
prev = {'0x21b'}, next = {}
----------------------------------
Block 0x223
0x223: v223(0x0) = CONST 
0x226: REVERT v223(0x0) v223(0x0)
----------------------------------

Begin block 0x227
prev = {'0x21b'}, next = {'0x2300x21b'}
----------------------------------
Block 0x227
0x229: v229(0x230) = CONST 
0x22c: v22c(0xd6a) = CONST 
0x22f: v22f_0, v22f_1 = CALLPRIVATE v22c(0xd6a) v229(0x230)
----------------------------------

Begin block 0x2300x21b
prev = {'0x227'}, next = {'0x2520x21b'}
----------------------------------
Block 0x2300x21b
0x2310x21b: v21b231(0x40) = CONST 
0x2340x21b: v21b234 = MLOAD v21b231(0x40)
0x2350x21b: v21b235(0x20) = CONST 
0x2390x21b: MSTORE v21b234 v21b235(0x20)
0x23b0x21b: v21b23b = MLOAD v22f_0
0x23e0x21b: v21b23e = ADD v21b234 v21b235(0x20)
0x23f0x21b: MSTORE v21b23e v21b23b
0x2410x21b: v21b241 = MLOAD v22f_0
0x2480x21b: v21b248 = ADD v21b234 v21b231(0x40)
0x24b0x21b: v21b24b = ADD v22f_0 v21b235(0x20)
0x2500x21b: v21b250(0x0) = CONST 
----------------------------------

Begin block 0x2300x773
prev = {'0x77f'}, next = {'0x2520x773'}
----------------------------------
Block 0x2300x773
0x2310x773: v773231(0x40) = CONST 
0x2340x773: v773234 = MLOAD v773231(0x40)
0x2350x773: v773235(0x20) = CONST 
0x2390x773: MSTORE v773234 v773235(0x20)
0x23b0x773: v77323b = MLOAD v787_0
0x23e0x773: v77323e = ADD v773234 v773235(0x20)
0x23f0x773: MSTORE v77323e v77323b
0x2410x773: v773241 = MLOAD v787_0
0x2480x773: v773248 = ADD v773234 v773231(0x40)
0x24b0x773: v77324b = ADD v787_0 v773235(0x20)
0x2500x773: v773250(0x0) = CONST 
----------------------------------

Begin block 0x2520x21b
prev = {'0x2300x21b', '0x25b0x21b'}, next = {'0x26a0x21b', '0x25b0x21b'}
----------------------------------
Block 0x2520x21b
0x2520x21b_0x0: v25221b_0 = PHI v21b250(0x0) v21b265
0x2550x21b: v21b255 = LT v25221b_0 v21b241
0x2560x21b: v21b256 = ISZERO v21b255
0x2570x21b: v21b257(0x26a) = CONST 
0x25a0x21b: JUMPI v21b257(0x26a) v21b256
----------------------------------

Begin block 0x2520x773
prev = {'0x25b0x773', '0x2300x773'}, next = {'0x25b0x773', '0x26a0x773'}
----------------------------------
Block 0x2520x773
0x2520x773_0x0: v252773_0 = PHI v773250(0x0) v773265
0x2550x773: v773255 = LT v252773_0 v773241
0x2560x773: v773256 = ISZERO v773255
0x2570x773: v773257(0x26a) = CONST 
0x25a0x773: JUMPI v773257(0x26a) v773256
----------------------------------

Begin block 0x25b0x21b
prev = {'0x2520x21b'}, next = {'0x2520x21b'}
----------------------------------
Block 0x25b0x21b
0x25b0x21b_0x0: v25b21b_0 = PHI v21b250(0x0) v21b265
0x25d0x21b: v21b25d = ADD v25b21b_0 v21b24b
0x25e0x21b: v21b25e = MLOAD v21b25d
0x2610x21b: v21b261 = ADD v25b21b_0 v21b248
0x2620x21b: MSTORE v21b261 v21b25e
0x2630x21b: v21b263(0x20) = CONST 
0x2650x21b: v21b265 = ADD v21b263(0x20) v25b21b_0
0x2660x21b: v21b266(0x252) = CONST 
0x2690x21b: JUMP v21b266(0x252)
----------------------------------

Begin block 0x25b0x773
prev = {'0x2520x773'}, next = {'0x2520x773'}
----------------------------------
Block 0x25b0x773
0x25b0x773_0x0: v25b773_0 = PHI v773250(0x0) v773265
0x25d0x773: v77325d = ADD v25b773_0 v77324b
0x25e0x773: v77325e = MLOAD v77325d
0x2610x773: v773261 = ADD v25b773_0 v773248
0x2620x773: MSTORE v773261 v77325e
0x2630x773: v773263(0x20) = CONST 
0x2650x773: v773265 = ADD v773263(0x20) v25b773_0
0x2660x773: v773266(0x252) = CONST 
0x2690x773: JUMP v773266(0x252)
----------------------------------

Begin block 0x26a0x21b
prev = {'0x2520x21b'}, next = {'0x2970x21b', '0x27e0x21b'}
----------------------------------
Block 0x26a0x21b
0x2730x21b: v21b273 = ADD v21b241 v21b248
0x2750x21b: v21b275(0x1f) = CONST 
0x2770x21b: v21b277 = AND v21b275(0x1f) v21b241
0x2790x21b: v21b279 = ISZERO v21b277
0x27a0x21b: v21b27a(0x297) = CONST 
0x27d0x21b: JUMPI v21b27a(0x297) v21b279
----------------------------------

Begin block 0x26a0x773
prev = {'0x2520x773'}, next = {'0x27e0x773', '0x2970x773'}
----------------------------------
Block 0x26a0x773
0x2730x773: v773273 = ADD v773241 v773248
0x2750x773: v773275(0x1f) = CONST 
0x2770x773: v773277 = AND v773275(0x1f) v773241
0x2790x773: v773279 = ISZERO v773277
0x27a0x773: v77327a(0x297) = CONST 
0x27d0x773: JUMPI v77327a(0x297) v773279
----------------------------------

Begin block 0x27e0x21b
prev = {'0x26a0x21b'}, next = {'0x2970x21b'}
----------------------------------
Block 0x27e0x21b
0x2800x21b: v21b280 = SUB v21b273 v21b277
0x2820x21b: v21b282 = MLOAD v21b280
0x2830x21b: v21b283(0x1) = CONST 
0x2860x21b: v21b286(0x20) = CONST 
0x2880x21b: v21b288 = SUB v21b286(0x20) v21b277
0x2890x21b: v21b289(0x100) = CONST 
0x28c0x21b: v21b28c = EXP v21b289(0x100) v21b288
0x28d0x21b: v21b28d = SUB v21b28c v21b283(0x1)
0x28e0x21b: v21b28e = NOT v21b28d
0x28f0x21b: v21b28f = AND v21b28e v21b282
0x2910x21b: MSTORE v21b280 v21b28f
0x2920x21b: v21b292(0x20) = CONST 
0x2940x21b: v21b294 = ADD v21b292(0x20) v21b280
----------------------------------

Begin block 0x27e0x773
prev = {'0x26a0x773'}, next = {'0x2970x773'}
----------------------------------
Block 0x27e0x773
0x2800x773: v773280 = SUB v773273 v773277
0x2820x773: v773282 = MLOAD v773280
0x2830x773: v773283(0x1) = CONST 
0x2860x773: v773286(0x20) = CONST 
0x2880x773: v773288 = SUB v773286(0x20) v773277
0x2890x773: v773289(0x100) = CONST 
0x28c0x773: v77328c = EXP v773289(0x100) v773288
0x28d0x773: v77328d = SUB v77328c v773283(0x1)
0x28e0x773: v77328e = NOT v77328d
0x28f0x773: v77328f = AND v77328e v773282
0x2910x773: MSTORE v773280 v77328f
0x2920x773: v773292(0x20) = CONST 
0x2940x773: v773294 = ADD v773292(0x20) v773280
----------------------------------

Begin block 0x2970x21b
prev = {'0x26a0x21b', '0x27e0x21b'}, next = {}
----------------------------------
Block 0x2970x21b
0x2970x21b_0x1: v29721b_1 = PHI v21b273 v21b294
0x29d0x21b: v21b29d(0x40) = CONST 
0x29f0x21b: v21b29f = MLOAD v21b29d(0x40)
0x2a20x21b: v21b2a2 = SUB v29721b_1 v21b29f
0x2a40x21b: RETURN v21b29f v21b2a2
----------------------------------

Begin block 0x2970x773
prev = {'0x27e0x773', '0x26a0x773'}, next = {}
----------------------------------
Block 0x2970x773
0x2970x773_0x1: v297773_1 = PHI v773273 v773294
0x29d0x773: v77329d(0x40) = CONST 
0x29f0x773: v77329f = MLOAD v77329d(0x40)
0x2a20x773: v7732a2 = SUB v297773_1 v77329f
0x2a40x773: RETURN v77329f v7732a2
----------------------------------

Begin block 0x2a5
prev = {}, next = {'0x2ad', '0x2b1'}
----------------------------------
function tknUserPending(address)()
Block 0x2a5
0x2a6: v2a6 = CALLVALUE 
0x2a8: v2a8 = ISZERO v2a6
0x2a9: v2a9(0x2b1) = CONST 
0x2ac: JUMPI v2a9(0x2b1) v2a8
----------------------------------

Begin block 0x2ad
prev = {'0x2a5'}, next = {}
----------------------------------
Block 0x2ad
0x2ad: v2ad(0x0) = CONST 
0x2b0: REVERT v2ad(0x0) v2ad(0x0)
----------------------------------

Begin block 0x2b1
prev = {'0x2a5'}, next = {'0x2c4', '0x2c8'}
----------------------------------
Block 0x2b1
0x2b3: v2b3(0x1bc) = CONST 
0x2b6: v2b6(0x4) = CONST 
0x2b9: v2b9 = CALLDATASIZE 
0x2ba: v2ba = SUB v2b9 v2b6(0x4)
0x2bb: v2bb(0x20) = CONST 
0x2be: v2be = LT v2ba v2bb(0x20)
0x2bf: v2bf = ISZERO v2be
0x2c0: v2c0(0x2c8) = CONST 
0x2c3: JUMPI v2c0(0x2c8) v2bf
----------------------------------

Begin block 0x2c4
prev = {'0x2b1'}, next = {}
----------------------------------
Block 0x2c4
0x2c4: v2c4(0x0) = CONST 
0x2c7: REVERT v2c4(0x0) v2c4(0x0)
----------------------------------

Begin block 0x2c8
prev = {'0x2b1'}, next = {'0xdf8'}
----------------------------------
Block 0x2c8
0x2ca: v2ca = CALLDATALOAD v2b6(0x4)
0x2cb: v2cb(0x1) = CONST 
0x2cd: v2cd(0x1) = CONST 
0x2cf: v2cf(0xa0) = CONST 
0x2d1: v2d1(0x10000000000000000000000000000000000000000) = SHL v2cf(0xa0) v2cd(0x1)
0x2d2: v2d2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2d1(0x10000000000000000000000000000000000000000) v2cb(0x1)
0x2d3: v2d3 = AND v2d2(0xffffffffffffffffffffffffffffffffffffffff) v2ca
0x2d4: v2d4(0xdf8) = CONST 
0x2d7: JUMP v2d4(0xdf8)
----------------------------------

Begin block 0x2d8
prev = {}, next = {'0x2e0', '0x2e4'}
----------------------------------
function totalSupply()()
Block 0x2d8
0x2d9: v2d9 = CALLVALUE 
0x2db: v2db = ISZERO v2d9
0x2dc: v2dc(0x2e4) = CONST 
0x2df: JUMPI v2dc(0x2e4) v2db
----------------------------------

Begin block 0x2e0
prev = {'0x2d8'}, next = {}
----------------------------------
Block 0x2e0
0x2e0: v2e0(0x0) = CONST 
0x2e3: REVERT v2e0(0x0) v2e0(0x0)
----------------------------------

Begin block 0x2e4
prev = {'0x2d8'}, next = {'0x1bc0x2d8'}
----------------------------------
Block 0x2e4
0x2e6: v2e6(0x1bc) = CONST 
0x2e9: v2e9(0xe0a) = CONST 
0x2ec: v2ec_0 = CALLPRIVATE v2e9(0xe0a) v2e6(0x1bc)
----------------------------------

Begin block 0x2ed
prev = {}, next = {'0x2f5', '0x2f9'}
----------------------------------
function decimals()()
Block 0x2ed
0x2ee: v2ee = CALLVALUE 
0x2f0: v2f0 = ISZERO v2ee
0x2f1: v2f1(0x2f9) = CONST 
0x2f4: JUMPI v2f1(0x2f9) v2f0
----------------------------------

Begin block 0x2f5
prev = {'0x2ed'}, next = {}
----------------------------------
Block 0x2f5
0x2f5: v2f5(0x0) = CONST 
0x2f8: REVERT v2f5(0x0) v2f5(0x0)
----------------------------------

Begin block 0x2f9
prev = {'0x2ed'}, next = {'0xe11'}
----------------------------------
Block 0x2f9
0x2fb: v2fb(0x302) = CONST 
0x2fe: v2fe(0xe11) = CONST 
0x301: JUMP v2fe(0xe11)
----------------------------------

Begin block 0x302
prev = {'0xe11'}, next = {}
----------------------------------
Block 0x302
0x303: v303(0x40) = CONST 
0x306: v306 = MLOAD v303(0x40)
0x307: v307(0xff) = CONST 
0x30b: v30b = AND ve17 v307(0xff)
0x30d: MSTORE v306 v30b
0x30e: v30e = MLOAD v303(0x40)
0x312: v312 = SUB v306 v30e
0x313: v313(0x20) = CONST 
0x315: v315 = ADD v313(0x20) v312
0x317: RETURN v30e v315
----------------------------------

Begin block 0x318
prev = {}, next = {'0x324', '0x320'}
----------------------------------
function endTime()()
Block 0x318
0x319: v319 = CALLVALUE 
0x31b: v31b = ISZERO v319
0x31c: v31c(0x324) = CONST 
0x31f: JUMPI v31c(0x324) v31b
----------------------------------

Begin block 0x320
prev = {'0x318'}, next = {}
----------------------------------
Block 0x320
0x320: v320(0x0) = CONST 
0x323: REVERT v320(0x0) v320(0x0)
----------------------------------

Begin block 0x324
prev = {'0x318'}, next = {'0xe1a'}
----------------------------------
Block 0x324
0x326: v326(0x1bc) = CONST 
0x329: v329(0xe1a) = CONST 
0x32c: JUMP v329(0xe1a)
----------------------------------

Begin block 0x32d
prev = {}, next = {'0x335', '0x339'}
----------------------------------
function priceTknEth()()
Block 0x32d
0x32e: v32e = CALLVALUE 
0x330: v330 = ISZERO v32e
0x331: v331(0x339) = CONST 
0x334: JUMPI v331(0x339) v330
----------------------------------

Begin block 0x335
prev = {'0x32d'}, next = {}
----------------------------------
Block 0x335
0x335: v335(0x0) = CONST 
0x338: REVERT v335(0x0) v335(0x0)
----------------------------------

Begin block 0x339
prev = {'0x32d'}, next = {'0x1bc0x32d'}
----------------------------------
Block 0x339
0x33b: v33b(0x1bc) = CONST 
0x33e: v33e(0xe20) = CONST 
0x341: v341_0 = CALLPRIVATE v33e(0xe20) v33b(0x1bc)
----------------------------------

Begin block 0x342
prev = {}, next = {'0x34a', '0x34e'}
----------------------------------
function init(address,address,string,string,uint8,uint256,uint256,uint256,address,uint256)()
Block 0x342
0x343: v343 = CALLVALUE 
0x345: v345 = ISZERO v343
0x346: v346(0x34e) = CONST 
0x349: JUMPI v346(0x34e) v345
----------------------------------

Begin block 0x34a
prev = {'0x342'}, next = {}
----------------------------------
Block 0x34a
0x34a: v34a(0x0) = CONST 
0x34d: REVERT v34a(0x0) v34a(0x0)
----------------------------------

Begin block 0x34e
prev = {'0x342'}, next = {'0x362', '0x366'}
----------------------------------
Block 0x34e
0x350: v350(0x1a5) = CONST 
0x353: v353(0x4) = CONST 
0x356: v356 = CALLDATASIZE 
0x357: v357 = SUB v356 v353(0x4)
0x358: v358(0x140) = CONST 
0x35c: v35c = LT v357 v358(0x140)
0x35d: v35d = ISZERO v35c
0x35e: v35e(0x366) = CONST 
0x361: JUMPI v35e(0x366) v35d
----------------------------------

Begin block 0x362
prev = {'0x34e'}, next = {}
----------------------------------
Block 0x362
0x362: v362(0x0) = CONST 
0x365: REVERT v362(0x0) v362(0x0)
----------------------------------

Begin block 0x366
prev = {'0x34e'}, next = {'0x399', '0x395'}
----------------------------------
Block 0x366
0x367: v367(0x1) = CONST 
0x369: v369(0x1) = CONST 
0x36b: v36b(0xa0) = CONST 
0x36d: v36d(0x10000000000000000000000000000000000000000) = SHL v36b(0xa0) v369(0x1)
0x36e: v36e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v36d(0x10000000000000000000000000000000000000000) v367(0x1)
0x370: v370 = CALLDATALOAD v353(0x4)
0x372: v372 = AND v36e(0xffffffffffffffffffffffffffffffffffffffff) v370
0x374: v374(0x20) = CONST 
0x377: v377 = ADD v353(0x4) v374(0x20)
0x378: v378 = CALLDATALOAD v377
0x37b: v37b = AND v36e(0xffffffffffffffffffffffffffffffffffffffff) v378
0x37e: v37e = ADD v353(0x4) v357
0x380: v380(0x60) = CONST 
0x383: v383 = ADD v353(0x4) v380(0x60)
0x384: v384(0x40) = CONST 
0x387: v387 = ADD v353(0x4) v384(0x40)
0x388: v388 = CALLDATALOAD v387
0x389: v389(0x1) = CONST 
0x38b: v38b(0x20) = CONST 
0x38d: v38d(0x100000000) = SHL v38b(0x20) v389(0x1)
0x38f: v38f = GT v388 v38d(0x100000000)
0x390: v390 = ISZERO v38f
0x391: v391(0x399) = CONST 
0x394: JUMPI v391(0x399) v390
----------------------------------

Begin block 0x395
prev = {'0x366'}, next = {}
----------------------------------
Block 0x395
0x395: v395(0x0) = CONST 
0x398: REVERT v395(0x0) v395(0x0)
----------------------------------

Begin block 0x399
prev = {'0x366'}, next = {'0x3a7', '0x3ab'}
----------------------------------
Block 0x399
0x39b: v39b = ADD v353(0x4) v388
0x39d: v39d(0x20) = CONST 
0x3a0: v3a0 = ADD v39b v39d(0x20)
0x3a1: v3a1 = GT v3a0 v37e
0x3a2: v3a2 = ISZERO v3a1
0x3a3: v3a3(0x3ab) = CONST 
0x3a6: JUMPI v3a3(0x3ab) v3a2
----------------------------------

Begin block 0x3a7
prev = {'0x399'}, next = {}
----------------------------------
Block 0x3a7
0x3a7: v3a7(0x0) = CONST 
0x3aa: REVERT v3a7(0x0) v3a7(0x0)
----------------------------------

Begin block 0x3ab
prev = {'0x399'}, next = {'0x3cc', '0x3c8'}
----------------------------------
Block 0x3ab
0x3ad: v3ad = CALLDATALOAD v39b
0x3af: v3af(0x20) = CONST 
0x3b1: v3b1 = ADD v3af(0x20) v39b
0x3b4: v3b4(0x1) = CONST 
0x3b7: v3b7 = MUL v3ad v3b4(0x1)
0x3b9: v3b9 = ADD v3b1 v3b7
0x3ba: v3ba = GT v3b9 v37e
0x3bb: v3bb(0x1) = CONST 
0x3bd: v3bd(0x20) = CONST 
0x3bf: v3bf(0x100000000) = SHL v3bd(0x20) v3bb(0x1)
0x3c1: v3c1 = GT v3ad v3bf(0x100000000)
0x3c2: v3c2 = OR v3c1 v3ba
0x3c3: v3c3 = ISZERO v3c2
0x3c4: v3c4(0x3cc) = CONST 
0x3c7: JUMPI v3c4(0x3cc) v3c3
----------------------------------

Begin block 0x3c8
prev = {'0x3ab'}, next = {}
----------------------------------
Block 0x3c8
0x3c8: v3c8(0x0) = CONST 
0x3cb: REVERT v3c8(0x0) v3c8(0x0)
----------------------------------

Begin block 0x3cc
prev = {'0x3ab'}, next = {'0x41e', '0x41a'}
----------------------------------
Block 0x3cc
0x3d1: v3d1(0x1f) = CONST 
0x3d3: v3d3 = ADD v3d1(0x1f) v3ad
0x3d4: v3d4(0x20) = CONST 
0x3d8: v3d8 = DIV v3d3 v3d4(0x20)
0x3d9: v3d9 = MUL v3d8 v3d4(0x20)
0x3da: v3da(0x20) = CONST 
0x3dc: v3dc = ADD v3da(0x20) v3d9
0x3dd: v3dd(0x40) = CONST 
0x3df: v3df = MLOAD v3dd(0x40)
0x3e2: v3e2 = ADD v3df v3dc
0x3e3: v3e3(0x40) = CONST 
0x3e5: MSTORE v3e3(0x40) v3e2
0x3ed: MSTORE v3df v3ad
0x3ee: v3ee(0x20) = CONST 
0x3f0: v3f0 = ADD v3ee(0x20) v3df
0x3f6: CALLDATACOPY v3f0 v3b1 v3ad
0x3f7: v3f7(0x0) = CONST 
0x3fa: v3fa = ADD v3f0 v3ad
0x3fe: MSTORE v3fa v3f7(0x0)
0x404: v404(0x20) = CONST 
0x407: v407 = ADD v383 v404(0x20)
0x40a: v40a = CALLDATALOAD v383
0x40e: v40e(0x1) = CONST 
0x410: v410(0x20) = CONST 
0x412: v412(0x100000000) = SHL v410(0x20) v40e(0x1)
0x414: v414 = GT v40a v412(0x100000000)
0x415: v415 = ISZERO v414
0x416: v416(0x41e) = CONST 
0x419: JUMPI v416(0x41e) v415
----------------------------------

Begin block 0x41a
prev = {'0x3cc'}, next = {}
----------------------------------
Block 0x41a
0x41a: v41a(0x0) = CONST 
0x41d: REVERT v41a(0x0) v41a(0x0)
----------------------------------

Begin block 0x41e
prev = {'0x3cc'}, next = {'0x42c', '0x430'}
----------------------------------
Block 0x41e
0x420: v420 = ADD v353(0x4) v40a
0x422: v422(0x20) = CONST 
0x425: v425 = ADD v420 v422(0x20)
0x426: v426 = GT v425 v37e
0x427: v427 = ISZERO v426
0x428: v428(0x430) = CONST 
0x42b: JUMPI v428(0x430) v427
----------------------------------

Begin block 0x42c
prev = {'0x41e'}, next = {}
----------------------------------
Block 0x42c
0x42c: v42c(0x0) = CONST 
0x42f: REVERT v42c(0x0) v42c(0x0)
----------------------------------

Begin block 0x430
prev = {'0x41e'}, next = {'0x44d', '0x451'}
----------------------------------
Block 0x430
0x432: v432 = CALLDATALOAD v420
0x434: v434(0x20) = CONST 
0x436: v436 = ADD v434(0x20) v420
0x439: v439(0x1) = CONST 
0x43c: v43c = MUL v432 v439(0x1)
0x43e: v43e = ADD v436 v43c
0x43f: v43f = GT v43e v37e
0x440: v440(0x1) = CONST 
0x442: v442(0x20) = CONST 
0x444: v444(0x100000000) = SHL v442(0x20) v440(0x1)
0x446: v446 = GT v432 v444(0x100000000)
0x447: v447 = OR v446 v43f
0x448: v448 = ISZERO v447
0x449: v449(0x451) = CONST 
0x44c: JUMPI v449(0x451) v448
----------------------------------

Begin block 0x44d
prev = {'0x430'}, next = {}
----------------------------------
Block 0x44d
0x44d: v44d(0x0) = CONST 
0x450: REVERT v44d(0x0) v44d(0x0)
----------------------------------

Begin block 0x451
prev = {'0x430'}, next = {'0xe4d'}
----------------------------------
Block 0x451
0x456: v456(0x1f) = CONST 
0x458: v458 = ADD v456(0x1f) v432
0x459: v459(0x20) = CONST 
0x45d: v45d = DIV v458 v459(0x20)
0x45e: v45e = MUL v45d v459(0x20)
0x45f: v45f(0x20) = CONST 
0x461: v461 = ADD v45f(0x20) v45e
0x462: v462(0x40) = CONST 
0x464: v464 = MLOAD v462(0x40)
0x467: v467 = ADD v464 v461
0x468: v468(0x40) = CONST 
0x46a: MSTORE v468(0x40) v467
0x472: MSTORE v464 v432
0x473: v473(0x20) = CONST 
0x475: v475 = ADD v473(0x20) v464
0x47b: CALLDATACOPY v475 v436 v432
0x47c: v47c(0x0) = CONST 
0x47f: v47f = ADD v475 v432
0x483: MSTORE v47f v47c(0x0)
0x489: v489(0xff) = CONST 
0x48c: v48c = CALLDATALOAD v407
0x48d: v48d = AND v48c v489(0xff)
0x492: v492(0x20) = CONST 
0x495: v495 = ADD v407 v492(0x20)
0x496: v496 = CALLDATALOAD v495
0x498: v498(0x40) = CONST 
0x49b: v49b = ADD v407 v498(0x40)
0x49c: v49c = CALLDATALOAD v49b
0x49e: v49e(0x60) = CONST 
0x4a1: v4a1 = ADD v407 v49e(0x60)
0x4a2: v4a2 = CALLDATALOAD v4a1
0x4a4: v4a4(0x1) = CONST 
0x4a6: v4a6(0x1) = CONST 
0x4a8: v4a8(0xa0) = CONST 
0x4aa: v4aa(0x10000000000000000000000000000000000000000) = SHL v4a8(0xa0) v4a6(0x1)
0x4ab: v4ab(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4aa(0x10000000000000000000000000000000000000000) v4a4(0x1)
0x4ac: v4ac(0x80) = CONST 
0x4af: v4af = ADD v407 v4ac(0x80)
0x4b0: v4b0 = CALLDATALOAD v4af
0x4b1: v4b1 = AND v4b0 v4ab(0xffffffffffffffffffffffffffffffffffffffff)
0x4b3: v4b3(0xa0) = CONST 
0x4b5: v4b5 = ADD v4b3(0xa0) v407
0x4b6: v4b6 = CALLDATALOAD v4b5
0x4b7: v4b7(0xe4d) = CONST 
0x4ba: JUMP v4b7(0xe4d)
----------------------------------

Begin block 0x4bb
prev = {}, next = {'0x4c3', '0x4c7'}
----------------------------------
function priceFeedContract()()
Block 0x4bb
0x4bc: v4bc = CALLVALUE 
0x4be: v4be = ISZERO v4bc
0x4bf: v4bf(0x4c7) = CONST 
0x4c2: JUMPI v4bf(0x4c7) v4be
----------------------------------

Begin block 0x4c3
prev = {'0x4bb'}, next = {}
----------------------------------
Block 0x4c3
0x4c3: v4c3(0x0) = CONST 
0x4c6: REVERT v4c3(0x0) v4c3(0x0)
----------------------------------

Begin block 0x4c7
prev = {'0x4bb'}, next = {'0xf53'}
----------------------------------
Block 0x4c7
0x4c9: v4c9(0x4d0) = CONST 
0x4cc: v4cc(0xf53) = CONST 
0x4cf: JUMP v4cc(0xf53)
----------------------------------

Begin block 0x4d00x4bb
prev = {'0xf53'}, next = {}
----------------------------------
Block 0x4d00x4bb
0x4d10x4bb: v4bb4d1(0x40) = CONST 
0x4d40x4bb: v4bb4d4 = MLOAD v4bb4d1(0x40)
0x4d50x4bb: v4bb4d5(0x1) = CONST 
0x4d70x4bb: v4bb4d7(0x1) = CONST 
0x4d90x4bb: v4bb4d9(0xa0) = CONST 
0x4db0x4bb: v4bb4db(0x10000000000000000000000000000000000000000) = SHL v4bb4d9(0xa0) v4bb4d7(0x1)
0x4dc0x4bb: v4bb4dc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4bb4db(0x10000000000000000000000000000000000000000) v4bb4d5(0x1)
0x4df0x4bb: v4bb4df = AND vf5f v4bb4dc(0xffffffffffffffffffffffffffffffffffffffff)
0x4e10x4bb: MSTORE v4bb4d4 v4bb4df
0x4e20x4bb: v4bb4e2 = MLOAD v4bb4d1(0x40)
0x4e60x4bb: v4bb4e6 = SUB v4bb4d4 v4bb4e2
0x4e70x4bb: v4bb4e7(0x20) = CONST 
0x4e90x4bb: v4bb4e9 = ADD v4bb4e7(0x20) v4bb4e6
0x4eb0x4bb: RETURN v4bb4e2 v4bb4e9
----------------------------------

Begin block 0x4d00x4ec
prev = {'0xf62'}, next = {}
----------------------------------
Block 0x4d00x4ec
0x4d10x4ec: v4ec4d1(0x40) = CONST 
0x4d40x4ec: v4ec4d4 = MLOAD v4ec4d1(0x40)
0x4d50x4ec: v4ec4d5(0x1) = CONST 
0x4d70x4ec: v4ec4d7(0x1) = CONST 
0x4d90x4ec: v4ec4d9(0xa0) = CONST 
0x4db0x4ec: v4ec4db(0x10000000000000000000000000000000000000000) = SHL v4ec4d9(0xa0) v4ec4d7(0x1)
0x4dc0x4ec: v4ec4dc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4ec4db(0x10000000000000000000000000000000000000000) v4ec4d5(0x1)
0x4df0x4ec: v4ec4df = AND vf6e v4ec4dc(0xffffffffffffffffffffffffffffffffffffffff)
0x4e10x4ec: MSTORE v4ec4d4 v4ec4df
0x4e20x4ec: v4ec4e2 = MLOAD v4ec4d1(0x40)
0x4e60x4ec: v4ec4e6 = SUB v4ec4d4 v4ec4e2
0x4e70x4ec: v4ec4e7(0x20) = CONST 
0x4e90x4ec: v4ec4e9 = ADD v4ec4e7(0x20) v4ec4e6
0x4eb0x4ec: RETURN v4ec4e2 v4ec4e9
----------------------------------

Begin block 0x4d00x501
prev = {'0xf71'}, next = {}
----------------------------------
Block 0x4d00x501
0x4d10x501: v5014d1(0x40) = CONST 
0x4d40x501: v5014d4 = MLOAD v5014d1(0x40)
0x4d50x501: v5014d5(0x1) = CONST 
0x4d70x501: v5014d7(0x1) = CONST 
0x4d90x501: v5014d9(0xa0) = CONST 
0x4db0x501: v5014db(0x10000000000000000000000000000000000000000) = SHL v5014d9(0xa0) v5014d7(0x1)
0x4dc0x501: v5014dc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5014db(0x10000000000000000000000000000000000000000) v5014d5(0x1)
0x4df0x501: v5014df = AND vf7d v5014dc(0xffffffffffffffffffffffffffffffffffffffff)
0x4e10x501: MSTORE v5014d4 v5014df
0x4e20x501: v5014e2 = MLOAD v5014d1(0x40)
0x4e60x501: v5014e6 = SUB v5014d4 v5014e2
0x4e70x501: v5014e7(0x20) = CONST 
0x4e90x501: v5014e9 = ADD v5014e7(0x20) v5014e6
0x4eb0x501: RETURN v5014e2 v5014e9
----------------------------------

Begin block 0x4d00x5e5
prev = {'0x11c1'}, next = {}
----------------------------------
Block 0x4d00x5e5
0x4d10x5e5: v5e54d1(0x40) = CONST 
0x4d40x5e5: v5e54d4 = MLOAD v5e54d1(0x40)
0x4d50x5e5: v5e54d5(0x1) = CONST 
0x4d70x5e5: v5e54d7(0x1) = CONST 
0x4d90x5e5: v5e54d9(0xa0) = CONST 
0x4db0x5e5: v5e54db(0x10000000000000000000000000000000000000000) = SHL v5e54d9(0xa0) v5e54d7(0x1)
0x4dc0x5e5: v5e54dc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5e54db(0x10000000000000000000000000000000000000000) v5e54d5(0x1)
0x4df0x5e5: v5e54df = AND v11cd v5e54dc(0xffffffffffffffffffffffffffffffffffffffff)
0x4e10x5e5: MSTORE v5e54d4 v5e54df
0x4e20x5e5: v5e54e2 = MLOAD v5e54d1(0x40)
0x4e60x5e5: v5e54e6 = SUB v5e54d4 v5e54e2
0x4e70x5e5: v5e54e7(0x20) = CONST 
0x4e90x5e5: v5e54e9 = ADD v5e54e7(0x20) v5e54e6
0x4eb0x5e5: RETURN v5e54e2 v5e54e9
----------------------------------

Begin block 0x4d00x884
prev = {'0x1550'}, next = {}
----------------------------------
Block 0x4d00x884
0x4d10x884: v8844d1(0x40) = CONST 
0x4d40x884: v8844d4 = MLOAD v8844d1(0x40)
0x4d50x884: v8844d5(0x1) = CONST 
0x4d70x884: v8844d7(0x1) = CONST 
0x4d90x884: v8844d9(0xa0) = CONST 
0x4db0x884: v8844db(0x10000000000000000000000000000000000000000) = SHL v8844d9(0xa0) v8844d7(0x1)
0x4dc0x884: v8844dc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8844db(0x10000000000000000000000000000000000000000) v8844d5(0x1)
0x4df0x884: v8844df = AND v155c v8844dc(0xffffffffffffffffffffffffffffffffffffffff)
0x4e10x884: MSTORE v8844d4 v8844df
0x4e20x884: v8844e2 = MLOAD v8844d1(0x40)
0x4e60x884: v8844e6 = SUB v8844d4 v8844e2
0x4e70x884: v8844e7(0x20) = CONST 
0x4e90x884: v8844e9 = ADD v8844e7(0x20) v8844e6
0x4eb0x884: RETURN v8844e2 v8844e9
----------------------------------

Begin block 0x4ec
prev = {}, next = {'0x4f4', '0x4f8'}
----------------------------------
function wallet()()
Block 0x4ec
0x4ed: v4ed = CALLVALUE 
0x4ef: v4ef = ISZERO v4ed
0x4f0: v4f0(0x4f8) = CONST 
0x4f3: JUMPI v4f0(0x4f8) v4ef
----------------------------------

Begin block 0x4f4
prev = {'0x4ec'}, next = {}
----------------------------------
Block 0x4f4
0x4f4: v4f4(0x0) = CONST 
0x4f7: REVERT v4f4(0x0) v4f4(0x0)
----------------------------------

Begin block 0x4f8
prev = {'0x4ec'}, next = {'0xf62'}
----------------------------------
Block 0x4f8
0x4fa: v4fa(0x4d0) = CONST 
0x4fd: v4fd(0xf62) = CONST 
0x500: JUMP v4fd(0xf62)
----------------------------------

Begin block 0x501
prev = {}, next = {'0x50d', '0x509'}
----------------------------------
function tokenContract()()
Block 0x501
0x502: v502 = CALLVALUE 
0x504: v504 = ISZERO v502
0x505: v505(0x50d) = CONST 
0x508: JUMPI v505(0x50d) v504
----------------------------------

Begin block 0x509
prev = {'0x501'}, next = {}
----------------------------------
Block 0x509
0x509: v509(0x0) = CONST 
0x50c: REVERT v509(0x0) v509(0x0)
----------------------------------

Begin block 0x50d
prev = {'0x501'}, next = {'0xf71'}
----------------------------------
Block 0x50d
0x50f: v50f(0x4d0) = CONST 
0x512: v512(0xf71) = CONST 
0x515: JUMP v512(0xf71)
----------------------------------

Begin block 0x516
prev = {}, next = {'0x522', '0x51e'}
----------------------------------
function tknUnlocked()()
Block 0x516
0x517: v517 = CALLVALUE 
0x519: v519 = ISZERO v517
0x51a: v51a(0x522) = CONST 
0x51d: JUMPI v51a(0x522) v519
----------------------------------

Begin block 0x51e
prev = {'0x516'}, next = {}
----------------------------------
Block 0x51e
0x51e: v51e(0x0) = CONST 
0x521: REVERT v51e(0x0) v51e(0x0)
----------------------------------

Begin block 0x522
prev = {'0x516'}, next = {'0xf80'}
----------------------------------
Block 0x522
0x524: v524(0x1bc) = CONST 
0x527: v527(0xf80) = CONST 
0x52a: JUMP v527(0xf80)
----------------------------------

Begin block 0x52b
prev = {}, next = {'0x533', '0x537'}
----------------------------------
function refundBuyer(address)()
Block 0x52b
0x52c: v52c = CALLVALUE 
0x52e: v52e = ISZERO v52c
0x52f: v52f(0x537) = CONST 
0x532: JUMPI v52f(0x537) v52e
----------------------------------

Begin block 0x533
prev = {'0x52b'}, next = {}
----------------------------------
Block 0x533
0x533: v533(0x0) = CONST 
0x536: REVERT v533(0x0) v533(0x0)
----------------------------------

Begin block 0x537
prev = {'0x52b'}, next = {'0x54e', '0x54a'}
----------------------------------
Block 0x537
0x539: v539(0x1a5) = CONST 
0x53c: v53c(0x4) = CONST 
0x53f: v53f = CALLDATASIZE 
0x540: v540 = SUB v53f v53c(0x4)
0x541: v541(0x20) = CONST 
0x544: v544 = LT v540 v541(0x20)
0x545: v545 = ISZERO v544
0x546: v546(0x54e) = CONST 
0x549: JUMPI v546(0x54e) v545
----------------------------------

Begin block 0x54a
prev = {'0x537'}, next = {}
----------------------------------
Block 0x54a
0x54a: v54a(0x0) = CONST 
0x54d: REVERT v54a(0x0) v54a(0x0)
----------------------------------

Begin block 0x54e
prev = {'0x537'}, next = {'0xf86'}
----------------------------------
Block 0x54e
0x550: v550 = CALLDATALOAD v53c(0x4)
0x551: v551(0x1) = CONST 
0x553: v553(0x1) = CONST 
0x555: v555(0xa0) = CONST 
0x557: v557(0x10000000000000000000000000000000000000000) = SHL v555(0xa0) v553(0x1)
0x558: v558(0xffffffffffffffffffffffffffffffffffffffff) = SUB v557(0x10000000000000000000000000000000000000000) v551(0x1)
0x559: v559 = AND v558(0xffffffffffffffffffffffffffffffffffffffff) v550
0x55a: v55a(0xf86) = CONST 
0x55d: JUMP v55a(0xf86)
----------------------------------

Begin block 0x55e
prev = {}, next = {'0x566', '0x56a'}
----------------------------------
function etherMinimum()()
Block 0x55e
0x55f: v55f = CALLVALUE 
0x561: v561 = ISZERO v55f
0x562: v562(0x56a) = CONST 
0x565: JUMPI v562(0x56a) v561
----------------------------------

Begin block 0x566
prev = {'0x55e'}, next = {}
----------------------------------
Block 0x566
0x566: v566(0x0) = CONST 
0x569: REVERT v566(0x0) v566(0x0)
----------------------------------

Begin block 0x56a
prev = {'0x55e'}, next = {'0x1074'}
----------------------------------
Block 0x56a
0x56c: v56c(0x1bc) = CONST 
0x56f: v56f(0x1074) = CONST 
0x572: JUMP v56f(0x1074)
----------------------------------

Begin block 0x573
prev = {}, next = {'0x57b', '0x57f'}
----------------------------------
function balanceOf(address)()
Block 0x573
0x574: v574 = CALLVALUE 
0x576: v576 = ISZERO v574
0x577: v577(0x57f) = CONST 
0x57a: JUMPI v577(0x57f) v576
----------------------------------

Begin block 0x57b
prev = {'0x573'}, next = {}
----------------------------------
Block 0x57b
0x57b: v57b(0x0) = CONST 
0x57e: REVERT v57b(0x0) v57b(0x0)
----------------------------------

Begin block 0x57f
prev = {'0x573'}, next = {'0x592', '0x596'}
----------------------------------
Block 0x57f
0x581: v581(0x1bc) = CONST 
0x584: v584(0x4) = CONST 
0x587: v587 = CALLDATASIZE 
0x588: v588 = SUB v587 v584(0x4)
0x589: v589(0x20) = CONST 
0x58c: v58c = LT v588 v589(0x20)
0x58d: v58d = ISZERO v58c
0x58e: v58e(0x596) = CONST 
0x591: JUMPI v58e(0x596) v58d
----------------------------------

Begin block 0x592
prev = {'0x57f'}, next = {}
----------------------------------
Block 0x592
0x592: v592(0x0) = CONST 
0x595: REVERT v592(0x0) v592(0x0)
----------------------------------

Begin block 0x596
prev = {'0x57f'}, next = {'0x107a'}
----------------------------------
Block 0x596
0x598: v598 = CALLDATALOAD v584(0x4)
0x599: v599(0x1) = CONST 
0x59b: v59b(0x1) = CONST 
0x59d: v59d(0xa0) = CONST 
0x59f: v59f(0x10000000000000000000000000000000000000000) = SHL v59d(0xa0) v59b(0x1)
0x5a0: v5a0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v59f(0x10000000000000000000000000000000000000000) v599(0x1)
0x5a1: v5a1 = AND v5a0(0xffffffffffffffffffffffffffffffffffffffff) v598
0x5a2: v5a2(0x107a) = CONST 
0x5a5: JUMP v5a2(0x107a)
----------------------------------

Begin block 0x5a6
prev = {}, next = {'0x5b2', '0x5ae'}
----------------------------------
function startTime()()
Block 0x5a6
0x5a7: v5a7 = CALLVALUE 
0x5a9: v5a9 = ISZERO v5a7
0x5aa: v5aa(0x5b2) = CONST 
0x5ad: JUMPI v5aa(0x5b2) v5a9
----------------------------------

Begin block 0x5ae
prev = {'0x5a6'}, next = {}
----------------------------------
Block 0x5ae
0x5ae: v5ae(0x0) = CONST 
0x5b1: REVERT v5ae(0x0) v5ae(0x0)
----------------------------------

Begin block 0x5b2
prev = {'0x5a6'}, next = {'0x1095'}
----------------------------------
Block 0x5b2
0x5b4: v5b4(0x1bc) = CONST 
0x5b7: v5b7(0x1095) = CONST 
0x5ba: JUMP v5b7(0x1095)
----------------------------------

Begin block 0x5bb
prev = {}, next = {'0x5c3', '0x5c7'}
----------------------------------
function acceptOwnership()()
Block 0x5bb
0x5bc: v5bc = CALLVALUE 
0x5be: v5be = ISZERO v5bc
0x5bf: v5bf(0x5c7) = CONST 
0x5c2: JUMPI v5bf(0x5c7) v5be
----------------------------------

Begin block 0x5c3
prev = {'0x5bb'}, next = {}
----------------------------------
Block 0x5c3
0x5c3: v5c3(0x0) = CONST 
0x5c6: REVERT v5c3(0x0) v5c3(0x0)
----------------------------------

Begin block 0x5c7
prev = {'0x5bb'}, next = {'0x109b'}
----------------------------------
Block 0x5c7
0x5c9: v5c9(0x1a5) = CONST 
0x5cc: v5cc(0x109b) = CONST 
0x5cf: JUMP v5cc(0x109b)
----------------------------------

Begin block 0x5d0
prev = {}, next = {'0x5dc', '0x5d8'}
----------------------------------
function priceUsd()()
Block 0x5d0
0x5d1: v5d1 = CALLVALUE 
0x5d3: v5d3 = ISZERO v5d1
0x5d4: v5d4(0x5dc) = CONST 
0x5d7: JUMPI v5d4(0x5dc) v5d3
----------------------------------

Begin block 0x5d8
prev = {'0x5d0'}, next = {}
----------------------------------
Block 0x5d8
0x5d8: v5d8(0x0) = CONST 
0x5db: REVERT v5d8(0x0) v5d8(0x0)
----------------------------------

Begin block 0x5dc
prev = {'0x5d0'}, next = {'0x1bc0x5d0'}
----------------------------------
Block 0x5dc
0x5de: v5de(0x1bc) = CONST 
0x5e1: v5e1(0x114b) = CONST 
0x5e4: v5e4_0 = CALLPRIVATE v5e1(0x114b) v5de(0x1bc)
----------------------------------

Begin block 0x5e5
prev = {}, next = {'0x5ed', '0x5f1'}
----------------------------------
function owner()()
Block 0x5e5
0x5e6: v5e6 = CALLVALUE 
0x5e8: v5e8 = ISZERO v5e6
0x5e9: v5e9(0x5f1) = CONST 
0x5ec: JUMPI v5e9(0x5f1) v5e8
----------------------------------

Begin block 0x5ed
prev = {'0x5e5'}, next = {}
----------------------------------
Block 0x5ed
0x5ed: v5ed(0x0) = CONST 
0x5f0: REVERT v5ed(0x0) v5ed(0x0)
----------------------------------

Begin block 0x5f1
prev = {'0x5e5'}, next = {'0x11c1'}
----------------------------------
Block 0x5f1
0x5f3: v5f3(0x4d0) = CONST 
0x5f6: v5f6(0x11c1) = CONST 
0x5f9: JUMP v5f6(0x11c1)
----------------------------------

Begin block 0x5fa
prev = {}, next = {'0x602', '0x606'}
----------------------------------
function changeSettings(address,address,string,string,uint8,uint256,uint256,uint256,address,uint256)()
Block 0x5fa
0x5fb: v5fb = CALLVALUE 
0x5fd: v5fd = ISZERO v5fb
0x5fe: v5fe(0x606) = CONST 
0x601: JUMPI v5fe(0x606) v5fd
----------------------------------

Begin block 0x602
prev = {'0x5fa'}, next = {}
----------------------------------
Block 0x602
0x602: v602(0x0) = CONST 
0x605: REVERT v602(0x0) v602(0x0)
----------------------------------

Begin block 0x606
prev = {'0x5fa'}, next = {'0x61a', '0x61e'}
----------------------------------
Block 0x606
0x608: v608(0x1a5) = CONST 
0x60b: v60b(0x4) = CONST 
0x60e: v60e = CALLDATASIZE 
0x60f: v60f = SUB v60e v60b(0x4)
0x610: v610(0x140) = CONST 
0x614: v614 = LT v60f v610(0x140)
0x615: v615 = ISZERO v614
0x616: v616(0x61e) = CONST 
0x619: JUMPI v616(0x61e) v615
----------------------------------

Begin block 0x61a
prev = {'0x606'}, next = {}
----------------------------------
Block 0x61a
0x61a: v61a(0x0) = CONST 
0x61d: REVERT v61a(0x0) v61a(0x0)
----------------------------------

Begin block 0x61e
prev = {'0x606'}, next = {'0x64d', '0x651'}
----------------------------------
Block 0x61e
0x61f: v61f(0x1) = CONST 
0x621: v621(0x1) = CONST 
0x623: v623(0xa0) = CONST 
0x625: v625(0x10000000000000000000000000000000000000000) = SHL v623(0xa0) v621(0x1)
0x626: v626(0xffffffffffffffffffffffffffffffffffffffff) = SUB v625(0x10000000000000000000000000000000000000000) v61f(0x1)
0x628: v628 = CALLDATALOAD v60b(0x4)
0x62a: v62a = AND v626(0xffffffffffffffffffffffffffffffffffffffff) v628
0x62c: v62c(0x20) = CONST 
0x62f: v62f = ADD v60b(0x4) v62c(0x20)
0x630: v630 = CALLDATALOAD v62f
0x633: v633 = AND v626(0xffffffffffffffffffffffffffffffffffffffff) v630
0x636: v636 = ADD v60b(0x4) v60f
0x638: v638(0x60) = CONST 
0x63b: v63b = ADD v60b(0x4) v638(0x60)
0x63c: v63c(0x40) = CONST 
0x63f: v63f = ADD v60b(0x4) v63c(0x40)
0x640: v640 = CALLDATALOAD v63f
0x641: v641(0x1) = CONST 
0x643: v643(0x20) = CONST 
0x645: v645(0x100000000) = SHL v643(0x20) v641(0x1)
0x647: v647 = GT v640 v645(0x100000000)
0x648: v648 = ISZERO v647
0x649: v649(0x651) = CONST 
0x64c: JUMPI v649(0x651) v648
----------------------------------

Begin block 0x64d
prev = {'0x61e'}, next = {}
----------------------------------
Block 0x64d
0x64d: v64d(0x0) = CONST 
0x650: REVERT v64d(0x0) v64d(0x0)
----------------------------------

Begin block 0x651
prev = {'0x61e'}, next = {'0x65f', '0x663'}
----------------------------------
Block 0x651
0x653: v653 = ADD v60b(0x4) v640
0x655: v655(0x20) = CONST 
0x658: v658 = ADD v653 v655(0x20)
0x659: v659 = GT v658 v636
0x65a: v65a = ISZERO v659
0x65b: v65b(0x663) = CONST 
0x65e: JUMPI v65b(0x663) v65a
----------------------------------

Begin block 0x65f
prev = {'0x651'}, next = {}
----------------------------------
Block 0x65f
0x65f: v65f(0x0) = CONST 
0x662: REVERT v65f(0x0) v65f(0x0)
----------------------------------

Begin block 0x663
prev = {'0x651'}, next = {'0x684', '0x680'}
----------------------------------
Block 0x663
0x665: v665 = CALLDATALOAD v653
0x667: v667(0x20) = CONST 
0x669: v669 = ADD v667(0x20) v653
0x66c: v66c(0x1) = CONST 
0x66f: v66f = MUL v665 v66c(0x1)
0x671: v671 = ADD v669 v66f
0x672: v672 = GT v671 v636
0x673: v673(0x1) = CONST 
0x675: v675(0x20) = CONST 
0x677: v677(0x100000000) = SHL v675(0x20) v673(0x1)
0x679: v679 = GT v665 v677(0x100000000)
0x67a: v67a = OR v679 v672
0x67b: v67b = ISZERO v67a
0x67c: v67c(0x684) = CONST 
0x67f: JUMPI v67c(0x684) v67b
----------------------------------

Begin block 0x680
prev = {'0x663'}, next = {}
----------------------------------
Block 0x680
0x680: v680(0x0) = CONST 
0x683: REVERT v680(0x0) v680(0x0)
----------------------------------

Begin block 0x684
prev = {'0x663'}, next = {'0x6d6', '0x6d2'}
----------------------------------
Block 0x684
0x689: v689(0x1f) = CONST 
0x68b: v68b = ADD v689(0x1f) v665
0x68c: v68c(0x20) = CONST 
0x690: v690 = DIV v68b v68c(0x20)
0x691: v691 = MUL v690 v68c(0x20)
0x692: v692(0x20) = CONST 
0x694: v694 = ADD v692(0x20) v691
0x695: v695(0x40) = CONST 
0x697: v697 = MLOAD v695(0x40)
0x69a: v69a = ADD v697 v694
0x69b: v69b(0x40) = CONST 
0x69d: MSTORE v69b(0x40) v69a
0x6a5: MSTORE v697 v665
0x6a6: v6a6(0x20) = CONST 
0x6a8: v6a8 = ADD v6a6(0x20) v697
0x6ae: CALLDATACOPY v6a8 v669 v665
0x6af: v6af(0x0) = CONST 
0x6b2: v6b2 = ADD v6a8 v665
0x6b6: MSTORE v6b2 v6af(0x0)
0x6bc: v6bc(0x20) = CONST 
0x6bf: v6bf = ADD v63b v6bc(0x20)
0x6c2: v6c2 = CALLDATALOAD v63b
0x6c6: v6c6(0x1) = CONST 
0x6c8: v6c8(0x20) = CONST 
0x6ca: v6ca(0x100000000) = SHL v6c8(0x20) v6c6(0x1)
0x6cc: v6cc = GT v6c2 v6ca(0x100000000)
0x6cd: v6cd = ISZERO v6cc
0x6ce: v6ce(0x6d6) = CONST 
0x6d1: JUMPI v6ce(0x6d6) v6cd
----------------------------------

Begin block 0x6d2
prev = {'0x684'}, next = {}
----------------------------------
Block 0x6d2
0x6d2: v6d2(0x0) = CONST 
0x6d5: REVERT v6d2(0x0) v6d2(0x0)
----------------------------------

Begin block 0x6d6
prev = {'0x684'}, next = {'0x6e4', '0x6e8'}
----------------------------------
Block 0x6d6
0x6d8: v6d8 = ADD v60b(0x4) v6c2
0x6da: v6da(0x20) = CONST 
0x6dd: v6dd = ADD v6d8 v6da(0x20)
0x6de: v6de = GT v6dd v636
0x6df: v6df = ISZERO v6de
0x6e0: v6e0(0x6e8) = CONST 
0x6e3: JUMPI v6e0(0x6e8) v6df
----------------------------------

Begin block 0x6e4
prev = {'0x6d6'}, next = {}
----------------------------------
Block 0x6e4
0x6e4: v6e4(0x0) = CONST 
0x6e7: REVERT v6e4(0x0) v6e4(0x0)
----------------------------------

Begin block 0x6e8
prev = {'0x6d6'}, next = {'0x709', '0x705'}
----------------------------------
Block 0x6e8
0x6ea: v6ea = CALLDATALOAD v6d8
0x6ec: v6ec(0x20) = CONST 
0x6ee: v6ee = ADD v6ec(0x20) v6d8
0x6f1: v6f1(0x1) = CONST 
0x6f4: v6f4 = MUL v6ea v6f1(0x1)
0x6f6: v6f6 = ADD v6ee v6f4
0x6f7: v6f7 = GT v6f6 v636
0x6f8: v6f8(0x1) = CONST 
0x6fa: v6fa(0x20) = CONST 
0x6fc: v6fc(0x100000000) = SHL v6fa(0x20) v6f8(0x1)
0x6fe: v6fe = GT v6ea v6fc(0x100000000)
0x6ff: v6ff = OR v6fe v6f7
0x700: v700 = ISZERO v6ff
0x701: v701(0x709) = CONST 
0x704: JUMPI v701(0x709) v700
----------------------------------

Begin block 0x705
prev = {'0x6e8'}, next = {}
----------------------------------
Block 0x705
0x705: v705(0x0) = CONST 
0x708: REVERT v705(0x0) v705(0x0)
----------------------------------

Begin block 0x709
prev = {'0x6e8'}, next = {'0x11d0'}
----------------------------------
Block 0x709
0x70e: v70e(0x1f) = CONST 
0x710: v710 = ADD v70e(0x1f) v6ea
0x711: v711(0x20) = CONST 
0x715: v715 = DIV v710 v711(0x20)
0x716: v716 = MUL v715 v711(0x20)
0x717: v717(0x20) = CONST 
0x719: v719 = ADD v717(0x20) v716
0x71a: v71a(0x40) = CONST 
0x71c: v71c = MLOAD v71a(0x40)
0x71f: v71f = ADD v71c v719
0x720: v720(0x40) = CONST 
0x722: MSTORE v720(0x40) v71f
0x72a: MSTORE v71c v6ea
0x72b: v72b(0x20) = CONST 
0x72d: v72d = ADD v72b(0x20) v71c
0x733: CALLDATACOPY v72d v6ee v6ea
0x734: v734(0x0) = CONST 
0x737: v737 = ADD v72d v6ea
0x73b: MSTORE v737 v734(0x0)
0x741: v741(0xff) = CONST 
0x744: v744 = CALLDATALOAD v6bf
0x745: v745 = AND v744 v741(0xff)
0x74a: v74a(0x20) = CONST 
0x74d: v74d = ADD v6bf v74a(0x20)
0x74e: v74e = CALLDATALOAD v74d
0x750: v750(0x40) = CONST 
0x753: v753 = ADD v6bf v750(0x40)
0x754: v754 = CALLDATALOAD v753
0x756: v756(0x60) = CONST 
0x759: v759 = ADD v6bf v756(0x60)
0x75a: v75a = CALLDATALOAD v759
0x75c: v75c(0x1) = CONST 
0x75e: v75e(0x1) = CONST 
0x760: v760(0xa0) = CONST 
0x762: v762(0x10000000000000000000000000000000000000000) = SHL v760(0xa0) v75e(0x1)
0x763: v763(0xffffffffffffffffffffffffffffffffffffffff) = SUB v762(0x10000000000000000000000000000000000000000) v75c(0x1)
0x764: v764(0x80) = CONST 
0x767: v767 = ADD v6bf v764(0x80)
0x768: v768 = CALLDATALOAD v767
0x769: v769 = AND v768 v763(0xffffffffffffffffffffffffffffffffffffffff)
0x76b: v76b(0xa0) = CONST 
0x76d: v76d = ADD v76b(0xa0) v6bf
0x76e: v76e = CALLDATALOAD v76d
0x76f: v76f(0x11d0) = CONST 
0x772: JUMP v76f(0x11d0)
----------------------------------

Begin block 0x773
prev = {}, next = {'0x77f', '0x77b'}
----------------------------------
function symbol()()
Block 0x773
0x774: v774 = CALLVALUE 
0x776: v776 = ISZERO v774
0x777: v777(0x77f) = CONST 
0x77a: JUMPI v777(0x77f) v776
----------------------------------

Begin block 0x77b
prev = {'0x773'}, next = {}
----------------------------------
Block 0x77b
0x77b: v77b(0x0) = CONST 
0x77e: REVERT v77b(0x0) v77b(0x0)
----------------------------------

Begin block 0x77f
prev = {'0x773'}, next = {'0x2300x773'}
----------------------------------
Block 0x77f
0x781: v781(0x230) = CONST 
0x784: v784(0x142f) = CONST 
0x787: v787_0, v787_1 = CALLPRIVATE v784(0x142f) v781(0x230)
----------------------------------

Begin block 0x788
prev = {}, next = {'0x790', '0x794'}
----------------------------------
function transfer(address,uint256)()
Block 0x788
0x789: v789 = CALLVALUE 
0x78b: v78b = ISZERO v789
0x78c: v78c(0x794) = CONST 
0x78f: JUMPI v78c(0x794) v78b
----------------------------------

Begin block 0x790
prev = {'0x788'}, next = {}
----------------------------------
Block 0x790
0x790: v790(0x0) = CONST 
0x793: REVERT v790(0x0) v790(0x0)
----------------------------------

Begin block 0x794
prev = {'0x788'}, next = {'0x7ab', '0x7a7'}
----------------------------------
Block 0x794
0x796: v796(0x207) = CONST 
0x799: v799(0x4) = CONST 
0x79c: v79c = CALLDATASIZE 
0x79d: v79d = SUB v79c v799(0x4)
0x79e: v79e(0x40) = CONST 
0x7a1: v7a1 = LT v79d v79e(0x40)
0x7a2: v7a2 = ISZERO v7a1
0x7a3: v7a3(0x7ab) = CONST 
0x7a6: JUMPI v7a3(0x7ab) v7a2
----------------------------------

Begin block 0x7a7
prev = {'0x794'}, next = {}
----------------------------------
Block 0x7a7
0x7a7: v7a7(0x0) = CONST 
0x7aa: REVERT v7a7(0x0) v7a7(0x0)
----------------------------------

Begin block 0x7ab
prev = {'0x794'}, next = {'0x148a'}
----------------------------------
Block 0x7ab
0x7ad: v7ad(0x1) = CONST 
0x7af: v7af(0x1) = CONST 
0x7b1: v7b1(0xa0) = CONST 
0x7b3: v7b3(0x10000000000000000000000000000000000000000) = SHL v7b1(0xa0) v7af(0x1)
0x7b4: v7b4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7b3(0x10000000000000000000000000000000000000000) v7ad(0x1)
0x7b6: v7b6 = CALLDATALOAD v799(0x4)
0x7b7: v7b7 = AND v7b6 v7b4(0xffffffffffffffffffffffffffffffffffffffff)
0x7b9: v7b9(0x20) = CONST 
0x7bb: v7bb = ADD v7b9(0x20) v799(0x4)
0x7bc: v7bc = CALLDATALOAD v7bb
0x7bd: v7bd(0x148a) = CONST 
0x7c0: JUMP v7bd(0x148a)
----------------------------------

Begin block 0x7c1
prev = {}, next = {'0x7c9', '0x7cd'}
----------------------------------
function authorizeUsers(address[])()
Block 0x7c1
0x7c2: v7c2 = CALLVALUE 
0x7c4: v7c4 = ISZERO v7c2
0x7c5: v7c5(0x7cd) = CONST 
0x7c8: JUMPI v7c5(0x7cd) v7c4
----------------------------------

Begin block 0x7c9
prev = {'0x7c1'}, next = {}
----------------------------------
Block 0x7c9
0x7c9: v7c9(0x0) = CONST 
0x7cc: REVERT v7c9(0x0) v7c9(0x0)
----------------------------------

Begin block 0x7cd
prev = {'0x7c1'}, next = {'0x7e0', '0x7e4'}
----------------------------------
Block 0x7cd
0x7cf: v7cf(0x1a5) = CONST 
0x7d2: v7d2(0x4) = CONST 
0x7d5: v7d5 = CALLDATASIZE 
0x7d6: v7d6 = SUB v7d5 v7d2(0x4)
0x7d7: v7d7(0x20) = CONST 
0x7da: v7da = LT v7d6 v7d7(0x20)
0x7db: v7db = ISZERO v7da
0x7dc: v7dc(0x7e4) = CONST 
0x7df: JUMPI v7dc(0x7e4) v7db
----------------------------------

Begin block 0x7e0
prev = {'0x7cd'}, next = {}
----------------------------------
Block 0x7e0
0x7e0: v7e0(0x0) = CONST 
0x7e3: REVERT v7e0(0x0) v7e0(0x0)
----------------------------------

Begin block 0x7e4
prev = {'0x7cd'}, next = {'0x7fa', '0x7fe'}
----------------------------------
Block 0x7e4
0x7e6: v7e6 = ADD v7d2(0x4) v7d6
0x7e8: v7e8(0x20) = CONST 
0x7eb: v7eb = ADD v7d2(0x4) v7e8(0x20)
0x7ed: v7ed = CALLDATALOAD v7d2(0x4)
0x7ee: v7ee(0x1) = CONST 
0x7f0: v7f0(0x20) = CONST 
0x7f2: v7f2(0x100000000) = SHL v7f0(0x20) v7ee(0x1)
0x7f4: v7f4 = GT v7ed v7f2(0x100000000)
0x7f5: v7f5 = ISZERO v7f4
0x7f6: v7f6(0x7fe) = CONST 
0x7f9: JUMPI v7f6(0x7fe) v7f5
----------------------------------

Begin block 0x7fa
prev = {'0x7e4'}, next = {}
----------------------------------
Block 0x7fa
0x7fa: v7fa(0x0) = CONST 
0x7fd: REVERT v7fa(0x0) v7fa(0x0)
----------------------------------

Begin block 0x7fe
prev = {'0x7e4'}, next = {'0x810', '0x80c'}
----------------------------------
Block 0x7fe
0x800: v800 = ADD v7d2(0x4) v7ed
0x802: v802(0x20) = CONST 
0x805: v805 = ADD v800 v802(0x20)
0x806: v806 = GT v805 v7e6
0x807: v807 = ISZERO v806
0x808: v808(0x810) = CONST 
0x80b: JUMPI v808(0x810) v807
----------------------------------

Begin block 0x80c
prev = {'0x7fe'}, next = {}
----------------------------------
Block 0x80c
0x80c: v80c(0x0) = CONST 
0x80f: REVERT v80c(0x0) v80c(0x0)
----------------------------------

Begin block 0x810
prev = {'0x7fe'}, next = {'0x82d', '0x831'}
----------------------------------
Block 0x810
0x812: v812 = CALLDATALOAD v800
0x814: v814(0x20) = CONST 
0x816: v816 = ADD v814(0x20) v800
0x819: v819(0x20) = CONST 
0x81c: v81c = MUL v812 v819(0x20)
0x81e: v81e = ADD v816 v81c
0x81f: v81f = GT v81e v7e6
0x820: v820(0x1) = CONST 
0x822: v822(0x20) = CONST 
0x824: v824(0x100000000) = SHL v822(0x20) v820(0x1)
0x826: v826 = GT v812 v824(0x100000000)
0x827: v827 = OR v826 v81f
0x828: v828 = ISZERO v827
0x829: v829(0x831) = CONST 
0x82c: JUMPI v829(0x831) v828
----------------------------------

Begin block 0x82d
prev = {'0x810'}, next = {}
----------------------------------
Block 0x82d
0x82d: v82d(0x0) = CONST 
0x830: REVERT v82d(0x0) v82d(0x0)
----------------------------------

Begin block 0x831
prev = {'0x810'}, next = {'0x14c1'}
----------------------------------
Block 0x831
0x836: v836(0x20) = CONST 
0x838: v838 = MUL v836(0x20) v812
0x839: v839(0x20) = CONST 
0x83b: v83b = ADD v839(0x20) v838
0x83c: v83c(0x40) = CONST 
0x83e: v83e = MLOAD v83c(0x40)
0x841: v841 = ADD v83e v83b
0x842: v842(0x40) = CONST 
0x844: MSTORE v842(0x40) v841
0x84c: MSTORE v83e v812
0x84d: v84d(0x20) = CONST 
0x84f: v84f = ADD v84d(0x20) v83e
0x852: v852(0x20) = CONST 
0x854: v854 = MUL v852(0x20) v812
0x858: CALLDATACOPY v84f v816 v854
0x859: v859(0x0) = CONST 
0x85c: v85c = ADD v84f v854
0x860: MSTORE v85c v859(0x0)
0x865: v865(0x14c1) = CONST 
0x86e: JUMP v865(0x14c1)
----------------------------------

Begin block 0x86f
prev = {}, next = {'0x877', '0x87b'}
----------------------------------
function priceTknUsd()()
Block 0x86f
0x870: v870 = CALLVALUE 
0x872: v872 = ISZERO v870
0x873: v873(0x87b) = CONST 
0x876: JUMPI v873(0x87b) v872
----------------------------------

Begin block 0x877
prev = {'0x86f'}, next = {}
----------------------------------
Block 0x877
0x877: v877(0x0) = CONST 
0x87a: REVERT v877(0x0) v877(0x0)
----------------------------------

Begin block 0x87b
prev = {'0x86f'}, next = {'0x154a'}
----------------------------------
Block 0x87b
0x87d: v87d(0x1bc) = CONST 
0x880: v880(0x154a) = CONST 
0x883: JUMP v880(0x154a)
----------------------------------

Begin block 0x884
prev = {}, next = {'0x890', '0x88c'}
----------------------------------
function newOwner()()
Block 0x884
0x885: v885 = CALLVALUE 
0x887: v887 = ISZERO v885
0x888: v888(0x890) = CONST 
0x88b: JUMPI v888(0x890) v887
----------------------------------

Begin block 0x88c
prev = {'0x884'}, next = {}
----------------------------------
Block 0x88c
0x88c: v88c(0x0) = CONST 
0x88f: REVERT v88c(0x0) v88c(0x0)
----------------------------------

Begin block 0x890
prev = {'0x884'}, next = {'0x1550'}
----------------------------------
Block 0x890
0x892: v892(0x4d0) = CONST 
0x895: v895(0x1550) = CONST 
0x898: JUMP v895(0x1550)
----------------------------------

Begin block 0x899
prev = {}, next = {'0x8a5', '0x8a1'}
----------------------------------
function transferOwnership(address)()
Block 0x899
0x89a: v89a = CALLVALUE 
0x89c: v89c = ISZERO v89a
0x89d: v89d(0x8a5) = CONST 
0x8a0: JUMPI v89d(0x8a5) v89c
----------------------------------

Begin block 0x8a1
prev = {'0x899'}, next = {}
----------------------------------
Block 0x8a1
0x8a1: v8a1(0x0) = CONST 
0x8a4: REVERT v8a1(0x0) v8a1(0x0)
----------------------------------

Begin block 0x8a5
prev = {'0x899'}, next = {'0x8b8', '0x8bc'}
----------------------------------
Block 0x8a5
0x8a7: v8a7(0x1a5) = CONST 
0x8aa: v8aa(0x4) = CONST 
0x8ad: v8ad = CALLDATASIZE 
0x8ae: v8ae = SUB v8ad v8aa(0x4)
0x8af: v8af(0x20) = CONST 
0x8b2: v8b2 = LT v8ae v8af(0x20)
0x8b3: v8b3 = ISZERO v8b2
0x8b4: v8b4(0x8bc) = CONST 
0x8b7: JUMPI v8b4(0x8bc) v8b3
----------------------------------

Begin block 0x8b8
prev = {'0x8a5'}, next = {}
----------------------------------
Block 0x8b8
0x8b8: v8b8(0x0) = CONST 
0x8bb: REVERT v8b8(0x0) v8b8(0x0)
----------------------------------

Begin block 0x8bc
prev = {'0x8a5'}, next = {'0x155f'}
----------------------------------
Block 0x8bc
0x8be: v8be = CALLDATALOAD v8aa(0x4)
0x8bf: v8bf(0x1) = CONST 
0x8c1: v8c1(0x1) = CONST 
0x8c3: v8c3(0xa0) = CONST 
0x8c5: v8c5(0x10000000000000000000000000000000000000000) = SHL v8c3(0xa0) v8c1(0x1)
0x8c6: v8c6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8c5(0x10000000000000000000000000000000000000000) v8bf(0x1)
0x8c7: v8c7 = AND v8c6(0xffffffffffffffffffffffffffffffffffffffff) v8be
0x8c8: v8c8(0x155f) = CONST 
0x8cb: JUMP v8c8(0x155f)
----------------------------------

Begin block 0x8cc
prev = {}, next = {'0x914', '0x8d6'}
----------------------------------
function 0x8cc(v8ccarg0, v8ccarg1)
Block 0x8cc
0x8cd: v8cd(0x3) = CONST 
0x8cf: v8cf = SLOAD v8cd(0x3)
0x8d0: v8d0 = TIMESTAMP 
0x8d1: v8d1 = GT v8d0 v8cf
0x8d2: v8d2(0x914) = CONST 
0x8d5: JUMPI v8d2(0x914) v8d1
----------------------------------

Begin block 0x8d6
prev = {'0x8cc'}, next = {}
----------------------------------
Block 0x8d6
0x8d6: v8d6(0x40) = CONST 
0x8d9: v8d9 = MLOAD v8d6(0x40)
0x8da: v8da(0x461bcd) = CONST 
0x8de: v8de(0xe5) = CONST 
0x8e0: v8e0(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v8de(0xe5) v8da(0x461bcd)
0x8e2: MSTORE v8d9 v8e0(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x8e3: v8e3(0x20) = CONST 
0x8e5: v8e5(0x4) = CONST 
0x8e8: v8e8 = ADD v8d9 v8e5(0x4)
0x8e9: MSTORE v8e8 v8e3(0x20)
0x8ea: v8ea(0xf) = CONST 
0x8ec: v8ec(0x24) = CONST 
0x8ef: v8ef = ADD v8d9 v8ec(0x24)
0x8f0: MSTORE v8ef v8ea(0xf)
0x8f1: v8f1(0x6e6f77203e20737461727454696d65) = CONST 
0x901: v901(0x88) = CONST 
0x903: v903(0x6e6f77203e20737461727454696d650000000000000000000000000000000000) = SHL v901(0x88) v8f1(0x6e6f77203e20737461727454696d65)
0x904: v904(0x44) = CONST 
0x907: v907 = ADD v8d9 v904(0x44)
0x908: MSTORE v907 v903(0x6e6f77203e20737461727454696d650000000000000000000000000000000000)
0x90a: v90a = MLOAD v8d6(0x40)
0x90e: v90e = SUB v8d9 v90a
0x90f: v90f(0x64) = CONST 
0x911: v911 = ADD v90f(0x64) v90e
0x913: REVERT v90a v911
----------------------------------

Begin block 0x914
prev = {'0x8cc'}, next = {'0x95a', '0x91e'}
----------------------------------
Block 0x914
0x915: v915(0x4) = CONST 
0x917: v917 = SLOAD v915(0x4)
0x918: v918 = TIMESTAMP 
0x919: v919 = LT v918 v917
0x91a: v91a(0x95a) = CONST 
0x91d: JUMPI v91a(0x95a) v919
----------------------------------

Begin block 0x91e
prev = {'0x914'}, next = {}
----------------------------------
Block 0x91e
0x91e: v91e(0x40) = CONST 
0x921: v921 = MLOAD v91e(0x40)
0x922: v922(0x461bcd) = CONST 
0x926: v926(0xe5) = CONST 
0x928: v928(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v926(0xe5) v922(0x461bcd)
0x92a: MSTORE v921 v928(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x92b: v92b(0x20) = CONST 
0x92d: v92d(0x4) = CONST 
0x930: v930 = ADD v921 v92d(0x4)
0x931: MSTORE v930 v92b(0x20)
0x932: v932(0xd) = CONST 
0x934: v934(0x24) = CONST 
0x937: v937 = ADD v921 v934(0x24)
0x938: MSTORE v937 v932(0xd)
0x939: v939(0x6e6f77203c20656e6454696d65) = CONST 
0x947: v947(0x98) = CONST 
0x949: v949(0x6e6f77203c20656e6454696d6500000000000000000000000000000000000000) = SHL v947(0x98) v939(0x6e6f77203c20656e6454696d65)
0x94a: v94a(0x44) = CONST 
0x94d: v94d = ADD v921 v94a(0x44)
0x94e: MSTORE v94d v949(0x6e6f77203c20656e6454696d6500000000000000000000000000000000000000)
0x950: v950 = MLOAD v91e(0x40)
0x954: v954 = SUB v921 v950
0x955: v955(0x64) = CONST 
0x957: v957 = ADD v955(0x64) v954
0x959: REVERT v950 v957
----------------------------------

Begin block 0x95a
prev = {'0x914'}, next = {'0x9b1', '0x965'}
----------------------------------
Block 0x95a
0x95b: v95b(0x6) = CONST 
0x95d: v95d = SLOAD v95b(0x6)
0x95e: v95e = CALLVALUE 
0x95f: v95f = LT v95e v95d
0x960: v960 = ISZERO v95f
0x961: v961(0x9b1) = CONST 
0x964: JUMPI v961(0x9b1) v960
----------------------------------

Begin block 0x965
prev = {'0x95a'}, next = {}
----------------------------------
Block 0x965
0x965: v965(0x40) = CONST 
0x968: v968 = MLOAD v965(0x40)
0x969: v969(0x461bcd) = CONST 
0x96d: v96d(0xe5) = CONST 
0x96f: v96f(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v96d(0xe5) v969(0x461bcd)
0x971: MSTORE v968 v96f(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x972: v972(0x20) = CONST 
0x974: v974(0x4) = CONST 
0x977: v977 = ADD v968 v974(0x4)
0x978: MSTORE v977 v972(0x20)
0x979: v979(0x19) = CONST 
0x97b: v97b(0x24) = CONST 
0x97e: v97e = ADD v968 v97b(0x24)
0x97f: MSTORE v97e v979(0x19)
0x980: v980(0x6d73672e76616c7565203e3d2065746865724d696e696d756d00000000000000) = CONST 
0x9a1: v9a1(0x44) = CONST 
0x9a4: v9a4 = ADD v968 v9a1(0x44)
0x9a5: MSTORE v9a4 v980(0x6d73672e76616c7565203e3d2065746865724d696e696d756d00000000000000)
0x9a7: v9a7 = MLOAD v965(0x40)
0x9ab: v9ab = SUB v968 v9a7
0x9ac: v9ac(0x64) = CONST 
0x9ae: v9ae = ADD v9ac(0x64) v9ab
0x9b0: REVERT v9a7 v9ae
----------------------------------

Begin block 0x9b1
prev = {'0x95a'}, next = {'0x9f8', '0x9fc'}
----------------------------------
Block 0x9b1
0x9b2: v9b2(0x2) = CONST 
0x9b4: v9b4 = SLOAD v9b2(0x2)
0x9b5: v9b5(0x40) = CONST 
0x9b8: v9b8 = MLOAD v9b5(0x40)
0x9b9: v9b9(0x70a08231) = CONST 
0x9be: v9be(0xe0) = CONST 
0x9c0: v9c0(0x70a0823100000000000000000000000000000000000000000000000000000000) = SHL v9be(0xe0) v9b9(0x70a08231)
0x9c2: MSTORE v9b8 v9c0(0x70a0823100000000000000000000000000000000000000000000000000000000)
0x9c3: v9c3 = ADDRESS 
0x9c4: v9c4(0x4) = CONST 
0x9c7: v9c7 = ADD v9b8 v9c4(0x4)
0x9c8: MSTORE v9c7 v9c3
0x9ca: v9ca = MLOAD v9b5(0x40)
0x9cb: v9cb(0x0) = CONST 
0x9ce: v9ce(0x1) = CONST 
0x9d0: v9d0(0x1) = CONST 
0x9d2: v9d2(0xa0) = CONST 
0x9d4: v9d4(0x10000000000000000000000000000000000000000) = SHL v9d2(0xa0) v9d0(0x1)
0x9d5: v9d5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v9d4(0x10000000000000000000000000000000000000000) v9ce(0x1)
0x9d6: v9d6 = AND v9d5(0xffffffffffffffffffffffffffffffffffffffff) v9b4
0x9d8: v9d8(0x70a08231) = CONST 
0x9de: v9de(0x24) = CONST 
0x9e2: v9e2 = ADD v9b8 v9de(0x24)
0x9e4: v9e4(0x20) = CONST 
0x9eb: v9eb = SUB v9b8 v9ca
0x9ec: v9ec = ADD v9eb v9de(0x24)
0x9f0: v9f0 = EXTCODESIZE v9d6
0x9f1: v9f1 = ISZERO v9f0
0x9f3: v9f3 = ISZERO v9f1
0x9f4: v9f4(0x9fc) = CONST 
0x9f7: JUMPI v9f4(0x9fc) v9f3
----------------------------------

Begin block 0x9f8
prev = {'0x9b1'}, next = {}
----------------------------------
Block 0x9f8
0x9f8: v9f8(0x0) = CONST 
0x9fb: REVERT v9f8(0x0) v9f8(0x0)
----------------------------------

Begin block 0x9fc
prev = {'0x9b1'}, next = {'0xa10', '0xa07'}
----------------------------------
Block 0x9fc
0x9fe: v9fe = GAS 
0x9ff: v9ff = STATICCALL v9fe v9d6 v9ca v9ec v9ca v9e4(0x20)
0xa00: va00 = ISZERO v9ff
0xa02: va02 = ISZERO va00
0xa03: va03(0xa10) = CONST 
0xa06: JUMPI va03(0xa10) va02
----------------------------------

Begin block 0xa07
prev = {'0x9fc'}, next = {}
----------------------------------
Block 0xa07
0xa07: va07 = RETURNDATASIZE 
0xa08: va08(0x0) = CONST 
0xa0b: RETURNDATACOPY va08(0x0) va08(0x0) va07
0xa0c: va0c = RETURNDATASIZE 
0xa0d: va0d(0x0) = CONST 
0xa0f: REVERT va0d(0x0) va0c
----------------------------------

Begin block 0xa10
prev = {'0x9fc'}, next = {'0xa26', '0xa22'}
----------------------------------
Block 0xa10
0xa15: va15(0x40) = CONST 
0xa17: va17 = MLOAD va15(0x40)
0xa18: va18 = RETURNDATASIZE 
0xa19: va19(0x20) = CONST 
0xa1c: va1c = LT va18 va19(0x20)
0xa1d: va1d = ISZERO va1c
0xa1e: va1e(0xa26) = CONST 
0xa21: JUMPI va1e(0xa26) va1d
----------------------------------

Begin block 0xa22
prev = {'0xa10'}, next = {}
----------------------------------
Block 0xa22
0xa22: va22(0x0) = CONST 
0xa25: REVERT va22(0x0) va22(0x0)
----------------------------------

Begin block 0xa26
prev = {'0xa10'}, next = {'0xa72', '0xa30'}
----------------------------------
Block 0xa26
0xa28: va28 = MLOAD va17
0xa2c: va2c(0xa72) = CONST 
0xa2f: JUMPI va2c(0xa72) va28
----------------------------------

Begin block 0xa30
prev = {'0xa26'}, next = {}
----------------------------------
Block 0xa30
0xa30: va30(0x40) = CONST 
0xa33: va33 = MLOAD va30(0x40)
0xa34: va34(0x461bcd) = CONST 
0xa38: va38(0xe5) = CONST 
0xa3a: va3a(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL va38(0xe5) va34(0x461bcd)
0xa3c: MSTORE va33 va3a(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xa3d: va3d(0x20) = CONST 
0xa3f: va3f(0x4) = CONST 
0xa42: va42 = ADD va33 va3f(0x4)
0xa43: MSTORE va42 va3d(0x20)
0xa44: va44(0x13) = CONST 
0xa46: va46(0x24) = CONST 
0xa49: va49 = ADD va33 va46(0x24)
0xa4a: MSTORE va49 va44(0x13)
0xa4b: va4b(0x72656d61696e696e67546f6b656e73203e203) = CONST 
0xa5f: va5f(0x6c) = CONST 
0xa61: va61(0x72656d61696e696e67546f6b656e73203e203000000000000000000000000000) = SHL va5f(0x6c) va4b(0x72656d61696e696e67546f6b656e73203e203)
0xa62: va62(0x44) = CONST 
0xa65: va65 = ADD va33 va62(0x44)
0xa66: MSTORE va65 va61(0x72656d61696e696e67546f6b656e73203e203000000000000000000000000000)
0xa68: va68 = MLOAD va30(0x40)
0xa6c: va6c = SUB va33 va68
0xa6d: va6d(0x64) = CONST 
0xa6f: va6f = ADD va6d(0x64) va6c
0xa71: REVERT va68 va6f
----------------------------------

Begin block 0xa72
prev = {'0xa26'}, next = {'0xab3', '0xab7'}
----------------------------------
Block 0xa72
0xa73: va73(0x2) = CONST 
0xa75: va75 = SLOAD va73(0x2)
0xa76: va76(0x40) = CONST 
0xa79: va79 = MLOAD va76(0x40)
0xa7a: va7a(0x313ce567) = CONST 
0xa7f: va7f(0xe0) = CONST 
0xa81: va81(0x313ce56700000000000000000000000000000000000000000000000000000000) = SHL va7f(0xe0) va7a(0x313ce567)
0xa83: MSTORE va79 va81(0x313ce56700000000000000000000000000000000000000000000000000000000)
0xa85: va85 = MLOAD va76(0x40)
0xa86: va86(0x0) = CONST 
0xa89: va89(0x1) = CONST 
0xa8b: va8b(0x1) = CONST 
0xa8d: va8d(0xa0) = CONST 
0xa8f: va8f(0x10000000000000000000000000000000000000000) = SHL va8d(0xa0) va8b(0x1)
0xa90: va90(0xffffffffffffffffffffffffffffffffffffffff) = SUB va8f(0x10000000000000000000000000000000000000000) va89(0x1)
0xa91: va91 = AND va90(0xffffffffffffffffffffffffffffffffffffffff) va75
0xa93: va93(0x313ce567) = CONST 
0xa99: va99(0x4) = CONST 
0xa9d: va9d = ADD va79 va99(0x4)
0xa9f: va9f(0x20) = CONST 
0xaa6: vaa6 = SUB va79 va85
0xaa7: vaa7 = ADD vaa6 va99(0x4)
0xaab: vaab = EXTCODESIZE va91
0xaac: vaac = ISZERO vaab
0xaae: vaae = ISZERO vaac
0xaaf: vaaf(0xab7) = CONST 
0xab2: JUMPI vaaf(0xab7) vaae
----------------------------------

Begin block 0xab3
prev = {'0xa72'}, next = {}
----------------------------------
Block 0xab3
0xab3: vab3(0x0) = CONST 
0xab6: REVERT vab3(0x0) vab3(0x0)
----------------------------------

Begin block 0xab7
prev = {'0xa72'}, next = {'0xac2', '0xacb'}
----------------------------------
Block 0xab7
0xab9: vab9 = GAS 
0xaba: vaba = STATICCALL vab9 va91 va85 vaa7 va85 va9f(0x20)
0xabb: vabb = ISZERO vaba
0xabd: vabd = ISZERO vabb
0xabe: vabe(0xacb) = CONST 
0xac1: JUMPI vabe(0xacb) vabd
----------------------------------

Begin block 0xac2
prev = {'0xab7'}, next = {}
----------------------------------
Block 0xac2
0xac2: vac2 = RETURNDATASIZE 
0xac3: vac3(0x0) = CONST 
0xac6: RETURNDATACOPY vac3(0x0) vac3(0x0) vac2
0xac7: vac7 = RETURNDATASIZE 
0xac8: vac8(0x0) = CONST 
0xaca: REVERT vac8(0x0) vac7
----------------------------------

Begin block 0xacb
prev = {'0xab7'}, next = {'0xadd', '0xae1'}
----------------------------------
Block 0xacb
0xad0: vad0(0x40) = CONST 
0xad2: vad2 = MLOAD vad0(0x40)
0xad3: vad3 = RETURNDATASIZE 
0xad4: vad4(0x20) = CONST 
0xad7: vad7 = LT vad3 vad4(0x20)
0xad8: vad8 = ISZERO vad7
0xad9: vad9(0xae1) = CONST 
0xadc: JUMPI vad9(0xae1) vad8
----------------------------------

Begin block 0xadd
prev = {'0xacb'}, next = {}
----------------------------------
Block 0xadd
0xadd: vadd(0x0) = CONST 
0xae0: REVERT vadd(0x0) vadd(0x0)
----------------------------------

Begin block 0xae1
prev = {'0xacb'}, next = {'0xaf8'}
----------------------------------
Block 0xae1
0xae3: vae3 = MLOAD vad2
0xae4: vae4(0xff) = CONST 
0xae6: vae6 = AND vae4(0xff) vae3
0xae7: vae7(0xa) = CONST 
0xae9: vae9 = EXP vae7(0xa) vae6
0xaec: vaec(0x0) = CONST 
0xaee: vaee(0xb14) = CONST 
0xaf1: vaf1(0xaf8) = CONST 
0xaf4: vaf4(0xe20) = CONST 
0xaf7: vaf7_0 = CALLPRIVATE vaf4(0xe20) vaf1(0xaf8)
----------------------------------

Begin block 0xaf8
prev = {'0xae1'}, next = {'0xb080x8cc'}
----------------------------------
Block 0xaf8
0xaf9: vaf9(0xb08) = CONST 
0xafc: vafc = CALLVALUE 
0xafe: vafe(0xffffffff) = CONST 
0xb03: vb03(0x1631) = CONST 
0xb06: vb06(0x1631) = AND vb03(0x1631) vafe(0xffffffff)
0xb07: vb07_0 = CALLPRIVATE vb06(0x1631) vae9 vafc vaf9(0xb08)
----------------------------------

Begin block 0xb080x8cc
prev = {'0xaf8', '0xb2f'}, next = {'0xb3e', '0xb14'}
----------------------------------
Block 0xb080x8cc
0xb080x8cc_0x0: vb088cc_0 = PHI vb07_0 vb3d_0
0xb080x8cc_0x1: vb088cc_1 = PHI vae9 vaf7_0 v8ccb13_0
0xb080x8cc_0x2: vb088cc_2 = PHI vaee(0xb14) vb21(0xb3e)
0xb0a0x8cc: v8ccb0a(0xffffffff) = CONST 
0xb0f0x8cc: v8ccb0f(0x1656) = CONST 
0xb120x8cc: v8ccb12(0x1656) = AND v8ccb0f(0x1656) v8ccb0a(0xffffffff)
0xb130x8cc: v8ccb13_0 = CALLPRIVATE v8ccb12(0x1656) vb088cc_1 vb088cc_0 vb088cc_2
----------------------------------

Begin block 0xb080xe20
prev = {'0xe2d'}, next = {'0xe48'}
----------------------------------
Block 0xb080xe20
0xb0a0xe20: ve20b0a(0xffffffff) = CONST 
0xb0f0xe20: ve20b0f(0x1656) = CONST 
0xb120xe20: ve20b12(0x1656) = AND ve20b0f(0x1656) ve20b0a(0xffffffff)
0xb130xe20: ve20b13_0 = CALLPRIVATE ve20b12(0x1656) ve2c_0 ve47_0 ve23(0xe48)
----------------------------------

Begin block 0xb14
prev = {'0xb080x8cc'}, next = {'0xb81', '0xb21'}
----------------------------------
Block 0xb14
0xb14_0x3: vb14_3 = PHI va28 vae9 v8ccb13_0
0xb17: vb17(0x0) = CONST 
0xb1b: vb1b = LT vb14_3 v8ccb13_0
0xb1c: vb1c = ISZERO vb1b
0xb1d: vb1d(0xb81) = CONST 
0xb20: JUMPI vb1d(0xb81) vb1c
----------------------------------

Begin block 0xb21
prev = {'0xb14'}, next = {'0xb2f'}
----------------------------------
Block 0xb21
0xb21: vb21(0xb3e) = CONST 
0xb25: vb25(0xb08) = CONST 
0xb28: vb28(0xb2f) = CONST 
0xb2b: vb2b(0xe20) = CONST 
0xb2e: vb2e_0 = CALLPRIVATE vb2b(0xe20) vb28(0xb2f)
----------------------------------

Begin block 0xb2f
prev = {'0xb21'}, next = {'0xb080x8cc'}
----------------------------------
Block 0xb2f
0xb2f_0x7: vb2f_7 = PHI va28 vae9 v8ccb13_0
0xb32: vb32 = SUB v8ccb13_0 vb2f_7
0xb34: vb34(0xffffffff) = CONST 
0xb39: vb39(0x1631) = CONST 
0xb3c: vb3c(0x1631) = AND vb39(0x1631) vb34(0xffffffff)
0xb3d: vb3d_0 = CALLPRIVATE vb3c(0x1631) vb2e_0 vb32 vb25(0xb08)
----------------------------------

Begin block 0xb3e
prev = {'0xb080x8cc'}, next = {'0xb72', '0xb7b'}
----------------------------------
Block 0xb3e
0xb3e_0x5: vb3e_5 = PHI va28 vae9 v8ccarg0 v8ccarg1 v8ccb13_0
0xb3f: vb3f(0x40) = CONST 
0xb41: vb41 = MLOAD vb3f(0x40)
0xb42: vb42(0x0) = CONST 
0xb4a: vb4a(0x1) = CONST 
0xb4c: vb4c(0x1) = CONST 
0xb4e: vb4e(0xa0) = CONST 
0xb50: vb50(0x10000000000000000000000000000000000000000) = SHL vb4e(0xa0) vb4c(0x1)
0xb51: vb51(0xffffffffffffffffffffffffffffffffffffffff) = SUB vb50(0x10000000000000000000000000000000000000000) vb4a(0x1)
0xb53: vb53 = AND vb3e_5 vb51(0xffffffffffffffffffffffffffffffffffffffff)
0xb56: vb56 = ISZERO v8ccb13_0
0xb57: vb57(0x8fc) = CONST 
0xb5a: vb5a = MUL vb57(0x8fc) vb56
0xb65: vb65 = CALL vb5a vb53 v8ccb13_0 vb41 vb42(0x0) vb41 vb42(0x0)
0xb6b: vb6b = ISZERO vb65
0xb6d: vb6d = ISZERO vb6b
0xb6e: vb6e(0xb7b) = CONST 
0xb71: JUMPI vb6e(0xb7b) vb6d
----------------------------------

Begin block 0xb72
prev = {'0xb3e'}, next = {}
----------------------------------
Block 0xb72
0xb72: vb72 = RETURNDATASIZE 
0xb73: vb73(0x0) = CONST 
0xb76: RETURNDATACOPY vb73(0x0) vb73(0x0) vb72
0xb77: vb77 = RETURNDATASIZE 
0xb78: vb78(0x0) = CONST 
0xb7a: REVERT vb78(0x0) vb77
----------------------------------

Begin block 0xb7b
prev = {'0xb3e'}, next = {'0xb94'}
----------------------------------
Block 0xb7b
0xb7d: vb7d(0xb94) = CONST 
0xb80: JUMP vb7d(0xb94)
----------------------------------

Begin block 0xb81
prev = {'0xb14'}, next = {'0xb91'}
----------------------------------
Block 0xb81
0xb81_0x3: vb81_3 = PHI va28 vae9 v8ccb13_0
0xb82: vb82(0xb91) = CONST 
0xb87: vb87(0xffffffff) = CONST 
0xb8c: vb8c(0x1669) = CONST 
0xb8f: vb8f(0x1669) = AND vb8c(0x1669) vb87(0xffffffff)
0xb90: vb90_0 = CALLPRIVATE vb8f(0x1669) v8ccb13_0 vb81_3 vb82(0xb91)
----------------------------------

Begin block 0xb91
prev = {'0xb81'}, next = {'0xb94'}
----------------------------------
Block 0xb91
----------------------------------

Begin block 0xb94
prev = {'0xb91', '0xb7b'}, next = {'0xba6'}
----------------------------------
Block 0xb94
0xb94_0x0: vb94_0 = PHI vb17(0x0) v8ccb13_0
0xb95: vb95(0x0) = CONST 
0xb97: vb97(0xba6) = CONST 
0xb9a: vb9a = CALLVALUE 
0xb9c: vb9c(0xffffffff) = CONST 
0xba1: vba1(0x1669) = CONST 
0xba4: vba4(0x1669) = AND vba1(0x1669) vb9c(0xffffffff)
0xba5: vba5_0 = CALLPRIVATE vba4(0x1669) vb94_0 vb9a vb97(0xba6)
----------------------------------

Begin block 0xba6
prev = {'0xb94'}, next = {'0xbe1', '0xbd8'}
----------------------------------
Block 0xba6
0xba7: vba7(0x5) = CONST 
0xba9: vba9 = SLOAD vba7(0x5)
0xbaa: vbaa(0x40) = CONST 
0xbac: vbac = MLOAD vbaa(0x40)
0xbb0: vbb0(0x1) = CONST 
0xbb2: vbb2(0x1) = CONST 
0xbb4: vbb4(0xa0) = CONST 
0xbb6: vbb6(0x10000000000000000000000000000000000000000) = SHL vbb4(0xa0) vbb2(0x1)
0xbb7: vbb7(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbb6(0x10000000000000000000000000000000000000000) vbb0(0x1)
0xbb8: vbb8 = AND vbb7(0xffffffffffffffffffffffffffffffffffffffff) vba9
0xbbb: vbbb = ISZERO vba5_0
0xbbc: vbbc(0x8fc) = CONST 
0xbbf: vbbf = MUL vbbc(0x8fc) vbbb
0xbc3: vbc3(0x0) = CONST 
0xbcb: vbcb = CALL vbbf vbb8 vba5_0 vbac vbc3(0x0) vbac vbc3(0x0)
0xbd1: vbd1 = ISZERO vbcb
0xbd3: vbd3 = ISZERO vbd1
0xbd4: vbd4(0xbe1) = CONST 
0xbd7: JUMPI vbd4(0xbe1) vbd3
----------------------------------

Begin block 0xbd8
prev = {'0xba6'}, next = {}
----------------------------------
Block 0xbd8
0xbd8: vbd8 = RETURNDATASIZE 
0xbd9: vbd9(0x0) = CONST 
0xbdc: RETURNDATACOPY vbd9(0x0) vbd9(0x0) vbd8
0xbdd: vbdd = RETURNDATASIZE 
0xbde: vbde(0x0) = CONST 
0xbe0: REVERT vbde(0x0) vbdd
----------------------------------

Begin block 0xbe1
prev = {'0xba6'}, next = {'0xc0b'}
----------------------------------
Block 0xbe1
0xbe1_0x3: vbe1_3 = PHI va28 vae9 v8ccarg0 v8ccb13_0
0xbe1_0x6: vbe1_6 = PHI va28 vae9 v8ccarg0 v8ccarg1 v8ccb13_0
0xbe3: vbe3(0x1) = CONST 
0xbe5: vbe5(0x1) = CONST 
0xbe7: vbe7(0xa0) = CONST 
0xbe9: vbe9(0x10000000000000000000000000000000000000000) = SHL vbe7(0xa0) vbe5(0x1)
0xbea: vbea(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbe9(0x10000000000000000000000000000000000000000) vbe3(0x1)
0xbec: vbec = AND vbe1_6 vbea(0xffffffffffffffffffffffffffffffffffffffff)
0xbed: vbed(0x0) = CONST 
0xbf1: MSTORE vbed(0x0) vbec
0xbf2: vbf2(0x9) = CONST 
0xbf4: vbf4(0x20) = CONST 
0xbf6: MSTORE vbf4(0x20) vbf2(0x9)
0xbf7: vbf7(0x40) = CONST 
0xbfa: vbfa = SHA3 vbed(0x0) vbf7(0x40)
0xbfb: vbfb = SLOAD vbfa
0xbfc: vbfc(0xc0b) = CONST 
0xc01: vc01(0xffffffff) = CONST 
0xc06: vc06(0x167b) = CONST 
0xc09: vc09(0x167b) = AND vc06(0x167b) vc01(0xffffffff)
0xc0a: vc0a_0 = CALLPRIVATE vc09(0x167b) vbe1_3 vbfb vbfc(0xc0b)
----------------------------------

Begin block 0xc0b
prev = {'0xbe1'}, next = {'0xc370x8cc'}
----------------------------------
Block 0xc0b
0xc0b_0x3: vc0b_3 = PHI va28 vae9 v8ccarg0 v8ccb13_0
0xc0b_0x6: vc0b_6 = PHI va28 vae9 v8ccarg0 v8ccarg1 v8ccb13_0
0xc0c: vc0c(0x1) = CONST 
0xc0e: vc0e(0x1) = CONST 
0xc10: vc10(0xa0) = CONST 
0xc12: vc12(0x10000000000000000000000000000000000000000) = SHL vc10(0xa0) vc0e(0x1)
0xc13: vc13(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc12(0x10000000000000000000000000000000000000000) vc0c(0x1)
0xc15: vc15 = AND vc0b_6 vc13(0xffffffffffffffffffffffffffffffffffffffff)
0xc16: vc16(0x0) = CONST 
0xc1a: MSTORE vc16(0x0) vc15
0xc1b: vc1b(0x9) = CONST 
0xc1d: vc1d(0x20) = CONST 
0xc1f: MSTORE vc1d(0x20) vc1b(0x9)
0xc20: vc20(0x40) = CONST 
0xc23: vc23 = SHA3 vc16(0x0) vc20(0x40)
0xc24: SSTORE vc23 vc0a_0
0xc25: vc25(0x7) = CONST 
0xc27: vc27 = SLOAD vc25(0x7)
0xc28: vc28(0xc37) = CONST 
0xc2d: vc2d(0xffffffff) = CONST 
0xc32: vc32(0x167b) = CONST 
0xc35: vc35(0x167b) = AND vc32(0x167b) vc2d(0xffffffff)
0xc36: vc36_0 = CALLPRIVATE vc35(0x167b) vc0b_3 vc27 vc28(0xc37)
----------------------------------

Begin block 0xc370x8cc
prev = {'0xc0b'}, next = {}
----------------------------------
Block 0xc370x8cc
0xc370x8cc_0x3: vc378cc_3 = PHI va28 vae9 v8ccarg0 v8ccb13_0
0xc370x8cc_0x6: vc378cc_6 = PHI va28 vae9 v8ccarg0 v8ccarg1 v8ccb13_0
0xc370x8cc_0x7: vc378cc_7 = PHI va28 vae9 v8ccarg0 v8ccarg1 v8ccb13_0
0xc380x8cc: v8ccc38(0x7) = CONST 
0xc3a0x8cc: SSTORE v8ccc38(0x7) vc36_0
0xc3b0x8cc: v8ccc3b(0x40) = CONST 
0xc3e0x8cc: v8ccc3e = MLOAD v8ccc3b(0x40)
0xc410x8cc: MSTORE v8ccc3e vc378cc_3
0xc430x8cc: v8ccc43 = MLOAD v8ccc3b(0x40)
0xc440x8cc: v8ccc44(0x1) = CONST 
0xc460x8cc: v8ccc46(0x1) = CONST 
0xc480x8cc: v8ccc48(0xa0) = CONST 
0xc4a0x8cc: v8ccc4a(0x10000000000000000000000000000000000000000) = SHL v8ccc48(0xa0) v8ccc46(0x1)
0xc4b0x8cc: v8ccc4b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8ccc4a(0x10000000000000000000000000000000000000000) v8ccc44(0x1)
0xc4d0x8cc: v8ccc4d = AND vc378cc_6 v8ccc4b(0xffffffffffffffffffffffffffffffffffffffff)
0xc4f0x8cc: v8ccc4f(0x0) = CONST 
0xc520x8cc: v8ccc52(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0xc760x8cc: v8ccc76 = SUB v8ccc3e v8ccc43
0xc770x8cc: v8ccc77(0x20) = CONST 
0xc790x8cc: v8ccc79 = ADD v8ccc77(0x20) v8ccc76
0xc7b0x8cc: LOG3 v8ccc43 v8ccc79 v8ccc52(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v8ccc4f(0x0) v8ccc4d
0xc820x8cc: RETURNPRIVATE vc378cc_7
----------------------------------

Begin block 0xc83
prev = {'0x1b3'}, next = {'0x1bc0x1a7'}
----------------------------------
Block 0xc83
0xc84: vc84(0x7) = CONST 
0xc86: vc86 = SLOAD vc84(0x7)
0xc88: JUMP v1b5(0x1bc)
----------------------------------

Begin block 0xc89
prev = {'0x1f1'}, next = {'0xcdf', '0xc9d'}
----------------------------------
Block 0xc89
0xc8a: vc8a(0x0) = CONST 
0xc8d: vc8d = SLOAD vc8a(0x0)
0xc8e: vc8e(0x1) = CONST 
0xc90: vc90(0x1) = CONST 
0xc92: vc92(0xa0) = CONST 
0xc94: vc94(0x10000000000000000000000000000000000000000) = SHL vc92(0xa0) vc90(0x1)
0xc95: vc95(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc94(0x10000000000000000000000000000000000000000) vc8e(0x1)
0xc96: vc96 = AND vc95(0xffffffffffffffffffffffffffffffffffffffff) vc8d
0xc97: vc97 = CALLER 
0xc98: vc98 = EQ vc97 vc96
0xc99: vc99(0xcdf) = CONST 
0xc9c: JUMPI vc99(0xcdf) vc98
----------------------------------

Begin block 0xc9d
prev = {'0xc89'}, next = {}
----------------------------------
Block 0xc9d
0xc9d: vc9d(0x40) = CONST 
0xca0: vca0 = MLOAD vc9d(0x40)
0xca1: vca1(0x461bcd) = CONST 
0xca5: vca5(0xe5) = CONST 
0xca7: vca7(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vca5(0xe5) vca1(0x461bcd)
0xca9: MSTORE vca0 vca7(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xcaa: vcaa(0x20) = CONST 
0xcac: vcac(0x4) = CONST 
0xcaf: vcaf = ADD vca0 vcac(0x4)
0xcb0: MSTORE vcaf vcaa(0x20)
0xcb1: vcb1(0x13) = CONST 
0xcb3: vcb3(0x24) = CONST 
0xcb6: vcb6 = ADD vca0 vcb3(0x24)
0xcb7: MSTORE vcb6 vcb1(0x13)
0xcb8: vcb8(0x36b9b39739b2b73232b9101e9e9037bbb732b9) = CONST 
0xccc: vccc(0x69) = CONST 
0xcce: vcce(0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000) = SHL vccc(0x69) vcb8(0x36b9b39739b2b73232b9101e9e9037bbb732b9)
0xccf: vccf(0x44) = CONST 
0xcd2: vcd2 = ADD vca0 vccf(0x44)
0xcd3: MSTORE vcd2 vcce(0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000)
0xcd5: vcd5 = MLOAD vc9d(0x40)
0xcd9: vcd9 = SUB vca0 vcd5
0xcda: vcda(0x64) = CONST 
0xcdc: vcdc = ADD vcda(0x64) vcd9
0xcde: REVERT vcd5 vcdc
----------------------------------

Begin block 0xcdf
prev = {'0xc89'}, next = {'0xd31', '0xd35'}
----------------------------------
Block 0xcdf
0xce0: vce0(0x2) = CONST 
0xce2: vce2 = SLOAD vce0(0x2)
0xce3: vce3(0x40) = CONST 
0xce6: vce6 = MLOAD vce3(0x40)
0xce7: vce7(0xa9059cbb) = CONST 
0xcec: vcec(0xe0) = CONST 
0xcee: vcee(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = SHL vcec(0xe0) vce7(0xa9059cbb)
0xcf0: MSTORE vce6 vcee(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0xcf1: vcf1(0x1) = CONST 
0xcf3: vcf3(0x1) = CONST 
0xcf5: vcf5(0xa0) = CONST 
0xcf7: vcf7(0x10000000000000000000000000000000000000000) = SHL vcf5(0xa0) vcf3(0x1)
0xcf8: vcf8(0xffffffffffffffffffffffffffffffffffffffff) = SUB vcf7(0x10000000000000000000000000000000000000000) vcf1(0x1)
0xcfb: vcfb = AND vcf8(0xffffffffffffffffffffffffffffffffffffffff) v1fd
0xcfc: vcfc(0x4) = CONST 
0xcff: vcff = ADD vce6 vcfc(0x4)
0xd00: MSTORE vcff vcfb
0xd01: vd01(0x24) = CONST 
0xd04: vd04 = ADD vce6 vd01(0x24)
0xd07: MSTORE vd04 v202
0xd09: vd09 = MLOAD vce3(0x40)
0xd0d: vd0d = AND vce2 vcf8(0xffffffffffffffffffffffffffffffffffffffff)
0xd0f: vd0f(0xa9059cbb) = CONST 
0xd15: vd15(0x44) = CONST 
0xd19: vd19 = ADD vce6 vd15(0x44)
0xd1b: vd1b(0x20) = CONST 
0xd22: vd22 = SUB vce6 vd09
0xd23: vd23 = ADD vd22 vd15(0x44)
0xd25: vd25(0x0) = CONST 
0xd29: vd29 = EXTCODESIZE vd0d
0xd2a: vd2a = ISZERO vd29
0xd2c: vd2c = ISZERO vd2a
0xd2d: vd2d(0xd35) = CONST 
0xd30: JUMPI vd2d(0xd35) vd2c
----------------------------------

Begin block 0xd31
prev = {'0xcdf'}, next = {}
----------------------------------
Block 0xd31
0xd31: vd31(0x0) = CONST 
0xd34: REVERT vd31(0x0) vd31(0x0)
----------------------------------

Begin block 0xd35
prev = {'0xcdf'}, next = {'0xd40', '0xd49'}
----------------------------------
Block 0xd35
0xd37: vd37 = GAS 
0xd38: vd38 = CALL vd37 vd0d vd25(0x0) vd09 vd23 vd09 vd1b(0x20)
0xd39: vd39 = ISZERO vd38
0xd3b: vd3b = ISZERO vd39
0xd3c: vd3c(0xd49) = CONST 
0xd3f: JUMPI vd3c(0xd49) vd3b
----------------------------------

Begin block 0xd40
prev = {'0xd35'}, next = {}
----------------------------------
Block 0xd40
0xd40: vd40 = RETURNDATASIZE 
0xd41: vd41(0x0) = CONST 
0xd44: RETURNDATACOPY vd41(0x0) vd41(0x0) vd40
0xd45: vd45 = RETURNDATASIZE 
0xd46: vd46(0x0) = CONST 
0xd48: REVERT vd46(0x0) vd45
----------------------------------

Begin block 0xd49
prev = {'0xd35'}, next = {'0xd5f', '0xd5b'}
----------------------------------
Block 0xd49
0xd4e: vd4e(0x40) = CONST 
0xd50: vd50 = MLOAD vd4e(0x40)
0xd51: vd51 = RETURNDATASIZE 
0xd52: vd52(0x20) = CONST 
0xd55: vd55 = LT vd51 vd52(0x20)
0xd56: vd56 = ISZERO vd55
0xd57: vd57(0xd5f) = CONST 
0xd5a: JUMPI vd57(0xd5f) vd56
----------------------------------

Begin block 0xd5b
prev = {'0xd49'}, next = {}
----------------------------------
Block 0xd5b
0xd5b: vd5b(0x0) = CONST 
0xd5e: REVERT vd5b(0x0) vd5b(0x0)
----------------------------------

Begin block 0xd5f
prev = {'0xd49'}, next = {'0xd640x1ce'}
----------------------------------
Block 0xd5f
0xd61: vd61 = MLOAD vd50
----------------------------------

Begin block 0xd640x1ce
prev = {'0xd5f'}, next = {'0x207'}
----------------------------------
Block 0xd640x1ce
0xd690x1ce: JUMP v1dc(0x207)
----------------------------------

Begin block 0xd640x1631
prev = {'0x1639', '0x164e'}, next = {}
----------------------------------
Block 0xd640x1631
0xd640x1631_0x0: vd641631_0 = PHI v163a(0x0) v1644
0xd690x1631: RETURNPRIVATE v1631arg2 vd641631_0
----------------------------------

Begin block 0xd640x167b
prev = {'0x167b'}, next = {}
----------------------------------
Block 0xd640x167b
0xd690x167b: RETURNPRIVATE v167barg2 v167e
----------------------------------

Begin block 0xd6a
prev = {}, next = {'0xdf00xd6a', '0xdaa'}
----------------------------------
function 0xd6a(vd6aarg0)
Block 0xd6a
0xd6b: vd6b(0xd) = CONST 
0xd6e: vd6e = SLOAD vd6b(0xd)
0xd6f: vd6f(0x40) = CONST 
0xd72: vd72 = MLOAD vd6f(0x40)
0xd73: vd73(0x20) = CONST 
0xd75: vd75(0x2) = CONST 
0xd77: vd77(0x1) = CONST 
0xd7a: vd7a = AND vd6e vd77(0x1)
0xd7b: vd7b = ISZERO vd7a
0xd7c: vd7c(0x100) = CONST 
0xd7f: vd7f = MUL vd7c(0x100) vd7b
0xd80: vd80(0x0) = CONST 
0xd82: vd82(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT vd80(0x0)
0xd83: vd83 = ADD vd82(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) vd7f
0xd86: vd86 = AND vd6e vd83
0xd8a: vd8a = DIV vd86 vd75(0x2)
0xd8b: vd8b(0x1f) = CONST 
0xd8e: vd8e = ADD vd8a vd8b(0x1f)
0xd91: vd91 = DIV vd8e vd73(0x20)
0xd93: vd93 = MUL vd73(0x20) vd91
0xd95: vd95 = ADD vd72 vd93
0xd97: vd97 = ADD vd73(0x20) vd95
0xd9a: MSTORE vd6f(0x40) vd97
0xd9d: MSTORE vd72 vd8a
0xda1: vda1 = ADD vd72 vd73(0x20)
0xda5: vda5 = ISZERO vd8a
0xda6: vda6(0xdf0) = CONST 
0xda9: JUMPI vda6(0xdf0) vda5
----------------------------------

Begin block 0xdaa
prev = {'0xd6a'}, next = {'0xdb2', '0xdc50xd6a'}
----------------------------------
Block 0xdaa
0xdab: vdab(0x1f) = CONST 
0xdad: vdad = LT vdab(0x1f) vd8a
0xdae: vdae(0xdc5) = CONST 
0xdb1: JUMPI vdae(0xdc5) vdad
----------------------------------

Begin block 0xdb2
prev = {'0xdaa'}, next = {'0xdf00xd6a'}
----------------------------------
Block 0xdb2
0xdb2: vdb2(0x100) = CONST 
0xdb7: vdb7 = SLOAD vd6b(0xd)
0xdb8: vdb8 = DIV vdb7 vdb2(0x100)
0xdb9: vdb9 = MUL vdb8 vdb2(0x100)
0xdbb: MSTORE vda1 vdb9
0xdbd: vdbd(0x20) = CONST 
0xdbf: vdbf = ADD vdbd(0x20) vda1
0xdc1: vdc1(0xdf0) = CONST 
0xdc4: JUMP vdc1(0xdf0)
----------------------------------

Begin block 0xdc50xd6a
prev = {'0xdaa'}, next = {'0xdd30xd6a'}
----------------------------------
Block 0xdc50xd6a
0xdc70xd6a: vd6adc7 = ADD vda1 vd8a
0xdca0xd6a: vd6adca(0x0) = CONST 
0xdcc0xd6a: MSTORE vd6adca(0x0) vd6b(0xd)
0xdcd0xd6a: vd6adcd(0x20) = CONST 
0xdcf0xd6a: vd6adcf(0x0) = CONST 
0xdd10xd6a: vd6add1 = SHA3 vd6adcf(0x0) vd6adcd(0x20)
----------------------------------

Begin block 0xdc50x142f
prev = {'0x146f'}, next = {'0xdd30x142f'}
----------------------------------
Block 0xdc50x142f
0xdc70x142f: v142fdc7 = ADD v1466 v144f
0xdca0x142f: v142fdca(0x0) = CONST 
0xdcc0x142f: MSTORE v142fdca(0x0) v1430(0xe)
0xdcd0x142f: v142fdcd(0x20) = CONST 
0xdcf0x142f: v142fdcf(0x0) = CONST 
0xdd10x142f: v142fdd1 = SHA3 v142fdcf(0x0) v142fdcd(0x20)
----------------------------------

Begin block 0xdd30xd6a
prev = {'0xdd30xd6a', '0xdc50xd6a'}, next = {'0xde70xd6a', '0xdd30xd6a'}
----------------------------------
Block 0xdd30xd6a
0xdd30xd6a_0x0: vdd3d6a_0 = PHI vda1 vd6addf
0xdd30xd6a_0x1: vdd3d6a_1 = PHI vd6addb vd6add1
0xdd50xd6a: vd6add5 = SLOAD vdd3d6a_1
0xdd70xd6a: MSTORE vdd3d6a_0 vd6add5
0xdd90xd6a: vd6add9(0x1) = CONST 
0xddb0xd6a: vd6addb = ADD vd6add9(0x1) vdd3d6a_1
0xddd0xd6a: vd6addd(0x20) = CONST 
0xddf0xd6a: vd6addf = ADD vd6addd(0x20) vdd3d6a_0
0xde20xd6a: vd6ade2 = GT vd6adc7 vd6addf
0xde30xd6a: vd6ade3(0xdd3) = CONST 
0xde60xd6a: JUMPI vd6ade3(0xdd3) vd6ade2
----------------------------------

Begin block 0xdd30x142f
prev = {'0xdc50x142f', '0xdd30x142f'}, next = {'0xde70x142f', '0xdd30x142f'}
----------------------------------
Block 0xdd30x142f
0xdd30x142f_0x0: vdd3142f_0 = PHI v1466 v142fddf
0xdd30x142f_0x1: vdd3142f_1 = PHI v142fddb v142fdd1
0xdd50x142f: v142fdd5 = SLOAD vdd3142f_1
0xdd70x142f: MSTORE vdd3142f_0 v142fdd5
0xdd90x142f: v142fdd9(0x1) = CONST 
0xddb0x142f: v142fddb = ADD v142fdd9(0x1) vdd3142f_1
0xddd0x142f: v142fddd(0x20) = CONST 
0xddf0x142f: v142fddf = ADD v142fddd(0x20) vdd3142f_0
0xde20x142f: v142fde2 = GT v142fdc7 v142fddf
0xde30x142f: v142fde3(0xdd3) = CONST 
0xde60x142f: JUMPI v142fde3(0xdd3) v142fde2
----------------------------------

Begin block 0xde70xd6a
prev = {'0xdd30xd6a'}, next = {'0xdf00xd6a'}
----------------------------------
Block 0xde70xd6a
0xde90xd6a: vd6ade9 = SUB vd6addf vd6adc7
0xdea0xd6a: vd6adea(0x1f) = CONST 
0xdec0xd6a: vd6adec = AND vd6adea(0x1f) vd6ade9
0xdee0xd6a: vd6adee = ADD vd6adc7 vd6adec
----------------------------------

Begin block 0xde70x142f
prev = {'0xdd30x142f'}, next = {'0xdf00x142f'}
----------------------------------
Block 0xde70x142f
0xde90x142f: v142fde9 = SUB v142fddf v142fdc7
0xdea0x142f: v142fdea(0x1f) = CONST 
0xdec0x142f: v142fdec = AND v142fdea(0x1f) v142fde9
0xdee0x142f: v142fdee = ADD v142fdc7 v142fdec
----------------------------------

Begin block 0xdf00xd6a
prev = {'0xdb2', '0xde70xd6a', '0xd6a'}, next = {}
----------------------------------
Block 0xdf00xd6a
0xdf70xd6a: RETURNPRIVATE vd6aarg0 vd72 vd6aarg0
----------------------------------

Begin block 0xdf00x142f
prev = {'0x142f', '0xde70x142f', '0x1477'}, next = {}
----------------------------------
Block 0xdf00x142f
0xdf70x142f: RETURNPRIVATE v142farg0 v1437 v142farg0
----------------------------------

Begin block 0xdf8
prev = {'0x2c8'}, next = {'0x1bc0x2a5'}
----------------------------------
Block 0xdf8
0xdf9: vdf9(0x9) = CONST 
0xdfb: vdfb(0x20) = CONST 
0xdfd: MSTORE vdfb(0x20) vdf9(0x9)
0xdfe: vdfe(0x0) = CONST 
0xe02: MSTORE vdfe(0x0) v2d3
0xe03: ve03(0x40) = CONST 
0xe06: ve06 = SHA3 vdfe(0x0) ve03(0x40)
0xe07: ve07 = SLOAD ve06
0xe09: JUMP v2b3(0x1bc)
----------------------------------

Begin block 0xe0a
prev = {}, next = {'0xe0e0xe0a'}
----------------------------------
function 0xe0a(ve0aarg0)
Block 0xe0a
0xe0b: ve0b(0x7) = CONST 
0xe0d: ve0d = SLOAD ve0b(0x7)
----------------------------------

Begin block 0xe0e0xe0a
prev = {'0xe0a'}, next = {}
----------------------------------
Block 0xe0e0xe0a
0xe100xe0a: RETURNPRIVATE ve0aarg0 ve0d
----------------------------------

Begin block 0xe0e0x18c8
prev = {'0x18c40x18c8'}, next = {}
----------------------------------
Block 0xe0e0x18c8
0xe100x18c8: RETURNPRIVATE v18c8arg2 v18c8arg1
----------------------------------

Begin block 0xe11
prev = {'0x2f9'}, next = {'0x302'}
----------------------------------
Block 0xe11
0xe12: ve12(0xf) = CONST 
0xe14: ve14 = SLOAD ve12(0xf)
0xe15: ve15(0xff) = CONST 
0xe17: ve17 = AND ve15(0xff) ve14
0xe19: JUMP v2fb(0x302)
----------------------------------

Begin block 0xe1a
prev = {'0x324'}, next = {'0x1bc0x318'}
----------------------------------
Block 0xe1a
0xe1b: ve1b(0x4) = CONST 
0xe1d: ve1d = SLOAD ve1b(0x4)
0xe1f: JUMP v326(0x1bc)
----------------------------------

Begin block 0xe20
prev = {}, next = {'0xe2d'}
----------------------------------
function 0xe20(ve20arg0)
Block 0xe20
0xe21: ve21(0x0) = CONST 
0xe23: ve23(0xe48) = CONST 
0xe26: ve26(0xe2d) = CONST 
0xe29: ve29(0x114b) = CONST 
0xe2c: ve2c_0 = CALLPRIVATE ve29(0x114b) ve26(0xe2d)
----------------------------------

Begin block 0xe2d
prev = {'0xe20'}, next = {'0xb080xe20'}
----------------------------------
Block 0xe2d
0xe2e: ve2e(0xb) = CONST 
0xe30: ve30 = SLOAD ve2e(0xb)
0xe31: ve31(0xb08) = CONST 
0xe35: ve35(0xde0b6b3a7640000) = CONST 
0xe3e: ve3e(0xffffffff) = CONST 
0xe43: ve43(0x1631) = CONST 
0xe46: ve46(0x1631) = AND ve43(0x1631) ve3e(0xffffffff)
0xe47: ve47_0 = CALLPRIVATE ve46(0x1631) ve35(0xde0b6b3a7640000) ve30 ve31(0xb08)
----------------------------------

Begin block 0xe48
prev = {'0xb080xe20'}, next = {}
----------------------------------
Block 0xe48
0xe4c: RETURNPRIVATE ve20arg0 ve20b13_0
----------------------------------

Begin block 0xe4d
prev = {'0x451'}, next = {'0xe94', '0xe59'}
----------------------------------
Block 0xe4d
0xe4e: ve4e(0xa) = CONST 
0xe50: ve50 = SLOAD ve4e(0xa)
0xe51: ve51(0xff) = CONST 
0xe53: ve53 = AND ve51(0xff) ve50
0xe54: ve54 = ISZERO ve53
0xe55: ve55(0xe94) = CONST 
0xe58: JUMPI ve55(0xe94) ve54
----------------------------------

Begin block 0xe59
prev = {'0xe4d'}, next = {}
----------------------------------
Block 0xe59
0xe59: ve59(0x40) = CONST 
0xe5c: ve5c = MLOAD ve59(0x40)
0xe5d: ve5d(0x461bcd) = CONST 
0xe61: ve61(0xe5) = CONST 
0xe63: ve63(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL ve61(0xe5) ve5d(0x461bcd)
0xe65: MSTORE ve5c ve63(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xe66: ve66(0x20) = CONST 
0xe68: ve68(0x4) = CONST 
0xe6b: ve6b = ADD ve5c ve68(0x4)
0xe6c: MSTORE ve6b ve66(0x20)
0xe6d: ve6d(0xc) = CONST 
0xe6f: ve6f(0x24) = CONST 
0xe72: ve72 = ADD ve5c ve6f(0x24)
0xe73: MSTORE ve72 ve6d(0xc)
0xe74: ve74(0x85a5b9a5d1a585b1a5e9959) = CONST 
0xe81: ve81(0xa2) = CONST 
0xe83: ve83(0x21696e697469616c697a65640000000000000000000000000000000000000000) = SHL ve81(0xa2) ve74(0x85a5b9a5d1a585b1a5e9959)
0xe84: ve84(0x44) = CONST 
0xe87: ve87 = ADD ve5c ve84(0x44)
0xe88: MSTORE ve87 ve83(0x21696e697469616c697a65640000000000000000000000000000000000000000)
0xe8a: ve8a = MLOAD ve59(0x40)
0xe8e: ve8e = SUB ve5c ve8a
0xe8f: ve8f(0x64) = CONST 
0xe91: ve91 = ADD ve8f(0x64) ve8e
0xe93: REVERT ve8a ve91
----------------------------------

Begin block 0xe94
prev = {'0xe4d'}, next = {'0xee4'}
----------------------------------
Block 0xe94
0xe95: ve95(0xa) = CONST 
0xe98: ve98 = SLOAD ve95(0xa)
0xe99: ve99(0xff) = CONST 
0xe9b: ve9b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT ve99(0xff)
0xe9c: ve9c = AND ve9b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) ve98
0xe9d: ve9d(0x1) = CONST 
0xe9f: ve9f = OR ve9d(0x1) ve9c
0xea1: SSTORE ve95(0xa) ve9f
0xea2: vea2(0x2) = CONST 
0xea5: vea5 = SLOAD vea2(0x2)
0xea6: vea6(0x1) = CONST 
0xea8: vea8(0x1) = CONST 
0xeaa: veaa(0xa0) = CONST 
0xeac: veac(0x10000000000000000000000000000000000000000) = SHL veaa(0xa0) vea8(0x1)
0xead: vead(0xffffffffffffffffffffffffffffffffffffffff) = SUB veac(0x10000000000000000000000000000000000000000) vea6(0x1)
0xeb0: veb0 = AND v372 vead(0xffffffffffffffffffffffffffffffffffffffff)
0xeb1: veb1(0x1) = CONST 
0xeb3: veb3(0x1) = CONST 
0xeb5: veb5(0xa0) = CONST 
0xeb7: veb7(0x10000000000000000000000000000000000000000) = SHL veb5(0xa0) veb3(0x1)
0xeb8: veb8(0xffffffffffffffffffffffffffffffffffffffff) = SUB veb7(0x10000000000000000000000000000000000000000) veb1(0x1)
0xeb9: veb9(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT veb8(0xffffffffffffffffffffffffffffffffffffffff)
0xebc: vebc = AND veb9(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) vea5
0xebd: vebd = OR vebc veb0
0xec0: SSTORE vea2(0x2) vebd
0xec1: vec1(0x5) = CONST 
0xec4: vec4 = SLOAD vec1(0x5)
0xec7: vec7 = AND v37b vead(0xffffffffffffffffffffffffffffffffffffffff)
0xecb: vecb = AND veb9(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) vec4
0xecf: vecf = OR vecb vec7
0xed1: SSTORE vec1(0x5) vecf
0xed3: ved3 = MLOAD v3df
0xed4: ved4(0xee4) = CONST 
0xed8: ved8(0xd) = CONST 
0xedb: vedb(0x20) = CONST 
0xede: vede = ADD v3df vedb(0x20)
0xee0: vee0(0x184a) = CONST 
0xee3: vee3_0 = CALLPRIVATE vee0(0x184a) ved3 vede ved8(0xd) ved4(0xee4)
----------------------------------

Begin block 0xee4
prev = {'0xe94'}, next = {'0xef8'}
----------------------------------
Block 0xee4
0xee7: vee7 = MLOAD v464
0xee8: vee8(0xef8) = CONST 
0xeec: veec(0xe) = CONST 
0xeef: veef(0x20) = CONST 
0xef2: vef2 = ADD v464 veef(0x20)
0xef4: vef4(0x184a) = CONST 
0xef7: vef7_0 = CALLPRIVATE vef4(0x184a) vee7 vef2 veec(0xe) vee8(0xef8)
----------------------------------

Begin block 0xef8
prev = {'0xee4'}, next = {'0x1a50x342'}
----------------------------------
Block 0xef8
0xefa: vefa(0xf) = CONST 
0xefd: vefd = SLOAD vefa(0xf)
0xefe: vefe(0xff) = CONST 
0xf02: vf02 = AND v48d vefe(0xff)
0xf03: vf03(0xff) = CONST 
0xf05: vf05(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT vf03(0xff)
0xf08: vf08 = AND vefd vf05(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00)
0xf0c: vf0c = OR vf08 vf02
0xf0f: SSTORE vefa(0xf) vf0c
0xf10: vf10(0x3) = CONST 
0xf15: SSTORE vf10(0x3) v496
0xf16: vf16(0x4) = CONST 
0xf1b: SSTORE vf16(0x4) v49c
0xf1c: vf1c(0x6) = CONST 
0xf1e: SSTORE vf1c(0x6) v4a2
0xf1f: vf1f(0xc) = CONST 
0xf22: vf22 = SLOAD vf1f(0xc)
0xf23: vf23(0x1) = CONST 
0xf25: vf25(0x1) = CONST 
0xf27: vf27(0xa0) = CONST 
0xf29: vf29(0x10000000000000000000000000000000000000000) = SHL vf27(0xa0) vf25(0x1)
0xf2a: vf2a(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf29(0x10000000000000000000000000000000000000000) vf23(0x1)
0xf2d: vf2d = AND v4b1 vf2a(0xffffffffffffffffffffffffffffffffffffffff)
0xf2e: vf2e(0x1) = CONST 
0xf30: vf30(0x1) = CONST 
0xf32: vf32(0xa0) = CONST 
0xf34: vf34(0x10000000000000000000000000000000000000000) = SHL vf32(0xa0) vf30(0x1)
0xf35: vf35(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf34(0x10000000000000000000000000000000000000000) vf2e(0x1)
0xf36: vf36(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vf35(0xffffffffffffffffffffffffffffffffffffffff)
0xf39: vf39 = AND vf36(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) vf22
0xf3a: vf3a = OR vf39 vf2d
0xf3c: SSTORE vf1f(0xc) vf3a
0xf3d: vf3d(0xb) = CONST 
0xf42: SSTORE vf3d(0xb) v4b6
0xf43: vf43(0x0) = CONST 
0xf46: vf46 = SLOAD vf43(0x0)
0xf49: vf49 = AND vf36(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) vf46
0xf4a: vf4a = CALLER 
0xf4b: vf4b = OR vf4a vf49
0xf4d: SSTORE vf43(0x0) vf4b
0xf52: JUMP v350(0x1a5)
----------------------------------

Begin block 0xf53
prev = {'0x4c7'}, next = {'0x4d00x4bb'}
----------------------------------
Block 0xf53
0xf54: vf54(0xc) = CONST 
0xf56: vf56 = SLOAD vf54(0xc)
0xf57: vf57(0x1) = CONST 
0xf59: vf59(0x1) = CONST 
0xf5b: vf5b(0xa0) = CONST 
0xf5d: vf5d(0x10000000000000000000000000000000000000000) = SHL vf5b(0xa0) vf59(0x1)
0xf5e: vf5e(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf5d(0x10000000000000000000000000000000000000000) vf57(0x1)
0xf5f: vf5f = AND vf5e(0xffffffffffffffffffffffffffffffffffffffff) vf56
0xf61: JUMP v4c9(0x4d0)
----------------------------------

Begin block 0xf62
prev = {'0x4f8'}, next = {'0x4d00x4ec'}
----------------------------------
Block 0xf62
0xf63: vf63(0x5) = CONST 
0xf65: vf65 = SLOAD vf63(0x5)
0xf66: vf66(0x1) = CONST 
0xf68: vf68(0x1) = CONST 
0xf6a: vf6a(0xa0) = CONST 
0xf6c: vf6c(0x10000000000000000000000000000000000000000) = SHL vf6a(0xa0) vf68(0x1)
0xf6d: vf6d(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf6c(0x10000000000000000000000000000000000000000) vf66(0x1)
0xf6e: vf6e = AND vf6d(0xffffffffffffffffffffffffffffffffffffffff) vf65
0xf70: JUMP v4fa(0x4d0)
----------------------------------

Begin block 0xf71
prev = {'0x50d'}, next = {'0x4d00x501'}
----------------------------------
Block 0xf71
0xf72: vf72(0x2) = CONST 
0xf74: vf74 = SLOAD vf72(0x2)
0xf75: vf75(0x1) = CONST 
0xf77: vf77(0x1) = CONST 
0xf79: vf79(0xa0) = CONST 
0xf7b: vf7b(0x10000000000000000000000000000000000000000) = SHL vf79(0xa0) vf77(0x1)
0xf7c: vf7c(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf7b(0x10000000000000000000000000000000000000000) vf75(0x1)
0xf7d: vf7d = AND vf7c(0xffffffffffffffffffffffffffffffffffffffff) vf74
0xf7f: JUMP v50f(0x4d0)
----------------------------------

Begin block 0xf80
prev = {'0x522'}, next = {'0x1bc0x516'}
----------------------------------
Block 0xf80
0xf81: vf81(0x8) = CONST 
0xf83: vf83 = SLOAD vf81(0x8)
0xf85: JUMP v524(0x1bc)
----------------------------------

Begin block 0xf86
prev = {'0x54e'}, next = {'0xf99', '0xfdb'}
----------------------------------
Block 0xf86
0xf87: vf87(0x0) = CONST 
0xf89: vf89 = SLOAD vf87(0x0)
0xf8a: vf8a(0x1) = CONST 
0xf8c: vf8c(0x1) = CONST 
0xf8e: vf8e(0xa0) = CONST 
0xf90: vf90(0x10000000000000000000000000000000000000000) = SHL vf8e(0xa0) vf8c(0x1)
0xf91: vf91(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf90(0x10000000000000000000000000000000000000000) vf8a(0x1)
0xf92: vf92 = AND vf91(0xffffffffffffffffffffffffffffffffffffffff) vf89
0xf93: vf93 = CALLER 
0xf94: vf94 = EQ vf93 vf92
0xf95: vf95(0xfdb) = CONST 
0xf98: JUMPI vf95(0xfdb) vf94
----------------------------------

Begin block 0xf99
prev = {'0xf86'}, next = {}
----------------------------------
Block 0xf99
0xf99: vf99(0x40) = CONST 
0xf9c: vf9c = MLOAD vf99(0x40)
0xf9d: vf9d(0x461bcd) = CONST 
0xfa1: vfa1(0xe5) = CONST 
0xfa3: vfa3(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vfa1(0xe5) vf9d(0x461bcd)
0xfa5: MSTORE vf9c vfa3(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xfa6: vfa6(0x20) = CONST 
0xfa8: vfa8(0x4) = CONST 
0xfab: vfab = ADD vf9c vfa8(0x4)
0xfac: MSTORE vfab vfa6(0x20)
0xfad: vfad(0x13) = CONST 
0xfaf: vfaf(0x24) = CONST 
0xfb2: vfb2 = ADD vf9c vfaf(0x24)
0xfb3: MSTORE vfb2 vfad(0x13)
0xfb4: vfb4(0x36b9b39739b2b73232b9101e9e9037bbb732b9) = CONST 
0xfc8: vfc8(0x69) = CONST 
0xfca: vfca(0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000) = SHL vfc8(0x69) vfb4(0x36b9b39739b2b73232b9101e9e9037bbb732b9)
0xfcb: vfcb(0x44) = CONST 
0xfce: vfce = ADD vf9c vfcb(0x44)
0xfcf: MSTORE vfce vfca(0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000)
0xfd1: vfd1 = MLOAD vf99(0x40)
0xfd5: vfd5 = SUB vf9c vfd1
0xfd6: vfd6(0x64) = CONST 
0xfd8: vfd8 = ADD vfd6(0x64) vfd5
0xfda: REVERT vfd1 vfd8
----------------------------------

Begin block 0xfdb
prev = {'0xf86'}, next = {'0x1057'}
----------------------------------
Block 0xfdb
0xfdc: vfdc(0x1) = CONST 
0xfde: vfde(0x1) = CONST 
0xfe0: vfe0(0xa0) = CONST 
0xfe2: vfe2(0x10000000000000000000000000000000000000000) = SHL vfe0(0xa0) vfde(0x1)
0xfe3: vfe3(0xffffffffffffffffffffffffffffffffffffffff) = SUB vfe2(0x10000000000000000000000000000000000000000) vfdc(0x1)
0xfe5: vfe5 = AND v559 vfe3(0xffffffffffffffffffffffffffffffffffffffff)
0xfe6: vfe6(0x0) = CONST 
0xfea: MSTORE vfe6(0x0) vfe5
0xfeb: vfeb(0x9) = CONST 
0xfed: vfed(0x20) = CONST 
0xff1: MSTORE vfed(0x20) vfeb(0x9)
0xff2: vff2(0x40) = CONST 
0xff6: vff6 = SHA3 vfe6(0x0) vff2(0x40)
0xff7: vff7 = SLOAD vff6
0xff9: vff9 = MLOAD vff2(0x40)
0xffc: MSTORE vff9 vff7
0xffe: vffe = MLOAD vff2(0x40)
0x1002: v1002(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x1027: v1027 = SUB vff9 vffe
0x102a: v102a = ADD vfed(0x20) v1027
0x102c: LOG3 vffe v102a v1002(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) vfe5 vfe6(0x0)
0x102d: v102d(0x1) = CONST 
0x102f: v102f(0x1) = CONST 
0x1031: v1031(0xa0) = CONST 
0x1033: v1033(0x10000000000000000000000000000000000000000) = SHL v1031(0xa0) v102f(0x1)
0x1034: v1034(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1033(0x10000000000000000000000000000000000000000) v102d(0x1)
0x1036: v1036 = AND v559 v1034(0xffffffffffffffffffffffffffffffffffffffff)
0x1037: v1037(0x0) = CONST 
0x103b: MSTORE v1037(0x0) v1036
0x103c: v103c(0x9) = CONST 
0x103e: v103e(0x20) = CONST 
0x1040: MSTORE v103e(0x20) v103c(0x9)
0x1041: v1041(0x40) = CONST 
0x1044: v1044 = SHA3 v1037(0x0) v1041(0x40)
0x1045: v1045 = SLOAD v1044
0x1046: v1046(0x7) = CONST 
0x1048: v1048 = SLOAD v1046(0x7)
0x1049: v1049(0x1057) = CONST 
0x104d: v104d(0xffffffff) = CONST 
0x1052: v1052(0x1669) = CONST 
0x1055: v1055(0x1669) = AND v1052(0x1669) v104d(0xffffffff)
0x1056: v1056_0 = CALLPRIVATE v1055(0x1669) v1045 v1048 v1049(0x1057)
----------------------------------

Begin block 0x1057
prev = {'0xfdb'}, next = {'0x1a50x52b'}
----------------------------------
Block 0x1057
0x1058: v1058(0x7) = CONST 
0x105a: SSTORE v1058(0x7) v1056_0
0x105b: v105b(0x1) = CONST 
0x105d: v105d(0x1) = CONST 
0x105f: v105f(0xa0) = CONST 
0x1061: v1061(0x10000000000000000000000000000000000000000) = SHL v105f(0xa0) v105d(0x1)
0x1062: v1062(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1061(0x10000000000000000000000000000000000000000) v105b(0x1)
0x1063: v1063 = AND v1062(0xffffffffffffffffffffffffffffffffffffffff) v559
0x1064: v1064(0x0) = CONST 
0x1068: MSTORE v1064(0x0) v1063
0x1069: v1069(0x9) = CONST 
0x106b: v106b(0x20) = CONST 
0x106d: MSTORE v106b(0x20) v1069(0x9)
0x106e: v106e(0x40) = CONST 
0x1071: v1071 = SHA3 v1064(0x0) v106e(0x40)
0x1072: SSTORE v1071 v1064(0x0)
0x1073: JUMP v539(0x1a5)
----------------------------------

Begin block 0x1074
prev = {'0x56a'}, next = {'0x1bc0x55e'}
----------------------------------
Block 0x1074
0x1075: v1075(0x6) = CONST 
0x1077: v1077 = SLOAD v1075(0x6)
0x1079: JUMP v56c(0x1bc)
----------------------------------

Begin block 0x107a
prev = {'0x596'}, next = {'0x1bc0x573'}
----------------------------------
Block 0x107a
0x107b: v107b(0x1) = CONST 
0x107d: v107d(0x1) = CONST 
0x107f: v107f(0xa0) = CONST 
0x1081: v1081(0x10000000000000000000000000000000000000000) = SHL v107f(0xa0) v107d(0x1)
0x1082: v1082(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1081(0x10000000000000000000000000000000000000000) v107b(0x1)
0x1083: v1083 = AND v1082(0xffffffffffffffffffffffffffffffffffffffff) v5a1
0x1084: v1084(0x0) = CONST 
0x1088: MSTORE v1084(0x0) v1083
0x1089: v1089(0x9) = CONST 
0x108b: v108b(0x20) = CONST 
0x108d: MSTORE v108b(0x20) v1089(0x9)
0x108e: v108e(0x40) = CONST 
0x1091: v1091 = SHA3 v1084(0x0) v108e(0x40)
0x1092: v1092 = SLOAD v1091
0x1094: JUMP v581(0x1bc)
----------------------------------

Begin block 0x1095
prev = {'0x5b2'}, next = {'0x1bc0x5a6'}
----------------------------------
Block 0x1095
0x1096: v1096(0x3) = CONST 
0x1098: v1098 = SLOAD v1096(0x3)
0x109a: JUMP v5b4(0x1bc)
----------------------------------

Begin block 0x109b
prev = {'0x5c7'}, next = {'0x10f3', '0x10ae'}
----------------------------------
Block 0x109b
0x109c: v109c(0x1) = CONST 
0x109e: v109e = SLOAD v109c(0x1)
0x109f: v109f(0x1) = CONST 
0x10a1: v10a1(0x1) = CONST 
0x10a3: v10a3(0xa0) = CONST 
0x10a5: v10a5(0x10000000000000000000000000000000000000000) = SHL v10a3(0xa0) v10a1(0x1)
0x10a6: v10a6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v10a5(0x10000000000000000000000000000000000000000) v109f(0x1)
0x10a7: v10a7 = AND v10a6(0xffffffffffffffffffffffffffffffffffffffff) v109e
0x10a8: v10a8 = CALLER 
0x10a9: v10a9 = EQ v10a8 v10a7
0x10aa: v10aa(0x10f3) = CONST 
0x10ad: JUMPI v10aa(0x10f3) v10a9
----------------------------------

Begin block 0x10ae
prev = {'0x109b'}, next = {}
----------------------------------
Block 0x10ae
0x10ae: v10ae(0x40) = CONST 
0x10b1: v10b1 = MLOAD v10ae(0x40)
0x10b2: v10b2(0x461bcd) = CONST 
0x10b6: v10b6(0xe5) = CONST 
0x10b8: v10b8(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v10b6(0xe5) v10b2(0x461bcd)
0x10ba: MSTORE v10b1 v10b8(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x10bb: v10bb(0x20) = CONST 
0x10bd: v10bd(0x4) = CONST 
0x10c0: v10c0 = ADD v10b1 v10bd(0x4)
0x10c1: MSTORE v10c0 v10bb(0x20)
0x10c2: v10c2(0x16) = CONST 
0x10c4: v10c4(0x24) = CONST 
0x10c7: v10c7 = ADD v10b1 v10c4(0x24)
0x10c8: MSTORE v10c7 v10c2(0x16)
0x10c9: v10c9(0x36b9b39739b2b73232b9101e9e903732bba7bbb732b9) = CONST 
0x10e0: v10e0(0x51) = CONST 
0x10e2: v10e2(0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000) = SHL v10e0(0x51) v10c9(0x36b9b39739b2b73232b9101e9e903732bba7bbb732b9)
0x10e3: v10e3(0x44) = CONST 
0x10e6: v10e6 = ADD v10b1 v10e3(0x44)
0x10e7: MSTORE v10e6 v10e2(0x6d73672e73656e646572203d3d206e65774f776e657200000000000000000000)
0x10e9: v10e9 = MLOAD v10ae(0x40)
0x10ed: v10ed = SUB v10b1 v10e9
0x10ee: v10ee(0x64) = CONST 
0x10f0: v10f0 = ADD v10ee(0x64) v10ed
0x10f2: REVERT v10e9 v10f0
----------------------------------

Begin block 0x10f3
prev = {'0x109b'}, next = {'0x1a50x5bb'}
----------------------------------
Block 0x10f3
0x10f4: v10f4(0x0) = CONST 
0x10f7: v10f7 = SLOAD v10f4(0x0)
0x10f8: v10f8(0x40) = CONST 
0x10fa: v10fa = MLOAD v10f8(0x40)
0x10fb: v10fb = CALLER 
0x10fd: v10fd(0x1) = CONST 
0x10ff: v10ff(0x1) = CONST 
0x1101: v1101(0xa0) = CONST 
0x1103: v1103(0x10000000000000000000000000000000000000000) = SHL v1101(0xa0) v10ff(0x1)
0x1104: v1104(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1103(0x10000000000000000000000000000000000000000) v10fd(0x1)
0x1107: v1107 = AND v10f7 v1104(0xffffffffffffffffffffffffffffffffffffffff)
0x1109: v1109(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x112b: LOG3 v10fa v10f4(0x0) v1109(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v1107 v10fb
0x112c: v112c(0x0) = CONST 
0x112f: v112f = SLOAD v112c(0x0)
0x1130: v1130(0x1) = CONST 
0x1132: v1132(0x1) = CONST 
0x1134: v1134(0xa0) = CONST 
0x1136: v1136(0x10000000000000000000000000000000000000000) = SHL v1134(0xa0) v1132(0x1)
0x1137: v1137(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1136(0x10000000000000000000000000000000000000000) v1130(0x1)
0x1138: v1138(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v1137(0xffffffffffffffffffffffffffffffffffffffff)
0x113b: v113b = AND v1138(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v112f
0x113c: v113c = CALLER 
0x113d: v113d = OR v113c v113b
0x1140: SSTORE v112c(0x0) v113d
0x1141: v1141(0x1) = CONST 
0x1144: v1144 = SLOAD v1141(0x1)
0x1147: v1147 = AND v1138(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v1144
0x1149: SSTORE v1141(0x1) v1147
0x114a: JUMP v5c9(0x1a5)
----------------------------------

Begin block 0x114b
prev = {}, next = {'0x118c', '0x1190'}
----------------------------------
function 0x114b(v114barg0)
Block 0x114b
0x114c: v114c(0xc) = CONST 
0x114e: v114e = SLOAD v114c(0xc)
0x114f: v114f(0x40) = CONST 
0x1152: v1152 = MLOAD v114f(0x40)
0x1153: v1153(0x15f789a9) = CONST 
0x1158: v1158(0xe2) = CONST 
0x115a: v115a(0x57de26a400000000000000000000000000000000000000000000000000000000) = SHL v1158(0xe2) v1153(0x15f789a9)
0x115c: MSTORE v1152 v115a(0x57de26a400000000000000000000000000000000000000000000000000000000)
0x115e: v115e = MLOAD v114f(0x40)
0x115f: v115f(0x0) = CONST 
0x1162: v1162(0x1) = CONST 
0x1164: v1164(0x1) = CONST 
0x1166: v1166(0xa0) = CONST 
0x1168: v1168(0x10000000000000000000000000000000000000000) = SHL v1166(0xa0) v1164(0x1)
0x1169: v1169(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1168(0x10000000000000000000000000000000000000000) v1162(0x1)
0x116a: v116a = AND v1169(0xffffffffffffffffffffffffffffffffffffffff) v114e
0x116c: v116c(0x57de26a4) = CONST 
0x1172: v1172(0x4) = CONST 
0x1176: v1176 = ADD v1152 v1172(0x4)
0x1178: v1178(0x20) = CONST 
0x117f: v117f = SUB v1152 v115e
0x1180: v1180 = ADD v117f v1172(0x4)
0x1184: v1184 = EXTCODESIZE v116a
0x1185: v1185 = ISZERO v1184
0x1187: v1187 = ISZERO v1185
0x1188: v1188(0x1190) = CONST 
0x118b: JUMPI v1188(0x1190) v1187
----------------------------------

Begin block 0x118c
prev = {'0x114b'}, next = {}
----------------------------------
Block 0x118c
0x118c: v118c(0x0) = CONST 
0x118f: REVERT v118c(0x0) v118c(0x0)
----------------------------------

Begin block 0x1190
prev = {'0x114b'}, next = {'0x11a4', '0x119b'}
----------------------------------
Block 0x1190
0x1192: v1192 = GAS 
0x1193: v1193 = STATICCALL v1192 v116a v115e v1180 v115e v1178(0x20)
0x1194: v1194 = ISZERO v1193
0x1196: v1196 = ISZERO v1194
0x1197: v1197(0x11a4) = CONST 
0x119a: JUMPI v1197(0x11a4) v1196
----------------------------------

Begin block 0x119b
prev = {'0x1190'}, next = {}
----------------------------------
Block 0x119b
0x119b: v119b = RETURNDATASIZE 
0x119c: v119c(0x0) = CONST 
0x119f: RETURNDATACOPY v119c(0x0) v119c(0x0) v119b
0x11a0: v11a0 = RETURNDATASIZE 
0x11a1: v11a1(0x0) = CONST 
0x11a3: REVERT v11a1(0x0) v11a0
----------------------------------

Begin block 0x11a4
prev = {'0x1190'}, next = {'0x11b6', '0x11ba'}
----------------------------------
Block 0x11a4
0x11a9: v11a9(0x40) = CONST 
0x11ab: v11ab = MLOAD v11a9(0x40)
0x11ac: v11ac = RETURNDATASIZE 
0x11ad: v11ad(0x20) = CONST 
0x11b0: v11b0 = LT v11ac v11ad(0x20)
0x11b1: v11b1 = ISZERO v11b0
0x11b2: v11b2(0x11ba) = CONST 
0x11b5: JUMPI v11b2(0x11ba) v11b1
----------------------------------

Begin block 0x11b6
prev = {'0x11a4'}, next = {}
----------------------------------
Block 0x11b6
0x11b6: v11b6(0x0) = CONST 
0x11b9: REVERT v11b6(0x0) v11b6(0x0)
----------------------------------

Begin block 0x11ba
prev = {'0x11a4'}, next = {}
----------------------------------
Block 0x11ba
0x11bc: v11bc = MLOAD v11ab
0x11c0: RETURNPRIVATE v114barg0 v11bc
----------------------------------

Begin block 0x11c1
prev = {'0x5f1'}, next = {'0x4d00x5e5'}
----------------------------------
Block 0x11c1
0x11c2: v11c2(0x0) = CONST 
0x11c4: v11c4 = SLOAD v11c2(0x0)
0x11c5: v11c5(0x1) = CONST 
0x11c7: v11c7(0x1) = CONST 
0x11c9: v11c9(0xa0) = CONST 
0x11cb: v11cb(0x10000000000000000000000000000000000000000) = SHL v11c9(0xa0) v11c7(0x1)
0x11cc: v11cc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v11cb(0x10000000000000000000000000000000000000000) v11c5(0x1)
0x11cd: v11cd = AND v11cc(0xffffffffffffffffffffffffffffffffffffffff) v11c4
0x11cf: JUMP v5f3(0x4d0)
----------------------------------

Begin block 0x11d0
prev = {'0x709'}, next = {'0x1225', '0x11e3'}
----------------------------------
Block 0x11d0
0x11d1: v11d1(0x0) = CONST 
0x11d3: v11d3 = SLOAD v11d1(0x0)
0x11d4: v11d4(0x1) = CONST 
0x11d6: v11d6(0x1) = CONST 
0x11d8: v11d8(0xa0) = CONST 
0x11da: v11da(0x10000000000000000000000000000000000000000) = SHL v11d8(0xa0) v11d6(0x1)
0x11db: v11db(0xffffffffffffffffffffffffffffffffffffffff) = SUB v11da(0x10000000000000000000000000000000000000000) v11d4(0x1)
0x11dc: v11dc = AND v11db(0xffffffffffffffffffffffffffffffffffffffff) v11d3
0x11dd: v11dd = CALLER 
0x11de: v11de = EQ v11dd v11dc
0x11df: v11df(0x1225) = CONST 
0x11e2: JUMPI v11df(0x1225) v11de
----------------------------------

Begin block 0x11e3
prev = {'0x11d0'}, next = {}
----------------------------------
Block 0x11e3
0x11e3: v11e3(0x40) = CONST 
0x11e6: v11e6 = MLOAD v11e3(0x40)
0x11e7: v11e7(0x461bcd) = CONST 
0x11eb: v11eb(0xe5) = CONST 
0x11ed: v11ed(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v11eb(0xe5) v11e7(0x461bcd)
0x11ef: MSTORE v11e6 v11ed(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x11f0: v11f0(0x20) = CONST 
0x11f2: v11f2(0x4) = CONST 
0x11f5: v11f5 = ADD v11e6 v11f2(0x4)
0x11f6: MSTORE v11f5 v11f0(0x20)
0x11f7: v11f7(0x13) = CONST 
0x11f9: v11f9(0x24) = CONST 
0x11fc: v11fc = ADD v11e6 v11f9(0x24)
0x11fd: MSTORE v11fc v11f7(0x13)
0x11fe: v11fe(0x36b9b39739b2b73232b9101e9e9037bbb732b9) = CONST 
0x1212: v1212(0x69) = CONST 
0x1214: v1214(0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000) = SHL v1212(0x69) v11fe(0x36b9b39739b2b73232b9101e9e9037bbb732b9)
0x1215: v1215(0x44) = CONST 
0x1218: v1218 = ADD v11e6 v1215(0x44)
0x1219: MSTORE v1218 v1214(0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000)
0x121b: v121b = MLOAD v11e3(0x40)
0x121f: v121f = SUB v11e6 v121b
0x1220: v1220(0x64) = CONST 
0x1222: v1222 = ADD v1220(0x64) v121f
0x1224: REVERT v121b v1222
----------------------------------

Begin block 0x1225
prev = {'0x11d0'}, next = {'0x1250', '0x1235'}
----------------------------------
Block 0x1225
0x1226: v1226(0x1) = CONST 
0x1228: v1228(0x1) = CONST 
0x122a: v122a(0xa0) = CONST 
0x122c: v122c(0x10000000000000000000000000000000000000000) = SHL v122a(0xa0) v1228(0x1)
0x122d: v122d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v122c(0x10000000000000000000000000000000000000000) v1226(0x1)
0x122f: v122f = AND v62a v122d(0xffffffffffffffffffffffffffffffffffffffff)
0x1230: v1230 = ISZERO v122f
0x1231: v1231(0x1250) = CONST 
0x1234: JUMPI v1231(0x1250) v1230
----------------------------------

Begin block 0x1235
prev = {'0x1225'}, next = {'0x1250'}
----------------------------------
Block 0x1235
0x1235: v1235(0x2) = CONST 
0x1238: v1238 = SLOAD v1235(0x2)
0x1239: v1239(0x1) = CONST 
0x123b: v123b(0x1) = CONST 
0x123d: v123d(0xa0) = CONST 
0x123f: v123f(0x10000000000000000000000000000000000000000) = SHL v123d(0xa0) v123b(0x1)
0x1240: v1240(0xffffffffffffffffffffffffffffffffffffffff) = SUB v123f(0x10000000000000000000000000000000000000000) v1239(0x1)
0x1241: v1241(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v1240(0xffffffffffffffffffffffffffffffffffffffff)
0x1242: v1242 = AND v1241(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v1238
0x1243: v1243(0x1) = CONST 
0x1245: v1245(0x1) = CONST 
0x1247: v1247(0xa0) = CONST 
0x1249: v1249(0x10000000000000000000000000000000000000000) = SHL v1247(0xa0) v1245(0x1)
0x124a: v124a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1249(0x10000000000000000000000000000000000000000) v1243(0x1)
0x124c: v124c = AND v62a v124a(0xffffffffffffffffffffffffffffffffffffffff)
0x124d: v124d = OR v124c v1242
0x124f: SSTORE v1235(0x2) v124d
----------------------------------

Begin block 0x1250
prev = {'0x1225', '0x1235'}, next = {'0x127b', '0x1260'}
----------------------------------
Block 0x1250
0x1251: v1251(0x1) = CONST 
0x1253: v1253(0x1) = CONST 
0x1255: v1255(0xa0) = CONST 
0x1257: v1257(0x10000000000000000000000000000000000000000) = SHL v1255(0xa0) v1253(0x1)
0x1258: v1258(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1257(0x10000000000000000000000000000000000000000) v1251(0x1)
0x125a: v125a = AND v633 v1258(0xffffffffffffffffffffffffffffffffffffffff)
0x125b: v125b = ISZERO v125a
0x125c: v125c(0x127b) = CONST 
0x125f: JUMPI v125c(0x127b) v125b
----------------------------------

Begin block 0x1260
prev = {'0x1250'}, next = {'0x127b'}
----------------------------------
Block 0x1260
0x1260: v1260(0x5) = CONST 
0x1263: v1263 = SLOAD v1260(0x5)
0x1264: v1264(0x1) = CONST 
0x1266: v1266(0x1) = CONST 
0x1268: v1268(0xa0) = CONST 
0x126a: v126a(0x10000000000000000000000000000000000000000) = SHL v1268(0xa0) v1266(0x1)
0x126b: v126b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v126a(0x10000000000000000000000000000000000000000) v1264(0x1)
0x126c: v126c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v126b(0xffffffffffffffffffffffffffffffffffffffff)
0x126d: v126d = AND v126c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v1263
0x126e: v126e(0x1) = CONST 
0x1270: v1270(0x1) = CONST 
0x1272: v1272(0xa0) = CONST 
0x1274: v1274(0x10000000000000000000000000000000000000000) = SHL v1272(0xa0) v1270(0x1)
0x1275: v1275(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1274(0x10000000000000000000000000000000000000000) v126e(0x1)
0x1277: v1277 = AND v633 v1275(0xffffffffffffffffffffffffffffffffffffffff)
0x1278: v1278 = OR v1277 v126d
0x127a: SSTORE v1260(0x5) v1278
----------------------------------

Begin block 0x127b
prev = {'0x1250', '0x1260'}, next = {'0x12a1'}
----------------------------------
Block 0x127b
0x127c: v127c(0x40) = CONST 
0x127f: v127f = MLOAD v127c(0x40)
0x1280: v1280(0x0) = CONST 
0x1283: MSTORE v127f v1280(0x0)
0x1284: v1284(0x20) = CONST 
0x1288: v1288 = ADD v127f v1284(0x20)
0x128b: MSTORE v127c(0x40) v1288
0x128d: v128d = MLOAD v127f
0x128f: v128f = SHA3 v1288 v128d
0x1291: v1291 = MLOAD v697
0x1296: v1296 = ADD v127f v127c(0x40)
0x129c: v129c = ADD v697 v1284(0x20)
----------------------------------

Begin block 0x12a1
prev = {'0x127b', '0x12aa'}, next = {'0x12c0', '0x12aa'}
----------------------------------
Block 0x12a1
0x12a1_0x2: v12a1_2 = PHI v1291 v12b3
0x12a2: v12a2(0x20) = CONST 
0x12a5: v12a5 = LT v12a1_2 v12a2(0x20)
0x12a6: v12a6(0x12c0) = CONST 
0x12a9: JUMPI v12a6(0x12c0) v12a5
----------------------------------

Begin block 0x12aa
prev = {'0x12a1'}, next = {'0x12a1'}
----------------------------------
Block 0x12aa
0x12aa_0x0: v12aa_0 = PHI v129c v12bb
0x12aa_0x1: v12aa_1 = PHI v1296 v12b9
0x12aa_0x2: v12aa_2 = PHI v1291 v12b3
0x12ab: v12ab = MLOAD v12aa_0
0x12ad: MSTORE v12aa_1 v12ab
0x12ae: v12ae(0x1f) = CONST 
0x12b0: v12b0(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v12ae(0x1f)
0x12b3: v12b3 = ADD v12aa_2 v12b0(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
0x12b5: v12b5(0x20) = CONST 
0x12b9: v12b9 = ADD v12b5(0x20) v12aa_1
0x12bb: v12bb = ADD v12b5(0x20) v12aa_0
0x12bc: v12bc(0x12a1) = CONST 
0x12bf: JUMP v12bc(0x12a1)
----------------------------------

Begin block 0x12c0
prev = {'0x12a1'}, next = {'0x1315', '0x1301'}
----------------------------------
Block 0x12c0
0x12c0_0x0: v12c0_0 = PHI v129c v12bb
0x12c0_0x1: v12c0_1 = PHI v1296 v12b9
0x12c0_0x2: v12c0_2 = PHI v1291 v12b3
0x12c1: v12c1(0x1) = CONST 
0x12c4: v12c4(0x20) = CONST 
0x12c6: v12c6 = SUB v12c4(0x20) v12c0_2
0x12c7: v12c7(0x100) = CONST 
0x12ca: v12ca = EXP v12c7(0x100) v12c6
0x12cb: v12cb = SUB v12ca v12c1(0x1)
0x12cd: v12cd = NOT v12cb
0x12cf: v12cf = MLOAD v12c0_0
0x12d0: v12d0 = AND v12cf v12cd
0x12d3: v12d3 = MLOAD v12c0_1
0x12d4: v12d4 = AND v12d3 v12cb
0x12d7: v12d7 = OR v12d0 v12d4
0x12d9: MSTORE v12c0_1 v12d7
0x12e2: v12e2 = ADD v1291 v1296
0x12e6: v12e6(0x40) = CONST 
0x12e8: v12e8 = MLOAD v12e6(0x40)
0x12e9: v12e9(0x20) = CONST 
0x12ed: v12ed = SUB v12e2 v12e8
0x12ee: v12ee = SUB v12ed v12e9(0x20)
0x12f0: MSTORE v12e8 v12ee
0x12f2: v12f2(0x40) = CONST 
0x12f4: MSTORE v12f2(0x40) v12e2
0x12f6: v12f6 = MLOAD v12e8
0x12f8: v12f8(0x20) = CONST 
0x12fa: v12fa = ADD v12f8(0x20) v12e8
0x12fb: v12fb = SHA3 v12fa v12f6
0x12fc: v12fc = EQ v12fb v128f
0x12fd: v12fd(0x1315) = CONST 
0x1300: JUMPI v12fd(0x1315) v12fc
----------------------------------

Begin block 0x1301
prev = {'0x12c0'}, next = {'0x1313'}
----------------------------------
Block 0x1301
0x1302: v1302 = MLOAD v697
0x1303: v1303(0x1313) = CONST 
0x1307: v1307(0xd) = CONST 
0x130a: v130a(0x20) = CONST 
0x130d: v130d = ADD v697 v130a(0x20)
0x130f: v130f(0x184a) = CONST 
0x1312: v1312_0 = CALLPRIVATE v130f(0x184a) v1302 v130d v1307(0xd) v1303(0x1313)
----------------------------------

Begin block 0x1313
prev = {'0x1301'}, next = {'0x1315'}
----------------------------------
Block 0x1313
----------------------------------

Begin block 0x1315
prev = {'0x12c0', '0x1313'}, next = {'0x133b'}
----------------------------------
Block 0x1315
0x1316: v1316(0x40) = CONST 
0x1319: v1319 = MLOAD v1316(0x40)
0x131a: v131a(0x0) = CONST 
0x131d: MSTORE v1319 v131a(0x0)
0x131e: v131e(0x20) = CONST 
0x1322: v1322 = ADD v1319 v131e(0x20)
0x1325: MSTORE v1316(0x40) v1322
0x1327: v1327 = MLOAD v1319
0x1329: v1329 = SHA3 v1322 v1327
0x132b: v132b = MLOAD v71c
0x1330: v1330 = ADD v1319 v1316(0x40)
0x1336: v1336 = ADD v71c v131e(0x20)
----------------------------------

Begin block 0x133b
prev = {'0x1315', '0x1344'}, next = {'0x135a', '0x1344'}
----------------------------------
Block 0x133b
0x133b_0x2: v133b_2 = PHI v132b v134d
0x133c: v133c(0x20) = CONST 
0x133f: v133f = LT v133b_2 v133c(0x20)
0x1340: v1340(0x135a) = CONST 
0x1343: JUMPI v1340(0x135a) v133f
----------------------------------

Begin block 0x1344
prev = {'0x133b'}, next = {'0x133b'}
----------------------------------
Block 0x1344
0x1344_0x0: v1344_0 = PHI v1336 v1355
0x1344_0x1: v1344_1 = PHI v1330 v1353
0x1344_0x2: v1344_2 = PHI v132b v134d
0x1345: v1345 = MLOAD v1344_0
0x1347: MSTORE v1344_1 v1345
0x1348: v1348(0x1f) = CONST 
0x134a: v134a(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v1348(0x1f)
0x134d: v134d = ADD v1344_2 v134a(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
0x134f: v134f(0x20) = CONST 
0x1353: v1353 = ADD v134f(0x20) v1344_1
0x1355: v1355 = ADD v134f(0x20) v1344_0
0x1356: v1356(0x133b) = CONST 
0x1359: JUMP v1356(0x133b)
----------------------------------

Begin block 0x135a
prev = {'0x133b'}, next = {'0x13af', '0x139b'}
----------------------------------
Block 0x135a
0x135a_0x0: v135a_0 = PHI v1336 v1355
0x135a_0x1: v135a_1 = PHI v1330 v1353
0x135a_0x2: v135a_2 = PHI v132b v134d
0x135b: v135b(0x1) = CONST 
0x135e: v135e(0x20) = CONST 
0x1360: v1360 = SUB v135e(0x20) v135a_2
0x1361: v1361(0x100) = CONST 
0x1364: v1364 = EXP v1361(0x100) v1360
0x1365: v1365 = SUB v1364 v135b(0x1)
0x1367: v1367 = NOT v1365
0x1369: v1369 = MLOAD v135a_0
0x136a: v136a = AND v1369 v1367
0x136d: v136d = MLOAD v135a_1
0x136e: v136e = AND v136d v1365
0x1371: v1371 = OR v136a v136e
0x1373: MSTORE v135a_1 v1371
0x137c: v137c = ADD v132b v1330
0x1380: v1380(0x40) = CONST 
0x1382: v1382 = MLOAD v1380(0x40)
0x1383: v1383(0x20) = CONST 
0x1387: v1387 = SUB v137c v1382
0x1388: v1388 = SUB v1387 v1383(0x20)
0x138a: MSTORE v1382 v1388
0x138c: v138c(0x40) = CONST 
0x138e: MSTORE v138c(0x40) v137c
0x1390: v1390 = MLOAD v1382
0x1392: v1392(0x20) = CONST 
0x1394: v1394 = ADD v1392(0x20) v1382
0x1395: v1395 = SHA3 v1394 v1390
0x1396: v1396 = EQ v1395 v1329
0x1397: v1397(0x13af) = CONST 
0x139a: JUMPI v1397(0x13af) v1396
----------------------------------

Begin block 0x139b
prev = {'0x135a'}, next = {'0x13ad'}
----------------------------------
Block 0x139b
0x139c: v139c = MLOAD v71c
0x139d: v139d(0x13ad) = CONST 
0x13a1: v13a1(0xe) = CONST 
0x13a4: v13a4(0x20) = CONST 
0x13a7: v13a7 = ADD v71c v13a4(0x20)
0x13a9: v13a9(0x184a) = CONST 
0x13ac: v13ac_0 = CALLPRIVATE v13a9(0x184a) v139c v13a7 v13a1(0xe) v139d(0x13ad)
----------------------------------

Begin block 0x13ad
prev = {'0x139b'}, next = {'0x13af'}
----------------------------------
Block 0x13ad
----------------------------------

Begin block 0x13af
prev = {'0x13ad', '0x135a'}, next = {'0x13b9', '0x13c8'}
----------------------------------
Block 0x13af
0x13b0: v13b0(0xff) = CONST 
0x13b3: v13b3 = AND v745 v13b0(0xff)
0x13b4: v13b4 = ISZERO v13b3
0x13b5: v13b5(0x13c8) = CONST 
0x13b8: JUMPI v13b5(0x13c8) v13b4
----------------------------------

Begin block 0x13b9
prev = {'0x13af'}, next = {'0x13c8'}
----------------------------------
Block 0x13b9
0x13b9: v13b9(0xf) = CONST 
0x13bc: v13bc = SLOAD v13b9(0xf)
0x13bd: v13bd(0xff) = CONST 
0x13bf: v13bf(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v13bd(0xff)
0x13c0: v13c0 = AND v13bf(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) v13bc
0x13c1: v13c1(0xff) = CONST 
0x13c4: v13c4 = AND v745 v13c1(0xff)
0x13c5: v13c5 = OR v13c4 v13c0
0x13c7: SSTORE v13b9(0xf) v13c5
----------------------------------

Begin block 0x13c8
prev = {'0x13b9', '0x13af'}, next = {'0x13cf', '0x13d4'}
----------------------------------
Block 0x13c8
0x13ca: v13ca = ISZERO v74e
0x13cb: v13cb(0x13d4) = CONST 
0x13ce: JUMPI v13cb(0x13d4) v13ca
----------------------------------

Begin block 0x13cf
prev = {'0x13c8'}, next = {'0x13d4'}
----------------------------------
Block 0x13cf
0x13cf: v13cf(0x3) = CONST 
0x13d3: SSTORE v13cf(0x3) v74e
----------------------------------

Begin block 0x13d4
prev = {'0x13c8', '0x13cf'}, next = {'0x13e0', '0x13db'}
----------------------------------
Block 0x13d4
0x13d6: v13d6 = ISZERO v754
0x13d7: v13d7(0x13e0) = CONST 
0x13da: JUMPI v13d7(0x13e0) v13d6
----------------------------------

Begin block 0x13db
prev = {'0x13d4'}, next = {'0x13e0'}
----------------------------------
Block 0x13db
0x13db: v13db(0x4) = CONST 
0x13df: SSTORE v13db(0x4) v754
----------------------------------

Begin block 0x13e0
prev = {'0x13db', '0x13d4'}, next = {'0x13ec', '0x13e7'}
----------------------------------
Block 0x13e0
0x13e2: v13e2 = ISZERO v75a
0x13e3: v13e3(0x13ec) = CONST 
0x13e6: JUMPI v13e3(0x13ec) v13e2
----------------------------------

Begin block 0x13e7
prev = {'0x13e0'}, next = {'0x13ec'}
----------------------------------
Block 0x13e7
0x13e7: v13e7(0x6) = CONST 
0x13eb: SSTORE v13e7(0x6) v75a
----------------------------------

Begin block 0x13ec
prev = {'0x13e0', '0x13e7'}, next = {'0x13fc', '0x1417'}
----------------------------------
Block 0x13ec
0x13ed: v13ed(0x1) = CONST 
0x13ef: v13ef(0x1) = CONST 
0x13f1: v13f1(0xa0) = CONST 
0x13f3: v13f3(0x10000000000000000000000000000000000000000) = SHL v13f1(0xa0) v13ef(0x1)
0x13f4: v13f4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v13f3(0x10000000000000000000000000000000000000000) v13ed(0x1)
0x13f6: v13f6 = AND v769 v13f4(0xffffffffffffffffffffffffffffffffffffffff)
0x13f7: v13f7 = ISZERO v13f6
0x13f8: v13f8(0x1417) = CONST 
0x13fb: JUMPI v13f8(0x1417) v13f7
----------------------------------

Begin block 0x13fc
prev = {'0x13ec'}, next = {'0x1417'}
----------------------------------
Block 0x13fc
0x13fc: v13fc(0xc) = CONST 
0x13ff: v13ff = SLOAD v13fc(0xc)
0x1400: v1400(0x1) = CONST 
0x1402: v1402(0x1) = CONST 
0x1404: v1404(0xa0) = CONST 
0x1406: v1406(0x10000000000000000000000000000000000000000) = SHL v1404(0xa0) v1402(0x1)
0x1407: v1407(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1406(0x10000000000000000000000000000000000000000) v1400(0x1)
0x1408: v1408(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v1407(0xffffffffffffffffffffffffffffffffffffffff)
0x1409: v1409 = AND v1408(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v13ff
0x140a: v140a(0x1) = CONST 
0x140c: v140c(0x1) = CONST 
0x140e: v140e(0xa0) = CONST 
0x1410: v1410(0x10000000000000000000000000000000000000000) = SHL v140e(0xa0) v140c(0x1)
0x1411: v1411(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1410(0x10000000000000000000000000000000000000000) v140a(0x1)
0x1413: v1413 = AND v769 v1411(0xffffffffffffffffffffffffffffffffffffffff)
0x1414: v1414 = OR v1413 v1409
0x1416: SSTORE v13fc(0xc) v1414
----------------------------------

Begin block 0x1417
prev = {'0x13ec', '0x13fc'}, next = {'0x141e', '0x1423'}
----------------------------------
Block 0x1417
0x1419: v1419 = ISZERO v76e
0x141a: v141a(0x1423) = CONST 
0x141d: JUMPI v141a(0x1423) v1419
----------------------------------

Begin block 0x141e
prev = {'0x1417'}, next = {'0x1423'}
----------------------------------
Block 0x141e
0x141e: v141e(0xb) = CONST 
0x1422: SSTORE v141e(0xb) v76e
----------------------------------

Begin block 0x1423
prev = {'0x141e', '0x1417'}, next = {'0x1a50x5fa'}
----------------------------------
Block 0x1423
0x142e: JUMP v608(0x1a5)
----------------------------------

Begin block 0x142f
prev = {}, next = {'0x146f', '0xdf00x142f'}
----------------------------------
function 0x142f(v142farg0)
Block 0x142f
0x1430: v1430(0xe) = CONST 
0x1433: v1433 = SLOAD v1430(0xe)
0x1434: v1434(0x40) = CONST 
0x1437: v1437 = MLOAD v1434(0x40)
0x1438: v1438(0x20) = CONST 
0x143a: v143a(0x2) = CONST 
0x143c: v143c(0x1) = CONST 
0x143f: v143f = AND v1433 v143c(0x1)
0x1440: v1440 = ISZERO v143f
0x1441: v1441(0x100) = CONST 
0x1444: v1444 = MUL v1441(0x100) v1440
0x1445: v1445(0x0) = CONST 
0x1447: v1447(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v1445(0x0)
0x1448: v1448 = ADD v1447(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v1444
0x144b: v144b = AND v1433 v1448
0x144f: v144f = DIV v144b v143a(0x2)
0x1450: v1450(0x1f) = CONST 
0x1453: v1453 = ADD v144f v1450(0x1f)
0x1456: v1456 = DIV v1453 v1438(0x20)
0x1458: v1458 = MUL v1438(0x20) v1456
0x145a: v145a = ADD v1437 v1458
0x145c: v145c = ADD v1438(0x20) v145a
0x145f: MSTORE v1434(0x40) v145c
0x1462: MSTORE v1437 v144f
0x1466: v1466 = ADD v1437 v1438(0x20)
0x146a: v146a = ISZERO v144f
0x146b: v146b(0xdf0) = CONST 
0x146e: JUMPI v146b(0xdf0) v146a
----------------------------------

Begin block 0x146f
prev = {'0x142f'}, next = {'0xdc50x142f', '0x1477'}
----------------------------------
Block 0x146f
0x1470: v1470(0x1f) = CONST 
0x1472: v1472 = LT v1470(0x1f) v144f
0x1473: v1473(0xdc5) = CONST 
0x1476: JUMPI v1473(0xdc5) v1472
----------------------------------

Begin block 0x1477
prev = {'0x146f'}, next = {'0xdf00x142f'}
----------------------------------
Block 0x1477
0x1477: v1477(0x100) = CONST 
0x147c: v147c = SLOAD v1430(0xe)
0x147d: v147d = DIV v147c v1477(0x100)
0x147e: v147e = MUL v147d v1477(0x100)
0x1480: MSTORE v1466 v147e
0x1482: v1482(0x20) = CONST 
0x1484: v1484 = ADD v1482(0x20) v1466
0x1486: v1486(0xdf0) = CONST 
0x1489: JUMP v1486(0xdf0)
----------------------------------

Begin block 0x148a
prev = {'0x7ab'}, next = {}
----------------------------------
Block 0x148a
0x148b: v148b(0x0) = CONST 
0x148d: v148d(0x40) = CONST 
0x1490: v1490 = MLOAD v148d(0x40)
0x1491: v1491(0x461bcd) = CONST 
0x1495: v1495(0xe5) = CONST 
0x1497: v1497(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1495(0xe5) v1491(0x461bcd)
0x1499: MSTORE v1490 v1497(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x149a: v149a(0x20) = CONST 
0x149c: v149c(0x4) = CONST 
0x149f: v149f = ADD v1490 v149c(0x4)
0x14a0: MSTORE v149f v149a(0x20)
0x14a1: v14a1(0x5) = CONST 
0x14a3: v14a3(0x24) = CONST 
0x14a6: v14a6 = ADD v1490 v14a3(0x24)
0x14a7: MSTORE v14a6 v14a1(0x5)
0x14a8: v14a8(0x66616c7365) = CONST 
0x14ae: v14ae(0xd8) = CONST 
0x14b0: v14b0(0x66616c7365000000000000000000000000000000000000000000000000000000) = SHL v14ae(0xd8) v14a8(0x66616c7365)
0x14b1: v14b1(0x44) = CONST 
0x14b4: v14b4 = ADD v1490 v14b1(0x44)
0x14b5: MSTORE v14b4 v14b0(0x66616c7365000000000000000000000000000000000000000000000000000000)
0x14b7: v14b7 = MLOAD v148d(0x40)
0x14bb: v14bb = SUB v1490 v14b7
0x14bc: v14bc(0x64) = CONST 
0x14be: v14be = ADD v14bc(0x64) v14bb
0x14c0: REVERT v14b7 v14be
----------------------------------

Begin block 0x14c1
prev = {'0x831'}, next = {'0x14d4', '0x1516'}
----------------------------------
Block 0x14c1
0x14c2: v14c2(0x0) = CONST 
0x14c4: v14c4 = SLOAD v14c2(0x0)
0x14c5: v14c5(0x1) = CONST 
0x14c7: v14c7(0x1) = CONST 
0x14c9: v14c9(0xa0) = CONST 
0x14cb: v14cb(0x10000000000000000000000000000000000000000) = SHL v14c9(0xa0) v14c7(0x1)
0x14cc: v14cc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v14cb(0x10000000000000000000000000000000000000000) v14c5(0x1)
0x14cd: v14cd = AND v14cc(0xffffffffffffffffffffffffffffffffffffffff) v14c4
0x14ce: v14ce = CALLER 
0x14cf: v14cf = EQ v14ce v14cd
0x14d0: v14d0(0x1516) = CONST 
0x14d3: JUMPI v14d0(0x1516) v14cf
----------------------------------

Begin block 0x14d4
prev = {'0x14c1'}, next = {}
----------------------------------
Block 0x14d4
0x14d4: v14d4(0x40) = CONST 
0x14d7: v14d7 = MLOAD v14d4(0x40)
0x14d8: v14d8(0x461bcd) = CONST 
0x14dc: v14dc(0xe5) = CONST 
0x14de: v14de(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v14dc(0xe5) v14d8(0x461bcd)
0x14e0: MSTORE v14d7 v14de(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x14e1: v14e1(0x20) = CONST 
0x14e3: v14e3(0x4) = CONST 
0x14e6: v14e6 = ADD v14d7 v14e3(0x4)
0x14e7: MSTORE v14e6 v14e1(0x20)
0x14e8: v14e8(0x13) = CONST 
0x14ea: v14ea(0x24) = CONST 
0x14ed: v14ed = ADD v14d7 v14ea(0x24)
0x14ee: MSTORE v14ed v14e8(0x13)
0x14ef: v14ef(0x36b9b39739b2b73232b9101e9e9037bbb732b9) = CONST 
0x1503: v1503(0x69) = CONST 
0x1505: v1505(0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000) = SHL v1503(0x69) v14ef(0x36b9b39739b2b73232b9101e9e9037bbb732b9)
0x1506: v1506(0x44) = CONST 
0x1509: v1509 = ADD v14d7 v1506(0x44)
0x150a: MSTORE v1509 v1505(0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000)
0x150c: v150c = MLOAD v14d4(0x40)
0x1510: v1510 = SUB v14d7 v150c
0x1511: v1511(0x64) = CONST 
0x1513: v1513 = ADD v1511(0x64) v1510
0x1515: REVERT v150c v1513
----------------------------------

Begin block 0x1516
prev = {'0x14c1'}, next = {'0x1519'}
----------------------------------
Block 0x1516
0x1517: v1517(0x0) = CONST 
----------------------------------

Begin block 0x1519
prev = {'0x1516', '0x153e'}, next = {'0x1546', '0x1523'}
----------------------------------
Block 0x1519
0x1519_0x0: v1519_0 = PHI v1517(0x0) v1541
0x151b: v151b = MLOAD v83e
0x151d: v151d = LT v1519_0 v151b
0x151e: v151e = ISZERO v151d
0x151f: v151f(0x1546) = CONST 
0x1522: JUMPI v151f(0x1546) v151e
----------------------------------

Begin block 0x1523
prev = {'0x1519'}, next = {'0x1531', '0x1530'}
----------------------------------
Block 0x1523
0x1523_0x0: v1523_0 = PHI v1517(0x0) v1541
0x1523: v1523(0x153e) = CONST 
0x1529: v1529 = MLOAD v83e
0x152b: v152b = LT v1523_0 v1529
0x152c: v152c(0x1531) = CONST 
0x152f: JUMPI v152c(0x1531) v152b
----------------------------------

Begin block 0x1530
prev = {'0x1523'}, next = {}
----------------------------------
Block 0x1530
0x1530: THROW 
----------------------------------

Begin block 0x1531
prev = {'0x1523'}, next = {'0x1688'}
----------------------------------
Block 0x1531
0x1531_0x0: v1531_0 = PHI v1517(0x0) v1541
0x1532: v1532(0x20) = CONST 
0x1534: v1534 = MUL v1532(0x20) v1531_0
0x1535: v1535(0x20) = CONST 
0x1537: v1537 = ADD v1535(0x20) v1534
0x1538: v1538 = ADD v1537 v83e
0x1539: v1539 = MLOAD v1538
0x153a: v153a(0x1688) = CONST 
0x153d: JUMP v153a(0x1688)
----------------------------------

Begin block 0x153e
prev = {'0x17dd'}, next = {'0x1519'}
----------------------------------
Block 0x153e
0x153e_0x0: v153e_0 = PHI v1517(0x0) v1541
0x153f: v153f(0x1) = CONST 
0x1541: v1541 = ADD v153f(0x1) v153e_0
0x1542: v1542(0x1519) = CONST 
0x1545: JUMP v1542(0x1519)
----------------------------------

Begin block 0x1546
prev = {'0x1519'}, next = {'0x1a50x7c1'}
----------------------------------
Block 0x1546
0x1549: JUMP v7cf(0x1a5)
----------------------------------

Begin block 0x154a
prev = {'0x87b'}, next = {'0x1bc0x86f'}
----------------------------------
Block 0x154a
0x154b: v154b(0xb) = CONST 
0x154d: v154d = SLOAD v154b(0xb)
0x154f: JUMP v87d(0x1bc)
----------------------------------

Begin block 0x1550
prev = {'0x890'}, next = {'0x4d00x884'}
----------------------------------
Block 0x1550
0x1551: v1551(0x1) = CONST 
0x1553: v1553 = SLOAD v1551(0x1)
0x1554: v1554(0x1) = CONST 
0x1556: v1556(0x1) = CONST 
0x1558: v1558(0xa0) = CONST 
0x155a: v155a(0x10000000000000000000000000000000000000000) = SHL v1558(0xa0) v1556(0x1)
0x155b: v155b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v155a(0x10000000000000000000000000000000000000000) v1554(0x1)
0x155c: v155c = AND v155b(0xffffffffffffffffffffffffffffffffffffffff) v1553
0x155e: JUMP v892(0x4d0)
----------------------------------

Begin block 0x155f
prev = {'0x8bc'}, next = {'0x15b4', '0x1572'}
----------------------------------
Block 0x155f
0x1560: v1560(0x0) = CONST 
0x1562: v1562 = SLOAD v1560(0x0)
0x1563: v1563(0x1) = CONST 
0x1565: v1565(0x1) = CONST 
0x1567: v1567(0xa0) = CONST 
0x1569: v1569(0x10000000000000000000000000000000000000000) = SHL v1567(0xa0) v1565(0x1)
0x156a: v156a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1569(0x10000000000000000000000000000000000000000) v1563(0x1)
0x156b: v156b = AND v156a(0xffffffffffffffffffffffffffffffffffffffff) v1562
0x156c: v156c = CALLER 
0x156d: v156d = EQ v156c v156b
0x156e: v156e(0x15b4) = CONST 
0x1571: JUMPI v156e(0x15b4) v156d
----------------------------------

Begin block 0x1572
prev = {'0x155f'}, next = {}
----------------------------------
Block 0x1572
0x1572: v1572(0x40) = CONST 
0x1575: v1575 = MLOAD v1572(0x40)
0x1576: v1576(0x461bcd) = CONST 
0x157a: v157a(0xe5) = CONST 
0x157c: v157c(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v157a(0xe5) v1576(0x461bcd)
0x157e: MSTORE v1575 v157c(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x157f: v157f(0x20) = CONST 
0x1581: v1581(0x4) = CONST 
0x1584: v1584 = ADD v1575 v1581(0x4)
0x1585: MSTORE v1584 v157f(0x20)
0x1586: v1586(0x13) = CONST 
0x1588: v1588(0x24) = CONST 
0x158b: v158b = ADD v1575 v1588(0x24)
0x158c: MSTORE v158b v1586(0x13)
0x158d: v158d(0x36b9b39739b2b73232b9101e9e9037bbb732b9) = CONST 
0x15a1: v15a1(0x69) = CONST 
0x15a3: v15a3(0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000) = SHL v15a1(0x69) v158d(0x36b9b39739b2b73232b9101e9e9037bbb732b9)
0x15a4: v15a4(0x44) = CONST 
0x15a7: v15a7 = ADD v1575 v15a4(0x44)
0x15a8: MSTORE v15a7 v15a3(0x6d73672e73656e646572203d3d206f776e657200000000000000000000000000)
0x15aa: v15aa = MLOAD v1572(0x40)
0x15ae: v15ae = SUB v1575 v15aa
0x15af: v15af(0x64) = CONST 
0x15b1: v15b1 = ADD v15af(0x64) v15ae
0x15b3: REVERT v15aa v15b1
----------------------------------

Begin block 0x15b4
prev = {'0x155f'}, next = {'0x160f', '0x15c3'}
----------------------------------
Block 0x15b4
0x15b5: v15b5(0x1) = CONST 
0x15b7: v15b7(0x1) = CONST 
0x15b9: v15b9(0xa0) = CONST 
0x15bb: v15bb(0x10000000000000000000000000000000000000000) = SHL v15b9(0xa0) v15b7(0x1)
0x15bc: v15bc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v15bb(0x10000000000000000000000000000000000000000) v15b5(0x1)
0x15be: v15be = AND v8c7 v15bc(0xffffffffffffffffffffffffffffffffffffffff)
0x15bf: v15bf(0x160f) = CONST 
0x15c2: JUMPI v15bf(0x160f) v15be
----------------------------------

Begin block 0x15c3
prev = {'0x15b4'}, next = {}
----------------------------------
Block 0x15c3
0x15c3: v15c3(0x40) = CONST 
0x15c6: v15c6 = MLOAD v15c3(0x40)
0x15c7: v15c7(0x461bcd) = CONST 
0x15cb: v15cb(0xe5) = CONST 
0x15cd: v15cd(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v15cb(0xe5) v15c7(0x461bcd)
0x15cf: MSTORE v15c6 v15cd(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x15d0: v15d0(0x20) = CONST 
0x15d2: v15d2(0x4) = CONST 
0x15d5: v15d5 = ADD v15c6 v15d2(0x4)
0x15d6: MSTORE v15d5 v15d0(0x20)
0x15d7: v15d7(0x17) = CONST 
0x15d9: v15d9(0x24) = CONST 
0x15dc: v15dc = ADD v15c6 v15d9(0x24)
0x15dd: MSTORE v15dc v15d7(0x17)
0x15de: v15de(0x6164647265737328302920213d205f6e65774f776e6572000000000000000000) = CONST 
0x15ff: v15ff(0x44) = CONST 
0x1602: v1602 = ADD v15c6 v15ff(0x44)
0x1603: MSTORE v1602 v15de(0x6164647265737328302920213d205f6e65774f776e6572000000000000000000)
0x1605: v1605 = MLOAD v15c3(0x40)
0x1609: v1609 = SUB v15c6 v1605
0x160a: v160a(0x64) = CONST 
0x160c: v160c = ADD v160a(0x64) v1609
0x160e: REVERT v1605 v160c
----------------------------------

Begin block 0x160f
prev = {'0x15b4'}, next = {'0x1a50x899'}
----------------------------------
Block 0x160f
0x1610: v1610(0x1) = CONST 
0x1613: v1613 = SLOAD v1610(0x1)
0x1614: v1614(0x1) = CONST 
0x1616: v1616(0x1) = CONST 
0x1618: v1618(0xa0) = CONST 
0x161a: v161a(0x10000000000000000000000000000000000000000) = SHL v1618(0xa0) v1616(0x1)
0x161b: v161b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v161a(0x10000000000000000000000000000000000000000) v1614(0x1)
0x161c: v161c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v161b(0xffffffffffffffffffffffffffffffffffffffff)
0x161d: v161d = AND v161c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v1613
0x161e: v161e(0x1) = CONST 
0x1620: v1620(0x1) = CONST 
0x1622: v1622(0xa0) = CONST 
0x1624: v1624(0x10000000000000000000000000000000000000000) = SHL v1622(0xa0) v1620(0x1)
0x1625: v1625(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1624(0x10000000000000000000000000000000000000000) v161e(0x1)
0x1629: v1629 = AND v1625(0xffffffffffffffffffffffffffffffffffffffff) v8c7
0x162d: v162d = OR v1629 v161d
0x162f: SSTORE v1610(0x1) v162d
0x1630: JUMP v8a7(0x1a5)
----------------------------------

Begin block 0x1631
prev = {}, next = {'0x1640', '0x1639'}
----------------------------------
function 0x1631(v1631arg0, v1631arg1, v1631arg2)
Block 0x1631
0x1632: v1632(0x0) = CONST 
0x1635: v1635(0x1640) = CONST 
0x1638: JUMPI v1635(0x1640) v1631arg1
----------------------------------

Begin block 0x1639
prev = {'0x1631'}, next = {'0xd640x1631'}
----------------------------------
Block 0x1639
0x163a: v163a(0x0) = CONST 
0x163c: v163c(0xd64) = CONST 
0x163f: JUMP v163c(0xd64)
----------------------------------

Begin block 0x1640
prev = {'0x1631'}, next = {'0x164e', '0x164d'}
----------------------------------
Block 0x1640
0x1644: v1644 = MUL v1631arg0 v1631arg1
0x1649: v1649(0x164e) = CONST 
0x164c: JUMPI v1649(0x164e) v1631arg1
----------------------------------

Begin block 0x164d
prev = {'0x1640'}, next = {}
----------------------------------
Block 0x164d
0x164d: THROW 
----------------------------------

Begin block 0x164e
prev = {'0x1640'}, next = {'0xd640x1631', '0x1655'}
----------------------------------
Block 0x164e
0x164f: v164f = DIV v1644 v1631arg1
0x1650: v1650 = EQ v164f v1631arg0
0x1651: v1651(0xd64) = CONST 
0x1654: JUMPI v1651(0xd64) v1650
----------------------------------

Begin block 0x1655
prev = {'0x164e'}, next = {}
----------------------------------
Block 0x1655
0x1655: THROW 
----------------------------------

Begin block 0x1656
prev = {}, next = {'0x1660', '0x16610x1656'}
----------------------------------
function 0x1656(v1656arg0, v1656arg1, v1656arg2)
Block 0x1656
0x1657: v1657(0x0) = CONST 
0x165c: v165c(0x1661) = CONST 
0x165f: JUMPI v165c(0x1661) v1656arg0
----------------------------------

Begin block 0x1660
prev = {'0x1656'}, next = {}
----------------------------------
Block 0x1660
0x1660: THROW 
----------------------------------

Begin block 0x16610x1656
prev = {'0x1656'}, next = {}
----------------------------------
Block 0x16610x1656
0x16620x1656: v16561662 = DIV v1656arg1 v1656arg0
0x16680x1656: RETURNPRIVATE v1656arg2 v16561662
----------------------------------

Begin block 0x1669
prev = {}, next = {'0x1674', '0x1675'}
----------------------------------
function 0x1669(v1669arg0, v1669arg1, v1669arg2)
Block 0x1669
0x166a: v166a(0x0) = CONST 
0x166e: v166e = GT v1669arg0 v1669arg1
0x166f: v166f = ISZERO v166e
0x1670: v1670(0x1675) = CONST 
0x1673: JUMPI v1670(0x1675) v166f
----------------------------------

Begin block 0x1674
prev = {'0x1669'}, next = {}
----------------------------------
Block 0x1674
0x1674: THROW 
----------------------------------

Begin block 0x1675
prev = {'0x1669'}, next = {}
----------------------------------
Block 0x1675
0x1678: v1678 = SUB v1669arg1 v1669arg0
0x167a: RETURNPRIVATE v1669arg2 v1678
----------------------------------

Begin block 0x167b
prev = {}, next = {'0x1687', '0xd640x167b'}
----------------------------------
function 0x167b(v167barg0, v167barg1, v167barg2)
Block 0x167b
0x167e: v167e = ADD v167barg0 v167barg1
0x1681: v1681 = LT v167e v167barg1
0x1682: v1682 = ISZERO v1681
0x1683: v1683(0xd64) = CONST 
0x1686: JUMPI v1683(0xd64) v1682
----------------------------------

Begin block 0x1687
prev = {'0x167b'}, next = {}
----------------------------------
Block 0x1687
0x1687: THROW 
----------------------------------

Begin block 0x1688
prev = {'0x1531'}, next = {'0x16a6', '0x16f2'}
----------------------------------
Block 0x1688
0x1689: v1689(0x1) = CONST 
0x168b: v168b(0x1) = CONST 
0x168d: v168d(0xa0) = CONST 
0x168f: v168f(0x10000000000000000000000000000000000000000) = SHL v168d(0xa0) v168b(0x1)
0x1690: v1690(0xffffffffffffffffffffffffffffffffffffffff) = SUB v168f(0x10000000000000000000000000000000000000000) v1689(0x1)
0x1692: v1692 = AND v1539 v1690(0xffffffffffffffffffffffffffffffffffffffff)
0x1693: v1693(0x0) = CONST 
0x1697: MSTORE v1693(0x0) v1692
0x1698: v1698(0x9) = CONST 
0x169a: v169a(0x20) = CONST 
0x169c: MSTORE v169a(0x20) v1698(0x9)
0x169d: v169d(0x40) = CONST 
0x16a0: v16a0 = SHA3 v1693(0x0) v169d(0x40)
0x16a1: v16a1 = SLOAD v16a0
0x16a2: v16a2(0x16f2) = CONST 
0x16a5: JUMPI v16a2(0x16f2) v16a1
----------------------------------

Begin block 0x16a6
prev = {'0x1688'}, next = {}
----------------------------------
Block 0x16a6
0x16a6: v16a6(0x40) = CONST 
0x16a9: v16a9 = MLOAD v16a6(0x40)
0x16aa: v16aa(0x461bcd) = CONST 
0x16ae: v16ae(0xe5) = CONST 
0x16b0: v16b0(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v16ae(0xe5) v16aa(0x461bcd)
0x16b2: MSTORE v16a9 v16b0(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x16b3: v16b3(0x20) = CONST 
0x16b5: v16b5(0x4) = CONST 
0x16b8: v16b8 = ADD v16a9 v16b5(0x4)
0x16b9: MSTORE v16b8 v16b3(0x20)
0x16ba: v16ba(0x1a) = CONST 
0x16bc: v16bc(0x24) = CONST 
0x16bf: v16bf = ADD v16a9 v16bc(0x24)
0x16c0: MSTORE v16bf v16ba(0x1a)
0x16c1: v16c1(0x746b6e5573657250656e64696e675b5f62757965725d203e2030000000000000) = CONST 
0x16e2: v16e2(0x44) = CONST 
0x16e5: v16e5 = ADD v16a9 v16e2(0x44)
0x16e6: MSTORE v16e5 v16c1(0x746b6e5573657250656e64696e675b5f62757965725d203e2030000000000000)
0x16e8: v16e8 = MLOAD v16a6(0x40)
0x16ec: v16ec = SUB v16a9 v16e8
0x16ed: v16ed(0x64) = CONST 
0x16ef: v16ef = ADD v16ed(0x64) v16ec
0x16f1: REVERT v16e8 v16ef
----------------------------------

Begin block 0x16f2
prev = {'0x1688'}, next = {'0x171d'}
----------------------------------
Block 0x16f2
0x16f3: v16f3(0x1) = CONST 
0x16f5: v16f5(0x1) = CONST 
0x16f7: v16f7(0xa0) = CONST 
0x16f9: v16f9(0x10000000000000000000000000000000000000000) = SHL v16f7(0xa0) v16f5(0x1)
0x16fa: v16fa(0xffffffffffffffffffffffffffffffffffffffff) = SUB v16f9(0x10000000000000000000000000000000000000000) v16f3(0x1)
0x16fc: v16fc = AND v1539 v16fa(0xffffffffffffffffffffffffffffffffffffffff)
0x16fd: v16fd(0x0) = CONST 
0x1701: MSTORE v16fd(0x0) v16fc
0x1702: v1702(0x9) = CONST 
0x1704: v1704(0x20) = CONST 
0x1706: MSTORE v1704(0x20) v1702(0x9)
0x1707: v1707(0x40) = CONST 
0x170a: v170a = SHA3 v16fd(0x0) v1707(0x40)
0x170b: v170b = SLOAD v170a
0x170c: v170c(0x8) = CONST 
0x170e: v170e = SLOAD v170c(0x8)
0x170f: v170f(0x171d) = CONST 
0x1713: v1713(0xffffffff) = CONST 
0x1718: v1718(0x167b) = CONST 
0x171b: v171b(0x167b) = AND v1718(0x167b) v1713(0xffffffff)
0x171c: v171c_0 = CALLPRIVATE v171b(0x167b) v170b v170e v170f(0x171d)
----------------------------------

Begin block 0x171d
prev = {'0x16f2'}, next = {'0x174b'}
----------------------------------
Block 0x171d
0x171e: v171e(0x8) = CONST 
0x1720: SSTORE v171e(0x8) v171c_0
0x1721: v1721(0x1) = CONST 
0x1723: v1723(0x1) = CONST 
0x1725: v1725(0xa0) = CONST 
0x1727: v1727(0x10000000000000000000000000000000000000000) = SHL v1725(0xa0) v1723(0x1)
0x1728: v1728(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1727(0x10000000000000000000000000000000000000000) v1721(0x1)
0x172a: v172a = AND v1539 v1728(0xffffffffffffffffffffffffffffffffffffffff)
0x172b: v172b(0x0) = CONST 
0x172f: MSTORE v172b(0x0) v172a
0x1730: v1730(0x9) = CONST 
0x1732: v1732(0x20) = CONST 
0x1734: MSTORE v1732(0x20) v1730(0x9)
0x1735: v1735(0x40) = CONST 
0x1738: v1738 = SHA3 v172b(0x0) v1735(0x40)
0x1739: v1739 = SLOAD v1738
0x173a: v173a(0x7) = CONST 
0x173c: v173c = SLOAD v173a(0x7)
0x173d: v173d(0x174b) = CONST 
0x1741: v1741(0xffffffff) = CONST 
0x1746: v1746(0x1669) = CONST 
0x1749: v1749(0x1669) = AND v1746(0x1669) v1741(0xffffffff)
0x174a: v174a_0 = CALLPRIVATE v1749(0x1669) v1739 v173c v173d(0x174b)
----------------------------------

Begin block 0x174b
prev = {'0x171d'}, next = {'0x17af', '0x17b3'}
----------------------------------
Block 0x174b
0x174c: v174c(0x7) = CONST 
0x174e: SSTORE v174c(0x7) v174a_0
0x174f: v174f(0x2) = CONST 
0x1751: v1751 = SLOAD v174f(0x2)
0x1752: v1752(0x1) = CONST 
0x1754: v1754(0x1) = CONST 
0x1756: v1756(0xa0) = CONST 
0x1758: v1758(0x10000000000000000000000000000000000000000) = SHL v1756(0xa0) v1754(0x1)
0x1759: v1759(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1758(0x10000000000000000000000000000000000000000) v1752(0x1)
0x175c: v175c = AND v1759(0xffffffffffffffffffffffffffffffffffffffff) v1539
0x175d: v175d(0x0) = CONST 
0x1761: MSTORE v175d(0x0) v175c
0x1762: v1762(0x9) = CONST 
0x1764: v1764(0x20) = CONST 
0x1768: MSTORE v1764(0x20) v1762(0x9)
0x1769: v1769(0x40) = CONST 
0x176d: v176d = SHA3 v175d(0x0) v1769(0x40)
0x176e: v176e = SLOAD v176d
0x1770: v1770 = MLOAD v1769(0x40)
0x1771: v1771(0xa9059cbb) = CONST 
0x1776: v1776(0xe0) = CONST 
0x1778: v1778(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = SHL v1776(0xe0) v1771(0xa9059cbb)
0x177a: MSTORE v1770 v1778(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0x177b: v177b(0x4) = CONST 
0x177e: v177e = ADD v1770 v177b(0x4)
0x1782: MSTORE v177e v175c
0x1783: v1783(0x24) = CONST 
0x1786: v1786 = ADD v1770 v1783(0x24)
0x1787: MSTORE v1786 v176e
0x1788: v1788 = MLOAD v1769(0x40)
0x178c: v178c = AND v1751 v1759(0xffffffffffffffffffffffffffffffffffffffff)
0x178e: v178e(0xa9059cbb) = CONST 
0x1794: v1794(0x44) = CONST 
0x1798: v1798 = ADD v1770 v1794(0x44)
0x17a0: v17a0 = SUB v1770 v1788
0x17a1: v17a1 = ADD v17a0 v1794(0x44)
0x17a7: v17a7 = EXTCODESIZE v178c
0x17a8: v17a8 = ISZERO v17a7
0x17aa: v17aa = ISZERO v17a8
0x17ab: v17ab(0x17b3) = CONST 
0x17ae: JUMPI v17ab(0x17b3) v17aa
----------------------------------

Begin block 0x17af
prev = {'0x174b'}, next = {}
----------------------------------
Block 0x17af
0x17af: v17af(0x0) = CONST 
0x17b2: REVERT v17af(0x0) v17af(0x0)
----------------------------------

Begin block 0x17b3
prev = {'0x174b'}, next = {'0x17c7', '0x17be'}
----------------------------------
Block 0x17b3
0x17b5: v17b5 = GAS 
0x17b6: v17b6 = CALL v17b5 v178c v175d(0x0) v1788 v17a1 v1788 v1764(0x20)
0x17b7: v17b7 = ISZERO v17b6
0x17b9: v17b9 = ISZERO v17b7
0x17ba: v17ba(0x17c7) = CONST 
0x17bd: JUMPI v17ba(0x17c7) v17b9
----------------------------------

Begin block 0x17be
prev = {'0x17b3'}, next = {}
----------------------------------
Block 0x17be
0x17be: v17be = RETURNDATASIZE 
0x17bf: v17bf(0x0) = CONST 
0x17c2: RETURNDATACOPY v17bf(0x0) v17bf(0x0) v17be
0x17c3: v17c3 = RETURNDATASIZE 
0x17c4: v17c4(0x0) = CONST 
0x17c6: REVERT v17c4(0x0) v17c3
----------------------------------

Begin block 0x17c7
prev = {'0x17b3'}, next = {'0x17d9', '0x17dd'}
----------------------------------
Block 0x17c7
0x17cc: v17cc(0x40) = CONST 
0x17ce: v17ce = MLOAD v17cc(0x40)
0x17cf: v17cf = RETURNDATASIZE 
0x17d0: v17d0(0x20) = CONST 
0x17d3: v17d3 = LT v17cf v17d0(0x20)
0x17d4: v17d4 = ISZERO v17d3
0x17d5: v17d5(0x17dd) = CONST 
0x17d8: JUMPI v17d5(0x17dd) v17d4
----------------------------------

Begin block 0x17d9
prev = {'0x17c7'}, next = {}
----------------------------------
Block 0x17d9
0x17d9: v17d9(0x0) = CONST 
0x17dc: REVERT v17d9(0x0) v17d9(0x0)
----------------------------------

Begin block 0x17dd
prev = {'0x17c7'}, next = {'0x153e'}
----------------------------------
Block 0x17dd
0x17e0: v17e0(0x1) = CONST 
0x17e2: v17e2(0x1) = CONST 
0x17e4: v17e4(0xa0) = CONST 
0x17e6: v17e6(0x10000000000000000000000000000000000000000) = SHL v17e4(0xa0) v17e2(0x1)
0x17e7: v17e7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v17e6(0x10000000000000000000000000000000000000000) v17e0(0x1)
0x17e9: v17e9 = AND v1539 v17e7(0xffffffffffffffffffffffffffffffffffffffff)
0x17ea: v17ea(0x0) = CONST 
0x17ee: MSTORE v17ea(0x0) v17e9
0x17ef: v17ef(0x9) = CONST 
0x17f1: v17f1(0x20) = CONST 
0x17f5: MSTORE v17f1(0x20) v17ef(0x9)
0x17f6: v17f6(0x40) = CONST 
0x17fa: v17fa = SHA3 v17ea(0x0) v17f6(0x40)
0x17fb: v17fb = SLOAD v17fa
0x17fd: v17fd = MLOAD v17f6(0x40)
0x1800: MSTORE v17fd v17fb
0x1802: v1802 = MLOAD v17f6(0x40)
0x1806: v1806(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x182b: v182b = SUB v17fd v1802
0x182e: v182e = ADD v17f1(0x20) v182b
0x1830: LOG3 v1802 v182e v1806(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v17e9 v17ea(0x0)
0x1831: v1831(0x1) = CONST 
0x1833: v1833(0x1) = CONST 
0x1835: v1835(0xa0) = CONST 
0x1837: v1837(0x10000000000000000000000000000000000000000) = SHL v1835(0xa0) v1833(0x1)
0x1838: v1838(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1837(0x10000000000000000000000000000000000000000) v1831(0x1)
0x1839: v1839 = AND v1838(0xffffffffffffffffffffffffffffffffffffffff) v1539
0x183a: v183a(0x0) = CONST 
0x183e: MSTORE v183a(0x0) v1839
0x183f: v183f(0x9) = CONST 
0x1841: v1841(0x20) = CONST 
0x1843: MSTORE v1841(0x20) v183f(0x9)
0x1844: v1844(0x40) = CONST 
0x1847: v1847 = SHA3 v183a(0x0) v1844(0x40)
0x1848: SSTORE v1847 v183a(0x0)
0x1849: JUMP v1523(0x153e)
----------------------------------

Begin block 0x184a
prev = {}, next = {'0x188b', '0x187b'}
----------------------------------
function 0x184a(v184aarg0, v184aarg1, v184aarg2, v184aarg3)
Block 0x184a
0x184d: v184d = SLOAD v184aarg2
0x184e: v184e(0x1) = CONST 
0x1851: v1851(0x1) = CONST 
0x1853: v1853 = AND v1851(0x1) v184d
0x1854: v1854 = ISZERO v1853
0x1855: v1855(0x100) = CONST 
0x1858: v1858 = MUL v1855(0x100) v1854
0x1859: v1859 = SUB v1858 v184e(0x1)
0x185a: v185a = AND v1859 v184d
0x185b: v185b(0x2) = CONST 
0x185e: v185e = DIV v185a v185b(0x2)
0x1860: v1860(0x0) = CONST 
0x1862: MSTORE v1860(0x0) v184aarg2
0x1863: v1863(0x20) = CONST 
0x1865: v1865(0x0) = CONST 
0x1867: v1867 = SHA3 v1865(0x0) v1863(0x20)
0x1869: v1869(0x1f) = CONST 
0x186b: v186b = ADD v1869(0x1f) v185e
0x186c: v186c(0x20) = CONST 
0x186f: v186f = DIV v186b v186c(0x20)
0x1871: v1871 = ADD v1867 v186f
0x1874: v1874(0x1f) = CONST 
0x1876: v1876 = LT v1874(0x1f) v184aarg0
0x1877: v1877(0x188b) = CONST 
0x187a: JUMPI v1877(0x188b) v1876
----------------------------------

Begin block 0x187b
prev = {'0x184a'}, next = {'0x18b8'}
----------------------------------
Block 0x187b
0x187c: v187c = MLOAD v184aarg1
0x187d: v187d(0xff) = CONST 
0x187f: v187f(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v187d(0xff)
0x1880: v1880 = AND v187f(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) v187c
0x1883: v1883 = ADD v184aarg0 v184aarg0
0x1884: v1884 = OR v1883 v1880
0x1886: SSTORE v184aarg2 v1884
0x1887: v1887(0x18b8) = CONST 
0x188a: JUMP v1887(0x18b8)
----------------------------------

Begin block 0x188b
prev = {'0x184a'}, next = {'0x18b8', '0x189a'}
----------------------------------
Block 0x188b
0x188e: v188e = ADD v184aarg0 v184aarg0
0x188f: v188f(0x1) = CONST 
0x1891: v1891 = ADD v188f(0x1) v188e
0x1893: SSTORE v184aarg2 v1891
0x1895: v1895 = ISZERO v184aarg0
0x1896: v1896(0x18b8) = CONST 
0x1899: JUMPI v1896(0x18b8) v1895
----------------------------------

Begin block 0x189a
prev = {'0x188b'}, next = {'0x189d'}
----------------------------------
Block 0x189a
0x189c: v189c = ADD v184aarg1 v184aarg0
----------------------------------

Begin block 0x189d
prev = {'0x18a6', '0x189a'}, next = {'0x18b8', '0x18a6'}
----------------------------------
Block 0x189d
0x189d_0x2: v189d_2 = PHI v18ad v184aarg1
0x18a0: v18a0 = GT v189c v189d_2
0x18a1: v18a1 = ISZERO v18a0
0x18a2: v18a2(0x18b8) = CONST 
0x18a5: JUMPI v18a2(0x18b8) v18a1
----------------------------------

Begin block 0x18a6
prev = {'0x189d'}, next = {'0x189d'}
----------------------------------
Block 0x18a6
0x18a6_0x1: v18a6_1 = PHI v1867 v18b2
0x18a6_0x2: v18a6_2 = PHI v18ad v184aarg1
0x18a7: v18a7 = MLOAD v18a6_2
0x18a9: SSTORE v18a6_1 v18a7
0x18ab: v18ab(0x20) = CONST 
0x18ad: v18ad = ADD v18ab(0x20) v18a6_2
0x18b0: v18b0(0x1) = CONST 
0x18b2: v18b2 = ADD v18b0(0x1) v18a6_1
0x18b4: v18b4(0x189d) = CONST 
0x18b7: JUMP v18b4(0x189d)
----------------------------------

Begin block 0x18b8
prev = {'0x188b', '0x189d', '0x187b'}, next = {'0x18c40x184a'}
----------------------------------
Block 0x18b8
0x18b8_0x1: v18b8_1 = PHI v1867 v18b2
0x18ba: v18ba(0x18c4) = CONST 
0x18c0: v18c0(0x18c8) = CONST 
0x18c3: v18c3_0 = CALLPRIVATE v18c0(0x18c8) v18b8_1 v1871 v18ba(0x18c4)
----------------------------------

Begin block 0x18c40x184a
prev = {'0x18b8'}, next = {}
----------------------------------
Block 0x18c40x184a
0x18c70x184a: RETURNPRIVATE v184aarg3 v184aarg2
----------------------------------

Begin block 0x18c40x18c8
prev = {'0x18ce'}, next = {'0xe0e0x18c8'}
----------------------------------
Block 0x18c40x18c8
0x18c70x18c8: JUMP v18c9(0xe0e)
----------------------------------

Begin block 0x18c8
prev = {}, next = {'0x18ce'}
----------------------------------
function 0x18c8(v18c8arg0, v18c8arg1, v18c8arg2)
Block 0x18c8
0x18c9: v18c9(0xe0e) = CONST 
----------------------------------

Begin block 0x18ce
prev = {'0x18d7', '0x18c8'}, next = {'0x18d7', '0x18c40x18c8'}
----------------------------------
Block 0x18ce
0x18ce_0x0: v18ce_0 = PHI v18dd v18c8arg0
0x18d1: v18d1 = GT v18c8arg1 v18ce_0
0x18d2: v18d2 = ISZERO v18d1
0x18d3: v18d3(0x18c4) = CONST 
0x18d6: JUMPI v18d3(0x18c4) v18d2
----------------------------------

Begin block 0x18d7
prev = {'0x18ce'}, next = {'0x18ce'}
----------------------------------
Block 0x18d7
0x18d7_0x0: v18d7_0 = PHI v18dd v18c8arg0
0x18d7: v18d7(0x0) = CONST 
0x18da: SSTORE v18d7_0 v18d7(0x0)
0x18db: v18db(0x1) = CONST 
0x18dd: v18dd = ADD v18db(0x1) v18d7_0
0x18de: v18de(0x18ce) = CONST 
0x18e1: JUMP v18de(0x18ce)
----------------------------------

Begin block 0x194f
prev = {'0x191', '0x0'}, next = {'0x19c0x0'}
----------------------------------
Block 0x194f
0x1950: v1950(0x19c) = CONST 
0x1951: CALLPRIVATE v1950(0x19c)
----------------------------------

Begin block 0x1952
prev = {'0x159'}, next = {}
----------------------------------
Block 0x1952
0x1953: v1953(0x1a7) = CONST 
0x1954: CALLPRIVATE v1953(0x1a7)
----------------------------------

Begin block 0x1955
prev = {'0x165'}, next = {}
----------------------------------
Block 0x1955
0x1956: v1956(0x1ce) = CONST 
0x1957: CALLPRIVATE v1956(0x1ce)
----------------------------------

Begin block 0x1958
prev = {'0x170'}, next = {}
----------------------------------
Block 0x1958
0x1959: v1959(0x21b) = CONST 
0x195a: CALLPRIVATE v1959(0x21b)
----------------------------------

Begin block 0x195b
prev = {'0x17b'}, next = {}
----------------------------------
Block 0x195b
0x195c: v195c(0x2a5) = CONST 
0x195d: CALLPRIVATE v195c(0x2a5)
----------------------------------

Begin block 0x195e
prev = {'0x186'}, next = {}
----------------------------------
Block 0x195e
0x195f: v195f(0x2d8) = CONST 
0x1960: CALLPRIVATE v195f(0x2d8)
----------------------------------

Begin block 0x1961
prev = {'0x191'}, next = {}
----------------------------------
Block 0x1961
0x1962: v1962(0x2ed) = CONST 
0x1963: CALLPRIVATE v1962(0x2ed)
----------------------------------

Begin block 0x1964
prev = {'0x133'}, next = {}
----------------------------------
Block 0x1964
0x1965: v1965(0x318) = CONST 
0x1966: CALLPRIVATE v1965(0x318)
----------------------------------

Begin block 0x1967
prev = {'0x13f'}, next = {}
----------------------------------
Block 0x1967
0x1968: v1968(0x32d) = CONST 
0x1969: CALLPRIVATE v1968(0x32d)
----------------------------------

Begin block 0x196a
prev = {'0x14a'}, next = {}
----------------------------------
Block 0x196a
0x196b: v196b(0x342) = CONST 
0x196c: CALLPRIVATE v196b(0x342)
----------------------------------

Begin block 0x196d
prev = {'0x103'}, next = {}
----------------------------------
Block 0x196d
0x196e: v196e(0x4bb) = CONST 
0x196f: CALLPRIVATE v196e(0x4bb)
----------------------------------

Begin block 0x1970
prev = {'0x10e'}, next = {}
----------------------------------
Block 0x1970
0x1971: v1971(0x4ec) = CONST 
0x1972: CALLPRIVATE v1971(0x4ec)
----------------------------------

Begin block 0x1973
prev = {'0x119'}, next = {}
----------------------------------
Block 0x1973
0x1974: v1974(0x501) = CONST 
0x1975: CALLPRIVATE v1974(0x501)
----------------------------------

Begin block 0x1976
prev = {'0x124'}, next = {}
----------------------------------
Block 0x1976
0x1977: v1977(0x516) = CONST 
0x1978: CALLPRIVATE v1977(0x516)
----------------------------------

Begin block 0x1979
prev = {'0xc6'}, next = {}
----------------------------------
Block 0x1979
0x197a: v197a(0x52b) = CONST 
0x197b: CALLPRIVATE v197a(0x52b)
----------------------------------

Begin block 0x197c
prev = {'0xd2'}, next = {}
----------------------------------
Block 0x197c
0x197d: v197d(0x55e) = CONST 
0x197e: CALLPRIVATE v197d(0x55e)
----------------------------------

Begin block 0x197f
prev = {'0xdd'}, next = {}
----------------------------------
Block 0x197f
0x1980: v1980(0x573) = CONST 
0x1981: CALLPRIVATE v1980(0x573)
----------------------------------

Begin block 0x1982
prev = {'0x96'}, next = {}
----------------------------------
Block 0x1982
0x1983: v1983(0x5a6) = CONST 
0x1984: CALLPRIVATE v1983(0x5a6)
----------------------------------

Begin block 0x1985
prev = {'0xa1'}, next = {}
----------------------------------
Block 0x1985
0x1986: v1986(0x5bb) = CONST 
0x1987: CALLPRIVATE v1986(0x5bb)
----------------------------------

Begin block 0x1988
prev = {'0xac'}, next = {}
----------------------------------
Block 0x1988
0x1989: v1989(0x5d0) = CONST 
0x198a: CALLPRIVATE v1989(0x5d0)
----------------------------------

Begin block 0x198b
prev = {'0xb7'}, next = {}
----------------------------------
Block 0x198b
0x198c: v198c(0x5e5) = CONST 
0x198d: CALLPRIVATE v198c(0x5e5)
----------------------------------

Begin block 0x198e
prev = {'0x64'}, next = {}
----------------------------------
Block 0x198e
0x198f: v198f(0x5fa) = CONST 
0x1990: CALLPRIVATE v198f(0x5fa)
----------------------------------

Begin block 0x1991
prev = {'0x70'}, next = {}
----------------------------------
Block 0x1991
0x1992: v1992(0x773) = CONST 
0x1993: CALLPRIVATE v1992(0x773)
----------------------------------

Begin block 0x1994
prev = {'0x7b'}, next = {}
----------------------------------
Block 0x1994
0x1995: v1995(0x788) = CONST 
0x1996: CALLPRIVATE v1995(0x788)
----------------------------------

Begin block 0x1997
prev = {'0x34'}, next = {}
----------------------------------
Block 0x1997
0x1998: v1998(0x7c1) = CONST 
0x1999: CALLPRIVATE v1998(0x7c1)
----------------------------------

Begin block 0x199a
prev = {'0x3f'}, next = {}
----------------------------------
Block 0x199a
0x199b: v199b(0x86f) = CONST 
0x199c: CALLPRIVATE v199b(0x86f)
----------------------------------

Begin block 0x199d
prev = {'0x4a'}, next = {}
----------------------------------
Block 0x199d
0x199e: v199e(0x884) = CONST 
0x199f: CALLPRIVATE v199e(0x884)
----------------------------------

Begin block 0x19a0
prev = {'0x55'}, next = {}
----------------------------------
Block 0x19a0
0x19a1: v19a1(0x899) = CONST 
0x19a2: CALLPRIVATE v19a1(0x899)
----------------------------------
