
Begin block 0x0
prev = {}, next = {'0x10', '0xc'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x632', '0x1a'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x61a: v61a(0x632) = CONST 
0x61b: JUMPI v61a(0x632) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x71', '0x2b'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x313ce567) = CONST 
0x26: v26 = GT v21(0x313ce567) v1f
0x27: v27(0x71) = CONST 
0x2a: JUMPI v27(0x71) v26
----------------------------------

Begin block 0x2b
prev = {'0x1a'}, next = {'0x644', '0x36'}
----------------------------------
Block 0x2b
0x2c: v2c(0x313ce567) = CONST 
0x31: v31 = EQ v2c(0x313ce567) v1f
0x61c: v61c(0x644) = CONST 
0x61d: JUMPI v61c(0x644) v31
----------------------------------

Begin block 0x36
prev = {'0x2b'}, next = {'0x41', '0x647'}
----------------------------------
Block 0x36
0x37: v37(0x5c658165) = CONST 
0x3c: v3c = EQ v37(0x5c658165) v1f
0x61e: v61e(0x647) = CONST 
0x61f: JUMPI v61e(0x647) v3c
----------------------------------

Begin block 0x41
prev = {'0x36'}, next = {'0x4c', '0x64a'}
----------------------------------
Block 0x41
0x42: v42(0x70a08231) = CONST 
0x47: v47 = EQ v42(0x70a08231) v1f
0x620: v620(0x64a) = CONST 
0x621: JUMPI v620(0x64a) v47
----------------------------------

Begin block 0x4c
prev = {'0x41'}, next = {'0x64d', '0x57'}
----------------------------------
Block 0x4c
0x4d: v4d(0x95d89b41) = CONST 
0x52: v52 = EQ v4d(0x95d89b41) v1f
0x622: v622(0x64d) = CONST 
0x623: JUMPI v622(0x64d) v52
----------------------------------

Begin block 0x57
prev = {'0x4c'}, next = {'0x650', '0x62'}
----------------------------------
Block 0x57
0x58: v58(0xa9059cbb) = CONST 
0x5d: v5d = EQ v58(0xa9059cbb) v1f
0x624: v624(0x650) = CONST 
0x625: JUMPI v624(0x650) v5d
----------------------------------

Begin block 0x62
prev = {'0x57'}, next = {'0x653', '0x6d'}
----------------------------------
Block 0x62
0x63: v63(0xdd62ed3e) = CONST 
0x68: v68 = EQ v63(0xdd62ed3e) v1f
0x626: v626(0x653) = CONST 
0x627: JUMPI v626(0x653) v68
----------------------------------

Begin block 0x6d
prev = {'0x62'}, next = {'0xa90x0'}
----------------------------------
Block 0x6d
0x6d: v6d(0xa9) = CONST 
0x70: JUMP v6d(0xa9)
----------------------------------

Begin block 0x71
prev = {'0x1a'}, next = {'0x635', '0x7d'}
----------------------------------
Block 0x71
0x73: v73(0x6fdde03) = CONST 
0x78: v78 = EQ v73(0x6fdde03) v1f
0x628: v628(0x635) = CONST 
0x629: JUMPI v628(0x635) v78
----------------------------------

Begin block 0x7d
prev = {'0x71'}, next = {'0x638', '0x88'}
----------------------------------
Block 0x7d
0x7e: v7e(0x95ea7b3) = CONST 
0x83: v83 = EQ v7e(0x95ea7b3) v1f
0x62a: v62a(0x638) = CONST 
0x62b: JUMPI v62a(0x638) v83
----------------------------------

Begin block 0x88
prev = {'0x7d'}, next = {'0x93', '0x63b'}
----------------------------------
Block 0x88
0x89: v89(0x18160ddd) = CONST 
0x8e: v8e = EQ v89(0x18160ddd) v1f
0x62c: v62c(0x63b) = CONST 
0x62d: JUMPI v62c(0x63b) v8e
----------------------------------

Begin block 0x93
prev = {'0x88'}, next = {'0x63e', '0x9e'}
----------------------------------
Block 0x93
0x94: v94(0x23b872dd) = CONST 
0x99: v99 = EQ v94(0x23b872dd) v1f
0x62e: v62e(0x63e) = CONST 
0x62f: JUMPI v62e(0x63e) v99
----------------------------------

Begin block 0x9e
prev = {'0x93'}, next = {'0x632', '0x641'}
----------------------------------
Block 0x9e
0x9f: v9f(0x27e235e3) = CONST 
0xa4: va4 = EQ v9f(0x27e235e3) v1f
0x630: v630(0x641) = CONST 
0x631: JUMPI v630(0x641) va4
----------------------------------

Begin block 0xa9
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0xa9
0xaa: vaa(0x0) = CONST 
0xad: REVERT vaa(0x0) vaa(0x0)
----------------------------------

Begin block 0xa90x0
prev = {'0x632', '0x6d'}, next = {}
----------------------------------
Block 0xa90x0
0xaa0x0: v0aa(0x0) = CONST 
0xad0x0: REVERT v0aa(0x0) v0aa(0x0)
----------------------------------

Begin block 0xae
prev = {}, next = {'0xb60xae'}
----------------------------------
function name()()
Block 0xae
0xaf: vaf(0xb6) = CONST 
0xb2: vb2(0x2b5) = CONST 
0xb5: vb5_0, vb5_1 = CALLPRIVATE vb2(0x2b5) vaf(0xb6)
----------------------------------

Begin block 0xb60xae
prev = {'0xae'}, next = {'0xd80xae'}
----------------------------------
Block 0xb60xae
0xb70xae: vaeb7(0x40) = CONST 
0xba0xae: vaeba = MLOAD vaeb7(0x40)
0xbb0xae: vaebb(0x20) = CONST 
0xbf0xae: MSTORE vaeba vaebb(0x20)
0xc10xae: vaec1 = MLOAD vb5_0
0xc40xae: vaec4 = ADD vaeba vaebb(0x20)
0xc50xae: MSTORE vaec4 vaec1
0xc70xae: vaec7 = MLOAD vb5_0
0xce0xae: vaece = ADD vaeba vaeb7(0x40)
0xd10xae: vaed1 = ADD vb5_0 vaebb(0x20)
0xd60xae: vaed6(0x0) = CONST 
----------------------------------

Begin block 0xb60x253
prev = {'0x253'}, next = {'0xd80x253'}
----------------------------------
Block 0xb60x253
0xb70x253: v253b7(0x40) = CONST 
0xba0x253: v253ba = MLOAD v253b7(0x40)
0xbb0x253: v253bb(0x20) = CONST 
0xbf0x253: MSTORE v253ba v253bb(0x20)
0xc10x253: v253c1 = MLOAD v25a_0
0xc40x253: v253c4 = ADD v253ba v253bb(0x20)
0xc50x253: MSTORE v253c4 v253c1
0xc70x253: v253c7 = MLOAD v25a_0
0xce0x253: v253ce = ADD v253ba v253b7(0x40)
0xd10x253: v253d1 = ADD v25a_0 v253bb(0x20)
0xd60x253: v253d6(0x0) = CONST 
----------------------------------

Begin block 0xd80xae
prev = {'0xb60xae', '0xe10xae'}, next = {'0xe10xae', '0xf00xae'}
----------------------------------
Block 0xd80xae
0xd80xae_0x0: vd8ae_0 = PHI vaed6(0x0) vaeeb
0xdb0xae: vaedb = LT vd8ae_0 vaec7
0xdc0xae: vaedc = ISZERO vaedb
0xdd0xae: vaedd(0xf0) = CONST 
0xe00xae: JUMPI vaedd(0xf0) vaedc
----------------------------------

Begin block 0xd80x253
prev = {'0xb60x253', '0xe10x253'}, next = {'0xf00x253', '0xe10x253'}
----------------------------------
Block 0xd80x253
0xd80x253_0x0: vd8253_0 = PHI v253d6(0x0) v253eb
0xdb0x253: v253db = LT vd8253_0 v253c7
0xdc0x253: v253dc = ISZERO v253db
0xdd0x253: v253dd(0xf0) = CONST 
0xe00x253: JUMPI v253dd(0xf0) v253dc
----------------------------------

Begin block 0xe10xae
prev = {'0xd80xae'}, next = {'0xd80xae'}
----------------------------------
Block 0xe10xae
0xe10xae_0x0: ve1ae_0 = PHI vaed6(0x0) vaeeb
0xe30xae: vaee3 = ADD ve1ae_0 vaed1
0xe40xae: vaee4 = MLOAD vaee3
0xe70xae: vaee7 = ADD ve1ae_0 vaece
0xe80xae: MSTORE vaee7 vaee4
0xe90xae: vaee9(0x20) = CONST 
0xeb0xae: vaeeb = ADD vaee9(0x20) ve1ae_0
0xec0xae: vaeec(0xd8) = CONST 
0xef0xae: JUMP vaeec(0xd8)
----------------------------------

Begin block 0xe10x253
prev = {'0xd80x253'}, next = {'0xd80x253'}
----------------------------------
Block 0xe10x253
0xe10x253_0x0: ve1253_0 = PHI v253d6(0x0) v253eb
0xe30x253: v253e3 = ADD ve1253_0 v253d1
0xe40x253: v253e4 = MLOAD v253e3
0xe70x253: v253e7 = ADD ve1253_0 v253ce
0xe80x253: MSTORE v253e7 v253e4
0xe90x253: v253e9(0x20) = CONST 
0xeb0x253: v253eb = ADD v253e9(0x20) ve1253_0
0xec0x253: v253ec(0xd8) = CONST 
0xef0x253: JUMP v253ec(0xd8)
----------------------------------

Begin block 0xf00xae
prev = {'0xd80xae'}, next = {'0x1040xae', '0x11d0xae'}
----------------------------------
Block 0xf00xae
0xf90xae: vaef9 = ADD vaec7 vaece
0xfb0xae: vaefb(0x1f) = CONST 
0xfd0xae: vaefd = AND vaefb(0x1f) vaec7
0xff0xae: vaeff = ISZERO vaefd
0x1000xae: vae100(0x11d) = CONST 
0x1030xae: JUMPI vae100(0x11d) vaeff
----------------------------------

Begin block 0xf00x253
prev = {'0xd80x253'}, next = {'0x11d0x253', '0x1040x253'}
----------------------------------
Block 0xf00x253
0xf90x253: v253f9 = ADD v253c7 v253ce
0xfb0x253: v253fb(0x1f) = CONST 
0xfd0x253: v253fd = AND v253fb(0x1f) v253c7
0xff0x253: v253ff = ISZERO v253fd
0x1000x253: v253100(0x11d) = CONST 
0x1030x253: JUMPI v253100(0x11d) v253ff
----------------------------------

Begin block 0x1040xae
prev = {'0xf00xae'}, next = {'0x11d0xae'}
----------------------------------
Block 0x1040xae
0x1060xae: vae106 = SUB vaef9 vaefd
0x1080xae: vae108 = MLOAD vae106
0x1090xae: vae109(0x1) = CONST 
0x10c0xae: vae10c(0x20) = CONST 
0x10e0xae: vae10e = SUB vae10c(0x20) vaefd
0x10f0xae: vae10f(0x100) = CONST 
0x1120xae: vae112 = EXP vae10f(0x100) vae10e
0x1130xae: vae113 = SUB vae112 vae109(0x1)
0x1140xae: vae114 = NOT vae113
0x1150xae: vae115 = AND vae114 vae108
0x1170xae: MSTORE vae106 vae115
0x1180xae: vae118(0x20) = CONST 
0x11a0xae: vae11a = ADD vae118(0x20) vae106
----------------------------------

Begin block 0x1040x253
prev = {'0xf00x253'}, next = {'0x11d0x253'}
----------------------------------
Block 0x1040x253
0x1060x253: v253106 = SUB v253f9 v253fd
0x1080x253: v253108 = MLOAD v253106
0x1090x253: v253109(0x1) = CONST 
0x10c0x253: v25310c(0x20) = CONST 
0x10e0x253: v25310e = SUB v25310c(0x20) v253fd
0x10f0x253: v25310f(0x100) = CONST 
0x1120x253: v253112 = EXP v25310f(0x100) v25310e
0x1130x253: v253113 = SUB v253112 v253109(0x1)
0x1140x253: v253114 = NOT v253113
0x1150x253: v253115 = AND v253114 v253108
0x1170x253: MSTORE v253106 v253115
0x1180x253: v253118(0x20) = CONST 
0x11a0x253: v25311a = ADD v253118(0x20) v253106
----------------------------------

Begin block 0x11d0xae
prev = {'0xf00xae', '0x1040xae'}, next = {}
----------------------------------
Block 0x11d0xae
0x11d0xae_0x1: v11dae_1 = PHI vaef9 vae11a
0x1230xae: vae123(0x40) = CONST 
0x1250xae: vae125 = MLOAD vae123(0x40)
0x1280xae: vae128 = SUB v11dae_1 vae125
0x12a0xae: RETURN vae125 vae128
----------------------------------

Begin block 0x11d0x253
prev = {'0xf00x253', '0x1040x253'}, next = {}
----------------------------------
Block 0x11d0x253
0x11d0x253_0x1: v11d253_1 = PHI v253f9 v25311a
0x1230x253: v253123(0x40) = CONST 
0x1250x253: v253125 = MLOAD v253123(0x40)
0x1280x253: v253128 = SUB v11d253_1 v253125
0x12a0x253: RETURN v253125 v253128
----------------------------------

Begin block 0x12b
prev = {}, next = {'0x141', '0x13d'}
----------------------------------
function approve(address,uint256)()
Block 0x12b
0x12c: v12c(0x157) = CONST 
0x12f: v12f(0x4) = CONST 
0x132: v132 = CALLDATASIZE 
0x133: v133 = SUB v132 v12f(0x4)
0x134: v134(0x40) = CONST 
0x137: v137 = LT v133 v134(0x40)
0x138: v138 = ISZERO v137
0x139: v139(0x141) = CONST 
0x13c: JUMPI v139(0x141) v138
----------------------------------

Begin block 0x13d
prev = {'0x12b'}, next = {}
----------------------------------
Block 0x13d
0x13d: v13d(0x0) = CONST 
0x140: REVERT v13d(0x0) v13d(0x0)
----------------------------------

Begin block 0x141
prev = {'0x12b'}, next = {'0x343'}
----------------------------------
Block 0x141
0x143: v143(0x1) = CONST 
0x145: v145(0x1) = CONST 
0x147: v147(0xa0) = CONST 
0x149: v149(0x10000000000000000000000000000000000000000) = SHL v147(0xa0) v145(0x1)
0x14a: v14a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v149(0x10000000000000000000000000000000000000000) v143(0x1)
0x14c: v14c = CALLDATALOAD v12f(0x4)
0x14d: v14d = AND v14c v14a(0xffffffffffffffffffffffffffffffffffffffff)
0x14f: v14f(0x20) = CONST 
0x151: v151 = ADD v14f(0x20) v12f(0x4)
0x152: v152 = CALLDATALOAD v151
0x153: v153(0x343) = CONST 
0x156: JUMP v153(0x343)
----------------------------------

Begin block 0x1570x12b
prev = {'0x343'}, next = {}
----------------------------------
Block 0x1570x12b
0x1580x12b: v12b158(0x40) = CONST 
0x15b0x12b: v12b15b = MLOAD v12b158(0x40)
0x15d0x12b: v12b15d = ISZERO v3a2(0x1)
0x15e0x12b: v12b15e = ISZERO v12b15d
0x1600x12b: MSTORE v12b15b v12b15e
0x1610x12b: v12b161 = MLOAD v12b158(0x40)
0x1650x12b: v12b165 = SUB v12b15b v12b161
0x1660x12b: v12b166(0x20) = CONST 
0x1680x12b: v12b168 = ADD v12b166(0x20) v12b165
0x16a0x12b: RETURN v12b161 v12b168
----------------------------------

Begin block 0x1570x185
prev = {'0x3f9'}, next = {}
----------------------------------
Block 0x1570x185
0x1580x185: v185158(0x40) = CONST 
0x15b0x185: v18515b = MLOAD v185158(0x40)
0x15d0x185: v18515d = ISZERO v479(0x1)
0x15e0x185: v18515e = ISZERO v18515d
0x1600x185: MSTORE v18515b v18515e
0x1610x185: v185161 = MLOAD v185158(0x40)
0x1650x185: v185165 = SUB v18515b v185161
0x1660x185: v185166(0x20) = CONST 
0x1680x185: v185168 = ADD v185166(0x20) v185165
0x16a0x185: RETURN v185161 v185168
----------------------------------

Begin block 0x1570x25b
prev = {'0x54c'}, next = {}
----------------------------------
Block 0x1570x25b
0x1580x25b: v25b158(0x40) = CONST 
0x15b0x25b: v25b15b = MLOAD v25b158(0x40)
0x15d0x25b: v25b15d = ISZERO v5b3(0x1)
0x15e0x25b: v25b15e = ISZERO v25b15d
0x1600x25b: MSTORE v25b15b v25b15e
0x1610x25b: v25b161 = MLOAD v25b158(0x40)
0x1650x25b: v25b165 = SUB v25b15b v25b161
0x1660x25b: v25b166(0x20) = CONST 
0x1680x25b: v25b168 = ADD v25b166(0x20) v25b165
0x16a0x25b: RETURN v25b161 v25b168
----------------------------------

Begin block 0x16b
prev = {}, next = {'0x3a9'}
----------------------------------
function totalSupply()()
Block 0x16b
0x16c: v16c(0x173) = CONST 
0x16f: v16f(0x3a9) = CONST 
0x172: JUMP v16f(0x3a9)
----------------------------------

Begin block 0x1730x16b
prev = {'0x3a9'}, next = {}
----------------------------------
Block 0x1730x16b
0x1740x16b: v16b174(0x40) = CONST 
0x1770x16b: v16b177 = MLOAD v16b174(0x40)
0x17a0x16b: MSTORE v16b177 v3ac
0x17b0x16b: v16b17b = MLOAD v16b174(0x40)
0x17f0x16b: v16b17f = SUB v16b177 v16b17b
0x1800x16b: v16b180(0x20) = CONST 
0x1820x16b: v16b182 = ADD v16b180(0x20) v16b17f
0x1840x16b: RETURN v16b17b v16b182
----------------------------------

Begin block 0x1730x1bb
prev = {'0x482'}, next = {}
----------------------------------
Block 0x1730x1bb
0x1740x1bb: v1bb174(0x40) = CONST 
0x1770x1bb: v1bb177 = MLOAD v1bb174(0x40)
0x17a0x1bb: MSTORE v1bb177 v491
0x17b0x1bb: v1bb17b = MLOAD v1bb174(0x40)
0x17f0x1bb: v1bb17f = SUB v1bb177 v1bb17b
0x1800x1bb: v1bb180(0x20) = CONST 
0x1820x1bb: v1bb182 = ADD v1bb180(0x20) v1bb17f
0x1840x1bb: RETURN v1bb17b v1bb182
----------------------------------

Begin block 0x1730x1ff
prev = {'0x49d'}, next = {}
----------------------------------
Block 0x1730x1ff
0x1740x1ff: v1ff174(0x40) = CONST 
0x1770x1ff: v1ff177 = MLOAD v1ff174(0x40)
0x17a0x1ff: MSTORE v1ff177 v4b7
0x17b0x1ff: v1ff17b = MLOAD v1ff174(0x40)
0x17f0x1ff: v1ff17f = SUB v1ff177 v1ff17b
0x1800x1ff: v1ff180(0x20) = CONST 
0x1820x1ff: v1ff182 = ADD v1ff180(0x20) v1ff17f
0x1840x1ff: RETURN v1ff17b v1ff182
----------------------------------

Begin block 0x1730x22d
prev = {'0x4ba'}, next = {}
----------------------------------
Block 0x1730x22d
0x1740x22d: v22d174(0x40) = CONST 
0x1770x22d: v22d177 = MLOAD v22d174(0x40)
0x17a0x22d: MSTORE v22d177 v4d2
0x17b0x22d: v22d17b = MLOAD v22d174(0x40)
0x17f0x22d: v22d17f = SUB v22d177 v22d17b
0x1800x22d: v22d180(0x20) = CONST 
0x1820x22d: v22d182 = ADD v22d180(0x20) v22d17f
0x1840x22d: RETURN v22d17b v22d182
----------------------------------

Begin block 0x1730x287
prev = {'0x5ba'}, next = {}
----------------------------------
Block 0x1730x287
0x1740x287: v287174(0x40) = CONST 
0x1770x287: v287177 = MLOAD v287174(0x40)
0x17a0x287: MSTORE v287177 v5e2
0x17b0x287: v28717b = MLOAD v287174(0x40)
0x17f0x287: v28717f = SUB v287177 v28717b
0x1800x287: v287180(0x20) = CONST 
0x1820x287: v287182 = ADD v287180(0x20) v28717f
0x1840x287: RETURN v28717b v287182
----------------------------------

Begin block 0x185
prev = {}, next = {'0x19b', '0x197'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x185
0x186: v186(0x157) = CONST 
0x189: v189(0x4) = CONST 
0x18c: v18c = CALLDATASIZE 
0x18d: v18d = SUB v18c v189(0x4)
0x18e: v18e(0x60) = CONST 
0x191: v191 = LT v18d v18e(0x60)
0x192: v192 = ISZERO v191
0x193: v193(0x19b) = CONST 
0x196: JUMPI v193(0x19b) v192
----------------------------------

Begin block 0x197
prev = {'0x185'}, next = {}
----------------------------------
Block 0x197
0x197: v197(0x0) = CONST 
0x19a: REVERT v197(0x0) v197(0x0)
----------------------------------

Begin block 0x19b
prev = {'0x185'}, next = {'0x3af'}
----------------------------------
Block 0x19b
0x19d: v19d(0x1) = CONST 
0x19f: v19f(0x1) = CONST 
0x1a1: v1a1(0xa0) = CONST 
0x1a3: v1a3(0x10000000000000000000000000000000000000000) = SHL v1a1(0xa0) v19f(0x1)
0x1a4: v1a4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1a3(0x10000000000000000000000000000000000000000) v19d(0x1)
0x1a6: v1a6 = CALLDATALOAD v189(0x4)
0x1a8: v1a8 = AND v1a4(0xffffffffffffffffffffffffffffffffffffffff) v1a6
0x1aa: v1aa(0x20) = CONST 
0x1ad: v1ad = ADD v189(0x4) v1aa(0x20)
0x1ae: v1ae = CALLDATALOAD v1ad
0x1b1: v1b1 = AND v1a4(0xffffffffffffffffffffffffffffffffffffffff) v1ae
0x1b3: v1b3(0x40) = CONST 
0x1b5: v1b5 = ADD v1b3(0x40) v189(0x4)
0x1b6: v1b6 = CALLDATALOAD v1b5
0x1b7: v1b7(0x3af) = CONST 
0x1ba: JUMP v1b7(0x3af)
----------------------------------

Begin block 0x1bb
prev = {}, next = {'0x1d1', '0x1cd'}
----------------------------------
function balances(address)()
Block 0x1bb
0x1bc: v1bc(0x173) = CONST 
0x1bf: v1bf(0x4) = CONST 
0x1c2: v1c2 = CALLDATASIZE 
0x1c3: v1c3 = SUB v1c2 v1bf(0x4)
0x1c4: v1c4(0x20) = CONST 
0x1c7: v1c7 = LT v1c3 v1c4(0x20)
0x1c8: v1c8 = ISZERO v1c7
0x1c9: v1c9(0x1d1) = CONST 
0x1cc: JUMPI v1c9(0x1d1) v1c8
----------------------------------

Begin block 0x1cd
prev = {'0x1bb'}, next = {}
----------------------------------
Block 0x1cd
0x1cd: v1cd(0x0) = CONST 
0x1d0: REVERT v1cd(0x0) v1cd(0x0)
----------------------------------

Begin block 0x1d1
prev = {'0x1bb'}, next = {'0x482'}
----------------------------------
Block 0x1d1
0x1d3: v1d3 = CALLDATALOAD v1bf(0x4)
0x1d4: v1d4(0x1) = CONST 
0x1d6: v1d6(0x1) = CONST 
0x1d8: v1d8(0xa0) = CONST 
0x1da: v1da(0x10000000000000000000000000000000000000000) = SHL v1d8(0xa0) v1d6(0x1)
0x1db: v1db(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1da(0x10000000000000000000000000000000000000000) v1d4(0x1)
0x1dc: v1dc = AND v1db(0xffffffffffffffffffffffffffffffffffffffff) v1d3
0x1dd: v1dd(0x482) = CONST 
0x1e0: JUMP v1dd(0x482)
----------------------------------

Begin block 0x1e1
prev = {}, next = {'0x494'}
----------------------------------
function decimals()()
Block 0x1e1
0x1e2: v1e2(0x1e9) = CONST 
0x1e5: v1e5(0x494) = CONST 
0x1e8: JUMP v1e5(0x494)
----------------------------------

Begin block 0x1e9
prev = {'0x494'}, next = {}
----------------------------------
Block 0x1e9
0x1ea: v1ea(0x40) = CONST 
0x1ed: v1ed = MLOAD v1ea(0x40)
0x1ee: v1ee(0xff) = CONST 
0x1f2: v1f2 = AND v49a v1ee(0xff)
0x1f4: MSTORE v1ed v1f2
0x1f5: v1f5 = MLOAD v1ea(0x40)
0x1f9: v1f9 = SUB v1ed v1f5
0x1fa: v1fa(0x20) = CONST 
0x1fc: v1fc = ADD v1fa(0x20) v1f9
0x1fe: RETURN v1f5 v1fc
----------------------------------

Begin block 0x1ff
prev = {}, next = {'0x211', '0x215'}
----------------------------------
function allowed(address,address)()
Block 0x1ff
0x200: v200(0x173) = CONST 
0x203: v203(0x4) = CONST 
0x206: v206 = CALLDATASIZE 
0x207: v207 = SUB v206 v203(0x4)
0x208: v208(0x40) = CONST 
0x20b: v20b = LT v207 v208(0x40)
0x20c: v20c = ISZERO v20b
0x20d: v20d(0x215) = CONST 
0x210: JUMPI v20d(0x215) v20c
----------------------------------

Begin block 0x211
prev = {'0x1ff'}, next = {}
----------------------------------
Block 0x211
0x211: v211(0x0) = CONST 
0x214: REVERT v211(0x0) v211(0x0)
----------------------------------

Begin block 0x215
prev = {'0x1ff'}, next = {'0x49d'}
----------------------------------
Block 0x215
0x217: v217(0x1) = CONST 
0x219: v219(0x1) = CONST 
0x21b: v21b(0xa0) = CONST 
0x21d: v21d(0x10000000000000000000000000000000000000000) = SHL v21b(0xa0) v219(0x1)
0x21e: v21e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v21d(0x10000000000000000000000000000000000000000) v217(0x1)
0x220: v220 = CALLDATALOAD v203(0x4)
0x222: v222 = AND v21e(0xffffffffffffffffffffffffffffffffffffffff) v220
0x224: v224(0x20) = CONST 
0x226: v226 = ADD v224(0x20) v203(0x4)
0x227: v227 = CALLDATALOAD v226
0x228: v228 = AND v227 v21e(0xffffffffffffffffffffffffffffffffffffffff)
0x229: v229(0x49d) = CONST 
0x22c: JUMP v229(0x49d)
----------------------------------

Begin block 0x22d
prev = {}, next = {'0x23f', '0x243'}
----------------------------------
function balanceOf(address)()
Block 0x22d
0x22e: v22e(0x173) = CONST 
0x231: v231(0x4) = CONST 
0x234: v234 = CALLDATASIZE 
0x235: v235 = SUB v234 v231(0x4)
0x236: v236(0x20) = CONST 
0x239: v239 = LT v235 v236(0x20)
0x23a: v23a = ISZERO v239
0x23b: v23b(0x243) = CONST 
0x23e: JUMPI v23b(0x243) v23a
----------------------------------

Begin block 0x23f
prev = {'0x22d'}, next = {}
----------------------------------
Block 0x23f
0x23f: v23f(0x0) = CONST 
0x242: REVERT v23f(0x0) v23f(0x0)
----------------------------------

Begin block 0x243
prev = {'0x22d'}, next = {'0x4ba'}
----------------------------------
Block 0x243
0x245: v245 = CALLDATALOAD v231(0x4)
0x246: v246(0x1) = CONST 
0x248: v248(0x1) = CONST 
0x24a: v24a(0xa0) = CONST 
0x24c: v24c(0x10000000000000000000000000000000000000000) = SHL v24a(0xa0) v248(0x1)
0x24d: v24d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v24c(0x10000000000000000000000000000000000000000) v246(0x1)
0x24e: v24e = AND v24d(0xffffffffffffffffffffffffffffffffffffffff) v245
0x24f: v24f(0x4ba) = CONST 
0x252: JUMP v24f(0x4ba)
----------------------------------

Begin block 0x253
prev = {}, next = {'0xb60x253'}
----------------------------------
function symbol()()
Block 0x253
0x254: v254(0xb6) = CONST 
0x257: v257(0x4d5) = CONST 
0x25a: v25a_0, v25a_1 = CALLPRIVATE v257(0x4d5) v254(0xb6)
----------------------------------

Begin block 0x25b
prev = {}, next = {'0x271', '0x26d'}
----------------------------------
function transfer(address,uint256)()
Block 0x25b
0x25c: v25c(0x157) = CONST 
0x25f: v25f(0x4) = CONST 
0x262: v262 = CALLDATASIZE 
0x263: v263 = SUB v262 v25f(0x4)
0x264: v264(0x40) = CONST 
0x267: v267 = LT v263 v264(0x40)
0x268: v268 = ISZERO v267
0x269: v269(0x271) = CONST 
0x26c: JUMPI v269(0x271) v268
----------------------------------

Begin block 0x26d
prev = {'0x25b'}, next = {}
----------------------------------
Block 0x26d
0x26d: v26d(0x0) = CONST 
0x270: REVERT v26d(0x0) v26d(0x0)
----------------------------------

Begin block 0x271
prev = {'0x25b'}, next = {'0x530'}
----------------------------------
Block 0x271
0x273: v273(0x1) = CONST 
0x275: v275(0x1) = CONST 
0x277: v277(0xa0) = CONST 
0x279: v279(0x10000000000000000000000000000000000000000) = SHL v277(0xa0) v275(0x1)
0x27a: v27a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v279(0x10000000000000000000000000000000000000000) v273(0x1)
0x27c: v27c = CALLDATALOAD v25f(0x4)
0x27d: v27d = AND v27c v27a(0xffffffffffffffffffffffffffffffffffffffff)
0x27f: v27f(0x20) = CONST 
0x281: v281 = ADD v27f(0x20) v25f(0x4)
0x282: v282 = CALLDATALOAD v281
0x283: v283(0x530) = CONST 
0x286: JUMP v283(0x530)
----------------------------------

Begin block 0x287
prev = {}, next = {'0x29d', '0x299'}
----------------------------------
function allowance(address,address)()
Block 0x287
0x288: v288(0x173) = CONST 
0x28b: v28b(0x4) = CONST 
0x28e: v28e = CALLDATASIZE 
0x28f: v28f = SUB v28e v28b(0x4)
0x290: v290(0x40) = CONST 
0x293: v293 = LT v28f v290(0x40)
0x294: v294 = ISZERO v293
0x295: v295(0x29d) = CONST 
0x298: JUMPI v295(0x29d) v294
----------------------------------

Begin block 0x299
prev = {'0x287'}, next = {}
----------------------------------
Block 0x299
0x299: v299(0x0) = CONST 
0x29c: REVERT v299(0x0) v299(0x0)
----------------------------------

Begin block 0x29d
prev = {'0x287'}, next = {'0x5ba'}
----------------------------------
Block 0x29d
0x29f: v29f(0x1) = CONST 
0x2a1: v2a1(0x1) = CONST 
0x2a3: v2a3(0xa0) = CONST 
0x2a5: v2a5(0x10000000000000000000000000000000000000000) = SHL v2a3(0xa0) v2a1(0x1)
0x2a6: v2a6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2a5(0x10000000000000000000000000000000000000000) v29f(0x1)
0x2a8: v2a8 = CALLDATALOAD v28b(0x4)
0x2aa: v2aa = AND v2a6(0xffffffffffffffffffffffffffffffffffffffff) v2a8
0x2ac: v2ac(0x20) = CONST 
0x2ae: v2ae = ADD v2ac(0x20) v28b(0x4)
0x2af: v2af = CALLDATALOAD v2ae
0x2b0: v2b0 = AND v2af v2a6(0xffffffffffffffffffffffffffffffffffffffff)
0x2b1: v2b1(0x5ba) = CONST 
0x2b4: JUMP v2b1(0x5ba)
----------------------------------

Begin block 0x2b5
prev = {}, next = {'0x2f5', '0x33b0x2b5'}
----------------------------------
function 0x2b5(v2b5arg0)
Block 0x2b5
0x2b6: v2b6(0x3) = CONST 
0x2b9: v2b9 = SLOAD v2b6(0x3)
0x2ba: v2ba(0x40) = CONST 
0x2bd: v2bd = MLOAD v2ba(0x40)
0x2be: v2be(0x20) = CONST 
0x2c0: v2c0(0x2) = CONST 
0x2c2: v2c2(0x1) = CONST 
0x2c5: v2c5 = AND v2b9 v2c2(0x1)
0x2c6: v2c6 = ISZERO v2c5
0x2c7: v2c7(0x100) = CONST 
0x2ca: v2ca = MUL v2c7(0x100) v2c6
0x2cb: v2cb(0x0) = CONST 
0x2cd: v2cd(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v2cb(0x0)
0x2ce: v2ce = ADD v2cd(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v2ca
0x2d1: v2d1 = AND v2b9 v2ce
0x2d5: v2d5 = DIV v2d1 v2c0(0x2)
0x2d6: v2d6(0x1f) = CONST 
0x2d9: v2d9 = ADD v2d5 v2d6(0x1f)
0x2dc: v2dc = DIV v2d9 v2be(0x20)
0x2de: v2de = MUL v2be(0x20) v2dc
0x2e0: v2e0 = ADD v2bd v2de
0x2e2: v2e2 = ADD v2be(0x20) v2e0
0x2e5: MSTORE v2ba(0x40) v2e2
0x2e8: MSTORE v2bd v2d5
0x2ec: v2ec = ADD v2bd v2be(0x20)
0x2f0: v2f0 = ISZERO v2d5
0x2f1: v2f1(0x33b) = CONST 
0x2f4: JUMPI v2f1(0x33b) v2f0
----------------------------------

Begin block 0x2f5
prev = {'0x2b5'}, next = {'0x3100x2b5', '0x2fd'}
----------------------------------
Block 0x2f5
0x2f6: v2f6(0x1f) = CONST 
0x2f8: v2f8 = LT v2f6(0x1f) v2d5
0x2f9: v2f9(0x310) = CONST 
0x2fc: JUMPI v2f9(0x310) v2f8
----------------------------------

Begin block 0x2fd
prev = {'0x2f5'}, next = {'0x33b0x2b5'}
----------------------------------
Block 0x2fd
0x2fd: v2fd(0x100) = CONST 
0x302: v302 = SLOAD v2b6(0x3)
0x303: v303 = DIV v302 v2fd(0x100)
0x304: v304 = MUL v303 v2fd(0x100)
0x306: MSTORE v2ec v304
0x308: v308(0x20) = CONST 
0x30a: v30a = ADD v308(0x20) v2ec
0x30c: v30c(0x33b) = CONST 
0x30f: JUMP v30c(0x33b)
----------------------------------

Begin block 0x3100x2b5
prev = {'0x2f5'}, next = {'0x31e0x2b5'}
----------------------------------
Block 0x3100x2b5
0x3120x2b5: v2b5312 = ADD v2ec v2d5
0x3150x2b5: v2b5315(0x0) = CONST 
0x3170x2b5: MSTORE v2b5315(0x0) v2b6(0x3)
0x3180x2b5: v2b5318(0x20) = CONST 
0x31a0x2b5: v2b531a(0x0) = CONST 
0x31c0x2b5: v2b531c = SHA3 v2b531a(0x0) v2b5318(0x20)
----------------------------------

Begin block 0x3100x4d5
prev = {'0x515'}, next = {'0x31e0x4d5'}
----------------------------------
Block 0x3100x4d5
0x3120x4d5: v4d5312 = ADD v50c v4f5
0x3150x4d5: v4d5315(0x0) = CONST 
0x3170x4d5: MSTORE v4d5315(0x0) v4d6(0x5)
0x3180x4d5: v4d5318(0x20) = CONST 
0x31a0x4d5: v4d531a(0x0) = CONST 
0x31c0x4d5: v4d531c = SHA3 v4d531a(0x0) v4d5318(0x20)
----------------------------------

Begin block 0x31e0x2b5
prev = {'0x3100x2b5', '0x31e0x2b5'}, next = {'0x31e0x2b5', '0x3320x2b5'}
----------------------------------
Block 0x31e0x2b5
0x31e0x2b5_0x0: v31e2b5_0 = PHI v2ec v2b532a
0x31e0x2b5_0x1: v31e2b5_1 = PHI v2b5326 v2b531c
0x3200x2b5: v2b5320 = SLOAD v31e2b5_1
0x3220x2b5: MSTORE v31e2b5_0 v2b5320
0x3240x2b5: v2b5324(0x1) = CONST 
0x3260x2b5: v2b5326 = ADD v2b5324(0x1) v31e2b5_1
0x3280x2b5: v2b5328(0x20) = CONST 
0x32a0x2b5: v2b532a = ADD v2b5328(0x20) v31e2b5_0
0x32d0x2b5: v2b532d = GT v2b5312 v2b532a
0x32e0x2b5: v2b532e(0x31e) = CONST 
0x3310x2b5: JUMPI v2b532e(0x31e) v2b532d
----------------------------------

Begin block 0x31e0x4d5
prev = {'0x3100x4d5', '0x31e0x4d5'}, next = {'0x31e0x4d5', '0x3320x4d5'}
----------------------------------
Block 0x31e0x4d5
0x31e0x4d5_0x0: v31e4d5_0 = PHI v50c v4d532a
0x31e0x4d5_0x1: v31e4d5_1 = PHI v4d5326 v4d531c
0x3200x4d5: v4d5320 = SLOAD v31e4d5_1
0x3220x4d5: MSTORE v31e4d5_0 v4d5320
0x3240x4d5: v4d5324(0x1) = CONST 
0x3260x4d5: v4d5326 = ADD v4d5324(0x1) v31e4d5_1
0x3280x4d5: v4d5328(0x20) = CONST 
0x32a0x4d5: v4d532a = ADD v4d5328(0x20) v31e4d5_0
0x32d0x4d5: v4d532d = GT v4d5312 v4d532a
0x32e0x4d5: v4d532e(0x31e) = CONST 
0x3310x4d5: JUMPI v4d532e(0x31e) v4d532d
----------------------------------

Begin block 0x3320x2b5
prev = {'0x31e0x2b5'}, next = {'0x33b0x2b5'}
----------------------------------
Block 0x3320x2b5
0x3340x2b5: v2b5334 = SUB v2b532a v2b5312
0x3350x2b5: v2b5335(0x1f) = CONST 
0x3370x2b5: v2b5337 = AND v2b5335(0x1f) v2b5334
0x3390x2b5: v2b5339 = ADD v2b5312 v2b5337
----------------------------------

Begin block 0x3320x4d5
prev = {'0x31e0x4d5'}, next = {'0x33b0x4d5'}
----------------------------------
Block 0x3320x4d5
0x3340x4d5: v4d5334 = SUB v4d532a v4d5312
0x3350x4d5: v4d5335(0x1f) = CONST 
0x3370x4d5: v4d5337 = AND v4d5335(0x1f) v4d5334
0x3390x4d5: v4d5339 = ADD v4d5312 v4d5337
----------------------------------

Begin block 0x33b0x2b5
prev = {'0x3320x2b5', '0x2b5', '0x2fd'}, next = {}
----------------------------------
Block 0x33b0x2b5
0x3420x2b5: RETURNPRIVATE v2b5arg0 v2bd v2b5arg0
----------------------------------

Begin block 0x33b0x4d5
prev = {'0x4d5', '0x51d', '0x3320x4d5'}, next = {}
----------------------------------
Block 0x33b0x4d5
0x3420x4d5: RETURNPRIVATE v4d5arg0 v4dd v4d5arg0
----------------------------------

Begin block 0x343
prev = {'0x141'}, next = {'0x1570x12b'}
----------------------------------
Block 0x343
0x344: v344 = CALLER 
0x345: v345(0x0) = CONST 
0x349: MSTORE v345(0x0) v344
0x34a: v34a(0x2) = CONST 
0x34c: v34c(0x20) = CONST 
0x350: MSTORE v34c(0x20) v34a(0x2)
0x351: v351(0x40) = CONST 
0x355: v355 = SHA3 v345(0x0) v351(0x40)
0x356: v356(0x1) = CONST 
0x358: v358(0x1) = CONST 
0x35a: v35a(0xa0) = CONST 
0x35c: v35c(0x10000000000000000000000000000000000000000) = SHL v35a(0xa0) v358(0x1)
0x35d: v35d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v35c(0x10000000000000000000000000000000000000000) v356(0x1)
0x35f: v35f = AND v14d v35d(0xffffffffffffffffffffffffffffffffffffffff)
0x362: MSTORE v345(0x0) v35f
0x365: MSTORE v34c(0x20) v355
0x368: v368 = SHA3 v345(0x0) v351(0x40)
0x36b: SSTORE v368 v152
0x36d: v36d = MLOAD v351(0x40)
0x370: MSTORE v36d v152
0x372: v372 = MLOAD v351(0x40)
0x379: v379(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0x39d: v39d = SUB v36d v372
0x39e: v39e = ADD v39d v34c(0x20)
0x3a0: LOG3 v372 v39e v379(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) v344 v35f
0x3a2: v3a2(0x1) = CONST 
0x3a8: JUMP v12c(0x157)
----------------------------------

Begin block 0x3a9
prev = {'0x16b'}, next = {'0x1730x16b'}
----------------------------------
Block 0x3a9
0x3aa: v3aa(0x0) = CONST 
0x3ac: v3ac = SLOAD v3aa(0x0)
0x3ae: JUMP v16c(0x173)
----------------------------------

Begin block 0x3af
prev = {'0x19b'}, next = {'0x3f0', '0x3eb'}
----------------------------------
Block 0x3af
0x3b0: v3b0(0x1) = CONST 
0x3b2: v3b2(0x1) = CONST 
0x3b4: v3b4(0xa0) = CONST 
0x3b6: v3b6(0x10000000000000000000000000000000000000000) = SHL v3b4(0xa0) v3b2(0x1)
0x3b7: v3b7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3b6(0x10000000000000000000000000000000000000000) v3b0(0x1)
0x3b9: v3b9 = AND v1a8 v3b7(0xffffffffffffffffffffffffffffffffffffffff)
0x3ba: v3ba(0x0) = CONST 
0x3be: MSTORE v3ba(0x0) v3b9
0x3bf: v3bf(0x2) = CONST 
0x3c1: v3c1(0x20) = CONST 
0x3c5: MSTORE v3c1(0x20) v3bf(0x2)
0x3c6: v3c6(0x40) = CONST 
0x3ca: v3ca = SHA3 v3ba(0x0) v3c6(0x40)
0x3cb: v3cb = CALLER 
0x3cd: MSTORE v3ba(0x0) v3cb
0x3cf: MSTORE v3c1(0x20) v3ca
0x3d2: v3d2 = SHA3 v3ba(0x0) v3c6(0x40)
0x3d3: v3d3 = SLOAD v3d2
0x3d6: MSTORE v3ba(0x0) v3b9
0x3d7: v3d7(0x1) = CONST 
0x3db: MSTORE v3c1(0x20) v3d7(0x1)
0x3dd: v3dd = SHA3 v3ba(0x0) v3c6(0x40)
0x3de: v3de = SLOAD v3dd
0x3e3: v3e3 = GT v1b6 v3de
0x3e5: v3e5 = ISZERO v3e3
0x3e7: v3e7(0x3f0) = CONST 
0x3ea: JUMPI v3e7(0x3f0) v3e3
----------------------------------

Begin block 0x3eb
prev = {'0x3af'}, next = {'0x3f0'}
----------------------------------
Block 0x3eb
0x3ee: v3ee = LT v3d3 v1b6
0x3ef: v3ef = ISZERO v3ee
----------------------------------

Begin block 0x3f0
prev = {'0x3af', '0x3eb'}, next = {'0x3f9', '0x3f5'}
----------------------------------
Block 0x3f0
0x3f0_0x0: v3f0_0 = PHI v3e5 v3ef
0x3f1: v3f1(0x3f9) = CONST 
0x3f4: JUMPI v3f1(0x3f9) v3f0_0
----------------------------------

Begin block 0x3f5
prev = {'0x3f0'}, next = {}
----------------------------------
Block 0x3f5
0x3f5: v3f5(0x0) = CONST 
0x3f8: REVERT v3f5(0x0) v3f5(0x0)
----------------------------------

Begin block 0x3f9
prev = {'0x3f0'}, next = {'0x1570x185'}
----------------------------------
Block 0x3f9
0x3fa: v3fa(0x1) = CONST 
0x3fc: v3fc(0x1) = CONST 
0x3fe: v3fe(0xa0) = CONST 
0x400: v400(0x10000000000000000000000000000000000000000) = SHL v3fe(0xa0) v3fc(0x1)
0x401: v401(0xffffffffffffffffffffffffffffffffffffffff) = SUB v400(0x10000000000000000000000000000000000000000) v3fa(0x1)
0x404: v404 = AND v1b1 v401(0xffffffffffffffffffffffffffffffffffffffff)
0x405: v405(0x0) = CONST 
0x409: MSTORE v405(0x0) v404
0x40a: v40a(0x1) = CONST 
0x40c: v40c(0x20) = CONST 
0x410: MSTORE v40c(0x20) v40a(0x1)
0x411: v411(0x40) = CONST 
0x415: v415 = SHA3 v405(0x0) v411(0x40)
0x417: v417 = SLOAD v415
0x419: v419 = ADD v1b6 v417
0x41b: SSTORE v415 v419
0x41e: v41e = AND v1a8 v401(0xffffffffffffffffffffffffffffffffffffffff)
0x421: MSTORE v405(0x0) v41e
0x424: v424 = SHA3 v405(0x0) v411(0x40)
0x426: v426 = SLOAD v424
0x429: v429 = SUB v426 v1b6
0x42b: SSTORE v424 v429
0x42c: v42c(0x2) = CONST 
0x42f: MSTORE v40c(0x20) v42c(0x2)
0x432: v432 = SHA3 v405(0x0) v411(0x40)
0x433: v433 = CALLER 
0x435: MSTORE v405(0x0) v433
0x437: MSTORE v40c(0x20) v432
0x43b: v43b = SHA3 v405(0x0) v411(0x40)
0x43d: v43d = SLOAD v43b
0x440: v440 = SUB v43d v1b6
0x442: SSTORE v43b v440
0x444: v444 = MLOAD v411(0x40)
0x447: MSTORE v444 v1b6
0x449: v449 = MLOAD v411(0x40)
0x44e: v44e(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x472: v472 = SUB v444 v449
0x475: v475 = ADD v40c(0x20) v472
0x477: LOG3 v449 v475 v44e(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v41e v404
0x479: v479(0x1) = CONST 
0x481: JUMP v186(0x157)
----------------------------------

Begin block 0x482
prev = {'0x1d1'}, next = {'0x1730x1bb'}
----------------------------------
Block 0x482
0x483: v483(0x1) = CONST 
0x485: v485(0x20) = CONST 
0x487: MSTORE v485(0x20) v483(0x1)
0x488: v488(0x0) = CONST 
0x48c: MSTORE v488(0x0) v1dc
0x48d: v48d(0x40) = CONST 
0x490: v490 = SHA3 v488(0x0) v48d(0x40)
0x491: v491 = SLOAD v490
0x493: JUMP v1bc(0x173)
----------------------------------

Begin block 0x494
prev = {'0x1e1'}, next = {'0x1e9'}
----------------------------------
Block 0x494
0x495: v495(0x4) = CONST 
0x497: v497 = SLOAD v495(0x4)
0x498: v498(0xff) = CONST 
0x49a: v49a = AND v498(0xff) v497
0x49c: JUMP v1e2(0x1e9)
----------------------------------

Begin block 0x49d
prev = {'0x215'}, next = {'0x1730x1ff'}
----------------------------------
Block 0x49d
0x49e: v49e(0x2) = CONST 
0x4a0: v4a0(0x20) = CONST 
0x4a4: MSTORE v4a0(0x20) v49e(0x2)
0x4a5: v4a5(0x0) = CONST 
0x4a9: MSTORE v4a5(0x0) v222
0x4aa: v4aa(0x40) = CONST 
0x4ae: v4ae = SHA3 v4a5(0x0) v4aa(0x40)
0x4b1: MSTORE v4a0(0x20) v4ae
0x4b4: MSTORE v4a5(0x0) v228
0x4b6: v4b6 = SHA3 v4a5(0x0) v4aa(0x40)
0x4b7: v4b7 = SLOAD v4b6
0x4b9: JUMP v200(0x173)
----------------------------------

Begin block 0x4ba
prev = {'0x243'}, next = {'0x1730x22d'}
----------------------------------
Block 0x4ba
0x4bb: v4bb(0x1) = CONST 
0x4bd: v4bd(0x1) = CONST 
0x4bf: v4bf(0xa0) = CONST 
0x4c1: v4c1(0x10000000000000000000000000000000000000000) = SHL v4bf(0xa0) v4bd(0x1)
0x4c2: v4c2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4c1(0x10000000000000000000000000000000000000000) v4bb(0x1)
0x4c3: v4c3 = AND v4c2(0xffffffffffffffffffffffffffffffffffffffff) v24e
0x4c4: v4c4(0x0) = CONST 
0x4c8: MSTORE v4c4(0x0) v4c3
0x4c9: v4c9(0x1) = CONST 
0x4cb: v4cb(0x20) = CONST 
0x4cd: MSTORE v4cb(0x20) v4c9(0x1)
0x4ce: v4ce(0x40) = CONST 
0x4d1: v4d1 = SHA3 v4c4(0x0) v4ce(0x40)
0x4d2: v4d2 = SLOAD v4d1
0x4d4: JUMP v22e(0x173)
----------------------------------

Begin block 0x4d5
prev = {}, next = {'0x33b0x4d5', '0x515'}
----------------------------------
function 0x4d5(v4d5arg0)
Block 0x4d5
0x4d6: v4d6(0x5) = CONST 
0x4d9: v4d9 = SLOAD v4d6(0x5)
0x4da: v4da(0x40) = CONST 
0x4dd: v4dd = MLOAD v4da(0x40)
0x4de: v4de(0x20) = CONST 
0x4e0: v4e0(0x2) = CONST 
0x4e2: v4e2(0x1) = CONST 
0x4e5: v4e5 = AND v4d9 v4e2(0x1)
0x4e6: v4e6 = ISZERO v4e5
0x4e7: v4e7(0x100) = CONST 
0x4ea: v4ea = MUL v4e7(0x100) v4e6
0x4eb: v4eb(0x0) = CONST 
0x4ed: v4ed(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v4eb(0x0)
0x4ee: v4ee = ADD v4ed(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v4ea
0x4f1: v4f1 = AND v4d9 v4ee
0x4f5: v4f5 = DIV v4f1 v4e0(0x2)
0x4f6: v4f6(0x1f) = CONST 
0x4f9: v4f9 = ADD v4f5 v4f6(0x1f)
0x4fc: v4fc = DIV v4f9 v4de(0x20)
0x4fe: v4fe = MUL v4de(0x20) v4fc
0x500: v500 = ADD v4dd v4fe
0x502: v502 = ADD v4de(0x20) v500
0x505: MSTORE v4da(0x40) v502
0x508: MSTORE v4dd v4f5
0x50c: v50c = ADD v4dd v4de(0x20)
0x510: v510 = ISZERO v4f5
0x511: v511(0x33b) = CONST 
0x514: JUMPI v511(0x33b) v510
----------------------------------

Begin block 0x515
prev = {'0x4d5'}, next = {'0x3100x4d5', '0x51d'}
----------------------------------
Block 0x515
0x516: v516(0x1f) = CONST 
0x518: v518 = LT v516(0x1f) v4f5
0x519: v519(0x310) = CONST 
0x51c: JUMPI v519(0x310) v518
----------------------------------

Begin block 0x51d
prev = {'0x515'}, next = {'0x33b0x4d5'}
----------------------------------
Block 0x51d
0x51d: v51d(0x100) = CONST 
0x522: v522 = SLOAD v4d6(0x5)
0x523: v523 = DIV v522 v51d(0x100)
0x524: v524 = MUL v523 v51d(0x100)
0x526: MSTORE v50c v524
0x528: v528(0x20) = CONST 
0x52a: v52a = ADD v528(0x20) v50c
0x52c: v52c(0x33b) = CONST 
0x52f: JUMP v52c(0x33b)
----------------------------------

Begin block 0x530
prev = {'0x271'}, next = {'0x54c', '0x548'}
----------------------------------
Block 0x530
0x531: v531 = CALLER 
0x532: v532(0x0) = CONST 
0x536: MSTORE v532(0x0) v531
0x537: v537(0x1) = CONST 
0x539: v539(0x20) = CONST 
0x53b: MSTORE v539(0x20) v537(0x1)
0x53c: v53c(0x40) = CONST 
0x53f: v53f = SHA3 v532(0x0) v53c(0x40)
0x540: v540 = SLOAD v53f
0x542: v542 = GT v282 v540
0x543: v543 = ISZERO v542
0x544: v544(0x54c) = CONST 
0x547: JUMPI v544(0x54c) v543
----------------------------------

Begin block 0x548
prev = {'0x530'}, next = {}
----------------------------------
Block 0x548
0x548: v548(0x0) = CONST 
0x54b: REVERT v548(0x0) v548(0x0)
----------------------------------

Begin block 0x54c
prev = {'0x530'}, next = {'0x1570x25b'}
----------------------------------
Block 0x54c
0x54d: v54d = CALLER 
0x54e: v54e(0x0) = CONST 
0x552: MSTORE v54e(0x0) v54d
0x553: v553(0x1) = CONST 
0x555: v555(0x20) = CONST 
0x559: MSTORE v555(0x20) v553(0x1)
0x55a: v55a(0x40) = CONST 
0x55e: v55e = SHA3 v54e(0x0) v55a(0x40)
0x560: v560 = SLOAD v55e
0x563: v563 = SUB v560 v282
0x565: SSTORE v55e v563
0x566: v566(0x1) = CONST 
0x568: v568(0x1) = CONST 
0x56a: v56a(0xa0) = CONST 
0x56c: v56c(0x10000000000000000000000000000000000000000) = SHL v56a(0xa0) v568(0x1)
0x56d: v56d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v56c(0x10000000000000000000000000000000000000000) v566(0x1)
0x56f: v56f = AND v27d v56d(0xffffffffffffffffffffffffffffffffffffffff)
0x572: MSTORE v54e(0x0) v56f
0x576: v576 = SHA3 v54e(0x0) v55a(0x40)
0x578: v578 = SLOAD v576
0x57a: v57a = ADD v282 v578
0x57c: SSTORE v576 v57a
0x57e: v57e = MLOAD v55a(0x40)
0x581: MSTORE v57e v282
0x583: v583 = MLOAD v55a(0x40)
0x587: v587(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x5ac: v5ac = SUB v57e v583
0x5af: v5af = ADD v555(0x20) v5ac
0x5b1: LOG3 v583 v5af v587(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v54d v56f
0x5b3: v5b3(0x1) = CONST 
0x5b9: JUMP v25c(0x157)
----------------------------------

Begin block 0x5ba
prev = {'0x29d'}, next = {'0x1730x287'}
----------------------------------
Block 0x5ba
0x5bb: v5bb(0x1) = CONST 
0x5bd: v5bd(0x1) = CONST 
0x5bf: v5bf(0xa0) = CONST 
0x5c1: v5c1(0x10000000000000000000000000000000000000000) = SHL v5bf(0xa0) v5bd(0x1)
0x5c2: v5c2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5c1(0x10000000000000000000000000000000000000000) v5bb(0x1)
0x5c5: v5c5 = AND v5c2(0xffffffffffffffffffffffffffffffffffffffff) v2aa
0x5c6: v5c6(0x0) = CONST 
0x5ca: MSTORE v5c6(0x0) v5c5
0x5cb: v5cb(0x2) = CONST 
0x5cd: v5cd(0x20) = CONST 
0x5d1: MSTORE v5cd(0x20) v5cb(0x2)
0x5d2: v5d2(0x40) = CONST 
0x5d6: v5d6 = SHA3 v5c6(0x0) v5d2(0x40)
0x5da: v5da = AND v5c2(0xffffffffffffffffffffffffffffffffffffffff) v2b0
0x5dc: MSTORE v5c6(0x0) v5da
0x5e0: MSTORE v5cd(0x20) v5d6
0x5e1: v5e1 = SHA3 v5c6(0x0) v5d2(0x40)
0x5e2: v5e2 = SLOAD v5e1
0x5e4: JUMP v288(0x173)
----------------------------------

Begin block 0x632
prev = {'0x9e', '0x10'}, next = {'0xa90x0'}
----------------------------------
Block 0x632
0x633: v633(0xa9) = CONST 
0x634: CALLPRIVATE v633(0xa9)
----------------------------------

Begin block 0x635
prev = {'0x71'}, next = {}
----------------------------------
Block 0x635
0x636: v636(0xae) = CONST 
0x637: CALLPRIVATE v636(0xae)
----------------------------------

Begin block 0x638
prev = {'0x7d'}, next = {}
----------------------------------
Block 0x638
0x639: v639(0x12b) = CONST 
0x63a: CALLPRIVATE v639(0x12b)
----------------------------------

Begin block 0x63b
prev = {'0x88'}, next = {}
----------------------------------
Block 0x63b
0x63c: v63c(0x16b) = CONST 
0x63d: CALLPRIVATE v63c(0x16b)
----------------------------------

Begin block 0x63e
prev = {'0x93'}, next = {}
----------------------------------
Block 0x63e
0x63f: v63f(0x185) = CONST 
0x640: CALLPRIVATE v63f(0x185)
----------------------------------

Begin block 0x641
prev = {'0x9e'}, next = {}
----------------------------------
Block 0x641
0x642: v642(0x1bb) = CONST 
0x643: CALLPRIVATE v642(0x1bb)
----------------------------------

Begin block 0x644
prev = {'0x2b'}, next = {}
----------------------------------
Block 0x644
0x645: v645(0x1e1) = CONST 
0x646: CALLPRIVATE v645(0x1e1)
----------------------------------

Begin block 0x647
prev = {'0x36'}, next = {}
----------------------------------
Block 0x647
0x648: v648(0x1ff) = CONST 
0x649: CALLPRIVATE v648(0x1ff)
----------------------------------

Begin block 0x64a
prev = {'0x41'}, next = {}
----------------------------------
Block 0x64a
0x64b: v64b(0x22d) = CONST 
0x64c: CALLPRIVATE v64b(0x22d)
----------------------------------

Begin block 0x64d
prev = {'0x4c'}, next = {}
----------------------------------
Block 0x64d
0x64e: v64e(0x253) = CONST 
0x64f: CALLPRIVATE v64e(0x253)
----------------------------------

Begin block 0x650
prev = {'0x57'}, next = {}
----------------------------------
Block 0x650
0x651: v651(0x25b) = CONST 
0x652: CALLPRIVATE v651(0x25b)
----------------------------------

Begin block 0x653
prev = {'0x62'}, next = {}
----------------------------------
Block 0x653
0x654: v654(0x287) = CONST 
0x655: CALLPRIVATE v654(0x287)
----------------------------------
