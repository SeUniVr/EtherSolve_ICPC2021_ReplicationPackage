
Begin block 0x0
prev = {}, next = {'0xc', '0x10'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x596', '0x1a'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x590: v590(0x596) = CONST 
0x591: JUMPI v590(0x596) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x599', '0x2a'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x23de29) = CONST 
0x25: v25 = EQ v21(0x23de29) v1f
0x592: v592(0x599) = CONST 
0x593: JUMPI v592(0x599) v25
----------------------------------

Begin block 0x2a
prev = {'0x1a'}, next = {'0x59c', '0x596'}
----------------------------------
Block 0x2a
0x2b: v2b(0xcd865ec) = CONST 
0x30: v30 = EQ v2b(0xcd865ec) v1f
0x594: v594(0x59c) = CONST 
0x595: JUMPI v594(0x59c) v30
----------------------------------

Begin block 0x35
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x35
0x36: v36(0x0) = CONST 
0x39: REVERT v36(0x0) v36(0x0)
----------------------------------

Begin block 0x3a
prev = {}, next = {'0x50', '0x4c'}
----------------------------------
function tokensReceived(address,address,address,uint256,bytes,bytes)()
Block 0x3a
0x3b: v3b(0x124) = CONST 
0x3e: v3e(0x4) = CONST 
0x41: v41 = CALLDATASIZE 
0x42: v42 = SUB v41 v3e(0x4)
0x43: v43(0xc0) = CONST 
0x46: v46 = LT v42 v43(0xc0)
0x47: v47 = ISZERO v46
0x48: v48(0x50) = CONST 
0x4b: JUMPI v48(0x50) v47
----------------------------------

Begin block 0x4c
prev = {'0x3a'}, next = {}
----------------------------------
Block 0x4c
0x4c: v4c(0x0) = CONST 
0x4f: REVERT v4c(0x0) v4c(0x0)
----------------------------------

Begin block 0x50
prev = {'0x3a'}, next = {'0x93', '0x8f'}
----------------------------------
Block 0x50
0x51: v51(0x1) = CONST 
0x53: v53(0x1) = CONST 
0x55: v55(0xa0) = CONST 
0x57: v57(0x10000000000000000000000000000000000000000) = SHL v55(0xa0) v53(0x1)
0x58: v58(0xffffffffffffffffffffffffffffffffffffffff) = SUB v57(0x10000000000000000000000000000000000000000) v51(0x1)
0x5a: v5a = CALLDATALOAD v3e(0x4)
0x5c: v5c = AND v58(0xffffffffffffffffffffffffffffffffffffffff) v5a
0x5e: v5e(0x20) = CONST 
0x61: v61 = ADD v3e(0x4) v5e(0x20)
0x62: v62 = CALLDATALOAD v61
0x64: v64 = AND v58(0xffffffffffffffffffffffffffffffffffffffff) v62
0x66: v66(0x40) = CONST 
0x69: v69 = ADD v3e(0x4) v66(0x40)
0x6a: v6a = CALLDATALOAD v69
0x6d: v6d = AND v58(0xffffffffffffffffffffffffffffffffffffffff) v6a
0x6f: v6f(0x60) = CONST 
0x72: v72 = ADD v3e(0x4) v6f(0x60)
0x73: v73 = CALLDATALOAD v72
0x77: v77 = ADD v3e(0x4) v42
0x79: v79(0xa0) = CONST 
0x7c: v7c = ADD v3e(0x4) v79(0xa0)
0x7d: v7d(0x80) = CONST 
0x80: v80 = ADD v3e(0x4) v7d(0x80)
0x81: v81 = CALLDATALOAD v80
0x82: v82(0x100000000) = CONST 
0x89: v89 = GT v81 v82(0x100000000)
0x8a: v8a = ISZERO v89
0x8b: v8b(0x93) = CONST 
0x8e: JUMPI v8b(0x93) v8a
----------------------------------

Begin block 0x8f
prev = {'0x50'}, next = {}
----------------------------------
Block 0x8f
0x8f: v8f(0x0) = CONST 
0x92: REVERT v8f(0x0) v8f(0x0)
----------------------------------

Begin block 0x93
prev = {'0x50'}, next = {'0xa1', '0xa5'}
----------------------------------
Block 0x93
0x95: v95 = ADD v3e(0x4) v81
0x97: v97(0x20) = CONST 
0x9a: v9a = ADD v95 v97(0x20)
0x9b: v9b = GT v9a v77
0x9c: v9c = ISZERO v9b
0x9d: v9d(0xa5) = CONST 
0xa0: JUMPI v9d(0xa5) v9c
----------------------------------

Begin block 0xa1
prev = {'0x93'}, next = {}
----------------------------------
Block 0xa1
0xa1: va1(0x0) = CONST 
0xa4: REVERT va1(0x0) va1(0x0)
----------------------------------

Begin block 0xa5
prev = {'0x93'}, next = {'0xc3', '0xc7'}
----------------------------------
Block 0xa5
0xa7: va7 = CALLDATALOAD v95
0xa9: va9(0x20) = CONST 
0xab: vab = ADD va9(0x20) v95
0xae: vae(0x1) = CONST 
0xb1: vb1 = MUL va7 vae(0x1)
0xb3: vb3 = ADD vab vb1
0xb4: vb4 = GT vb3 v77
0xb5: vb5(0x100000000) = CONST 
0xbc: vbc = GT va7 vb5(0x100000000)
0xbd: vbd = OR vbc vb4
0xbe: vbe = ISZERO vbd
0xbf: vbf(0xc7) = CONST 
0xc2: JUMPI vbf(0xc7) vbe
----------------------------------

Begin block 0xc3
prev = {'0xa5'}, next = {}
----------------------------------
Block 0xc3
0xc3: vc3(0x0) = CONST 
0xc6: REVERT vc3(0x0) vc3(0x0)
----------------------------------

Begin block 0xc7
prev = {'0xa5'}, next = {'0xe1', '0xe5'}
----------------------------------
Block 0xc7
0xce: vce(0x20) = CONST 
0xd1: vd1 = ADD v7c vce(0x20)
0xd3: vd3 = CALLDATALOAD v7c
0xd4: vd4(0x100000000) = CONST 
0xdb: vdb = GT vd3 vd4(0x100000000)
0xdc: vdc = ISZERO vdb
0xdd: vdd(0xe5) = CONST 
0xe0: JUMPI vdd(0xe5) vdc
----------------------------------

Begin block 0xe1
prev = {'0xc7'}, next = {}
----------------------------------
Block 0xe1
0xe1: ve1(0x0) = CONST 
0xe4: REVERT ve1(0x0) ve1(0x0)
----------------------------------

Begin block 0xe5
prev = {'0xc7'}, next = {'0xf7', '0xf3'}
----------------------------------
Block 0xe5
0xe7: ve7 = ADD v3e(0x4) vd3
0xe9: ve9(0x20) = CONST 
0xec: vec = ADD ve7 ve9(0x20)
0xed: ved = GT vec v77
0xee: vee = ISZERO ved
0xef: vef(0xf7) = CONST 
0xf2: JUMPI vef(0xf7) vee
----------------------------------

Begin block 0xf3
prev = {'0xe5'}, next = {}
----------------------------------
Block 0xf3
0xf3: vf3(0x0) = CONST 
0xf6: REVERT vf3(0x0) vf3(0x0)
----------------------------------

Begin block 0xf7
prev = {'0xe5'}, next = {'0x119', '0x115'}
----------------------------------
Block 0xf7
0xf9: vf9 = CALLDATALOAD ve7
0xfb: vfb(0x20) = CONST 
0xfd: vfd = ADD vfb(0x20) ve7
0x100: v100(0x1) = CONST 
0x103: v103 = MUL vf9 v100(0x1)
0x105: v105 = ADD vfd v103
0x106: v106 = GT v105 v77
0x107: v107(0x100000000) = CONST 
0x10e: v10e = GT vf9 v107(0x100000000)
0x10f: v10f = OR v10e v106
0x110: v110 = ISZERO v10f
0x111: v111(0x119) = CONST 
0x114: JUMPI v111(0x119) v110
----------------------------------

Begin block 0x115
prev = {'0xf7'}, next = {}
----------------------------------
Block 0x115
0x115: v115(0x0) = CONST 
0x118: REVERT v115(0x0) v115(0x0)
----------------------------------

Begin block 0x119
prev = {'0xf7'}, next = {'0x14c'}
----------------------------------
Block 0x119
0x120: v120(0x14c) = CONST 
0x123: JUMP v120(0x14c)
----------------------------------

Begin block 0x1240x3a
prev = {'0x18e'}, next = {}
----------------------------------
Block 0x1240x3a
0x1250x3a: STOP 
----------------------------------

Begin block 0x1240x126
prev = {'0x283'}, next = {}
----------------------------------
Block 0x1240x126
0x1250x126: STOP 
----------------------------------

Begin block 0x126
prev = {}, next = {'0x138', '0x13c'}
----------------------------------
function recover(address)()
Block 0x126
0x127: v127(0x124) = CONST 
0x12a: v12a(0x4) = CONST 
0x12d: v12d = CALLDATASIZE 
0x12e: v12e = SUB v12d v12a(0x4)
0x12f: v12f(0x20) = CONST 
0x132: v132 = LT v12e v12f(0x20)
0x133: v133 = ISZERO v132
0x134: v134(0x13c) = CONST 
0x137: JUMPI v134(0x13c) v133
----------------------------------

Begin block 0x138
prev = {'0x126'}, next = {}
----------------------------------
Block 0x138
0x138: v138(0x0) = CONST 
0x13b: REVERT v138(0x0) v138(0x0)
----------------------------------

Begin block 0x13c
prev = {'0x126'}, next = {'0x198'}
----------------------------------
Block 0x13c
0x13e: v13e = CALLDATALOAD v12a(0x4)
0x13f: v13f(0x1) = CONST 
0x141: v141(0x1) = CONST 
0x143: v143(0xa0) = CONST 
0x145: v145(0x10000000000000000000000000000000000000000) = SHL v143(0xa0) v141(0x1)
0x146: v146(0xffffffffffffffffffffffffffffffffffffffff) = SUB v145(0x10000000000000000000000000000000000000000) v13f(0x1)
0x147: v147 = AND v146(0xffffffffffffffffffffffffffffffffffffffff) v13e
0x148: v148(0x198) = CONST 
0x14b: JUMP v148(0x198)
----------------------------------

Begin block 0x14c
prev = {'0x119'}, next = {'0x28a'}
----------------------------------
Block 0x14c
0x14d: v14d(0x18e) = CONST 
0x150: v150 = CALLER 
0x157: v157(0x1f) = CONST 
0x159: v159 = ADD v157(0x1f) va7
0x15a: v15a(0x20) = CONST 
0x15e: v15e = DIV v159 v15a(0x20)
0x15f: v15f = MUL v15e v15a(0x20)
0x160: v160(0x20) = CONST 
0x162: v162 = ADD v160(0x20) v15f
0x163: v163(0x40) = CONST 
0x165: v165 = MLOAD v163(0x40)
0x168: v168 = ADD v165 v162
0x169: v169(0x40) = CONST 
0x16b: MSTORE v169(0x40) v168
0x173: MSTORE v165 va7
0x174: v174(0x20) = CONST 
0x176: v176 = ADD v174(0x20) v165
0x17c: CALLDATACOPY v176 vab va7
0x17d: v17d(0x0) = CONST 
0x180: v180 = ADD v176 va7
0x184: MSTORE v180 v17d(0x0)
0x186: v186(0x28a) = CONST 
0x18d: JUMP v186(0x28a)
----------------------------------

Begin block 0x18e
prev = {'0x533'}, next = {'0x1240x3a'}
----------------------------------
Block 0x18e
0x197: JUMP v3b(0x124)
----------------------------------

Begin block 0x198
prev = {'0x13c'}, next = {'0x1e9', '0x1e5'}
----------------------------------
Block 0x198
0x199: v199(0x40) = CONST 
0x19c: v19c = MLOAD v199(0x40)
0x19d: v19d(0x70a08231) = CONST 
0x1a2: v1a2(0xe0) = CONST 
0x1a4: v1a4(0x70a0823100000000000000000000000000000000000000000000000000000000) = SHL v1a2(0xe0) v19d(0x70a08231)
0x1a6: MSTORE v19c v1a4(0x70a0823100000000000000000000000000000000000000000000000000000000)
0x1a7: v1a7 = ADDRESS 
0x1a8: v1a8(0x4) = CONST 
0x1ab: v1ab = ADD v19c v1a8(0x4)
0x1ac: MSTORE v1ab v1a7
0x1ae: v1ae = MLOAD v199(0x40)
0x1af: v1af(0x1) = CONST 
0x1b1: v1b1(0x1) = CONST 
0x1b3: v1b3(0xa0) = CONST 
0x1b5: v1b5(0x10000000000000000000000000000000000000000) = SHL v1b3(0xa0) v1b1(0x1)
0x1b6: v1b6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1b5(0x10000000000000000000000000000000000000000) v1af(0x1)
0x1b8: v1b8 = AND v147 v1b6(0xffffffffffffffffffffffffffffffffffffffff)
0x1ba: v1ba(0x9bd9bbc6) = CONST 
0x1c0: v1c0 = CALLER 
0x1c4: v1c4(0x70a08231) = CONST 
0x1ca: v1ca(0x24) = CONST 
0x1ce: v1ce = ADD v19c v1ca(0x24)
0x1d0: v1d0(0x20) = CONST 
0x1d8: v1d8 = SUB v19c v1ae
0x1d9: v1d9 = ADD v1d8 v1ca(0x24)
0x1dd: v1dd = EXTCODESIZE v1b8
0x1de: v1de = ISZERO v1dd
0x1e0: v1e0 = ISZERO v1de
0x1e1: v1e1(0x1e9) = CONST 
0x1e4: JUMPI v1e1(0x1e9) v1e0
----------------------------------

Begin block 0x1e5
prev = {'0x198'}, next = {}
----------------------------------
Block 0x1e5
0x1e5: v1e5(0x0) = CONST 
0x1e8: REVERT v1e5(0x0) v1e5(0x0)
----------------------------------

Begin block 0x1e9
prev = {'0x198'}, next = {'0x1fd', '0x1f4'}
----------------------------------
Block 0x1e9
0x1eb: v1eb = GAS 
0x1ec: v1ec = STATICCALL v1eb v1b8 v1ae v1d9 v1ae v1d0(0x20)
0x1ed: v1ed = ISZERO v1ec
0x1ef: v1ef = ISZERO v1ed
0x1f0: v1f0(0x1fd) = CONST 
0x1f3: JUMPI v1f0(0x1fd) v1ef
----------------------------------

Begin block 0x1f4
prev = {'0x1e9'}, next = {}
----------------------------------
Block 0x1f4
0x1f4: v1f4 = RETURNDATASIZE 
0x1f5: v1f5(0x0) = CONST 
0x1f8: RETURNDATACOPY v1f5(0x0) v1f5(0x0) v1f4
0x1f9: v1f9 = RETURNDATASIZE 
0x1fa: v1fa(0x0) = CONST 
0x1fc: REVERT v1fa(0x0) v1f9
----------------------------------

Begin block 0x1fd
prev = {'0x1e9'}, next = {'0x213', '0x20f'}
----------------------------------
Block 0x1fd
0x202: v202(0x40) = CONST 
0x204: v204 = MLOAD v202(0x40)
0x205: v205 = RETURNDATASIZE 
0x206: v206(0x20) = CONST 
0x209: v209 = LT v205 v206(0x20)
0x20a: v20a = ISZERO v209
0x20b: v20b(0x213) = CONST 
0x20e: JUMPI v20b(0x213) v20a
----------------------------------

Begin block 0x20f
prev = {'0x1fd'}, next = {}
----------------------------------
Block 0x20f
0x20f: v20f(0x0) = CONST 
0x212: REVERT v20f(0x0) v20f(0x0)
----------------------------------

Begin block 0x213
prev = {'0x1fd'}, next = {'0x26b', '0x26f'}
----------------------------------
Block 0x213
0x215: v215 = MLOAD v204
0x216: v216(0x40) = CONST 
0x219: v219 = MLOAD v216(0x40)
0x21a: v21a(0x1) = CONST 
0x21c: v21c(0x1) = CONST 
0x21e: v21e(0xe0) = CONST 
0x220: v220(0x100000000000000000000000000000000000000000000000000000000) = SHL v21e(0xe0) v21c(0x1)
0x221: v221(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v220(0x100000000000000000000000000000000000000000000000000000000) v21a(0x1)
0x222: v222(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v221(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x223: v223(0xe0) = CONST 
0x227: v227 = SHL v223(0xe0) v1ba(0x9bd9bbc6)
0x228: v228 = AND v227 v222(0xffffffff00000000000000000000000000000000000000000000000000000000)
0x22a: MSTORE v219 v228
0x22b: v22b(0x1) = CONST 
0x22d: v22d(0x1) = CONST 
0x22f: v22f(0xa0) = CONST 
0x231: v231(0x10000000000000000000000000000000000000000) = SHL v22f(0xa0) v22d(0x1)
0x232: v232(0xffffffffffffffffffffffffffffffffffffffff) = SUB v231(0x10000000000000000000000000000000000000000) v22b(0x1)
0x235: v235 = AND v1c0 v232(0xffffffffffffffffffffffffffffffffffffffff)
0x236: v236(0x4) = CONST 
0x239: v239 = ADD v219 v236(0x4)
0x23a: MSTORE v239 v235
0x23b: v23b(0x24) = CONST 
0x23e: v23e = ADD v219 v23b(0x24)
0x242: MSTORE v23e v215
0x243: v243(0x60) = CONST 
0x245: v245(0x44) = CONST 
0x248: v248 = ADD v219 v245(0x44)
0x249: MSTORE v248 v243(0x60)
0x24a: v24a(0x0) = CONST 
0x24c: v24c(0x64) = CONST 
0x24f: v24f = ADD v219 v24c(0x64)
0x252: MSTORE v24f v24a(0x0)
0x254: v254 = MLOAD v216(0x40)
0x255: v255(0xa4) = CONST 
0x259: v259 = ADD v219 v255(0xa4)
0x25d: v25d = SUB v219 v254
0x25e: v25e = ADD v25d v255(0xa4)
0x263: v263 = EXTCODESIZE v1b8
0x264: v264 = ISZERO v263
0x266: v266 = ISZERO v264
0x267: v267(0x26f) = CONST 
0x26a: JUMPI v267(0x26f) v266
----------------------------------

Begin block 0x26b
prev = {'0x213'}, next = {}
----------------------------------
Block 0x26b
0x26b: v26b(0x0) = CONST 
0x26e: REVERT v26b(0x0) v26b(0x0)
----------------------------------

Begin block 0x26f
prev = {'0x213'}, next = {'0x27a', '0x283'}
----------------------------------
Block 0x26f
0x271: v271 = GAS 
0x272: v272 = CALL v271 v1b8 v24a(0x0) v254 v25e v254 v24a(0x0)
0x273: v273 = ISZERO v272
0x275: v275 = ISZERO v273
0x276: v276(0x283) = CONST 
0x279: JUMPI v276(0x283) v275
----------------------------------

Begin block 0x27a
prev = {'0x26f'}, next = {}
----------------------------------
Block 0x27a
0x27a: v27a = RETURNDATASIZE 
0x27b: v27b(0x0) = CONST 
0x27e: RETURNDATACOPY v27b(0x0) v27b(0x0) v27a
0x27f: v27f = RETURNDATASIZE 
0x280: v280(0x0) = CONST 
0x282: REVERT v280(0x0) v27f
----------------------------------

Begin block 0x283
prev = {'0x26f'}, next = {'0x1240x126'}
----------------------------------
Block 0x283
0x289: JUMP v127(0x124)
----------------------------------

Begin block 0x28a
prev = {'0x14c'}, next = {'0x2e6', '0x2e2'}
----------------------------------
Block 0x28a
0x28b: v28b(0x40) = CONST 
0x28e: v28e = MLOAD v28b(0x40)
0x28f: v28f(0x4decdde3) = CONST 
0x294: v294(0xe1) = CONST 
0x296: v296(0x9bd9bbc600000000000000000000000000000000000000000000000000000000) = SHL v294(0xe1) v28f(0x4decdde3)
0x298: MSTORE v28e v296(0x9bd9bbc600000000000000000000000000000000000000000000000000000000)
0x299: v299(0x1) = CONST 
0x29b: v29b(0x1) = CONST 
0x29d: v29d(0xa0) = CONST 
0x29f: v29f(0x10000000000000000000000000000000000000000) = SHL v29d(0xa0) v29b(0x1)
0x2a0: v2a0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v29f(0x10000000000000000000000000000000000000000) v299(0x1)
0x2a2: v2a2 = AND v150 v2a0(0xffffffffffffffffffffffffffffffffffffffff)
0x2a3: v2a3(0x4) = CONST 
0x2a6: v2a6 = ADD v28e v2a3(0x4)
0x2a9: MSTORE v2a6 v2a2
0x2aa: v2aa(0x24) = CONST 
0x2ad: v2ad = ADD v28e v2aa(0x24)
0x2b0: MSTORE v2ad v73
0x2b1: v2b1(0x60) = CONST 
0x2b3: v2b3(0x44) = CONST 
0x2b6: v2b6 = ADD v28e v2b3(0x44)
0x2b7: MSTORE v2b6 v2b1(0x60)
0x2b8: v2b8(0x0) = CONST 
0x2ba: v2ba(0x64) = CONST 
0x2bd: v2bd = ADD v28e v2ba(0x64)
0x2c0: MSTORE v2bd v2b8(0x0)
0x2c2: v2c2 = MLOAD v28b(0x40)
0x2c5: v2c5(0x9bd9bbc6) = CONST 
0x2cb: v2cb(0xa4) = CONST 
0x2cf: v2cf = ADD v28e v2cb(0xa4)
0x2d4: v2d4 = SUB v28e v2c2
0x2d5: v2d5 = ADD v2d4 v2cb(0xa4)
0x2da: v2da = EXTCODESIZE v2a2
0x2db: v2db = ISZERO v2da
0x2dd: v2dd = ISZERO v2db
0x2de: v2de(0x2e6) = CONST 
0x2e1: JUMPI v2de(0x2e6) v2dd
----------------------------------

Begin block 0x2e2
prev = {'0x28a'}, next = {}
----------------------------------
Block 0x2e2
0x2e2: v2e2(0x0) = CONST 
0x2e5: REVERT v2e2(0x0) v2e2(0x0)
----------------------------------

Begin block 0x2e6
prev = {'0x28a'}, next = {'0x2fa', '0x2f1'}
----------------------------------
Block 0x2e6
0x2e8: v2e8 = GAS 
0x2e9: v2e9 = CALL v2e8 v2a2 v2b8(0x0) v2c2 v2d5 v2c2 v2b8(0x0)
0x2ea: v2ea = ISZERO v2e9
0x2ec: v2ec = ISZERO v2ea
0x2ed: v2ed(0x2fa) = CONST 
0x2f0: JUMPI v2ed(0x2fa) v2ec
----------------------------------

Begin block 0x2f1
prev = {'0x2e6'}, next = {}
----------------------------------
Block 0x2f1
0x2f1: v2f1 = RETURNDATASIZE 
0x2f2: v2f2(0x0) = CONST 
0x2f5: RETURNDATACOPY v2f2(0x0) v2f2(0x0) v2f1
0x2f6: v2f6 = RETURNDATASIZE 
0x2f7: v2f7(0x0) = CONST 
0x2f9: REVERT v2f7(0x0) v2f6
----------------------------------

Begin block 0x2fa
prev = {'0x2e6'}, next = {'0x335', '0x339'}
----------------------------------
Block 0x2fa
0x2ff: v2ff(0x0) = CONST 
0x302: v302(0x1) = CONST 
0x304: v304(0x1) = CONST 
0x306: v306(0xa0) = CONST 
0x308: v308(0x10000000000000000000000000000000000000000) = SHL v306(0xa0) v304(0x1)
0x309: v309(0xffffffffffffffffffffffffffffffffffffffff) = SUB v308(0x10000000000000000000000000000000000000000) v302(0x1)
0x30a: v30a = AND v309(0xffffffffffffffffffffffffffffffffffffffff) v150
0x30b: v30b(0xfc0c546a) = CONST 
0x310: v310(0x40) = CONST 
0x312: v312 = MLOAD v310(0x40)
0x314: v314(0xffffffff) = CONST 
0x319: v319(0xfc0c546a) = AND v314(0xffffffff) v30b(0xfc0c546a)
0x31a: v31a(0xe0) = CONST 
0x31c: v31c(0xfc0c546a00000000000000000000000000000000000000000000000000000000) = SHL v31a(0xe0) v319(0xfc0c546a)
0x31e: MSTORE v312 v31c(0xfc0c546a00000000000000000000000000000000000000000000000000000000)
0x31f: v31f(0x4) = CONST 
0x321: v321 = ADD v31f(0x4) v312
0x322: v322(0x20) = CONST 
0x324: v324(0x40) = CONST 
0x326: v326 = MLOAD v324(0x40)
0x329: v329 = SUB v321 v326
0x32d: v32d = EXTCODESIZE v30a
0x32e: v32e = ISZERO v32d
0x330: v330 = ISZERO v32e
0x331: v331(0x339) = CONST 
0x334: JUMPI v331(0x339) v330
----------------------------------

Begin block 0x335
prev = {'0x2fa'}, next = {}
----------------------------------
Block 0x335
0x335: v335(0x0) = CONST 
0x338: REVERT v335(0x0) v335(0x0)
----------------------------------

Begin block 0x339
prev = {'0x2fa'}, next = {'0x34d', '0x344'}
----------------------------------
Block 0x339
0x33b: v33b = GAS 
0x33c: v33c = STATICCALL v33b v30a v326 v329 v326 v322(0x20)
0x33d: v33d = ISZERO v33c
0x33f: v33f = ISZERO v33d
0x340: v340(0x34d) = CONST 
0x343: JUMPI v340(0x34d) v33f
----------------------------------

Begin block 0x344
prev = {'0x339'}, next = {}
----------------------------------
Block 0x344
0x344: v344 = RETURNDATASIZE 
0x345: v345(0x0) = CONST 
0x348: RETURNDATACOPY v345(0x0) v345(0x0) v344
0x349: v349 = RETURNDATASIZE 
0x34a: v34a(0x0) = CONST 
0x34c: REVERT v34a(0x0) v349
----------------------------------

Begin block 0x34d
prev = {'0x339'}, next = {'0x363', '0x35f'}
----------------------------------
Block 0x34d
0x352: v352(0x40) = CONST 
0x354: v354 = MLOAD v352(0x40)
0x355: v355 = RETURNDATASIZE 
0x356: v356(0x20) = CONST 
0x359: v359 = LT v355 v356(0x20)
0x35a: v35a = ISZERO v359
0x35b: v35b(0x363) = CONST 
0x35e: JUMPI v35b(0x363) v35a
----------------------------------

Begin block 0x35f
prev = {'0x34d'}, next = {}
----------------------------------
Block 0x35f
0x35f: v35f(0x0) = CONST 
0x362: REVERT v35f(0x0) v35f(0x0)
----------------------------------

Begin block 0x363
prev = {'0x34d'}, next = {'0x3a7', '0x3ab'}
----------------------------------
Block 0x363
0x365: v365 = MLOAD v354
0x366: v366(0x40) = CONST 
0x369: v369 = MLOAD v366(0x40)
0x36a: v36a(0x313ce567) = CONST 
0x36f: v36f(0xe0) = CONST 
0x371: v371(0x313ce56700000000000000000000000000000000000000000000000000000000) = SHL v36f(0xe0) v36a(0x313ce567)
0x373: MSTORE v369 v371(0x313ce56700000000000000000000000000000000000000000000000000000000)
0x375: v375 = MLOAD v366(0x40)
0x379: v379(0x0) = CONST 
0x37c: v37c(0x1) = CONST 
0x37e: v37e(0x1) = CONST 
0x380: v380(0xa0) = CONST 
0x382: v382(0x10000000000000000000000000000000000000000) = SHL v380(0xa0) v37e(0x1)
0x383: v383(0xffffffffffffffffffffffffffffffffffffffff) = SUB v382(0x10000000000000000000000000000000000000000) v37c(0x1)
0x385: v385 = AND v365 v383(0xffffffffffffffffffffffffffffffffffffffff)
0x387: v387(0x313ce567) = CONST 
0x38d: v38d(0x4) = CONST 
0x391: v391 = ADD v369 v38d(0x4)
0x393: v393(0x20) = CONST 
0x39a: v39a = SUB v369 v375
0x39b: v39b = ADD v39a v38d(0x4)
0x39f: v39f = EXTCODESIZE v385
0x3a0: v3a0 = ISZERO v39f
0x3a2: v3a2 = ISZERO v3a0
0x3a3: v3a3(0x3ab) = CONST 
0x3a6: JUMPI v3a3(0x3ab) v3a2
----------------------------------

Begin block 0x3a7
prev = {'0x363'}, next = {}
----------------------------------
Block 0x3a7
0x3a7: v3a7(0x0) = CONST 
0x3aa: REVERT v3a7(0x0) v3a7(0x0)
----------------------------------

Begin block 0x3ab
prev = {'0x363'}, next = {'0x3b6', '0x3bf'}
----------------------------------
Block 0x3ab
0x3ad: v3ad = GAS 
0x3ae: v3ae = STATICCALL v3ad v385 v375 v39b v375 v393(0x20)
0x3af: v3af = ISZERO v3ae
0x3b1: v3b1 = ISZERO v3af
0x3b2: v3b2(0x3bf) = CONST 
0x3b5: JUMPI v3b2(0x3bf) v3b1
----------------------------------

Begin block 0x3b6
prev = {'0x3ab'}, next = {}
----------------------------------
Block 0x3b6
0x3b6: v3b6 = RETURNDATASIZE 
0x3b7: v3b7(0x0) = CONST 
0x3ba: RETURNDATACOPY v3b7(0x0) v3b7(0x0) v3b6
0x3bb: v3bb = RETURNDATASIZE 
0x3bc: v3bc(0x0) = CONST 
0x3be: REVERT v3bc(0x0) v3bb
----------------------------------

Begin block 0x3bf
prev = {'0x3ab'}, next = {'0x3d5', '0x3d1'}
----------------------------------
Block 0x3bf
0x3c4: v3c4(0x40) = CONST 
0x3c6: v3c6 = MLOAD v3c4(0x40)
0x3c7: v3c7 = RETURNDATASIZE 
0x3c8: v3c8(0x20) = CONST 
0x3cb: v3cb = LT v3c7 v3c8(0x20)
0x3cc: v3cc = ISZERO v3cb
0x3cd: v3cd(0x3d5) = CONST 
0x3d0: JUMPI v3cd(0x3d5) v3cc
----------------------------------

Begin block 0x3d1
prev = {'0x3bf'}, next = {}
----------------------------------
Block 0x3d1
0x3d1: v3d1(0x0) = CONST 
0x3d4: REVERT v3d1(0x0) v3d1(0x0)
----------------------------------

Begin block 0x3d5
prev = {'0x3bf'}, next = {'0x423', '0x427'}
----------------------------------
Block 0x3d5
0x3d7: v3d7 = MLOAD v3c6
0x3d8: v3d8(0x40) = CONST 
0x3db: v3db = MLOAD v3d8(0x40)
0x3dc: v3dc(0x70a08231) = CONST 
0x3e1: v3e1(0xe0) = CONST 
0x3e3: v3e3(0x70a0823100000000000000000000000000000000000000000000000000000000) = SHL v3e1(0xe0) v3dc(0x70a08231)
0x3e5: MSTORE v3db v3e3(0x70a0823100000000000000000000000000000000000000000000000000000000)
0x3e6: v3e6 = ADDRESS 
0x3e7: v3e7(0x4) = CONST 
0x3ea: v3ea = ADD v3db v3e7(0x4)
0x3eb: MSTORE v3ea v3e6
0x3ed: v3ed = MLOAD v3d8(0x40)
0x3ee: v3ee(0xff) = CONST 
0x3f2: v3f2 = AND v3d7 v3ee(0xff)
0x3f5: v3f5(0x0) = CONST 
0x3f8: v3f8(0x1) = CONST 
0x3fa: v3fa(0x1) = CONST 
0x3fc: v3fc(0xa0) = CONST 
0x3fe: v3fe(0x10000000000000000000000000000000000000000) = SHL v3fc(0xa0) v3fa(0x1)
0x3ff: v3ff(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3fe(0x10000000000000000000000000000000000000000) v3f8(0x1)
0x401: v401 = AND v365 v3ff(0xffffffffffffffffffffffffffffffffffffffff)
0x403: v403(0x70a08231) = CONST 
0x409: v409(0x24) = CONST 
0x40d: v40d = ADD v3db v409(0x24)
0x40f: v40f(0x20) = CONST 
0x416: v416 = SUB v3db v3ed
0x417: v417 = ADD v416 v409(0x24)
0x41b: v41b = EXTCODESIZE v401
0x41c: v41c = ISZERO v41b
0x41e: v41e = ISZERO v41c
0x41f: v41f(0x427) = CONST 
0x422: JUMPI v41f(0x427) v41e
----------------------------------

Begin block 0x423
prev = {'0x3d5'}, next = {}
----------------------------------
Block 0x423
0x423: v423(0x0) = CONST 
0x426: REVERT v423(0x0) v423(0x0)
----------------------------------

Begin block 0x427
prev = {'0x3d5'}, next = {'0x432', '0x43b'}
----------------------------------
Block 0x427
0x429: v429 = GAS 
0x42a: v42a = STATICCALL v429 v401 v3ed v417 v3ed v40f(0x20)
0x42b: v42b = ISZERO v42a
0x42d: v42d = ISZERO v42b
0x42e: v42e(0x43b) = CONST 
0x431: JUMPI v42e(0x43b) v42d
----------------------------------

Begin block 0x432
prev = {'0x427'}, next = {}
----------------------------------
Block 0x432
0x432: v432 = RETURNDATASIZE 
0x433: v433(0x0) = CONST 
0x436: RETURNDATACOPY v433(0x0) v433(0x0) v432
0x437: v437 = RETURNDATASIZE 
0x438: v438(0x0) = CONST 
0x43a: REVERT v438(0x0) v437
----------------------------------

Begin block 0x43b
prev = {'0x427'}, next = {'0x451', '0x44d'}
----------------------------------
Block 0x43b
0x440: v440(0x40) = CONST 
0x442: v442 = MLOAD v440(0x40)
0x443: v443 = RETURNDATASIZE 
0x444: v444(0x20) = CONST 
0x447: v447 = LT v443 v444(0x20)
0x448: v448 = ISZERO v447
0x449: v449(0x451) = CONST 
0x44c: JUMPI v449(0x451) v448
----------------------------------

Begin block 0x44d
prev = {'0x43b'}, next = {}
----------------------------------
Block 0x44d
0x44d: v44d(0x0) = CONST 
0x450: REVERT v44d(0x0) v44d(0x0)
----------------------------------

Begin block 0x451
prev = {'0x43b'}, next = {'0x53e'}
----------------------------------
Block 0x451
0x453: v453 = MLOAD v442
0x456: v456(0x45f) = CONST 
0x45b: v45b(0x53e) = CONST 
0x45e: JUMP v45b(0x53e)
----------------------------------

Begin block 0x45f
prev = {'0x551'}, next = {'0x467', '0x4a9'}
----------------------------------
Block 0x45f
0x461: v461 = LT v453 v552
0x462: v462 = ISZERO v461
0x463: v463(0x4a9) = CONST 
0x466: JUMPI v463(0x4a9) v462
----------------------------------

Begin block 0x467
prev = {'0x45f'}, next = {}
----------------------------------
Block 0x467
0x467: v467(0x40) = CONST 
0x46a: v46a = MLOAD v467(0x40)
0x46b: v46b(0x461bcd) = CONST 
0x46f: v46f(0xe5) = CONST 
0x471: v471(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v46f(0xe5) v46b(0x461bcd)
0x473: MSTORE v46a v471(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x474: v474(0x20) = CONST 
0x476: v476(0x4) = CONST 
0x479: v479 = ADD v46a v476(0x4)
0x47a: MSTORE v479 v474(0x20)
0x47b: v47b(0x13) = CONST 
0x47d: v47d(0x24) = CONST 
0x480: v480 = ADD v46a v47d(0x24)
0x481: MSTORE v480 v47b(0x13)
0x482: v482(0x546f6b656e206469646e277420756e7772617) = CONST 
0x496: v496(0x6c) = CONST 
0x498: v498(0x546f6b656e206469646e277420756e7772617000000000000000000000000000) = SHL v496(0x6c) v482(0x546f6b656e206469646e277420756e7772617)
0x499: v499(0x44) = CONST 
0x49c: v49c = ADD v46a v499(0x44)
0x49d: MSTORE v49c v498(0x546f6b656e206469646e277420756e7772617000000000000000000000000000)
0x49f: v49f = MLOAD v467(0x40)
0x4a3: v4a3 = SUB v46a v49f
0x4a4: v4a4(0x64) = CONST 
0x4a6: v4a6 = ADD v4a4(0x64) v4a3
0x4a8: REVERT v49f v4a6
----------------------------------

Begin block 0x4a9
prev = {'0x45f'}, next = {'0x505', '0x509'}
----------------------------------
Block 0x4a9
0x4ab: v4ab(0x1) = CONST 
0x4ad: v4ad(0x1) = CONST 
0x4af: v4af(0xa0) = CONST 
0x4b1: v4b1(0x10000000000000000000000000000000000000000) = SHL v4af(0xa0) v4ad(0x1)
0x4b2: v4b2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4b1(0x10000000000000000000000000000000000000000) v4ab(0x1)
0x4b3: v4b3 = AND v4b2(0xffffffffffffffffffffffffffffffffffffffff) v365
0x4b4: v4b4(0xa9059cbb) = CONST 
0x4bb: v4bb(0x40) = CONST 
0x4bd: v4bd = MLOAD v4bb(0x40)
0x4bf: v4bf(0xffffffff) = CONST 
0x4c4: v4c4(0xa9059cbb) = AND v4bf(0xffffffff) v4b4(0xa9059cbb)
0x4c5: v4c5(0xe0) = CONST 
0x4c7: v4c7(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = SHL v4c5(0xe0) v4c4(0xa9059cbb)
0x4c9: MSTORE v4bd v4c7(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0x4ca: v4ca(0x4) = CONST 
0x4cc: v4cc = ADD v4ca(0x4) v4bd
0x4cf: v4cf(0x1) = CONST 
0x4d1: v4d1(0x1) = CONST 
0x4d3: v4d3(0xa0) = CONST 
0x4d5: v4d5(0x10000000000000000000000000000000000000000) = SHL v4d3(0xa0) v4d1(0x1)
0x4d6: v4d6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4d5(0x10000000000000000000000000000000000000000) v4cf(0x1)
0x4d7: v4d7 = AND v4d6(0xffffffffffffffffffffffffffffffffffffffff) v64
0x4d8: v4d8(0x1) = CONST 
0x4da: v4da(0x1) = CONST 
0x4dc: v4dc(0xa0) = CONST 
0x4de: v4de(0x10000000000000000000000000000000000000000) = SHL v4dc(0xa0) v4da(0x1)
0x4df: v4df(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4de(0x10000000000000000000000000000000000000000) v4d8(0x1)
0x4e0: v4e0 = AND v4df(0xffffffffffffffffffffffffffffffffffffffff) v4d7
0x4e2: MSTORE v4cc v4e0
0x4e3: v4e3(0x20) = CONST 
0x4e5: v4e5 = ADD v4e3(0x20) v4cc
0x4e8: MSTORE v4e5 v453
0x4e9: v4e9(0x20) = CONST 
0x4eb: v4eb = ADD v4e9(0x20) v4e5
0x4f0: v4f0(0x20) = CONST 
0x4f2: v4f2(0x40) = CONST 
0x4f4: v4f4 = MLOAD v4f2(0x40)
0x4f7: v4f7 = SUB v4eb v4f4
0x4f9: v4f9(0x0) = CONST 
0x4fd: v4fd = EXTCODESIZE v4b3
0x4fe: v4fe = ISZERO v4fd
0x500: v500 = ISZERO v4fe
0x501: v501(0x509) = CONST 
0x504: JUMPI v501(0x509) v500
----------------------------------

Begin block 0x505
prev = {'0x4a9'}, next = {}
----------------------------------
Block 0x505
0x505: v505(0x0) = CONST 
0x508: REVERT v505(0x0) v505(0x0)
----------------------------------

Begin block 0x509
prev = {'0x4a9'}, next = {'0x51d', '0x514'}
----------------------------------
Block 0x509
0x50b: v50b = GAS 
0x50c: v50c = CALL v50b v4b3 v4f9(0x0) v4f4 v4f7 v4f4 v4f0(0x20)
0x50d: v50d = ISZERO v50c
0x50f: v50f = ISZERO v50d
0x510: v510(0x51d) = CONST 
0x513: JUMPI v510(0x51d) v50f
----------------------------------

Begin block 0x514
prev = {'0x509'}, next = {}
----------------------------------
Block 0x514
0x514: v514 = RETURNDATASIZE 
0x515: v515(0x0) = CONST 
0x518: RETURNDATACOPY v515(0x0) v515(0x0) v514
0x519: v519 = RETURNDATASIZE 
0x51a: v51a(0x0) = CONST 
0x51c: REVERT v51a(0x0) v519
----------------------------------

Begin block 0x51d
prev = {'0x509'}, next = {'0x52f', '0x533'}
----------------------------------
Block 0x51d
0x522: v522(0x40) = CONST 
0x524: v524 = MLOAD v522(0x40)
0x525: v525 = RETURNDATASIZE 
0x526: v526(0x20) = CONST 
0x529: v529 = LT v525 v526(0x20)
0x52a: v52a = ISZERO v529
0x52b: v52b(0x533) = CONST 
0x52e: JUMPI v52b(0x533) v52a
----------------------------------

Begin block 0x52f
prev = {'0x51d'}, next = {}
----------------------------------
Block 0x52f
0x52f: v52f(0x0) = CONST 
0x532: REVERT v52f(0x0) v52f(0x0)
----------------------------------

Begin block 0x533
prev = {'0x51d'}, next = {'0x18e'}
----------------------------------
Block 0x533
0x53d: JUMP v14d(0x18e)
----------------------------------

Begin block 0x53e
prev = {'0x451'}, next = {'0x551', '0x550'}
----------------------------------
Block 0x53e
0x53f: v53f(0x0) = CONST 
0x541: v541(0x12) = CONST 
0x545: v545 = SUB v541(0x12) v3f2
0x546: v546(0xa) = CONST 
0x548: v548 = EXP v546(0xa) v545
0x54c: v54c(0x551) = CONST 
0x54f: JUMPI v54c(0x551) v548
----------------------------------

Begin block 0x550
prev = {'0x53e'}, next = {}
----------------------------------
Block 0x550
0x550: THROW 
----------------------------------

Begin block 0x551
prev = {'0x53e'}, next = {'0x45f'}
----------------------------------
Block 0x551
0x552: v552 = DIV v73 v548
0x559: JUMP v456(0x45f)
----------------------------------

Begin block 0x596
prev = {'0x10', '0x2a'}, next = {}
----------------------------------
Block 0x596
0x597: v597(0x35) = CONST 
0x598: CALLPRIVATE v597(0x35)
----------------------------------

Begin block 0x599
prev = {'0x1a'}, next = {}
----------------------------------
Block 0x599
0x59a: v59a(0x3a) = CONST 
0x59b: CALLPRIVATE v59a(0x3a)
----------------------------------

Begin block 0x59c
prev = {'0x2a'}, next = {}
----------------------------------
Block 0x59c
0x59d: v59d(0x126) = CONST 
0x59e: CALLPRIVATE v59d(0x126)
----------------------------------
