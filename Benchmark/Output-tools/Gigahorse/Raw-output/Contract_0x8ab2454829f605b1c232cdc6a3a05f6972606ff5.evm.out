
Begin block 0x0
prev = {}, next = {'0x7e5', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x7cf: v7cf(0x7e5) = CONST 
0x7d0: JUMPI v7cf(0x7e5) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x40', '0x7e8'}
----------------------------------
Block 0xd
0xd: vd(0xffffffff) = CONST 
0x12: v12(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x30: v30(0x0) = CONST 
0x32: v32 = CALLDATALOAD v30(0x0)
0x33: v33 = DIV v32 v12(0x100000000000000000000000000000000000000000000000000000000)
0x34: v34 = AND v33 vd(0xffffffff)
0x35: v35(0x13af4035) = CONST 
0x3b: v3b = EQ v34 v35(0x13af4035)
0x7d1: v7d1(0x7e8) = CONST 
0x7d2: JUMPI v7d1(0x7e8) v3b
----------------------------------

Begin block 0x40
prev = {'0xd'}, next = {'0x4b', '0x7eb'}
----------------------------------
Block 0x40
0x41: v41(0x50ed2a2c) = CONST 
0x46: v46 = EQ v41(0x50ed2a2c) v34
0x7d3: v7d3(0x7eb) = CONST 
0x7d4: JUMPI v7d3(0x7eb) v46
----------------------------------

Begin block 0x4b
prev = {'0x40'}, next = {'0x7ee', '0x56'}
----------------------------------
Block 0x4b
0x4c: v4c(0x57de26a4) = CONST 
0x51: v51 = EQ v4c(0x57de26a4) v34
0x7d5: v7d5(0x7ee) = CONST 
0x7d6: JUMPI v7d5(0x7ee) v51
----------------------------------

Begin block 0x56
prev = {'0x4b'}, next = {'0x7f1', '0x61'}
----------------------------------
Block 0x56
0x57: v57(0x59e02dd7) = CONST 
0x5c: v5c = EQ v57(0x59e02dd7) v34
0x7d7: v7d7(0x7f1) = CONST 
0x7d8: JUMPI v7d7(0x7f1) v5c
----------------------------------

Begin block 0x61
prev = {'0x56'}, next = {'0x7f4', '0x6c'}
----------------------------------
Block 0x61
0x62: v62(0x5a686699) = CONST 
0x67: v67 = EQ v62(0x5a686699) v34
0x7d9: v7d9(0x7f4) = CONST 
0x7da: JUMPI v7d9(0x7f4) v67
----------------------------------

Begin block 0x6c
prev = {'0x61'}, next = {'0x77', '0x7f7'}
----------------------------------
Block 0x6c
0x6d: v6d(0x7a9e5e4b) = CONST 
0x72: v72 = EQ v6d(0x7a9e5e4b) v34
0x7db: v7db(0x7f7) = CONST 
0x7dc: JUMPI v7db(0x7f7) v72
----------------------------------

Begin block 0x77
prev = {'0x6c'}, next = {'0x7fa', '0x82'}
----------------------------------
Block 0x77
0x78: v78(0x8da5cb5b) = CONST 
0x7d: v7d = EQ v78(0x8da5cb5b) v34
0x7dd: v7dd(0x7fa) = CONST 
0x7de: JUMPI v7dd(0x7fa) v7d
----------------------------------

Begin block 0x82
prev = {'0x77'}, next = {'0x7fd', '0x8d'}
----------------------------------
Block 0x82
0x83: v83(0xa4dff0a2) = CONST 
0x88: v88 = EQ v83(0xa4dff0a2) v34
0x7df: v7df(0x7fd) = CONST 
0x7e0: JUMPI v7df(0x7fd) v88
----------------------------------

Begin block 0x8d
prev = {'0x82'}, next = {'0x98', '0x800'}
----------------------------------
Block 0x8d
0x8e: v8e(0xac4c25b2) = CONST 
0x93: v93 = EQ v8e(0xac4c25b2) v34
0x7e1: v7e1(0x800) = CONST 
0x7e2: JUMPI v7e1(0x800) v93
----------------------------------

Begin block 0x98
prev = {'0x8d'}, next = {'0x7e5', '0x803'}
----------------------------------
Block 0x98
0x99: v99(0xbf7e214f) = CONST 
0x9e: v9e = EQ v99(0xbf7e214f) v34
0x7e3: v7e3(0x803) = CONST 
0x7e4: JUMPI v7e3(0x803) v9e
----------------------------------

Begin block 0xa3
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0xa3
0xa4: va4(0x0) = CONST 
0xa7: REVERT va4(0x0) va4(0x0)
----------------------------------

Begin block 0xa8
prev = {}, next = {'0xb0', '0xb4'}
----------------------------------
function setOwner(address)()
Block 0xa8
0xa9: va9 = CALLVALUE 
0xab: vab = ISZERO va9
0xac: vac(0xb4) = CONST 
0xaf: JUMPI vac(0xb4) vab
----------------------------------

Begin block 0xb0
prev = {'0xa8'}, next = {}
----------------------------------
Block 0xb0
0xb0: vb0(0x0) = CONST 
0xb3: REVERT vb0(0x0) vb0(0x0)
----------------------------------

Begin block 0xb4
prev = {'0xa8'}, next = {'0x23c'}
----------------------------------
Block 0xb4
0xb6: vb6(0xc9) = CONST 
0xb9: vb9(0x1) = CONST 
0xbb: vbb(0xa0) = CONST 
0xbd: vbd(0x2) = CONST 
0xbf: vbf(0x10000000000000000000000000000000000000000) = EXP vbd(0x2) vbb(0xa0)
0xc0: vc0(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbf(0x10000000000000000000000000000000000000000) vb9(0x1)
0xc1: vc1(0x4) = CONST 
0xc3: vc3 = CALLDATALOAD vc1(0x4)
0xc4: vc4 = AND vc3 vc0(0xffffffffffffffffffffffffffffffffffffffff)
0xc5: vc5(0x23c) = CONST 
0xc8: JUMP vc5(0x23c)
----------------------------------

Begin block 0xc90xa8
prev = {'0x25d'}, next = {}
----------------------------------
Block 0xc90xa8
0xca0xa8: STOP 
----------------------------------

Begin block 0xc90xcb
prev = {'0x32c'}, next = {}
----------------------------------
Block 0xc90xcb
0xca0xcb: STOP 
----------------------------------

Begin block 0xc90x153
prev = {'0x553'}, next = {}
----------------------------------
Block 0xc90x153
0xca0x153: STOP 
----------------------------------

Begin block 0xc90x192
prev = {'0x57f'}, next = {}
----------------------------------
Block 0xc90x192
0xca0x192: STOP 
----------------------------------

Begin block 0xc90x212
prev = {'0x679'}, next = {}
----------------------------------
Block 0xc90x212
0xca0x212: STOP 
----------------------------------

Begin block 0xcb
prev = {}, next = {'0xd3', '0xd7'}
----------------------------------
function poke(uint128,uint32)()
Block 0xcb
0xcc: vcc = CALLVALUE 
0xce: vce = ISZERO vcc
0xcf: vcf(0xd7) = CONST 
0xd2: JUMPI vcf(0xd7) vce
----------------------------------

Begin block 0xd3
prev = {'0xcb'}, next = {}
----------------------------------
Block 0xd3
0xd3: vd3(0x0) = CONST 
0xd6: REVERT vd3(0x0) vd3(0x0)
----------------------------------

Begin block 0xd7
prev = {'0xcb'}, next = {'0x2ba'}
----------------------------------
Block 0xd7
0xd9: vd9(0xc9) = CONST 
0xdc: vdc(0xffffffffffffffffffffffffffffffff) = CONST 
0xed: ved(0x4) = CONST 
0xef: vef = CALLDATALOAD ved(0x4)
0xf0: vf0 = AND vef vdc(0xffffffffffffffffffffffffffffffff)
0xf1: vf1(0xffffffff) = CONST 
0xf6: vf6(0x24) = CONST 
0xf8: vf8 = CALLDATALOAD vf6(0x24)
0xf9: vf9 = AND vf8 vf1(0xffffffff)
0xfa: vfa(0x2ba) = CONST 
0xfd: JUMP vfa(0x2ba)
----------------------------------

Begin block 0xfe
prev = {}, next = {'0x106', '0x10a'}
----------------------------------
function read()()
Block 0xfe
0xff: vff = CALLVALUE 
0x101: v101 = ISZERO vff
0x102: v102(0x10a) = CONST 
0x105: JUMPI v102(0x10a) v101
----------------------------------

Begin block 0x106
prev = {'0xfe'}, next = {}
----------------------------------
Block 0x106
0x106: v106(0x0) = CONST 
0x109: REVERT v106(0x0) v106(0x0)
----------------------------------

Begin block 0x10a
prev = {'0xfe'}, next = {'0x399'}
----------------------------------
Block 0x10a
0x10c: v10c(0x113) = CONST 
0x10f: v10f(0x399) = CONST 
0x112: JUMP v10f(0x399)
----------------------------------

Begin block 0x113
prev = {'0x3c4'}, next = {}
----------------------------------
Block 0x113
0x114: v114(0x40) = CONST 
0x117: v117 = MLOAD v114(0x40)
0x11a: MSTORE v117 v3da
0x11b: v11b = MLOAD v114(0x40)
0x11f: v11f = SUB v117 v11b
0x120: v120(0x20) = CONST 
0x122: v122 = ADD v120(0x20) v11f
0x124: RETURN v11b v122
----------------------------------

Begin block 0x125
prev = {}, next = {'0x131', '0x12d'}
----------------------------------
function peek()()
Block 0x125
0x126: v126 = CALLVALUE 
0x128: v128 = ISZERO v126
0x129: v129(0x131) = CONST 
0x12c: JUMPI v129(0x131) v128
----------------------------------

Begin block 0x12d
prev = {'0x125'}, next = {}
----------------------------------
Block 0x12d
0x12d: v12d(0x0) = CONST 
0x130: REVERT v12d(0x0) v12d(0x0)
----------------------------------

Begin block 0x131
prev = {'0x125'}, next = {'0x3dd'}
----------------------------------
Block 0x131
0x133: v133(0x13a) = CONST 
0x136: v136(0x3dd) = CONST 
0x139: JUMP v136(0x3dd)
----------------------------------

Begin block 0x13a
prev = {'0x3dd'}, next = {}
----------------------------------
Block 0x13a
0x13b: v13b(0x40) = CONST 
0x13e: v13e = MLOAD v13b(0x40)
0x141: MSTORE v13e v3f3
0x143: v143 = ISZERO v411
0x144: v144 = ISZERO v143
0x145: v145(0x20) = CONST 
0x148: v148 = ADD v13e v145(0x20)
0x149: MSTORE v148 v144
0x14b: v14b = MLOAD v13b(0x40)
0x14f: v14f = SUB v13e v14b
0x150: v150 = ADD v14f v13b(0x40)
0x152: RETURN v14b v150
----------------------------------

Begin block 0x153
prev = {}, next = {'0x15f', '0x15b'}
----------------------------------
function post(uint128,uint32,address)()
Block 0x153
0x154: v154 = CALLVALUE 
0x156: v156 = ISZERO v154
0x157: v157(0x15f) = CONST 
0x15a: JUMPI v157(0x15f) v156
----------------------------------

Begin block 0x15b
prev = {'0x153'}, next = {}
----------------------------------
Block 0x15b
0x15b: v15b(0x0) = CONST 
0x15e: REVERT v15b(0x0) v15b(0x0)
----------------------------------

Begin block 0x15f
prev = {'0x153'}, next = {'0x414'}
----------------------------------
Block 0x15f
0x161: v161(0xc9) = CONST 
0x164: v164(0xffffffffffffffffffffffffffffffff) = CONST 
0x175: v175(0x4) = CONST 
0x177: v177 = CALLDATALOAD v175(0x4)
0x178: v178 = AND v177 v164(0xffffffffffffffffffffffffffffffff)
0x179: v179(0xffffffff) = CONST 
0x17e: v17e(0x24) = CONST 
0x180: v180 = CALLDATALOAD v17e(0x24)
0x181: v181 = AND v180 v179(0xffffffff)
0x182: v182(0x1) = CONST 
0x184: v184(0xa0) = CONST 
0x186: v186(0x2) = CONST 
0x188: v188(0x10000000000000000000000000000000000000000) = EXP v186(0x2) v184(0xa0)
0x189: v189(0xffffffffffffffffffffffffffffffffffffffff) = SUB v188(0x10000000000000000000000000000000000000000) v182(0x1)
0x18a: v18a(0x44) = CONST 
0x18c: v18c = CALLDATALOAD v18a(0x44)
0x18d: v18d = AND v18c v189(0xffffffffffffffffffffffffffffffffffffffff)
0x18e: v18e(0x414) = CONST 
0x191: JUMP v18e(0x414)
----------------------------------

Begin block 0x192
prev = {}, next = {'0x19a', '0x19e'}
----------------------------------
function setAuthority(address)()
Block 0x192
0x193: v193 = CALLVALUE 
0x195: v195 = ISZERO v193
0x196: v196(0x19e) = CONST 
0x199: JUMPI v196(0x19e) v195
----------------------------------

Begin block 0x19a
prev = {'0x192'}, next = {}
----------------------------------
Block 0x19a
0x19a: v19a(0x0) = CONST 
0x19d: REVERT v19a(0x0) v19a(0x0)
----------------------------------

Begin block 0x19e
prev = {'0x192'}, next = {'0x55e'}
----------------------------------
Block 0x19e
0x1a0: v1a0(0xc9) = CONST 
0x1a3: v1a3(0x1) = CONST 
0x1a5: v1a5(0xa0) = CONST 
0x1a7: v1a7(0x2) = CONST 
0x1a9: v1a9(0x10000000000000000000000000000000000000000) = EXP v1a7(0x2) v1a5(0xa0)
0x1aa: v1aa(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1a9(0x10000000000000000000000000000000000000000) v1a3(0x1)
0x1ab: v1ab(0x4) = CONST 
0x1ad: v1ad = CALLDATALOAD v1ab(0x4)
0x1ae: v1ae = AND v1ad v1aa(0xffffffffffffffffffffffffffffffffffffffff)
0x1af: v1af(0x55e) = CONST 
0x1b2: JUMP v1af(0x55e)
----------------------------------

Begin block 0x1b3
prev = {}, next = {'0x1bb', '0x1bf'}
----------------------------------
function owner()()
Block 0x1b3
0x1b4: v1b4 = CALLVALUE 
0x1b6: v1b6 = ISZERO v1b4
0x1b7: v1b7(0x1bf) = CONST 
0x1ba: JUMPI v1b7(0x1bf) v1b6
----------------------------------

Begin block 0x1bb
prev = {'0x1b3'}, next = {}
----------------------------------
Block 0x1bb
0x1bb: v1bb(0x0) = CONST 
0x1be: REVERT v1bb(0x0) v1bb(0x0)
----------------------------------

Begin block 0x1bf
prev = {'0x1b3'}, next = {'0x5d8'}
----------------------------------
Block 0x1bf
0x1c1: v1c1(0x1c8) = CONST 
0x1c4: v1c4(0x5d8) = CONST 
0x1c7: JUMP v1c4(0x5d8)
----------------------------------

Begin block 0x1c80x1b3
prev = {'0x5d8'}, next = {}
----------------------------------
Block 0x1c80x1b3
0x1c90x1b3: v1b31c9(0x40) = CONST 
0x1cc0x1b3: v1b31cc = MLOAD v1b31c9(0x40)
0x1cd0x1b3: v1b31cd(0x1) = CONST 
0x1cf0x1b3: v1b31cf(0xa0) = CONST 
0x1d10x1b3: v1b31d1(0x2) = CONST 
0x1d30x1b3: v1b31d3(0x10000000000000000000000000000000000000000) = EXP v1b31d1(0x2) v1b31cf(0xa0)
0x1d40x1b3: v1b31d4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1b31d3(0x10000000000000000000000000000000000000000) v1b31cd(0x1)
0x1d70x1b3: v1b31d7 = AND v5e4 v1b31d4(0xffffffffffffffffffffffffffffffffffffffff)
0x1d90x1b3: MSTORE v1b31cc v1b31d7
0x1da0x1b3: v1b31da = MLOAD v1b31c9(0x40)
0x1de0x1b3: v1b31de = SUB v1b31cc v1b31da
0x1df0x1b3: v1b31df(0x20) = CONST 
0x1e10x1b3: v1b31e1 = ADD v1b31df(0x20) v1b31de
0x1e30x1b3: RETURN v1b31da v1b31e1
----------------------------------

Begin block 0x1c80x227
prev = {'0x69a'}, next = {}
----------------------------------
Block 0x1c80x227
0x1c90x227: v2271c9(0x40) = CONST 
0x1cc0x227: v2271cc = MLOAD v2271c9(0x40)
0x1cd0x227: v2271cd(0x1) = CONST 
0x1cf0x227: v2271cf(0xa0) = CONST 
0x1d10x227: v2271d1(0x2) = CONST 
0x1d30x227: v2271d3(0x10000000000000000000000000000000000000000) = EXP v2271d1(0x2) v2271cf(0xa0)
0x1d40x227: v2271d4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2271d3(0x10000000000000000000000000000000000000000) v2271cd(0x1)
0x1d70x227: v2271d7 = AND v6a6 v2271d4(0xffffffffffffffffffffffffffffffffffffffff)
0x1d90x227: MSTORE v2271cc v2271d7
0x1da0x227: v2271da = MLOAD v2271c9(0x40)
0x1de0x227: v2271de = SUB v2271cc v2271da
0x1df0x227: v2271df(0x20) = CONST 
0x1e10x227: v2271e1 = ADD v2271df(0x20) v2271de
0x1e30x227: RETURN v2271da v2271e1
----------------------------------

Begin block 0x1e4
prev = {}, next = {'0x1ec', '0x1f0'}
----------------------------------
function zzz()()
Block 0x1e4
0x1e5: v1e5 = CALLVALUE 
0x1e7: v1e7 = ISZERO v1e5
0x1e8: v1e8(0x1f0) = CONST 
0x1eb: JUMPI v1e8(0x1f0) v1e7
----------------------------------

Begin block 0x1ec
prev = {'0x1e4'}, next = {}
----------------------------------
Block 0x1ec
0x1ec: v1ec(0x0) = CONST 
0x1ef: REVERT v1ec(0x0) v1ec(0x0)
----------------------------------

Begin block 0x1f0
prev = {'0x1e4'}, next = {'0x5e7'}
----------------------------------
Block 0x1f0
0x1f2: v1f2(0x1f9) = CONST 
0x1f5: v1f5(0x5e7) = CONST 
0x1f8: JUMP v1f5(0x5e7)
----------------------------------

Begin block 0x1f9
prev = {'0x5e7'}, next = {}
----------------------------------
Block 0x1f9
0x1fa: v1fa(0x40) = CONST 
0x1fd: v1fd = MLOAD v1fa(0x40)
0x1fe: v1fe(0xffffffff) = CONST 
0x205: v205 = AND v604 v1fe(0xffffffff)
0x207: MSTORE v1fd v205
0x208: v208 = MLOAD v1fa(0x40)
0x20c: v20c = SUB v1fd v208
0x20d: v20d(0x20) = CONST 
0x20f: v20f = ADD v20d(0x20) v20c
0x211: RETURN v208 v20f
----------------------------------

Begin block 0x212
prev = {}, next = {'0x21e', '0x21a'}
----------------------------------
function void()()
Block 0x212
0x213: v213 = CALLVALUE 
0x215: v215 = ISZERO v213
0x216: v216(0x21e) = CONST 
0x219: JUMPI v216(0x21e) v215
----------------------------------

Begin block 0x21a
prev = {'0x212'}, next = {}
----------------------------------
Block 0x21a
0x21a: v21a(0x0) = CONST 
0x21d: REVERT v21a(0x0) v21a(0x0)
----------------------------------

Begin block 0x21e
prev = {'0x212'}, next = {'0x607'}
----------------------------------
Block 0x21e
0x220: v220(0xc9) = CONST 
0x223: v223(0x607) = CONST 
0x226: JUMP v223(0x607)
----------------------------------

Begin block 0x227
prev = {}, next = {'0x233', '0x22f'}
----------------------------------
function authority()()
Block 0x227
0x228: v228 = CALLVALUE 
0x22a: v22a = ISZERO v228
0x22b: v22b(0x233) = CONST 
0x22e: JUMPI v22b(0x233) v22a
----------------------------------

Begin block 0x22f
prev = {'0x227'}, next = {}
----------------------------------
Block 0x22f
0x22f: v22f(0x0) = CONST 
0x232: REVERT v22f(0x0) v22f(0x0)
----------------------------------

Begin block 0x233
prev = {'0x227'}, next = {'0x69a'}
----------------------------------
Block 0x233
0x235: v235(0x1c8) = CONST 
0x238: v238(0x69a) = CONST 
0x23b: JUMP v238(0x69a)
----------------------------------

Begin block 0x23c
prev = {'0xb4'}, next = {'0x252'}
----------------------------------
Block 0x23c
0x23d: v23d(0x252) = CONST 
0x240: v240 = CALLER 
0x241: v241(0x0) = CONST 
0x243: v243 = CALLDATALOAD v241(0x0)
0x244: v244(0x1) = CONST 
0x246: v246(0xe0) = CONST 
0x248: v248(0x2) = CONST 
0x24a: v24a(0x100000000000000000000000000000000000000000000000000000000) = EXP v248(0x2) v246(0xe0)
0x24b: v24b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v24a(0x100000000000000000000000000000000000000000000000000000000) v244(0x1)
0x24c: v24c(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v24b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x24d: v24d = AND v24c(0xffffffff00000000000000000000000000000000000000000000000000000000) v243
0x24e: v24e(0x6a9) = CONST 
0x251: v251_0 = CALLPRIVATE v24e(0x6a9) v24d v240 v23d(0x252)
----------------------------------

Begin block 0x252
prev = {'0x23c'}, next = {'0x25d', '0x259'}
----------------------------------
Block 0x252
0x253: v253 = ISZERO v251_0
0x254: v254 = ISZERO v253
0x255: v255(0x25d) = CONST 
0x258: JUMPI v255(0x25d) v254
----------------------------------

Begin block 0x259
prev = {'0x252'}, next = {}
----------------------------------
Block 0x259
0x259: v259(0x0) = CONST 
0x25c: REVERT v259(0x0) v259(0x0)
----------------------------------

Begin block 0x25d
prev = {'0x252'}, next = {'0xc90xa8'}
----------------------------------
Block 0x25d
0x25e: v25e(0x1) = CONST 
0x261: v261 = SLOAD v25e(0x1)
0x262: v262(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x277: v277(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v262(0xffffffffffffffffffffffffffffffffffffffff)
0x278: v278 = AND v277(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v261
0x279: v279(0x1) = CONST 
0x27b: v27b(0xa0) = CONST 
0x27d: v27d(0x2) = CONST 
0x27f: v27f(0x10000000000000000000000000000000000000000) = EXP v27d(0x2) v27b(0xa0)
0x280: v280(0xffffffffffffffffffffffffffffffffffffffff) = SUB v27f(0x10000000000000000000000000000000000000000) v279(0x1)
0x283: v283 = AND v280(0xffffffffffffffffffffffffffffffffffffffff) vc4
0x287: v287 = OR v283 v278
0x28b: SSTORE v25e(0x1) v287
0x28c: v28c(0x40) = CONST 
0x28e: v28e = MLOAD v28c(0x40)
0x290: v290 = AND v287 v280(0xffffffffffffffffffffffffffffffffffffffff)
0x292: v292(0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94) = CONST 
0x2b4: v2b4(0x0) = CONST 
0x2b7: LOG2 v28e v2b4(0x0) v292(0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94) v290
0x2b9: JUMP vb6(0xc9)
----------------------------------

Begin block 0x2ba
prev = {'0xd7'}, next = {'0x321'}
----------------------------------
Block 0x2ba
0x2bb: v2bb(0x40) = CONST 
0x2be: v2be = MLOAD v2bb(0x40)
0x2bf: v2bf = CALLVALUE 
0x2c2: MSTORE v2be v2bf
0x2c3: v2c3(0x20) = CONST 
0x2c6: v2c6 = ADD v2be v2c3(0x20)
0x2c9: MSTORE v2c6 v2bb(0x40)
0x2ca: v2ca = CALLDATASIZE 
0x2cd: v2cd = ADD v2be v2bb(0x40)
0x2d0: MSTORE v2cd v2ca
0x2d1: v2d1(0x4) = CONST 
0x2d3: v2d3 = CALLDATALOAD v2d1(0x4)
0x2d5: v2d5(0x24) = CONST 
0x2d7: v2d7 = CALLDATALOAD v2d5(0x24)
0x2dd: v2dd = CALLER 
0x2df: v2df(0x0) = CONST 
0x2e2: v2e2 = CALLDATALOAD v2df(0x0)
0x2e3: v2e3(0x1) = CONST 
0x2e5: v2e5(0xe0) = CONST 
0x2e7: v2e7(0x2) = CONST 
0x2e9: v2e9(0x100000000000000000000000000000000000000000000000000000000) = EXP v2e7(0x2) v2e5(0xe0)
0x2ea: v2ea(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v2e9(0x100000000000000000000000000000000000000000000000000000000) v2e3(0x1)
0x2eb: v2eb(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v2ea(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x2ec: v2ec = AND v2eb(0xffffffff00000000000000000000000000000000000000000000000000000000) v2e2
0x2f0: v2f0(0x60) = CONST 
0x2f3: v2f3 = ADD v2be v2f0(0x60)
0x2f9: CALLDATACOPY v2f3 v2df(0x0) v2ca
0x2fa: v2fa(0x40) = CONST 
0x2fc: v2fc = MLOAD v2fa(0x40)
0x2fe: v2fe = ADD v2f3 v2ca
0x301: v301 = SUB v2fe v2fc
0x30b: LOG4 v2fc v301 v2ec v2dd v2d3 v2d7
0x30c: v30c(0x321) = CONST 
0x30f: v30f = CALLER 
0x310: v310(0x0) = CONST 
0x312: v312 = CALLDATALOAD v310(0x0)
0x313: v313(0x1) = CONST 
0x315: v315(0xe0) = CONST 
0x317: v317(0x2) = CONST 
0x319: v319(0x100000000000000000000000000000000000000000000000000000000) = EXP v317(0x2) v315(0xe0)
0x31a: v31a(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v319(0x100000000000000000000000000000000000000000000000000000000) v313(0x1)
0x31b: v31b(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v31a(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x31c: v31c = AND v31b(0xffffffff00000000000000000000000000000000000000000000000000000000) v312
0x31d: v31d(0x6a9) = CONST 
0x320: v320_0 = CALLPRIVATE v31d(0x6a9) v31c v30f v30c(0x321)
----------------------------------

Begin block 0x321
prev = {'0x2ba'}, next = {'0x328', '0x32c'}
----------------------------------
Block 0x321
0x322: v322 = ISZERO v320_0
0x323: v323 = ISZERO v322
0x324: v324(0x32c) = CONST 
0x327: JUMPI v324(0x32c) v323
----------------------------------

Begin block 0x328
prev = {'0x321'}, next = {}
----------------------------------
Block 0x328
0x328: v328(0x0) = CONST 
0x32b: REVERT v328(0x0) v328(0x0)
----------------------------------

Begin block 0x32c
prev = {'0x321'}, next = {'0xc90xcb'}
----------------------------------
Block 0x32c
0x32f: v32f(0x2) = CONST 
0x332: v332 = SLOAD v32f(0x2)
0x333: v333(0xffffffff) = CONST 
0x33a: v33a = AND vf9 v333(0xffffffff)
0x33b: v33b(0x100000000000000000000000000000000) = CONST 
0x34d: v34d = MUL v33b(0x100000000000000000000000000000000) v33a
0x34e: v34e(0xffffffff00000000000000000000000000000000) = CONST 
0x363: v363(0xffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff) = NOT v34e(0xffffffff00000000000000000000000000000000)
0x364: v364(0xffffffffffffffffffffffffffffffff) = CONST 
0x377: v377 = AND vf0 v364(0xffffffffffffffffffffffffffffffff)
0x378: v378(0xffffffffffffffffffffffffffffffff) = CONST 
0x389: v389(0xffffffffffffffffffffffffffffffff00000000000000000000000000000000) = NOT v378(0xffffffffffffffffffffffffffffffff)
0x38c: v38c = AND v332 v389(0xffffffffffffffffffffffffffffffff00000000000000000000000000000000)
0x390: v390 = OR v38c v377
0x394: v394 = AND v390 v363(0xffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff)
0x395: v395 = OR v394 v34d
0x397: SSTORE v32f(0x2) v395
0x398: JUMP vd9(0xc9)
----------------------------------

Begin block 0x399
prev = {'0x10a'}, next = {'0x3c0', '0x3c4'}
----------------------------------
Block 0x399
0x39a: v39a(0x2) = CONST 
0x39c: v39c = SLOAD v39a(0x2)
0x39d: v39d(0x0) = CONST 
0x3a0: v3a0(0x100000000000000000000000000000000) = CONST 
0x3b3: v3b3 = DIV v39c v3a0(0x100000000000000000000000000000000)
0x3b4: v3b4(0xffffffff) = CONST 
0x3b9: v3b9 = AND v3b4(0xffffffff) v3b3
0x3ba: v3ba = TIMESTAMP 
0x3bb: v3bb = LT v3ba v3b9
0x3bc: v3bc(0x3c4) = CONST 
0x3bf: JUMPI v3bc(0x3c4) v3bb
----------------------------------

Begin block 0x3c0
prev = {'0x399'}, next = {}
----------------------------------
Block 0x3c0
0x3c0: v3c0(0x0) = CONST 
0x3c3: REVERT v3c0(0x0) v3c0(0x0)
----------------------------------

Begin block 0x3c4
prev = {'0x399'}, next = {'0x113'}
----------------------------------
Block 0x3c4
0x3c6: v3c6(0x2) = CONST 
0x3c8: v3c8 = SLOAD v3c6(0x2)
0x3c9: v3c9(0xffffffffffffffffffffffffffffffff) = CONST 
0x3da: v3da = AND v3c9(0xffffffffffffffffffffffffffffffff) v3c8
0x3dc: JUMP v10c(0x113)
----------------------------------

Begin block 0x3dd
prev = {'0x131'}, next = {'0x13a'}
----------------------------------
Block 0x3dd
0x3de: v3de(0x2) = CONST 
0x3e0: v3e0 = SLOAD v3de(0x2)
0x3e1: v3e1(0xffffffffffffffffffffffffffffffff) = CONST 
0x3f3: v3f3 = AND v3e0 v3e1(0xffffffffffffffffffffffffffffffff)
0x3f5: v3f5(0x100000000000000000000000000000000) = CONST 
0x409: v409 = DIV v3e0 v3f5(0x100000000000000000000000000000000)
0x40a: v40a(0xffffffff) = CONST 
0x40f: v40f = AND v40a(0xffffffff) v409
0x410: v410 = TIMESTAMP 
0x411: v411 = LT v410 v40f
0x413: JUMP v133(0x13a)
----------------------------------

Begin block 0x414
prev = {'0x15f'}, next = {'0x47b'}
----------------------------------
Block 0x414
0x415: v415(0x40) = CONST 
0x418: v418 = MLOAD v415(0x40)
0x419: v419 = CALLVALUE 
0x41c: MSTORE v418 v419
0x41d: v41d(0x20) = CONST 
0x420: v420 = ADD v418 v41d(0x20)
0x423: MSTORE v420 v415(0x40)
0x424: v424 = CALLDATASIZE 
0x427: v427 = ADD v418 v415(0x40)
0x42a: MSTORE v427 v424
0x42b: v42b(0x4) = CONST 
0x42d: v42d = CALLDATALOAD v42b(0x4)
0x42f: v42f(0x24) = CONST 
0x431: v431 = CALLDATALOAD v42f(0x24)
0x437: v437 = CALLER 
0x439: v439(0x0) = CONST 
0x43c: v43c = CALLDATALOAD v439(0x0)
0x43d: v43d(0x1) = CONST 
0x43f: v43f(0xe0) = CONST 
0x441: v441(0x2) = CONST 
0x443: v443(0x100000000000000000000000000000000000000000000000000000000) = EXP v441(0x2) v43f(0xe0)
0x444: v444(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v443(0x100000000000000000000000000000000000000000000000000000000) v43d(0x1)
0x445: v445(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v444(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x446: v446 = AND v445(0xffffffff00000000000000000000000000000000000000000000000000000000) v43c
0x44a: v44a(0x60) = CONST 
0x44d: v44d = ADD v418 v44a(0x60)
0x453: CALLDATACOPY v44d v439(0x0) v424
0x454: v454(0x40) = CONST 
0x456: v456 = MLOAD v454(0x40)
0x458: v458 = ADD v44d v424
0x45b: v45b = SUB v458 v456
0x465: LOG4 v456 v45b v446 v437 v42d v431
0x466: v466(0x47b) = CONST 
0x469: v469 = CALLER 
0x46a: v46a(0x0) = CONST 
0x46c: v46c = CALLDATALOAD v46a(0x0)
0x46d: v46d(0x1) = CONST 
0x46f: v46f(0xe0) = CONST 
0x471: v471(0x2) = CONST 
0x473: v473(0x100000000000000000000000000000000000000000000000000000000) = EXP v471(0x2) v46f(0xe0)
0x474: v474(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v473(0x100000000000000000000000000000000000000000000000000000000) v46d(0x1)
0x475: v475(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v474(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x476: v476 = AND v475(0xffffffff00000000000000000000000000000000000000000000000000000000) v46c
0x477: v477(0x6a9) = CONST 
0x47a: v47a_0 = CALLPRIVATE v477(0x6a9) v476 v469 v466(0x47b)
----------------------------------

Begin block 0x47b
prev = {'0x414'}, next = {'0x482', '0x486'}
----------------------------------
Block 0x47b
0x47c: v47c = ISZERO v47a_0
0x47d: v47d = ISZERO v47c
0x47e: v47e(0x486) = CONST 
0x481: JUMPI v47e(0x486) v47d
----------------------------------

Begin block 0x482
prev = {'0x47b'}, next = {}
----------------------------------
Block 0x482
0x482: v482(0x0) = CONST 
0x485: REVERT v482(0x0) v482(0x0)
----------------------------------

Begin block 0x486
prev = {'0x47b'}, next = {'0x53b', '0x53f'}
----------------------------------
Block 0x486
0x487: v487(0x2) = CONST 
0x48a: v48a = SLOAD v487(0x2)
0x48b: v48b(0xffffffffffffffffffffffffffffffff) = CONST 
0x49c: v49c(0xffffffffffffffffffffffffffffffff00000000000000000000000000000000) = NOT v48b(0xffffffffffffffffffffffffffffffff)
0x49d: v49d = AND v49c(0xffffffffffffffffffffffffffffffff00000000000000000000000000000000) v48a
0x49e: v49e(0xffffffffffffffffffffffffffffffff) = CONST 
0x4b0: v4b0 = AND v178 v49e(0xffffffffffffffffffffffffffffffff)
0x4b1: v4b1 = OR v4b0 v49d
0x4b2: v4b2(0xffffffff00000000000000000000000000000000) = CONST 
0x4c7: v4c7(0xffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff) = NOT v4b2(0xffffffff00000000000000000000000000000000)
0x4c8: v4c8 = AND v4c7(0xffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff) v4b1
0x4c9: v4c9(0x100000000000000000000000000000000) = CONST 
0x4db: v4db(0xffffffff) = CONST 
0x4e1: v4e1 = AND v181 v4db(0xffffffff)
0x4e2: v4e2 = MUL v4e1 v4c9(0x100000000000000000000000000000000)
0x4e3: v4e3 = OR v4e2 v4c8
0x4e5: SSTORE v487(0x2) v4e3
0x4e6: v4e6(0x40) = CONST 
0x4e9: v4e9 = MLOAD v4e6(0x40)
0x4ea: v4ea(0x1817835800000000000000000000000000000000000000000000000000000000) = CONST 
0x50c: MSTORE v4e9 v4ea(0x1817835800000000000000000000000000000000000000000000000000000000)
0x50e: v50e = MLOAD v4e6(0x40)
0x50f: v50f(0x1) = CONST 
0x511: v511(0xa0) = CONST 
0x513: v513(0x2) = CONST 
0x515: v515(0x10000000000000000000000000000000000000000) = EXP v513(0x2) v511(0xa0)
0x516: v516(0xffffffffffffffffffffffffffffffffffffffff) = SUB v515(0x10000000000000000000000000000000000000000) v50f(0x1)
0x518: v518 = AND v18d v516(0xffffffffffffffffffffffffffffffffffffffff)
0x51a: v51a(0x18178358) = CONST 
0x520: v520(0x4) = CONST 
0x524: v524 = ADD v4e9 v520(0x4)
0x526: v526(0x0) = CONST 
0x52d: v52d = SUB v4e9 v50e
0x52e: v52e = ADD v52d v520(0x4)
0x533: v533 = EXTCODESIZE v518
0x534: v534 = ISZERO v533
0x536: v536 = ISZERO v534
0x537: v537(0x53f) = CONST 
0x53a: JUMPI v537(0x53f) v536
----------------------------------

Begin block 0x53b
prev = {'0x486'}, next = {}
----------------------------------
Block 0x53b
0x53b: v53b(0x0) = CONST 
0x53e: REVERT v53b(0x0) v53b(0x0)
----------------------------------

Begin block 0x53f
prev = {'0x486'}, next = {'0x54a', '0x553'}
----------------------------------
Block 0x53f
0x541: v541 = GAS 
0x542: v542 = CALL v541 v518 v526(0x0) v50e v52e v50e v526(0x0)
0x543: v543 = ISZERO v542
0x545: v545 = ISZERO v543
0x546: v546(0x553) = CONST 
0x549: JUMPI v546(0x553) v545
----------------------------------

Begin block 0x54a
prev = {'0x53f'}, next = {}
----------------------------------
Block 0x54a
0x54a: v54a = RETURNDATASIZE 
0x54b: v54b(0x0) = CONST 
0x54e: RETURNDATACOPY v54b(0x0) v54b(0x0) v54a
0x54f: v54f = RETURNDATASIZE 
0x550: v550(0x0) = CONST 
0x552: REVERT v550(0x0) v54f
----------------------------------

Begin block 0x553
prev = {'0x53f'}, next = {'0xc90x153'}
----------------------------------
Block 0x553
0x55d: JUMP v161(0xc9)
----------------------------------

Begin block 0x55e
prev = {'0x19e'}, next = {'0x574'}
----------------------------------
Block 0x55e
0x55f: v55f(0x574) = CONST 
0x562: v562 = CALLER 
0x563: v563(0x0) = CONST 
0x565: v565 = CALLDATALOAD v563(0x0)
0x566: v566(0x1) = CONST 
0x568: v568(0xe0) = CONST 
0x56a: v56a(0x2) = CONST 
0x56c: v56c(0x100000000000000000000000000000000000000000000000000000000) = EXP v56a(0x2) v568(0xe0)
0x56d: v56d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v56c(0x100000000000000000000000000000000000000000000000000000000) v566(0x1)
0x56e: v56e(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v56d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x56f: v56f = AND v56e(0xffffffff00000000000000000000000000000000000000000000000000000000) v565
0x570: v570(0x6a9) = CONST 
0x573: v573_0 = CALLPRIVATE v570(0x6a9) v56f v562 v55f(0x574)
----------------------------------

Begin block 0x574
prev = {'0x55e'}, next = {'0x57b', '0x57f'}
----------------------------------
Block 0x574
0x575: v575 = ISZERO v573_0
0x576: v576 = ISZERO v575
0x577: v577(0x57f) = CONST 
0x57a: JUMPI v577(0x57f) v576
----------------------------------

Begin block 0x57b
prev = {'0x574'}, next = {}
----------------------------------
Block 0x57b
0x57b: v57b(0x0) = CONST 
0x57e: REVERT v57b(0x0) v57b(0x0)
----------------------------------

Begin block 0x57f
prev = {'0x574'}, next = {'0xc90x192'}
----------------------------------
Block 0x57f
0x580: v580(0x0) = CONST 
0x583: v583 = SLOAD v580(0x0)
0x584: v584(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x599: v599(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v584(0xffffffffffffffffffffffffffffffffffffffff)
0x59a: v59a = AND v599(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v583
0x59b: v59b(0x1) = CONST 
0x59d: v59d(0xa0) = CONST 
0x59f: v59f(0x2) = CONST 
0x5a1: v5a1(0x10000000000000000000000000000000000000000) = EXP v59f(0x2) v59d(0xa0)
0x5a2: v5a2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5a1(0x10000000000000000000000000000000000000000) v59b(0x1)
0x5a5: v5a5 = AND v5a2(0xffffffffffffffffffffffffffffffffffffffff) v1ae
0x5a9: v5a9 = OR v5a5 v59a
0x5ac: SSTORE v580(0x0) v5a9
0x5ad: v5ad(0x40) = CONST 
0x5af: v5af = MLOAD v5ad(0x40)
0x5b1: v5b1 = AND v5a2(0xffffffffffffffffffffffffffffffffffffffff) v5a9
0x5b3: v5b3(0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4) = CONST 
0x5d5: LOG2 v5af v580(0x0) v5b3(0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4) v5b1
0x5d7: JUMP v1a0(0xc9)
----------------------------------

Begin block 0x5d8
prev = {'0x1bf'}, next = {'0x1c80x1b3'}
----------------------------------
Block 0x5d8
0x5d9: v5d9(0x1) = CONST 
0x5db: v5db = SLOAD v5d9(0x1)
0x5dc: v5dc(0x1) = CONST 
0x5de: v5de(0xa0) = CONST 
0x5e0: v5e0(0x2) = CONST 
0x5e2: v5e2(0x10000000000000000000000000000000000000000) = EXP v5e0(0x2) v5de(0xa0)
0x5e3: v5e3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5e2(0x10000000000000000000000000000000000000000) v5dc(0x1)
0x5e4: v5e4 = AND v5e3(0xffffffffffffffffffffffffffffffffffffffff) v5db
0x5e6: JUMP v1c1(0x1c8)
----------------------------------

Begin block 0x5e7
prev = {'0x1f0'}, next = {'0x1f9'}
----------------------------------
Block 0x5e7
0x5e8: v5e8(0x2) = CONST 
0x5ea: v5ea = SLOAD v5e8(0x2)
0x5eb: v5eb(0x100000000000000000000000000000000) = CONST 
0x5fe: v5fe = DIV v5ea v5eb(0x100000000000000000000000000000000)
0x5ff: v5ff(0xffffffff) = CONST 
0x604: v604 = AND v5ff(0xffffffff) v5fe
0x606: JUMP v1f2(0x1f9)
----------------------------------

Begin block 0x607
prev = {'0x21e'}, next = {'0x66e'}
----------------------------------
Block 0x607
0x608: v608(0x40) = CONST 
0x60b: v60b = MLOAD v608(0x40)
0x60c: v60c = CALLVALUE 
0x60f: MSTORE v60b v60c
0x610: v610(0x20) = CONST 
0x613: v613 = ADD v60b v610(0x20)
0x616: MSTORE v613 v608(0x40)
0x617: v617 = CALLDATASIZE 
0x61a: v61a = ADD v60b v608(0x40)
0x61d: MSTORE v61a v617
0x61e: v61e(0x4) = CONST 
0x620: v620 = CALLDATALOAD v61e(0x4)
0x622: v622(0x24) = CONST 
0x624: v624 = CALLDATALOAD v622(0x24)
0x62a: v62a = CALLER 
0x62c: v62c(0x0) = CONST 
0x62f: v62f = CALLDATALOAD v62c(0x0)
0x630: v630(0x1) = CONST 
0x632: v632(0xe0) = CONST 
0x634: v634(0x2) = CONST 
0x636: v636(0x100000000000000000000000000000000000000000000000000000000) = EXP v634(0x2) v632(0xe0)
0x637: v637(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v636(0x100000000000000000000000000000000000000000000000000000000) v630(0x1)
0x638: v638(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v637(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x639: v639 = AND v638(0xffffffff00000000000000000000000000000000000000000000000000000000) v62f
0x63d: v63d(0x60) = CONST 
0x640: v640 = ADD v60b v63d(0x60)
0x646: CALLDATACOPY v640 v62c(0x0) v617
0x647: v647(0x40) = CONST 
0x649: v649 = MLOAD v647(0x40)
0x64b: v64b = ADD v640 v617
0x64e: v64e = SUB v64b v649
0x658: LOG4 v649 v64e v639 v62a v620 v624
0x659: v659(0x66e) = CONST 
0x65c: v65c = CALLER 
0x65d: v65d(0x0) = CONST 
0x65f: v65f = CALLDATALOAD v65d(0x0)
0x660: v660(0x1) = CONST 
0x662: v662(0xe0) = CONST 
0x664: v664(0x2) = CONST 
0x666: v666(0x100000000000000000000000000000000000000000000000000000000) = EXP v664(0x2) v662(0xe0)
0x667: v667(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v666(0x100000000000000000000000000000000000000000000000000000000) v660(0x1)
0x668: v668(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v667(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x669: v669 = AND v668(0xffffffff00000000000000000000000000000000000000000000000000000000) v65f
0x66a: v66a(0x6a9) = CONST 
0x66d: v66d_0 = CALLPRIVATE v66a(0x6a9) v669 v65c v659(0x66e)
----------------------------------

Begin block 0x66e
prev = {'0x607'}, next = {'0x679', '0x675'}
----------------------------------
Block 0x66e
0x66f: v66f = ISZERO v66d_0
0x670: v670 = ISZERO v66f
0x671: v671(0x679) = CONST 
0x674: JUMPI v671(0x679) v670
----------------------------------

Begin block 0x675
prev = {'0x66e'}, next = {}
----------------------------------
Block 0x675
0x675: v675(0x0) = CONST 
0x678: REVERT v675(0x0) v675(0x0)
----------------------------------

Begin block 0x679
prev = {'0x66e'}, next = {'0xc90x212'}
----------------------------------
Block 0x679
0x67c: v67c(0x2) = CONST 
0x67f: v67f = SLOAD v67c(0x2)
0x680: v680(0xffffffff00000000000000000000000000000000) = CONST 
0x695: v695(0xffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff) = NOT v680(0xffffffff00000000000000000000000000000000)
0x696: v696 = AND v695(0xffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff) v67f
0x698: SSTORE v67c(0x2) v696
0x699: JUMP v220(0xc9)
----------------------------------

Begin block 0x69a
prev = {'0x233'}, next = {'0x1c80x227'}
----------------------------------
Block 0x69a
0x69b: v69b(0x0) = CONST 
0x69d: v69d = SLOAD v69b(0x0)
0x69e: v69e(0x1) = CONST 
0x6a0: v6a0(0xa0) = CONST 
0x6a2: v6a2(0x2) = CONST 
0x6a4: v6a4(0x10000000000000000000000000000000000000000) = EXP v6a2(0x2) v6a0(0xa0)
0x6a5: v6a5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6a4(0x10000000000000000000000000000000000000000) v69e(0x1)
0x6a6: v6a6 = AND v6a5(0xffffffffffffffffffffffffffffffffffffffff) v69d
0x6a8: JUMP v235(0x1c8)
----------------------------------

Begin block 0x6a9
prev = {}, next = {'0x6c4', '0x6bd'}
----------------------------------
function 0x6a9(v6a9arg0, v6a9arg1, v6a9arg2)
Block 0x6a9
0x6aa: v6aa(0x0) = CONST 
0x6ac: v6ac(0x1) = CONST 
0x6ae: v6ae(0xa0) = CONST 
0x6b0: v6b0(0x2) = CONST 
0x6b2: v6b2(0x10000000000000000000000000000000000000000) = EXP v6b0(0x2) v6ae(0xa0)
0x6b3: v6b3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6b2(0x10000000000000000000000000000000000000000) v6ac(0x1)
0x6b5: v6b5 = AND v6a9arg1 v6b3(0xffffffffffffffffffffffffffffffffffffffff)
0x6b6: v6b6 = ADDRESS 
0x6b7: v6b7 = EQ v6b6 v6b5
0x6b8: v6b8 = ISZERO v6b7
0x6b9: v6b9(0x6c4) = CONST 
0x6bc: JUMPI v6b9(0x6c4) v6b8
----------------------------------

Begin block 0x6bd
prev = {'0x6a9'}, next = {'0x7ac'}
----------------------------------
Block 0x6bd
0x6be: v6be(0x1) = CONST 
0x6c0: v6c0(0x7ac) = CONST 
0x6c3: JUMP v6c0(0x7ac)
----------------------------------

Begin block 0x6c4
prev = {'0x6a9'}, next = {'0x6e2', '0x6db'}
----------------------------------
Block 0x6c4
0x6c5: v6c5(0x1) = CONST 
0x6c7: v6c7 = SLOAD v6c5(0x1)
0x6c8: v6c8(0x1) = CONST 
0x6ca: v6ca(0xa0) = CONST 
0x6cc: v6cc(0x2) = CONST 
0x6ce: v6ce(0x10000000000000000000000000000000000000000) = EXP v6cc(0x2) v6ca(0xa0)
0x6cf: v6cf(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6ce(0x10000000000000000000000000000000000000000) v6c8(0x1)
0x6d2: v6d2 = AND v6cf(0xffffffffffffffffffffffffffffffffffffffff) v6a9arg1
0x6d4: v6d4 = AND v6c7 v6cf(0xffffffffffffffffffffffffffffffffffffffff)
0x6d5: v6d5 = EQ v6d4 v6d2
0x6d6: v6d6 = ISZERO v6d5
0x6d7: v6d7(0x6e2) = CONST 
0x6da: JUMPI v6d7(0x6e2) v6d6
----------------------------------

Begin block 0x6db
prev = {'0x6c4'}, next = {'0x7ac'}
----------------------------------
Block 0x6db
0x6dc: v6dc(0x1) = CONST 
0x6de: v6de(0x7ac) = CONST 
0x6e1: JUMP v6de(0x7ac)
----------------------------------

Begin block 0x6e2
prev = {'0x6c4'}, next = {'0x6f5', '0x6fc'}
----------------------------------
Block 0x6e2
0x6e3: v6e3(0x0) = CONST 
0x6e5: v6e5 = SLOAD v6e3(0x0)
0x6e6: v6e6(0x1) = CONST 
0x6e8: v6e8(0xa0) = CONST 
0x6ea: v6ea(0x2) = CONST 
0x6ec: v6ec(0x10000000000000000000000000000000000000000) = EXP v6ea(0x2) v6e8(0xa0)
0x6ed: v6ed(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6ec(0x10000000000000000000000000000000000000000) v6e6(0x1)
0x6ee: v6ee = AND v6ed(0xffffffffffffffffffffffffffffffffffffffff) v6e5
0x6ef: v6ef = ISZERO v6ee
0x6f0: v6f0 = ISZERO v6ef
0x6f1: v6f1(0x6fc) = CONST 
0x6f4: JUMPI v6f1(0x6fc) v6f0
----------------------------------

Begin block 0x6f5
prev = {'0x6e2'}, next = {'0x7ac'}
----------------------------------
Block 0x6f5
0x6f6: v6f6(0x0) = CONST 
0x6f8: v6f8(0x7ac) = CONST 
0x6fb: JUMP v6f8(0x7ac)
----------------------------------

Begin block 0x6fc
prev = {'0x6e2'}, next = {'0x779', '0x77d'}
----------------------------------
Block 0x6fc
0x6fd: v6fd(0x0) = CONST 
0x700: v700 = SLOAD v6fd(0x0)
0x701: v701(0x40) = CONST 
0x704: v704 = MLOAD v701(0x40)
0x705: v705(0xb700961300000000000000000000000000000000000000000000000000000000) = CONST 
0x727: MSTORE v704 v705(0xb700961300000000000000000000000000000000000000000000000000000000)
0x728: v728(0x1) = CONST 
0x72a: v72a(0xa0) = CONST 
0x72c: v72c(0x2) = CONST 
0x72e: v72e(0x10000000000000000000000000000000000000000) = EXP v72c(0x2) v72a(0xa0)
0x72f: v72f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v72e(0x10000000000000000000000000000000000000000) v728(0x1)
0x732: v732 = AND v72f(0xffffffffffffffffffffffffffffffffffffffff) v6a9arg1
0x733: v733(0x4) = CONST 
0x736: v736 = ADD v704 v733(0x4)
0x737: MSTORE v736 v732
0x738: v738 = ADDRESS 
0x739: v739(0x24) = CONST 
0x73c: v73c = ADD v704 v739(0x24)
0x73d: MSTORE v73c v738
0x73e: v73e(0x1) = CONST 
0x740: v740(0xe0) = CONST 
0x742: v742(0x2) = CONST 
0x744: v744(0x100000000000000000000000000000000000000000000000000000000) = EXP v742(0x2) v740(0xe0)
0x745: v745(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v744(0x100000000000000000000000000000000000000000000000000000000) v73e(0x1)
0x746: v746(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v745(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x748: v748 = AND v6a9arg0 v746(0xffffffff00000000000000000000000000000000000000000000000000000000)
0x749: v749(0x44) = CONST 
0x74c: v74c = ADD v704 v749(0x44)
0x74d: MSTORE v74c v748
0x74f: v74f = MLOAD v701(0x40)
0x753: v753 = AND v700 v72f(0xffffffffffffffffffffffffffffffffffffffff)
0x755: v755(0xb7009613) = CONST 
0x75b: v75b(0x64) = CONST 
0x75f: v75f = ADD v704 v75b(0x64)
0x761: v761(0x20) = CONST 
0x768: v768 = SUB v704 v74f
0x76b: v76b = ADD v75b(0x64) v768
0x771: v771 = EXTCODESIZE v753
0x772: v772 = ISZERO v771
0x774: v774 = ISZERO v772
0x775: v775(0x77d) = CONST 
0x778: JUMPI v775(0x77d) v774
----------------------------------

Begin block 0x779
prev = {'0x6fc'}, next = {}
----------------------------------
Block 0x779
0x779: v779(0x0) = CONST 
0x77c: REVERT v779(0x0) v779(0x0)
----------------------------------

Begin block 0x77d
prev = {'0x6fc'}, next = {'0x791', '0x788'}
----------------------------------
Block 0x77d
0x77f: v77f = GAS 
0x780: v780 = CALL v77f v753 v6fd(0x0) v74f v76b v74f v761(0x20)
0x781: v781 = ISZERO v780
0x783: v783 = ISZERO v781
0x784: v784(0x791) = CONST 
0x787: JUMPI v784(0x791) v783
----------------------------------

Begin block 0x788
prev = {'0x77d'}, next = {}
----------------------------------
Block 0x788
0x788: v788 = RETURNDATASIZE 
0x789: v789(0x0) = CONST 
0x78c: RETURNDATACOPY v789(0x0) v789(0x0) v788
0x78d: v78d = RETURNDATASIZE 
0x78e: v78e(0x0) = CONST 
0x790: REVERT v78e(0x0) v78d
----------------------------------

Begin block 0x791
prev = {'0x77d'}, next = {'0x7a3', '0x7a7'}
----------------------------------
Block 0x791
0x796: v796(0x40) = CONST 
0x798: v798 = MLOAD v796(0x40)
0x799: v799 = RETURNDATASIZE 
0x79a: v79a(0x20) = CONST 
0x79d: v79d = LT v799 v79a(0x20)
0x79e: v79e = ISZERO v79d
0x79f: v79f(0x7a7) = CONST 
0x7a2: JUMPI v79f(0x7a7) v79e
----------------------------------

Begin block 0x7a3
prev = {'0x791'}, next = {}
----------------------------------
Block 0x7a3
0x7a3: v7a3(0x0) = CONST 
0x7a6: REVERT v7a3(0x0) v7a3(0x0)
----------------------------------

Begin block 0x7a7
prev = {'0x791'}, next = {'0x7ac'}
----------------------------------
Block 0x7a7
0x7a9: v7a9 = MLOAD v798
----------------------------------

Begin block 0x7ac
prev = {'0x6f5', '0x6bd', '0x6db', '0x7a7'}, next = {}
----------------------------------
Block 0x7ac
0x7ac_0x0: v7ac_0 = PHI v6be(0x1) v6dc(0x1) v6f6(0x0) v7a9
0x7b1: RETURNPRIVATE v6a9arg2 v7ac_0
----------------------------------

Begin block 0x7e5
prev = {'0x0', '0x98'}, next = {}
----------------------------------
Block 0x7e5
0x7e6: v7e6(0xa3) = CONST 
0x7e7: CALLPRIVATE v7e6(0xa3)
----------------------------------

Begin block 0x7e8
prev = {'0xd'}, next = {}
----------------------------------
Block 0x7e8
0x7e9: v7e9(0xa8) = CONST 
0x7ea: CALLPRIVATE v7e9(0xa8)
----------------------------------

Begin block 0x7eb
prev = {'0x40'}, next = {}
----------------------------------
Block 0x7eb
0x7ec: v7ec(0xcb) = CONST 
0x7ed: CALLPRIVATE v7ec(0xcb)
----------------------------------

Begin block 0x7ee
prev = {'0x4b'}, next = {}
----------------------------------
Block 0x7ee
0x7ef: v7ef(0xfe) = CONST 
0x7f0: CALLPRIVATE v7ef(0xfe)
----------------------------------

Begin block 0x7f1
prev = {'0x56'}, next = {}
----------------------------------
Block 0x7f1
0x7f2: v7f2(0x125) = CONST 
0x7f3: CALLPRIVATE v7f2(0x125)
----------------------------------

Begin block 0x7f4
prev = {'0x61'}, next = {}
----------------------------------
Block 0x7f4
0x7f5: v7f5(0x153) = CONST 
0x7f6: CALLPRIVATE v7f5(0x153)
----------------------------------

Begin block 0x7f7
prev = {'0x6c'}, next = {}
----------------------------------
Block 0x7f7
0x7f8: v7f8(0x192) = CONST 
0x7f9: CALLPRIVATE v7f8(0x192)
----------------------------------

Begin block 0x7fa
prev = {'0x77'}, next = {}
----------------------------------
Block 0x7fa
0x7fb: v7fb(0x1b3) = CONST 
0x7fc: CALLPRIVATE v7fb(0x1b3)
----------------------------------

Begin block 0x7fd
prev = {'0x82'}, next = {}
----------------------------------
Block 0x7fd
0x7fe: v7fe(0x1e4) = CONST 
0x7ff: CALLPRIVATE v7fe(0x1e4)
----------------------------------

Begin block 0x800
prev = {'0x8d'}, next = {}
----------------------------------
Block 0x800
0x801: v801(0x212) = CONST 
0x802: CALLPRIVATE v801(0x212)
----------------------------------

Begin block 0x803
prev = {'0x98'}, next = {}
----------------------------------
Block 0x803
0x804: v804(0x227) = CONST 
0x805: CALLPRIVATE v804(0x227)
----------------------------------
