
Begin block 0x0
prev = {}, next = {'0x10', '0xc'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x5e58', '0x1a'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x5e50: v5e50(0x5e58) = CONST 
0x5e51: JUMPI v5e50(0x5e58) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x2b', '0x5e5b'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0xfe204bd) = CONST 
0x26: v26 = EQ v21(0xfe204bd) v1f
0x5e52: v5e52(0x5e5b) = CONST 
0x5e53: JUMPI v5e52(0x5e5b) v26
----------------------------------

Begin block 0x2b
prev = {'0x1a'}, next = {'0x36', '0x5e5e'}
----------------------------------
Block 0x2b
0x2c: v2c(0x56c40ab5) = CONST 
0x31: v31 = EQ v2c(0x56c40ab5) v1f
0x5e54: v5e54(0x5e5e) = CONST 
0x5e55: JUMPI v5e54(0x5e5e) v31
----------------------------------

Begin block 0x36
prev = {'0x2b'}, next = {'0x5e58', '0x5e61'}
----------------------------------
Block 0x36
0x37: v37(0xb5301cfc) = CONST 
0x3c: v3c = EQ v37(0xb5301cfc) v1f
0x5e56: v5e56(0x5e61) = CONST 
0x5e57: JUMPI v5e56(0x5e61) v3c
----------------------------------

Begin block 0x41
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x41
0x42: v42(0x0) = CONST 
0x45: REVERT v42(0x0) v42(0x0)
----------------------------------

Begin block 0x46
prev = {}, next = {'0x16c'}
----------------------------------
function getMolochCount()()
Block 0x46
0x47: v47(0x4e) = CONST 
0x4a: v4a(0x16c) = CONST 
0x4d: JUMP v4a(0x16c)
----------------------------------

Begin block 0x4e
prev = {'0x16c'}, next = {}
----------------------------------
Block 0x4e
0x4f: v4f(0x40) = CONST 
0x52: v52 = MLOAD v4f(0x40)
0x55: MSTORE v52 v16f
0x56: v56 = MLOAD v4f(0x40)
0x5a: v5a = SUB v52 v56
0x5b: v5b(0x20) = CONST 
0x5d: v5d = ADD v5b(0x20) v5a
0x5f: RETURN v56 v5d
----------------------------------

Begin block 0x60
prev = {}, next = {'0x73', '0x77'}
----------------------------------
function 0x56c40ab5()
Block 0x60
0x61: v61(0x131) = CONST 
0x64: v64(0x4) = CONST 
0x67: v67 = CALLDATASIZE 
0x68: v68 = SUB v67 v64(0x4)
0x69: v69(0x100) = CONST 
0x6d: v6d = LT v68 v69(0x100)
0x6e: v6e = ISZERO v6d
0x6f: v6f(0x77) = CONST 
0x72: JUMPI v6f(0x77) v6e
----------------------------------

Begin block 0x73
prev = {'0x60'}, next = {}
----------------------------------
Block 0x73
0x73: v73(0x0) = CONST 
0x76: REVERT v73(0x0) v73(0x0)
----------------------------------

Begin block 0x77
prev = {'0x60'}, next = {'0x9e', '0xa2'}
----------------------------------
Block 0x77
0x78: v78(0x1) = CONST 
0x7a: v7a(0x1) = CONST 
0x7c: v7c(0xa0) = CONST 
0x7e: v7e(0x10000000000000000000000000000000000000000) = SHL v7c(0xa0) v7a(0x1)
0x7f: v7f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e(0x10000000000000000000000000000000000000000) v78(0x1)
0x81: v81 = CALLDATALOAD v64(0x4)
0x82: v82 = AND v81 v7f(0xffffffffffffffffffffffffffffffffffffffff)
0x86: v86 = ADD v64(0x4) v68
0x88: v88(0x40) = CONST 
0x8b: v8b = ADD v64(0x4) v88(0x40)
0x8c: v8c(0x20) = CONST 
0x8f: v8f = ADD v64(0x4) v8c(0x20)
0x90: v90 = CALLDATALOAD v8f
0x91: v91(0x100000000) = CONST 
0x98: v98 = GT v90 v91(0x100000000)
0x99: v99 = ISZERO v98
0x9a: v9a(0xa2) = CONST 
0x9d: JUMPI v9a(0xa2) v99
----------------------------------

Begin block 0x9e
prev = {'0x77'}, next = {}
----------------------------------
Block 0x9e
0x9e: v9e(0x0) = CONST 
0xa1: REVERT v9e(0x0) v9e(0x0)
----------------------------------

Begin block 0xa2
prev = {'0x77'}, next = {'0xb4', '0xb0'}
----------------------------------
Block 0xa2
0xa4: va4 = ADD v64(0x4) v90
0xa6: va6(0x20) = CONST 
0xa9: va9 = ADD va4 va6(0x20)
0xaa: vaa = GT va9 v86
0xab: vab = ISZERO vaa
0xac: vac(0xb4) = CONST 
0xaf: JUMPI vac(0xb4) vab
----------------------------------

Begin block 0xb0
prev = {'0xa2'}, next = {}
----------------------------------
Block 0xb0
0xb0: vb0(0x0) = CONST 
0xb3: REVERT vb0(0x0) vb0(0x0)
----------------------------------

Begin block 0xb4
prev = {'0xa2'}, next = {'0xd2', '0xd6'}
----------------------------------
Block 0xb4
0xb6: vb6 = CALLDATALOAD va4
0xb8: vb8(0x20) = CONST 
0xba: vba = ADD vb8(0x20) va4
0xbd: vbd(0x20) = CONST 
0xc0: vc0 = MUL vb6 vbd(0x20)
0xc2: vc2 = ADD vba vc0
0xc3: vc3 = GT vc2 v86
0xc4: vc4(0x100000000) = CONST 
0xcb: vcb = GT vb6 vc4(0x100000000)
0xcc: vcc = OR vcb vc3
0xcd: vcd = ISZERO vcc
0xce: vce(0xd6) = CONST 
0xd1: JUMPI vce(0xd6) vcd
----------------------------------

Begin block 0xd2
prev = {'0xb4'}, next = {}
----------------------------------
Block 0xd2
0xd2: vd2(0x0) = CONST 
0xd5: REVERT vd2(0x0) vd2(0x0)
----------------------------------

Begin block 0xd6
prev = {'0xb4'}, next = {'0x172'}
----------------------------------
Block 0xd6
0xdb: vdb(0x20) = CONST 
0xdd: vdd = MUL vdb(0x20) vb6
0xde: vde(0x20) = CONST 
0xe0: ve0 = ADD vde(0x20) vdd
0xe1: ve1(0x40) = CONST 
0xe3: ve3 = MLOAD ve1(0x40)
0xe6: ve6 = ADD ve3 ve0
0xe7: ve7(0x40) = CONST 
0xe9: MSTORE ve7(0x40) ve6
0xf1: MSTORE ve3 vb6
0xf2: vf2(0x20) = CONST 
0xf4: vf4 = ADD vf2(0x20) ve3
0xf7: vf7(0x20) = CONST 
0xf9: vf9 = MUL vf7(0x20) vb6
0xfd: CALLDATACOPY vf4 vba vf9
0xfe: vfe(0x0) = CONST 
0x101: v101 = ADD vf4 vf9
0x105: MSTORE v101 vfe(0x0)
0x10c: v10c = CALLDATALOAD v8b
0x111: v111(0x20) = CONST 
0x114: v114 = ADD v8b v111(0x20)
0x115: v115 = CALLDATALOAD v114
0x117: v117(0x40) = CONST 
0x11a: v11a = ADD v8b v117(0x40)
0x11b: v11b = CALLDATALOAD v11a
0x11d: v11d(0x60) = CONST 
0x120: v120 = ADD v8b v11d(0x60)
0x121: v121 = CALLDATALOAD v120
0x123: v123(0x80) = CONST 
0x126: v126 = ADD v8b v123(0x80)
0x127: v127 = CALLDATALOAD v126
0x129: v129(0xa0) = CONST 
0x12b: v12b = ADD v129(0xa0) v8b
0x12c: v12c = CALLDATALOAD v12b
0x12d: v12d(0x172) = CONST 
0x130: JUMP v12d(0x172)
----------------------------------

Begin block 0x131
prev = {'0x22d'}, next = {}
----------------------------------
Block 0x131
0x132: STOP 
----------------------------------

Begin block 0x133
prev = {}, next = {'0x149', '0x145'}
----------------------------------
function 0xb5301cfc()
Block 0x133
0x134: v134(0x150) = CONST 
0x137: v137(0x4) = CONST 
0x13a: v13a = CALLDATASIZE 
0x13b: v13b = SUB v13a v137(0x4)
0x13c: v13c(0x20) = CONST 
0x13f: v13f = LT v13b v13c(0x20)
0x140: v140 = ISZERO v13f
0x141: v141(0x149) = CONST 
0x144: JUMPI v141(0x149) v140
----------------------------------

Begin block 0x145
prev = {'0x133'}, next = {}
----------------------------------
Block 0x145
0x145: v145(0x0) = CONST 
0x148: REVERT v145(0x0) v145(0x0)
----------------------------------

Begin block 0x149
prev = {'0x133'}, next = {'0x2c1'}
----------------------------------
Block 0x149
0x14b: v14b = CALLDATALOAD v137(0x4)
0x14c: v14c(0x2c1) = CONST 
0x14f: JUMP v14c(0x2c1)
----------------------------------

Begin block 0x150
prev = {'0x2ce'}, next = {}
----------------------------------
Block 0x150
0x151: v151(0x40) = CONST 
0x154: v154 = MLOAD v151(0x40)
0x155: v155(0x1) = CONST 
0x157: v157(0x1) = CONST 
0x159: v159(0xa0) = CONST 
0x15b: v15b(0x10000000000000000000000000000000000000000) = SHL v159(0xa0) v157(0x1)
0x15c: v15c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v15b(0x10000000000000000000000000000000000000000) v155(0x1)
0x15f: v15f = AND v2e3 v15c(0xffffffffffffffffffffffffffffffffffffffff)
0x161: MSTORE v154 v15f
0x162: v162 = MLOAD v151(0x40)
0x166: v166 = SUB v154 v162
0x167: v167(0x20) = CONST 
0x169: v169 = ADD v167(0x20) v166
0x16b: RETURN v162 v169
----------------------------------

Begin block 0x16c
prev = {'0x46'}, next = {'0x4e'}
----------------------------------
Block 0x16c
0x16d: v16d(0x1) = CONST 
0x16f: v16f = SLOAD v16d(0x1)
0x171: JUMP v47(0x4e)
----------------------------------

Begin block 0x172
prev = {'0xd6'}, next = {'0x2e8'}
----------------------------------
Block 0x172
0x17b: v17b(0x40) = CONST 
0x17d: v17d = MLOAD v17b(0x40)
0x17e: v17e(0x186) = CONST 
0x182: v182(0x2e8) = CONST 
0x185: JUMP v182(0x2e8)
----------------------------------

Begin block 0x186
prev = {'0x2e8'}, next = {'0x1e7'}
----------------------------------
Block 0x186
0x189: v189(0x1) = CONST 
0x18b: v18b(0x1) = CONST 
0x18d: v18d(0xa0) = CONST 
0x18f: v18f(0x10000000000000000000000000000000000000000) = SHL v18d(0xa0) v18b(0x1)
0x190: v190(0xffffffffffffffffffffffffffffffffffffffff) = SUB v18f(0x10000000000000000000000000000000000000000) v189(0x1)
0x191: v191 = AND v190(0xffffffffffffffffffffffffffffffffffffffff) v82
0x192: v192(0x1) = CONST 
0x194: v194(0x1) = CONST 
0x196: v196(0xa0) = CONST 
0x198: v198(0x10000000000000000000000000000000000000000) = SHL v196(0xa0) v194(0x1)
0x199: v199(0xffffffffffffffffffffffffffffffffffffffff) = SUB v198(0x10000000000000000000000000000000000000000) v192(0x1)
0x19a: v19a = AND v199(0xffffffffffffffffffffffffffffffffffffffff) v191
0x19c: MSTORE v2f3 v19a
0x19d: v19d(0x20) = CONST 
0x19f: v19f = ADD v19d(0x20) v2f3
0x1a1: v1a1(0x20) = CONST 
0x1a3: v1a3 = ADD v1a1(0x20) v19f
0x1a6: MSTORE v1a3 v10c
0x1a7: v1a7(0x20) = CONST 
0x1a9: v1a9 = ADD v1a7(0x20) v1a3
0x1ac: MSTORE v1a9 v115
0x1ad: v1ad(0x20) = CONST 
0x1af: v1af = ADD v1ad(0x20) v1a9
0x1b2: MSTORE v1af v11b
0x1b3: v1b3(0x20) = CONST 
0x1b5: v1b5 = ADD v1b3(0x20) v1af
0x1b8: MSTORE v1b5 v121
0x1b9: v1b9(0x20) = CONST 
0x1bb: v1bb = ADD v1b9(0x20) v1b5
0x1be: MSTORE v1bb v127
0x1bf: v1bf(0x20) = CONST 
0x1c1: v1c1 = ADD v1bf(0x20) v1bb
0x1c4: MSTORE v1c1 v12c
0x1c5: v1c5(0x20) = CONST 
0x1c7: v1c7 = ADD v1c5(0x20) v1c1
0x1ca: v1ca = SUB v1c7 v2f3
0x1cc: MSTORE v19f v1ca
0x1d0: v1d0 = MLOAD ve3
0x1d2: MSTORE v1c7 v1d0
0x1d3: v1d3(0x20) = CONST 
0x1d5: v1d5 = ADD v1d3(0x20) v1c7
0x1d9: v1d9 = MLOAD ve3
0x1db: v1db(0x20) = CONST 
0x1dd: v1dd = ADD v1db(0x20) ve3
0x1df: v1df(0x20) = CONST 
0x1e1: v1e1 = MUL v1df(0x20) v1d9
0x1e5: v1e5(0x0) = CONST 
----------------------------------

Begin block 0x1e7
prev = {'0x1f0', '0x186'}, next = {'0x1ff', '0x1f0'}
----------------------------------
Block 0x1e7
0x1e7_0x0: v1e7_0 = PHI v1e5(0x0) v1fa
0x1ea: v1ea = LT v1e7_0 v1e1
0x1eb: v1eb = ISZERO v1ea
0x1ec: v1ec(0x1ff) = CONST 
0x1ef: JUMPI v1ec(0x1ff) v1eb
----------------------------------

Begin block 0x1f0
prev = {'0x1e7'}, next = {'0x1e7'}
----------------------------------
Block 0x1f0
0x1f0_0x0: v1f0_0 = PHI v1e5(0x0) v1fa
0x1f2: v1f2 = ADD v1f0_0 v1dd
0x1f3: v1f3 = MLOAD v1f2
0x1f6: v1f6 = ADD v1f0_0 v1d5
0x1f7: MSTORE v1f6 v1f3
0x1f8: v1f8(0x20) = CONST 
0x1fa: v1fa = ADD v1f8(0x20) v1f0_0
0x1fb: v1fb(0x1e7) = CONST 
0x1fe: JUMP v1fb(0x1e7)
----------------------------------

Begin block 0x1ff
prev = {'0x1e7'}, next = {'0x224', '0x22d'}
----------------------------------
Block 0x1ff
0x206: v206 = ADD v1e1 v1d5
0x212: v212(0x40) = CONST 
0x214: v214 = MLOAD v212(0x40)
0x217: v217 = SUB v206 v214
0x219: v219(0x0) = CONST 
0x21b: v21b = CREATE v219(0x0) v214 v217
0x21d: v21d = ISZERO v21b
0x21f: v21f = ISZERO v21d
0x220: v220(0x22d) = CONST 
0x223: JUMPI v220(0x22d) v21f
----------------------------------

Begin block 0x224
prev = {'0x1ff'}, next = {}
----------------------------------
Block 0x224
0x224: v224 = RETURNDATASIZE 
0x225: v225(0x0) = CONST 
0x228: RETURNDATACOPY v225(0x0) v225(0x0) v224
0x229: v229 = RETURNDATASIZE 
0x22a: v22a(0x0) = CONST 
0x22c: REVERT v22a(0x0) v229
----------------------------------

Begin block 0x22d
prev = {'0x1ff'}, next = {'0x131'}
----------------------------------
Block 0x22d
0x22f: v22f(0x0) = CONST 
0x232: v232 = SLOAD v22f(0x0)
0x233: v233(0x1) = CONST 
0x235: v235(0x1) = CONST 
0x237: v237(0xa0) = CONST 
0x239: v239(0x10000000000000000000000000000000000000000) = SHL v237(0xa0) v235(0x1)
0x23a: v23a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v239(0x10000000000000000000000000000000000000000) v233(0x1)
0x23d: v23d = AND v23a(0xffffffffffffffffffffffffffffffffffffffff) v21b
0x23e: v23e(0x1) = CONST 
0x240: v240(0x1) = CONST 
0x242: v242(0xa0) = CONST 
0x244: v244(0x10000000000000000000000000000000000000000) = SHL v242(0xa0) v240(0x1)
0x245: v245(0xffffffffffffffffffffffffffffffffffffffff) = SUB v244(0x10000000000000000000000000000000000000000) v23e(0x1)
0x246: v246(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v245(0xffffffffffffffffffffffffffffffffffffffff)
0x249: v249 = AND v246(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v232
0x24a: v24a = OR v249 v23d
0x24d: SSTORE v22f(0x0) v24a
0x24e: v24e(0x1) = CONST 
0x251: v251 = SLOAD v24e(0x1)
0x254: v254 = ADD v24e(0x1) v251
0x256: SSTORE v24e(0x1) v254
0x259: MSTORE v22f(0x0) v24e(0x1)
0x25a: v25a(0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6) = CONST 
0x27b: v27b = ADD v25a(0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6) v251
0x27d: v27d = SLOAD v27b
0x280: v280 = AND v246(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v27d
0x283: v283 = AND v23a(0xffffffffffffffffffffffffffffffffffffffff) v24a
0x284: v284 = OR v283 v280
0x286: SSTORE v27b v284
0x288: v288 = SLOAD v22f(0x0)
0x289: v289(0x40) = CONST 
0x28b: v28b = MLOAD v289(0x40)
0x28e: v28e = AND v23a(0xffffffffffffffffffffffffffffffffffffffff) v82
0x293: v293 = AND v23a(0xffffffffffffffffffffffffffffffffffffffff) v288
0x295: v295(0x5d117058594e38d35f98a79b5e9cbcd9fa0597fad786e2826bc4f290a0f5d4a7) = CONST 
0x2b7: LOG3 v28b v22f(0x0) v295(0x5d117058594e38d35f98a79b5e9cbcd9fa0597fad786e2826bc4f290a0f5d4a7) v293 v28e
0x2c0: JUMP v61(0x131)
----------------------------------

Begin block 0x2c1
prev = {'0x149'}, next = {'0x2cd', '0x2ce'}
----------------------------------
Block 0x2c1
0x2c2: v2c2(0x1) = CONST 
0x2c6: v2c6 = SLOAD v2c2(0x1)
0x2c8: v2c8 = LT v14b v2c6
0x2c9: v2c9(0x2ce) = CONST 
0x2cc: JUMPI v2c9(0x2ce) v2c8
----------------------------------

Begin block 0x2cd
prev = {'0x2c1'}, next = {}
----------------------------------
Block 0x2cd
0x2cd: THROW 
----------------------------------

Begin block 0x2ce
prev = {'0x2c1'}, next = {'0x150'}
----------------------------------
Block 0x2ce
0x2cf: v2cf(0x0) = CONST 
0x2d3: MSTORE v2cf(0x0) v2c2(0x1)
0x2d4: v2d4(0x20) = CONST 
0x2d8: v2d8 = SHA3 v2cf(0x0) v2d4(0x20)
0x2d9: v2d9 = ADD v2d8 v14b
0x2da: v2da = SLOAD v2d9
0x2db: v2db(0x1) = CONST 
0x2dd: v2dd(0x1) = CONST 
0x2df: v2df(0xa0) = CONST 
0x2e1: v2e1(0x10000000000000000000000000000000000000000) = SHL v2df(0xa0) v2dd(0x1)
0x2e2: v2e2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2e1(0x10000000000000000000000000000000000000000) v2db(0x1)
0x2e3: v2e3 = AND v2e2(0xffffffffffffffffffffffffffffffffffffffff) v2da
0x2e7: JUMP v134(0x150)
----------------------------------

Begin block 0x2e8
prev = {'0x172'}, next = {'0x186'}
----------------------------------
Block 0x2e8
0x2e9: v2e9(0x5b25) = CONST 
0x2ed: v2ed(0x2f7) = CONST 
0x2f2: CODECOPY v17d v2ed(0x2f7) v2e9(0x5b25)
0x2f3: v2f3 = ADD v2e9(0x5b25) v17d
0x2f5: JUMP v17e(0x186)
----------------------------------

Begin block 0x5e58
prev = {'0x36', '0x10'}, next = {}
----------------------------------
Block 0x5e58
0x5e59: v5e59(0x41) = CONST 
0x5e5a: CALLPRIVATE v5e59(0x41)
----------------------------------

Begin block 0x5e5b
prev = {'0x1a'}, next = {}
----------------------------------
Block 0x5e5b
0x5e5c: v5e5c(0x46) = CONST 
0x5e5d: CALLPRIVATE v5e5c(0x46)
----------------------------------

Begin block 0x5e5e
prev = {'0x2b'}, next = {}
----------------------------------
Block 0x5e5e
0x5e5f: v5e5f(0x60) = CONST 
0x5e60: CALLPRIVATE v5e5f(0x60)
----------------------------------

Begin block 0x5e61
prev = {'0x36'}, next = {}
----------------------------------
Block 0x5e61
0x5e62: v5e62(0x133) = CONST 
0x5e63: CALLPRIVATE v5e62(0x133)
----------------------------------
