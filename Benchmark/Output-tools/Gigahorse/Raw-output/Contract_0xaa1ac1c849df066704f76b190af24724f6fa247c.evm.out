
Begin block 0x0
prev = {}, next = {'0xeef', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0xecb: vecb(0xeef) = CONST 
0xecc: JUMPI vecb(0xeef) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x95', '0x1e'}
----------------------------------
Block 0xd
0xd: vd(0x0) = CONST 
0xf: vf = CALLDATALOAD vd(0x0)
0x10: v10(0xe0) = CONST 
0x12: v12 = SHR v10(0xe0) vf
0x14: v14(0x8815eb39) = CONST 
0x19: v19 = GT v14(0x8815eb39) v12
0x1a: v1a(0x95) = CONST 
0x1d: JUMPI v1a(0x95) v19
----------------------------------

Begin block 0x1e
prev = {'0xd'}, next = {'0x29', '0x64'}
----------------------------------
Block 0x1e
0x1f: v1f(0xc4590d3f) = CONST 
0x24: v24 = GT v1f(0xc4590d3f) v12
0x25: v25(0x64) = CONST 
0x28: JUMPI v25(0x64) v24
----------------------------------

Begin block 0x29
prev = {'0x1e'}, next = {'0xf16', '0x34'}
----------------------------------
Block 0x29
0x2a: v2a(0xc4590d3f) = CONST 
0x2f: v2f = EQ v2a(0xc4590d3f) v12
0xecd: vecd(0xf16) = CONST 
0xece: JUMPI vecd(0xf16) v2f
----------------------------------

Begin block 0x34
prev = {'0x29'}, next = {'0x3f', '0xf19'}
----------------------------------
Block 0x34
0x35: v35(0xcce987d4) = CONST 
0x3a: v3a = EQ v35(0xcce987d4) v12
0xecf: vecf(0xf19) = CONST 
0xed0: JUMPI vecf(0xf19) v3a
----------------------------------

Begin block 0x3f
prev = {'0x34'}, next = {'0xf1c', '0x4a'}
----------------------------------
Block 0x3f
0x40: v40(0xd950f365) = CONST 
0x45: v45 = EQ v40(0xd950f365) v12
0xed1: ved1(0xf1c) = CONST 
0xed2: JUMPI ved1(0xf1c) v45
----------------------------------

Begin block 0x4a
prev = {'0x3f'}, next = {'0xf1f', '0x55'}
----------------------------------
Block 0x4a
0x4b: v4b(0xfa5d5429) = CONST 
0x50: v50 = EQ v4b(0xfa5d5429) v12
0xed3: ved3(0xf1f) = CONST 
0xed4: JUMPI ved3(0xf1f) v50
----------------------------------

Begin block 0x55
prev = {'0x4a'}, next = {'0x60', '0xf22'}
----------------------------------
Block 0x55
0x56: v56(0xfdc5d522) = CONST 
0x5b: v5b = EQ v56(0xfdc5d522) v12
0xed5: ved5(0xf22) = CONST 
0xed6: JUMPI ved5(0xf22) v5b
----------------------------------

Begin block 0x60
prev = {'0x55'}, next = {'0xfe0x0'}
----------------------------------
Block 0x60
0x60: v60(0xfe) = CONST 
0x63: JUMP v60(0xfe)
----------------------------------

Begin block 0x64
prev = {'0x1e'}, next = {'0xf0a', '0x70'}
----------------------------------
Block 0x64
0x66: v66(0x8815eb39) = CONST 
0x6b: v6b = EQ v66(0x8815eb39) v12
0xed7: ved7(0xf0a) = CONST 
0xed8: JUMPI ved7(0xf0a) v6b
----------------------------------

Begin block 0x70
prev = {'0x64'}, next = {'0x7b', '0xf0d'}
----------------------------------
Block 0x70
0x71: v71(0x8da5cb5b) = CONST 
0x76: v76 = EQ v71(0x8da5cb5b) v12
0xed9: ved9(0xf0d) = CONST 
0xeda: JUMPI ved9(0xf0d) v76
----------------------------------

Begin block 0x7b
prev = {'0x70'}, next = {'0x86', '0xf10'}
----------------------------------
Block 0x7b
0x7c: v7c(0xa6f9dae1) = CONST 
0x81: v81 = EQ v7c(0xa6f9dae1) v12
0xedb: vedb(0xf10) = CONST 
0xedc: JUMPI vedb(0xf10) v81
----------------------------------

Begin block 0x86
prev = {'0x7b'}, next = {'0x91', '0xf13'}
----------------------------------
Block 0x86
0x87: v87(0xc1075329) = CONST 
0x8c: v8c = EQ v87(0xc1075329) v12
0xedd: vedd(0xf13) = CONST 
0xede: JUMPI vedd(0xf13) v8c
----------------------------------

Begin block 0x91
prev = {'0x86'}, next = {'0xfe0x0'}
----------------------------------
Block 0x91
0x91: v91(0xfe) = CONST 
0x94: JUMP v91(0xfe)
----------------------------------

Begin block 0x95
prev = {'0xd'}, next = {'0xd1', '0xa1'}
----------------------------------
Block 0x95
0x97: v97(0x338246e2) = CONST 
0x9c: v9c = GT v97(0x338246e2) v12
0x9d: v9d(0xd1) = CONST 
0xa0: JUMPI v9d(0xd1) v9c
----------------------------------

Begin block 0xa1
prev = {'0x95'}, next = {'0xac', '0xefe'}
----------------------------------
Block 0xa1
0xa2: va2(0x338246e2) = CONST 
0xa7: va7 = EQ va2(0x338246e2) v12
0xedf: vedf(0xefe) = CONST 
0xee0: JUMPI vedf(0xefe) va7
----------------------------------

Begin block 0xac
prev = {'0xa1'}, next = {'0xb7', '0xf01'}
----------------------------------
Block 0xac
0xad: vad(0x428eecf0) = CONST 
0xb2: vb2 = EQ vad(0x428eecf0) v12
0xee1: vee1(0xf01) = CONST 
0xee2: JUMPI vee1(0xf01) vb2
----------------------------------

Begin block 0xb7
prev = {'0xac'}, next = {'0xc2', '0xf04'}
----------------------------------
Block 0xb7
0xb8: vb8(0x46fcff4c) = CONST 
0xbd: vbd = EQ vb8(0x46fcff4c) v12
0xee3: vee3(0xf04) = CONST 
0xee4: JUMPI vee3(0xf04) vbd
----------------------------------

Begin block 0xc2
prev = {'0xb7'}, next = {'0xf07', '0xcd'}
----------------------------------
Block 0xc2
0xc3: vc3(0x81fd3f0b) = CONST 
0xc8: vc8 = EQ vc3(0x81fd3f0b) v12
0xee5: vee5(0xf07) = CONST 
0xee6: JUMPI vee5(0xf07) vc8
----------------------------------

Begin block 0xcd
prev = {'0xc2'}, next = {'0xfe0x0'}
----------------------------------
Block 0xcd
0xcd: vcd(0xfe) = CONST 
0xd0: JUMP vcd(0xfe)
----------------------------------

Begin block 0xd1
prev = {'0x95'}, next = {'0xef2', '0xdd'}
----------------------------------
Block 0xd1
0xd3: vd3(0x1952e39c) = CONST 
0xd8: vd8 = EQ vd3(0x1952e39c) v12
0xee7: vee7(0xef2) = CONST 
0xee8: JUMPI vee7(0xef2) vd8
----------------------------------

Begin block 0xdd
prev = {'0xd1'}, next = {'0xe8', '0xef5'}
----------------------------------
Block 0xdd
0xde: vde(0x22f3e2d4) = CONST 
0xe3: ve3 = EQ vde(0x22f3e2d4) v12
0xee9: vee9(0xef5) = CONST 
0xeea: JUMPI vee9(0xef5) ve3
----------------------------------

Begin block 0xe8
prev = {'0xdd'}, next = {'0xf3', '0xef8'}
----------------------------------
Block 0xe8
0xe9: ve9(0x2750fc78) = CONST 
0xee: vee = EQ ve9(0x2750fc78) v12
0xeeb: veeb(0xef8) = CONST 
0xeec: JUMPI veeb(0xef8) vee
----------------------------------

Begin block 0xf3
prev = {'0xe8'}, next = {'0xefb', '0xeef'}
----------------------------------
Block 0xf3
0xf4: vf4(0x32dee40b) = CONST 
0xf9: vf9 = EQ vf4(0x32dee40b) v12
0xeed: veed(0xefb) = CONST 
0xeee: JUMPI veed(0xefb) vf9
----------------------------------

Begin block 0xfe
prev = {}, next = {'0x1050xfe', '0x1510xfe'}
----------------------------------
function batchLock_63efZf()()
Block 0xfe
0xff: vff = CALLDATASIZE 
0x100: v100 = ISZERO vff
0x101: v101(0x151) = CONST 
0x104: JUMPI v101(0x151) v100
----------------------------------

Begin block 0xfe0x0
prev = {'0xeef', '0x60', '0x91', '0xcd'}, next = {'0x1050x0', '0x1510x0'}
----------------------------------
Block 0xfe0x0
0xff0x0: v0ff = CALLDATASIZE 
0x1000x0: v0100 = ISZERO v0ff
0x1010x0: v0101(0x151) = CONST 
0x1040x0: JUMPI v0101(0x151) v0100
----------------------------------

Begin block 0x1050x0
prev = {'0xfe0x0'}, next = {}
----------------------------------
Block 0x1050x0
0x1050x0: v0105(0x40) = CONST 
0x1080x0: v0108 = MLOAD v0105(0x40)
0x1090x0: v0109(0x461bcd) = CONST 
0x10d0x0: v010d(0xe5) = CONST 
0x10f0x0: v010f(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v010d(0xe5) v0109(0x461bcd)
0x1110x0: MSTORE v0108 v010f(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1120x0: v0112(0x20) = CONST 
0x1140x0: v0114(0x4) = CONST 
0x1170x0: v0117 = ADD v0108 v0114(0x4)
0x1180x0: MSTORE v0117 v0112(0x20)
0x1190x0: v0119(0x1c) = CONST 
0x11b0x0: v011b(0x24) = CONST 
0x11e0x0: v011e = ADD v0108 v011b(0x24)
0x11f0x0: MSTORE v011e v0119(0x1c)
0x1200x0: v0120(0x696e76616c696420706f6f6c2066756e6374696f6e2063616c6c656400000000) = CONST 
0x1410x0: v0141(0x44) = CONST 
0x1440x0: v0144 = ADD v0108 v0141(0x44)
0x1450x0: MSTORE v0144 v0120(0x696e76616c696420706f6f6c2066756e6374696f6e2063616c6c656400000000)
0x1470x0: v0147 = MLOAD v0105(0x40)
0x14b0x0: v014b = SUB v0108 v0147
0x14c0x0: v014c(0x64) = CONST 
0x14e0x0: v014e = ADD v014c(0x64) v014b
0x1500x0: REVERT v0147 v014e
----------------------------------

Begin block 0x1050xfe
prev = {'0xfe'}, next = {}
----------------------------------
Block 0x1050xfe
0x1050xfe: vfe105(0x40) = CONST 
0x1080xfe: vfe108 = MLOAD vfe105(0x40)
0x1090xfe: vfe109(0x461bcd) = CONST 
0x10d0xfe: vfe10d(0xe5) = CONST 
0x10f0xfe: vfe10f(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vfe10d(0xe5) vfe109(0x461bcd)
0x1110xfe: MSTORE vfe108 vfe10f(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1120xfe: vfe112(0x20) = CONST 
0x1140xfe: vfe114(0x4) = CONST 
0x1170xfe: vfe117 = ADD vfe108 vfe114(0x4)
0x1180xfe: MSTORE vfe117 vfe112(0x20)
0x1190xfe: vfe119(0x1c) = CONST 
0x11b0xfe: vfe11b(0x24) = CONST 
0x11e0xfe: vfe11e = ADD vfe108 vfe11b(0x24)
0x11f0xfe: MSTORE vfe11e vfe119(0x1c)
0x1200xfe: vfe120(0x696e76616c696420706f6f6c2066756e6374696f6e2063616c6c656400000000) = CONST 
0x1410xfe: vfe141(0x44) = CONST 
0x1440xfe: vfe144 = ADD vfe108 vfe141(0x44)
0x1450xfe: MSTORE vfe144 vfe120(0x696e76616c696420706f6f6c2066756e6374696f6e2063616c6c656400000000)
0x1470xfe: vfe147 = MLOAD vfe105(0x40)
0x14b0xfe: vfe14b = SUB vfe108 vfe147
0x14c0xfe: vfe14c(0x64) = CONST 
0x14e0xfe: vfe14e = ADD vfe14c(0x64) vfe14b
0x1500xfe: REVERT vfe147 vfe14e
----------------------------------

Begin block 0x1510x0
prev = {'0xfe0x0'}, next = {'0x1640x0', '0x19e0x0'}
----------------------------------
Block 0x1510x0
0x1520x0: v0152(0x1) = CONST 
0x1540x0: v0154 = SLOAD v0152(0x1)
0x1550x0: v0155(0x1) = CONST 
0x1570x0: v0157(0x1) = CONST 
0x1590x0: v0159(0xa0) = CONST 
0x15b0x0: v015b(0x10000000000000000000000000000000000000000) = SHL v0159(0xa0) v0157(0x1)
0x15c0x0: v015c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v015b(0x10000000000000000000000000000000000000000) v0155(0x1)
0x15d0x0: v015d = AND v015c(0xffffffffffffffffffffffffffffffffffffffff) v0154
0x15e0x0: v015e = CALLER 
0x15f0x0: v015f = EQ v015e v015d
0x1600x0: v0160(0x19e) = CONST 
0x1630x0: JUMPI v0160(0x19e) v015f
----------------------------------

Begin block 0x1510xfe
prev = {'0xfe'}, next = {'0x1640xfe', '0x19e0xfe'}
----------------------------------
Block 0x1510xfe
0x1520xfe: vfe152(0x1) = CONST 
0x1540xfe: vfe154 = SLOAD vfe152(0x1)
0x1550xfe: vfe155(0x1) = CONST 
0x1570xfe: vfe157(0x1) = CONST 
0x1590xfe: vfe159(0xa0) = CONST 
0x15b0xfe: vfe15b(0x10000000000000000000000000000000000000000) = SHL vfe159(0xa0) vfe157(0x1)
0x15c0xfe: vfe15c(0xffffffffffffffffffffffffffffffffffffffff) = SUB vfe15b(0x10000000000000000000000000000000000000000) vfe155(0x1)
0x15d0xfe: vfe15d = AND vfe15c(0xffffffffffffffffffffffffffffffffffffffff) vfe154
0x15e0xfe: vfe15e = CALLER 
0x15f0xfe: vfe15f = EQ vfe15e vfe15d
0x1600xfe: vfe160(0x19e) = CONST 
0x1630xfe: JUMPI vfe160(0x19e) vfe15f
----------------------------------

Begin block 0x1640x0
prev = {'0x1510x0'}, next = {'0x19e0x0'}
----------------------------------
Block 0x1640x0
0x1640x0: v0164(0x40) = CONST 
0x1670x0: v0167 = MLOAD v0164(0x40)
0x1680x0: v0168 = CALLER 
0x16a0x0: MSTORE v0167 v0168
0x16b0x0: v016b = CALLVALUE 
0x16c0x0: v016c(0x20) = CONST 
0x16f0x0: v016f = ADD v0167 v016c(0x20)
0x1700x0: MSTORE v016f v016b
0x1720x0: v0172 = MLOAD v0164(0x40)
0x1730x0: v0173(0x5741979df5f3e491501da74d3b0a83dd2496ab1f34929865b3e190a8ad75859a) = CONST 
0x1980x0: v0198 = SUB v0167 v0172
0x19b0x0: v019b = ADD v0164(0x40) v0198
0x19d0x0: LOG1 v0172 v019b v0173(0x5741979df5f3e491501da74d3b0a83dd2496ab1f34929865b3e190a8ad75859a)
----------------------------------

Begin block 0x1640xfe
prev = {'0x1510xfe'}, next = {'0x19e0xfe'}
----------------------------------
Block 0x1640xfe
0x1640xfe: vfe164(0x40) = CONST 
0x1670xfe: vfe167 = MLOAD vfe164(0x40)
0x1680xfe: vfe168 = CALLER 
0x16a0xfe: MSTORE vfe167 vfe168
0x16b0xfe: vfe16b = CALLVALUE 
0x16c0xfe: vfe16c(0x20) = CONST 
0x16f0xfe: vfe16f = ADD vfe167 vfe16c(0x20)
0x1700xfe: MSTORE vfe16f vfe16b
0x1720xfe: vfe172 = MLOAD vfe164(0x40)
0x1730xfe: vfe173(0x5741979df5f3e491501da74d3b0a83dd2496ab1f34929865b3e190a8ad75859a) = CONST 
0x1980xfe: vfe198 = SUB vfe167 vfe172
0x19b0xfe: vfe19b = ADD vfe164(0x40) vfe198
0x19d0xfe: LOG1 vfe172 vfe19b vfe173(0x5741979df5f3e491501da74d3b0a83dd2496ab1f34929865b3e190a8ad75859a)
----------------------------------

Begin block 0x19e0x0
prev = {'0x1510x0', '0x1640x0'}, next = {}
----------------------------------
Block 0x19e0x0
0x19f0x0: STOP 
----------------------------------

Begin block 0x19e0xfe
prev = {'0x1640xfe', '0x1510xfe'}, next = {}
----------------------------------
Block 0x19e0xfe
0x19f0xfe: STOP 
----------------------------------

Begin block 0x19e0x1a0
prev = {'0x6250x1a0'}, next = {}
----------------------------------
Block 0x19e0x1a0
0x19f0x1a0: STOP 
----------------------------------

Begin block 0x19e0x25f
prev = {'0x6fe'}, next = {}
----------------------------------
Block 0x19e0x25f
0x19f0x25f: STOP 
----------------------------------

Begin block 0x19e0x396
prev = {'0x936'}, next = {}
----------------------------------
Block 0x19e0x396
0x19f0x396: STOP 
----------------------------------

Begin block 0x19e0x402
prev = {'0xb13'}, next = {}
----------------------------------
Block 0x19e0x402
0x19f0x402: STOP 
----------------------------------

Begin block 0x19e0x447
prev = {'0xcc6'}, next = {}
----------------------------------
Block 0x19e0x447
0x19f0x447: STOP 
----------------------------------

Begin block 0x19e0x48f
prev = {'0x6250x48f'}, next = {}
----------------------------------
Block 0x19e0x48f
0x19f0x48f: STOP 
----------------------------------

Begin block 0x1a0
prev = {}, next = {'0x1ac', '0x1a8'}
----------------------------------
function returnSwap(address,address,bytes,bytes32)()
Block 0x1a0
0x1a1: v1a1 = CALLVALUE 
0x1a3: v1a3 = ISZERO v1a1
0x1a4: v1a4(0x1ac) = CONST 
0x1a7: JUMPI v1a4(0x1ac) v1a3
----------------------------------

Begin block 0x1a8
prev = {'0x1a0'}, next = {}
----------------------------------
Block 0x1a8
0x1a8: v1a8(0x0) = CONST 
0x1ab: REVERT v1a8(0x0) v1a8(0x0)
----------------------------------

Begin block 0x1ac
prev = {'0x1a0'}, next = {'0x1bf', '0x1c3'}
----------------------------------
Block 0x1ac
0x1ae: v1ae(0x19e) = CONST 
0x1b1: v1b1(0x4) = CONST 
0x1b4: v1b4 = CALLDATASIZE 
0x1b5: v1b5 = SUB v1b4 v1b1(0x4)
0x1b6: v1b6(0x80) = CONST 
0x1b9: v1b9 = LT v1b5 v1b6(0x80)
0x1ba: v1ba = ISZERO v1b9
0x1bb: v1bb(0x1c3) = CONST 
0x1be: JUMPI v1bb(0x1c3) v1ba
----------------------------------

Begin block 0x1bf
prev = {'0x1ac'}, next = {}
----------------------------------
Block 0x1bf
0x1bf: v1bf(0x0) = CONST 
0x1c2: REVERT v1bf(0x0) v1bf(0x0)
----------------------------------

Begin block 0x1c3
prev = {'0x1ac'}, next = {'0x1f7', '0x1f3'}
----------------------------------
Block 0x1c3
0x1c4: v1c4(0x1) = CONST 
0x1c6: v1c6(0x1) = CONST 
0x1c8: v1c8(0xa0) = CONST 
0x1ca: v1ca(0x10000000000000000000000000000000000000000) = SHL v1c8(0xa0) v1c6(0x1)
0x1cb: v1cb(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1ca(0x10000000000000000000000000000000000000000) v1c4(0x1)
0x1cd: v1cd = CALLDATALOAD v1b1(0x4)
0x1cf: v1cf = AND v1cb(0xffffffffffffffffffffffffffffffffffffffff) v1cd
0x1d1: v1d1(0x20) = CONST 
0x1d4: v1d4 = ADD v1b1(0x4) v1d1(0x20)
0x1d5: v1d5 = CALLDATALOAD v1d4
0x1d8: v1d8 = AND v1cb(0xffffffffffffffffffffffffffffffffffffffff) v1d5
0x1db: v1db = ADD v1b1(0x4) v1b5
0x1dd: v1dd(0x60) = CONST 
0x1e0: v1e0 = ADD v1b1(0x4) v1dd(0x60)
0x1e1: v1e1(0x40) = CONST 
0x1e4: v1e4 = ADD v1b1(0x4) v1e1(0x40)
0x1e5: v1e5 = CALLDATALOAD v1e4
0x1e6: v1e6(0x100000000) = CONST 
0x1ed: v1ed = GT v1e5 v1e6(0x100000000)
0x1ee: v1ee = ISZERO v1ed
0x1ef: v1ef(0x1f7) = CONST 
0x1f2: JUMPI v1ef(0x1f7) v1ee
----------------------------------

Begin block 0x1f3
prev = {'0x1c3'}, next = {}
----------------------------------
Block 0x1f3
0x1f3: v1f3(0x0) = CONST 
0x1f6: REVERT v1f3(0x0) v1f3(0x0)
----------------------------------

Begin block 0x1f7
prev = {'0x1c3'}, next = {'0x209', '0x205'}
----------------------------------
Block 0x1f7
0x1f9: v1f9 = ADD v1b1(0x4) v1e5
0x1fb: v1fb(0x20) = CONST 
0x1fe: v1fe = ADD v1f9 v1fb(0x20)
0x1ff: v1ff = GT v1fe v1db
0x200: v200 = ISZERO v1ff
0x201: v201(0x209) = CONST 
0x204: JUMPI v201(0x209) v200
----------------------------------

Begin block 0x205
prev = {'0x1f7'}, next = {}
----------------------------------
Block 0x205
0x205: v205(0x0) = CONST 
0x208: REVERT v205(0x0) v205(0x0)
----------------------------------

Begin block 0x209
prev = {'0x1f7'}, next = {'0x22b', '0x227'}
----------------------------------
Block 0x209
0x20b: v20b = CALLDATALOAD v1f9
0x20d: v20d(0x20) = CONST 
0x20f: v20f = ADD v20d(0x20) v1f9
0x212: v212(0x1) = CONST 
0x215: v215 = MUL v20b v212(0x1)
0x217: v217 = ADD v20f v215
0x218: v218 = GT v217 v1db
0x219: v219(0x100000000) = CONST 
0x220: v220 = GT v20b v219(0x100000000)
0x221: v221 = OR v220 v218
0x222: v222 = ISZERO v221
0x223: v223(0x22b) = CONST 
0x226: JUMPI v223(0x22b) v222
----------------------------------

Begin block 0x227
prev = {'0x209'}, next = {}
----------------------------------
Block 0x227
0x227: v227(0x0) = CONST 
0x22a: REVERT v227(0x0) v227(0x0)
----------------------------------

Begin block 0x22b
prev = {'0x209'}, next = {'0x525'}
----------------------------------
Block 0x22b
0x231: v231 = CALLDATALOAD v1e0
0x232: v232(0x525) = CONST 
0x235: JUMP v232(0x525)
----------------------------------

Begin block 0x236
prev = {}, next = {'0x242', '0x23e'}
----------------------------------
function isActive()()
Block 0x236
0x237: v237 = CALLVALUE 
0x239: v239 = ISZERO v237
0x23a: v23a(0x242) = CONST 
0x23d: JUMPI v23a(0x242) v239
----------------------------------

Begin block 0x23e
prev = {'0x236'}, next = {}
----------------------------------
Block 0x23e
0x23e: v23e(0x0) = CONST 
0x241: REVERT v23e(0x0) v23e(0x0)
----------------------------------

Begin block 0x242
prev = {'0x236'}, next = {'0x630'}
----------------------------------
Block 0x242
0x244: v244(0x24b) = CONST 
0x247: v247(0x630) = CONST 
0x24a: JUMP v247(0x630)
----------------------------------

Begin block 0x24b0x236
prev = {'0x630'}, next = {}
----------------------------------
Block 0x24b0x236
0x24c0x236: v23624c(0x40) = CONST 
0x24f0x236: v23624f = MLOAD v23624c(0x40)
0x2510x236: v236251 = ISZERO v63d
0x2520x236: v236252 = ISZERO v236251
0x2540x236: MSTORE v23624f v236252
0x2550x236: v236255 = MLOAD v23624c(0x40)
0x2590x236: v236259 = SUB v23624f v236255
0x25a0x236: v23625a(0x20) = CONST 
0x25c0x236: v23625c = ADD v23625a(0x20) v236259
0x25e0x236: RETURN v236255 v23625c
----------------------------------

Begin block 0x24b0x28b
prev = {'0x760'}, next = {}
----------------------------------
Block 0x24b0x28b
0x24c0x28b: v28b24c(0x40) = CONST 
0x24f0x28b: v28b24f = MLOAD v28b24c(0x40)
0x2510x28b: v28b251 = ISZERO v28b8c1(0x1)
0x2520x28b: v28b252 = ISZERO v28b251
0x2540x28b: MSTORE v28b24f v28b252
0x2550x28b: v28b255 = MLOAD v28b24c(0x40)
0x2590x28b: v28b259 = SUB v28b24f v28b255
0x25a0x28b: v28b25a(0x20) = CONST 
0x25c0x28b: v28b25c = ADD v28b25a(0x20) v28b259
0x25e0x28b: RETURN v28b255 v28b25c
----------------------------------

Begin block 0x24b0x30f
prev = {'0x8bf0x30f'}, next = {}
----------------------------------
Block 0x24b0x30f
0x24c0x30f: v30f24c(0x40) = CONST 
0x24f0x30f: v30f24f = MLOAD v30f24c(0x40)
0x2510x30f: v30f251 = ISZERO v30f8c1(0x1)
0x2520x30f: v30f252 = ISZERO v30f251
0x2540x30f: MSTORE v30f24f v30f252
0x2550x30f: v30f255 = MLOAD v30f24c(0x40)
0x2590x30f: v30f259 = SUB v30f24f v30f255
0x25a0x30f: v30f25a(0x20) = CONST 
0x25c0x30f: v30f25c = ADD v30f25a(0x20) v30f259
0x25e0x30f: RETURN v30f255 v30f25c
----------------------------------

Begin block 0x24b0x3c9
prev = {'0x8bf0x3c9'}, next = {}
----------------------------------
Block 0x24b0x3c9
0x24c0x3c9: v3c924c(0x40) = CONST 
0x24f0x3c9: v3c924f = MLOAD v3c924c(0x40)
0x2510x3c9: v3c9251 = ISZERO v3c98c1(0x1)
0x2520x3c9: v3c9252 = ISZERO v3c9251
0x2540x3c9: MSTORE v3c924f v3c9252
0x2550x3c9: v3c9255 = MLOAD v3c924c(0x40)
0x2590x3c9: v3c9259 = SUB v3c924f v3c9255
0x25a0x3c9: v3c925a(0x20) = CONST 
0x25c0x3c9: v3c925c = ADD v3c925a(0x20) v3c9259
0x25e0x3c9: RETURN v3c9255 v3c925c
----------------------------------

Begin block 0x25f
prev = {}, next = {'0x267', '0x26b'}
----------------------------------
function setIsActive(bool)()
Block 0x25f
0x260: v260 = CALLVALUE 
0x262: v262 = ISZERO v260
0x263: v263(0x26b) = CONST 
0x266: JUMPI v263(0x26b) v262
----------------------------------

Begin block 0x267
prev = {'0x25f'}, next = {}
----------------------------------
Block 0x267
0x267: v267(0x0) = CONST 
0x26a: REVERT v267(0x0) v267(0x0)
----------------------------------

Begin block 0x26b
prev = {'0x25f'}, next = {'0x27e', '0x282'}
----------------------------------
Block 0x26b
0x26d: v26d(0x19e) = CONST 
0x270: v270(0x4) = CONST 
0x273: v273 = CALLDATASIZE 
0x274: v274 = SUB v273 v270(0x4)
0x275: v275(0x20) = CONST 
0x278: v278 = LT v274 v275(0x20)
0x279: v279 = ISZERO v278
0x27a: v27a(0x282) = CONST 
0x27d: JUMPI v27a(0x282) v279
----------------------------------

Begin block 0x27e
prev = {'0x26b'}, next = {}
----------------------------------
Block 0x27e
0x27e: v27e(0x0) = CONST 
0x281: REVERT v27e(0x0) v27e(0x0)
----------------------------------

Begin block 0x282
prev = {'0x26b'}, next = {'0x640'}
----------------------------------
Block 0x282
0x284: v284 = CALLDATALOAD v270(0x4)
0x285: v285 = ISZERO v284
0x286: v286 = ISZERO v285
0x287: v287(0x640) = CONST 
0x28a: JUMP v287(0x640)
----------------------------------

Begin block 0x28b
prev = {}, next = {'0x293', '0x297'}
----------------------------------
function withdrawAllFunds(address)()
Block 0x28b
0x28c: v28c = CALLVALUE 
0x28e: v28e = ISZERO v28c
0x28f: v28f(0x297) = CONST 
0x292: JUMPI v28f(0x297) v28e
----------------------------------

Begin block 0x293
prev = {'0x28b'}, next = {}
----------------------------------
Block 0x293
0x293: v293(0x0) = CONST 
0x296: REVERT v293(0x0) v293(0x0)
----------------------------------

Begin block 0x297
prev = {'0x28b'}, next = {'0x2ae', '0x2aa'}
----------------------------------
Block 0x297
0x299: v299(0x24b) = CONST 
0x29c: v29c(0x4) = CONST 
0x29f: v29f = CALLDATASIZE 
0x2a0: v2a0 = SUB v29f v29c(0x4)
0x2a1: v2a1(0x20) = CONST 
0x2a4: v2a4 = LT v2a0 v2a1(0x20)
0x2a5: v2a5 = ISZERO v2a4
0x2a6: v2a6(0x2ae) = CONST 
0x2a9: JUMPI v2a6(0x2ae) v2a5
----------------------------------

Begin block 0x2aa
prev = {'0x297'}, next = {}
----------------------------------
Block 0x2aa
0x2aa: v2aa(0x0) = CONST 
0x2ad: REVERT v2aa(0x0) v2aa(0x0)
----------------------------------

Begin block 0x2ae
prev = {'0x297'}, next = {'0x701'}
----------------------------------
Block 0x2ae
0x2b0: v2b0 = CALLDATALOAD v29c(0x4)
0x2b1: v2b1(0x1) = CONST 
0x2b3: v2b3(0x1) = CONST 
0x2b5: v2b5(0xa0) = CONST 
0x2b7: v2b7(0x10000000000000000000000000000000000000000) = SHL v2b5(0xa0) v2b3(0x1)
0x2b8: v2b8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2b7(0x10000000000000000000000000000000000000000) v2b1(0x1)
0x2b9: v2b9 = AND v2b8(0xffffffffffffffffffffffffffffffffffffffff) v2b0
0x2ba: v2ba(0x701) = CONST 
0x2bd: JUMP v2ba(0x701)
----------------------------------

Begin block 0x2be
prev = {}, next = {'0x2ca', '0x2c6'}
----------------------------------
function minSwapAmount()()
Block 0x2be
0x2bf: v2bf = CALLVALUE 
0x2c1: v2c1 = ISZERO v2bf
0x2c2: v2c2(0x2ca) = CONST 
0x2c5: JUMPI v2c2(0x2ca) v2c1
----------------------------------

Begin block 0x2c6
prev = {'0x2be'}, next = {}
----------------------------------
Block 0x2c6
0x2c6: v2c6(0x0) = CONST 
0x2c9: REVERT v2c6(0x0) v2c6(0x0)
----------------------------------

Begin block 0x2ca
prev = {'0x2be'}, next = {'0x766'}
----------------------------------
Block 0x2ca
0x2cc: v2cc(0x2d3) = CONST 
0x2cf: v2cf(0x766) = CONST 
0x2d2: JUMP v2cf(0x766)
----------------------------------

Begin block 0x2d30x2be
prev = {'0x766'}, next = {}
----------------------------------
Block 0x2d30x2be
0x2d40x2be: v2be2d4(0x40) = CONST 
0x2d70x2be: v2be2d7 = MLOAD v2be2d4(0x40)
0x2da0x2be: MSTORE v2be2d7 v769
0x2db0x2be: v2be2db = MLOAD v2be2d4(0x40)
0x2df0x2be: v2be2df = SUB v2be2d7 v2be2db
0x2e00x2be: v2be2e0(0x20) = CONST 
0x2e20x2be: v2be2e2 = ADD v2be2e0(0x20) v2be2df
0x2e40x2be: RETURN v2be2db v2be2e2
----------------------------------

Begin block 0x2d30x2e5
prev = {'0x76c'}, next = {}
----------------------------------
Block 0x2d30x2e5
0x2d40x2e5: v2e52d4(0x40) = CONST 
0x2d70x2e5: v2e52d7 = MLOAD v2e52d4(0x40)
0x2da0x2e5: MSTORE v2e52d7 v76f
0x2db0x2e5: v2e52db = MLOAD v2e52d4(0x40)
0x2df0x2e5: v2e52df = SUB v2e52d7 v2e52db
0x2e00x2e5: v2e52e0(0x20) = CONST 
0x2e20x2e5: v2e52e2 = ADD v2e52e0(0x20) v2e52df
0x2e40x2e5: RETURN v2e52db v2e52e2
----------------------------------

Begin block 0x2d30x2fa
prev = {'0x306'}, next = {}
----------------------------------
Block 0x2d30x2fa
0x2d40x2fa: v2fa2d4(0x40) = CONST 
0x2d70x2fa: v2fa2d7 = MLOAD v2fa2d4(0x40)
0x2da0x2fa: MSTORE v2fa2d7 v30e_0
0x2db0x2fa: v2fa2db = MLOAD v2fa2d4(0x40)
0x2df0x2fa: v2fa2df = SUB v2fa2d7 v2fa2db
0x2e00x2fa: v2fa2e0(0x20) = CONST 
0x2e20x2fa: v2fa2e2 = ADD v2fa2e0(0x20) v2fa2df
0x2e40x2fa: RETURN v2fa2db v2fa2e2
----------------------------------

Begin block 0x2d30x432
prev = {'0xb5e'}, next = {}
----------------------------------
Block 0x2d30x432
0x2d40x432: v4322d4(0x40) = CONST 
0x2d70x432: v4322d7 = MLOAD v4322d4(0x40)
0x2da0x432: MSTORE v4322d7 vb61
0x2db0x432: v4322db = MLOAD v4322d4(0x40)
0x2df0x432: v4322df = SUB v4322d7 v4322db
0x2e00x432: v4322e0(0x20) = CONST 
0x2e20x432: v4322e2 = ADD v4322e0(0x20) v4322df
0x2e40x432: RETURN v4322db v4322e2
----------------------------------

Begin block 0x2e5
prev = {}, next = {'0x2ed', '0x2f1'}
----------------------------------
function paymentDetailsHash()()
Block 0x2e5
0x2e6: v2e6 = CALLVALUE 
0x2e8: v2e8 = ISZERO v2e6
0x2e9: v2e9(0x2f1) = CONST 
0x2ec: JUMPI v2e9(0x2f1) v2e8
----------------------------------

Begin block 0x2ed
prev = {'0x2e5'}, next = {}
----------------------------------
Block 0x2ed
0x2ed: v2ed(0x0) = CONST 
0x2f0: REVERT v2ed(0x0) v2ed(0x0)
----------------------------------

Begin block 0x2f1
prev = {'0x2e5'}, next = {'0x76c'}
----------------------------------
Block 0x2f1
0x2f3: v2f3(0x2d3) = CONST 
0x2f6: v2f6(0x76c) = CONST 
0x2f9: JUMP v2f6(0x76c)
----------------------------------

Begin block 0x2fa
prev = {}, next = {'0x306', '0x302'}
----------------------------------
function availableFunds()()
Block 0x2fa
0x2fb: v2fb = CALLVALUE 
0x2fd: v2fd = ISZERO v2fb
0x2fe: v2fe(0x306) = CONST 
0x301: JUMPI v2fe(0x306) v2fd
----------------------------------

Begin block 0x302
prev = {'0x2fa'}, next = {}
----------------------------------
Block 0x302
0x302: v302(0x0) = CONST 
0x305: REVERT v302(0x0) v302(0x0)
----------------------------------

Begin block 0x306
prev = {'0x2fa'}, next = {'0x2d30x2fa'}
----------------------------------
Block 0x306
0x308: v308(0x2d3) = CONST 
0x30b: v30b(0x772) = CONST 
0x30e: v30e_0 = CALLPRIVATE v30b(0x772) v308(0x2d3)
----------------------------------

Begin block 0x30f
prev = {}, next = {'0x31b', '0x317'}
----------------------------------
function sendFundsToSwap(uint256)()
Block 0x30f
0x310: v310 = CALLVALUE 
0x312: v312 = ISZERO v310
0x313: v313(0x31b) = CONST 
0x316: JUMPI v313(0x31b) v312
----------------------------------

Begin block 0x317
prev = {'0x30f'}, next = {}
----------------------------------
Block 0x317
0x317: v317(0x0) = CONST 
0x31a: REVERT v317(0x0) v317(0x0)
----------------------------------

Begin block 0x31b
prev = {'0x30f'}, next = {'0x32e', '0x332'}
----------------------------------
Block 0x31b
0x31d: v31d(0x24b) = CONST 
0x320: v320(0x4) = CONST 
0x323: v323 = CALLDATASIZE 
0x324: v324 = SUB v323 v320(0x4)
0x325: v325(0x20) = CONST 
0x328: v328 = LT v324 v325(0x20)
0x329: v329 = ISZERO v328
0x32a: v32a(0x332) = CONST 
0x32d: JUMPI v32a(0x332) v329
----------------------------------

Begin block 0x32e
prev = {'0x31b'}, next = {}
----------------------------------
Block 0x32e
0x32e: v32e(0x0) = CONST 
0x331: REVERT v32e(0x0) v32e(0x0)
----------------------------------

Begin block 0x332
prev = {'0x31b'}, next = {'0x777'}
----------------------------------
Block 0x332
0x334: v334 = CALLDATALOAD v320(0x4)
0x335: v335(0x777) = CONST 
0x338: JUMP v335(0x777)
----------------------------------

Begin block 0x339
prev = {}, next = {'0x341', '0x345'}
----------------------------------
function ASSET_TYPE()()
Block 0x339
0x33a: v33a = CALLVALUE 
0x33c: v33c = ISZERO v33a
0x33d: v33d(0x345) = CONST 
0x340: JUMPI v33d(0x345) v33c
----------------------------------

Begin block 0x341
prev = {'0x339'}, next = {}
----------------------------------
Block 0x341
0x341: v341(0x0) = CONST 
0x344: REVERT v341(0x0) v341(0x0)
----------------------------------

Begin block 0x345
prev = {'0x339'}, next = {'0x8c9'}
----------------------------------
Block 0x345
0x347: v347(0x34e) = CONST 
0x34a: v34a(0x8c9) = CONST 
0x34d: JUMP v34a(0x8c9)
----------------------------------

Begin block 0x34e
prev = {'0x8c9'}, next = {}
----------------------------------
Block 0x34e
0x34f: v34f(0x40) = CONST 
0x352: v352 = MLOAD v34f(0x40)
0x353: v353(0xffff) = CONST 
0x358: v358 = AND v8d7 v353(0xffff)
0x35a: MSTORE v352 v358
0x35b: v35b = MLOAD v34f(0x40)
0x35f: v35f = SUB v352 v35b
0x360: v360(0x20) = CONST 
0x362: v362 = ADD v360(0x20) v35f
0x364: RETURN v35b v362
----------------------------------

Begin block 0x365
prev = {}, next = {'0x36d', '0x371'}
----------------------------------
function owner()()
Block 0x365
0x366: v366 = CALLVALUE 
0x368: v368 = ISZERO v366
0x369: v369(0x371) = CONST 
0x36c: JUMPI v369(0x371) v368
----------------------------------

Begin block 0x36d
prev = {'0x365'}, next = {}
----------------------------------
Block 0x36d
0x36d: v36d(0x0) = CONST 
0x370: REVERT v36d(0x0) v36d(0x0)
----------------------------------

Begin block 0x371
prev = {'0x365'}, next = {'0x8da'}
----------------------------------
Block 0x371
0x373: v373(0x37a) = CONST 
0x376: v376(0x8da) = CONST 
0x379: JUMP v376(0x8da)
----------------------------------

Begin block 0x37a0x365
prev = {'0x8da'}, next = {}
----------------------------------
Block 0x37a0x365
0x37b0x365: v36537b(0x40) = CONST 
0x37e0x365: v36537e = MLOAD v36537b(0x40)
0x37f0x365: v36537f(0x1) = CONST 
0x3810x365: v365381(0x1) = CONST 
0x3830x365: v365383(0xa0) = CONST 
0x3850x365: v365385(0x10000000000000000000000000000000000000000) = SHL v365383(0xa0) v365381(0x1)
0x3860x365: v365386(0xffffffffffffffffffffffffffffffffffffffff) = SUB v365385(0x10000000000000000000000000000000000000000) v36537f(0x1)
0x3890x365: v365389 = AND v8e6 v365386(0xffffffffffffffffffffffffffffffffffffffff)
0x38b0x365: MSTORE v36537e v365389
0x38c0x365: v36538c = MLOAD v36537b(0x40)
0x3900x365: v365390 = SUB v36537e v36538c
0x3910x365: v365391(0x20) = CONST 
0x3930x365: v365393 = ADD v365391(0x20) v365390
0x3950x365: RETURN v36538c v365393
----------------------------------

Begin block 0x37a0x47a
prev = {'0xd2b'}, next = {}
----------------------------------
Block 0x37a0x47a
0x37b0x47a: v47a37b(0x40) = CONST 
0x37e0x47a: v47a37e = MLOAD v47a37b(0x40)
0x37f0x47a: v47a37f(0x1) = CONST 
0x3810x47a: v47a381(0x1) = CONST 
0x3830x47a: v47a383(0xa0) = CONST 
0x3850x47a: v47a385(0x10000000000000000000000000000000000000000) = SHL v47a383(0xa0) v47a381(0x1)
0x3860x47a: v47a386(0xffffffffffffffffffffffffffffffffffffffff) = SUB v47a385(0x10000000000000000000000000000000000000000) v47a37f(0x1)
0x3890x47a: v47a389 = AND vd37 v47a386(0xffffffffffffffffffffffffffffffffffffffff)
0x38b0x47a: MSTORE v47a37e v47a389
0x38c0x47a: v47a38c = MLOAD v47a37b(0x40)
0x3900x47a: v47a390 = SUB v47a37e v47a38c
0x3910x47a: v47a391(0x20) = CONST 
0x3930x47a: v47a393 = ADD v47a391(0x20) v47a390
0x3950x47a: RETURN v47a38c v47a393
----------------------------------

Begin block 0x396
prev = {}, next = {'0x3a2', '0x39e'}
----------------------------------
function changeOwner(address)()
Block 0x396
0x397: v397 = CALLVALUE 
0x399: v399 = ISZERO v397
0x39a: v39a(0x3a2) = CONST 
0x39d: JUMPI v39a(0x3a2) v399
----------------------------------

Begin block 0x39e
prev = {'0x396'}, next = {}
----------------------------------
Block 0x39e
0x39e: v39e(0x0) = CONST 
0x3a1: REVERT v39e(0x0) v39e(0x0)
----------------------------------

Begin block 0x3a2
prev = {'0x396'}, next = {'0x3b5', '0x3b9'}
----------------------------------
Block 0x3a2
0x3a4: v3a4(0x19e) = CONST 
0x3a7: v3a7(0x4) = CONST 
0x3aa: v3aa = CALLDATASIZE 
0x3ab: v3ab = SUB v3aa v3a7(0x4)
0x3ac: v3ac(0x20) = CONST 
0x3af: v3af = LT v3ab v3ac(0x20)
0x3b0: v3b0 = ISZERO v3af
0x3b1: v3b1(0x3b9) = CONST 
0x3b4: JUMPI v3b1(0x3b9) v3b0
----------------------------------

Begin block 0x3b5
prev = {'0x3a2'}, next = {}
----------------------------------
Block 0x3b5
0x3b5: v3b5(0x0) = CONST 
0x3b8: REVERT v3b5(0x0) v3b5(0x0)
----------------------------------

Begin block 0x3b9
prev = {'0x3a2'}, next = {'0x8e9'}
----------------------------------
Block 0x3b9
0x3bb: v3bb = CALLDATALOAD v3a7(0x4)
0x3bc: v3bc(0x1) = CONST 
0x3be: v3be(0x1) = CONST 
0x3c0: v3c0(0xa0) = CONST 
0x3c2: v3c2(0x10000000000000000000000000000000000000000) = SHL v3c0(0xa0) v3be(0x1)
0x3c3: v3c3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3c2(0x10000000000000000000000000000000000000000) v3bc(0x1)
0x3c4: v3c4 = AND v3c3(0xffffffffffffffffffffffffffffffffffffffff) v3bb
0x3c5: v3c5(0x8e9) = CONST 
0x3c8: JUMP v3c5(0x8e9)
----------------------------------

Begin block 0x3c9
prev = {}, next = {'0x3d5', '0x3d1'}
----------------------------------
function withdrawFunds(address,uint256)()
Block 0x3c9
0x3ca: v3ca = CALLVALUE 
0x3cc: v3cc = ISZERO v3ca
0x3cd: v3cd(0x3d5) = CONST 
0x3d0: JUMPI v3cd(0x3d5) v3cc
----------------------------------

Begin block 0x3d1
prev = {'0x3c9'}, next = {}
----------------------------------
Block 0x3d1
0x3d1: v3d1(0x0) = CONST 
0x3d4: REVERT v3d1(0x0) v3d1(0x0)
----------------------------------

Begin block 0x3d5
prev = {'0x3c9'}, next = {'0x3ec', '0x3e8'}
----------------------------------
Block 0x3d5
0x3d7: v3d7(0x24b) = CONST 
0x3da: v3da(0x4) = CONST 
0x3dd: v3dd = CALLDATASIZE 
0x3de: v3de = SUB v3dd v3da(0x4)
0x3df: v3df(0x40) = CONST 
0x3e2: v3e2 = LT v3de v3df(0x40)
0x3e3: v3e3 = ISZERO v3e2
0x3e4: v3e4(0x3ec) = CONST 
0x3e7: JUMPI v3e4(0x3ec) v3e3
----------------------------------

Begin block 0x3e8
prev = {'0x3d5'}, next = {}
----------------------------------
Block 0x3e8
0x3e8: v3e8(0x0) = CONST 
0x3eb: REVERT v3e8(0x0) v3e8(0x0)
----------------------------------

Begin block 0x3ec
prev = {'0x3d5'}, next = {'0x9920x3c9'}
----------------------------------
Block 0x3ec
0x3ee: v3ee(0x1) = CONST 
0x3f0: v3f0(0x1) = CONST 
0x3f2: v3f2(0xa0) = CONST 
0x3f4: v3f4(0x10000000000000000000000000000000000000000) = SHL v3f2(0xa0) v3f0(0x1)
0x3f5: v3f5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3f4(0x10000000000000000000000000000000000000000) v3ee(0x1)
0x3f7: v3f7 = CALLDATALOAD v3da(0x4)
0x3f8: v3f8 = AND v3f7 v3f5(0xffffffffffffffffffffffffffffffffffffffff)
0x3fa: v3fa(0x20) = CONST 
0x3fc: v3fc = ADD v3fa(0x20) v3da(0x4)
0x3fd: v3fd = CALLDATALOAD v3fc
0x3fe: v3fe(0x992) = CONST 
0x401: JUMP v3fe(0x992)
----------------------------------

Begin block 0x402
prev = {}, next = {'0x40e', '0x40a'}
----------------------------------
function setLimits(uint256,uint256)()
Block 0x402
0x403: v403 = CALLVALUE 
0x405: v405 = ISZERO v403
0x406: v406(0x40e) = CONST 
0x409: JUMPI v406(0x40e) v405
----------------------------------

Begin block 0x40a
prev = {'0x402'}, next = {}
----------------------------------
Block 0x40a
0x40a: v40a(0x0) = CONST 
0x40d: REVERT v40a(0x0) v40a(0x0)
----------------------------------

Begin block 0x40e
prev = {'0x402'}, next = {'0x421', '0x425'}
----------------------------------
Block 0x40e
0x410: v410(0x19e) = CONST 
0x413: v413(0x4) = CONST 
0x416: v416 = CALLDATASIZE 
0x417: v417 = SUB v416 v413(0x4)
0x418: v418(0x40) = CONST 
0x41b: v41b = LT v417 v418(0x40)
0x41c: v41c = ISZERO v41b
0x41d: v41d(0x425) = CONST 
0x420: JUMPI v41d(0x425) v41c
----------------------------------

Begin block 0x421
prev = {'0x40e'}, next = {}
----------------------------------
Block 0x421
0x421: v421(0x0) = CONST 
0x424: REVERT v421(0x0) v421(0x0)
----------------------------------

Begin block 0x425
prev = {'0x40e'}, next = {'0xa16'}
----------------------------------
Block 0x425
0x428: v428 = CALLDATALOAD v413(0x4)
0x42a: v42a(0x20) = CONST 
0x42c: v42c = ADD v42a(0x20) v413(0x4)
0x42d: v42d = CALLDATALOAD v42c
0x42e: v42e(0xa16) = CONST 
0x431: JUMP v42e(0xa16)
----------------------------------

Begin block 0x432
prev = {}, next = {'0x43e', '0x43a'}
----------------------------------
function maxSwapAmount()()
Block 0x432
0x433: v433 = CALLVALUE 
0x435: v435 = ISZERO v433
0x436: v436(0x43e) = CONST 
0x439: JUMPI v436(0x43e) v435
----------------------------------

Begin block 0x43a
prev = {'0x432'}, next = {}
----------------------------------
Block 0x43a
0x43a: v43a(0x0) = CONST 
0x43d: REVERT v43a(0x0) v43a(0x0)
----------------------------------

Begin block 0x43e
prev = {'0x432'}, next = {'0xb5e'}
----------------------------------
Block 0x43e
0x440: v440(0x2d3) = CONST 
0x443: v443(0xb5e) = CONST 
0x446: JUMP v443(0xb5e)
----------------------------------

Begin block 0x447
prev = {}, next = {'0x453', '0x44f'}
----------------------------------
function setSwapsContract(address)()
Block 0x447
0x448: v448 = CALLVALUE 
0x44a: v44a = ISZERO v448
0x44b: v44b(0x453) = CONST 
0x44e: JUMPI v44b(0x453) v44a
----------------------------------

Begin block 0x44f
prev = {'0x447'}, next = {}
----------------------------------
Block 0x44f
0x44f: v44f(0x0) = CONST 
0x452: REVERT v44f(0x0) v44f(0x0)
----------------------------------

Begin block 0x453
prev = {'0x447'}, next = {'0x46a', '0x466'}
----------------------------------
Block 0x453
0x455: v455(0x19e) = CONST 
0x458: v458(0x4) = CONST 
0x45b: v45b = CALLDATASIZE 
0x45c: v45c = SUB v45b v458(0x4)
0x45d: v45d(0x20) = CONST 
0x460: v460 = LT v45c v45d(0x20)
0x461: v461 = ISZERO v460
0x462: v462(0x46a) = CONST 
0x465: JUMPI v462(0x46a) v461
----------------------------------

Begin block 0x466
prev = {'0x453'}, next = {}
----------------------------------
Block 0x466
0x466: v466(0x0) = CONST 
0x469: REVERT v466(0x0) v466(0x0)
----------------------------------

Begin block 0x46a
prev = {'0x453'}, next = {'0xb64'}
----------------------------------
Block 0x46a
0x46c: v46c = CALLDATALOAD v458(0x4)
0x46d: v46d(0x1) = CONST 
0x46f: v46f(0x1) = CONST 
0x471: v471(0xa0) = CONST 
0x473: v473(0x10000000000000000000000000000000000000000) = SHL v471(0xa0) v46f(0x1)
0x474: v474(0xffffffffffffffffffffffffffffffffffffffff) = SUB v473(0x10000000000000000000000000000000000000000) v46d(0x1)
0x475: v475 = AND v474(0xffffffffffffffffffffffffffffffffffffffff) v46c
0x476: v476(0xb64) = CONST 
0x479: JUMP v476(0xb64)
----------------------------------

Begin block 0x47a
prev = {}, next = {'0x482', '0x486'}
----------------------------------
function swapsContract()()
Block 0x47a
0x47b: v47b = CALLVALUE 
0x47d: v47d = ISZERO v47b
0x47e: v47e(0x486) = CONST 
0x481: JUMPI v47e(0x486) v47d
----------------------------------

Begin block 0x482
prev = {'0x47a'}, next = {}
----------------------------------
Block 0x482
0x482: v482(0x0) = CONST 
0x485: REVERT v482(0x0) v482(0x0)
----------------------------------

Begin block 0x486
prev = {'0x47a'}, next = {'0xd2b'}
----------------------------------
Block 0x486
0x488: v488(0x37a) = CONST 
0x48b: v48b(0xd2b) = CONST 
0x48e: JUMP v48b(0xd2b)
----------------------------------

Begin block 0x48f
prev = {}, next = {'0x497', '0x49b'}
----------------------------------
function releaseSwap(address,address,bytes,bytes32)()
Block 0x48f
0x490: v490 = CALLVALUE 
0x492: v492 = ISZERO v490
0x493: v493(0x49b) = CONST 
0x496: JUMPI v493(0x49b) v492
----------------------------------

Begin block 0x497
prev = {'0x48f'}, next = {}
----------------------------------
Block 0x497
0x497: v497(0x0) = CONST 
0x49a: REVERT v497(0x0) v497(0x0)
----------------------------------

Begin block 0x49b
prev = {'0x48f'}, next = {'0x4ae', '0x4b2'}
----------------------------------
Block 0x49b
0x49d: v49d(0x19e) = CONST 
0x4a0: v4a0(0x4) = CONST 
0x4a3: v4a3 = CALLDATASIZE 
0x4a4: v4a4 = SUB v4a3 v4a0(0x4)
0x4a5: v4a5(0x80) = CONST 
0x4a8: v4a8 = LT v4a4 v4a5(0x80)
0x4a9: v4a9 = ISZERO v4a8
0x4aa: v4aa(0x4b2) = CONST 
0x4ad: JUMPI v4aa(0x4b2) v4a9
----------------------------------

Begin block 0x4ae
prev = {'0x49b'}, next = {}
----------------------------------
Block 0x4ae
0x4ae: v4ae(0x0) = CONST 
0x4b1: REVERT v4ae(0x0) v4ae(0x0)
----------------------------------

Begin block 0x4b2
prev = {'0x49b'}, next = {'0x4e6', '0x4e2'}
----------------------------------
Block 0x4b2
0x4b3: v4b3(0x1) = CONST 
0x4b5: v4b5(0x1) = CONST 
0x4b7: v4b7(0xa0) = CONST 
0x4b9: v4b9(0x10000000000000000000000000000000000000000) = SHL v4b7(0xa0) v4b5(0x1)
0x4ba: v4ba(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4b9(0x10000000000000000000000000000000000000000) v4b3(0x1)
0x4bc: v4bc = CALLDATALOAD v4a0(0x4)
0x4be: v4be = AND v4ba(0xffffffffffffffffffffffffffffffffffffffff) v4bc
0x4c0: v4c0(0x20) = CONST 
0x4c3: v4c3 = ADD v4a0(0x4) v4c0(0x20)
0x4c4: v4c4 = CALLDATALOAD v4c3
0x4c7: v4c7 = AND v4ba(0xffffffffffffffffffffffffffffffffffffffff) v4c4
0x4ca: v4ca = ADD v4a0(0x4) v4a4
0x4cc: v4cc(0x60) = CONST 
0x4cf: v4cf = ADD v4a0(0x4) v4cc(0x60)
0x4d0: v4d0(0x40) = CONST 
0x4d3: v4d3 = ADD v4a0(0x4) v4d0(0x40)
0x4d4: v4d4 = CALLDATALOAD v4d3
0x4d5: v4d5(0x100000000) = CONST 
0x4dc: v4dc = GT v4d4 v4d5(0x100000000)
0x4dd: v4dd = ISZERO v4dc
0x4de: v4de(0x4e6) = CONST 
0x4e1: JUMPI v4de(0x4e6) v4dd
----------------------------------

Begin block 0x4e2
prev = {'0x4b2'}, next = {}
----------------------------------
Block 0x4e2
0x4e2: v4e2(0x0) = CONST 
0x4e5: REVERT v4e2(0x0) v4e2(0x0)
----------------------------------

Begin block 0x4e6
prev = {'0x4b2'}, next = {'0x4f8', '0x4f4'}
----------------------------------
Block 0x4e6
0x4e8: v4e8 = ADD v4a0(0x4) v4d4
0x4ea: v4ea(0x20) = CONST 
0x4ed: v4ed = ADD v4e8 v4ea(0x20)
0x4ee: v4ee = GT v4ed v4ca
0x4ef: v4ef = ISZERO v4ee
0x4f0: v4f0(0x4f8) = CONST 
0x4f3: JUMPI v4f0(0x4f8) v4ef
----------------------------------

Begin block 0x4f4
prev = {'0x4e6'}, next = {}
----------------------------------
Block 0x4f4
0x4f4: v4f4(0x0) = CONST 
0x4f7: REVERT v4f4(0x0) v4f4(0x0)
----------------------------------

Begin block 0x4f8
prev = {'0x4e6'}, next = {'0x51a', '0x516'}
----------------------------------
Block 0x4f8
0x4fa: v4fa = CALLDATALOAD v4e8
0x4fc: v4fc(0x20) = CONST 
0x4fe: v4fe = ADD v4fc(0x20) v4e8
0x501: v501(0x1) = CONST 
0x504: v504 = MUL v4fa v501(0x1)
0x506: v506 = ADD v4fe v504
0x507: v507 = GT v506 v4ca
0x508: v508(0x100000000) = CONST 
0x50f: v50f = GT v4fa v508(0x100000000)
0x510: v510 = OR v50f v507
0x511: v511 = ISZERO v510
0x512: v512(0x51a) = CONST 
0x515: JUMPI v512(0x51a) v511
----------------------------------

Begin block 0x516
prev = {'0x4f8'}, next = {}
----------------------------------
Block 0x516
0x516: v516(0x0) = CONST 
0x519: REVERT v516(0x0) v516(0x0)
----------------------------------

Begin block 0x51a
prev = {'0x4f8'}, next = {'0xd3a'}
----------------------------------
Block 0x51a
0x520: v520 = CALLDATALOAD v4cf
0x521: v521(0xd3a) = CONST 
0x524: JUMP v521(0xd3a)
----------------------------------

Begin block 0x525
prev = {'0x22b'}, next = {'0x572', '0x538'}
----------------------------------
Block 0x525
0x526: v526(0x0) = CONST 
0x528: v528 = SLOAD v526(0x0)
0x529: v529(0x1) = CONST 
0x52b: v52b(0x1) = CONST 
0x52d: v52d(0xa0) = CONST 
0x52f: v52f(0x10000000000000000000000000000000000000000) = SHL v52d(0xa0) v52b(0x1)
0x530: v530(0xffffffffffffffffffffffffffffffffffffffff) = SUB v52f(0x10000000000000000000000000000000000000000) v529(0x1)
0x531: v531 = AND v530(0xffffffffffffffffffffffffffffffffffffffff) v528
0x532: v532 = CALLER 
0x533: v533 = EQ v532 v531
0x534: v534(0x572) = CONST 
0x537: JUMPI v534(0x572) v533
----------------------------------

Begin block 0x538
prev = {'0x525'}, next = {}
----------------------------------
Block 0x538
0x538: v538(0x40) = CONST 
0x53b: v53b = MLOAD v538(0x40)
0x53c: v53c(0x461bcd) = CONST 
0x540: v540(0xe5) = CONST 
0x542: v542(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v540(0xe5) v53c(0x461bcd)
0x544: MSTORE v53b v542(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x545: v545(0x20) = CONST 
0x547: v547(0x4) = CONST 
0x54a: v54a = ADD v53b v547(0x4)
0x54b: MSTORE v54a v545(0x20)
0x54c: v54c(0x1c) = CONST 
0x54e: v54e(0x24) = CONST 
0x551: v551 = ADD v53b v54e(0x24)
0x552: MSTORE v551 v54c(0x1c)
0x553: v553(0x0) = CONST 
0x556: v556 = MLOAD v553(0x0)
0x557: v557(0x20) = CONST 
0x559: v559(0xe27) = CONST 
0x561: MSTORE v553(0x0) v556
0x562: v562(0x44) = CONST 
0x565: v565 = ADD v53b v562(0x44)
0x566: MSTORE v565 vf29(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000)
0x568: v568 = MLOAD v538(0x40)
0x56c: v56c = SUB v53b v568
0x56d: v56d(0x64) = CONST 
0x56f: v56f = ADD v56d(0x64) v56c
0x571: REVERT v568 v56f
0xf29: vf29(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000) = CONST 
----------------------------------

Begin block 0x572
prev = {'0x525'}, next = {'0x6110x1a0', '0x60d'}
----------------------------------
Block 0x572
0x573: v573(0x1) = CONST 
0x575: v575 = SLOAD v573(0x1)
0x576: v576(0x40) = CONST 
0x578: v578 = MLOAD v576(0x40)
0x579: v579(0xa80e7acb) = CONST 
0x57e: v57e(0xe0) = CONST 
0x580: v580(0xa80e7acb00000000000000000000000000000000000000000000000000000000) = SHL v57e(0xe0) v579(0xa80e7acb)
0x582: MSTORE v578 v580(0xa80e7acb00000000000000000000000000000000000000000000000000000000)
0x583: v583 = ADDRESS 
0x584: v584(0x4) = CONST 
0x587: v587 = ADD v578 v584(0x4)
0x58a: MSTORE v587 v583
0x58b: v58b(0x1) = CONST 
0x58d: v58d(0x1) = CONST 
0x58f: v58f(0xa0) = CONST 
0x591: v591(0x10000000000000000000000000000000000000000) = SHL v58f(0xa0) v58d(0x1)
0x592: v592(0xffffffffffffffffffffffffffffffffffffffff) = SUB v591(0x10000000000000000000000000000000000000000) v58b(0x1)
0x595: v595 = AND v592(0xffffffffffffffffffffffffffffffffffffffff) v1cf
0x596: v596(0x24) = CONST 
0x599: v599 = ADD v578 v596(0x24)
0x59a: MSTORE v599 v595
0x59d: v59d = AND v592(0xffffffffffffffffffffffffffffffffffffffff) v1d8
0x59e: v59e(0x44) = CONST 
0x5a1: v5a1 = ADD v578 v59e(0x44)
0x5a2: MSTORE v5a1 v59d
0x5a3: v5a3(0x84) = CONST 
0x5a6: v5a6 = ADD v578 v5a3(0x84)
0x5a9: MSTORE v5a6 v231
0x5aa: v5aa(0xa0) = CONST 
0x5ac: v5ac(0x64) = CONST 
0x5af: v5af = ADD v578 v5ac(0x64)
0x5b2: MSTORE v5af v5aa(0xa0)
0x5b3: v5b3(0xa4) = CONST 
0x5b6: v5b6 = ADD v578 v5b3(0xa4)
0x5b9: MSTORE v5b6 v20b
0x5bb: v5bb = AND v575 v592(0xffffffffffffffffffffffffffffffffffffffff)
0x5bd: v5bd(0xa80e7acb) = CONST 
0x5cf: v5cf(0xc4) = CONST 
0x5d1: v5d1 = ADD v5cf(0xc4) v578
0x5d7: CALLDATACOPY v5d1 v20f v20b
0x5d8: v5d8(0x0) = CONST 
0x5dc: v5dc = ADD v5d1 v20b
0x5dd: MSTORE v5dc v5d8(0x0)
0x5de: v5de(0x1f) = CONST 
0x5e0: v5e0(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v5de(0x1f)
0x5e1: v5e1(0x1f) = CONST 
0x5e4: v5e4 = ADD v20b v5e1(0x1f)
0x5e5: v5e5 = AND v5e4 v5e0(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
0x5ea: v5ea = ADD v5d1 v5e5
0x5f8: v5f8(0x0) = CONST 
0x5fa: v5fa(0x40) = CONST 
0x5fc: v5fc = MLOAD v5fa(0x40)
0x5ff: v5ff = SUB v5ea v5fc
0x601: v601(0x0) = CONST 
0x605: v605 = EXTCODESIZE v5bb
0x606: v606 = ISZERO v605
0x608: v608 = ISZERO v606
0x609: v609(0x611) = CONST 
0x60c: JUMPI v609(0x611) v608
----------------------------------

Begin block 0x60d
prev = {'0x572'}, next = {}
----------------------------------
Block 0x60d
0x60d: v60d(0x0) = CONST 
0x610: REVERT v60d(0x0) v60d(0x0)
----------------------------------

Begin block 0x6110x1a0
prev = {'0x572'}, next = {'0x6250x1a0', '0x61c0x1a0'}
----------------------------------
Block 0x6110x1a0
0x6130x1a0: v1a0613 = GAS 
0x6140x1a0: v1a0614 = CALL v1a0613 v5bb v601(0x0) v5fc v5ff v5fc v5f8(0x0)
0x6150x1a0: v1a0615 = ISZERO v1a0614
0x6170x1a0: v1a0617 = ISZERO v1a0615
0x6180x1a0: v1a0618(0x625) = CONST 
0x61b0x1a0: JUMPI v1a0618(0x625) v1a0617
----------------------------------

Begin block 0x6110x48f
prev = {'0xd87'}, next = {'0x61c0x48f', '0x6250x48f'}
----------------------------------
Block 0x6110x48f
0x6130x48f: v48f613 = GAS 
0x6140x48f: v48f614 = CALL v48f613 vdd0 ve16(0x0) ve11 ve14 ve11 ve0d(0x0)
0x6150x48f: v48f615 = ISZERO v48f614
0x6170x48f: v48f617 = ISZERO v48f615
0x6180x48f: v48f618(0x625) = CONST 
0x61b0x48f: JUMPI v48f618(0x625) v48f617
----------------------------------

Begin block 0x61c0x1a0
prev = {'0x6110x1a0'}, next = {}
----------------------------------
Block 0x61c0x1a0
0x61c0x1a0: v1a061c = RETURNDATASIZE 
0x61d0x1a0: v1a061d(0x0) = CONST 
0x6200x1a0: RETURNDATACOPY v1a061d(0x0) v1a061d(0x0) v1a061c
0x6210x1a0: v1a0621 = RETURNDATASIZE 
0x6220x1a0: v1a0622(0x0) = CONST 
0x6240x1a0: REVERT v1a0622(0x0) v1a0621
----------------------------------

Begin block 0x61c0x48f
prev = {'0x6110x48f'}, next = {}
----------------------------------
Block 0x61c0x48f
0x61c0x48f: v48f61c = RETURNDATASIZE 
0x61d0x48f: v48f61d(0x0) = CONST 
0x6200x48f: RETURNDATACOPY v48f61d(0x0) v48f61d(0x0) v48f61c
0x6210x48f: v48f621 = RETURNDATASIZE 
0x6220x48f: v48f622(0x0) = CONST 
0x6240x48f: REVERT v48f622(0x0) v48f621
----------------------------------

Begin block 0x6250x1a0
prev = {'0x6110x1a0'}, next = {'0x19e0x1a0'}
----------------------------------
Block 0x6250x1a0
0x62f0x1a0: JUMP v1ae(0x19e)
----------------------------------

Begin block 0x6250x48f
prev = {'0x6110x48f'}, next = {'0x19e0x48f'}
----------------------------------
Block 0x6250x48f
0x62f0x48f: JUMP v49d(0x19e)
----------------------------------

Begin block 0x630
prev = {'0x242'}, next = {'0x24b0x236'}
----------------------------------
Block 0x630
0x631: v631(0x0) = CONST 
0x633: v633 = SLOAD v631(0x0)
0x634: v634(0x1) = CONST 
0x636: v636(0xa0) = CONST 
0x638: v638(0x10000000000000000000000000000000000000000) = SHL v636(0xa0) v634(0x1)
0x63a: v63a = DIV v633 v638(0x10000000000000000000000000000000000000000)
0x63b: v63b(0xff) = CONST 
0x63d: v63d = AND v63b(0xff) v63a
0x63f: JUMP v244(0x24b)
----------------------------------

Begin block 0x640
prev = {'0x282'}, next = {'0x653', '0x68d'}
----------------------------------
Block 0x640
0x641: v641(0x0) = CONST 
0x643: v643 = SLOAD v641(0x0)
0x644: v644(0x1) = CONST 
0x646: v646(0x1) = CONST 
0x648: v648(0xa0) = CONST 
0x64a: v64a(0x10000000000000000000000000000000000000000) = SHL v648(0xa0) v646(0x1)
0x64b: v64b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v64a(0x10000000000000000000000000000000000000000) v644(0x1)
0x64c: v64c = AND v64b(0xffffffffffffffffffffffffffffffffffffffff) v643
0x64d: v64d = CALLER 
0x64e: v64e = EQ v64d v64c
0x64f: v64f(0x68d) = CONST 
0x652: JUMPI v64f(0x68d) v64e
----------------------------------

Begin block 0x653
prev = {'0x640'}, next = {}
----------------------------------
Block 0x653
0x653: v653(0x40) = CONST 
0x656: v656 = MLOAD v653(0x40)
0x657: v657(0x461bcd) = CONST 
0x65b: v65b(0xe5) = CONST 
0x65d: v65d(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v65b(0xe5) v657(0x461bcd)
0x65f: MSTORE v656 v65d(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x660: v660(0x20) = CONST 
0x662: v662(0x4) = CONST 
0x665: v665 = ADD v656 v662(0x4)
0x666: MSTORE v665 v660(0x20)
0x667: v667(0x1c) = CONST 
0x669: v669(0x24) = CONST 
0x66c: v66c = ADD v656 v669(0x24)
0x66d: MSTORE v66c v667(0x1c)
0x66e: v66e(0x0) = CONST 
0x671: v671 = MLOAD v66e(0x0)
0x672: v672(0x20) = CONST 
0x674: v674(0xe27) = CONST 
0x67c: MSTORE v66e(0x0) v671
0x67d: v67d(0x44) = CONST 
0x680: v680 = ADD v656 v67d(0x44)
0x681: MSTORE v680 vf2e(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000)
0x683: v683 = MLOAD v653(0x40)
0x687: v687 = SUB v656 v683
0x688: v688(0x64) = CONST 
0x68a: v68a = ADD v688(0x64) v687
0x68c: REVERT v683 v68a
0xf2e: vf2e(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000) = CONST 
----------------------------------

Begin block 0x68d
prev = {'0x640'}, next = {'0x6a9', '0x6ad'}
----------------------------------
Block 0x68d
0x68e: v68e(0x0) = CONST 
0x690: v690(0x14) = CONST 
0x693: v693 = SLOAD v68e(0x0)
0x695: v695(0x100) = CONST 
0x698: v698(0x10000000000000000000000000000000000000000) = EXP v695(0x100) v690(0x14)
0x69a: v69a = DIV v693 v698(0x10000000000000000000000000000000000000000)
0x69b: v69b(0xff) = CONST 
0x69d: v69d = AND v69b(0xff) v69a
0x69e: v69e = ISZERO v69d
0x69f: v69f = ISZERO v69e
0x6a1: v6a1 = ISZERO v286
0x6a2: v6a2 = ISZERO v6a1
0x6a3: v6a3 = EQ v6a2 v69f
0x6a4: v6a4 = ISZERO v6a3
0x6a5: v6a5(0x6ad) = CONST 
0x6a8: JUMPI v6a5(0x6ad) v6a4
----------------------------------

Begin block 0x6a9
prev = {'0x68d'}, next = {'0x6fe'}
----------------------------------
Block 0x6a9
0x6a9: v6a9(0x6fe) = CONST 
0x6ac: JUMP v6a9(0x6fe)
----------------------------------

Begin block 0x6ad
prev = {'0x68d'}, next = {'0x6fe'}
----------------------------------
Block 0x6ad
0x6ae: v6ae(0x0) = CONST 
0x6b1: v6b1 = SLOAD v6ae(0x0)
0x6b3: v6b3 = ISZERO v286
0x6b4: v6b4 = ISZERO v6b3
0x6b5: v6b5(0x1) = CONST 
0x6b7: v6b7(0xa0) = CONST 
0x6b9: v6b9(0x10000000000000000000000000000000000000000) = SHL v6b7(0xa0) v6b5(0x1)
0x6bb: v6bb = MUL v6b4 v6b9(0x10000000000000000000000000000000000000000)
0x6bc: v6bc(0xff) = CONST 
0x6be: v6be(0xa0) = CONST 
0x6c0: v6c0(0xff0000000000000000000000000000000000000000) = SHL v6be(0xa0) v6bc(0xff)
0x6c1: v6c1(0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff) = NOT v6c0(0xff0000000000000000000000000000000000000000)
0x6c4: v6c4 = AND v6b1 v6c1(0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff)
0x6c8: v6c8 = OR v6c4 v6bb
0x6cb: SSTORE v6ae(0x0) v6c8
0x6cc: v6cc(0x40) = CONST 
0x6cf: v6cf = MLOAD v6cc(0x40)
0x6d2: MSTORE v6cf v6b4
0x6d3: v6d3 = MLOAD v6cc(0x40)
0x6d4: v6d4(0x93eaa614ad05cba2561ada88d825206f767e87209f81f491c9b6091abeb5f857) = CONST 
0x6f8: v6f8 = SUB v6cf v6d3
0x6f9: v6f9(0x20) = CONST 
0x6fb: v6fb = ADD v6f9(0x20) v6f8
0x6fd: LOG1 v6d3 v6fb v6d4(0x93eaa614ad05cba2561ada88d825206f767e87209f81f491c9b6091abeb5f857)
----------------------------------

Begin block 0x6fe
prev = {'0x6a9', '0x6ad'}, next = {'0x19e0x25f'}
----------------------------------
Block 0x6fe
0x700: JUMP v26d(0x19e)
----------------------------------

Begin block 0x701
prev = {'0x2ae'}, next = {'0x715', '0x74f'}
----------------------------------
Block 0x701
0x702: v702(0x0) = CONST 
0x705: v705 = SLOAD v702(0x0)
0x706: v706(0x1) = CONST 
0x708: v708(0x1) = CONST 
0x70a: v70a(0xa0) = CONST 
0x70c: v70c(0x10000000000000000000000000000000000000000) = SHL v70a(0xa0) v708(0x1)
0x70d: v70d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v70c(0x10000000000000000000000000000000000000000) v706(0x1)
0x70e: v70e = AND v70d(0xffffffffffffffffffffffffffffffffffffffff) v705
0x70f: v70f = CALLER 
0x710: v710 = EQ v70f v70e
0x711: v711(0x74f) = CONST 
0x714: JUMPI v711(0x74f) v710
----------------------------------

Begin block 0x715
prev = {'0x701'}, next = {}
----------------------------------
Block 0x715
0x715: v715(0x40) = CONST 
0x718: v718 = MLOAD v715(0x40)
0x719: v719(0x461bcd) = CONST 
0x71d: v71d(0xe5) = CONST 
0x71f: v71f(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v71d(0xe5) v719(0x461bcd)
0x721: MSTORE v718 v71f(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x722: v722(0x20) = CONST 
0x724: v724(0x4) = CONST 
0x727: v727 = ADD v718 v724(0x4)
0x728: MSTORE v727 v722(0x20)
0x729: v729(0x1c) = CONST 
0x72b: v72b(0x24) = CONST 
0x72e: v72e = ADD v718 v72b(0x24)
0x72f: MSTORE v72e v729(0x1c)
0x730: v730(0x0) = CONST 
0x733: v733 = MLOAD v730(0x0)
0x734: v734(0x20) = CONST 
0x736: v736(0xe27) = CONST 
0x73e: MSTORE v730(0x0) v733
0x73f: v73f(0x44) = CONST 
0x742: v742 = ADD v718 v73f(0x44)
0x743: MSTORE v742 vf33(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000)
0x745: v745 = MLOAD v715(0x40)
0x749: v749 = SUB v718 v745
0x74a: v74a(0x64) = CONST 
0x74c: v74c = ADD v74a(0x64) v749
0x74e: REVERT v745 v74c
0xf33: vf33(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000) = CONST 
----------------------------------

Begin block 0x74f
prev = {'0x701'}, next = {'0x75b'}
----------------------------------
Block 0x74f
0x750: v750(0x760) = CONST 
0x754: v754(0x75b) = CONST 
0x757: v757(0x772) = CONST 
0x75a: v75a_0 = CALLPRIVATE v757(0x772) v754(0x75b)
----------------------------------

Begin block 0x75b
prev = {'0x74f'}, next = {'0x9920x28b'}
----------------------------------
Block 0x75b
0x75c: v75c(0x992) = CONST 
0x75f: JUMP v75c(0x992)
----------------------------------

Begin block 0x760
prev = {'0x8bf0x28b'}, next = {'0x24b0x28b'}
----------------------------------
Block 0x760
0x765: JUMP v299(0x24b)
----------------------------------

Begin block 0x766
prev = {'0x2ca'}, next = {'0x2d30x2be'}
----------------------------------
Block 0x766
0x767: v767(0x2) = CONST 
0x769: v769 = SLOAD v767(0x2)
0x76b: JUMP v2cc(0x2d3)
----------------------------------

Begin block 0x76c
prev = {'0x2f1'}, next = {'0x2d30x2e5'}
----------------------------------
Block 0x76c
0x76d: v76d(0x4) = CONST 
0x76f: v76f = SLOAD v76d(0x4)
0x771: JUMP v2f3(0x2d3)
----------------------------------

Begin block 0x772
prev = {}, next = {}
----------------------------------
function 0x772(v772arg0)
Block 0x772
0x773: v773 = ADDRESS 
0x774: v774 = BALANCE v773
0x776: RETURNPRIVATE v772arg0 v774
----------------------------------

Begin block 0x777
prev = {'0x332'}, next = {'0x7d6', '0x78a'}
----------------------------------
Block 0x777
0x778: v778(0x0) = CONST 
0x77b: v77b = SLOAD v778(0x0)
0x77c: v77c(0x1) = CONST 
0x77e: v77e(0xa0) = CONST 
0x780: v780(0x10000000000000000000000000000000000000000) = SHL v77e(0xa0) v77c(0x1)
0x782: v782 = DIV v77b v780(0x10000000000000000000000000000000000000000)
0x783: v783(0xff) = CONST 
0x785: v785 = AND v783(0xff) v782
0x786: v786(0x7d6) = CONST 
0x789: JUMPI v786(0x7d6) v785
----------------------------------

Begin block 0x78a
prev = {'0x777'}, next = {}
----------------------------------
Block 0x78a
0x78a: v78a(0x40) = CONST 
0x78d: v78d = MLOAD v78a(0x40)
0x78e: v78e(0x461bcd) = CONST 
0x792: v792(0xe5) = CONST 
0x794: v794(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v792(0xe5) v78e(0x461bcd)
0x796: MSTORE v78d v794(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x797: v797(0x20) = CONST 
0x799: v799(0x4) = CONST 
0x79c: v79c = ADD v78d v799(0x4)
0x79d: MSTORE v79c v797(0x20)
0x79e: v79e(0x13) = CONST 
0x7a0: v7a0(0x24) = CONST 
0x7a3: v7a3 = ADD v78d v7a0(0x24)
0x7a4: MSTORE v7a3 v79e(0x13)
0x7a5: v7a5(0x636f6e74726163742069732073746f7070656400000000000000000000000000) = CONST 
0x7c6: v7c6(0x44) = CONST 
0x7c9: v7c9 = ADD v78d v7c6(0x44)
0x7ca: MSTORE v7c9 v7a5(0x636f6e74726163742069732073746f7070656400000000000000000000000000)
0x7cc: v7cc = MLOAD v78a(0x40)
0x7d0: v7d0 = SUB v78d v7cc
0x7d1: v7d1(0x64) = CONST 
0x7d3: v7d3 = ADD v7d1(0x64) v7d0
0x7d5: REVERT v7cc v7d3
----------------------------------

Begin block 0x7d6
prev = {'0x777'}, next = {'0x81f', '0x7e9'}
----------------------------------
Block 0x7d6
0x7d7: v7d7(0x1) = CONST 
0x7d9: v7d9 = SLOAD v7d7(0x1)
0x7da: v7da(0x1) = CONST 
0x7dc: v7dc(0x1) = CONST 
0x7de: v7de(0xa0) = CONST 
0x7e0: v7e0(0x10000000000000000000000000000000000000000) = SHL v7de(0xa0) v7dc(0x1)
0x7e1: v7e1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e0(0x10000000000000000000000000000000000000000) v7da(0x1)
0x7e2: v7e2 = AND v7e1(0xffffffffffffffffffffffffffffffffffffffff) v7d9
0x7e3: v7e3 = CALLER 
0x7e4: v7e4 = EQ v7e3 v7e2
0x7e5: v7e5(0x81f) = CONST 
0x7e8: JUMPI v7e5(0x81f) v7e4
----------------------------------

Begin block 0x7e9
prev = {'0x7d6'}, next = {}
----------------------------------
Block 0x7e9
0x7e9: v7e9(0x40) = CONST 
0x7eb: v7eb = MLOAD v7e9(0x40)
0x7ec: v7ec(0x461bcd) = CONST 
0x7f0: v7f0(0xe5) = CONST 
0x7f2: v7f2(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v7f0(0xe5) v7ec(0x461bcd)
0x7f4: MSTORE v7eb v7f2(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x7f5: v7f5(0x4) = CONST 
0x7f7: v7f7 = ADD v7f5(0x4) v7eb
0x7fa: v7fa(0x20) = CONST 
0x7fc: v7fc = ADD v7fa(0x20) v7f7
0x7ff: v7ff = SUB v7fc v7f7
0x801: MSTORE v7f7 v7ff
0x802: v802(0x25) = CONST 
0x805: MSTORE v7fc v802(0x25)
0x806: v806(0x20) = CONST 
0x808: v808 = ADD v806(0x20) v7fc
0x80a: v80a(0xe47) = CONST 
0x80d: v80d(0x25) = CONST 
0x810: CODECOPY v808 v80a(0xe47) v80d(0x25)
0x811: v811(0x40) = CONST 
0x813: v813 = ADD v811(0x40) v808
0x817: v817(0x40) = CONST 
0x819: v819 = MLOAD v817(0x40)
0x81c: v81c = SUB v813 v819
0x81e: REVERT v819 v81c
----------------------------------

Begin block 0x81f
prev = {'0x7d6'}, next = {'0x834', '0x82d'}
----------------------------------
Block 0x81f
0x821: v821(0x2) = CONST 
0x823: v823 = SLOAD v821(0x2)
0x825: v825 = LT v334 v823
0x826: v826 = ISZERO v825
0x828: v828 = ISZERO v826
0x829: v829(0x834) = CONST 
0x82c: JUMPI v829(0x834) v828
----------------------------------

Begin block 0x82d
prev = {'0x81f'}, next = {'0x834'}
----------------------------------
Block 0x82d
0x82e: v82e(0x3) = CONST 
0x830: v830 = SLOAD v82e(0x3)
0x832: v832 = GT v334 v830
0x833: v833 = ISZERO v832
----------------------------------

Begin block 0x834
prev = {'0x81f', '0x82d'}, next = {'0x839', '0x885'}
----------------------------------
Block 0x834
0x834_0x0: v834_0 = PHI v826 v833
0x835: v835(0x885) = CONST 
0x838: JUMPI v835(0x885) v834_0
----------------------------------

Begin block 0x839
prev = {'0x834'}, next = {}
----------------------------------
Block 0x839
0x839: v839(0x40) = CONST 
0x83c: v83c = MLOAD v839(0x40)
0x83d: v83d(0x461bcd) = CONST 
0x841: v841(0xe5) = CONST 
0x843: v843(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v841(0xe5) v83d(0x461bcd)
0x845: MSTORE v83c v843(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x846: v846(0x20) = CONST 
0x848: v848(0x4) = CONST 
0x84b: v84b = ADD v83c v848(0x4)
0x84c: MSTORE v84b v846(0x20)
0x84d: v84d(0x1a) = CONST 
0x84f: v84f(0x24) = CONST 
0x852: v852 = ADD v83c v84f(0x24)
0x853: MSTORE v852 v84d(0x1a)
0x854: v854(0x616d6f756e74206f7574736964652073776170206c696d697473000000000000) = CONST 
0x875: v875(0x44) = CONST 
0x878: v878 = ADD v83c v875(0x44)
0x879: MSTORE v878 v854(0x616d6f756e74206f7574736964652073776170206c696d697473000000000000)
0x87b: v87b = MLOAD v839(0x40)
0x87f: v87f = SUB v83c v87b
0x880: v880(0x64) = CONST 
0x882: v882 = ADD v880(0x64) v87f
0x884: REVERT v87b v882
----------------------------------

Begin block 0x885
prev = {'0x834'}, next = {'0x8bf0x30f', '0x8b6'}
----------------------------------
Block 0x885
0x886: v886(0x1) = CONST 
0x888: v888 = SLOAD v886(0x1)
0x889: v889(0x40) = CONST 
0x88b: v88b = MLOAD v889(0x40)
0x88c: v88c(0x1) = CONST 
0x88e: v88e(0x1) = CONST 
0x890: v890(0xa0) = CONST 
0x892: v892(0x10000000000000000000000000000000000000000) = SHL v890(0xa0) v88e(0x1)
0x893: v893(0xffffffffffffffffffffffffffffffffffffffff) = SUB v892(0x10000000000000000000000000000000000000000) v88c(0x1)
0x896: v896 = AND v888 v893(0xffffffffffffffffffffffffffffffffffffffff)
0x899: v899 = ISZERO v334
0x89a: v89a(0x8fc) = CONST 
0x89d: v89d = MUL v89a(0x8fc) v899
0x8a1: v8a1(0x0) = CONST 
0x8a9: v8a9 = CALL v89d v896 v334 v88b v8a1(0x0) v88b v8a1(0x0)
0x8af: v8af = ISZERO v8a9
0x8b1: v8b1 = ISZERO v8af
0x8b2: v8b2(0x8bf) = CONST 
0x8b5: JUMPI v8b2(0x8bf) v8b1
----------------------------------

Begin block 0x8b6
prev = {'0x885'}, next = {}
----------------------------------
Block 0x8b6
0x8b6: v8b6 = RETURNDATASIZE 
0x8b7: v8b7(0x0) = CONST 
0x8ba: RETURNDATACOPY v8b7(0x0) v8b7(0x0) v8b6
0x8bb: v8bb = RETURNDATASIZE 
0x8bc: v8bc(0x0) = CONST 
0x8be: REVERT v8bc(0x0) v8bb
----------------------------------

Begin block 0x8bf0x28b
prev = {'0x9e00x28b'}, next = {'0x760'}
----------------------------------
Block 0x8bf0x28b
0x8c10x28b: v28b8c1(0x1) = CONST 
0x8c80x28b: JUMP v750(0x760)
----------------------------------

Begin block 0x8bf0x30f
prev = {'0x885'}, next = {'0x24b0x30f'}
----------------------------------
Block 0x8bf0x30f
0x8c10x30f: v30f8c1(0x1) = CONST 
0x8c80x30f: JUMP v31d(0x24b)
----------------------------------

Begin block 0x8bf0x3c9
prev = {'0x9e00x3c9'}, next = {'0x24b0x3c9'}
----------------------------------
Block 0x8bf0x3c9
0x8c10x3c9: v3c98c1(0x1) = CONST 
0x8c80x3c9: JUMP v3d7(0x24b)
----------------------------------

Begin block 0x8c9
prev = {'0x345'}, next = {'0x34e'}
----------------------------------
Block 0x8c9
0x8ca: v8ca(0x0) = CONST 
0x8cc: v8cc = SLOAD v8ca(0x0)
0x8cd: v8cd(0x1) = CONST 
0x8cf: v8cf(0xb8) = CONST 
0x8d1: v8d1(0x10000000000000000000000000000000000000000000000) = SHL v8cf(0xb8) v8cd(0x1)
0x8d3: v8d3 = DIV v8cc v8d1(0x10000000000000000000000000000000000000000000000)
0x8d4: v8d4(0xffff) = CONST 
0x8d7: v8d7 = AND v8d4(0xffff) v8d3
0x8d9: JUMP v347(0x34e)
----------------------------------

Begin block 0x8da
prev = {'0x371'}, next = {'0x37a0x365'}
----------------------------------
Block 0x8da
0x8db: v8db(0x0) = CONST 
0x8dd: v8dd = SLOAD v8db(0x0)
0x8de: v8de(0x1) = CONST 
0x8e0: v8e0(0x1) = CONST 
0x8e2: v8e2(0xa0) = CONST 
0x8e4: v8e4(0x10000000000000000000000000000000000000000) = SHL v8e2(0xa0) v8e0(0x1)
0x8e5: v8e5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8e4(0x10000000000000000000000000000000000000000) v8de(0x1)
0x8e6: v8e6 = AND v8e5(0xffffffffffffffffffffffffffffffffffffffff) v8dd
0x8e8: JUMP v373(0x37a)
----------------------------------

Begin block 0x8e9
prev = {'0x3b9'}, next = {'0x936', '0x8fc'}
----------------------------------
Block 0x8e9
0x8ea: v8ea(0x0) = CONST 
0x8ec: v8ec = SLOAD v8ea(0x0)
0x8ed: v8ed(0x1) = CONST 
0x8ef: v8ef(0x1) = CONST 
0x8f1: v8f1(0xa0) = CONST 
0x8f3: v8f3(0x10000000000000000000000000000000000000000) = SHL v8f1(0xa0) v8ef(0x1)
0x8f4: v8f4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8f3(0x10000000000000000000000000000000000000000) v8ed(0x1)
0x8f5: v8f5 = AND v8f4(0xffffffffffffffffffffffffffffffffffffffff) v8ec
0x8f6: v8f6 = CALLER 
0x8f7: v8f7 = EQ v8f6 v8f5
0x8f8: v8f8(0x936) = CONST 
0x8fb: JUMPI v8f8(0x936) v8f7
----------------------------------

Begin block 0x8fc
prev = {'0x8e9'}, next = {}
----------------------------------
Block 0x8fc
0x8fc: v8fc(0x40) = CONST 
0x8ff: v8ff = MLOAD v8fc(0x40)
0x900: v900(0x461bcd) = CONST 
0x904: v904(0xe5) = CONST 
0x906: v906(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v904(0xe5) v900(0x461bcd)
0x908: MSTORE v8ff v906(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x909: v909(0x20) = CONST 
0x90b: v90b(0x4) = CONST 
0x90e: v90e = ADD v8ff v90b(0x4)
0x90f: MSTORE v90e v909(0x20)
0x910: v910(0x1c) = CONST 
0x912: v912(0x24) = CONST 
0x915: v915 = ADD v8ff v912(0x24)
0x916: MSTORE v915 v910(0x1c)
0x917: v917(0x0) = CONST 
0x91a: v91a = MLOAD v917(0x0)
0x91b: v91b(0x20) = CONST 
0x91d: v91d(0xe27) = CONST 
0x925: MSTORE v917(0x0) v91a
0x926: v926(0x44) = CONST 
0x929: v929 = ADD v8ff v926(0x44)
0x92a: MSTORE v929 vf38(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000)
0x92c: v92c = MLOAD v8fc(0x40)
0x930: v930 = SUB v8ff v92c
0x931: v931(0x64) = CONST 
0x933: v933 = ADD v931(0x64) v930
0x935: REVERT v92c v933
0xf38: vf38(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000) = CONST 
----------------------------------

Begin block 0x936
prev = {'0x8e9'}, next = {'0x19e0x396'}
----------------------------------
Block 0x936
0x937: v937(0x0) = CONST 
0x93a: v93a = SLOAD v937(0x0)
0x93b: v93b(0x1) = CONST 
0x93d: v93d(0x1) = CONST 
0x93f: v93f(0xa0) = CONST 
0x941: v941(0x10000000000000000000000000000000000000000) = SHL v93f(0xa0) v93d(0x1)
0x942: v942(0xffffffffffffffffffffffffffffffffffffffff) = SUB v941(0x10000000000000000000000000000000000000000) v93b(0x1)
0x943: v943(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v942(0xffffffffffffffffffffffffffffffffffffffff)
0x944: v944 = AND v943(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v93a
0x945: v945(0x1) = CONST 
0x947: v947(0x1) = CONST 
0x949: v949(0xa0) = CONST 
0x94b: v94b(0x10000000000000000000000000000000000000000) = SHL v949(0xa0) v947(0x1)
0x94c: v94c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v94b(0x10000000000000000000000000000000000000000) v945(0x1)
0x94e: v94e = AND v3c4 v94c(0xffffffffffffffffffffffffffffffffffffffff)
0x951: v951 = OR v94e v944
0x954: SSTORE v937(0x0) v951
0x955: v955(0x40) = CONST 
0x958: v958 = MLOAD v955(0x40)
0x959: v959 = CALLER 
0x95b: MSTORE v958 v959
0x95c: v95c(0x20) = CONST 
0x95f: v95f = ADD v958 v95c(0x20)
0x963: MSTORE v95f v94e
0x965: v965 = MLOAD v955(0x40)
0x966: v966(0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c) = CONST 
0x98a: v98a = SUB v958 v965
0x98d: v98d = ADD v955(0x40) v98a
0x98f: LOG1 v965 v98d v966(0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c)
0x991: JUMP v3a4(0x19e)
----------------------------------

Begin block 0x9920x28b
prev = {'0x75b'}, next = {'0x9a60x28b', '0x9e00x28b'}
----------------------------------
Block 0x9920x28b
0x9930x28b: v28b993(0x0) = CONST 
0x9960x28b: v28b996 = SLOAD v28b993(0x0)
0x9970x28b: v28b997(0x1) = CONST 
0x9990x28b: v28b999(0x1) = CONST 
0x99b0x28b: v28b99b(0xa0) = CONST 
0x99d0x28b: v28b99d(0x10000000000000000000000000000000000000000) = SHL v28b99b(0xa0) v28b999(0x1)
0x99e0x28b: v28b99e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v28b99d(0x10000000000000000000000000000000000000000) v28b997(0x1)
0x99f0x28b: v28b99f = AND v28b99e(0xffffffffffffffffffffffffffffffffffffffff) v28b996
0x9a00x28b: v28b9a0 = CALLER 
0x9a10x28b: v28b9a1 = EQ v28b9a0 v28b99f
0x9a20x28b: v28b9a2(0x9e0) = CONST 
0x9a50x28b: JUMPI v28b9a2(0x9e0) v28b9a1
----------------------------------

Begin block 0x9920x3c9
prev = {'0x3ec'}, next = {'0x9e00x3c9', '0x9a60x3c9'}
----------------------------------
Block 0x9920x3c9
0x9930x3c9: v3c9993(0x0) = CONST 
0x9960x3c9: v3c9996 = SLOAD v3c9993(0x0)
0x9970x3c9: v3c9997(0x1) = CONST 
0x9990x3c9: v3c9999(0x1) = CONST 
0x99b0x3c9: v3c999b(0xa0) = CONST 
0x99d0x3c9: v3c999d(0x10000000000000000000000000000000000000000) = SHL v3c999b(0xa0) v3c9999(0x1)
0x99e0x3c9: v3c999e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3c999d(0x10000000000000000000000000000000000000000) v3c9997(0x1)
0x99f0x3c9: v3c999f = AND v3c999e(0xffffffffffffffffffffffffffffffffffffffff) v3c9996
0x9a00x3c9: v3c99a0 = CALLER 
0x9a10x3c9: v3c99a1 = EQ v3c99a0 v3c999f
0x9a20x3c9: v3c99a2(0x9e0) = CONST 
0x9a50x3c9: JUMPI v3c99a2(0x9e0) v3c99a1
----------------------------------

Begin block 0x9a60x28b
prev = {'0x9920x28b'}, next = {}
----------------------------------
Block 0x9a60x28b
0x9a60x28b: v28b9a6(0x40) = CONST 
0x9a90x28b: v28b9a9 = MLOAD v28b9a6(0x40)
0x9aa0x28b: v28b9aa(0x461bcd) = CONST 
0x9ae0x28b: v28b9ae(0xe5) = CONST 
0x9b00x28b: v28b9b0(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v28b9ae(0xe5) v28b9aa(0x461bcd)
0x9b20x28b: MSTORE v28b9a9 v28b9b0(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x9b30x28b: v28b9b3(0x20) = CONST 
0x9b50x28b: v28b9b5(0x4) = CONST 
0x9b80x28b: v28b9b8 = ADD v28b9a9 v28b9b5(0x4)
0x9b90x28b: MSTORE v28b9b8 v28b9b3(0x20)
0x9ba0x28b: v28b9ba(0x1c) = CONST 
0x9bc0x28b: v28b9bc(0x24) = CONST 
0x9bf0x28b: v28b9bf = ADD v28b9a9 v28b9bc(0x24)
0x9c00x28b: MSTORE v28b9bf v28b9ba(0x1c)
0x9c10x28b: v28b9c1(0x0) = CONST 
0x9c40x28b: v28b9c4 = MLOAD v28b9c1(0x0)
0x9c50x28b: v28b9c5(0x20) = CONST 
0x9c70x28b: v28b9c7(0xe27) = CONST 
0x9cf0x28b: MSTORE v28b9c1(0x0) v28b9c4
0x9d00x28b: v28b9d0(0x44) = CONST 
0x9d30x28b: v28b9d3 = ADD v28b9a9 v28b9d0(0x44)
0x9d40x28b: MSTORE v28b9d3 v28bf3d(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000)
0x9d60x28b: v28b9d6 = MLOAD v28b9a6(0x40)
0x9da0x28b: v28b9da = SUB v28b9a9 v28b9d6
0x9db0x28b: v28b9db(0x64) = CONST 
0x9dd0x28b: v28b9dd = ADD v28b9db(0x64) v28b9da
0x9df0x28b: REVERT v28b9d6 v28b9dd
0xf3d0x28b: v28bf3d(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000) = CONST 
----------------------------------

Begin block 0x9a60x3c9
prev = {'0x9920x3c9'}, next = {}
----------------------------------
Block 0x9a60x3c9
0x9a60x3c9: v3c99a6(0x40) = CONST 
0x9a90x3c9: v3c99a9 = MLOAD v3c99a6(0x40)
0x9aa0x3c9: v3c99aa(0x461bcd) = CONST 
0x9ae0x3c9: v3c99ae(0xe5) = CONST 
0x9b00x3c9: v3c99b0(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v3c99ae(0xe5) v3c99aa(0x461bcd)
0x9b20x3c9: MSTORE v3c99a9 v3c99b0(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x9b30x3c9: v3c99b3(0x20) = CONST 
0x9b50x3c9: v3c99b5(0x4) = CONST 
0x9b80x3c9: v3c99b8 = ADD v3c99a9 v3c99b5(0x4)
0x9b90x3c9: MSTORE v3c99b8 v3c99b3(0x20)
0x9ba0x3c9: v3c99ba(0x1c) = CONST 
0x9bc0x3c9: v3c99bc(0x24) = CONST 
0x9bf0x3c9: v3c99bf = ADD v3c99a9 v3c99bc(0x24)
0x9c00x3c9: MSTORE v3c99bf v3c99ba(0x1c)
0x9c10x3c9: v3c99c1(0x0) = CONST 
0x9c40x3c9: v3c99c4 = MLOAD v3c99c1(0x0)
0x9c50x3c9: v3c99c5(0x20) = CONST 
0x9c70x3c9: v3c99c7(0xe27) = CONST 
0x9cf0x3c9: MSTORE v3c99c1(0x0) v3c99c4
0x9d00x3c9: v3c99d0(0x44) = CONST 
0x9d30x3c9: v3c99d3 = ADD v3c99a9 v3c99d0(0x44)
0x9d40x3c9: MSTORE v3c99d3 v3c9f3d(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000)
0x9d60x3c9: v3c99d6 = MLOAD v3c99a6(0x40)
0x9da0x3c9: v3c99da = SUB v3c99a9 v3c99d6
0x9db0x3c9: v3c99db(0x64) = CONST 
0x9dd0x3c9: v3c99dd = ADD v3c99db(0x64) v3c99da
0x9df0x3c9: REVERT v3c99d6 v3c99dd
0xf3d0x3c9: v3c9f3d(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000) = CONST 
----------------------------------

Begin block 0x9e00x28b
prev = {'0x9920x28b'}, next = {'0x8bf0x28b', '0xa0d0x28b'}
----------------------------------
Block 0x9e00x28b
0x9e10x28b: v28b9e1(0x40) = CONST 
0x9e30x28b: v28b9e3 = MLOAD v28b9e1(0x40)
0x9e40x28b: v28b9e4(0x1) = CONST 
0x9e60x28b: v28b9e6(0x1) = CONST 
0x9e80x28b: v28b9e8(0xa0) = CONST 
0x9ea0x28b: v28b9ea(0x10000000000000000000000000000000000000000) = SHL v28b9e8(0xa0) v28b9e6(0x1)
0x9eb0x28b: v28b9eb(0xffffffffffffffffffffffffffffffffffffffff) = SUB v28b9ea(0x10000000000000000000000000000000000000000) v28b9e4(0x1)
0x9ed0x28b: v28b9ed = AND v2b9 v28b9eb(0xffffffffffffffffffffffffffffffffffffffff)
0x9f00x28b: v28b9f0 = ISZERO v75a_0
0x9f10x28b: v28b9f1(0x8fc) = CONST 
0x9f40x28b: v28b9f4 = MUL v28b9f1(0x8fc) v28b9f0
0x9f80x28b: v28b9f8(0x0) = CONST 
0xa000x28b: v28ba00 = CALL v28b9f4 v28b9ed v75a_0 v28b9e3 v28b9f8(0x0) v28b9e3 v28b9f8(0x0)
0xa060x28b: v28ba06 = ISZERO v28ba00
0xa080x28b: v28ba08 = ISZERO v28ba06
0xa090x28b: v28ba09(0x8bf) = CONST 
0xa0c0x28b: JUMPI v28ba09(0x8bf) v28ba08
----------------------------------

Begin block 0x9e00x3c9
prev = {'0x9920x3c9'}, next = {'0xa0d0x3c9', '0x8bf0x3c9'}
----------------------------------
Block 0x9e00x3c9
0x9e10x3c9: v3c99e1(0x40) = CONST 
0x9e30x3c9: v3c99e3 = MLOAD v3c99e1(0x40)
0x9e40x3c9: v3c99e4(0x1) = CONST 
0x9e60x3c9: v3c99e6(0x1) = CONST 
0x9e80x3c9: v3c99e8(0xa0) = CONST 
0x9ea0x3c9: v3c99ea(0x10000000000000000000000000000000000000000) = SHL v3c99e8(0xa0) v3c99e6(0x1)
0x9eb0x3c9: v3c99eb(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3c99ea(0x10000000000000000000000000000000000000000) v3c99e4(0x1)
0x9ed0x3c9: v3c99ed = AND v3f8 v3c99eb(0xffffffffffffffffffffffffffffffffffffffff)
0x9f00x3c9: v3c99f0 = ISZERO v3fd
0x9f10x3c9: v3c99f1(0x8fc) = CONST 
0x9f40x3c9: v3c99f4 = MUL v3c99f1(0x8fc) v3c99f0
0x9f80x3c9: v3c99f8(0x0) = CONST 
0xa000x3c9: v3c9a00 = CALL v3c99f4 v3c99ed v3fd v3c99e3 v3c99f8(0x0) v3c99e3 v3c99f8(0x0)
0xa060x3c9: v3c9a06 = ISZERO v3c9a00
0xa080x3c9: v3c9a08 = ISZERO v3c9a06
0xa090x3c9: v3c9a09(0x8bf) = CONST 
0xa0c0x3c9: JUMPI v3c9a09(0x8bf) v3c9a08
----------------------------------

Begin block 0xa0d0x28b
prev = {'0x9e00x28b'}, next = {}
----------------------------------
Block 0xa0d0x28b
0xa0d0x28b: v28ba0d = RETURNDATASIZE 
0xa0e0x28b: v28ba0e(0x0) = CONST 
0xa110x28b: RETURNDATACOPY v28ba0e(0x0) v28ba0e(0x0) v28ba0d
0xa120x28b: v28ba12 = RETURNDATASIZE 
0xa130x28b: v28ba13(0x0) = CONST 
0xa150x28b: REVERT v28ba13(0x0) v28ba12
----------------------------------

Begin block 0xa0d0x3c9
prev = {'0x9e00x3c9'}, next = {}
----------------------------------
Block 0xa0d0x3c9
0xa0d0x3c9: v3c9a0d = RETURNDATASIZE 
0xa0e0x3c9: v3c9a0e(0x0) = CONST 
0xa110x3c9: RETURNDATACOPY v3c9a0e(0x0) v3c9a0e(0x0) v3c9a0d
0xa120x3c9: v3c9a12 = RETURNDATASIZE 
0xa130x3c9: v3c9a13(0x0) = CONST 
0xa150x3c9: REVERT v3c9a13(0x0) v3c9a12
----------------------------------

Begin block 0xa16
prev = {'0x425'}, next = {'0xa63', '0xa29'}
----------------------------------
Block 0xa16
0xa17: va17(0x0) = CONST 
0xa19: va19 = SLOAD va17(0x0)
0xa1a: va1a(0x1) = CONST 
0xa1c: va1c(0x1) = CONST 
0xa1e: va1e(0xa0) = CONST 
0xa20: va20(0x10000000000000000000000000000000000000000) = SHL va1e(0xa0) va1c(0x1)
0xa21: va21(0xffffffffffffffffffffffffffffffffffffffff) = SUB va20(0x10000000000000000000000000000000000000000) va1a(0x1)
0xa22: va22 = AND va21(0xffffffffffffffffffffffffffffffffffffffff) va19
0xa23: va23 = CALLER 
0xa24: va24 = EQ va23 va22
0xa25: va25(0xa63) = CONST 
0xa28: JUMPI va25(0xa63) va24
----------------------------------

Begin block 0xa29
prev = {'0xa16'}, next = {}
----------------------------------
Block 0xa29
0xa29: va29(0x40) = CONST 
0xa2c: va2c = MLOAD va29(0x40)
0xa2d: va2d(0x461bcd) = CONST 
0xa31: va31(0xe5) = CONST 
0xa33: va33(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL va31(0xe5) va2d(0x461bcd)
0xa35: MSTORE va2c va33(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xa36: va36(0x20) = CONST 
0xa38: va38(0x4) = CONST 
0xa3b: va3b = ADD va2c va38(0x4)
0xa3c: MSTORE va3b va36(0x20)
0xa3d: va3d(0x1c) = CONST 
0xa3f: va3f(0x24) = CONST 
0xa42: va42 = ADD va2c va3f(0x24)
0xa43: MSTORE va42 va3d(0x1c)
0xa44: va44(0x0) = CONST 
0xa47: va47 = MLOAD va44(0x0)
0xa48: va48(0x20) = CONST 
0xa4a: va4a(0xe27) = CONST 
0xa52: MSTORE va44(0x0) va47
0xa53: va53(0x44) = CONST 
0xa56: va56 = ADD va2c va53(0x44)
0xa57: MSTORE va56 vf42(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000)
0xa59: va59 = MLOAD va29(0x40)
0xa5d: va5d = SUB va2c va59
0xa5e: va5e(0x64) = CONST 
0xa60: va60 = ADD va5e(0x64) va5d
0xa62: REVERT va59 va60
0xf42: vf42(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000) = CONST 
----------------------------------

Begin block 0xa63
prev = {'0xa16'}, next = {'0xa6e', '0xaba'}
----------------------------------
Block 0xa63
0xa68: va68 = GT v428 v42d
0xa69: va69 = ISZERO va68
0xa6a: va6a(0xaba) = CONST 
0xa6d: JUMPI va6a(0xaba) va69
----------------------------------

Begin block 0xa6e
prev = {'0xa63'}, next = {}
----------------------------------
Block 0xa6e
0xa6e: va6e(0x40) = CONST 
0xa71: va71 = MLOAD va6e(0x40)
0xa72: va72(0x461bcd) = CONST 
0xa76: va76(0xe5) = CONST 
0xa78: va78(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL va76(0xe5) va72(0x461bcd)
0xa7a: MSTORE va71 va78(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xa7b: va7b(0x20) = CONST 
0xa7d: va7d(0x4) = CONST 
0xa80: va80 = ADD va71 va7d(0x4)
0xa81: MSTORE va80 va7b(0x20)
0xa82: va82(0x18) = CONST 
0xa84: va84(0x24) = CONST 
0xa87: va87 = ADD va71 va84(0x24)
0xa88: MSTORE va87 va82(0x18)
0xa89: va89(0x6d696e206c696d6974206f766572206d6178206c696d69740000000000000000) = CONST 
0xaaa: vaaa(0x44) = CONST 
0xaad: vaad = ADD va71 vaaa(0x44)
0xaae: MSTORE vaad va89(0x6d696e206c696d6974206f766572206d6178206c696d69740000000000000000)
0xab0: vab0 = MLOAD va6e(0x40)
0xab4: vab4 = SUB va71 vab0
0xab5: vab5(0x64) = CONST 
0xab7: vab7 = ADD vab5(0x64) vab4
0xab9: REVERT vab0 vab7
----------------------------------

Begin block 0xaba
prev = {'0xa63'}, next = {'0xac7', '0xb13'}
----------------------------------
Block 0xaba
0xabb: vabb(0x1) = CONST 
0xabd: vabd(0xf0) = CONST 
0xabf: vabf(0x1000000000000000000000000000000000000000000000000000000000000) = SHL vabd(0xf0) vabb(0x1)
0xac1: vac1 = GT v42d vabf(0x1000000000000000000000000000000000000000000000000000000000000)
0xac2: vac2 = ISZERO vac1
0xac3: vac3(0xb13) = CONST 
0xac6: JUMPI vac3(0xb13) vac2
----------------------------------

Begin block 0xac7
prev = {'0xaba'}, next = {}
----------------------------------
Block 0xac7
0xac7: vac7(0x40) = CONST 
0xaca: vaca = MLOAD vac7(0x40)
0xacb: vacb(0x461bcd) = CONST 
0xacf: vacf(0xe5) = CONST 
0xad1: vad1(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vacf(0xe5) vacb(0x461bcd)
0xad3: MSTORE vaca vad1(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xad4: vad4(0x20) = CONST 
0xad6: vad6(0x4) = CONST 
0xad9: vad9 = ADD vaca vad6(0x4)
0xada: MSTORE vad9 vad4(0x20)
0xadb: vadb(0x12) = CONST 
0xadd: vadd(0x24) = CONST 
0xae0: vae0 = ADD vaca vadd(0x24)
0xae1: MSTORE vae0 vadb(0x12)
0xae2: vae2(0x6d6178416d6f756e7420746f6f20686967680000000000000000000000000000) = CONST 
0xb03: vb03(0x44) = CONST 
0xb06: vb06 = ADD vaca vb03(0x44)
0xb07: MSTORE vb06 vae2(0x6d6178416d6f756e7420746f6f20686967680000000000000000000000000000)
0xb09: vb09 = MLOAD vac7(0x40)
0xb0d: vb0d = SUB vaca vb09
0xb0e: vb0e(0x64) = CONST 
0xb10: vb10 = ADD vb0e(0x64) vb0d
0xb12: REVERT vb09 vb10
----------------------------------

Begin block 0xb13
prev = {'0xaba'}, next = {'0x19e0x402'}
----------------------------------
Block 0xb13
0xb14: vb14(0x2) = CONST 
0xb18: SSTORE vb14(0x2) v428
0xb19: vb19(0x3) = CONST 
0xb1d: SSTORE vb19(0x3) v42d
0xb1e: vb1e(0x40) = CONST 
0xb21: vb21 = MLOAD vb1e(0x40)
0xb24: MSTORE vb21 v428
0xb25: vb25(0x20) = CONST 
0xb28: vb28 = ADD vb21 vb25(0x20)
0xb2b: MSTORE vb28 v42d
0xb2d: vb2d = MLOAD vb1e(0x40)
0xb2e: vb2e(0xab1a2e99a7a60d154f951a42eca140d755f93d41ccfca4b6f7d5e521b64bee86) = CONST 
0xb53: vb53 = SUB vb21 vb2d
0xb56: vb56 = ADD vb1e(0x40) vb53
0xb58: LOG1 vb2d vb56 vb2e(0xab1a2e99a7a60d154f951a42eca140d755f93d41ccfca4b6f7d5e521b64bee86)
0xb5d: JUMP v410(0x19e)
----------------------------------

Begin block 0xb5e
prev = {'0x43e'}, next = {'0x2d30x432'}
----------------------------------
Block 0xb5e
0xb5f: vb5f(0x3) = CONST 
0xb61: vb61 = SLOAD vb5f(0x3)
0xb63: JUMP v440(0x2d3)
----------------------------------

Begin block 0xb64
prev = {'0x46a'}, next = {'0xb77', '0xbb1'}
----------------------------------
Block 0xb64
0xb65: vb65(0x0) = CONST 
0xb67: vb67 = SLOAD vb65(0x0)
0xb68: vb68(0x1) = CONST 
0xb6a: vb6a(0x1) = CONST 
0xb6c: vb6c(0xa0) = CONST 
0xb6e: vb6e(0x10000000000000000000000000000000000000000) = SHL vb6c(0xa0) vb6a(0x1)
0xb6f: vb6f(0xffffffffffffffffffffffffffffffffffffffff) = SUB vb6e(0x10000000000000000000000000000000000000000) vb68(0x1)
0xb70: vb70 = AND vb6f(0xffffffffffffffffffffffffffffffffffffffff) vb67
0xb71: vb71 = CALLER 
0xb72: vb72 = EQ vb71 vb70
0xb73: vb73(0xbb1) = CONST 
0xb76: JUMPI vb73(0xbb1) vb72
----------------------------------

Begin block 0xb77
prev = {'0xb64'}, next = {}
----------------------------------
Block 0xb77
0xb77: vb77(0x40) = CONST 
0xb7a: vb7a = MLOAD vb77(0x40)
0xb7b: vb7b(0x461bcd) = CONST 
0xb7f: vb7f(0xe5) = CONST 
0xb81: vb81(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vb7f(0xe5) vb7b(0x461bcd)
0xb83: MSTORE vb7a vb81(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xb84: vb84(0x20) = CONST 
0xb86: vb86(0x4) = CONST 
0xb89: vb89 = ADD vb7a vb86(0x4)
0xb8a: MSTORE vb89 vb84(0x20)
0xb8b: vb8b(0x1c) = CONST 
0xb8d: vb8d(0x24) = CONST 
0xb90: vb90 = ADD vb7a vb8d(0x24)
0xb91: MSTORE vb90 vb8b(0x1c)
0xb92: vb92(0x0) = CONST 
0xb95: vb95 = MLOAD vb92(0x0)
0xb96: vb96(0x20) = CONST 
0xb98: vb98(0xe27) = CONST 
0xba0: MSTORE vb92(0x0) vb95
0xba1: vba1(0x44) = CONST 
0xba4: vba4 = ADD vb7a vba1(0x44)
0xba5: MSTORE vba4 vf47(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000)
0xba7: vba7 = MLOAD vb77(0x40)
0xbab: vbab = SUB vb7a vba7
0xbac: vbac(0x64) = CONST 
0xbae: vbae = ADD vbac(0x64) vbab
0xbb0: REVERT vba7 vbae
0xf47: vf47(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000) = CONST 
----------------------------------

Begin block 0xbb1
prev = {'0xb64'}, next = {'0xc1c', '0xbd0'}
----------------------------------
Block 0xbb1
0xbb2: vbb2(0x0) = CONST 
0xbb4: vbb4 = SLOAD vbb2(0x0)
0xbb7: vbb7(0x1) = CONST 
0xbb9: vbb9(0xb8) = CONST 
0xbbb: vbbb(0x10000000000000000000000000000000000000000000000) = SHL vbb9(0xb8) vbb7(0x1)
0xbbd: vbbd = DIV vbb4 vbbb(0x10000000000000000000000000000000000000000000000)
0xbbe: vbbe(0xffff) = CONST 
0xbc1: vbc1 = AND vbbe(0xffff) vbbd
0xbc2: vbc2(0x1) = CONST 
0xbc4: vbc4(0x1) = CONST 
0xbc6: vbc6(0xa0) = CONST 
0xbc8: vbc8(0x10000000000000000000000000000000000000000) = SHL vbc6(0xa0) vbc4(0x1)
0xbc9: vbc9(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbc8(0x10000000000000000000000000000000000000000) vbc2(0x1)
0xbcb: vbcb = AND v475 vbc9(0xffffffffffffffffffffffffffffffffffffffff)
0xbcc: vbcc(0xc1c) = CONST 
0xbcf: JUMPI vbcc(0xc1c) vbcb
----------------------------------

Begin block 0xbd0
prev = {'0xbb1'}, next = {}
----------------------------------
Block 0xbd0
0xbd0: vbd0(0x40) = CONST 
0xbd3: vbd3 = MLOAD vbd0(0x40)
0xbd4: vbd4(0x461bcd) = CONST 
0xbd8: vbd8(0xe5) = CONST 
0xbda: vbda(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vbd8(0xe5) vbd4(0x461bcd)
0xbdc: MSTORE vbd3 vbda(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xbdd: vbdd(0x20) = CONST 
0xbdf: vbdf(0x4) = CONST 
0xbe2: vbe2 = ADD vbd3 vbdf(0x4)
0xbe3: MSTORE vbe2 vbdd(0x20)
0xbe4: vbe4(0x1b) = CONST 
0xbe6: vbe6(0x24) = CONST 
0xbe9: vbe9 = ADD vbd3 vbe6(0x24)
0xbea: MSTORE vbe9 vbe4(0x1b)
0xbeb: vbeb(0x6e756c6c20737761707320636f6e747261637420616464726573730000000000) = CONST 
0xc0c: vc0c(0x44) = CONST 
0xc0f: vc0f = ADD vbd3 vc0c(0x44)
0xc10: MSTORE vc0f vbeb(0x6e756c6c20737761707320636f6e747261637420616464726573730000000000)
0xc12: vc12 = MLOAD vbd0(0x40)
0xc16: vc16 = SUB vbd3 vc12
0xc17: vc17(0x64) = CONST 
0xc19: vc19 = ADD vc17(0x64) vc16
0xc1b: REVERT vc12 vc19
----------------------------------

Begin block 0xc1c
prev = {'0xbb1'}, next = {'0xc5a', '0xc56'}
----------------------------------
Block 0xc1c
0xc1e: vc1e(0xffff) = CONST 
0xc21: vc21 = AND vc1e(0xffff) vbc1
0xc23: vc23(0x1) = CONST 
0xc25: vc25(0x1) = CONST 
0xc27: vc27(0xa0) = CONST 
0xc29: vc29(0x10000000000000000000000000000000000000000) = SHL vc27(0xa0) vc25(0x1)
0xc2a: vc2a(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc29(0x10000000000000000000000000000000000000000) vc23(0x1)
0xc2b: vc2b = AND vc2a(0xffffffffffffffffffffffffffffffffffffffff) v475
0xc2c: vc2c(0x8815eb39) = CONST 
0xc31: vc31(0x40) = CONST 
0xc33: vc33 = MLOAD vc31(0x40)
0xc35: vc35(0xffffffff) = CONST 
0xc3a: vc3a(0x8815eb39) = AND vc35(0xffffffff) vc2c(0x8815eb39)
0xc3b: vc3b(0xe0) = CONST 
0xc3d: vc3d(0x8815eb3900000000000000000000000000000000000000000000000000000000) = SHL vc3b(0xe0) vc3a(0x8815eb39)
0xc3f: MSTORE vc33 vc3d(0x8815eb3900000000000000000000000000000000000000000000000000000000)
0xc40: vc40(0x4) = CONST 
0xc42: vc42 = ADD vc40(0x4) vc33
0xc43: vc43(0x20) = CONST 
0xc45: vc45(0x40) = CONST 
0xc47: vc47 = MLOAD vc45(0x40)
0xc4a: vc4a = SUB vc42 vc47
0xc4e: vc4e = EXTCODESIZE vc2b
0xc4f: vc4f = ISZERO vc4e
0xc51: vc51 = ISZERO vc4f
0xc52: vc52(0xc5a) = CONST 
0xc55: JUMPI vc52(0xc5a) vc51
----------------------------------

Begin block 0xc56
prev = {'0xc1c'}, next = {}
----------------------------------
Block 0xc56
0xc56: vc56(0x0) = CONST 
0xc59: REVERT vc56(0x0) vc56(0x0)
----------------------------------

Begin block 0xc5a
prev = {'0xc1c'}, next = {'0xc65', '0xc6e'}
----------------------------------
Block 0xc5a
0xc5c: vc5c = GAS 
0xc5d: vc5d = STATICCALL vc5c vc2b vc47 vc4a vc47 vc43(0x20)
0xc5e: vc5e = ISZERO vc5d
0xc60: vc60 = ISZERO vc5e
0xc61: vc61(0xc6e) = CONST 
0xc64: JUMPI vc61(0xc6e) vc60
----------------------------------

Begin block 0xc65
prev = {'0xc5a'}, next = {}
----------------------------------
Block 0xc65
0xc65: vc65 = RETURNDATASIZE 
0xc66: vc66(0x0) = CONST 
0xc69: RETURNDATACOPY vc66(0x0) vc66(0x0) vc65
0xc6a: vc6a = RETURNDATASIZE 
0xc6b: vc6b(0x0) = CONST 
0xc6d: REVERT vc6b(0x0) vc6a
----------------------------------

Begin block 0xc6e
prev = {'0xc5a'}, next = {'0xc84', '0xc80'}
----------------------------------
Block 0xc6e
0xc73: vc73(0x40) = CONST 
0xc75: vc75 = MLOAD vc73(0x40)
0xc76: vc76 = RETURNDATASIZE 
0xc77: vc77(0x20) = CONST 
0xc7a: vc7a = LT vc76 vc77(0x20)
0xc7b: vc7b = ISZERO vc7a
0xc7c: vc7c(0xc84) = CONST 
0xc7f: JUMPI vc7c(0xc84) vc7b
----------------------------------

Begin block 0xc80
prev = {'0xc6e'}, next = {}
----------------------------------
Block 0xc80
0xc80: vc80(0x0) = CONST 
0xc83: REVERT vc80(0x0) vc80(0x0)
----------------------------------

Begin block 0xc84
prev = {'0xc6e'}, next = {'0xc90', '0xcc6'}
----------------------------------
Block 0xc84
0xc86: vc86 = MLOAD vc75
0xc87: vc87(0xffff) = CONST 
0xc8a: vc8a = AND vc87(0xffff) vc86
0xc8b: vc8b = EQ vc8a vc21
0xc8c: vc8c(0xcc6) = CONST 
0xc8f: JUMPI vc8c(0xcc6) vc8b
----------------------------------

Begin block 0xc90
prev = {'0xc84'}, next = {}
----------------------------------
Block 0xc90
0xc90: vc90(0x40) = CONST 
0xc92: vc92 = MLOAD vc90(0x40)
0xc93: vc93(0x461bcd) = CONST 
0xc97: vc97(0xe5) = CONST 
0xc99: vc99(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vc97(0xe5) vc93(0x461bcd)
0xc9b: MSTORE vc92 vc99(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xc9c: vc9c(0x4) = CONST 
0xc9e: vc9e = ADD vc9c(0x4) vc92
0xca1: vca1(0x20) = CONST 
0xca3: vca3 = ADD vca1(0x20) vc9e
0xca6: vca6 = SUB vca3 vc9e
0xca8: MSTORE vc9e vca6
0xca9: vca9(0x2b) = CONST 
0xcac: MSTORE vca3 vca9(0x2b)
0xcad: vcad(0x20) = CONST 
0xcaf: vcaf = ADD vcad(0x20) vca3
0xcb1: vcb1(0xe6c) = CONST 
0xcb4: vcb4(0x2b) = CONST 
0xcb7: CODECOPY vcaf vcb1(0xe6c) vcb4(0x2b)
0xcb8: vcb8(0x40) = CONST 
0xcba: vcba = ADD vcb8(0x40) vcaf
0xcbe: vcbe(0x40) = CONST 
0xcc0: vcc0 = MLOAD vcbe(0x40)
0xcc3: vcc3 = SUB vcba vcc0
0xcc5: REVERT vcc0 vcc3
----------------------------------

Begin block 0xcc6
prev = {'0xc84'}, next = {'0x19e0x447'}
----------------------------------
Block 0xcc6
0xcc7: vcc7(0x1) = CONST 
0xcca: vcca = SLOAD vcc7(0x1)
0xccb: vccb(0x1) = CONST 
0xccd: vccd(0x1) = CONST 
0xccf: vccf(0xa0) = CONST 
0xcd1: vcd1(0x10000000000000000000000000000000000000000) = SHL vccf(0xa0) vccd(0x1)
0xcd2: vcd2(0xffffffffffffffffffffffffffffffffffffffff) = SUB vcd1(0x10000000000000000000000000000000000000000) vccb(0x1)
0xcd5: vcd5 = AND vcd2(0xffffffffffffffffffffffffffffffffffffffff) v475
0xcd6: vcd6(0x1) = CONST 
0xcd8: vcd8(0x1) = CONST 
0xcda: vcda(0xa0) = CONST 
0xcdc: vcdc(0x10000000000000000000000000000000000000000) = SHL vcda(0xa0) vcd8(0x1)
0xcdd: vcdd(0xffffffffffffffffffffffffffffffffffffffff) = SUB vcdc(0x10000000000000000000000000000000000000000) vcd6(0x1)
0xcde: vcde(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vcdd(0xffffffffffffffffffffffffffffffffffffffff)
0xce0: vce0 = AND vcca vcde(0xffffffffffffffffffffffff0000000000000000000000000000000000000000)
0xce2: vce2 = OR vcd5 vce0
0xce5: SSTORE vcc7(0x1) vce2
0xce6: vce6(0x40) = CONST 
0xce9: vce9 = MLOAD vce6(0x40)
0xced: vced = AND vcca vcd2(0xffffffffffffffffffffffffffffffffffffffff)
0xcf0: MSTORE vce9 vced
0xcf1: vcf1(0x20) = CONST 
0xcf4: vcf4 = ADD vce9 vcf1(0x20)
0xcf8: MSTORE vcf4 vcd5
0xcfa: vcfa = MLOAD vce6(0x40)
0xcfb: vcfb(0x1da46151351b5d8e3ef8081319c4e364056c3fe3038a275a6b4638ab203b3f31) = CONST 
0xd20: vd20 = SUB vce9 vcfa
0xd23: vd23 = ADD vce6(0x40) vd20
0xd25: LOG1 vcfa vd23 vcfb(0x1da46151351b5d8e3ef8081319c4e364056c3fe3038a275a6b4638ab203b3f31)
0xd2a: JUMP v455(0x19e)
----------------------------------

Begin block 0xd2b
prev = {'0x486'}, next = {'0x37a0x47a'}
----------------------------------
Block 0xd2b
0xd2c: vd2c(0x1) = CONST 
0xd2e: vd2e = SLOAD vd2c(0x1)
0xd2f: vd2f(0x1) = CONST 
0xd31: vd31(0x1) = CONST 
0xd33: vd33(0xa0) = CONST 
0xd35: vd35(0x10000000000000000000000000000000000000000) = SHL vd33(0xa0) vd31(0x1)
0xd36: vd36(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd35(0x10000000000000000000000000000000000000000) vd2f(0x1)
0xd37: vd37 = AND vd36(0xffffffffffffffffffffffffffffffffffffffff) vd2e
0xd39: JUMP v488(0x37a)
----------------------------------

Begin block 0xd3a
prev = {'0x51a'}, next = {'0xd87', '0xd4d'}
----------------------------------
Block 0xd3a
0xd3b: vd3b(0x0) = CONST 
0xd3d: vd3d = SLOAD vd3b(0x0)
0xd3e: vd3e(0x1) = CONST 
0xd40: vd40(0x1) = CONST 
0xd42: vd42(0xa0) = CONST 
0xd44: vd44(0x10000000000000000000000000000000000000000) = SHL vd42(0xa0) vd40(0x1)
0xd45: vd45(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd44(0x10000000000000000000000000000000000000000) vd3e(0x1)
0xd46: vd46 = AND vd45(0xffffffffffffffffffffffffffffffffffffffff) vd3d
0xd47: vd47 = CALLER 
0xd48: vd48 = EQ vd47 vd46
0xd49: vd49(0xd87) = CONST 
0xd4c: JUMPI vd49(0xd87) vd48
----------------------------------

Begin block 0xd4d
prev = {'0xd3a'}, next = {}
----------------------------------
Block 0xd4d
0xd4d: vd4d(0x40) = CONST 
0xd50: vd50 = MLOAD vd4d(0x40)
0xd51: vd51(0x461bcd) = CONST 
0xd55: vd55(0xe5) = CONST 
0xd57: vd57(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vd55(0xe5) vd51(0x461bcd)
0xd59: MSTORE vd50 vd57(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xd5a: vd5a(0x20) = CONST 
0xd5c: vd5c(0x4) = CONST 
0xd5f: vd5f = ADD vd50 vd5c(0x4)
0xd60: MSTORE vd5f vd5a(0x20)
0xd61: vd61(0x1c) = CONST 
0xd63: vd63(0x24) = CONST 
0xd66: vd66 = ADD vd50 vd63(0x24)
0xd67: MSTORE vd66 vd61(0x1c)
0xd68: vd68(0x0) = CONST 
0xd6b: vd6b = MLOAD vd68(0x0)
0xd6c: vd6c(0x20) = CONST 
0xd6e: vd6e(0xe27) = CONST 
0xd76: MSTORE vd68(0x0) vd6b
0xd77: vd77(0x44) = CONST 
0xd7a: vd7a = ADD vd50 vd77(0x44)
0xd7b: MSTORE vd7a vf4c(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000)
0xd7d: vd7d = MLOAD vd4d(0x40)
0xd81: vd81 = SUB vd50 vd7d
0xd82: vd82(0x64) = CONST 
0xd84: vd84 = ADD vd82(0x64) vd81
0xd86: REVERT vd7d vd84
0xf4c: vf4c(0x6f6e6c7920746865206f776e65722063616e2063616c6c207468697300000000) = CONST 
----------------------------------

Begin block 0xd87
prev = {'0xd3a'}, next = {'0xe22', '0x6110x48f'}
----------------------------------
Block 0xd87
0xd88: vd88(0x1) = CONST 
0xd8a: vd8a = SLOAD vd88(0x1)
0xd8b: vd8b(0x40) = CONST 
0xd8d: vd8d = MLOAD vd8b(0x40)
0xd8e: vd8e(0x9a3c6e29) = CONST 
0xd93: vd93(0xe0) = CONST 
0xd95: vd95(0x9a3c6e2900000000000000000000000000000000000000000000000000000000) = SHL vd93(0xe0) vd8e(0x9a3c6e29)
0xd97: MSTORE vd8d vd95(0x9a3c6e2900000000000000000000000000000000000000000000000000000000)
0xd98: vd98 = ADDRESS 
0xd99: vd99(0x4) = CONST 
0xd9c: vd9c = ADD vd8d vd99(0x4)
0xd9f: MSTORE vd9c vd98
0xda0: vda0(0x1) = CONST 
0xda2: vda2(0x1) = CONST 
0xda4: vda4(0xa0) = CONST 
0xda6: vda6(0x10000000000000000000000000000000000000000) = SHL vda4(0xa0) vda2(0x1)
0xda7: vda7(0xffffffffffffffffffffffffffffffffffffffff) = SUB vda6(0x10000000000000000000000000000000000000000) vda0(0x1)
0xdaa: vdaa = AND vda7(0xffffffffffffffffffffffffffffffffffffffff) v4be
0xdab: vdab(0x24) = CONST 
0xdae: vdae = ADD vd8d vdab(0x24)
0xdaf: MSTORE vdae vdaa
0xdb2: vdb2 = AND vda7(0xffffffffffffffffffffffffffffffffffffffff) v4c7
0xdb3: vdb3(0x44) = CONST 
0xdb6: vdb6 = ADD vd8d vdb3(0x44)
0xdb7: MSTORE vdb6 vdb2
0xdb8: vdb8(0x84) = CONST 
0xdbb: vdbb = ADD vd8d vdb8(0x84)
0xdbe: MSTORE vdbb v520
0xdbf: vdbf(0xa0) = CONST 
0xdc1: vdc1(0x64) = CONST 
0xdc4: vdc4 = ADD vd8d vdc1(0x64)
0xdc7: MSTORE vdc4 vdbf(0xa0)
0xdc8: vdc8(0xa4) = CONST 
0xdcb: vdcb = ADD vd8d vdc8(0xa4)
0xdce: MSTORE vdcb v4fa
0xdd0: vdd0 = AND vd8a vda7(0xffffffffffffffffffffffffffffffffffffffff)
0xdd2: vdd2(0x9a3c6e29) = CONST 
0xde4: vde4(0xc4) = CONST 
0xde6: vde6 = ADD vde4(0xc4) vd8d
0xdec: CALLDATACOPY vde6 v4fe v4fa
0xded: vded(0x0) = CONST 
0xdf1: vdf1 = ADD vde6 v4fa
0xdf2: MSTORE vdf1 vded(0x0)
0xdf3: vdf3(0x1f) = CONST 
0xdf5: vdf5(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT vdf3(0x1f)
0xdf6: vdf6(0x1f) = CONST 
0xdf9: vdf9 = ADD v4fa vdf6(0x1f)
0xdfa: vdfa = AND vdf9 vdf5(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
0xdff: vdff = ADD vde6 vdfa
0xe0d: ve0d(0x0) = CONST 
0xe0f: ve0f(0x40) = CONST 
0xe11: ve11 = MLOAD ve0f(0x40)
0xe14: ve14 = SUB vdff ve11
0xe16: ve16(0x0) = CONST 
0xe1a: ve1a = EXTCODESIZE vdd0
0xe1b: ve1b = ISZERO ve1a
0xe1d: ve1d = ISZERO ve1b
0xe1e: ve1e(0x611) = CONST 
0xe21: JUMPI ve1e(0x611) ve1d
----------------------------------

Begin block 0xe22
prev = {'0xd87'}, next = {}
----------------------------------
Block 0xe22
0xe22: ve22(0x0) = CONST 
0xe25: REVERT ve22(0x0) ve22(0x0)
----------------------------------

Begin block 0xeef
prev = {'0xf3', '0x0'}, next = {'0xfe0x0'}
----------------------------------
Block 0xeef
0xef0: vef0(0xfe) = CONST 
0xef1: CALLPRIVATE vef0(0xfe)
----------------------------------

Begin block 0xef2
prev = {'0xd1'}, next = {}
----------------------------------
Block 0xef2
0xef3: vef3(0x1a0) = CONST 
0xef4: CALLPRIVATE vef3(0x1a0)
----------------------------------

Begin block 0xef5
prev = {'0xdd'}, next = {}
----------------------------------
Block 0xef5
0xef6: vef6(0x236) = CONST 
0xef7: CALLPRIVATE vef6(0x236)
----------------------------------

Begin block 0xef8
prev = {'0xe8'}, next = {}
----------------------------------
Block 0xef8
0xef9: vef9(0x25f) = CONST 
0xefa: CALLPRIVATE vef9(0x25f)
----------------------------------

Begin block 0xefb
prev = {'0xf3'}, next = {}
----------------------------------
Block 0xefb
0xefc: vefc(0x28b) = CONST 
0xefd: CALLPRIVATE vefc(0x28b)
----------------------------------

Begin block 0xefe
prev = {'0xa1'}, next = {}
----------------------------------
Block 0xefe
0xeff: veff(0x2be) = CONST 
0xf00: CALLPRIVATE veff(0x2be)
----------------------------------

Begin block 0xf01
prev = {'0xac'}, next = {}
----------------------------------
Block 0xf01
0xf02: vf02(0x2e5) = CONST 
0xf03: CALLPRIVATE vf02(0x2e5)
----------------------------------

Begin block 0xf04
prev = {'0xb7'}, next = {}
----------------------------------
Block 0xf04
0xf05: vf05(0x2fa) = CONST 
0xf06: CALLPRIVATE vf05(0x2fa)
----------------------------------

Begin block 0xf07
prev = {'0xc2'}, next = {}
----------------------------------
Block 0xf07
0xf08: vf08(0x30f) = CONST 
0xf09: CALLPRIVATE vf08(0x30f)
----------------------------------

Begin block 0xf0a
prev = {'0x64'}, next = {}
----------------------------------
Block 0xf0a
0xf0b: vf0b(0x339) = CONST 
0xf0c: CALLPRIVATE vf0b(0x339)
----------------------------------

Begin block 0xf0d
prev = {'0x70'}, next = {}
----------------------------------
Block 0xf0d
0xf0e: vf0e(0x365) = CONST 
0xf0f: CALLPRIVATE vf0e(0x365)
----------------------------------

Begin block 0xf10
prev = {'0x7b'}, next = {}
----------------------------------
Block 0xf10
0xf11: vf11(0x396) = CONST 
0xf12: CALLPRIVATE vf11(0x396)
----------------------------------

Begin block 0xf13
prev = {'0x86'}, next = {}
----------------------------------
Block 0xf13
0xf14: vf14(0x3c9) = CONST 
0xf15: CALLPRIVATE vf14(0x3c9)
----------------------------------

Begin block 0xf16
prev = {'0x29'}, next = {}
----------------------------------
Block 0xf16
0xf17: vf17(0x402) = CONST 
0xf18: CALLPRIVATE vf17(0x402)
----------------------------------

Begin block 0xf19
prev = {'0x34'}, next = {}
----------------------------------
Block 0xf19
0xf1a: vf1a(0x432) = CONST 
0xf1b: CALLPRIVATE vf1a(0x432)
----------------------------------

Begin block 0xf1c
prev = {'0x3f'}, next = {}
----------------------------------
Block 0xf1c
0xf1d: vf1d(0x447) = CONST 
0xf1e: CALLPRIVATE vf1d(0x447)
----------------------------------

Begin block 0xf1f
prev = {'0x4a'}, next = {}
----------------------------------
Block 0xf1f
0xf20: vf20(0x47a) = CONST 
0xf21: CALLPRIVATE vf20(0x47a)
----------------------------------

Begin block 0xf22
prev = {'0x55'}, next = {}
----------------------------------
Block 0xf22
0xf23: vf23(0x48f) = CONST 
0xf24: CALLPRIVATE vf23(0x48f)
----------------------------------
