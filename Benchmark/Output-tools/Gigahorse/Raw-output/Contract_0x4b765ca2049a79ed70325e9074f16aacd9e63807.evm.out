
Begin block 0x0
prev = {}, next = {'0x10', '0xc'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x7be', '0x1a'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x7a4: v7a4(0x7be) = CONST 
0x7a5: JUMPI v7a4(0x7be) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x48', '0x8e'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x3c: v3c = DIV v1c v1d(0x100000000000000000000000000000000000000000000000000000000)
0x3e: v3e(0x8f32d59b) = CONST 
0x43: v43 = GT v3e(0x8f32d59b) v3c
0x44: v44(0x8e) = CONST 
0x47: JUMPI v44(0x8e) v43
----------------------------------

Begin block 0x48
prev = {'0x1a'}, next = {'0x53', '0x7d3'}
----------------------------------
Block 0x48
0x49: v49(0x8f32d59b) = CONST 
0x4e: v4e = EQ v49(0x8f32d59b) v3c
0x7a6: v7a6(0x7d3) = CONST 
0x7a7: JUMPI v7a6(0x7d3) v4e
----------------------------------

Begin block 0x53
prev = {'0x48'}, next = {'0x7d6', '0x5e'}
----------------------------------
Block 0x53
0x54: v54(0x9b364162) = CONST 
0x59: v59 = EQ v54(0x9b364162) v3c
0x7a8: v7a8(0x7d6) = CONST 
0x7a9: JUMPI v7a8(0x7d6) v59
----------------------------------

Begin block 0x5e
prev = {'0x53'}, next = {'0x69', '0x7d9'}
----------------------------------
Block 0x5e
0x5f: v5f(0xa622ee7c) = CONST 
0x64: v64 = EQ v5f(0xa622ee7c) v3c
0x7aa: v7aa(0x7d9) = CONST 
0x7ab: JUMPI v7aa(0x7d9) v64
----------------------------------

Begin block 0x69
prev = {'0x5e'}, next = {'0x7dc', '0x74'}
----------------------------------
Block 0x69
0x6a: v6a(0xceb68c23) = CONST 
0x6f: v6f = EQ v6a(0xceb68c23) v3c
0x7ac: v7ac(0x7dc) = CONST 
0x7ad: JUMPI v7ac(0x7dc) v6f
----------------------------------

Begin block 0x74
prev = {'0x69'}, next = {'0x7df', '0x7f'}
----------------------------------
Block 0x74
0x75: v75(0xea39a555) = CONST 
0x7a: v7a = EQ v75(0xea39a555) v3c
0x7ae: v7ae(0x7df) = CONST 
0x7af: JUMPI v7ae(0x7df) v7a
----------------------------------

Begin block 0x7f
prev = {'0x74'}, next = {'0x7e2', '0x8a'}
----------------------------------
Block 0x7f
0x80: v80(0xf2fde38b) = CONST 
0x85: v85 = EQ v80(0xf2fde38b) v3c
0x7b0: v7b0(0x7e2) = CONST 
0x7b1: JUMPI v7b0(0x7e2) v85
----------------------------------

Begin block 0x8a
prev = {'0x7f'}, next = {'0xd10x0'}
----------------------------------
Block 0x8a
0x8a: v8a(0xd1) = CONST 
0x8d: JUMP v8a(0xd1)
----------------------------------

Begin block 0x8e
prev = {'0x1a'}, next = {'0x9a', '0x7c1'}
----------------------------------
Block 0x8e
0x90: v90(0x385b581) = CONST 
0x95: v95 = EQ v90(0x385b581) v3c
0x7b2: v7b2(0x7c1) = CONST 
0x7b3: JUMPI v7b2(0x7c1) v95
----------------------------------

Begin block 0x9a
prev = {'0x8e'}, next = {'0xa5', '0x7c4'}
----------------------------------
Block 0x9a
0x9b: v9b(0x13c8de46) = CONST 
0xa0: va0 = EQ v9b(0x13c8de46) v3c
0x7b4: v7b4(0x7c4) = CONST 
0x7b5: JUMPI v7b4(0x7c4) va0
----------------------------------

Begin block 0xa5
prev = {'0x9a'}, next = {'0x7c7', '0xb0'}
----------------------------------
Block 0xa5
0xa6: va6(0x42b230a6) = CONST 
0xab: vab = EQ va6(0x42b230a6) v3c
0x7b6: v7b6(0x7c7) = CONST 
0x7b7: JUMPI v7b6(0x7c7) vab
----------------------------------

Begin block 0xb0
prev = {'0xa5'}, next = {'0xbb', '0x7ca'}
----------------------------------
Block 0xb0
0xb1: vb1(0x652b9b41) = CONST 
0xb6: vb6 = EQ vb1(0x652b9b41) v3c
0x7b8: v7b8(0x7ca) = CONST 
0x7b9: JUMPI v7b8(0x7ca) vb6
----------------------------------

Begin block 0xbb
prev = {'0xb0'}, next = {'0xc6', '0x7cd'}
----------------------------------
Block 0xbb
0xbc: vbc(0x715018a6) = CONST 
0xc1: vc1 = EQ vbc(0x715018a6) v3c
0x7ba: v7ba(0x7cd) = CONST 
0x7bb: JUMPI v7ba(0x7cd) vc1
----------------------------------

Begin block 0xc6
prev = {'0xbb'}, next = {'0x7be', '0x7d0'}
----------------------------------
Block 0xc6
0xc7: vc7(0x8da5cb5b) = CONST 
0xcc: vcc = EQ vc7(0x8da5cb5b) v3c
0x7bc: v7bc(0x7d0) = CONST 
0x7bd: JUMPI v7bc(0x7d0) vcc
----------------------------------

Begin block 0xd1
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0xd1
0xd2: vd2(0x0) = CONST 
0xd5: REVERT vd2(0x0) vd2(0x0)
----------------------------------

Begin block 0xd10x0
prev = {'0x7be', '0x8a'}, next = {}
----------------------------------
Block 0xd10x0
0xd20x0: v0d2(0x0) = CONST 
0xd50x0: REVERT v0d2(0x0) v0d2(0x0)
----------------------------------

Begin block 0xd6
prev = {}, next = {'0xec', '0xe8'}
----------------------------------
function isSignee(address)()
Block 0xd6
0xd7: vd7(0xfc) = CONST 
0xda: vda(0x4) = CONST 
0xdd: vdd = CALLDATASIZE 
0xde: vde = SUB vdd vda(0x4)
0xdf: vdf(0x20) = CONST 
0xe2: ve2 = LT vde vdf(0x20)
0xe3: ve3 = ISZERO ve2
0xe4: ve4(0xec) = CONST 
0xe7: JUMPI ve4(0xec) ve3
----------------------------------

Begin block 0xe8
prev = {'0xd6'}, next = {}
----------------------------------
Block 0xe8
0xe8: ve8(0x0) = CONST 
0xeb: REVERT ve8(0x0) ve8(0x0)
----------------------------------

Begin block 0xec
prev = {'0xd6'}, next = {'0x29b'}
----------------------------------
Block 0xec
0xee: vee = CALLDATALOAD vda(0x4)
0xef: vef(0x1) = CONST 
0xf1: vf1(0xa0) = CONST 
0xf3: vf3(0x2) = CONST 
0xf5: vf5(0x10000000000000000000000000000000000000000) = EXP vf3(0x2) vf1(0xa0)
0xf6: vf6(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf5(0x10000000000000000000000000000000000000000) vef(0x1)
0xf7: vf7 = AND vf6(0xffffffffffffffffffffffffffffffffffffffff) vee
0xf8: vf8(0x29b) = CONST 
0xfb: JUMP vf8(0x29b)
----------------------------------

Begin block 0xfc0xd6
prev = {'0x29b'}, next = {}
----------------------------------
Block 0xfc0xd6
0xfd0xd6: vd6fd(0x40) = CONST 
0x1000xd6: vd6100 = MLOAD vd6fd(0x40)
0x1020xd6: vd6102 = ISZERO v2ba
0x1030xd6: vd6103 = ISZERO vd6102
0x1050xd6: MSTORE vd6100 vd6103
0x1060xd6: vd6106 = MLOAD vd6fd(0x40)
0x10a0xd6: vd610a = SUB vd6100 vd6106
0x10b0xd6: vd610b(0x20) = CONST 
0x10d0xd6: vd610d = ADD vd610b(0x20) vd610a
0x10f0xd6: RETURN vd6106 vd610d
----------------------------------

Begin block 0xfc0x17d
prev = {'0x36e'}, next = {}
----------------------------------
Block 0xfc0x17d
0xfd0x17d: v17dfd(0x40) = CONST 
0x1000x17d: v17d100 = MLOAD v17dfd(0x40)
0x1020x17d: v17d102 = ISZERO v38c
0x1030x17d: v17d103 = ISZERO v17d102
0x1050x17d: MSTORE v17d100 v17d103
0x1060x17d: v17d106 = MLOAD v17dfd(0x40)
0x10a0x17d: v17d10a = SUB v17d100 v17d106
0x10b0x17d: v17d10b(0x20) = CONST 
0x10d0x17d: v17d10d = ADD v17d10b(0x20) v17d10a
0x10f0x17d: RETURN v17d106 v17d10d
----------------------------------

Begin block 0xfc0x1cf
prev = {'0x1cf'}, next = {}
----------------------------------
Block 0xfc0x1cf
0xfd0x1cf: v1cffd(0x40) = CONST 
0x1000x1cf: v1cf100 = MLOAD v1cffd(0x40)
0x1020x1cf: v1cf102 = ISZERO v1d6_0
0x1030x1cf: v1cf103 = ISZERO v1cf102
0x1050x1cf: MSTORE v1cf100 v1cf103
0x1060x1cf: v1cf106 = MLOAD v1cffd(0x40)
0x10a0x1cf: v1cf10a = SUB v1cf100 v1cf106
0x10b0x1cf: v1cf10b(0x20) = CONST 
0x10d0x1cf: v1cf10d = ADD v1cf10b(0x20) v1cf10a
0x10f0x1cf: RETURN v1cf106 v1cf10d
----------------------------------

Begin block 0x110
prev = {}, next = {'0x126', '0x122'}
----------------------------------
function addVault(address,bytes32)()
Block 0x110
0x111: v111(0x13c) = CONST 
0x114: v114(0x4) = CONST 
0x117: v117 = CALLDATASIZE 
0x118: v118 = SUB v117 v114(0x4)
0x119: v119(0x40) = CONST 
0x11c: v11c = LT v118 v119(0x40)
0x11d: v11d = ISZERO v11c
0x11e: v11e(0x126) = CONST 
0x121: JUMPI v11e(0x126) v11d
----------------------------------

Begin block 0x122
prev = {'0x110'}, next = {}
----------------------------------
Block 0x122
0x122: v122(0x0) = CONST 
0x125: REVERT v122(0x0) v122(0x0)
----------------------------------

Begin block 0x126
prev = {'0x110'}, next = {'0x2bd'}
----------------------------------
Block 0x126
0x128: v128(0x1) = CONST 
0x12a: v12a(0xa0) = CONST 
0x12c: v12c(0x2) = CONST 
0x12e: v12e(0x10000000000000000000000000000000000000000) = EXP v12c(0x2) v12a(0xa0)
0x12f: v12f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v12e(0x10000000000000000000000000000000000000000) v128(0x1)
0x131: v131 = CALLDATALOAD v114(0x4)
0x132: v132 = AND v131 v12f(0xffffffffffffffffffffffffffffffffffffffff)
0x134: v134(0x20) = CONST 
0x136: v136 = ADD v134(0x20) v114(0x4)
0x137: v137 = CALLDATALOAD v136
0x138: v138(0x2bd) = CONST 
0x13b: JUMP v138(0x2bd)
----------------------------------

Begin block 0x13c0x110
prev = {'0x309'}, next = {}
----------------------------------
Block 0x13c0x110
0x13d0x110: STOP 
----------------------------------

Begin block 0x13c0x1a3
prev = {'0x3db'}, next = {}
----------------------------------
Block 0x13c0x1a3
0x13d0x1a3: STOP 
----------------------------------

Begin block 0x13c0x1d7
prev = {'0x49e'}, next = {}
----------------------------------
Block 0x13c0x1d7
0x13d0x1d7: STOP 
----------------------------------

Begin block 0x13c0x223
prev = {'0x54c'}, next = {}
----------------------------------
Block 0x13c0x223
0x13d0x223: STOP 
----------------------------------

Begin block 0x13c0x249
prev = {'0x5e0'}, next = {}
----------------------------------
Block 0x13c0x249
0x13d0x249: STOP 
----------------------------------

Begin block 0x13c0x275
prev = {'0x67d'}, next = {}
----------------------------------
Block 0x13c0x275
0x13d0x275: STOP 
----------------------------------

Begin block 0x13e
prev = {}, next = {'0x154', '0x150'}
----------------------------------
function signees(address)()
Block 0x13e
0x13f: v13f(0x164) = CONST 
0x142: v142(0x4) = CONST 
0x145: v145 = CALLDATASIZE 
0x146: v146 = SUB v145 v142(0x4)
0x147: v147(0x20) = CONST 
0x14a: v14a = LT v146 v147(0x20)
0x14b: v14b = ISZERO v14a
0x14c: v14c(0x154) = CONST 
0x14f: JUMPI v14c(0x154) v14b
----------------------------------

Begin block 0x150
prev = {'0x13e'}, next = {}
----------------------------------
Block 0x150
0x150: v150(0x0) = CONST 
0x153: REVERT v150(0x0) v150(0x0)
----------------------------------

Begin block 0x154
prev = {'0x13e'}, next = {'0x352'}
----------------------------------
Block 0x154
0x156: v156 = CALLDATALOAD v142(0x4)
0x157: v157(0x1) = CONST 
0x159: v159(0xa0) = CONST 
0x15b: v15b(0x2) = CONST 
0x15d: v15d(0x10000000000000000000000000000000000000000) = EXP v15b(0x2) v159(0xa0)
0x15e: v15e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v15d(0x10000000000000000000000000000000000000000) v157(0x1)
0x15f: v15f = AND v15e(0xffffffffffffffffffffffffffffffffffffffff) v156
0x160: v160(0x352) = CONST 
0x163: JUMP v160(0x352)
----------------------------------

Begin block 0x1640x13e
prev = {'0x352'}, next = {}
----------------------------------
Block 0x1640x13e
0x1650x13e: v13e165(0x40) = CONST 
0x1680x13e: v13e168 = MLOAD v13e165(0x40)
0x16b0x13e: MSTORE v13e168 v365
0x16d0x13e: v13e16d = ISZERO v36b
0x16e0x13e: v13e16e = ISZERO v13e16d
0x16f0x13e: v13e16f(0x20) = CONST 
0x1720x13e: v13e172 = ADD v13e168 v13e16f(0x20)
0x1730x13e: MSTORE v13e172 v13e16e
0x1750x13e: v13e175 = MLOAD v13e165(0x40)
0x1790x13e: v13e179 = SUB v13e168 v13e175
0x17a0x13e: v13e17a = ADD v13e179 v13e165(0x40)
0x17c0x13e: RETURN v13e175 v13e17a
----------------------------------

Begin block 0x1640x1fd
prev = {'0x4e4'}, next = {}
----------------------------------
Block 0x1640x1fd
0x1650x1fd: v1fd165(0x40) = CONST 
0x1680x1fd: v1fd168 = MLOAD v1fd165(0x40)
0x16b0x1fd: MSTORE v1fd168 v4f4
0x16d0x1fd: v1fd16d = ISZERO v4fd
0x16e0x1fd: v1fd16e = ISZERO v1fd16d
0x16f0x1fd: v1fd16f(0x20) = CONST 
0x1720x1fd: v1fd172 = ADD v1fd168 v1fd16f(0x20)
0x1730x1fd: MSTORE v1fd172 v1fd16e
0x1750x1fd: v1fd175 = MLOAD v1fd165(0x40)
0x1790x1fd: v1fd179 = SUB v1fd168 v1fd175
0x17a0x1fd: v1fd17a = ADD v1fd179 v1fd165(0x40)
0x17c0x1fd: RETURN v1fd175 v1fd17a
----------------------------------

Begin block 0x17d
prev = {}, next = {'0x18f', '0x193'}
----------------------------------
function isVault(address)()
Block 0x17d
0x17e: v17e(0xfc) = CONST 
0x181: v181(0x4) = CONST 
0x184: v184 = CALLDATASIZE 
0x185: v185 = SUB v184 v181(0x4)
0x186: v186(0x20) = CONST 
0x189: v189 = LT v185 v186(0x20)
0x18a: v18a = ISZERO v189
0x18b: v18b(0x193) = CONST 
0x18e: JUMPI v18b(0x193) v18a
----------------------------------

Begin block 0x18f
prev = {'0x17d'}, next = {}
----------------------------------
Block 0x18f
0x18f: v18f(0x0) = CONST 
0x192: REVERT v18f(0x0) v18f(0x0)
----------------------------------

Begin block 0x193
prev = {'0x17d'}, next = {'0x36e'}
----------------------------------
Block 0x193
0x195: v195 = CALLDATALOAD v181(0x4)
0x196: v196(0x1) = CONST 
0x198: v198(0xa0) = CONST 
0x19a: v19a(0x2) = CONST 
0x19c: v19c(0x10000000000000000000000000000000000000000) = EXP v19a(0x2) v198(0xa0)
0x19d: v19d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v19c(0x10000000000000000000000000000000000000000) v196(0x1)
0x19e: v19e = AND v19d(0xffffffffffffffffffffffffffffffffffffffff) v195
0x19f: v19f(0x36e) = CONST 
0x1a2: JUMP v19f(0x36e)
----------------------------------

Begin block 0x1a3
prev = {}, next = {'0x38f'}
----------------------------------
function renounceOwnership()()
Block 0x1a3
0x1a4: v1a4(0x13c) = CONST 
0x1a7: v1a7(0x38f) = CONST 
0x1aa: JUMP v1a7(0x38f)
----------------------------------

Begin block 0x1ab
prev = {}, next = {'0x432'}
----------------------------------
function owner()()
Block 0x1ab
0x1ac: v1ac(0x1b3) = CONST 
0x1af: v1af(0x432) = CONST 
0x1b2: JUMP v1af(0x432)
----------------------------------

Begin block 0x1b3
prev = {'0x432'}, next = {}
----------------------------------
Block 0x1b3
0x1b4: v1b4(0x40) = CONST 
0x1b7: v1b7 = MLOAD v1b4(0x40)
0x1b8: v1b8(0x1) = CONST 
0x1ba: v1ba(0xa0) = CONST 
0x1bc: v1bc(0x2) = CONST 
0x1be: v1be(0x10000000000000000000000000000000000000000) = EXP v1bc(0x2) v1ba(0xa0)
0x1bf: v1bf(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1be(0x10000000000000000000000000000000000000000) v1b8(0x1)
0x1c2: v1c2 = AND v43e v1bf(0xffffffffffffffffffffffffffffffffffffffff)
0x1c4: MSTORE v1b7 v1c2
0x1c5: v1c5 = MLOAD v1b4(0x40)
0x1c9: v1c9 = SUB v1b7 v1c5
0x1ca: v1ca(0x20) = CONST 
0x1cc: v1cc = ADD v1ca(0x20) v1c9
0x1ce: RETURN v1c5 v1cc
----------------------------------

Begin block 0x1cf
prev = {}, next = {'0xfc0x1cf'}
----------------------------------
function isOwner()()
Block 0x1cf
0x1d0: v1d0(0xfc) = CONST 
0x1d3: v1d3(0x441) = CONST 
0x1d6: v1d6_0 = CALLPRIVATE v1d3(0x441) v1d0(0xfc)
----------------------------------

Begin block 0x1d7
prev = {}, next = {'0x1ed', '0x1e9'}
----------------------------------
function removeSignee(address)()
Block 0x1d7
0x1d8: v1d8(0x13c) = CONST 
0x1db: v1db(0x4) = CONST 
0x1de: v1de = CALLDATASIZE 
0x1df: v1df = SUB v1de v1db(0x4)
0x1e0: v1e0(0x20) = CONST 
0x1e3: v1e3 = LT v1df v1e0(0x20)
0x1e4: v1e4 = ISZERO v1e3
0x1e5: v1e5(0x1ed) = CONST 
0x1e8: JUMPI v1e5(0x1ed) v1e4
----------------------------------

Begin block 0x1e9
prev = {'0x1d7'}, next = {}
----------------------------------
Block 0x1e9
0x1e9: v1e9(0x0) = CONST 
0x1ec: REVERT v1e9(0x0) v1e9(0x0)
----------------------------------

Begin block 0x1ed
prev = {'0x1d7'}, next = {'0x452'}
----------------------------------
Block 0x1ed
0x1ef: v1ef = CALLDATALOAD v1db(0x4)
0x1f0: v1f0(0x1) = CONST 
0x1f2: v1f2(0xa0) = CONST 
0x1f4: v1f4(0x2) = CONST 
0x1f6: v1f6(0x10000000000000000000000000000000000000000) = EXP v1f4(0x2) v1f2(0xa0)
0x1f7: v1f7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1f6(0x10000000000000000000000000000000000000000) v1f0(0x1)
0x1f8: v1f8 = AND v1f7(0xffffffffffffffffffffffffffffffffffffffff) v1ef
0x1f9: v1f9(0x452) = CONST 
0x1fc: JUMP v1f9(0x452)
----------------------------------

Begin block 0x1fd
prev = {}, next = {'0x213', '0x20f'}
----------------------------------
function vaults(address)()
Block 0x1fd
0x1fe: v1fe(0x164) = CONST 
0x201: v201(0x4) = CONST 
0x204: v204 = CALLDATASIZE 
0x205: v205 = SUB v204 v201(0x4)
0x206: v206(0x20) = CONST 
0x209: v209 = LT v205 v206(0x20)
0x20a: v20a = ISZERO v209
0x20b: v20b(0x213) = CONST 
0x20e: JUMPI v20b(0x213) v20a
----------------------------------

Begin block 0x20f
prev = {'0x1fd'}, next = {}
----------------------------------
Block 0x20f
0x20f: v20f(0x0) = CONST 
0x212: REVERT v20f(0x0) v20f(0x0)
----------------------------------

Begin block 0x213
prev = {'0x1fd'}, next = {'0x4e4'}
----------------------------------
Block 0x213
0x215: v215 = CALLDATALOAD v201(0x4)
0x216: v216(0x1) = CONST 
0x218: v218(0xa0) = CONST 
0x21a: v21a(0x2) = CONST 
0x21c: v21c(0x10000000000000000000000000000000000000000) = EXP v21a(0x2) v218(0xa0)
0x21d: v21d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v21c(0x10000000000000000000000000000000000000000) v216(0x1)
0x21e: v21e = AND v21d(0xffffffffffffffffffffffffffffffffffffffff) v215
0x21f: v21f(0x4e4) = CONST 
0x222: JUMP v21f(0x4e4)
----------------------------------

Begin block 0x223
prev = {}, next = {'0x235', '0x239'}
----------------------------------
function removeVault(address)()
Block 0x223
0x224: v224(0x13c) = CONST 
0x227: v227(0x4) = CONST 
0x22a: v22a = CALLDATASIZE 
0x22b: v22b = SUB v22a v227(0x4)
0x22c: v22c(0x20) = CONST 
0x22f: v22f = LT v22b v22c(0x20)
0x230: v230 = ISZERO v22f
0x231: v231(0x239) = CONST 
0x234: JUMPI v231(0x239) v230
----------------------------------

Begin block 0x235
prev = {'0x223'}, next = {}
----------------------------------
Block 0x235
0x235: v235(0x0) = CONST 
0x238: REVERT v235(0x0) v235(0x0)
----------------------------------

Begin block 0x239
prev = {'0x223'}, next = {'0x500'}
----------------------------------
Block 0x239
0x23b: v23b = CALLDATALOAD v227(0x4)
0x23c: v23c(0x1) = CONST 
0x23e: v23e(0xa0) = CONST 
0x240: v240(0x2) = CONST 
0x242: v242(0x10000000000000000000000000000000000000000) = EXP v240(0x2) v23e(0xa0)
0x243: v243(0xffffffffffffffffffffffffffffffffffffffff) = SUB v242(0x10000000000000000000000000000000000000000) v23c(0x1)
0x244: v244 = AND v243(0xffffffffffffffffffffffffffffffffffffffff) v23b
0x245: v245(0x500) = CONST 
0x248: JUMP v245(0x500)
----------------------------------

Begin block 0x249
prev = {}, next = {'0x25b', '0x25f'}
----------------------------------
function addSignee(address,bytes32)()
Block 0x249
0x24a: v24a(0x13c) = CONST 
0x24d: v24d(0x4) = CONST 
0x250: v250 = CALLDATASIZE 
0x251: v251 = SUB v250 v24d(0x4)
0x252: v252(0x40) = CONST 
0x255: v255 = LT v251 v252(0x40)
0x256: v256 = ISZERO v255
0x257: v257(0x25f) = CONST 
0x25a: JUMPI v257(0x25f) v256
----------------------------------

Begin block 0x25b
prev = {'0x249'}, next = {}
----------------------------------
Block 0x25b
0x25b: v25b(0x0) = CONST 
0x25e: REVERT v25b(0x0) v25b(0x0)
----------------------------------

Begin block 0x25f
prev = {'0x249'}, next = {'0x594'}
----------------------------------
Block 0x25f
0x261: v261(0x1) = CONST 
0x263: v263(0xa0) = CONST 
0x265: v265(0x2) = CONST 
0x267: v267(0x10000000000000000000000000000000000000000) = EXP v265(0x2) v263(0xa0)
0x268: v268(0xffffffffffffffffffffffffffffffffffffffff) = SUB v267(0x10000000000000000000000000000000000000000) v261(0x1)
0x26a: v26a = CALLDATALOAD v24d(0x4)
0x26b: v26b = AND v26a v268(0xffffffffffffffffffffffffffffffffffffffff)
0x26d: v26d(0x20) = CONST 
0x26f: v26f = ADD v26d(0x20) v24d(0x4)
0x270: v270 = CALLDATALOAD v26f
0x271: v271(0x594) = CONST 
0x274: JUMP v271(0x594)
----------------------------------

Begin block 0x275
prev = {}, next = {'0x28b', '0x287'}
----------------------------------
function transferOwnership(address)()
Block 0x275
0x276: v276(0x13c) = CONST 
0x279: v279(0x4) = CONST 
0x27c: v27c = CALLDATASIZE 
0x27d: v27d = SUB v27c v279(0x4)
0x27e: v27e(0x20) = CONST 
0x281: v281 = LT v27d v27e(0x20)
0x282: v282 = ISZERO v281
0x283: v283(0x28b) = CONST 
0x286: JUMPI v283(0x28b) v282
----------------------------------

Begin block 0x287
prev = {'0x275'}, next = {}
----------------------------------
Block 0x287
0x287: v287(0x0) = CONST 
0x28a: REVERT v287(0x0) v287(0x0)
----------------------------------

Begin block 0x28b
prev = {'0x275'}, next = {'0x628'}
----------------------------------
Block 0x28b
0x28d: v28d = CALLDATALOAD v279(0x4)
0x28e: v28e(0x1) = CONST 
0x290: v290(0xa0) = CONST 
0x292: v292(0x2) = CONST 
0x294: v294(0x10000000000000000000000000000000000000000) = EXP v292(0x2) v290(0xa0)
0x295: v295(0xffffffffffffffffffffffffffffffffffffffff) = SUB v294(0x10000000000000000000000000000000000000000) v28e(0x1)
0x296: v296 = AND v295(0xffffffffffffffffffffffffffffffffffffffff) v28d
0x297: v297(0x628) = CONST 
0x29a: JUMP v297(0x628)
----------------------------------

Begin block 0x29b
prev = {'0xec'}, next = {'0xfc0xd6'}
----------------------------------
Block 0x29b
0x29c: v29c(0x1) = CONST 
0x29e: v29e(0xa0) = CONST 
0x2a0: v2a0(0x2) = CONST 
0x2a2: v2a2(0x10000000000000000000000000000000000000000) = EXP v2a0(0x2) v29e(0xa0)
0x2a3: v2a3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2a2(0x10000000000000000000000000000000000000000) v29c(0x1)
0x2a4: v2a4 = AND v2a3(0xffffffffffffffffffffffffffffffffffffffff) vf7
0x2a5: v2a5(0x0) = CONST 
0x2a9: MSTORE v2a5(0x0) v2a4
0x2aa: v2aa(0x1) = CONST 
0x2ac: v2ac(0x20) = CONST 
0x2b0: MSTORE v2ac(0x20) v2aa(0x1)
0x2b1: v2b1(0x40) = CONST 
0x2b5: v2b5 = SHA3 v2a5(0x0) v2b1(0x40)
0x2b6: v2b6 = ADD v2b5 v2aa(0x1)
0x2b7: v2b7 = SLOAD v2b6
0x2b8: v2b8(0xff) = CONST 
0x2ba: v2ba = AND v2b8(0xff) v2b7
0x2bc: JUMP vd7(0xfc)
----------------------------------

Begin block 0x2bd
prev = {'0x126'}, next = {'0x2c5'}
----------------------------------
Block 0x2bd
0x2be: v2be(0x2c5) = CONST 
0x2c1: v2c1(0x441) = CONST 
0x2c4: v2c4_0 = CALLPRIVATE v2c1(0x441) v2be(0x2c5)
----------------------------------

Begin block 0x2c5
prev = {'0x2bd'}, next = {'0x309', '0x2cc'}
----------------------------------
Block 0x2c5
0x2c6: v2c6 = ISZERO v2c4_0
0x2c7: v2c7 = ISZERO v2c6
0x2c8: v2c8(0x309) = CONST 
0x2cb: JUMPI v2c8(0x309) v2c7
----------------------------------

Begin block 0x2cc
prev = {'0x2c5'}, next = {}
----------------------------------
Block 0x2cc
0x2cc: v2cc(0x40) = CONST 
0x2cf: v2cf = MLOAD v2cc(0x40)
0x2d0: v2d0(0xe5) = CONST 
0x2d2: v2d2(0x2) = CONST 
0x2d4: v2d4(0x2000000000000000000000000000000000000000000000000000000000) = EXP v2d2(0x2) v2d0(0xe5)
0x2d5: v2d5(0x461bcd) = CONST 
0x2d9: v2d9(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v2d5(0x461bcd) v2d4(0x2000000000000000000000000000000000000000000000000000000000)
0x2db: MSTORE v2cf v2d9(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x2dc: v2dc(0x20) = CONST 
0x2de: v2de(0x4) = CONST 
0x2e1: v2e1 = ADD v2cf v2de(0x4)
0x2e4: MSTORE v2e1 v2dc(0x20)
0x2e5: v2e5(0x24) = CONST 
0x2e8: v2e8 = ADD v2cf v2e5(0x24)
0x2e9: MSTORE v2e8 v2dc(0x20)
0x2ea: v2ea(0x0) = CONST 
0x2ed: v2ed = MLOAD v2ea(0x0)
0x2ee: v2ee(0x20) = CONST 
0x2f0: v2f0(0x759) = CONST 
0x2f8: MSTORE v2ea(0x0) v2ed
0x2f9: v2f9(0x44) = CONST 
0x2fc: v2fc = ADD v2cf v2f9(0x44)
0x2fd: MSTORE v2fc v7e9(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x2ff: v2ff = MLOAD v2cc(0x40)
0x303: v303 = SUB v2cf v2ff
0x304: v304(0x64) = CONST 
0x306: v306 = ADD v304(0x64) v303
0x308: REVERT v2ff v306
0x7e9: v7e9(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0x309
prev = {'0x2c5'}, next = {'0x13c0x110'}
----------------------------------
Block 0x309
0x30a: v30a(0x40) = CONST 
0x30d: v30d = MLOAD v30a(0x40)
0x310: v310 = ADD v30a(0x40) v30d
0x312: MSTORE v30a(0x40) v310
0x315: MSTORE v30d v137
0x316: v316(0x1) = CONST 
0x318: v318(0x20) = CONST 
0x31c: v31c = ADD v30d v318(0x20)
0x31f: MSTORE v31c v316(0x1)
0x320: v320(0x1) = CONST 
0x322: v322(0xa0) = CONST 
0x324: v324(0x2) = CONST 
0x326: v326(0x10000000000000000000000000000000000000000) = EXP v324(0x2) v322(0xa0)
0x327: v327(0xffffffffffffffffffffffffffffffffffffffff) = SUB v326(0x10000000000000000000000000000000000000000) v320(0x1)
0x32b: v32b = AND v327(0xffffffffffffffffffffffffffffffffffffffff) v132
0x32c: v32c(0x0) = CONST 
0x330: MSTORE v32c(0x0) v32b
0x331: v331(0x2) = CONST 
0x335: MSTORE v318(0x20) v331(0x2)
0x339: v339 = SHA3 v32c(0x0) v30a(0x40)
0x33b: v33b = MLOAD v30d
0x33d: SSTORE v339 v33b
0x33f: v33f = MLOAD v31c
0x341: v341 = ADD v316(0x1) v339
0x343: v343 = SLOAD v341
0x344: v344(0xff) = CONST 
0x346: v346(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v344(0xff)
0x347: v347 = AND v346(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) v343
0x349: v349 = ISZERO v33f
0x34a: v34a = ISZERO v349
0x34e: v34e = OR v34a v347
0x350: SSTORE v341 v34e
0x351: JUMP v111(0x13c)
----------------------------------

Begin block 0x352
prev = {'0x154'}, next = {'0x1640x13e'}
----------------------------------
Block 0x352
0x353: v353(0x1) = CONST 
0x355: v355(0x20) = CONST 
0x359: MSTORE v355(0x20) v353(0x1)
0x35a: v35a(0x0) = CONST 
0x35e: MSTORE v35a(0x0) v15f
0x35f: v35f(0x40) = CONST 
0x363: v363 = SHA3 v35a(0x0) v35f(0x40)
0x365: v365 = SLOAD v363
0x367: v367 = ADD v353(0x1) v363
0x368: v368 = SLOAD v367
0x369: v369(0xff) = CONST 
0x36b: v36b = AND v369(0xff) v368
0x36d: JUMP v13f(0x164)
----------------------------------

Begin block 0x36e
prev = {'0x193'}, next = {'0xfc0x17d'}
----------------------------------
Block 0x36e
0x36f: v36f(0x1) = CONST 
0x371: v371(0xa0) = CONST 
0x373: v373(0x2) = CONST 
0x375: v375(0x10000000000000000000000000000000000000000) = EXP v373(0x2) v371(0xa0)
0x376: v376(0xffffffffffffffffffffffffffffffffffffffff) = SUB v375(0x10000000000000000000000000000000000000000) v36f(0x1)
0x377: v377 = AND v376(0xffffffffffffffffffffffffffffffffffffffff) v19e
0x378: v378(0x0) = CONST 
0x37c: MSTORE v378(0x0) v377
0x37d: v37d(0x2) = CONST 
0x37f: v37f(0x20) = CONST 
0x381: MSTORE v37f(0x20) v37d(0x2)
0x382: v382(0x40) = CONST 
0x385: v385 = SHA3 v378(0x0) v382(0x40)
0x386: v386(0x1) = CONST 
0x388: v388 = ADD v386(0x1) v385
0x389: v389 = SLOAD v388
0x38a: v38a(0xff) = CONST 
0x38c: v38c = AND v38a(0xff) v389
0x38e: JUMP v17e(0xfc)
----------------------------------

Begin block 0x38f
prev = {'0x1a3'}, next = {'0x397'}
----------------------------------
Block 0x38f
0x390: v390(0x397) = CONST 
0x393: v393(0x441) = CONST 
0x396: v396_0 = CALLPRIVATE v393(0x441) v390(0x397)
----------------------------------

Begin block 0x397
prev = {'0x38f'}, next = {'0x39e', '0x3db'}
----------------------------------
Block 0x397
0x398: v398 = ISZERO v396_0
0x399: v399 = ISZERO v398
0x39a: v39a(0x3db) = CONST 
0x39d: JUMPI v39a(0x3db) v399
----------------------------------

Begin block 0x39e
prev = {'0x397'}, next = {}
----------------------------------
Block 0x39e
0x39e: v39e(0x40) = CONST 
0x3a1: v3a1 = MLOAD v39e(0x40)
0x3a2: v3a2(0xe5) = CONST 
0x3a4: v3a4(0x2) = CONST 
0x3a6: v3a6(0x2000000000000000000000000000000000000000000000000000000000) = EXP v3a4(0x2) v3a2(0xe5)
0x3a7: v3a7(0x461bcd) = CONST 
0x3ab: v3ab(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v3a7(0x461bcd) v3a6(0x2000000000000000000000000000000000000000000000000000000000)
0x3ad: MSTORE v3a1 v3ab(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x3ae: v3ae(0x20) = CONST 
0x3b0: v3b0(0x4) = CONST 
0x3b3: v3b3 = ADD v3a1 v3b0(0x4)
0x3b6: MSTORE v3b3 v3ae(0x20)
0x3b7: v3b7(0x24) = CONST 
0x3ba: v3ba = ADD v3a1 v3b7(0x24)
0x3bb: MSTORE v3ba v3ae(0x20)
0x3bc: v3bc(0x0) = CONST 
0x3bf: v3bf = MLOAD v3bc(0x0)
0x3c0: v3c0(0x20) = CONST 
0x3c2: v3c2(0x759) = CONST 
0x3ca: MSTORE v3bc(0x0) v3bf
0x3cb: v3cb(0x44) = CONST 
0x3ce: v3ce = ADD v3a1 v3cb(0x44)
0x3cf: MSTORE v3ce v7ee(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x3d1: v3d1 = MLOAD v39e(0x40)
0x3d5: v3d5 = SUB v3a1 v3d1
0x3d6: v3d6(0x64) = CONST 
0x3d8: v3d8 = ADD v3d6(0x64) v3d5
0x3da: REVERT v3d1 v3d8
0x7ee: v7ee(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0x3db
prev = {'0x397'}, next = {'0x13c0x1a3'}
----------------------------------
Block 0x3db
0x3dc: v3dc(0x0) = CONST 
0x3df: v3df = SLOAD v3dc(0x0)
0x3e0: v3e0(0x40) = CONST 
0x3e2: v3e2 = MLOAD v3e0(0x40)
0x3e3: v3e3(0x1) = CONST 
0x3e5: v3e5(0xa0) = CONST 
0x3e7: v3e7(0x2) = CONST 
0x3e9: v3e9(0x10000000000000000000000000000000000000000) = EXP v3e7(0x2) v3e5(0xa0)
0x3ea: v3ea(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3e9(0x10000000000000000000000000000000000000000) v3e3(0x1)
0x3ed: v3ed = AND v3df v3ea(0xffffffffffffffffffffffffffffffffffffffff)
0x3ef: v3ef(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x413: LOG3 v3e2 v3dc(0x0) v3ef(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v3ed v3dc(0x0)
0x414: v414(0x0) = CONST 
0x417: v417 = SLOAD v414(0x0)
0x418: v418(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x42d: v42d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v418(0xffffffffffffffffffffffffffffffffffffffff)
0x42e: v42e = AND v42d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v417
0x430: SSTORE v414(0x0) v42e
0x431: JUMP v1a4(0x13c)
----------------------------------

Begin block 0x432
prev = {'0x1ab'}, next = {'0x1b3'}
----------------------------------
Block 0x432
0x433: v433(0x0) = CONST 
0x435: v435 = SLOAD v433(0x0)
0x436: v436(0x1) = CONST 
0x438: v438(0xa0) = CONST 
0x43a: v43a(0x2) = CONST 
0x43c: v43c(0x10000000000000000000000000000000000000000) = EXP v43a(0x2) v438(0xa0)
0x43d: v43d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v43c(0x10000000000000000000000000000000000000000) v436(0x1)
0x43e: v43e = AND v43d(0xffffffffffffffffffffffffffffffffffffffff) v435
0x440: JUMP v1ac(0x1b3)
----------------------------------

Begin block 0x441
prev = {}, next = {}
----------------------------------
function 0x441(v441arg0)
Block 0x441
0x442: v442(0x0) = CONST 
0x444: v444 = SLOAD v442(0x0)
0x445: v445(0x1) = CONST 
0x447: v447(0xa0) = CONST 
0x449: v449(0x2) = CONST 
0x44b: v44b(0x10000000000000000000000000000000000000000) = EXP v449(0x2) v447(0xa0)
0x44c: v44c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v44b(0x10000000000000000000000000000000000000000) v445(0x1)
0x44d: v44d = AND v44c(0xffffffffffffffffffffffffffffffffffffffff) v444
0x44e: v44e = CALLER 
0x44f: v44f = EQ v44e v44d
0x451: RETURNPRIVATE v441arg0 v44f
----------------------------------

Begin block 0x452
prev = {'0x1ed'}, next = {'0x45a'}
----------------------------------
Block 0x452
0x453: v453(0x45a) = CONST 
0x456: v456(0x441) = CONST 
0x459: v459_0 = CALLPRIVATE v456(0x441) v453(0x45a)
----------------------------------

Begin block 0x45a
prev = {'0x452'}, next = {'0x49e', '0x461'}
----------------------------------
Block 0x45a
0x45b: v45b = ISZERO v459_0
0x45c: v45c = ISZERO v45b
0x45d: v45d(0x49e) = CONST 
0x460: JUMPI v45d(0x49e) v45c
----------------------------------

Begin block 0x461
prev = {'0x45a'}, next = {}
----------------------------------
Block 0x461
0x461: v461(0x40) = CONST 
0x464: v464 = MLOAD v461(0x40)
0x465: v465(0xe5) = CONST 
0x467: v467(0x2) = CONST 
0x469: v469(0x2000000000000000000000000000000000000000000000000000000000) = EXP v467(0x2) v465(0xe5)
0x46a: v46a(0x461bcd) = CONST 
0x46e: v46e(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v46a(0x461bcd) v469(0x2000000000000000000000000000000000000000000000000000000000)
0x470: MSTORE v464 v46e(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x471: v471(0x20) = CONST 
0x473: v473(0x4) = CONST 
0x476: v476 = ADD v464 v473(0x4)
0x479: MSTORE v476 v471(0x20)
0x47a: v47a(0x24) = CONST 
0x47d: v47d = ADD v464 v47a(0x24)
0x47e: MSTORE v47d v471(0x20)
0x47f: v47f(0x0) = CONST 
0x482: v482 = MLOAD v47f(0x0)
0x483: v483(0x20) = CONST 
0x485: v485(0x759) = CONST 
0x48d: MSTORE v47f(0x0) v482
0x48e: v48e(0x44) = CONST 
0x491: v491 = ADD v464 v48e(0x44)
0x492: MSTORE v491 v7f3(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x494: v494 = MLOAD v461(0x40)
0x498: v498 = SUB v464 v494
0x499: v499(0x64) = CONST 
0x49b: v49b = ADD v499(0x64) v498
0x49d: REVERT v494 v49b
0x7f3: v7f3(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0x49e
prev = {'0x45a'}, next = {'0x13c0x1d7'}
----------------------------------
Block 0x49e
0x49f: v49f(0x40) = CONST 
0x4a2: v4a2 = MLOAD v49f(0x40)
0x4a5: v4a5 = ADD v49f(0x40) v4a2
0x4a7: MSTORE v49f(0x40) v4a5
0x4a8: v4a8(0x0) = CONST 
0x4ac: MSTORE v4a2 v4a8(0x0)
0x4ad: v4ad(0x20) = CONST 
0x4b1: v4b1 = ADD v4a2 v4ad(0x20)
0x4b4: MSTORE v4b1 v4a8(0x0)
0x4b5: v4b5(0x1) = CONST 
0x4b7: v4b7(0xa0) = CONST 
0x4b9: v4b9(0x2) = CONST 
0x4bb: v4bb(0x10000000000000000000000000000000000000000) = EXP v4b9(0x2) v4b7(0xa0)
0x4bc: v4bc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4bb(0x10000000000000000000000000000000000000000) v4b5(0x1)
0x4c0: v4c0 = AND v4bc(0xffffffffffffffffffffffffffffffffffffffff) v1f8
0x4c2: MSTORE v4a8(0x0) v4c0
0x4c3: v4c3(0x1) = CONST 
0x4c8: MSTORE v4ad(0x20) v4c3(0x1)
0x4cb: v4cb = SHA3 v4a8(0x0) v49f(0x40)
0x4cd: v4cd = MLOAD v4a2
0x4cf: SSTORE v4cb v4cd
0x4d1: v4d1 = MLOAD v4b1
0x4d3: v4d3 = ADD v4cb v4c3(0x1)
0x4d5: v4d5 = SLOAD v4d3
0x4d6: v4d6(0xff) = CONST 
0x4d8: v4d8(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v4d6(0xff)
0x4d9: v4d9 = AND v4d8(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) v4d5
0x4db: v4db = ISZERO v4d1
0x4dc: v4dc = ISZERO v4db
0x4e0: v4e0 = OR v4dc v4d9
0x4e2: SSTORE v4d3 v4e0
0x4e3: JUMP v1d8(0x13c)
----------------------------------

Begin block 0x4e4
prev = {'0x213'}, next = {'0x1640x1fd'}
----------------------------------
Block 0x4e4
0x4e5: v4e5(0x2) = CONST 
0x4e7: v4e7(0x20) = CONST 
0x4e9: MSTORE v4e7(0x20) v4e5(0x2)
0x4ea: v4ea(0x0) = CONST 
0x4ee: MSTORE v4ea(0x0) v21e
0x4ef: v4ef(0x40) = CONST 
0x4f2: v4f2 = SHA3 v4ea(0x0) v4ef(0x40)
0x4f4: v4f4 = SLOAD v4f2
0x4f5: v4f5(0x1) = CONST 
0x4f9: v4f9 = ADD v4f2 v4f5(0x1)
0x4fa: v4fa = SLOAD v4f9
0x4fb: v4fb(0xff) = CONST 
0x4fd: v4fd = AND v4fb(0xff) v4fa
0x4ff: JUMP v1fe(0x164)
----------------------------------

Begin block 0x500
prev = {'0x239'}, next = {'0x508'}
----------------------------------
Block 0x500
0x501: v501(0x508) = CONST 
0x504: v504(0x441) = CONST 
0x507: v507_0 = CALLPRIVATE v504(0x441) v501(0x508)
----------------------------------

Begin block 0x508
prev = {'0x500'}, next = {'0x54c', '0x50f'}
----------------------------------
Block 0x508
0x509: v509 = ISZERO v507_0
0x50a: v50a = ISZERO v509
0x50b: v50b(0x54c) = CONST 
0x50e: JUMPI v50b(0x54c) v50a
----------------------------------

Begin block 0x50f
prev = {'0x508'}, next = {}
----------------------------------
Block 0x50f
0x50f: v50f(0x40) = CONST 
0x512: v512 = MLOAD v50f(0x40)
0x513: v513(0xe5) = CONST 
0x515: v515(0x2) = CONST 
0x517: v517(0x2000000000000000000000000000000000000000000000000000000000) = EXP v515(0x2) v513(0xe5)
0x518: v518(0x461bcd) = CONST 
0x51c: v51c(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v518(0x461bcd) v517(0x2000000000000000000000000000000000000000000000000000000000)
0x51e: MSTORE v512 v51c(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x51f: v51f(0x20) = CONST 
0x521: v521(0x4) = CONST 
0x524: v524 = ADD v512 v521(0x4)
0x527: MSTORE v524 v51f(0x20)
0x528: v528(0x24) = CONST 
0x52b: v52b = ADD v512 v528(0x24)
0x52c: MSTORE v52b v51f(0x20)
0x52d: v52d(0x0) = CONST 
0x530: v530 = MLOAD v52d(0x0)
0x531: v531(0x20) = CONST 
0x533: v533(0x759) = CONST 
0x53b: MSTORE v52d(0x0) v530
0x53c: v53c(0x44) = CONST 
0x53f: v53f = ADD v512 v53c(0x44)
0x540: MSTORE v53f v7f8(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x542: v542 = MLOAD v50f(0x40)
0x546: v546 = SUB v512 v542
0x547: v547(0x64) = CONST 
0x549: v549 = ADD v547(0x64) v546
0x54b: REVERT v542 v549
0x7f8: v7f8(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0x54c
prev = {'0x508'}, next = {'0x13c0x223'}
----------------------------------
Block 0x54c
0x54d: v54d(0x40) = CONST 
0x550: v550 = MLOAD v54d(0x40)
0x553: v553 = ADD v54d(0x40) v550
0x555: MSTORE v54d(0x40) v553
0x556: v556(0x0) = CONST 
0x55a: MSTORE v550 v556(0x0)
0x55b: v55b(0x20) = CONST 
0x55f: v55f = ADD v550 v55b(0x20)
0x562: MSTORE v55f v556(0x0)
0x563: v563(0x1) = CONST 
0x565: v565(0xa0) = CONST 
0x567: v567(0x2) = CONST 
0x569: v569(0x10000000000000000000000000000000000000000) = EXP v567(0x2) v565(0xa0)
0x56a: v56a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v569(0x10000000000000000000000000000000000000000) v563(0x1)
0x56e: v56e = AND v56a(0xffffffffffffffffffffffffffffffffffffffff) v244
0x570: MSTORE v556(0x0) v56e
0x571: v571(0x2) = CONST 
0x574: MSTORE v55b(0x20) v571(0x2)
0x578: v578 = SHA3 v556(0x0) v54d(0x40)
0x57a: v57a = MLOAD v550
0x57c: SSTORE v578 v57a
0x57e: v57e = MLOAD v55f
0x57f: v57f(0x1) = CONST 
0x583: v583 = ADD v578 v57f(0x1)
0x585: v585 = SLOAD v583
0x586: v586(0xff) = CONST 
0x588: v588(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v586(0xff)
0x589: v589 = AND v588(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) v585
0x58b: v58b = ISZERO v57e
0x58c: v58c = ISZERO v58b
0x590: v590 = OR v58c v589
0x592: SSTORE v583 v590
0x593: JUMP v224(0x13c)
----------------------------------

Begin block 0x594
prev = {'0x25f'}, next = {'0x59c'}
----------------------------------
Block 0x594
0x595: v595(0x59c) = CONST 
0x598: v598(0x441) = CONST 
0x59b: v59b_0 = CALLPRIVATE v598(0x441) v595(0x59c)
----------------------------------

Begin block 0x59c
prev = {'0x594'}, next = {'0x5a3', '0x5e0'}
----------------------------------
Block 0x59c
0x59d: v59d = ISZERO v59b_0
0x59e: v59e = ISZERO v59d
0x59f: v59f(0x5e0) = CONST 
0x5a2: JUMPI v59f(0x5e0) v59e
----------------------------------

Begin block 0x5a3
prev = {'0x59c'}, next = {}
----------------------------------
Block 0x5a3
0x5a3: v5a3(0x40) = CONST 
0x5a6: v5a6 = MLOAD v5a3(0x40)
0x5a7: v5a7(0xe5) = CONST 
0x5a9: v5a9(0x2) = CONST 
0x5ab: v5ab(0x2000000000000000000000000000000000000000000000000000000000) = EXP v5a9(0x2) v5a7(0xe5)
0x5ac: v5ac(0x461bcd) = CONST 
0x5b0: v5b0(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v5ac(0x461bcd) v5ab(0x2000000000000000000000000000000000000000000000000000000000)
0x5b2: MSTORE v5a6 v5b0(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x5b3: v5b3(0x20) = CONST 
0x5b5: v5b5(0x4) = CONST 
0x5b8: v5b8 = ADD v5a6 v5b5(0x4)
0x5bb: MSTORE v5b8 v5b3(0x20)
0x5bc: v5bc(0x24) = CONST 
0x5bf: v5bf = ADD v5a6 v5bc(0x24)
0x5c0: MSTORE v5bf v5b3(0x20)
0x5c1: v5c1(0x0) = CONST 
0x5c4: v5c4 = MLOAD v5c1(0x0)
0x5c5: v5c5(0x20) = CONST 
0x5c7: v5c7(0x759) = CONST 
0x5cf: MSTORE v5c1(0x0) v5c4
0x5d0: v5d0(0x44) = CONST 
0x5d3: v5d3 = ADD v5a6 v5d0(0x44)
0x5d4: MSTORE v5d3 v7fd(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x5d6: v5d6 = MLOAD v5a3(0x40)
0x5da: v5da = SUB v5a6 v5d6
0x5db: v5db(0x64) = CONST 
0x5dd: v5dd = ADD v5db(0x64) v5da
0x5df: REVERT v5d6 v5dd
0x7fd: v7fd(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0x5e0
prev = {'0x59c'}, next = {'0x13c0x249'}
----------------------------------
Block 0x5e0
0x5e1: v5e1(0x40) = CONST 
0x5e4: v5e4 = MLOAD v5e1(0x40)
0x5e7: v5e7 = ADD v5e1(0x40) v5e4
0x5e9: MSTORE v5e1(0x40) v5e7
0x5ec: MSTORE v5e4 v270
0x5ed: v5ed(0x1) = CONST 
0x5ef: v5ef(0x20) = CONST 
0x5f3: v5f3 = ADD v5e4 v5ef(0x20)
0x5f6: MSTORE v5f3 v5ed(0x1)
0x5f7: v5f7(0x1) = CONST 
0x5f9: v5f9(0xa0) = CONST 
0x5fb: v5fb(0x2) = CONST 
0x5fd: v5fd(0x10000000000000000000000000000000000000000) = EXP v5fb(0x2) v5f9(0xa0)
0x5fe: v5fe(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5fd(0x10000000000000000000000000000000000000000) v5f7(0x1)
0x602: v602 = AND v5fe(0xffffffffffffffffffffffffffffffffffffffff) v26b
0x603: v603(0x0) = CONST 
0x607: MSTORE v603(0x0) v602
0x60b: MSTORE v5ef(0x20) v5ed(0x1)
0x60f: v60f = SHA3 v603(0x0) v5e1(0x40)
0x611: v611 = MLOAD v5e4
0x613: SSTORE v60f v611
0x615: v615 = MLOAD v5f3
0x617: v617 = ADD v5ed(0x1) v60f
0x619: v619 = SLOAD v617
0x61a: v61a(0xff) = CONST 
0x61c: v61c(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v61a(0xff)
0x61d: v61d = AND v61c(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) v619
0x61f: v61f = ISZERO v615
0x620: v620 = ISZERO v61f
0x624: v624 = OR v620 v61d
0x626: SSTORE v617 v624
0x627: JUMP v24a(0x13c)
----------------------------------

Begin block 0x628
prev = {'0x28b'}, next = {'0x630'}
----------------------------------
Block 0x628
0x629: v629(0x630) = CONST 
0x62c: v62c(0x441) = CONST 
0x62f: v62f_0 = CALLPRIVATE v62c(0x441) v629(0x630)
----------------------------------

Begin block 0x630
prev = {'0x628'}, next = {'0x637', '0x674'}
----------------------------------
Block 0x630
0x631: v631 = ISZERO v62f_0
0x632: v632 = ISZERO v631
0x633: v633(0x674) = CONST 
0x636: JUMPI v633(0x674) v632
----------------------------------

Begin block 0x637
prev = {'0x630'}, next = {}
----------------------------------
Block 0x637
0x637: v637(0x40) = CONST 
0x63a: v63a = MLOAD v637(0x40)
0x63b: v63b(0xe5) = CONST 
0x63d: v63d(0x2) = CONST 
0x63f: v63f(0x2000000000000000000000000000000000000000000000000000000000) = EXP v63d(0x2) v63b(0xe5)
0x640: v640(0x461bcd) = CONST 
0x644: v644(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v640(0x461bcd) v63f(0x2000000000000000000000000000000000000000000000000000000000)
0x646: MSTORE v63a v644(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x647: v647(0x20) = CONST 
0x649: v649(0x4) = CONST 
0x64c: v64c = ADD v63a v649(0x4)
0x64f: MSTORE v64c v647(0x20)
0x650: v650(0x24) = CONST 
0x653: v653 = ADD v63a v650(0x24)
0x654: MSTORE v653 v647(0x20)
0x655: v655(0x0) = CONST 
0x658: v658 = MLOAD v655(0x0)
0x659: v659(0x20) = CONST 
0x65b: v65b(0x759) = CONST 
0x663: MSTORE v655(0x0) v658
0x664: v664(0x44) = CONST 
0x667: v667 = ADD v63a v664(0x44)
0x668: MSTORE v667 v802(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x66a: v66a = MLOAD v637(0x40)
0x66e: v66e = SUB v63a v66a
0x66f: v66f(0x64) = CONST 
0x671: v671 = ADD v66f(0x64) v66e
0x673: REVERT v66a v671
0x802: v802(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0x674
prev = {'0x630'}, next = {'0x680'}
----------------------------------
Block 0x674
0x675: v675(0x67d) = CONST 
0x679: v679(0x680) = CONST 
0x67c: JUMP v679(0x680)
----------------------------------

Begin block 0x67d
prev = {'0x6ca'}, next = {'0x13c0x275'}
----------------------------------
Block 0x67d
0x67f: JUMP v276(0x13c)
----------------------------------

Begin block 0x680
prev = {'0x674'}, next = {'0x691', '0x6ca'}
----------------------------------
Block 0x680
0x681: v681(0x1) = CONST 
0x683: v683(0xa0) = CONST 
0x685: v685(0x2) = CONST 
0x687: v687(0x10000000000000000000000000000000000000000) = EXP v685(0x2) v683(0xa0)
0x688: v688(0xffffffffffffffffffffffffffffffffffffffff) = SUB v687(0x10000000000000000000000000000000000000000) v681(0x1)
0x68a: v68a = AND v296 v688(0xffffffffffffffffffffffffffffffffffffffff)
0x68b: v68b = ISZERO v68a
0x68c: v68c = ISZERO v68b
0x68d: v68d(0x6ca) = CONST 
0x690: JUMPI v68d(0x6ca) v68c
----------------------------------

Begin block 0x691
prev = {'0x680'}, next = {}
----------------------------------
Block 0x691
0x691: v691(0x40) = CONST 
0x693: v693 = MLOAD v691(0x40)
0x694: v694(0xe5) = CONST 
0x696: v696(0x2) = CONST 
0x698: v698(0x2000000000000000000000000000000000000000000000000000000000) = EXP v696(0x2) v694(0xe5)
0x699: v699(0x461bcd) = CONST 
0x69d: v69d(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v699(0x461bcd) v698(0x2000000000000000000000000000000000000000000000000000000000)
0x69f: MSTORE v693 v69d(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x6a0: v6a0(0x4) = CONST 
0x6a2: v6a2 = ADD v6a0(0x4) v693
0x6a5: v6a5(0x20) = CONST 
0x6a7: v6a7 = ADD v6a5(0x20) v6a2
0x6aa: v6aa = SUB v6a7 v6a2
0x6ac: MSTORE v6a2 v6aa
0x6ad: v6ad(0x26) = CONST 
0x6b0: MSTORE v6a7 v6ad(0x26)
0x6b1: v6b1(0x20) = CONST 
0x6b3: v6b3 = ADD v6b1(0x20) v6a7
0x6b5: v6b5(0x733) = CONST 
0x6b8: v6b8(0x26) = CONST 
0x6bb: CODECOPY v6b3 v6b5(0x733) v6b8(0x26)
0x6bc: v6bc(0x40) = CONST 
0x6be: v6be = ADD v6bc(0x40) v6b3
0x6c2: v6c2(0x40) = CONST 
0x6c4: v6c4 = MLOAD v6c2(0x40)
0x6c7: v6c7 = SUB v6be v6c4
0x6c9: REVERT v6c4 v6c7
----------------------------------

Begin block 0x6ca
prev = {'0x680'}, next = {'0x67d'}
----------------------------------
Block 0x6ca
0x6cb: v6cb(0x0) = CONST 
0x6ce: v6ce = SLOAD v6cb(0x0)
0x6cf: v6cf(0x40) = CONST 
0x6d1: v6d1 = MLOAD v6cf(0x40)
0x6d2: v6d2(0x1) = CONST 
0x6d4: v6d4(0xa0) = CONST 
0x6d6: v6d6(0x2) = CONST 
0x6d8: v6d8(0x10000000000000000000000000000000000000000) = EXP v6d6(0x2) v6d4(0xa0)
0x6d9: v6d9(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6d8(0x10000000000000000000000000000000000000000) v6d2(0x1)
0x6dc: v6dc = AND v296 v6d9(0xffffffffffffffffffffffffffffffffffffffff)
0x6df: v6df = AND v6ce v6d9(0xffffffffffffffffffffffffffffffffffffffff)
0x6e1: v6e1(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x703: LOG3 v6d1 v6cb(0x0) v6e1(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v6df v6dc
0x704: v704(0x0) = CONST 
0x707: v707 = SLOAD v704(0x0)
0x708: v708(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x71d: v71d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v708(0xffffffffffffffffffffffffffffffffffffffff)
0x71e: v71e = AND v71d(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v707
0x71f: v71f(0x1) = CONST 
0x721: v721(0xa0) = CONST 
0x723: v723(0x2) = CONST 
0x725: v725(0x10000000000000000000000000000000000000000) = EXP v723(0x2) v721(0xa0)
0x726: v726(0xffffffffffffffffffffffffffffffffffffffff) = SUB v725(0x10000000000000000000000000000000000000000) v71f(0x1)
0x72a: v72a = AND v726(0xffffffffffffffffffffffffffffffffffffffff) v296
0x72e: v72e = OR v72a v71e
0x730: SSTORE v704(0x0) v72e
0x731: JUMP v675(0x67d)
----------------------------------

Begin block 0x7be
prev = {'0xc6', '0x10'}, next = {'0xd10x0'}
----------------------------------
Block 0x7be
0x7bf: v7bf(0xd1) = CONST 
0x7c0: CALLPRIVATE v7bf(0xd1)
----------------------------------

Begin block 0x7c1
prev = {'0x8e'}, next = {}
----------------------------------
Block 0x7c1
0x7c2: v7c2(0xd6) = CONST 
0x7c3: CALLPRIVATE v7c2(0xd6)
----------------------------------

Begin block 0x7c4
prev = {'0x9a'}, next = {}
----------------------------------
Block 0x7c4
0x7c5: v7c5(0x110) = CONST 
0x7c6: CALLPRIVATE v7c5(0x110)
----------------------------------

Begin block 0x7c7
prev = {'0xa5'}, next = {}
----------------------------------
Block 0x7c7
0x7c8: v7c8(0x13e) = CONST 
0x7c9: CALLPRIVATE v7c8(0x13e)
----------------------------------

Begin block 0x7ca
prev = {'0xb0'}, next = {}
----------------------------------
Block 0x7ca
0x7cb: v7cb(0x17d) = CONST 
0x7cc: CALLPRIVATE v7cb(0x17d)
----------------------------------

Begin block 0x7cd
prev = {'0xbb'}, next = {}
----------------------------------
Block 0x7cd
0x7ce: v7ce(0x1a3) = CONST 
0x7cf: CALLPRIVATE v7ce(0x1a3)
----------------------------------

Begin block 0x7d0
prev = {'0xc6'}, next = {}
----------------------------------
Block 0x7d0
0x7d1: v7d1(0x1ab) = CONST 
0x7d2: CALLPRIVATE v7d1(0x1ab)
----------------------------------

Begin block 0x7d3
prev = {'0x48'}, next = {}
----------------------------------
Block 0x7d3
0x7d4: v7d4(0x1cf) = CONST 
0x7d5: CALLPRIVATE v7d4(0x1cf)
----------------------------------

Begin block 0x7d6
prev = {'0x53'}, next = {}
----------------------------------
Block 0x7d6
0x7d7: v7d7(0x1d7) = CONST 
0x7d8: CALLPRIVATE v7d7(0x1d7)
----------------------------------

Begin block 0x7d9
prev = {'0x5e'}, next = {}
----------------------------------
Block 0x7d9
0x7da: v7da(0x1fd) = CONST 
0x7db: CALLPRIVATE v7da(0x1fd)
----------------------------------

Begin block 0x7dc
prev = {'0x69'}, next = {}
----------------------------------
Block 0x7dc
0x7dd: v7dd(0x223) = CONST 
0x7de: CALLPRIVATE v7dd(0x223)
----------------------------------

Begin block 0x7df
prev = {'0x74'}, next = {}
----------------------------------
Block 0x7df
0x7e0: v7e0(0x249) = CONST 
0x7e1: CALLPRIVATE v7e0(0x249)
----------------------------------

Begin block 0x7e2
prev = {'0x7f'}, next = {}
----------------------------------
Block 0x7e2
0x7e3: v7e3(0x275) = CONST 
0x7e4: CALLPRIVATE v7e3(0x275)
----------------------------------
