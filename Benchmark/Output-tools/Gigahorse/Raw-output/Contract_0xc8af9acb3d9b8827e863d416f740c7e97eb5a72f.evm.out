
Begin block 0x0
prev = {}, next = {'0x565', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x60) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x60)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x559: v559(0x565) = CONST 
0x55a: JUMPI v559(0x565) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x568', '0x41'}
----------------------------------
Block 0xd
0xd: vd(0x0) = CONST 
0xf: vf = CALLDATALOAD vd(0x0)
0x10: v10(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x2f: v2f = DIV vf v10(0x100000000000000000000000000000000000000000000000000000000)
0x30: v30(0xffffffff) = CONST 
0x35: v35 = AND v30(0xffffffff) v2f
0x37: v37(0x144fa6d7) = CONST 
0x3c: v3c = EQ v37(0x144fa6d7) v35
0x55b: v55b(0x568) = CONST 
0x55c: JUMPI v55b(0x568) v3c
----------------------------------

Begin block 0x41
prev = {'0xd'}, next = {'0x4c', '0x56b'}
----------------------------------
Block 0x41
0x42: v42(0x21df0da7) = CONST 
0x47: v47 = EQ v42(0x21df0da7) v35
0x55d: v55d(0x56b) = CONST 
0x55e: JUMPI v55d(0x56b) v47
----------------------------------

Begin block 0x4c
prev = {'0x41'}, next = {'0x57', '0x56e'}
----------------------------------
Block 0x4c
0x4d: v4d(0x83fc58b4) = CONST 
0x52: v52 = EQ v4d(0x83fc58b4) v35
0x55f: v55f(0x56e) = CONST 
0x560: JUMPI v55f(0x56e) v52
----------------------------------

Begin block 0x57
prev = {'0x4c'}, next = {'0x62', '0x571'}
----------------------------------
Block 0x57
0x58: v58(0x8da5cb5b) = CONST 
0x5d: v5d = EQ v58(0x8da5cb5b) v35
0x561: v561(0x571) = CONST 
0x562: JUMPI v561(0x571) v5d
----------------------------------

Begin block 0x62
prev = {'0x57'}, next = {'0x574', '0x565'}
----------------------------------
Block 0x62
0x63: v63(0xbba085fa) = CONST 
0x68: v68 = EQ v63(0xbba085fa) v35
0x563: v563(0x574) = CONST 
0x564: JUMPI v563(0x574) v68
----------------------------------

Begin block 0x6d
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x6d
0x6e: v6e(0x0) = CONST 
0x71: REVERT v6e(0x0) v6e(0x0)
----------------------------------

Begin block 0x72
prev = {}, next = {'0x79', '0x7d'}
----------------------------------
function setToken(address)()
Block 0x72
0x73: v73 = CALLVALUE 
0x74: v74 = ISZERO v73
0x75: v75(0x7d) = CONST 
0x78: JUMPI v75(0x7d) v74
----------------------------------

Begin block 0x79
prev = {'0x72'}, next = {}
----------------------------------
Block 0x79
0x79: v79(0x0) = CONST 
0x7c: REVERT v79(0x0) v79(0x0)
----------------------------------

Begin block 0x7d
prev = {'0x72'}, next = {'0x228'}
----------------------------------
Block 0x7d
0x7e: v7e(0xa9) = CONST 
0x81: v81(0x4) = CONST 
0x85: v85 = CALLDATALOAD v81(0x4)
0x86: v86(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x9b: v9b = AND v86(0xffffffffffffffffffffffffffffffffffffffff) v85
0x9d: v9d(0x20) = CONST 
0x9f: v9f(0x24) = ADD v9d(0x20) v81(0x4)
0xa5: va5(0x228) = CONST 
0xa8: JUMP va5(0x228)
----------------------------------

Begin block 0xa9
prev = {'0x283'}, next = {}
----------------------------------
Block 0xa9
0xaa: STOP 
----------------------------------

Begin block 0xab
prev = {}, next = {'0xb6', '0xb2'}
----------------------------------
function getToken()()
Block 0xab
0xac: vac = CALLVALUE 
0xad: vad = ISZERO vac
0xae: vae(0xb6) = CONST 
0xb1: JUMPI vae(0xb6) vad
----------------------------------

Begin block 0xb2
prev = {'0xab'}, next = {}
----------------------------------
Block 0xb2
0xb2: vb2(0x0) = CONST 
0xb5: REVERT vb2(0x0) vb2(0x0)
----------------------------------

Begin block 0xb6
prev = {'0xab'}, next = {'0x2c7'}
----------------------------------
Block 0xb6
0xb7: vb7(0xbe) = CONST 
0xba: vba(0x2c7) = CONST 
0xbd: JUMP vba(0x2c7)
----------------------------------

Begin block 0xbe
prev = {'0x2c7'}, next = {}
----------------------------------
Block 0xbe
0xbf: vbf(0x40) = CONST 
0xc1: vc1 = MLOAD vbf(0x40)
0xc4: vc4(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xd9: vd9 = AND vc4(0xffffffffffffffffffffffffffffffffffffffff) v2ec
0xda: vda(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xef: vef = AND vda(0xffffffffffffffffffffffffffffffffffffffff) vd9
0xf1: MSTORE vc1 vef
0xf2: vf2(0x20) = CONST 
0xf4: vf4 = ADD vf2(0x20) vc1
0xf8: vf8(0x40) = CONST 
0xfa: vfa = MLOAD vf8(0x40)
0xfd: vfd = SUB vf4 vfa
0xff: RETURN vfa vfd
----------------------------------

Begin block 0x100
prev = {}, next = {'0x107', '0x10b'}
----------------------------------
function tranferOwnership(address)()
Block 0x100
0x101: v101 = CALLVALUE 
0x102: v102 = ISZERO v101
0x103: v103(0x10b) = CONST 
0x106: JUMPI v103(0x10b) v102
----------------------------------

Begin block 0x107
prev = {'0x100'}, next = {}
----------------------------------
Block 0x107
0x107: v107(0x0) = CONST 
0x10a: REVERT v107(0x0) v107(0x0)
----------------------------------

Begin block 0x10b
prev = {'0x100'}, next = {'0x2f1'}
----------------------------------
Block 0x10b
0x10c: v10c(0x137) = CONST 
0x10f: v10f(0x4) = CONST 
0x113: v113 = CALLDATALOAD v10f(0x4)
0x114: v114(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x129: v129 = AND v114(0xffffffffffffffffffffffffffffffffffffffff) v113
0x12b: v12b(0x20) = CONST 
0x12d: v12d(0x24) = ADD v12b(0x20) v10f(0x4)
0x133: v133(0x2f1) = CONST 
0x136: JUMP v133(0x2f1)
----------------------------------

Begin block 0x137
prev = {'0x34c'}, next = {}
----------------------------------
Block 0x137
0x138: STOP 
----------------------------------

Begin block 0x139
prev = {}, next = {'0x140', '0x144'}
----------------------------------
function owner()()
Block 0x139
0x13a: v13a = CALLVALUE 
0x13b: v13b = ISZERO v13a
0x13c: v13c(0x144) = CONST 
0x13f: JUMPI v13c(0x144) v13b
----------------------------------

Begin block 0x140
prev = {'0x139'}, next = {}
----------------------------------
Block 0x140
0x140: v140(0x0) = CONST 
0x143: REVERT v140(0x0) v140(0x0)
----------------------------------

Begin block 0x144
prev = {'0x139'}, next = {'0x38f'}
----------------------------------
Block 0x144
0x145: v145(0x14c) = CONST 
0x148: v148(0x38f) = CONST 
0x14b: JUMP v148(0x38f)
----------------------------------

Begin block 0x14c
prev = {'0x38f'}, next = {}
----------------------------------
Block 0x14c
0x14d: v14d(0x40) = CONST 
0x14f: v14f = MLOAD v14d(0x40)
0x152: v152(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x167: v167 = AND v152(0xffffffffffffffffffffffffffffffffffffffff) v3b1
0x168: v168(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x17d: v17d = AND v168(0xffffffffffffffffffffffffffffffffffffffff) v167
0x17f: MSTORE v14f v17d
0x180: v180(0x20) = CONST 
0x182: v182 = ADD v180(0x20) v14f
0x186: v186(0x40) = CONST 
0x188: v188 = MLOAD v186(0x40)
0x18b: v18b = SUB v182 v188
0x18d: RETURN v188 v18b
----------------------------------

Begin block 0x18e
prev = {}, next = {'0x195', '0x199'}
----------------------------------
function 0xbba085fa()
Block 0x18e
0x18f: v18f = CALLVALUE 
0x190: v190 = ISZERO v18f
0x191: v191(0x199) = CONST 
0x194: JUMPI v191(0x199) v190
----------------------------------

Begin block 0x195
prev = {'0x18e'}, next = {}
----------------------------------
Block 0x195
0x195: v195(0x0) = CONST 
0x198: REVERT v195(0x0) v195(0x0)
----------------------------------

Begin block 0x199
prev = {'0x18e'}, next = {'0x3b4'}
----------------------------------
Block 0x199
0x19a: v19a(0x226) = CONST 
0x19d: v19d(0x4) = CONST 
0x1a1: v1a1 = CALLDATALOAD v19d(0x4)
0x1a3: v1a3(0x20) = CONST 
0x1a5: v1a5(0x24) = ADD v1a3(0x20) v19d(0x4)
0x1a8: v1a8 = ADD v19d(0x4) v1a1
0x1aa: v1aa = CALLDATALOAD v1a8
0x1ac: v1ac(0x20) = CONST 
0x1ae: v1ae = ADD v1ac(0x20) v1a8
0x1b2: v1b2(0x20) = CONST 
0x1b4: v1b4 = MUL v1b2(0x20) v1aa
0x1b5: v1b5(0x20) = CONST 
0x1b7: v1b7 = ADD v1b5(0x20) v1b4
0x1b8: v1b8(0x40) = CONST 
0x1ba: v1ba = MLOAD v1b8(0x40)
0x1bd: v1bd = ADD v1ba v1b7
0x1be: v1be(0x40) = CONST 
0x1c0: MSTORE v1be(0x40) v1bd
0x1c8: MSTORE v1ba v1aa
0x1c9: v1c9(0x20) = CONST 
0x1cb: v1cb = ADD v1c9(0x20) v1ba
0x1ce: v1ce(0x20) = CONST 
0x1d0: v1d0 = MUL v1ce(0x20) v1aa
0x1d4: CALLDATACOPY v1cb v1ae v1d0
0x1d6: v1d6 = ADD v1cb v1d0
0x1e1: v1e1 = CALLDATALOAD v1a5(0x24)
0x1e3: v1e3(0x20) = CONST 
0x1e5: v1e5(0x44) = ADD v1e3(0x20) v1a5(0x24)
0x1e8: v1e8 = ADD v19d(0x4) v1e1
0x1ea: v1ea = CALLDATALOAD v1e8
0x1ec: v1ec(0x20) = CONST 
0x1ee: v1ee = ADD v1ec(0x20) v1e8
0x1f2: v1f2(0x20) = CONST 
0x1f4: v1f4 = MUL v1f2(0x20) v1ea
0x1f5: v1f5(0x20) = CONST 
0x1f7: v1f7 = ADD v1f5(0x20) v1f4
0x1f8: v1f8(0x40) = CONST 
0x1fa: v1fa = MLOAD v1f8(0x40)
0x1fd: v1fd = ADD v1fa v1f7
0x1fe: v1fe(0x40) = CONST 
0x200: MSTORE v1fe(0x40) v1fd
0x208: MSTORE v1fa v1ea
0x209: v209(0x20) = CONST 
0x20b: v20b = ADD v209(0x20) v1fa
0x20e: v20e(0x20) = CONST 
0x210: v210 = MUL v20e(0x20) v1ea
0x214: CALLDATACOPY v20b v1ee v210
0x216: v216 = ADD v20b v210
0x222: v222(0x3b4) = CONST 
0x225: JUMP v222(0x3b4)
----------------------------------

Begin block 0x226
prev = {'0x52e'}, next = {}
----------------------------------
Block 0x226
0x227: STOP 
----------------------------------

Begin block 0x228
prev = {'0x7d'}, next = {'0x27f', '0x283'}
----------------------------------
Block 0x228
0x229: v229(0x0) = CONST 
0x22d: v22d = SLOAD v229(0x0)
0x22f: v22f(0x100) = CONST 
0x232: v232(0x1) = EXP v22f(0x100) v229(0x0)
0x234: v234 = DIV v22d v232(0x1)
0x235: v235(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x24a: v24a = AND v235(0xffffffffffffffffffffffffffffffffffffffff) v234
0x24b: v24b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x260: v260 = AND v24b(0xffffffffffffffffffffffffffffffffffffffff) v24a
0x261: v261 = CALLER 
0x262: v262(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x277: v277 = AND v262(0xffffffffffffffffffffffffffffffffffffffff) v261
0x278: v278 = EQ v277 v260
0x279: v279 = ISZERO v278
0x27a: v27a = ISZERO v279
0x27b: v27b(0x283) = CONST 
0x27e: JUMPI v27b(0x283) v27a
----------------------------------

Begin block 0x27f
prev = {'0x228'}, next = {}
----------------------------------
Block 0x27f
0x27f: v27f(0x0) = CONST 
0x282: REVERT v27f(0x0) v27f(0x0)
----------------------------------

Begin block 0x283
prev = {'0x228'}, next = {'0xa9'}
----------------------------------
Block 0x283
0x285: v285(0x1) = CONST 
0x287: v287(0x0) = CONST 
0x289: v289(0x100) = CONST 
0x28c: v28c(0x1) = EXP v289(0x100) v287(0x0)
0x28e: v28e = SLOAD v285(0x1)
0x290: v290(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x2a5: v2a5(0xffffffffffffffffffffffffffffffffffffffff) = MUL v290(0xffffffffffffffffffffffffffffffffffffffff) v28c(0x1)
0x2a6: v2a6(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v2a5(0xffffffffffffffffffffffffffffffffffffffff)
0x2a7: v2a7 = AND v2a6(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v28e
0x2aa: v2aa(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x2bf: v2bf = AND v2aa(0xffffffffffffffffffffffffffffffffffffffff) v9b
0x2c0: v2c0 = MUL v2bf v28c(0x1)
0x2c1: v2c1 = OR v2c0 v2a7
0x2c3: SSTORE v285(0x1) v2c1
0x2c6: JUMP v7e(0xa9)
----------------------------------

Begin block 0x2c7
prev = {'0xb6'}, next = {'0xbe'}
----------------------------------
Block 0x2c7
0x2c8: v2c8(0x0) = CONST 
0x2ca: v2ca(0x1) = CONST 
0x2cc: v2cc(0x0) = CONST 
0x2cf: v2cf = SLOAD v2ca(0x1)
0x2d1: v2d1(0x100) = CONST 
0x2d4: v2d4(0x1) = EXP v2d1(0x100) v2cc(0x0)
0x2d6: v2d6 = DIV v2cf v2d4(0x1)
0x2d7: v2d7(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x2ec: v2ec = AND v2d7(0xffffffffffffffffffffffffffffffffffffffff) v2d6
0x2f0: JUMP vb7(0xbe)
----------------------------------

Begin block 0x2f1
prev = {'0x10b'}, next = {'0x34c', '0x348'}
----------------------------------
Block 0x2f1
0x2f2: v2f2(0x0) = CONST 
0x2f6: v2f6 = SLOAD v2f2(0x0)
0x2f8: v2f8(0x100) = CONST 
0x2fb: v2fb(0x1) = EXP v2f8(0x100) v2f2(0x0)
0x2fd: v2fd = DIV v2f6 v2fb(0x1)
0x2fe: v2fe(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x313: v313 = AND v2fe(0xffffffffffffffffffffffffffffffffffffffff) v2fd
0x314: v314(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x329: v329 = AND v314(0xffffffffffffffffffffffffffffffffffffffff) v313
0x32a: v32a = CALLER 
0x32b: v32b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x340: v340 = AND v32b(0xffffffffffffffffffffffffffffffffffffffff) v32a
0x341: v341 = EQ v340 v329
0x342: v342 = ISZERO v341
0x343: v343 = ISZERO v342
0x344: v344(0x34c) = CONST 
0x347: JUMPI v344(0x34c) v343
----------------------------------

Begin block 0x348
prev = {'0x2f1'}, next = {}
----------------------------------
Block 0x348
0x348: v348(0x0) = CONST 
0x34b: REVERT v348(0x0) v348(0x0)
----------------------------------

Begin block 0x34c
prev = {'0x2f1'}, next = {'0x137'}
----------------------------------
Block 0x34c
0x34e: v34e(0x0) = CONST 
0x351: v351(0x100) = CONST 
0x354: v354(0x1) = EXP v351(0x100) v34e(0x0)
0x356: v356 = SLOAD v34e(0x0)
0x358: v358(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x36d: v36d(0xffffffffffffffffffffffffffffffffffffffff) = MUL v358(0xffffffffffffffffffffffffffffffffffffffff) v354(0x1)
0x36e: v36e(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v36d(0xffffffffffffffffffffffffffffffffffffffff)
0x36f: v36f = AND v36e(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v356
0x372: v372(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x387: v387 = AND v372(0xffffffffffffffffffffffffffffffffffffffff) v129
0x388: v388 = MUL v387 v354(0x1)
0x389: v389 = OR v388 v36f
0x38b: SSTORE v34e(0x0) v389
0x38e: JUMP v10c(0x137)
----------------------------------

Begin block 0x38f
prev = {'0x144'}, next = {'0x14c'}
----------------------------------
Block 0x38f
0x390: v390(0x0) = CONST 
0x394: v394 = SLOAD v390(0x0)
0x396: v396(0x100) = CONST 
0x399: v399(0x1) = EXP v396(0x100) v390(0x0)
0x39b: v39b = DIV v394 v399(0x1)
0x39c: v39c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x3b1: v3b1 = AND v39c(0xffffffffffffffffffffffffffffffffffffffff) v39b
0x3b3: JUMP v145(0x14c)
----------------------------------

Begin block 0x3b4
prev = {'0x199'}, next = {'0x40d', '0x411'}
----------------------------------
Block 0x3b4
0x3b5: v3b5(0x0) = CONST 
0x3b8: v3b8(0x0) = CONST 
0x3bb: v3bb = SLOAD v3b5(0x0)
0x3bd: v3bd(0x100) = CONST 
0x3c0: v3c0(0x1) = EXP v3bd(0x100) v3b8(0x0)
0x3c2: v3c2 = DIV v3bb v3c0(0x1)
0x3c3: v3c3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x3d8: v3d8 = AND v3c3(0xffffffffffffffffffffffffffffffffffffffff) v3c2
0x3d9: v3d9(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x3ee: v3ee = AND v3d9(0xffffffffffffffffffffffffffffffffffffffff) v3d8
0x3ef: v3ef = CALLER 
0x3f0: v3f0(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x405: v405 = AND v3f0(0xffffffffffffffffffffffffffffffffffffffff) v3ef
0x406: v406 = EQ v405 v3ee
0x407: v407 = ISZERO v406
0x408: v408 = ISZERO v407
0x409: v409(0x411) = CONST 
0x40c: JUMPI v409(0x411) v408
----------------------------------

Begin block 0x40d
prev = {'0x3b4'}, next = {}
----------------------------------
Block 0x40d
0x40d: v40d(0x0) = CONST 
0x410: REVERT v40d(0x0) v40d(0x0)
----------------------------------

Begin block 0x411
prev = {'0x3b4'}, next = {'0x416'}
----------------------------------
Block 0x411
0x412: v412(0x0) = CONST 
----------------------------------

Begin block 0x416
prev = {'0x51e', '0x411'}, next = {'0x420', '0x52e'}
----------------------------------
Block 0x416
0x416_0x0: v416_0 = PHI v412(0x0) v526
0x418: v418 = MLOAD v1ba
0x41a: v41a = LT v416_0 v418
0x41b: v41b = ISZERO v41a
0x41c: v41c(0x52e) = CONST 
0x41f: JUMPI v41c(0x52e) v41b
----------------------------------

Begin block 0x420
prev = {'0x416'}, next = {'0x46a', '0x46b'}
----------------------------------
Block 0x420
0x420_0x0: v420_0 = PHI v412(0x0) v526
0x420: v420(0x1) = CONST 
0x422: v422(0x0) = CONST 
0x425: v425 = SLOAD v420(0x1)
0x427: v427(0x100) = CONST 
0x42a: v42a(0x1) = EXP v427(0x100) v422(0x0)
0x42c: v42c = DIV v425 v42a(0x1)
0x42d: v42d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x442: v442 = AND v42d(0xffffffffffffffffffffffffffffffffffffffff) v42c
0x443: v443(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x458: v458 = AND v443(0xffffffffffffffffffffffffffffffffffffffff) v442
0x459: v459(0xf0dda65c) = CONST 
0x461: v461 = MLOAD v1ba
0x463: v463 = LT v420_0 v461
0x464: v464 = ISZERO v463
0x465: v465 = ISZERO v464
0x466: v466(0x46b) = CONST 
0x469: JUMPI v466(0x46b) v465
----------------------------------

Begin block 0x46a
prev = {'0x420'}, next = {}
----------------------------------
Block 0x46a
0x46a: THROW 
----------------------------------

Begin block 0x46b
prev = {'0x420'}, next = {'0x482', '0x483'}
----------------------------------
Block 0x46b
0x46b_0x0: v46b_0 = PHI v412(0x0) v526
0x46b_0x4: v46b_4 = PHI v412(0x0) v526
0x46d: v46d(0x20) = CONST 
0x46f: v46f = ADD v46d(0x20) v1ba
0x471: v471(0x20) = CONST 
0x473: v473 = MUL v471(0x20) v46b_0
0x474: v474 = ADD v473 v46f
0x475: v475 = MLOAD v474
0x479: v479 = MLOAD v1fa
0x47b: v47b = LT v46b_4 v479
0x47c: v47c = ISZERO v47b
0x47d: v47d = ISZERO v47c
0x47e: v47e(0x483) = CONST 
0x481: JUMPI v47e(0x483) v47d
----------------------------------

Begin block 0x482
prev = {'0x46b'}, next = {}
----------------------------------
Block 0x482
0x482: THROW 
----------------------------------

Begin block 0x483
prev = {'0x46b'}, next = {'0x511', '0x50d'}
----------------------------------
Block 0x483
0x483_0x0: v483_0 = PHI v412(0x0) v526
0x485: v485(0x20) = CONST 
0x487: v487 = ADD v485(0x20) v1fa
0x489: v489(0x20) = CONST 
0x48b: v48b = MUL v489(0x20) v483_0
0x48c: v48c = ADD v48b v487
0x48d: v48d = MLOAD v48c
0x48e: v48e(0x40) = CONST 
0x490: v490 = MLOAD v48e(0x40)
0x492: v492(0xffffffff) = CONST 
0x497: v497 = AND v492(0xffffffff) v459(0xf0dda65c)
0x498: v498(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x4b6: v4b6 = MUL v498(0x100000000000000000000000000000000000000000000000000000000) v497
0x4b8: MSTORE v490 v4b6
0x4b9: v4b9(0x4) = CONST 
0x4bb: v4bb = ADD v4b9(0x4) v490
0x4be: v4be(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x4d3: v4d3 = AND v4be(0xffffffffffffffffffffffffffffffffffffffff) v475
0x4d4: v4d4(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x4e9: v4e9 = AND v4d4(0xffffffffffffffffffffffffffffffffffffffff) v4d3
0x4eb: MSTORE v4bb v4e9
0x4ec: v4ec(0x20) = CONST 
0x4ee: v4ee = ADD v4ec(0x20) v4bb
0x4f1: MSTORE v4ee v48d
0x4f2: v4f2(0x20) = CONST 
0x4f4: v4f4 = ADD v4f2(0x20) v4ee
0x4f9: v4f9(0x0) = CONST 
0x4fb: v4fb(0x40) = CONST 
0x4fd: v4fd = MLOAD v4fb(0x40)
0x500: v500 = SUB v4f4 v4fd
0x502: v502(0x0) = CONST 
0x506: v506 = EXTCODESIZE v458
0x507: v507 = ISZERO v506
0x508: v508 = ISZERO v507
0x509: v509(0x511) = CONST 
0x50c: JUMPI v509(0x511) v508
----------------------------------

Begin block 0x50d
prev = {'0x483'}, next = {}
----------------------------------
Block 0x50d
0x50d: v50d(0x0) = CONST 
0x510: REVERT v50d(0x0) v50d(0x0)
----------------------------------

Begin block 0x511
prev = {'0x483'}, next = {'0x51e', '0x51a'}
----------------------------------
Block 0x511
0x512: v512 = GAS 
0x513: v513 = CALL v512 v458 v502(0x0) v4fd v500 v4fd v4f9(0x0)
0x514: v514 = ISZERO v513
0x515: v515 = ISZERO v514
0x516: v516(0x51e) = CONST 
0x519: JUMPI v516(0x51e) v515
----------------------------------

Begin block 0x51a
prev = {'0x511'}, next = {}
----------------------------------
Block 0x51a
0x51a: v51a(0x0) = CONST 
0x51d: REVERT v51a(0x0) v51a(0x0)
----------------------------------

Begin block 0x51e
prev = {'0x511'}, next = {'0x416'}
----------------------------------
Block 0x51e
0x51e_0x3: v51e_3 = PHI v412(0x0) v526
0x524: v524(0x1) = CONST 
0x526: v526 = ADD v524(0x1) v51e_3
0x52a: v52a(0x416) = CONST 
0x52d: JUMP v52a(0x416)
----------------------------------

Begin block 0x52e
prev = {'0x416'}, next = {'0x226'}
----------------------------------
Block 0x52e
0x532: JUMP v19a(0x226)
----------------------------------

Begin block 0x565
prev = {'0x62', '0x0'}, next = {}
----------------------------------
Block 0x565
0x566: v566(0x6d) = CONST 
0x567: CALLPRIVATE v566(0x6d)
----------------------------------

Begin block 0x568
prev = {'0xd'}, next = {}
----------------------------------
Block 0x568
0x569: v569(0x72) = CONST 
0x56a: CALLPRIVATE v569(0x72)
----------------------------------

Begin block 0x56b
prev = {'0x41'}, next = {}
----------------------------------
Block 0x56b
0x56c: v56c(0xab) = CONST 
0x56d: CALLPRIVATE v56c(0xab)
----------------------------------

Begin block 0x56e
prev = {'0x4c'}, next = {}
----------------------------------
Block 0x56e
0x56f: v56f(0x100) = CONST 
0x570: CALLPRIVATE v56f(0x100)
----------------------------------

Begin block 0x571
prev = {'0x57'}, next = {}
----------------------------------
Block 0x571
0x572: v572(0x139) = CONST 
0x573: CALLPRIVATE v572(0x139)
----------------------------------

Begin block 0x574
prev = {'0x62'}, next = {}
----------------------------------
Block 0x574
0x575: v575(0x18e) = CONST 
0x576: CALLPRIVATE v575(0x18e)
----------------------------------
