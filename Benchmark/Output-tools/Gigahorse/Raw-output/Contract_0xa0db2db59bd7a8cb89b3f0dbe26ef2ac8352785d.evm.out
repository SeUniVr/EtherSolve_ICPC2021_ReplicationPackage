
Begin block 0x0
prev = {}, next = {'0xd', '0xedb'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0xec5: vec5(0xedb) = CONST 
0xec6: JUMPI vec5(0xedb) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x59', '0x1e'}
----------------------------------
Block 0xd
0xd: vd(0x0) = CONST 
0xf: vf = CALLDATALOAD vd(0x0)
0x10: v10(0xe0) = CONST 
0x12: v12 = SHR v10(0xe0) vf
0x14: v14(0x94684389) = CONST 
0x19: v19 = GT v14(0x94684389) v12
0x1a: v1a(0x59) = CONST 
0x1d: JUMPI v1a(0x59) v19
----------------------------------

Begin block 0x1e
prev = {'0xd'}, next = {'0xeed', '0x29'}
----------------------------------
Block 0x1e
0x1f: v1f(0x94684389) = CONST 
0x24: v24 = EQ v1f(0x94684389) v12
0xec7: vec7(0xeed) = CONST 
0xec8: JUMPI vec7(0xeed) v24
----------------------------------

Begin block 0x29
prev = {'0x1e'}, next = {'0x34', '0xef0'}
----------------------------------
Block 0x29
0x2a: v2a(0xa88780ef) = CONST 
0x2f: v2f = EQ v2a(0xa88780ef) v12
0xec9: vec9(0xef0) = CONST 
0xeca: JUMPI vec9(0xef0) v2f
----------------------------------

Begin block 0x34
prev = {'0x29'}, next = {'0xef3', '0x3f'}
----------------------------------
Block 0x34
0x35: v35(0xd7f45e2a) = CONST 
0x3a: v3a = EQ v35(0xd7f45e2a) v12
0xecb: vecb(0xef3) = CONST 
0xecc: JUMPI vecb(0xef3) v3a
----------------------------------

Begin block 0x3f
prev = {'0x34'}, next = {'0x4a', '0xef6'}
----------------------------------
Block 0x3f
0x40: v40(0xf2fde38b) = CONST 
0x45: v45 = EQ v40(0xf2fde38b) v12
0xecd: vecd(0xef6) = CONST 
0xece: JUMPI vecd(0xef6) v45
----------------------------------

Begin block 0x4a
prev = {'0x3f'}, next = {'0xef9', '0x55'}
----------------------------------
Block 0x4a
0x4b: v4b(0xfc0c546a) = CONST 
0x50: v50 = EQ v4b(0xfc0c546a) v12
0xecf: vecf(0xef9) = CONST 
0xed0: JUMPI vecf(0xef9) v50
----------------------------------

Begin block 0x55
prev = {'0x4a'}, next = {'0x910x0'}
----------------------------------
Block 0x55
0x55: v55(0x91) = CONST 
0x58: JUMP v55(0x91)
----------------------------------

Begin block 0x59
prev = {'0xd'}, next = {'0xede', '0x65'}
----------------------------------
Block 0x59
0x5b: v5b(0x12065fe0) = CONST 
0x60: v60 = EQ v5b(0x12065fe0) v12
0xed1: ved1(0xede) = CONST 
0xed2: JUMPI ved1(0xede) v60
----------------------------------

Begin block 0x65
prev = {'0x59'}, next = {'0xee1', '0x70'}
----------------------------------
Block 0x65
0x66: v66(0x2c4e722e) = CONST 
0x6b: v6b = EQ v66(0x2c4e722e) v12
0xed3: ved3(0xee1) = CONST 
0xed4: JUMPI ved3(0xee1) v6b
----------------------------------

Begin block 0x70
prev = {'0x65'}, next = {'0xee4', '0x7b'}
----------------------------------
Block 0x70
0x71: v71(0x3ccfd60b) = CONST 
0x76: v76 = EQ v71(0x3ccfd60b) v12
0xed5: ved5(0xee4) = CONST 
0xed6: JUMPI ved5(0xee4) v76
----------------------------------

Begin block 0x7b
prev = {'0x70'}, next = {'0x86', '0xee7'}
----------------------------------
Block 0x7b
0x7c: v7c(0x405abb41) = CONST 
0x81: v81 = EQ v7c(0x405abb41) v12
0xed7: ved7(0xee7) = CONST 
0xed8: JUMPI ved7(0xee7) v81
----------------------------------

Begin block 0x86
prev = {'0x7b'}, next = {'0xedb', '0xeea'}
----------------------------------
Block 0x86
0x87: v87(0x8da5cb5b) = CONST 
0x8c: v8c = EQ v87(0x8da5cb5b) v12
0xed9: ved9(0xeea) = CONST 
0xeda: JUMPI ved9(0xeea) v8c
----------------------------------

Begin block 0x91
prev = {}, next = {'0x990x91'}
----------------------------------
function batchLock_63efZf()()
Block 0x91
0x92: v92(0x99) = CONST 
0x95: v95(0x2b0) = CONST 
0x98: CALLPRIVATE v95(0x2b0) v92(0x99)
----------------------------------

Begin block 0x910x0
prev = {'0xedb', '0x55'}, next = {'0x990x0'}
----------------------------------
Block 0x910x0
0x920x0: v092(0x99) = CONST 
0x950x0: v095(0x2b0) = CONST 
0x980x0: CALLPRIVATE v095(0x2b0) v092(0x99)
----------------------------------

Begin block 0x990x0
prev = {'0x910x0'}, next = {}
----------------------------------
Block 0x990x0
0x9a0x0: STOP 
----------------------------------

Begin block 0x990x91
prev = {'0x91'}, next = {}
----------------------------------
Block 0x990x91
0x9a0x91: STOP 
----------------------------------

Begin block 0x9b
prev = {}, next = {'0xa7', '0xa3'}
----------------------------------
function getBalance()()
Block 0x9b
0x9c: v9c = CALLVALUE 
0x9e: v9e = ISZERO v9c
0x9f: v9f(0xa7) = CONST 
0xa2: JUMPI v9f(0xa7) v9e
----------------------------------

Begin block 0xa3
prev = {'0x9b'}, next = {}
----------------------------------
Block 0xa3
0xa3: va3(0x0) = CONST 
0xa6: REVERT va3(0x0) va3(0x0)
----------------------------------

Begin block 0xa7
prev = {'0x9b'}, next = {'0x82f'}
----------------------------------
Block 0xa7
0xa9: va9(0xb0) = CONST 
0xac: vac(0x82f) = CONST 
0xaf: JUMP vac(0x82f)
----------------------------------

Begin block 0xc6
prev = {}, next = {'0xce', '0xd2'}
----------------------------------
function rate()()
Block 0xc6
0xc7: vc7 = CALLVALUE 
0xc9: vc9 = ISZERO vc7
0xca: vca(0xd2) = CONST 
0xcd: JUMPI vca(0xd2) vc9
----------------------------------

Begin block 0xce
prev = {'0xc6'}, next = {}
----------------------------------
Block 0xce
0xce: vce(0x0) = CONST 
0xd1: REVERT vce(0x0) vce(0x0)
----------------------------------

Begin block 0xd2
prev = {'0xc6'}, next = {'0x837'}
----------------------------------
Block 0xd2
0xd4: vd4(0xdb) = CONST 
0xd7: vd7(0x837) = CONST 
0xda: JUMP vd7(0x837)
----------------------------------

Begin block 0xdb
prev = {'0x837'}, next = {}
----------------------------------
Block 0xdb
0xdc: vdc(0x40) = CONST 
0xde: vde = MLOAD vdc(0x40)
0xe2: MSTORE vde v83a
0xe3: ve3(0x20) = CONST 
0xe5: ve5 = ADD ve3(0x20) vde
0xe9: ve9(0x40) = CONST 
0xeb: veb = MLOAD ve9(0x40)
0xee: vee = SUB ve5 veb
0xf0: RETURN veb vee
----------------------------------

Begin block 0xf1
prev = {}, next = {'0xf9', '0xfd'}
----------------------------------
function withdraw()()
Block 0xf1
0xf2: vf2 = CALLVALUE 
0xf4: vf4 = ISZERO vf2
0xf5: vf5(0xfd) = CONST 
0xf8: JUMPI vf5(0xfd) vf4
----------------------------------

Begin block 0xf9
prev = {'0xf1'}, next = {}
----------------------------------
Block 0xf9
0xf9: vf9(0x0) = CONST 
0xfc: REVERT vf9(0x0) vf9(0x0)
----------------------------------

Begin block 0xfd
prev = {'0xf1'}, next = {'0x83d'}
----------------------------------
Block 0xfd
0xff: vff(0x106) = CONST 
0x102: v102(0x83d) = CONST 
0x105: JUMP v102(0x83d)
----------------------------------

Begin block 0x108
prev = {}, next = {'0x110', '0x114'}
----------------------------------
function updateRate(uint256,uint256)()
Block 0x108
0x109: v109 = CALLVALUE 
0x10b: v10b = ISZERO v109
0x10c: v10c(0x114) = CONST 
0x10f: JUMPI v10c(0x114) v10b
----------------------------------

Begin block 0x110
prev = {'0x108'}, next = {}
----------------------------------
Block 0x110
0x110: v110(0x0) = CONST 
0x113: REVERT v110(0x0) v110(0x0)
----------------------------------

Begin block 0x114
prev = {'0x108'}, next = {'0x127', '0x12b'}
----------------------------------
Block 0x114
0x116: v116(0x14b) = CONST 
0x119: v119(0x4) = CONST 
0x11c: v11c = CALLDATASIZE 
0x11d: v11d = SUB v11c v119(0x4)
0x11e: v11e(0x40) = CONST 
0x121: v121 = LT v11d v11e(0x40)
0x122: v122 = ISZERO v121
0x123: v123(0x12b) = CONST 
0x126: JUMPI v123(0x12b) v122
----------------------------------

Begin block 0x127
prev = {'0x114'}, next = {}
----------------------------------
Block 0x127
0x127: v127(0x0) = CONST 
0x12a: REVERT v127(0x0) v127(0x0)
----------------------------------

Begin block 0x12b
prev = {'0x114'}, next = {'0xb19'}
----------------------------------
Block 0x12b
0x12d: v12d = ADD v119(0x4) v11d
0x131: v131 = CALLDATALOAD v119(0x4)
0x133: v133(0x20) = CONST 
0x135: v135 = ADD v133(0x20) v119(0x4)
0x13b: v13b = CALLDATALOAD v135
0x13d: v13d(0x20) = CONST 
0x13f: v13f = ADD v13d(0x20) v135
0x147: v147(0xb19) = CONST 
0x14a: JUMP v147(0xb19)
----------------------------------

Begin block 0x14b
prev = {'0xc52'}, next = {}
----------------------------------
Block 0x14b
0x14c: STOP 
----------------------------------

Begin block 0x14d
prev = {}, next = {'0x159', '0x155'}
----------------------------------
function owner()()
Block 0x14d
0x14e: v14e = CALLVALUE 
0x150: v150 = ISZERO v14e
0x151: v151(0x159) = CONST 
0x154: JUMPI v151(0x159) v150
----------------------------------

Begin block 0x155
prev = {'0x14d'}, next = {}
----------------------------------
Block 0x155
0x155: v155(0x0) = CONST 
0x158: REVERT v155(0x0) v155(0x0)
----------------------------------

Begin block 0x159
prev = {'0x14d'}, next = {'0xc9d'}
----------------------------------
Block 0x159
0x15b: v15b(0x162) = CONST 
0x15e: v15e(0xc9d) = CONST 
0x161: JUMP v15e(0xc9d)
----------------------------------

Begin block 0x162
prev = {'0xc9d'}, next = {}
----------------------------------
Block 0x162
0x163: v163(0x40) = CONST 
0x165: v165 = MLOAD v163(0x40)
0x168: v168(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x17d: v17d = AND v168(0xffffffffffffffffffffffffffffffffffffffff) vcc0
0x17e: v17e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x193: v193 = AND v17e(0xffffffffffffffffffffffffffffffffffffffff) v17d
0x195: MSTORE v165 v193
0x196: v196(0x20) = CONST 
0x198: v198 = ADD v196(0x20) v165
0x19c: v19c(0x40) = CONST 
0x19e: v19e = MLOAD v19c(0x40)
0x1a1: v1a1 = SUB v198 v19e
0x1a3: RETURN v19e v1a1
----------------------------------

Begin block 0x1a4
prev = {}, next = {'0x1b0', '0x1ac'}
----------------------------------
function isRateValid()()
Block 0x1a4
0x1a5: v1a5 = CALLVALUE 
0x1a7: v1a7 = ISZERO v1a5
0x1a8: v1a8(0x1b0) = CONST 
0x1ab: JUMPI v1a8(0x1b0) v1a7
----------------------------------

Begin block 0x1ac
prev = {'0x1a4'}, next = {}
----------------------------------
Block 0x1ac
0x1ac: v1ac(0x0) = CONST 
0x1af: REVERT v1ac(0x0) v1ac(0x0)
----------------------------------

Begin block 0x1b0
prev = {'0x1a4'}, next = {'0x1b9'}
----------------------------------
Block 0x1b0
0x1b2: v1b2(0x1b9) = CONST 
0x1b5: v1b5(0xcc3) = CONST 
0x1b8: v1b8_0 = CALLPRIVATE v1b5(0xcc3) v1b2(0x1b9)
----------------------------------

Begin block 0x1b9
prev = {'0x1b0'}, next = {}
----------------------------------
Block 0x1b9
0x1ba: v1ba(0x40) = CONST 
0x1bc: v1bc = MLOAD v1ba(0x40)
0x1bf: v1bf = ISZERO v1b8_0
0x1c0: v1c0 = ISZERO v1bf
0x1c1: v1c1 = ISZERO v1c0
0x1c2: v1c2 = ISZERO v1c1
0x1c4: MSTORE v1bc v1c2
0x1c5: v1c5(0x20) = CONST 
0x1c7: v1c7 = ADD v1c5(0x20) v1bc
0x1cb: v1cb(0x40) = CONST 
0x1cd: v1cd = MLOAD v1cb(0x40)
0x1d0: v1d0 = SUB v1c7 v1cd
0x1d2: RETURN v1cd v1d0
----------------------------------

Begin block 0x1d3
prev = {}, next = {'0x1df', '0x1db'}
----------------------------------
function validTo()()
Block 0x1d3
0x1d4: v1d4 = CALLVALUE 
0x1d6: v1d6 = ISZERO v1d4
0x1d7: v1d7(0x1df) = CONST 
0x1da: JUMPI v1d7(0x1df) v1d6
----------------------------------

Begin block 0x1db
prev = {'0x1d3'}, next = {}
----------------------------------
Block 0x1db
0x1db: v1db(0x0) = CONST 
0x1de: REVERT v1db(0x0) v1db(0x0)
----------------------------------

Begin block 0x1df
prev = {'0x1d3'}, next = {'0xccf'}
----------------------------------
Block 0x1df
0x1e1: v1e1(0x1e8) = CONST 
0x1e4: v1e4(0xccf) = CONST 
0x1e7: JUMP v1e4(0xccf)
----------------------------------

Begin block 0x1e8
prev = {'0xccf'}, next = {}
----------------------------------
Block 0x1e8
0x1e9: v1e9(0x40) = CONST 
0x1eb: v1eb = MLOAD v1e9(0x40)
0x1ef: MSTORE v1eb vcd2
0x1f0: v1f0(0x20) = CONST 
0x1f2: v1f2 = ADD v1f0(0x20) v1eb
0x1f6: v1f6(0x40) = CONST 
0x1f8: v1f8 = MLOAD v1f6(0x40)
0x1fb: v1fb = SUB v1f2 v1f8
0x1fd: RETURN v1f8 v1fb
----------------------------------

Begin block 0x1fe
prev = {}, next = {'0x206'}
----------------------------------
function kamikaze()()
Block 0x1fe
0x1ff: v1ff(0x206) = CONST 
0x202: v202(0x2b0) = CONST 
0x205: CALLPRIVATE v202(0x2b0) v1ff(0x206)
----------------------------------

Begin block 0x206
prev = {'0x1fe'}, next = {}
----------------------------------
Block 0x206
0x207: STOP 
----------------------------------

Begin block 0x208
prev = {}, next = {'0x214', '0x210'}
----------------------------------
function transferOwnership(address)()
Block 0x208
0x209: v209 = CALLVALUE 
0x20b: v20b = ISZERO v209
0x20c: v20c(0x214) = CONST 
0x20f: JUMPI v20c(0x214) v20b
----------------------------------

Begin block 0x210
prev = {'0x208'}, next = {}
----------------------------------
Block 0x210
0x210: v210(0x0) = CONST 
0x213: REVERT v210(0x0) v210(0x0)
----------------------------------

Begin block 0x214
prev = {'0x208'}, next = {'0x227', '0x22b'}
----------------------------------
Block 0x214
0x216: v216(0x257) = CONST 
0x219: v219(0x4) = CONST 
0x21c: v21c = CALLDATASIZE 
0x21d: v21d = SUB v21c v219(0x4)
0x21e: v21e(0x20) = CONST 
0x221: v221 = LT v21d v21e(0x20)
0x222: v222 = ISZERO v221
0x223: v223(0x22b) = CONST 
0x226: JUMPI v223(0x22b) v222
----------------------------------

Begin block 0x227
prev = {'0x214'}, next = {}
----------------------------------
Block 0x227
0x227: v227(0x0) = CONST 
0x22a: REVERT v227(0x0) v227(0x0)
----------------------------------

Begin block 0x22b
prev = {'0x214'}, next = {'0xcd5'}
----------------------------------
Block 0x22b
0x22d: v22d = ADD v219(0x4) v21d
0x231: v231 = CALLDATALOAD v219(0x4)
0x232: v232(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x247: v247 = AND v232(0xffffffffffffffffffffffffffffffffffffffff) v231
0x249: v249(0x20) = CONST 
0x24b: v24b = ADD v249(0x20) v219(0x4)
0x253: v253(0xcd5) = CONST 
0x256: JUMP v253(0xcd5)
----------------------------------

Begin block 0x257
prev = {'0xd98'}, next = {}
----------------------------------
Block 0x257
0x258: STOP 
----------------------------------

Begin block 0x259
prev = {}, next = {'0x265', '0x261'}
----------------------------------
function token()()
Block 0x259
0x25a: v25a = CALLVALUE 
0x25c: v25c = ISZERO v25a
0x25d: v25d(0x265) = CONST 
0x260: JUMPI v25d(0x265) v25c
----------------------------------

Begin block 0x261
prev = {'0x259'}, next = {}
----------------------------------
Block 0x261
0x261: v261(0x0) = CONST 
0x264: REVERT v261(0x0) v261(0x0)
----------------------------------

Begin block 0x265
prev = {'0x259'}, next = {'0xddc'}
----------------------------------
Block 0x265
0x267: v267(0x26e) = CONST 
0x26a: v26a(0xddc) = CONST 
0x26d: JUMP v26a(0xddc)
----------------------------------

Begin block 0x26e
prev = {'0xddc'}, next = {}
----------------------------------
Block 0x26e
0x26f: v26f(0x40) = CONST 
0x271: v271 = MLOAD v26f(0x40)
0x274: v274(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x289: v289 = AND v274(0xffffffffffffffffffffffffffffffffffffffff) vdfe
0x28a: v28a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x29f: v29f = AND v28a(0xffffffffffffffffffffffffffffffffffffffff) v289
0x2a1: MSTORE v271 v29f
0x2a2: v2a2(0x20) = CONST 
0x2a4: v2a4 = ADD v2a2(0x20) v271
0x2a8: v2a8(0x40) = CONST 
0x2aa: v2aa = MLOAD v2a8(0x40)
0x2ad: v2ad = SUB v2a4 v2aa
0x2af: RETURN v2aa v2ad
----------------------------------

Begin block 0x2b0
prev = {}, next = {'0x326', '0x2b9'}
----------------------------------
function 0x2b0(v2b0arg0)
Block 0x2b0
0x2b1: v2b1(0x0) = CONST 
0x2b3: v2b3 = CALLVALUE 
0x2b4: v2b4 = GT v2b3 v2b1(0x0)
0x2b5: v2b5(0x326) = CONST 
0x2b8: JUMPI v2b5(0x326) v2b4
----------------------------------

Begin block 0x2b9
prev = {'0x2b0'}, next = {}
----------------------------------
Block 0x2b9
0x2b9: v2b9(0x40) = CONST 
0x2bb: v2bb = MLOAD v2b9(0x40)
0x2bc: v2bc(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x2de: MSTORE v2bb v2bc(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x2df: v2df(0x4) = CONST 
0x2e1: v2e1 = ADD v2df(0x4) v2bb
0x2e4: v2e4(0x20) = CONST 
0x2e6: v2e6 = ADD v2e4(0x20) v2e1
0x2e9: v2e9 = SUB v2e6 v2e1
0x2eb: MSTORE v2e1 v2e9
0x2ec: v2ec(0x10) = CONST 
0x2ef: MSTORE v2e6 v2ec(0x10)
0x2f0: v2f0(0x20) = CONST 
0x2f2: v2f2 = ADD v2f0(0x20) v2e6
0x2f4: v2f4(0x4e65656420746f2073656e642045544800000000000000000000000000000000) = CONST 
0x316: MSTORE v2f2 v2f4(0x4e65656420746f2073656e642045544800000000000000000000000000000000)
0x318: v318(0x20) = CONST 
0x31a: v31a = ADD v318(0x20) v2f2
0x31e: v31e(0x40) = CONST 
0x320: v320 = MLOAD v31e(0x40)
0x323: v323 = SUB v31a v320
0x325: REVERT v320 v323
----------------------------------

Begin block 0x326
prev = {'0x2b0'}, next = {'0x32e'}
----------------------------------
Block 0x326
0x327: v327(0x32e) = CONST 
0x32a: v32a(0xcc3) = CONST 
0x32d: v32d_0 = CALLPRIVATE v32a(0xcc3) v327(0x32e)
----------------------------------

Begin block 0x32e
prev = {'0x326'}, next = {'0x3a0', '0x333'}
----------------------------------
Block 0x32e
0x32f: v32f(0x3a0) = CONST 
0x332: JUMPI v32f(0x3a0) v32d_0
----------------------------------

Begin block 0x333
prev = {'0x32e'}, next = {}
----------------------------------
Block 0x333
0x333: v333(0x40) = CONST 
0x335: v335 = MLOAD v333(0x40)
0x336: v336(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x358: MSTORE v335 v336(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x359: v359(0x4) = CONST 
0x35b: v35b = ADD v359(0x4) v335
0x35e: v35e(0x20) = CONST 
0x360: v360 = ADD v35e(0x20) v35b
0x363: v363 = SUB v360 v35b
0x365: MSTORE v35b v363
0x366: v366(0x17) = CONST 
0x369: MSTORE v360 v366(0x17)
0x36a: v36a(0x20) = CONST 
0x36c: v36c = ADD v36a(0x20) v360
0x36e: v36e(0x52617465206973206e6f206c6f6e6765722076616c6964000000000000000000) = CONST 
0x390: MSTORE v36c v36e(0x52617465206973206e6f206c6f6e6765722076616c6964000000000000000000)
0x392: v392(0x20) = CONST 
0x394: v394 = ADD v392(0x20) v36c
0x398: v398(0x40) = CONST 
0x39a: v39a = MLOAD v398(0x40)
0x39d: v39d = SUB v394 v39a
0x39f: REVERT v39a v39d
----------------------------------

Begin block 0x3a0
prev = {'0x32e'}, next = {'0x445', '0x449'}
----------------------------------
Block 0x3a0
0x3a1: v3a1(0x0) = CONST 
0x3a3: v3a3(0x1) = CONST 
0x3a5: v3a5 = SLOAD v3a3(0x1)
0x3a6: v3a6 = CALLVALUE 
0x3a7: v3a7 = MUL v3a6 v3a5
0x3aa: v3aa(0x0) = CONST 
0x3ad: v3ad(0x0) = CONST 
0x3b0: v3b0 = SLOAD v3aa(0x0)
0x3b2: v3b2(0x100) = CONST 
0x3b5: v3b5(0x1) = EXP v3b2(0x100) v3ad(0x0)
0x3b7: v3b7 = DIV v3b0 v3b5(0x1)
0x3b8: v3b8(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x3cd: v3cd = AND v3b8(0xffffffffffffffffffffffffffffffffffffffff) v3b7
0x3ce: v3ce(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x3e3: v3e3 = AND v3ce(0xffffffffffffffffffffffffffffffffffffffff) v3cd
0x3e4: v3e4(0x70a08231) = CONST 
0x3e9: v3e9 = ADDRESS 
0x3ea: v3ea(0x40) = CONST 
0x3ec: v3ec = MLOAD v3ea(0x40)
0x3ee: v3ee(0xffffffff) = CONST 
0x3f3: v3f3(0x70a08231) = AND v3ee(0xffffffff) v3e4(0x70a08231)
0x3f4: v3f4(0xe0) = CONST 
0x3f6: v3f6(0x70a0823100000000000000000000000000000000000000000000000000000000) = SHL v3f4(0xe0) v3f3(0x70a08231)
0x3f8: MSTORE v3ec v3f6(0x70a0823100000000000000000000000000000000000000000000000000000000)
0x3f9: v3f9(0x4) = CONST 
0x3fb: v3fb = ADD v3f9(0x4) v3ec
0x3fe: v3fe(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x413: v413 = AND v3fe(0xffffffffffffffffffffffffffffffffffffffff) v3e9
0x414: v414(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x429: v429 = AND v414(0xffffffffffffffffffffffffffffffffffffffff) v413
0x42b: MSTORE v3fb v429
0x42c: v42c(0x20) = CONST 
0x42e: v42e = ADD v42c(0x20) v3fb
0x432: v432(0x20) = CONST 
0x434: v434(0x40) = CONST 
0x436: v436 = MLOAD v434(0x40)
0x439: v439 = SUB v42e v436
0x43d: v43d = EXTCODESIZE v3e3
0x43e: v43e = ISZERO v43d
0x440: v440 = ISZERO v43e
0x441: v441(0x449) = CONST 
0x444: JUMPI v441(0x449) v440
----------------------------------

Begin block 0x445
prev = {'0x3a0'}, next = {}
----------------------------------
Block 0x445
0x445: v445(0x0) = CONST 
0x448: REVERT v445(0x0) v445(0x0)
----------------------------------

Begin block 0x449
prev = {'0x3a0'}, next = {'0x454', '0x45d'}
----------------------------------
Block 0x449
0x44b: v44b = GAS 
0x44c: v44c = STATICCALL v44b v3e3 v436 v439 v436 v432(0x20)
0x44d: v44d = ISZERO v44c
0x44f: v44f = ISZERO v44d
0x450: v450(0x45d) = CONST 
0x453: JUMPI v450(0x45d) v44f
----------------------------------

Begin block 0x454
prev = {'0x449'}, next = {}
----------------------------------
Block 0x454
0x454: v454 = RETURNDATASIZE 
0x455: v455(0x0) = CONST 
0x458: RETURNDATACOPY v455(0x0) v455(0x0) v454
0x459: v459 = RETURNDATASIZE 
0x45a: v45a(0x0) = CONST 
0x45c: REVERT v45a(0x0) v459
----------------------------------

Begin block 0x45d
prev = {'0x449'}, next = {'0x473', '0x46f'}
----------------------------------
Block 0x45d
0x462: v462(0x40) = CONST 
0x464: v464 = MLOAD v462(0x40)
0x465: v465 = RETURNDATASIZE 
0x466: v466(0x20) = CONST 
0x469: v469 = LT v465 v466(0x20)
0x46a: v46a = ISZERO v469
0x46b: v46b(0x473) = CONST 
0x46e: JUMPI v46b(0x473) v46a
----------------------------------

Begin block 0x46f
prev = {'0x45d'}, next = {}
----------------------------------
Block 0x46f
0x46f: v46f(0x0) = CONST 
0x472: REVERT v46f(0x0) v46f(0x0)
----------------------------------

Begin block 0x473
prev = {'0x45d'}, next = {'0x48e', '0x628'}
----------------------------------
Block 0x473
0x475: v475 = ADD v464 v465
0x479: v479 = MLOAD v464
0x47b: v47b(0x20) = CONST 
0x47d: v47d = ADD v47b(0x20) v464
0x489: v489 = LT v479 v3a7
0x48a: v48a(0x628) = CONST 
0x48d: JUMPI v48a(0x628) v489
----------------------------------

Begin block 0x48e
prev = {'0x473'}, next = {'0x535', '0x531'}
----------------------------------
Block 0x48e
0x48e: v48e(0x0) = CONST 
0x492: v492 = SLOAD v48e(0x0)
0x494: v494(0x100) = CONST 
0x497: v497(0x1) = EXP v494(0x100) v48e(0x0)
0x499: v499 = DIV v492 v497(0x1)
0x49a: v49a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x4af: v4af = AND v49a(0xffffffffffffffffffffffffffffffffffffffff) v499
0x4b0: v4b0(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x4c5: v4c5 = AND v4b0(0xffffffffffffffffffffffffffffffffffffffff) v4af
0x4c6: v4c6(0xa9059cbb) = CONST 
0x4cb: v4cb = CALLER 
0x4cd: v4cd(0x40) = CONST 
0x4cf: v4cf = MLOAD v4cd(0x40)
0x4d1: v4d1(0xffffffff) = CONST 
0x4d6: v4d6(0xa9059cbb) = AND v4d1(0xffffffff) v4c6(0xa9059cbb)
0x4d7: v4d7(0xe0) = CONST 
0x4d9: v4d9(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = SHL v4d7(0xe0) v4d6(0xa9059cbb)
0x4db: MSTORE v4cf v4d9(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0x4dc: v4dc(0x4) = CONST 
0x4de: v4de = ADD v4dc(0x4) v4cf
0x4e1: v4e1(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x4f6: v4f6 = AND v4e1(0xffffffffffffffffffffffffffffffffffffffff) v4cb
0x4f7: v4f7(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x50c: v50c = AND v4f7(0xffffffffffffffffffffffffffffffffffffffff) v4f6
0x50e: MSTORE v4de v50c
0x50f: v50f(0x20) = CONST 
0x511: v511 = ADD v50f(0x20) v4de
0x514: MSTORE v511 v3a7
0x515: v515(0x20) = CONST 
0x517: v517 = ADD v515(0x20) v511
0x51c: v51c(0x20) = CONST 
0x51e: v51e(0x40) = CONST 
0x520: v520 = MLOAD v51e(0x40)
0x523: v523 = SUB v517 v520
0x525: v525(0x0) = CONST 
0x529: v529 = EXTCODESIZE v4c5
0x52a: v52a = ISZERO v529
0x52c: v52c = ISZERO v52a
0x52d: v52d(0x535) = CONST 
0x530: JUMPI v52d(0x535) v52c
----------------------------------

Begin block 0x531
prev = {'0x48e'}, next = {}
----------------------------------
Block 0x531
0x531: v531(0x0) = CONST 
0x534: REVERT v531(0x0) v531(0x0)
----------------------------------

Begin block 0x535
prev = {'0x48e'}, next = {'0x540', '0x549'}
----------------------------------
Block 0x535
0x537: v537 = GAS 
0x538: v538 = CALL v537 v4c5 v525(0x0) v520 v523 v520 v51c(0x20)
0x539: v539 = ISZERO v538
0x53b: v53b = ISZERO v539
0x53c: v53c(0x549) = CONST 
0x53f: JUMPI v53c(0x549) v53b
----------------------------------

Begin block 0x540
prev = {'0x535'}, next = {}
----------------------------------
Block 0x540
0x540: v540 = RETURNDATASIZE 
0x541: v541(0x0) = CONST 
0x544: RETURNDATACOPY v541(0x0) v541(0x0) v540
0x545: v545 = RETURNDATASIZE 
0x546: v546(0x0) = CONST 
0x548: REVERT v546(0x0) v545
----------------------------------

Begin block 0x549
prev = {'0x535'}, next = {'0x55b', '0x55f'}
----------------------------------
Block 0x549
0x54e: v54e(0x40) = CONST 
0x550: v550 = MLOAD v54e(0x40)
0x551: v551 = RETURNDATASIZE 
0x552: v552(0x20) = CONST 
0x555: v555 = LT v551 v552(0x20)
0x556: v556 = ISZERO v555
0x557: v557(0x55f) = CONST 
0x55a: JUMPI v557(0x55f) v556
----------------------------------

Begin block 0x55b
prev = {'0x549'}, next = {}
----------------------------------
Block 0x55b
0x55b: v55b(0x0) = CONST 
0x55e: REVERT v55b(0x0) v55b(0x0)
----------------------------------

Begin block 0x55f
prev = {'0x549'}, next = {'0x5d9', '0x5d0'}
----------------------------------
Block 0x55f
0x561: v561 = ADD v550 v551
0x565: v565 = MLOAD v550
0x567: v567(0x20) = CONST 
0x569: v569 = ADD v567(0x20) v550
0x572: v572(0x3) = CONST 
0x574: v574(0x0) = CONST 
0x577: v577 = SLOAD v572(0x3)
0x579: v579(0x100) = CONST 
0x57c: v57c(0x1) = EXP v579(0x100) v574(0x0)
0x57e: v57e = DIV v577 v57c(0x1)
0x57f: v57f(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x594: v594 = AND v57f(0xffffffffffffffffffffffffffffffffffffffff) v57e
0x595: v595(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x5aa: v5aa = AND v595(0xffffffffffffffffffffffffffffffffffffffff) v594
0x5ab: v5ab(0x8fc) = CONST 
0x5ae: v5ae = CALLVALUE 
0x5b1: v5b1 = ISZERO v5ae
0x5b2: v5b2 = MUL v5b1 v5ab(0x8fc)
0x5b4: v5b4(0x40) = CONST 
0x5b6: v5b6 = MLOAD v5b4(0x40)
0x5b7: v5b7(0x0) = CONST 
0x5b9: v5b9(0x40) = CONST 
0x5bb: v5bb = MLOAD v5b9(0x40)
0x5be: v5be = SUB v5b6 v5bb
0x5c3: v5c3 = CALL v5b2 v5aa v5ae v5bb v5be v5bb v5b7(0x0)
0x5c9: v5c9 = ISZERO v5c3
0x5cb: v5cb = ISZERO v5c9
0x5cc: v5cc(0x5d9) = CONST 
0x5cf: JUMPI v5cc(0x5d9) v5cb
----------------------------------

Begin block 0x5d0
prev = {'0x55f'}, next = {}
----------------------------------
Block 0x5d0
0x5d0: v5d0 = RETURNDATASIZE 
0x5d1: v5d1(0x0) = CONST 
0x5d4: RETURNDATACOPY v5d1(0x0) v5d1(0x0) v5d0
0x5d5: v5d5 = RETURNDATASIZE 
0x5d6: v5d6(0x0) = CONST 
0x5d8: REVERT v5d6(0x0) v5d5
----------------------------------

Begin block 0x5d9
prev = {'0x55f'}, next = {'0x82b'}
----------------------------------
Block 0x5d9
0x5db: v5db(0x1944290154176f4c0b5d8339910ce66de9f4a57a21c3737bb4b212644c735776) = CONST 
0x5fc: v5fc = CALLVALUE 
0x5fe: v5fe(0x1) = CONST 
0x600: v600 = SLOAD v5fe(0x1)
0x601: v601(0x40) = CONST 
0x603: v603 = MLOAD v601(0x40)
0x607: MSTORE v603 v5fc
0x608: v608(0x20) = CONST 
0x60a: v60a = ADD v608(0x20) v603
0x60d: MSTORE v60a v3a7
0x60e: v60e(0x20) = CONST 
0x610: v610 = ADD v60e(0x20) v60a
0x613: MSTORE v610 v600
0x614: v614(0x20) = CONST 
0x616: v616 = ADD v614(0x20) v610
0x61c: v61c(0x40) = CONST 
0x61e: v61e = MLOAD v61c(0x40)
0x621: v621 = SUB v616 v61e
0x623: LOG1 v61e v621 v5db(0x1944290154176f4c0b5d8339910ce66de9f4a57a21c3737bb4b212644c735776)
0x624: v624(0x82b) = CONST 
0x627: JUMP v624(0x82b)
----------------------------------

Begin block 0x628
prev = {'0x473'}, next = {'0xe01'}
----------------------------------
Block 0x628
0x62c: v62c(0x0) = CONST 
0x62e: v62e(0x642) = CONST 
0x631: v631(0x1) = CONST 
0x633: v633 = SLOAD v631(0x1)
0x635: v635(0xe01) = CONST 
0x63b: v63b(0xffffffff) = CONST 
0x640: v640(0xe01) = AND v63b(0xffffffff) v635(0xe01)
0x641: JUMP v640(0xe01)
----------------------------------

Begin block 0x642
prev = {'0xe83'}, next = {'0x691', '0x688'}
----------------------------------
Block 0x642
0x645: v645(0x0) = CONST 
0x648: v648 = CALLVALUE 
0x649: v649 = SUB v648 ve84
0x64c: v64c = CALLER 
0x64d: v64d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x662: v662 = AND v64d(0xffffffffffffffffffffffffffffffffffffffff) v64c
0x663: v663(0x8fc) = CONST 
0x669: v669 = ISZERO v649
0x66a: v66a = MUL v669 v663(0x8fc)
0x66c: v66c(0x40) = CONST 
0x66e: v66e = MLOAD v66c(0x40)
0x66f: v66f(0x0) = CONST 
0x671: v671(0x40) = CONST 
0x673: v673 = MLOAD v671(0x40)
0x676: v676 = SUB v66e v673
0x67b: v67b = CALL v66a v662 v649 v673 v676 v673 v66f(0x0)
0x681: v681 = ISZERO v67b
0x683: v683 = ISZERO v681
0x684: v684(0x691) = CONST 
0x687: JUMPI v684(0x691) v683
----------------------------------

Begin block 0x688
prev = {'0x642'}, next = {}
----------------------------------
Block 0x688
0x688: v688 = RETURNDATASIZE 
0x689: v689(0x0) = CONST 
0x68c: RETURNDATACOPY v689(0x0) v689(0x0) v688
0x68d: v68d = RETURNDATASIZE 
0x68e: v68e(0x0) = CONST 
0x690: REVERT v68e(0x0) v68d
----------------------------------

Begin block 0x691
prev = {'0x642'}, next = {'0x736', '0x73a'}
----------------------------------
Block 0x691
0x693: v693(0x0) = CONST 
0x697: v697 = SLOAD v693(0x0)
0x699: v699(0x100) = CONST 
0x69c: v69c(0x1) = EXP v699(0x100) v693(0x0)
0x69e: v69e = DIV v697 v69c(0x1)
0x69f: v69f(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x6b4: v6b4 = AND v69f(0xffffffffffffffffffffffffffffffffffffffff) v69e
0x6b5: v6b5(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x6ca: v6ca = AND v6b5(0xffffffffffffffffffffffffffffffffffffffff) v6b4
0x6cb: v6cb(0xa9059cbb) = CONST 
0x6d0: v6d0 = CALLER 
0x6d2: v6d2(0x40) = CONST 
0x6d4: v6d4 = MLOAD v6d2(0x40)
0x6d6: v6d6(0xffffffff) = CONST 
0x6db: v6db(0xa9059cbb) = AND v6d6(0xffffffff) v6cb(0xa9059cbb)
0x6dc: v6dc(0xe0) = CONST 
0x6de: v6de(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = SHL v6dc(0xe0) v6db(0xa9059cbb)
0x6e0: MSTORE v6d4 v6de(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0x6e1: v6e1(0x4) = CONST 
0x6e3: v6e3 = ADD v6e1(0x4) v6d4
0x6e6: v6e6(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x6fb: v6fb = AND v6e6(0xffffffffffffffffffffffffffffffffffffffff) v6d0
0x6fc: v6fc(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x711: v711 = AND v6fc(0xffffffffffffffffffffffffffffffffffffffff) v6fb
0x713: MSTORE v6e3 v711
0x714: v714(0x20) = CONST 
0x716: v716 = ADD v714(0x20) v6e3
0x719: MSTORE v716 v479
0x71a: v71a(0x20) = CONST 
0x71c: v71c = ADD v71a(0x20) v716
0x721: v721(0x20) = CONST 
0x723: v723(0x40) = CONST 
0x725: v725 = MLOAD v723(0x40)
0x728: v728 = SUB v71c v725
0x72a: v72a(0x0) = CONST 
0x72e: v72e = EXTCODESIZE v6ca
0x72f: v72f = ISZERO v72e
0x731: v731 = ISZERO v72f
0x732: v732(0x73a) = CONST 
0x735: JUMPI v732(0x73a) v731
----------------------------------

Begin block 0x736
prev = {'0x691'}, next = {}
----------------------------------
Block 0x736
0x736: v736(0x0) = CONST 
0x739: REVERT v736(0x0) v736(0x0)
----------------------------------

Begin block 0x73a
prev = {'0x691'}, next = {'0x74e', '0x745'}
----------------------------------
Block 0x73a
0x73c: v73c = GAS 
0x73d: v73d = CALL v73c v6ca v72a(0x0) v725 v728 v725 v721(0x20)
0x73e: v73e = ISZERO v73d
0x740: v740 = ISZERO v73e
0x741: v741(0x74e) = CONST 
0x744: JUMPI v741(0x74e) v740
----------------------------------

Begin block 0x745
prev = {'0x73a'}, next = {}
----------------------------------
Block 0x745
0x745: v745 = RETURNDATASIZE 
0x746: v746(0x0) = CONST 
0x749: RETURNDATACOPY v746(0x0) v746(0x0) v745
0x74a: v74a = RETURNDATASIZE 
0x74b: v74b(0x0) = CONST 
0x74d: REVERT v74b(0x0) v74a
----------------------------------

Begin block 0x74e
prev = {'0x73a'}, next = {'0x760', '0x764'}
----------------------------------
Block 0x74e
0x753: v753(0x40) = CONST 
0x755: v755 = MLOAD v753(0x40)
0x756: v756 = RETURNDATASIZE 
0x757: v757(0x20) = CONST 
0x75a: v75a = LT v756 v757(0x20)
0x75b: v75b = ISZERO v75a
0x75c: v75c(0x764) = CONST 
0x75f: JUMPI v75c(0x764) v75b
----------------------------------

Begin block 0x760
prev = {'0x74e'}, next = {}
----------------------------------
Block 0x760
0x760: v760(0x0) = CONST 
0x763: REVERT v760(0x0) v760(0x0)
----------------------------------

Begin block 0x764
prev = {'0x74e'}, next = {'0x7de', '0x7d5'}
----------------------------------
Block 0x764
0x766: v766 = ADD v755 v756
0x76a: v76a = MLOAD v755
0x76c: v76c(0x20) = CONST 
0x76e: v76e = ADD v76c(0x20) v755
0x777: v777(0x3) = CONST 
0x779: v779(0x0) = CONST 
0x77c: v77c = SLOAD v777(0x3)
0x77e: v77e(0x100) = CONST 
0x781: v781(0x1) = EXP v77e(0x100) v779(0x0)
0x783: v783 = DIV v77c v781(0x1)
0x784: v784(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x799: v799 = AND v784(0xffffffffffffffffffffffffffffffffffffffff) v783
0x79a: v79a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x7af: v7af = AND v79a(0xffffffffffffffffffffffffffffffffffffffff) v799
0x7b0: v7b0(0x8fc) = CONST 
0x7b6: v7b6 = ISZERO ve84
0x7b7: v7b7 = MUL v7b6 v7b0(0x8fc)
0x7b9: v7b9(0x40) = CONST 
0x7bb: v7bb = MLOAD v7b9(0x40)
0x7bc: v7bc(0x0) = CONST 
0x7be: v7be(0x40) = CONST 
0x7c0: v7c0 = MLOAD v7be(0x40)
0x7c3: v7c3 = SUB v7bb v7c0
0x7c8: v7c8 = CALL v7b7 v7af ve84 v7c0 v7c3 v7c0 v7bc(0x0)
0x7ce: v7ce = ISZERO v7c8
0x7d0: v7d0 = ISZERO v7ce
0x7d1: v7d1(0x7de) = CONST 
0x7d4: JUMPI v7d1(0x7de) v7d0
----------------------------------

Begin block 0x7d5
prev = {'0x764'}, next = {}
----------------------------------
Block 0x7d5
0x7d5: v7d5 = RETURNDATASIZE 
0x7d6: v7d6(0x0) = CONST 
0x7d9: RETURNDATACOPY v7d6(0x0) v7d6(0x0) v7d5
0x7da: v7da = RETURNDATASIZE 
0x7db: v7db(0x0) = CONST 
0x7dd: REVERT v7db(0x0) v7da
----------------------------------

Begin block 0x7de
prev = {'0x764'}, next = {'0x82b'}
----------------------------------
Block 0x7de
0x7e0: v7e0(0x1944290154176f4c0b5d8339910ce66de9f4a57a21c3737bb4b212644c735776) = CONST 
0x803: v803(0x1) = CONST 
0x805: v805 = SLOAD v803(0x1)
0x806: v806(0x40) = CONST 
0x808: v808 = MLOAD v806(0x40)
0x80c: MSTORE v808 ve84
0x80d: v80d(0x20) = CONST 
0x80f: v80f = ADD v80d(0x20) v808
0x812: MSTORE v80f v479
0x813: v813(0x20) = CONST 
0x815: v815 = ADD v813(0x20) v80f
0x818: MSTORE v815 v805
0x819: v819(0x20) = CONST 
0x81b: v81b = ADD v819(0x20) v815
0x821: v821(0x40) = CONST 
0x823: v823 = MLOAD v821(0x40)
0x826: v826 = SUB v81b v823
0x828: LOG1 v823 v826 v7e0(0x1944290154176f4c0b5d8339910ce66de9f4a57a21c3737bb4b212644c735776)
----------------------------------

Begin block 0x82b
prev = {'0x5d9', '0x7de'}, next = {}
----------------------------------
Block 0x82b
0x82e: RETURNPRIVATE v2b0arg0
----------------------------------

Begin block 0x82f
prev = {'0xa7'}, next = {}
----------------------------------
Block 0x82f
0x830: v830(0x0) = CONST 
0x832: MISSING 
----------------------------------

Begin block 0x837
prev = {'0xd2'}, next = {'0xdb'}
----------------------------------
Block 0x837
0x838: v838(0x1) = CONST 
0x83a: v83a = SLOAD v838(0x1)
0x83c: JUMP vd4(0xdb)
----------------------------------

Begin block 0x83d
prev = {'0xfd'}, next = {'0x900', '0x893'}
----------------------------------
Block 0x83d
0x83e: v83e(0x3) = CONST 
0x840: v840(0x0) = CONST 
0x843: v843 = SLOAD v83e(0x3)
0x845: v845(0x100) = CONST 
0x848: v848(0x1) = EXP v845(0x100) v840(0x0)
0x84a: v84a = DIV v843 v848(0x1)
0x84b: v84b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x860: v860 = AND v84b(0xffffffffffffffffffffffffffffffffffffffff) v84a
0x861: v861(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x876: v876 = AND v861(0xffffffffffffffffffffffffffffffffffffffff) v860
0x877: v877 = CALLER 
0x878: v878(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x88d: v88d = AND v878(0xffffffffffffffffffffffffffffffffffffffff) v877
0x88e: v88e = EQ v88d v876
0x88f: v88f(0x900) = CONST 
0x892: JUMPI v88f(0x900) v88e
----------------------------------

Begin block 0x893
prev = {'0x83d'}, next = {}
----------------------------------
Block 0x893
0x893: v893(0x40) = CONST 
0x895: v895 = MLOAD v893(0x40)
0x896: v896(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x8b8: MSTORE v895 v896(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x8b9: v8b9(0x4) = CONST 
0x8bb: v8bb = ADD v8b9(0x4) v895
0x8be: v8be(0x20) = CONST 
0x8c0: v8c0 = ADD v8be(0x20) v8bb
0x8c3: v8c3 = SUB v8c0 v8bb
0x8c5: MSTORE v8bb v8c3
0x8c6: v8c6(0x20) = CONST 
0x8c9: MSTORE v8c0 v8c6(0x20)
0x8ca: v8ca(0x20) = CONST 
0x8cc: v8cc = ADD v8ca(0x20) v8c0
0x8ce: v8ce(0x43616e206f6e6c792062652063616c6c656420627920746865206f776e65722e) = CONST 
0x8f0: MSTORE v8cc v8ce(0x43616e206f6e6c792062652063616c6c656420627920746865206f776e65722e)
0x8f2: v8f2(0x20) = CONST 
0x8f4: v8f4 = ADD v8f2(0x20) v8cc
0x8f8: v8f8(0x40) = CONST 
0x8fa: v8fa = MLOAD v8f8(0x40)
0x8fd: v8fd = SUB v8f4 v8fa
0x8ff: REVERT v8fa v8fd
----------------------------------

Begin block 0x900
prev = {'0x83d'}, next = {'0x9fe', '0x9fa'}
----------------------------------
Block 0x900
0x901: v901(0x0) = CONST 
0x905: v905 = SLOAD v901(0x0)
0x907: v907(0x100) = CONST 
0x90a: v90a(0x1) = EXP v907(0x100) v901(0x0)
0x90c: v90c = DIV v905 v90a(0x1)
0x90d: v90d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x922: v922 = AND v90d(0xffffffffffffffffffffffffffffffffffffffff) v90c
0x923: v923(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x938: v938 = AND v923(0xffffffffffffffffffffffffffffffffffffffff) v922
0x939: v939(0xa9059cbb) = CONST 
0x93e: v93e(0x3) = CONST 
0x940: v940(0x0) = CONST 
0x943: v943 = SLOAD v93e(0x3)
0x945: v945(0x100) = CONST 
0x948: v948(0x1) = EXP v945(0x100) v940(0x0)
0x94a: v94a = DIV v943 v948(0x1)
0x94b: v94b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x960: v960 = AND v94b(0xffffffffffffffffffffffffffffffffffffffff) v94a
0x961: v961(0x0) = CONST 
0x965: v965 = SLOAD v961(0x0)
0x967: v967(0x100) = CONST 
0x96a: v96a(0x1) = EXP v967(0x100) v961(0x0)
0x96c: v96c = DIV v965 v96a(0x1)
0x96d: v96d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x982: v982 = AND v96d(0xffffffffffffffffffffffffffffffffffffffff) v96c
0x983: v983(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x998: v998 = AND v983(0xffffffffffffffffffffffffffffffffffffffff) v982
0x999: v999(0x70a08231) = CONST 
0x99e: v99e = ADDRESS 
0x99f: v99f(0x40) = CONST 
0x9a1: v9a1 = MLOAD v99f(0x40)
0x9a3: v9a3(0xffffffff) = CONST 
0x9a8: v9a8(0x70a08231) = AND v9a3(0xffffffff) v999(0x70a08231)
0x9a9: v9a9(0xe0) = CONST 
0x9ab: v9ab(0x70a0823100000000000000000000000000000000000000000000000000000000) = SHL v9a9(0xe0) v9a8(0x70a08231)
0x9ad: MSTORE v9a1 v9ab(0x70a0823100000000000000000000000000000000000000000000000000000000)
0x9ae: v9ae(0x4) = CONST 
0x9b0: v9b0 = ADD v9ae(0x4) v9a1
0x9b3: v9b3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x9c8: v9c8 = AND v9b3(0xffffffffffffffffffffffffffffffffffffffff) v99e
0x9c9: v9c9(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x9de: v9de = AND v9c9(0xffffffffffffffffffffffffffffffffffffffff) v9c8
0x9e0: MSTORE v9b0 v9de
0x9e1: v9e1(0x20) = CONST 
0x9e3: v9e3 = ADD v9e1(0x20) v9b0
0x9e7: v9e7(0x20) = CONST 
0x9e9: v9e9(0x40) = CONST 
0x9eb: v9eb = MLOAD v9e9(0x40)
0x9ee: v9ee = SUB v9e3 v9eb
0x9f2: v9f2 = EXTCODESIZE v998
0x9f3: v9f3 = ISZERO v9f2
0x9f5: v9f5 = ISZERO v9f3
0x9f6: v9f6(0x9fe) = CONST 
0x9f9: JUMPI v9f6(0x9fe) v9f5
----------------------------------

Begin block 0x9fa
prev = {'0x900'}, next = {}
----------------------------------
Block 0x9fa
0x9fa: v9fa(0x0) = CONST 
0x9fd: REVERT v9fa(0x0) v9fa(0x0)
----------------------------------

Begin block 0x9fe
prev = {'0x900'}, next = {'0xa12', '0xa09'}
----------------------------------
Block 0x9fe
0xa00: va00 = GAS 
0xa01: va01 = STATICCALL va00 v998 v9eb v9ee v9eb v9e7(0x20)
0xa02: va02 = ISZERO va01
0xa04: va04 = ISZERO va02
0xa05: va05(0xa12) = CONST 
0xa08: JUMPI va05(0xa12) va04
----------------------------------

Begin block 0xa09
prev = {'0x9fe'}, next = {}
----------------------------------
Block 0xa09
0xa09: va09 = RETURNDATASIZE 
0xa0a: va0a(0x0) = CONST 
0xa0d: RETURNDATACOPY va0a(0x0) va0a(0x0) va09
0xa0e: va0e = RETURNDATASIZE 
0xa0f: va0f(0x0) = CONST 
0xa11: REVERT va0f(0x0) va0e
----------------------------------

Begin block 0xa12
prev = {'0x9fe'}, next = {'0xa28', '0xa24'}
----------------------------------
Block 0xa12
0xa17: va17(0x40) = CONST 
0xa19: va19 = MLOAD va17(0x40)
0xa1a: va1a = RETURNDATASIZE 
0xa1b: va1b(0x20) = CONST 
0xa1e: va1e = LT va1a va1b(0x20)
0xa1f: va1f = ISZERO va1e
0xa20: va20(0xa28) = CONST 
0xa23: JUMPI va20(0xa28) va1f
----------------------------------

Begin block 0xa24
prev = {'0xa12'}, next = {}
----------------------------------
Block 0xa24
0xa24: va24(0x0) = CONST 
0xa27: REVERT va24(0x0) va24(0x0)
----------------------------------

Begin block 0xa28
prev = {'0xa12'}, next = {'0xaa2', '0xa9e'}
----------------------------------
Block 0xa28
0xa2a: va2a = ADD va19 va1a
0xa2e: va2e = MLOAD va19
0xa30: va30(0x20) = CONST 
0xa32: va32 = ADD va30(0x20) va19
0xa3a: va3a(0x40) = CONST 
0xa3c: va3c = MLOAD va3a(0x40)
0xa3e: va3e(0xffffffff) = CONST 
0xa43: va43 = AND va3e(0xffffffff) v939(0xa9059cbb)
0xa44: va44(0xe0) = CONST 
0xa46: va46 = SHL va44(0xe0) va43
0xa48: MSTORE va3c va46
0xa49: va49(0x4) = CONST 
0xa4b: va4b = ADD va49(0x4) va3c
0xa4e: va4e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xa63: va63 = AND va4e(0xffffffffffffffffffffffffffffffffffffffff) v960
0xa64: va64(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xa79: va79 = AND va64(0xffffffffffffffffffffffffffffffffffffffff) va63
0xa7b: MSTORE va4b va79
0xa7c: va7c(0x20) = CONST 
0xa7e: va7e = ADD va7c(0x20) va4b
0xa81: MSTORE va7e va2e
0xa82: va82(0x20) = CONST 
0xa84: va84 = ADD va82(0x20) va7e
0xa89: va89(0x20) = CONST 
0xa8b: va8b(0x40) = CONST 
0xa8d: va8d = MLOAD va8b(0x40)
0xa90: va90 = SUB va84 va8d
0xa92: va92(0x0) = CONST 
0xa96: va96 = EXTCODESIZE v938
0xa97: va97 = ISZERO va96
0xa99: va99 = ISZERO va97
0xa9a: va9a(0xaa2) = CONST 
0xa9d: JUMPI va9a(0xaa2) va99
----------------------------------

Begin block 0xa9e
prev = {'0xa28'}, next = {}
----------------------------------
Block 0xa9e
0xa9e: va9e(0x0) = CONST 
0xaa1: REVERT va9e(0x0) va9e(0x0)
----------------------------------

Begin block 0xaa2
prev = {'0xa28'}, next = {'0xab6', '0xaad'}
----------------------------------
Block 0xaa2
0xaa4: vaa4 = GAS 
0xaa5: vaa5 = CALL vaa4 v938 va92(0x0) va8d va90 va8d va89(0x20)
0xaa6: vaa6 = ISZERO vaa5
0xaa8: vaa8 = ISZERO vaa6
0xaa9: vaa9(0xab6) = CONST 
0xaac: JUMPI vaa9(0xab6) vaa8
----------------------------------

Begin block 0xaad
prev = {'0xaa2'}, next = {}
----------------------------------
Block 0xaad
0xaad: vaad = RETURNDATASIZE 
0xaae: vaae(0x0) = CONST 
0xab1: RETURNDATACOPY vaae(0x0) vaae(0x0) vaad
0xab2: vab2 = RETURNDATASIZE 
0xab3: vab3(0x0) = CONST 
0xab5: REVERT vab3(0x0) vab2
----------------------------------

Begin block 0xab6
prev = {'0xaa2'}, next = {'0xacc', '0xac8'}
----------------------------------
Block 0xab6
0xabb: vabb(0x40) = CONST 
0xabd: vabd = MLOAD vabb(0x40)
0xabe: vabe = RETURNDATASIZE 
0xabf: vabf(0x20) = CONST 
0xac2: vac2 = LT vabe vabf(0x20)
0xac3: vac3 = ISZERO vac2
0xac4: vac4(0xacc) = CONST 
0xac7: JUMPI vac4(0xacc) vac3
----------------------------------

Begin block 0xac8
prev = {'0xab6'}, next = {}
----------------------------------
Block 0xac8
0xac8: vac8(0x0) = CONST 
0xacb: REVERT vac8(0x0) vac8(0x0)
----------------------------------

Begin block 0xacc
prev = {'0xab6'}, next = {}
----------------------------------
Block 0xacc
0xace: vace = ADD vabd vabe
0xad2: vad2 = MLOAD vabd
0xad4: vad4(0x20) = CONST 
0xad6: vad6 = ADD vad4(0x20) vabd
0xadf: vadf(0x3) = CONST 
0xae1: vae1(0x0) = CONST 
0xae4: vae4 = SLOAD vadf(0x3)
0xae6: vae6(0x100) = CONST 
0xae9: vae9(0x1) = EXP vae6(0x100) vae1(0x0)
0xaeb: vaeb = DIV vae4 vae9(0x1)
0xaec: vaec(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xb01: vb01 = AND vaec(0xffffffffffffffffffffffffffffffffffffffff) vaeb
0xb02: vb02(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xb17: vb17 = AND vb02(0xffffffffffffffffffffffffffffffffffffffff) vb01
0xb18: SELFDESTRUCT vb17
----------------------------------

Begin block 0xb19
prev = {'0x12b'}, next = {'0xb6f', '0xbdc'}
----------------------------------
Block 0xb19
0xb1a: vb1a(0x3) = CONST 
0xb1c: vb1c(0x0) = CONST 
0xb1f: vb1f = SLOAD vb1a(0x3)
0xb21: vb21(0x100) = CONST 
0xb24: vb24(0x1) = EXP vb21(0x100) vb1c(0x0)
0xb26: vb26 = DIV vb1f vb24(0x1)
0xb27: vb27(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xb3c: vb3c = AND vb27(0xffffffffffffffffffffffffffffffffffffffff) vb26
0xb3d: vb3d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xb52: vb52 = AND vb3d(0xffffffffffffffffffffffffffffffffffffffff) vb3c
0xb53: vb53 = CALLER 
0xb54: vb54(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xb69: vb69 = AND vb54(0xffffffffffffffffffffffffffffffffffffffff) vb53
0xb6a: vb6a = EQ vb69 vb52
0xb6b: vb6b(0xbdc) = CONST 
0xb6e: JUMPI vb6b(0xbdc) vb6a
----------------------------------

Begin block 0xb6f
prev = {'0xb19'}, next = {}
----------------------------------
Block 0xb6f
0xb6f: vb6f(0x40) = CONST 
0xb71: vb71 = MLOAD vb6f(0x40)
0xb72: vb72(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xb94: MSTORE vb71 vb72(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xb95: vb95(0x4) = CONST 
0xb97: vb97 = ADD vb95(0x4) vb71
0xb9a: vb9a(0x20) = CONST 
0xb9c: vb9c = ADD vb9a(0x20) vb97
0xb9f: vb9f = SUB vb9c vb97
0xba1: MSTORE vb97 vb9f
0xba2: vba2(0x20) = CONST 
0xba5: MSTORE vb9c vba2(0x20)
0xba6: vba6(0x20) = CONST 
0xba8: vba8 = ADD vba6(0x20) vb9c
0xbaa: vbaa(0x43616e206f6e6c792062652063616c6c656420627920746865206f776e65722e) = CONST 
0xbcc: MSTORE vba8 vbaa(0x43616e206f6e6c792062652063616c6c656420627920746865206f776e65722e)
0xbce: vbce(0x20) = CONST 
0xbd0: vbd0 = ADD vbce(0x20) vba8
0xbd4: vbd4(0x40) = CONST 
0xbd6: vbd6 = MLOAD vbd4(0x40)
0xbd9: vbd9 = SUB vbd0 vbd6
0xbdb: REVERT vbd6 vbd9
----------------------------------

Begin block 0xbdc
prev = {'0xb19'}, next = {'0xc52', '0xbe5'}
----------------------------------
Block 0xbdc
0xbdd: vbdd(0x0) = CONST 
0xbe0: vbe0 = GT v131 vbdd(0x0)
0xbe1: vbe1(0xc52) = CONST 
0xbe4: JUMPI vbe1(0xc52) vbe0
----------------------------------

Begin block 0xbe5
prev = {'0xbdc'}, next = {}
----------------------------------
Block 0xbe5
0xbe5: vbe5(0x40) = CONST 
0xbe7: vbe7 = MLOAD vbe5(0x40)
0xbe8: vbe8(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xc0a: MSTORE vbe7 vbe8(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xc0b: vc0b(0x4) = CONST 
0xc0d: vc0d = ADD vc0b(0x4) vbe7
0xc10: vc10(0x20) = CONST 
0xc12: vc12 = ADD vc10(0x20) vc0d
0xc15: vc15 = SUB vc12 vc0d
0xc17: MSTORE vc0d vc15
0xc18: vc18(0x1e) = CONST 
0xc1b: MSTORE vc12 vc18(0x1e)
0xc1c: vc1c(0x20) = CONST 
0xc1e: vc1e = ADD vc1c(0x20) vc12
0xc20: vc20(0x52617465206d7573742062652067726561746572207468616e207a65726f0000) = CONST 
0xc42: MSTORE vc1e vc20(0x52617465206d7573742062652067726561746572207468616e207a65726f0000)
0xc44: vc44(0x20) = CONST 
0xc46: vc46 = ADD vc44(0x20) vc1e
0xc4a: vc4a(0x40) = CONST 
0xc4c: vc4c = MLOAD vc4a(0x40)
0xc4f: vc4f = SUB vc46 vc4c
0xc51: REVERT vc4c vc4f
----------------------------------

Begin block 0xc52
prev = {'0xbdc'}, next = {'0x14b'}
----------------------------------
Block 0xc52
0xc54: vc54(0x1) = CONST 
0xc58: SSTORE vc54(0x1) v131
0xc5b: vc5b(0x2) = CONST 
0xc5f: SSTORE vc5b(0x2) v13b
0xc61: vc61(0x388f446e9526fe5c9af20a5919b342370c8a7c0cb05245afe1e545658fa3cdba) = CONST 
0xc82: vc82(0x1) = CONST 
0xc84: vc84 = SLOAD vc82(0x1)
0xc85: vc85(0x40) = CONST 
0xc87: vc87 = MLOAD vc85(0x40)
0xc8b: MSTORE vc87 vc84
0xc8c: vc8c(0x20) = CONST 
0xc8e: vc8e = ADD vc8c(0x20) vc87
0xc92: vc92(0x40) = CONST 
0xc94: vc94 = MLOAD vc92(0x40)
0xc97: vc97 = SUB vc8e vc94
0xc99: LOG1 vc94 vc97 vc61(0x388f446e9526fe5c9af20a5919b342370c8a7c0cb05245afe1e545658fa3cdba)
0xc9c: JUMP v116(0x14b)
----------------------------------

Begin block 0xc9d
prev = {'0x159'}, next = {'0x162'}
----------------------------------
Block 0xc9d
0xc9e: vc9e(0x3) = CONST 
0xca0: vca0(0x0) = CONST 
0xca3: vca3 = SLOAD vc9e(0x3)
0xca5: vca5(0x100) = CONST 
0xca8: vca8(0x1) = EXP vca5(0x100) vca0(0x0)
0xcaa: vcaa = DIV vca3 vca8(0x1)
0xcab: vcab(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xcc0: vcc0 = AND vcab(0xffffffffffffffffffffffffffffffffffffffff) vcaa
0xcc2: JUMP v15b(0x162)
----------------------------------

Begin block 0xcc3
prev = {}, next = {}
----------------------------------
function 0xcc3(vcc3arg0)
Block 0xcc3
0xcc4: vcc4(0x0) = CONST 
0xcc6: vcc6 = TIMESTAMP 
0xcc7: vcc7(0x2) = CONST 
0xcc9: vcc9 = SLOAD vcc7(0x2)
0xcca: vcca = GT vcc9 vcc6
0xcce: RETURNPRIVATE vcc3arg0 vcca
----------------------------------

Begin block 0xccf
prev = {'0x1df'}, next = {'0x1e8'}
----------------------------------
Block 0xccf
0xcd0: vcd0(0x2) = CONST 
0xcd2: vcd2 = SLOAD vcd0(0x2)
0xcd4: JUMP v1e1(0x1e8)
----------------------------------

Begin block 0xcd5
prev = {'0x22b'}, next = {'0xd2b', '0xd98'}
----------------------------------
Block 0xcd5
0xcd6: vcd6(0x3) = CONST 
0xcd8: vcd8(0x0) = CONST 
0xcdb: vcdb = SLOAD vcd6(0x3)
0xcdd: vcdd(0x100) = CONST 
0xce0: vce0(0x1) = EXP vcdd(0x100) vcd8(0x0)
0xce2: vce2 = DIV vcdb vce0(0x1)
0xce3: vce3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xcf8: vcf8 = AND vce3(0xffffffffffffffffffffffffffffffffffffffff) vce2
0xcf9: vcf9(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xd0e: vd0e = AND vcf9(0xffffffffffffffffffffffffffffffffffffffff) vcf8
0xd0f: vd0f = CALLER 
0xd10: vd10(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xd25: vd25 = AND vd10(0xffffffffffffffffffffffffffffffffffffffff) vd0f
0xd26: vd26 = EQ vd25 vd0e
0xd27: vd27(0xd98) = CONST 
0xd2a: JUMPI vd27(0xd98) vd26
----------------------------------

Begin block 0xd2b
prev = {'0xcd5'}, next = {}
----------------------------------
Block 0xd2b
0xd2b: vd2b(0x40) = CONST 
0xd2d: vd2d = MLOAD vd2b(0x40)
0xd2e: vd2e(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xd50: MSTORE vd2d vd2e(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xd51: vd51(0x4) = CONST 
0xd53: vd53 = ADD vd51(0x4) vd2d
0xd56: vd56(0x20) = CONST 
0xd58: vd58 = ADD vd56(0x20) vd53
0xd5b: vd5b = SUB vd58 vd53
0xd5d: MSTORE vd53 vd5b
0xd5e: vd5e(0x20) = CONST 
0xd61: MSTORE vd58 vd5e(0x20)
0xd62: vd62(0x20) = CONST 
0xd64: vd64 = ADD vd62(0x20) vd58
0xd66: vd66(0x43616e206f6e6c792062652063616c6c656420627920746865206f776e65722e) = CONST 
0xd88: MSTORE vd64 vd66(0x43616e206f6e6c792062652063616c6c656420627920746865206f776e65722e)
0xd8a: vd8a(0x20) = CONST 
0xd8c: vd8c = ADD vd8a(0x20) vd64
0xd90: vd90(0x40) = CONST 
0xd92: vd92 = MLOAD vd90(0x40)
0xd95: vd95 = SUB vd8c vd92
0xd97: REVERT vd92 vd95
----------------------------------

Begin block 0xd98
prev = {'0xcd5'}, next = {'0x257'}
----------------------------------
Block 0xd98
0xd9a: vd9a(0x3) = CONST 
0xd9c: vd9c(0x0) = CONST 
0xd9e: vd9e(0x100) = CONST 
0xda1: vda1(0x1) = EXP vd9e(0x100) vd9c(0x0)
0xda3: vda3 = SLOAD vd9a(0x3)
0xda5: vda5(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xdba: vdba(0xffffffffffffffffffffffffffffffffffffffff) = MUL vda5(0xffffffffffffffffffffffffffffffffffffffff) vda1(0x1)
0xdbb: vdbb(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vdba(0xffffffffffffffffffffffffffffffffffffffff)
0xdbc: vdbc = AND vdbb(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) vda3
0xdbf: vdbf(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xdd4: vdd4 = AND vdbf(0xffffffffffffffffffffffffffffffffffffffff) v247
0xdd5: vdd5 = MUL vdd4 vda1(0x1)
0xdd6: vdd6 = OR vdd5 vdbc
0xdd8: SSTORE vd9a(0x3) vdd6
0xddb: JUMP v216(0x257)
----------------------------------

Begin block 0xddc
prev = {'0x265'}, next = {'0x26e'}
----------------------------------
Block 0xddc
0xddd: vddd(0x0) = CONST 
0xde1: vde1 = SLOAD vddd(0x0)
0xde3: vde3(0x100) = CONST 
0xde6: vde6(0x1) = EXP vde3(0x100) vddd(0x0)
0xde8: vde8 = DIV vde1 vde6(0x1)
0xde9: vde9(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xdfe: vdfe = AND vde9(0xffffffffffffffffffffffffffffffffffffffff) vde8
0xe00: JUMP v267(0x26e)
----------------------------------

Begin block 0xe01
prev = {'0x628'}, next = {'0xe0b', '0xe78'}
----------------------------------
Block 0xe01
0xe02: ve02(0x0) = CONST 
0xe06: ve06 = GT v633 ve02(0x0)
0xe07: ve07(0xe78) = CONST 
0xe0a: JUMPI ve07(0xe78) ve06
----------------------------------

Begin block 0xe0b
prev = {'0xe01'}, next = {}
----------------------------------
Block 0xe0b
0xe0b: ve0b(0x40) = CONST 
0xe0d: ve0d = MLOAD ve0b(0x40)
0xe0e: ve0e(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xe30: MSTORE ve0d ve0e(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xe31: ve31(0x4) = CONST 
0xe33: ve33 = ADD ve31(0x4) ve0d
0xe36: ve36(0x20) = CONST 
0xe38: ve38 = ADD ve36(0x20) ve33
0xe3b: ve3b = SUB ve38 ve33
0xe3d: MSTORE ve33 ve3b
0xe3e: ve3e(0x1a) = CONST 
0xe41: MSTORE ve38 ve3e(0x1a)
0xe42: ve42(0x20) = CONST 
0xe44: ve44 = ADD ve42(0x20) ve38
0xe46: ve46(0x536166654d6174683a206469766973696f6e206279207a65726f000000000000) = CONST 
0xe68: MSTORE ve44 ve46(0x536166654d6174683a206469766973696f6e206279207a65726f000000000000)
0xe6a: ve6a(0x20) = CONST 
0xe6c: ve6c = ADD ve6a(0x20) ve44
0xe70: ve70(0x40) = CONST 
0xe72: ve72 = MLOAD ve70(0x40)
0xe75: ve75 = SUB ve6c ve72
0xe77: REVERT ve72 ve75
----------------------------------

Begin block 0xe78
prev = {'0xe01'}, next = {'0xe82', '0xe83'}
----------------------------------
Block 0xe78
0xe79: ve79(0x0) = CONST 
0xe7e: ve7e(0xe83) = CONST 
0xe81: JUMPI ve7e(0xe83) v633
----------------------------------

Begin block 0xe82
prev = {'0xe78'}, next = {}
----------------------------------
Block 0xe82
0xe82: THROW 
----------------------------------

Begin block 0xe83
prev = {'0xe78'}, next = {'0x642'}
----------------------------------
Block 0xe83
0xe84: ve84 = DIV v479 v633
0xe8f: JUMP v62e(0x642)
----------------------------------

Begin block 0xedb
prev = {'0x0', '0x86'}, next = {'0x910x0'}
----------------------------------
Block 0xedb
0xedc: vedc(0x91) = CONST 
0xedd: CALLPRIVATE vedc(0x91)
----------------------------------

Begin block 0xede
prev = {'0x59'}, next = {}
----------------------------------
Block 0xede
0xedf: vedf(0x9b) = CONST 
0xee0: CALLPRIVATE vedf(0x9b)
----------------------------------

Begin block 0xee1
prev = {'0x65'}, next = {}
----------------------------------
Block 0xee1
0xee2: vee2(0xc6) = CONST 
0xee3: CALLPRIVATE vee2(0xc6)
----------------------------------

Begin block 0xee4
prev = {'0x70'}, next = {}
----------------------------------
Block 0xee4
0xee5: vee5(0xf1) = CONST 
0xee6: CALLPRIVATE vee5(0xf1)
----------------------------------

Begin block 0xee7
prev = {'0x7b'}, next = {}
----------------------------------
Block 0xee7
0xee8: vee8(0x108) = CONST 
0xee9: CALLPRIVATE vee8(0x108)
----------------------------------

Begin block 0xeea
prev = {'0x86'}, next = {}
----------------------------------
Block 0xeea
0xeeb: veeb(0x14d) = CONST 
0xeec: CALLPRIVATE veeb(0x14d)
----------------------------------

Begin block 0xeed
prev = {'0x1e'}, next = {}
----------------------------------
Block 0xeed
0xeee: veee(0x1a4) = CONST 
0xeef: CALLPRIVATE veee(0x1a4)
----------------------------------

Begin block 0xef0
prev = {'0x29'}, next = {}
----------------------------------
Block 0xef0
0xef1: vef1(0x1d3) = CONST 
0xef2: CALLPRIVATE vef1(0x1d3)
----------------------------------

Begin block 0xef3
prev = {'0x34'}, next = {}
----------------------------------
Block 0xef3
0xef4: vef4(0x1fe) = CONST 
0xef5: CALLPRIVATE vef4(0x1fe)
----------------------------------

Begin block 0xef6
prev = {'0x3f'}, next = {}
----------------------------------
Block 0xef6
0xef7: vef7(0x208) = CONST 
0xef8: CALLPRIVATE vef7(0x208)
----------------------------------

Begin block 0xef9
prev = {'0x4a'}, next = {}
----------------------------------
Block 0xef9
0xefa: vefa(0x259) = CONST 
0xefb: CALLPRIVATE vefa(0x259)
----------------------------------
