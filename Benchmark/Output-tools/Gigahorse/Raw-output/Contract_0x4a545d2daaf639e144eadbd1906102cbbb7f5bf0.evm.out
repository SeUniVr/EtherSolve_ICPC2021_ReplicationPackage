
Begin block 0x0
prev = {}, next = {'0x5e6', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x5ca: v5ca(0x5e6) = CONST 
0x5cb: JUMPI v5ca(0x5e6) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x40', '0x5e9'}
----------------------------------
Block 0xd
0xd: vd(0xffffffff) = CONST 
0x12: v12(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x30: v30(0x0) = CONST 
0x32: v32 = CALLDATALOAD v30(0x0)
0x33: v33 = DIV v32 v12(0x100000000000000000000000000000000000000000000000000000000)
0x34: v34 = AND v33 vd(0xffffffff)
0x35: v35(0x6fdde03) = CONST 
0x3b: v3b = EQ v34 v35(0x6fdde03)
0x5cc: v5cc(0x5e9) = CONST 
0x5cd: JUMPI v5cc(0x5e9) v3b
----------------------------------

Begin block 0x40
prev = {'0xd'}, next = {'0x5ec', '0x4b'}
----------------------------------
Block 0x40
0x41: v41(0x95ea7b3) = CONST 
0x46: v46 = EQ v41(0x95ea7b3) v34
0x5ce: v5ce(0x5ec) = CONST 
0x5cf: JUMPI v5ce(0x5ec) v46
----------------------------------

Begin block 0x4b
prev = {'0x40'}, next = {'0x56', '0x5ef'}
----------------------------------
Block 0x4b
0x4c: v4c(0x18160ddd) = CONST 
0x51: v51 = EQ v4c(0x18160ddd) v34
0x5d0: v5d0(0x5ef) = CONST 
0x5d1: JUMPI v5d0(0x5ef) v51
----------------------------------

Begin block 0x56
prev = {'0x4b'}, next = {'0x61', '0x5f2'}
----------------------------------
Block 0x56
0x57: v57(0x23b872dd) = CONST 
0x5c: v5c = EQ v57(0x23b872dd) v34
0x5d2: v5d2(0x5f2) = CONST 
0x5d3: JUMPI v5d2(0x5f2) v5c
----------------------------------

Begin block 0x61
prev = {'0x56'}, next = {'0x5f5', '0x6c'}
----------------------------------
Block 0x61
0x62: v62(0x313ce567) = CONST 
0x67: v67 = EQ v62(0x313ce567) v34
0x5d4: v5d4(0x5f5) = CONST 
0x5d5: JUMPI v5d4(0x5f5) v67
----------------------------------

Begin block 0x6c
prev = {'0x61'}, next = {'0x77', '0x5f8'}
----------------------------------
Block 0x6c
0x6d: v6d(0x5d354b4d) = CONST 
0x72: v72 = EQ v6d(0x5d354b4d) v34
0x5d6: v5d6(0x5f8) = CONST 
0x5d7: JUMPI v5d6(0x5f8) v72
----------------------------------

Begin block 0x77
prev = {'0x6c'}, next = {'0x82', '0x5fb'}
----------------------------------
Block 0x77
0x78: v78(0x70a08231) = CONST 
0x7d: v7d = EQ v78(0x70a08231) v34
0x5d8: v5d8(0x5fb) = CONST 
0x5d9: JUMPI v5d8(0x5fb) v7d
----------------------------------

Begin block 0x82
prev = {'0x77'}, next = {'0x8d', '0x5fe'}
----------------------------------
Block 0x82
0x83: v83(0x86d1a69f) = CONST 
0x88: v88 = EQ v83(0x86d1a69f) v34
0x5da: v5da(0x5fe) = CONST 
0x5db: JUMPI v5da(0x5fe) v88
----------------------------------

Begin block 0x8d
prev = {'0x82'}, next = {'0x98', '0x601'}
----------------------------------
Block 0x8d
0x8e: v8e(0x95d89b41) = CONST 
0x93: v93 = EQ v8e(0x95d89b41) v34
0x5dc: v5dc(0x601) = CONST 
0x5dd: JUMPI v5dc(0x601) v93
----------------------------------

Begin block 0x98
prev = {'0x8d'}, next = {'0x604', '0xa3'}
----------------------------------
Block 0x98
0x99: v99(0xa9059cbb) = CONST 
0x9e: v9e = EQ v99(0xa9059cbb) v34
0x5de: v5de(0x604) = CONST 
0x5df: JUMPI v5de(0x604) v9e
----------------------------------

Begin block 0xa3
prev = {'0x98'}, next = {'0xae', '0x607'}
----------------------------------
Block 0xa3
0xa4: va4(0xdd4dfb62) = CONST 
0xa9: va9 = EQ va4(0xdd4dfb62) v34
0x5e0: v5e0(0x607) = CONST 
0x5e1: JUMPI v5e0(0x607) va9
----------------------------------

Begin block 0xae
prev = {'0xa3'}, next = {'0xb9', '0x60a'}
----------------------------------
Block 0xae
0xaf: vaf(0xdd62ed3e) = CONST 
0xb4: vb4 = EQ vaf(0xdd62ed3e) v34
0x5e2: v5e2(0x60a) = CONST 
0x5e3: JUMPI v5e2(0x60a) vb4
----------------------------------

Begin block 0xb9
prev = {'0xae'}, next = {'0x60d', '0x5e6'}
----------------------------------
Block 0xb9
0xba: vba(0xe93c980d) = CONST 
0xbf: vbf = EQ vba(0xe93c980d) v34
0x5e4: v5e4(0x60d) = CONST 
0x5e5: JUMPI v5e4(0x60d) vbf
----------------------------------

Begin block 0xc4
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0xc4
0xc5: vc5(0x0) = CONST 
0xc8: REVERT vc5(0x0) vc5(0x0)
----------------------------------

Begin block 0xc9
prev = {}, next = {'0xd1', '0xd5'}
----------------------------------
function name()()
Block 0xc9
0xca: vca = CALLVALUE 
0xcc: vcc = ISZERO vca
0xcd: vcd(0xd5) = CONST 
0xd0: JUMPI vcd(0xd5) vcc
----------------------------------

Begin block 0xd1
prev = {'0xc9'}, next = {}
----------------------------------
Block 0xd1
0xd1: vd1(0x0) = CONST 
0xd4: REVERT vd1(0x0) vd1(0x0)
----------------------------------

Begin block 0xd5
prev = {'0xc9'}, next = {'0xde0xc9'}
----------------------------------
Block 0xd5
0xd7: vd7(0xde) = CONST 
0xda: vda(0x2de) = CONST 
0xdd: vdd_0, vdd_1 = CALLPRIVATE vda(0x2de) vd7(0xde)
----------------------------------

Begin block 0xde0xc9
prev = {'0xd5'}, next = {'0x1000xc9'}
----------------------------------
Block 0xde0xc9
0xdf0xc9: vc9df(0x40) = CONST 
0xe20xc9: vc9e2 = MLOAD vc9df(0x40)
0xe30xc9: vc9e3(0x20) = CONST 
0xe70xc9: MSTORE vc9e2 vc9e3(0x20)
0xe90xc9: vc9e9 = MLOAD vdd_0
0xec0xc9: vc9ec = ADD vc9e2 vc9e3(0x20)
0xed0xc9: MSTORE vc9ec vc9e9
0xef0xc9: vc9ef = MLOAD vdd_0
0xf60xc9: vc9f6 = ADD vc9e2 vc9df(0x40)
0xf90xc9: vc9f9 = ADD vdd_0 vc9e3(0x20)
0xfe0xc9: vc9fe(0x0) = CONST 
----------------------------------

Begin block 0xde0x252
prev = {'0x25e'}, next = {'0x1000x252'}
----------------------------------
Block 0xde0x252
0xdf0x252: v252df(0x40) = CONST 
0xe20x252: v252e2 = MLOAD v252df(0x40)
0xe30x252: v252e3(0x20) = CONST 
0xe70x252: MSTORE v252e2 v252e3(0x20)
0xe90x252: v252e9 = MLOAD v266_0
0xec0x252: v252ec = ADD v252e2 v252e3(0x20)
0xed0x252: MSTORE v252ec v252e9
0xef0x252: v252ef = MLOAD v266_0
0xf60x252: v252f6 = ADD v252e2 v252df(0x40)
0xf90x252: v252f9 = ADD v266_0 v252e3(0x20)
0xfe0x252: v252fe(0x0) = CONST 
----------------------------------

Begin block 0x1000xc9
prev = {'0xde0xc9', '0x1090xc9'}, next = {'0x1180xc9', '0x1090xc9'}
----------------------------------
Block 0x1000xc9
0x1000xc9_0x0: v100c9_0 = PHI vc9fe(0x0) vc9113
0x1030xc9: vc9103 = LT v100c9_0 vc9ef
0x1040xc9: vc9104 = ISZERO vc9103
0x1050xc9: vc9105(0x118) = CONST 
0x1080xc9: JUMPI vc9105(0x118) vc9104
----------------------------------

Begin block 0x1000x252
prev = {'0x1090x252', '0xde0x252'}, next = {'0x1180x252', '0x1090x252'}
----------------------------------
Block 0x1000x252
0x1000x252_0x0: v100252_0 = PHI v252fe(0x0) v252113
0x1030x252: v252103 = LT v100252_0 v252ef
0x1040x252: v252104 = ISZERO v252103
0x1050x252: v252105(0x118) = CONST 
0x1080x252: JUMPI v252105(0x118) v252104
----------------------------------

Begin block 0x1090xc9
prev = {'0x1000xc9'}, next = {'0x1000xc9'}
----------------------------------
Block 0x1090xc9
0x1090xc9_0x0: v109c9_0 = PHI vc9fe(0x0) vc9113
0x10b0xc9: vc910b = ADD v109c9_0 vc9f9
0x10c0xc9: vc910c = MLOAD vc910b
0x10f0xc9: vc910f = ADD v109c9_0 vc9f6
0x1100xc9: MSTORE vc910f vc910c
0x1110xc9: vc9111(0x20) = CONST 
0x1130xc9: vc9113 = ADD vc9111(0x20) v109c9_0
0x1140xc9: vc9114(0x100) = CONST 
0x1170xc9: JUMP vc9114(0x100)
----------------------------------

Begin block 0x1090x252
prev = {'0x1000x252'}, next = {'0x1000x252'}
----------------------------------
Block 0x1090x252
0x1090x252_0x0: v109252_0 = PHI v252fe(0x0) v252113
0x10b0x252: v25210b = ADD v109252_0 v252f9
0x10c0x252: v25210c = MLOAD v25210b
0x10f0x252: v25210f = ADD v109252_0 v252f6
0x1100x252: MSTORE v25210f v25210c
0x1110x252: v252111(0x20) = CONST 
0x1130x252: v252113 = ADD v252111(0x20) v109252_0
0x1140x252: v252114(0x100) = CONST 
0x1170x252: JUMP v252114(0x100)
----------------------------------

Begin block 0x1180xc9
prev = {'0x1000xc9'}, next = {'0x12c0xc9', '0x1450xc9'}
----------------------------------
Block 0x1180xc9
0x1210xc9: vc9121 = ADD vc9ef vc9f6
0x1230xc9: vc9123(0x1f) = CONST 
0x1250xc9: vc9125 = AND vc9123(0x1f) vc9ef
0x1270xc9: vc9127 = ISZERO vc9125
0x1280xc9: vc9128(0x145) = CONST 
0x12b0xc9: JUMPI vc9128(0x145) vc9127
----------------------------------

Begin block 0x1180x252
prev = {'0x1000x252'}, next = {'0x12c0x252', '0x1450x252'}
----------------------------------
Block 0x1180x252
0x1210x252: v252121 = ADD v252ef v252f6
0x1230x252: v252123(0x1f) = CONST 
0x1250x252: v252125 = AND v252123(0x1f) v252ef
0x1270x252: v252127 = ISZERO v252125
0x1280x252: v252128(0x145) = CONST 
0x12b0x252: JUMPI v252128(0x145) v252127
----------------------------------

Begin block 0x12c0xc9
prev = {'0x1180xc9'}, next = {'0x1450xc9'}
----------------------------------
Block 0x12c0xc9
0x12e0xc9: vc912e = SUB vc9121 vc9125
0x1300xc9: vc9130 = MLOAD vc912e
0x1310xc9: vc9131(0x1) = CONST 
0x1340xc9: vc9134(0x20) = CONST 
0x1360xc9: vc9136 = SUB vc9134(0x20) vc9125
0x1370xc9: vc9137(0x100) = CONST 
0x13a0xc9: vc913a = EXP vc9137(0x100) vc9136
0x13b0xc9: vc913b = SUB vc913a vc9131(0x1)
0x13c0xc9: vc913c = NOT vc913b
0x13d0xc9: vc913d = AND vc913c vc9130
0x13f0xc9: MSTORE vc912e vc913d
0x1400xc9: vc9140(0x20) = CONST 
0x1420xc9: vc9142 = ADD vc9140(0x20) vc912e
----------------------------------

Begin block 0x12c0x252
prev = {'0x1180x252'}, next = {'0x1450x252'}
----------------------------------
Block 0x12c0x252
0x12e0x252: v25212e = SUB v252121 v252125
0x1300x252: v252130 = MLOAD v25212e
0x1310x252: v252131(0x1) = CONST 
0x1340x252: v252134(0x20) = CONST 
0x1360x252: v252136 = SUB v252134(0x20) v252125
0x1370x252: v252137(0x100) = CONST 
0x13a0x252: v25213a = EXP v252137(0x100) v252136
0x13b0x252: v25213b = SUB v25213a v252131(0x1)
0x13c0x252: v25213c = NOT v25213b
0x13d0x252: v25213d = AND v25213c v252130
0x13f0x252: MSTORE v25212e v25213d
0x1400x252: v252140(0x20) = CONST 
0x1420x252: v252142 = ADD v252140(0x20) v25212e
----------------------------------

Begin block 0x1450xc9
prev = {'0x1180xc9', '0x12c0xc9'}, next = {}
----------------------------------
Block 0x1450xc9
0x1450xc9_0x1: v145c9_1 = PHI vc9121 vc9142
0x14b0xc9: vc914b(0x40) = CONST 
0x14d0xc9: vc914d = MLOAD vc914b(0x40)
0x1500xc9: vc9150 = SUB v145c9_1 vc914d
0x1520xc9: RETURN vc914d vc9150
----------------------------------

Begin block 0x1450x252
prev = {'0x1180x252', '0x12c0x252'}, next = {}
----------------------------------
Block 0x1450x252
0x1450x252_0x1: v145252_1 = PHI v252121 v252142
0x14b0x252: v25214b(0x40) = CONST 
0x14d0x252: v25214d = MLOAD v25214b(0x40)
0x1500x252: v252150 = SUB v145252_1 v25214d
0x1520x252: RETURN v25214d v252150
----------------------------------

Begin block 0x153
prev = {}, next = {'0x15b', '0x15f'}
----------------------------------
function approve(address,uint256)()
Block 0x153
0x154: v154 = CALLVALUE 
0x156: v156 = ISZERO v154
0x157: v157(0x15f) = CONST 
0x15a: JUMPI v157(0x15f) v156
----------------------------------

Begin block 0x15b
prev = {'0x153'}, next = {}
----------------------------------
Block 0x15b
0x15b: v15b(0x0) = CONST 
0x15e: REVERT v15b(0x0) v15b(0x0)
----------------------------------

Begin block 0x15f
prev = {'0x153'}, next = {'0x36c'}
----------------------------------
Block 0x15f
0x161: v161(0x177) = CONST 
0x164: v164(0x1) = CONST 
0x166: v166(0xa0) = CONST 
0x168: v168(0x2) = CONST 
0x16a: v16a(0x10000000000000000000000000000000000000000) = EXP v168(0x2) v166(0xa0)
0x16b: v16b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v16a(0x10000000000000000000000000000000000000000) v164(0x1)
0x16c: v16c(0x4) = CONST 
0x16e: v16e = CALLDATALOAD v16c(0x4)
0x16f: v16f = AND v16e v16b(0xffffffffffffffffffffffffffffffffffffffff)
0x170: v170(0x24) = CONST 
0x172: v172 = CALLDATALOAD v170(0x24)
0x173: v173(0x36c) = CONST 
0x176: JUMP v173(0x36c)
----------------------------------

Begin block 0x1770x153
prev = {'0x36c'}, next = {}
----------------------------------
Block 0x1770x153
0x1780x153: v153178(0x40) = CONST 
0x17b0x153: v15317b = MLOAD v153178(0x40)
0x17d0x153: v15317d = ISZERO v395(0x1)
0x17e0x153: v15317e = ISZERO v15317d
0x1800x153: MSTORE v15317b v15317e
0x1810x153: v153181 = MLOAD v153178(0x40)
0x1850x153: v153185 = SUB v15317b v153181
0x1860x153: v153186(0x20) = CONST 
0x1880x153: v153188 = ADD v153186(0x20) v153185
0x18a0x153: RETURN v153181 v153188
----------------------------------

Begin block 0x1770x1b2
prev = {'0x40f'}, next = {}
----------------------------------
Block 0x1770x1b2
0x1780x1b2: v1b2178(0x40) = CONST 
0x17b0x1b2: v1b217b = MLOAD v1b2178(0x40)
0x17d0x1b2: v1b217d = ISZERO v411(0x1)
0x17e0x1b2: v1b217e = ISZERO v1b217d
0x1800x1b2: MSTORE v1b217b v1b217e
0x1810x1b2: v1b2181 = MLOAD v1b2178(0x40)
0x1850x1b2: v1b2185 = SUB v1b217b v1b2181
0x1860x1b2: v1b2186(0x20) = CONST 
0x1880x1b2: v1b2188 = ADD v1b2186(0x20) v1b2185
0x18a0x1b2: RETURN v1b2181 v1b2188
----------------------------------

Begin block 0x18b
prev = {}, next = {'0x193', '0x197'}
----------------------------------
function totalSupply()()
Block 0x18b
0x18c: v18c = CALLVALUE 
0x18e: v18e = ISZERO v18c
0x18f: v18f(0x197) = CONST 
0x192: JUMPI v18f(0x197) v18e
----------------------------------

Begin block 0x193
prev = {'0x18b'}, next = {}
----------------------------------
Block 0x193
0x193: v193(0x0) = CONST 
0x196: REVERT v193(0x0) v193(0x0)
----------------------------------

Begin block 0x197
prev = {'0x18b'}, next = {'0x39c'}
----------------------------------
Block 0x197
0x199: v199(0x1a0) = CONST 
0x19c: v19c(0x39c) = CONST 
0x19f: JUMP v19c(0x39c)
----------------------------------

Begin block 0x1a00x18b
prev = {'0x39c'}, next = {}
----------------------------------
Block 0x1a00x18b
0x1a10x18b: v18b1a1(0x40) = CONST 
0x1a40x18b: v18b1a4 = MLOAD v18b1a1(0x40)
0x1a70x18b: MSTORE v18b1a4 v39f
0x1a80x18b: v18b1a8 = MLOAD v18b1a1(0x40)
0x1ac0x18b: v18b1ac = SUB v18b1a4 v18b1a8
0x1ad0x18b: v18b1ad(0x20) = CONST 
0x1af0x18b: v18b1af = ADD v18b1ad(0x20) v18b1ac
0x1b10x18b: RETURN v18b1a8 v18b1af
----------------------------------

Begin block 0x1a00x207
prev = {'0x422'}, next = {}
----------------------------------
Block 0x1a00x207
0x1a10x207: v2071a1(0x40) = CONST 
0x1a40x207: v2071a4 = MLOAD v2071a1(0x40)
0x1a70x207: MSTORE v2071a4 v425
0x1a80x207: v2071a8 = MLOAD v2071a1(0x40)
0x1ac0x207: v2071ac = SUB v2071a4 v2071a8
0x1ad0x207: v2071ad(0x20) = CONST 
0x1af0x207: v2071af = ADD v2071ad(0x20) v2071ac
0x1b10x207: RETURN v2071a8 v2071af
----------------------------------

Begin block 0x1a00x21c
prev = {'0x428'}, next = {}
----------------------------------
Block 0x1a00x21c
0x1a10x21c: v21c1a1(0x40) = CONST 
0x1a40x21c: v21c1a4 = MLOAD v21c1a1(0x40)
0x1a70x21c: MSTORE v21c1a4 v437
0x1a80x21c: v21c1a8 = MLOAD v21c1a1(0x40)
0x1ac0x21c: v21c1ac = SUB v21c1a4 v21c1a8
0x1ad0x21c: v21c1ad(0x20) = CONST 
0x1af0x21c: v21c1af = ADD v21c1ad(0x20) v21c1ac
0x1b10x21c: RETURN v21c1a8 v21c1af
----------------------------------

Begin block 0x1a00x23d
prev = {'0x43a'}, next = {}
----------------------------------
Block 0x1a00x23d
0x1a10x23d: v23d1a1(0x40) = CONST 
0x1a40x23d: v23d1a4 = MLOAD v23d1a1(0x40)
0x1a70x23d: MSTORE v23d1a4 v43d
0x1a80x23d: v23d1a8 = MLOAD v23d1a1(0x40)
0x1ac0x23d: v23d1ac = SUB v23d1a4 v23d1a8
0x1ad0x23d: v23d1ad(0x20) = CONST 
0x1af0x23d: v23d1af = ADD v23d1ad(0x20) v23d1ac
0x1b10x23d: RETURN v23d1a8 v23d1af
----------------------------------

Begin block 0x1a00x28d
prev = {'0x4a9'}, next = {}
----------------------------------
Block 0x1a00x28d
0x1a10x28d: v28d1a1(0x40) = CONST 
0x1a40x28d: v28d1a4 = MLOAD v28d1a1(0x40)
0x1a70x28d: MSTORE v28d1a4 v4ac
0x1a80x28d: v28d1a8 = MLOAD v28d1a1(0x40)
0x1ac0x28d: v28d1ac = SUB v28d1a4 v28d1a8
0x1ad0x28d: v28d1ad(0x20) = CONST 
0x1af0x28d: v28d1af = ADD v28d1ad(0x20) v28d1ac
0x1b10x28d: RETURN v28d1a8 v28d1af
----------------------------------

Begin block 0x1a00x2a2
prev = {'0x4af'}, next = {}
----------------------------------
Block 0x1a00x2a2
0x1a10x2a2: v2a21a1(0x40) = CONST 
0x1a40x2a2: v2a21a4 = MLOAD v2a21a1(0x40)
0x1a70x2a2: MSTORE v2a21a4 v4c9
0x1a80x2a2: v2a21a8 = MLOAD v2a21a1(0x40)
0x1ac0x2a2: v2a21ac = SUB v2a21a4 v2a21a8
0x1ad0x2a2: v2a21ad(0x20) = CONST 
0x1af0x2a2: v2a21af = ADD v2a21ad(0x20) v2a21ac
0x1b10x2a2: RETURN v2a21a8 v2a21af
----------------------------------

Begin block 0x1a00x2c9
prev = {'0x4cc'}, next = {}
----------------------------------
Block 0x1a00x2c9
0x1a10x2c9: v2c91a1(0x40) = CONST 
0x1a40x2c9: v2c91a4 = MLOAD v2c91a1(0x40)
0x1a70x2c9: MSTORE v2c91a4 v4cf
0x1a80x2c9: v2c91a8 = MLOAD v2c91a1(0x40)
0x1ac0x2c9: v2c91ac = SUB v2c91a4 v2c91a8
0x1ad0x2c9: v2c91ad(0x20) = CONST 
0x1af0x2c9: v2c91af = ADD v2c91ad(0x20) v2c91ac
0x1b10x2c9: RETURN v2c91a8 v2c91af
----------------------------------

Begin block 0x1b2
prev = {}, next = {'0x1be', '0x1ba'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x1b2
0x1b3: v1b3 = CALLVALUE 
0x1b5: v1b5 = ISZERO v1b3
0x1b6: v1b6(0x1be) = CONST 
0x1b9: JUMPI v1b6(0x1be) v1b5
----------------------------------

Begin block 0x1ba
prev = {'0x1b2'}, next = {}
----------------------------------
Block 0x1ba
0x1ba: v1ba(0x0) = CONST 
0x1bd: REVERT v1ba(0x0) v1ba(0x0)
----------------------------------

Begin block 0x1be
prev = {'0x1b2'}, next = {'0x3a2'}
----------------------------------
Block 0x1be
0x1c0: v1c0(0x177) = CONST 
0x1c3: v1c3(0x1) = CONST 
0x1c5: v1c5(0xa0) = CONST 
0x1c7: v1c7(0x2) = CONST 
0x1c9: v1c9(0x10000000000000000000000000000000000000000) = EXP v1c7(0x2) v1c5(0xa0)
0x1ca: v1ca(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1c9(0x10000000000000000000000000000000000000000) v1c3(0x1)
0x1cb: v1cb(0x4) = CONST 
0x1cd: v1cd = CALLDATALOAD v1cb(0x4)
0x1cf: v1cf = AND v1ca(0xffffffffffffffffffffffffffffffffffffffff) v1cd
0x1d1: v1d1(0x24) = CONST 
0x1d3: v1d3 = CALLDATALOAD v1d1(0x24)
0x1d4: v1d4 = AND v1d3 v1ca(0xffffffffffffffffffffffffffffffffffffffff)
0x1d5: v1d5(0x44) = CONST 
0x1d7: v1d7 = CALLDATALOAD v1d5(0x44)
0x1d8: v1d8(0x3a2) = CONST 
0x1db: JUMP v1d8(0x3a2)
----------------------------------

Begin block 0x1dc
prev = {}, next = {'0x1e4', '0x1e8'}
----------------------------------
function decimals()()
Block 0x1dc
0x1dd: v1dd = CALLVALUE 
0x1df: v1df = ISZERO v1dd
0x1e0: v1e0(0x1e8) = CONST 
0x1e3: JUMPI v1e0(0x1e8) v1df
----------------------------------

Begin block 0x1e4
prev = {'0x1dc'}, next = {}
----------------------------------
Block 0x1e4
0x1e4: v1e4(0x0) = CONST 
0x1e7: REVERT v1e4(0x0) v1e4(0x0)
----------------------------------

Begin block 0x1e8
prev = {'0x1dc'}, next = {'0x419'}
----------------------------------
Block 0x1e8
0x1ea: v1ea(0x1f1) = CONST 
0x1ed: v1ed(0x419) = CONST 
0x1f0: JUMP v1ed(0x419)
----------------------------------

Begin block 0x1f1
prev = {'0x419'}, next = {}
----------------------------------
Block 0x1f1
0x1f2: v1f2(0x40) = CONST 
0x1f5: v1f5 = MLOAD v1f2(0x40)
0x1f6: v1f6(0xff) = CONST 
0x1fa: v1fa = AND v41f v1f6(0xff)
0x1fc: MSTORE v1f5 v1fa
0x1fd: v1fd = MLOAD v1f2(0x40)
0x201: v201 = SUB v1f5 v1fd
0x202: v202(0x20) = CONST 
0x204: v204 = ADD v202(0x20) v201
0x206: RETURN v1fd v204
----------------------------------

Begin block 0x207
prev = {}, next = {'0x20f', '0x213'}
----------------------------------
function foundingTime()()
Block 0x207
0x208: v208 = CALLVALUE 
0x20a: v20a = ISZERO v208
0x20b: v20b(0x213) = CONST 
0x20e: JUMPI v20b(0x213) v20a
----------------------------------

Begin block 0x20f
prev = {'0x207'}, next = {}
----------------------------------
Block 0x20f
0x20f: v20f(0x0) = CONST 
0x212: REVERT v20f(0x0) v20f(0x0)
----------------------------------

Begin block 0x213
prev = {'0x207'}, next = {'0x422'}
----------------------------------
Block 0x213
0x215: v215(0x1a0) = CONST 
0x218: v218(0x422) = CONST 
0x21b: JUMP v218(0x422)
----------------------------------

Begin block 0x21c
prev = {}, next = {'0x228', '0x224'}
----------------------------------
function balanceOf(address)()
Block 0x21c
0x21d: v21d = CALLVALUE 
0x21f: v21f = ISZERO v21d
0x220: v220(0x228) = CONST 
0x223: JUMPI v220(0x228) v21f
----------------------------------

Begin block 0x224
prev = {'0x21c'}, next = {}
----------------------------------
Block 0x224
0x224: v224(0x0) = CONST 
0x227: REVERT v224(0x0) v224(0x0)
----------------------------------

Begin block 0x228
prev = {'0x21c'}, next = {'0x428'}
----------------------------------
Block 0x228
0x22a: v22a(0x1a0) = CONST 
0x22d: v22d(0x1) = CONST 
0x22f: v22f(0xa0) = CONST 
0x231: v231(0x2) = CONST 
0x233: v233(0x10000000000000000000000000000000000000000) = EXP v231(0x2) v22f(0xa0)
0x234: v234(0xffffffffffffffffffffffffffffffffffffffff) = SUB v233(0x10000000000000000000000000000000000000000) v22d(0x1)
0x235: v235(0x4) = CONST 
0x237: v237 = CALLDATALOAD v235(0x4)
0x238: v238 = AND v237 v234(0xffffffffffffffffffffffffffffffffffffffff)
0x239: v239(0x428) = CONST 
0x23c: JUMP v239(0x428)
----------------------------------

Begin block 0x23d
prev = {}, next = {'0x245', '0x249'}
----------------------------------
function release()()
Block 0x23d
0x23e: v23e = CALLVALUE 
0x240: v240 = ISZERO v23e
0x241: v241(0x249) = CONST 
0x244: JUMPI v241(0x249) v240
----------------------------------

Begin block 0x245
prev = {'0x23d'}, next = {}
----------------------------------
Block 0x245
0x245: v245(0x0) = CONST 
0x248: REVERT v245(0x0) v245(0x0)
----------------------------------

Begin block 0x249
prev = {'0x23d'}, next = {'0x43a'}
----------------------------------
Block 0x249
0x24b: v24b(0x1a0) = CONST 
0x24e: v24e(0x43a) = CONST 
0x251: JUMP v24e(0x43a)
----------------------------------

Begin block 0x252
prev = {}, next = {'0x25e', '0x25a'}
----------------------------------
function symbol()()
Block 0x252
0x253: v253 = CALLVALUE 
0x255: v255 = ISZERO v253
0x256: v256(0x25e) = CONST 
0x259: JUMPI v256(0x25e) v255
----------------------------------

Begin block 0x25a
prev = {'0x252'}, next = {}
----------------------------------
Block 0x25a
0x25a: v25a(0x0) = CONST 
0x25d: REVERT v25a(0x0) v25a(0x0)
----------------------------------

Begin block 0x25e
prev = {'0x252'}, next = {'0xde0x252'}
----------------------------------
Block 0x25e
0x260: v260(0xde) = CONST 
0x263: v263(0x440) = CONST 
0x266: v266_0, v266_1 = CALLPRIVATE v263(0x440) v260(0xde)
----------------------------------

Begin block 0x267
prev = {}, next = {'0x273', '0x26f'}
----------------------------------
function transfer(address,uint256)()
Block 0x267
0x268: v268 = CALLVALUE 
0x26a: v26a = ISZERO v268
0x26b: v26b(0x273) = CONST 
0x26e: JUMPI v26b(0x273) v26a
----------------------------------

Begin block 0x26f
prev = {'0x267'}, next = {}
----------------------------------
Block 0x26f
0x26f: v26f(0x0) = CONST 
0x272: REVERT v26f(0x0) v26f(0x0)
----------------------------------

Begin block 0x273
prev = {'0x267'}, next = {'0x49a'}
----------------------------------
Block 0x273
0x275: v275(0x28b) = CONST 
0x278: v278(0x1) = CONST 
0x27a: v27a(0xa0) = CONST 
0x27c: v27c(0x2) = CONST 
0x27e: v27e(0x10000000000000000000000000000000000000000) = EXP v27c(0x2) v27a(0xa0)
0x27f: v27f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v27e(0x10000000000000000000000000000000000000000) v278(0x1)
0x280: v280(0x4) = CONST 
0x282: v282 = CALLDATALOAD v280(0x4)
0x283: v283 = AND v282 v27f(0xffffffffffffffffffffffffffffffffffffffff)
0x284: v284(0x24) = CONST 
0x286: v286 = CALLDATALOAD v284(0x24)
0x287: v287(0x49a) = CONST 
0x28a: JUMP v287(0x49a)
----------------------------------

Begin block 0x28b
prev = {'0x4a5'}, next = {}
----------------------------------
Block 0x28b
0x28c: STOP 
----------------------------------

Begin block 0x28d
prev = {}, next = {'0x295', '0x299'}
----------------------------------
function kUnit()()
Block 0x28d
0x28e: v28e = CALLVALUE 
0x290: v290 = ISZERO v28e
0x291: v291(0x299) = CONST 
0x294: JUMPI v291(0x299) v290
----------------------------------

Begin block 0x295
prev = {'0x28d'}, next = {}
----------------------------------
Block 0x295
0x295: v295(0x0) = CONST 
0x298: REVERT v295(0x0) v295(0x0)
----------------------------------

Begin block 0x299
prev = {'0x28d'}, next = {'0x4a9'}
----------------------------------
Block 0x299
0x29b: v29b(0x1a0) = CONST 
0x29e: v29e(0x4a9) = CONST 
0x2a1: JUMP v29e(0x4a9)
----------------------------------

Begin block 0x2a2
prev = {}, next = {'0x2ae', '0x2aa'}
----------------------------------
function allowance(address,address)()
Block 0x2a2
0x2a3: v2a3 = CALLVALUE 
0x2a5: v2a5 = ISZERO v2a3
0x2a6: v2a6(0x2ae) = CONST 
0x2a9: JUMPI v2a6(0x2ae) v2a5
----------------------------------

Begin block 0x2aa
prev = {'0x2a2'}, next = {}
----------------------------------
Block 0x2aa
0x2aa: v2aa(0x0) = CONST 
0x2ad: REVERT v2aa(0x0) v2aa(0x0)
----------------------------------

Begin block 0x2ae
prev = {'0x2a2'}, next = {'0x4af'}
----------------------------------
Block 0x2ae
0x2b0: v2b0(0x1a0) = CONST 
0x2b3: v2b3(0x1) = CONST 
0x2b5: v2b5(0xa0) = CONST 
0x2b7: v2b7(0x2) = CONST 
0x2b9: v2b9(0x10000000000000000000000000000000000000000) = EXP v2b7(0x2) v2b5(0xa0)
0x2ba: v2ba(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2b9(0x10000000000000000000000000000000000000000) v2b3(0x1)
0x2bb: v2bb(0x4) = CONST 
0x2bd: v2bd = CALLDATALOAD v2bb(0x4)
0x2bf: v2bf = AND v2ba(0xffffffffffffffffffffffffffffffffffffffff) v2bd
0x2c1: v2c1(0x24) = CONST 
0x2c3: v2c3 = CALLDATALOAD v2c1(0x24)
0x2c4: v2c4 = AND v2c3 v2ba(0xffffffffffffffffffffffffffffffffffffffff)
0x2c5: v2c5(0x4af) = CONST 
0x2c8: JUMP v2c5(0x4af)
----------------------------------

Begin block 0x2c9
prev = {}, next = {'0x2d1', '0x2d5'}
----------------------------------
function tokenUnit()()
Block 0x2c9
0x2ca: v2ca = CALLVALUE 
0x2cc: v2cc = ISZERO v2ca
0x2cd: v2cd(0x2d5) = CONST 
0x2d0: JUMPI v2cd(0x2d5) v2cc
----------------------------------

Begin block 0x2d1
prev = {'0x2c9'}, next = {}
----------------------------------
Block 0x2d1
0x2d1: v2d1(0x0) = CONST 
0x2d4: REVERT v2d1(0x0) v2d1(0x0)
----------------------------------

Begin block 0x2d5
prev = {'0x2c9'}, next = {'0x4cc'}
----------------------------------
Block 0x2d5
0x2d7: v2d7(0x1a0) = CONST 
0x2da: v2da(0x4cc) = CONST 
0x2dd: JUMP v2da(0x4cc)
----------------------------------

Begin block 0x2de
prev = {}, next = {'0x3640x2de', '0x31e'}
----------------------------------
function 0x2de(v2dearg0)
Block 0x2de
0x2df: v2df(0x0) = CONST 
0x2e2: v2e2 = SLOAD v2df(0x0)
0x2e3: v2e3(0x40) = CONST 
0x2e6: v2e6 = MLOAD v2e3(0x40)
0x2e7: v2e7(0x20) = CONST 
0x2e9: v2e9(0x2) = CONST 
0x2eb: v2eb(0x1) = CONST 
0x2ee: v2ee = AND v2e2 v2eb(0x1)
0x2ef: v2ef = ISZERO v2ee
0x2f0: v2f0(0x100) = CONST 
0x2f3: v2f3 = MUL v2f0(0x100) v2ef
0x2f4: v2f4(0x0) = CONST 
0x2f6: v2f6(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v2f4(0x0)
0x2f7: v2f7 = ADD v2f6(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v2f3
0x2fa: v2fa = AND v2e2 v2f7
0x2fe: v2fe = DIV v2fa v2e9(0x2)
0x2ff: v2ff(0x1f) = CONST 
0x302: v302 = ADD v2fe v2ff(0x1f)
0x305: v305 = DIV v302 v2e7(0x20)
0x307: v307 = MUL v2e7(0x20) v305
0x309: v309 = ADD v2e6 v307
0x30b: v30b = ADD v2e7(0x20) v309
0x30e: MSTORE v2e3(0x40) v30b
0x311: MSTORE v2e6 v2fe
0x315: v315 = ADD v2e6 v2e7(0x20)
0x319: v319 = ISZERO v2fe
0x31a: v31a(0x364) = CONST 
0x31d: JUMPI v31a(0x364) v319
----------------------------------

Begin block 0x31e
prev = {'0x2de'}, next = {'0x3390x2de', '0x326'}
----------------------------------
Block 0x31e
0x31f: v31f(0x1f) = CONST 
0x321: v321 = LT v31f(0x1f) v2fe
0x322: v322(0x339) = CONST 
0x325: JUMPI v322(0x339) v321
----------------------------------

Begin block 0x326
prev = {'0x31e'}, next = {'0x3640x2de'}
----------------------------------
Block 0x326
0x326: v326(0x100) = CONST 
0x32b: v32b = SLOAD v2df(0x0)
0x32c: v32c = DIV v32b v326(0x100)
0x32d: v32d = MUL v32c v326(0x100)
0x32f: MSTORE v315 v32d
0x331: v331(0x20) = CONST 
0x333: v333 = ADD v331(0x20) v315
0x335: v335(0x364) = CONST 
0x338: JUMP v335(0x364)
----------------------------------

Begin block 0x3390x2de
prev = {'0x31e'}, next = {'0x3470x2de'}
----------------------------------
Block 0x3390x2de
0x33b0x2de: v2de33b = ADD v315 v2fe
0x33e0x2de: v2de33e(0x0) = CONST 
0x3400x2de: MSTORE v2de33e(0x0) v2df(0x0)
0x3410x2de: v2de341(0x20) = CONST 
0x3430x2de: v2de343(0x0) = CONST 
0x3450x2de: v2de345 = SHA3 v2de343(0x0) v2de341(0x20)
----------------------------------

Begin block 0x3390x440
prev = {'0x47f'}, next = {'0x3470x440'}
----------------------------------
Block 0x3390x440
0x33b0x440: v44033b = ADD v476 v45f
0x33e0x440: v44033e(0x0) = CONST 
0x3400x440: MSTORE v44033e(0x0) v441(0x1)
0x3410x440: v440341(0x20) = CONST 
0x3430x440: v440343(0x0) = CONST 
0x3450x440: v440345 = SHA3 v440343(0x0) v440341(0x20)
----------------------------------

Begin block 0x3470x2de
prev = {'0x3390x2de', '0x3470x2de'}, next = {'0x35b0x2de', '0x3470x2de'}
----------------------------------
Block 0x3470x2de
0x3470x2de_0x0: v3472de_0 = PHI v315 v2de353
0x3470x2de_0x1: v3472de_1 = PHI v2de34f v2de345
0x3490x2de: v2de349 = SLOAD v3472de_1
0x34b0x2de: MSTORE v3472de_0 v2de349
0x34d0x2de: v2de34d(0x1) = CONST 
0x34f0x2de: v2de34f = ADD v2de34d(0x1) v3472de_1
0x3510x2de: v2de351(0x20) = CONST 
0x3530x2de: v2de353 = ADD v2de351(0x20) v3472de_0
0x3560x2de: v2de356 = GT v2de33b v2de353
0x3570x2de: v2de357(0x347) = CONST 
0x35a0x2de: JUMPI v2de357(0x347) v2de356
----------------------------------

Begin block 0x3470x440
prev = {'0x3390x440', '0x3470x440'}, next = {'0x35b0x440', '0x3470x440'}
----------------------------------
Block 0x3470x440
0x3470x440_0x0: v347440_0 = PHI v476 v440353
0x3470x440_0x1: v347440_1 = PHI v44034f v440345
0x3490x440: v440349 = SLOAD v347440_1
0x34b0x440: MSTORE v347440_0 v440349
0x34d0x440: v44034d(0x1) = CONST 
0x34f0x440: v44034f = ADD v44034d(0x1) v347440_1
0x3510x440: v440351(0x20) = CONST 
0x3530x440: v440353 = ADD v440351(0x20) v347440_0
0x3560x440: v440356 = GT v44033b v440353
0x3570x440: v440357(0x347) = CONST 
0x35a0x440: JUMPI v440357(0x347) v440356
----------------------------------

Begin block 0x35b0x2de
prev = {'0x3470x2de'}, next = {'0x3640x2de'}
----------------------------------
Block 0x35b0x2de
0x35d0x2de: v2de35d = SUB v2de353 v2de33b
0x35e0x2de: v2de35e(0x1f) = CONST 
0x3600x2de: v2de360 = AND v2de35e(0x1f) v2de35d
0x3620x2de: v2de362 = ADD v2de33b v2de360
----------------------------------

Begin block 0x35b0x440
prev = {'0x3470x440'}, next = {'0x3640x440'}
----------------------------------
Block 0x35b0x440
0x35d0x440: v44035d = SUB v440353 v44033b
0x35e0x440: v44035e(0x1f) = CONST 
0x3600x440: v440360 = AND v44035e(0x1f) v44035d
0x3620x440: v440362 = ADD v44033b v440360
----------------------------------

Begin block 0x3640x2de
prev = {'0x2de', '0x326', '0x35b0x2de'}, next = {}
----------------------------------
Block 0x3640x2de
0x36b0x2de: RETURNPRIVATE v2dearg0 v2e6 v2dearg0
----------------------------------

Begin block 0x3640x440
prev = {'0x487', '0x35b0x440', '0x440'}, next = {}
----------------------------------
Block 0x3640x440
0x36b0x440: RETURNPRIVATE v440arg0 v448 v440arg0
----------------------------------

Begin block 0x36c
prev = {'0x15f'}, next = {'0x1770x153'}
----------------------------------
Block 0x36c
0x36d: v36d(0x1) = CONST 
0x36f: v36f(0xa0) = CONST 
0x371: v371(0x2) = CONST 
0x373: v373(0x10000000000000000000000000000000000000000) = EXP v371(0x2) v36f(0xa0)
0x374: v374(0xffffffffffffffffffffffffffffffffffffffff) = SUB v373(0x10000000000000000000000000000000000000000) v36d(0x1)
0x375: v375 = CALLER 
0x377: v377 = AND v374(0xffffffffffffffffffffffffffffffffffffffff) v375
0x378: v378(0x0) = CONST 
0x37c: MSTORE v378(0x0) v377
0x37d: v37d(0x8) = CONST 
0x37f: v37f(0x20) = CONST 
0x383: MSTORE v37f(0x20) v37d(0x8)
0x384: v384(0x40) = CONST 
0x388: v388 = SHA3 v378(0x0) v384(0x40)
0x38b: v38b = AND v16f v374(0xffffffffffffffffffffffffffffffffffffffff)
0x38d: MSTORE v378(0x0) v38b
0x390: MSTORE v37f(0x20) v388
0x391: v391 = SHA3 v378(0x0) v384(0x40)
0x394: SSTORE v391 v172
0x395: v395(0x1) = CONST 
0x39b: JUMP v161(0x177)
----------------------------------

Begin block 0x39c
prev = {'0x197'}, next = {'0x1a00x18b'}
----------------------------------
Block 0x39c
0x39d: v39d(0x3) = CONST 
0x39f: v39f = SLOAD v39d(0x3)
0x3a1: JUMP v199(0x1a0)
----------------------------------

Begin block 0x3a2
prev = {'0x1be'}, next = {'0x3d7', '0x3d3'}
----------------------------------
Block 0x3a2
0x3a3: v3a3(0x1) = CONST 
0x3a5: v3a5(0xa0) = CONST 
0x3a7: v3a7(0x2) = CONST 
0x3a9: v3a9(0x10000000000000000000000000000000000000000) = EXP v3a7(0x2) v3a5(0xa0)
0x3aa: v3aa(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3a9(0x10000000000000000000000000000000000000000) v3a3(0x1)
0x3ad: v3ad = AND v1cf v3aa(0xffffffffffffffffffffffffffffffffffffffff)
0x3ae: v3ae(0x0) = CONST 
0x3b2: MSTORE v3ae(0x0) v3ad
0x3b3: v3b3(0x8) = CONST 
0x3b5: v3b5(0x20) = CONST 
0x3b9: MSTORE v3b5(0x20) v3b3(0x8)
0x3ba: v3ba(0x40) = CONST 
0x3be: v3be = SHA3 v3ae(0x0) v3ba(0x40)
0x3bf: v3bf = CALLER 
0x3c2: v3c2 = AND v3aa(0xffffffffffffffffffffffffffffffffffffffff) v3bf
0x3c4: MSTORE v3ae(0x0) v3c2
0x3c7: MSTORE v3b5(0x20) v3be
0x3ca: v3ca = SHA3 v3ae(0x0) v3ba(0x40)
0x3cb: v3cb = SLOAD v3ca
0x3cd: v3cd = GT v1d7 v3cb
0x3ce: v3ce = ISZERO v3cd
0x3cf: v3cf(0x3d7) = CONST 
0x3d2: JUMPI v3cf(0x3d7) v3ce
----------------------------------

Begin block 0x3d3
prev = {'0x3a2'}, next = {}
----------------------------------
Block 0x3d3
0x3d3: v3d3(0x0) = CONST 
0x3d6: REVERT v3d3(0x0) v3d3(0x0)
----------------------------------

Begin block 0x3d7
prev = {'0x3a2'}, next = {'0x40f'}
----------------------------------
Block 0x3d7
0x3d8: v3d8(0x1) = CONST 
0x3da: v3da(0xa0) = CONST 
0x3dc: v3dc(0x2) = CONST 
0x3de: v3de(0x10000000000000000000000000000000000000000) = EXP v3dc(0x2) v3da(0xa0)
0x3df: v3df(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3de(0x10000000000000000000000000000000000000000) v3d8(0x1)
0x3e2: v3e2 = AND v1cf v3df(0xffffffffffffffffffffffffffffffffffffffff)
0x3e3: v3e3(0x0) = CONST 
0x3e7: MSTORE v3e3(0x0) v3e2
0x3e8: v3e8(0x8) = CONST 
0x3ea: v3ea(0x20) = CONST 
0x3ee: MSTORE v3ea(0x20) v3e8(0x8)
0x3ef: v3ef(0x40) = CONST 
0x3f3: v3f3 = SHA3 v3e3(0x0) v3ef(0x40)
0x3f4: v3f4 = CALLER 
0x3f7: v3f7 = AND v3df(0xffffffffffffffffffffffffffffffffffffffff) v3f4
0x3f9: MSTORE v3e3(0x0) v3f7
0x3fc: MSTORE v3ea(0x20) v3f3
0x3fd: v3fd = SHA3 v3e3(0x0) v3ef(0x40)
0x3ff: v3ff = SLOAD v3fd
0x402: v402 = SUB v3ff v1d7
0x404: SSTORE v3fd v402
0x405: v405(0x40f) = CONST 
0x40b: v40b(0x4d2) = CONST 
0x40e: CALLPRIVATE v40b(0x4d2) v1d7 v1d4 v1cf v405(0x40f)
----------------------------------

Begin block 0x40f
prev = {'0x3d7'}, next = {'0x1770x1b2'}
----------------------------------
Block 0x40f
0x411: v411(0x1) = CONST 
0x418: JUMP v1c0(0x177)
----------------------------------

Begin block 0x419
prev = {'0x1e8'}, next = {'0x1f1'}
----------------------------------
Block 0x419
0x41a: v41a(0x2) = CONST 
0x41c: v41c = SLOAD v41a(0x2)
0x41d: v41d(0xff) = CONST 
0x41f: v41f = AND v41d(0xff) v41c
0x421: JUMP v1ea(0x1f1)
----------------------------------

Begin block 0x422
prev = {'0x213'}, next = {'0x1a00x207'}
----------------------------------
Block 0x422
0x423: v423(0x6) = CONST 
0x425: v425 = SLOAD v423(0x6)
0x427: JUMP v215(0x1a0)
----------------------------------

Begin block 0x428
prev = {'0x228'}, next = {'0x1a00x21c'}
----------------------------------
Block 0x428
0x429: v429(0x7) = CONST 
0x42b: v42b(0x20) = CONST 
0x42d: MSTORE v42b(0x20) v429(0x7)
0x42e: v42e(0x0) = CONST 
0x432: MSTORE v42e(0x0) v238
0x433: v433(0x40) = CONST 
0x436: v436 = SHA3 v42e(0x0) v433(0x40)
0x437: v437 = SLOAD v436
0x439: JUMP v22a(0x1a0)
----------------------------------

Begin block 0x43a
prev = {'0x249'}, next = {'0x1a00x23d'}
----------------------------------
Block 0x43a
0x43b: v43b(0x9) = CONST 
0x43d: v43d = SLOAD v43b(0x9)
0x43f: JUMP v24b(0x1a0)
----------------------------------

Begin block 0x440
prev = {}, next = {'0x3640x440', '0x47f'}
----------------------------------
function 0x440(v440arg0)
Block 0x440
0x441: v441(0x1) = CONST 
0x444: v444 = SLOAD v441(0x1)
0x445: v445(0x40) = CONST 
0x448: v448 = MLOAD v445(0x40)
0x449: v449(0x20) = CONST 
0x44b: v44b(0x2) = CONST 
0x44f: v44f = AND v441(0x1) v444
0x450: v450 = ISZERO v44f
0x451: v451(0x100) = CONST 
0x454: v454 = MUL v451(0x100) v450
0x455: v455(0x0) = CONST 
0x457: v457(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v455(0x0)
0x458: v458 = ADD v457(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v454
0x45b: v45b = AND v444 v458
0x45f: v45f = DIV v45b v44b(0x2)
0x460: v460(0x1f) = CONST 
0x463: v463 = ADD v45f v460(0x1f)
0x466: v466 = DIV v463 v449(0x20)
0x468: v468 = MUL v449(0x20) v466
0x46a: v46a = ADD v448 v468
0x46c: v46c = ADD v449(0x20) v46a
0x46f: MSTORE v445(0x40) v46c
0x472: MSTORE v448 v45f
0x476: v476 = ADD v448 v449(0x20)
0x47a: v47a = ISZERO v45f
0x47b: v47b(0x364) = CONST 
0x47e: JUMPI v47b(0x364) v47a
----------------------------------

Begin block 0x47f
prev = {'0x440'}, next = {'0x487', '0x3390x440'}
----------------------------------
Block 0x47f
0x480: v480(0x1f) = CONST 
0x482: v482 = LT v480(0x1f) v45f
0x483: v483(0x339) = CONST 
0x486: JUMPI v483(0x339) v482
----------------------------------

Begin block 0x487
prev = {'0x47f'}, next = {'0x3640x440'}
----------------------------------
Block 0x487
0x487: v487(0x100) = CONST 
0x48c: v48c = SLOAD v441(0x1)
0x48d: v48d = DIV v48c v487(0x100)
0x48e: v48e = MUL v48d v487(0x100)
0x490: MSTORE v476 v48e
0x492: v492(0x20) = CONST 
0x494: v494 = ADD v492(0x20) v476
0x496: v496(0x364) = CONST 
0x499: JUMP v496(0x364)
----------------------------------

Begin block 0x49a
prev = {'0x273'}, next = {'0x4a5'}
----------------------------------
Block 0x49a
0x49b: v49b(0x4a5) = CONST 
0x49e: v49e = CALLER 
0x4a1: v4a1(0x4d2) = CONST 
0x4a4: CALLPRIVATE v4a1(0x4d2) v286 v283 v49e v49b(0x4a5)
----------------------------------

Begin block 0x4a5
prev = {'0x49a'}, next = {'0x28b'}
----------------------------------
Block 0x4a5
0x4a8: JUMP v275(0x28b)
----------------------------------

Begin block 0x4a9
prev = {'0x299'}, next = {'0x1a00x28d'}
----------------------------------
Block 0x4a9
0x4aa: v4aa(0x5) = CONST 
0x4ac: v4ac = SLOAD v4aa(0x5)
0x4ae: JUMP v29b(0x1a0)
----------------------------------

Begin block 0x4af
prev = {'0x2ae'}, next = {'0x1a00x2a2'}
----------------------------------
Block 0x4af
0x4b0: v4b0(0x8) = CONST 
0x4b2: v4b2(0x20) = CONST 
0x4b6: MSTORE v4b2(0x20) v4b0(0x8)
0x4b7: v4b7(0x0) = CONST 
0x4bb: MSTORE v4b7(0x0) v2bf
0x4bc: v4bc(0x40) = CONST 
0x4c0: v4c0 = SHA3 v4b7(0x0) v4bc(0x40)
0x4c3: MSTORE v4b2(0x20) v4c0
0x4c6: MSTORE v4b7(0x0) v2c4
0x4c8: v4c8 = SHA3 v4b7(0x0) v4bc(0x40)
0x4c9: v4c9 = SLOAD v4c8
0x4cb: JUMP v2b0(0x1a0)
----------------------------------

Begin block 0x4cc
prev = {'0x2d5'}, next = {'0x1a00x2c9'}
----------------------------------
Block 0x4cc
0x4cd: v4cd(0x4) = CONST 
0x4cf: v4cf = SLOAD v4cd(0x4)
0x4d1: JUMP v2d7(0x1a0)
----------------------------------

Begin block 0x4d2
prev = {}, next = {'0x4e3', '0x4e7'}
----------------------------------
function 0x4d2(v4d2arg0, v4d2arg1, v4d2arg2, v4d2arg3)
Block 0x4d2
0x4d3: v4d3(0x1) = CONST 
0x4d5: v4d5(0xa0) = CONST 
0x4d7: v4d7(0x2) = CONST 
0x4d9: v4d9(0x10000000000000000000000000000000000000000) = EXP v4d7(0x2) v4d5(0xa0)
0x4da: v4da(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4d9(0x10000000000000000000000000000000000000000) v4d3(0x1)
0x4dc: v4dc = AND v4d2arg1 v4da(0xffffffffffffffffffffffffffffffffffffffff)
0x4dd: v4dd = ISZERO v4dc
0x4de: v4de = ISZERO v4dd
0x4df: v4df(0x4e7) = CONST 
0x4e2: JUMPI v4df(0x4e7) v4de
----------------------------------

Begin block 0x4e3
prev = {'0x4d2'}, next = {}
----------------------------------
Block 0x4e3
0x4e3: v4e3(0x0) = CONST 
0x4e6: REVERT v4e3(0x0) v4e3(0x0)
----------------------------------

Begin block 0x4e7
prev = {'0x4d2'}, next = {'0x508', '0x50c'}
----------------------------------
Block 0x4e7
0x4e8: v4e8(0x1) = CONST 
0x4ea: v4ea(0xa0) = CONST 
0x4ec: v4ec(0x2) = CONST 
0x4ee: v4ee(0x10000000000000000000000000000000000000000) = EXP v4ec(0x2) v4ea(0xa0)
0x4ef: v4ef(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4ee(0x10000000000000000000000000000000000000000) v4e8(0x1)
0x4f1: v4f1 = AND v4d2arg2 v4ef(0xffffffffffffffffffffffffffffffffffffffff)
0x4f2: v4f2(0x0) = CONST 
0x4f6: MSTORE v4f2(0x0) v4f1
0x4f7: v4f7(0x7) = CONST 
0x4f9: v4f9(0x20) = CONST 
0x4fb: MSTORE v4f9(0x20) v4f7(0x7)
0x4fc: v4fc(0x40) = CONST 
0x4ff: v4ff = SHA3 v4f2(0x0) v4fc(0x40)
0x500: v500 = SLOAD v4ff
0x502: v502 = GT v4d2arg0 v500
0x503: v503 = ISZERO v502
0x504: v504(0x50c) = CONST 
0x507: JUMPI v504(0x50c) v503
----------------------------------

Begin block 0x508
prev = {'0x4e7'}, next = {}
----------------------------------
Block 0x508
0x508: v508(0x0) = CONST 
0x50b: REVERT v508(0x0) v508(0x0)
----------------------------------

Begin block 0x50c
prev = {'0x4e7'}, next = {'0x532', '0x52e'}
----------------------------------
Block 0x50c
0x50d: v50d(0x1) = CONST 
0x50f: v50f(0xa0) = CONST 
0x511: v511(0x2) = CONST 
0x513: v513(0x10000000000000000000000000000000000000000) = EXP v511(0x2) v50f(0xa0)
0x514: v514(0xffffffffffffffffffffffffffffffffffffffff) = SUB v513(0x10000000000000000000000000000000000000000) v50d(0x1)
0x516: v516 = AND v4d2arg1 v514(0xffffffffffffffffffffffffffffffffffffffff)
0x517: v517(0x0) = CONST 
0x51b: MSTORE v517(0x0) v516
0x51c: v51c(0x7) = CONST 
0x51e: v51e(0x20) = CONST 
0x520: MSTORE v51e(0x20) v51c(0x7)
0x521: v521(0x40) = CONST 
0x524: v524 = SHA3 v517(0x0) v521(0x40)
0x525: v525 = SLOAD v524
0x528: v528 = ADD v525 v4d2arg0
0x529: v529 = GT v528 v525
0x52a: v52a(0x532) = CONST 
0x52d: JUMPI v52a(0x532) v529
----------------------------------

Begin block 0x52e
prev = {'0x50c'}, next = {}
----------------------------------
Block 0x52e
0x52e: v52e(0x0) = CONST 
0x531: REVERT v52e(0x0) v52e(0x0)
----------------------------------

Begin block 0x532
prev = {'0x50c'}, next = {}
----------------------------------
Block 0x532
0x533: v533(0x1) = CONST 
0x535: v535(0xa0) = CONST 
0x537: v537(0x2) = CONST 
0x539: v539(0x10000000000000000000000000000000000000000) = EXP v537(0x2) v535(0xa0)
0x53a: v53a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v539(0x10000000000000000000000000000000000000000) v533(0x1)
0x53d: v53d = AND v4d2arg2 v53a(0xffffffffffffffffffffffffffffffffffffffff)
0x53e: v53e(0x0) = CONST 
0x542: MSTORE v53e(0x0) v53d
0x543: v543(0x7) = CONST 
0x545: v545(0x20) = CONST 
0x549: MSTORE v545(0x20) v543(0x7)
0x54a: v54a(0x40) = CONST 
0x54e: v54e = SHA3 v53e(0x0) v54a(0x40)
0x550: v550 = SLOAD v54e
0x553: v553 = SUB v550 v4d2arg0
0x555: SSTORE v54e v553
0x558: v558 = AND v4d2arg1 v53a(0xffffffffffffffffffffffffffffffffffffffff)
0x55b: MSTORE v53e(0x0) v558
0x55f: v55f = SHA3 v53e(0x0) v54a(0x40)
0x561: v561 = SLOAD v55f
0x563: v563 = ADD v4d2arg0 v561
0x565: SSTORE v55f v563
0x567: v567 = MLOAD v54a(0x40)
0x56a: MSTORE v567 v4d2arg0
0x56c: v56c = MLOAD v54a(0x40)
0x56f: v56f(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x594: v594 = SUB v567 v56c
0x597: v597 = ADD v545(0x20) v594
0x599: LOG3 v56c v597 v56f(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v53d v558
0x59d: RETURNPRIVATE v4d2arg3
----------------------------------

Begin block 0x5e6
prev = {'0xb9', '0x0'}, next = {}
----------------------------------
Block 0x5e6
0x5e7: v5e7(0xc4) = CONST 
0x5e8: CALLPRIVATE v5e7(0xc4)
----------------------------------

Begin block 0x5e9
prev = {'0xd'}, next = {}
----------------------------------
Block 0x5e9
0x5ea: v5ea(0xc9) = CONST 
0x5eb: CALLPRIVATE v5ea(0xc9)
----------------------------------

Begin block 0x5ec
prev = {'0x40'}, next = {}
----------------------------------
Block 0x5ec
0x5ed: v5ed(0x153) = CONST 
0x5ee: CALLPRIVATE v5ed(0x153)
----------------------------------

Begin block 0x5ef
prev = {'0x4b'}, next = {}
----------------------------------
Block 0x5ef
0x5f0: v5f0(0x18b) = CONST 
0x5f1: CALLPRIVATE v5f0(0x18b)
----------------------------------

Begin block 0x5f2
prev = {'0x56'}, next = {}
----------------------------------
Block 0x5f2
0x5f3: v5f3(0x1b2) = CONST 
0x5f4: CALLPRIVATE v5f3(0x1b2)
----------------------------------

Begin block 0x5f5
prev = {'0x61'}, next = {}
----------------------------------
Block 0x5f5
0x5f6: v5f6(0x1dc) = CONST 
0x5f7: CALLPRIVATE v5f6(0x1dc)
----------------------------------

Begin block 0x5f8
prev = {'0x6c'}, next = {}
----------------------------------
Block 0x5f8
0x5f9: v5f9(0x207) = CONST 
0x5fa: CALLPRIVATE v5f9(0x207)
----------------------------------

Begin block 0x5fb
prev = {'0x77'}, next = {}
----------------------------------
Block 0x5fb
0x5fc: v5fc(0x21c) = CONST 
0x5fd: CALLPRIVATE v5fc(0x21c)
----------------------------------

Begin block 0x5fe
prev = {'0x82'}, next = {}
----------------------------------
Block 0x5fe
0x5ff: v5ff(0x23d) = CONST 
0x600: CALLPRIVATE v5ff(0x23d)
----------------------------------

Begin block 0x601
prev = {'0x8d'}, next = {}
----------------------------------
Block 0x601
0x602: v602(0x252) = CONST 
0x603: CALLPRIVATE v602(0x252)
----------------------------------

Begin block 0x604
prev = {'0x98'}, next = {}
----------------------------------
Block 0x604
0x605: v605(0x267) = CONST 
0x606: CALLPRIVATE v605(0x267)
----------------------------------

Begin block 0x607
prev = {'0xa3'}, next = {}
----------------------------------
Block 0x607
0x608: v608(0x28d) = CONST 
0x609: CALLPRIVATE v608(0x28d)
----------------------------------

Begin block 0x60a
prev = {'0xae'}, next = {}
----------------------------------
Block 0x60a
0x60b: v60b(0x2a2) = CONST 
0x60c: CALLPRIVATE v60b(0x2a2)
----------------------------------

Begin block 0x60d
prev = {'0xb9'}, next = {}
----------------------------------
Block 0x60d
0x60e: v60e(0x2c9) = CONST 
0x60f: CALLPRIVATE v60e(0x2c9)
----------------------------------
