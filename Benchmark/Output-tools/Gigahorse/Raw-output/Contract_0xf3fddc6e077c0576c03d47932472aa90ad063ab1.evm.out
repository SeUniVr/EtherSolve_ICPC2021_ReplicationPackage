
Begin block 0x0
prev = {}, next = {'0xc', '0x10'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x1a', '0x130f'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x12fb: v12fb(0x130f) = CONST 
0x12fc: JUMPI v12fb(0x130f) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x66', '0x2b'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x8406c079) = CONST 
0x26: v26 = GT v21(0x8406c079) v1f
0x27: v27(0x66) = CONST 
0x2a: JUMPI v27(0x66) v26
----------------------------------

Begin block 0x2b
prev = {'0x1a'}, next = {'0x131e', '0x36'}
----------------------------------
Block 0x2b
0x2c: v2c(0x8406c079) = CONST 
0x31: v31 = EQ v2c(0x8406c079) v1f
0x12fd: v12fd(0x131e) = CONST 
0x12fe: JUMPI v12fd(0x131e) v31
----------------------------------

Begin block 0x36
prev = {'0x2b'}, next = {'0x1321', '0x41'}
----------------------------------
Block 0x36
0x37: v37(0x8da5cb5b) = CONST 
0x3c: v3c = EQ v37(0x8da5cb5b) v1f
0x12ff: v12ff(0x1321) = CONST 
0x1300: JUMPI v12ff(0x1321) v3c
----------------------------------

Begin block 0x41
prev = {'0x36'}, next = {'0x4c', '0x1324'}
----------------------------------
Block 0x41
0x42: v42(0x8f32d59b) = CONST 
0x47: v47 = EQ v42(0x8f32d59b) v1f
0x1301: v1301(0x1324) = CONST 
0x1302: JUMPI v1301(0x1324) v47
----------------------------------

Begin block 0x4c
prev = {'0x41'}, next = {'0x57', '0x1327'}
----------------------------------
Block 0x4c
0x4d: v4d(0xf2fde38b) = CONST 
0x52: v52 = EQ v4d(0xf2fde38b) v1f
0x1303: v1303(0x1327) = CONST 
0x1304: JUMPI v1303(0x1327) v52
----------------------------------

Begin block 0x57
prev = {'0x4c'}, next = {'0x132a', '0x62'}
----------------------------------
Block 0x57
0x58: v58(0xfc0c546a) = CONST 
0x5d: v5d = EQ v58(0xfc0c546a) v1f
0x1305: v1305(0x132a) = CONST 
0x1306: JUMPI v1305(0x132a) v5d
----------------------------------

Begin block 0x62
prev = {'0x57'}, next = {'0x930x0'}
----------------------------------
Block 0x62
0x62: v62(0x93) = CONST 
0x65: JUMP v62(0x93)
----------------------------------

Begin block 0x66
prev = {'0x1a'}, next = {'0x1312', '0x72'}
----------------------------------
Block 0x66
0x68: v68(0x449015a) = CONST 
0x6d: v6d = EQ v68(0x449015a) v1f
0x1307: v1307(0x1312) = CONST 
0x1308: JUMPI v1307(0x1312) v6d
----------------------------------

Begin block 0x72
prev = {'0x66'}, next = {'0x1315', '0x7d'}
----------------------------------
Block 0x72
0x73: v73(0x8dc9f42) = CONST 
0x78: v78 = EQ v73(0x8dc9f42) v1f
0x1309: v1309(0x1315) = CONST 
0x130a: JUMPI v1309(0x1315) v78
----------------------------------

Begin block 0x7d
prev = {'0x72'}, next = {'0x88', '0x1318'}
----------------------------------
Block 0x7d
0x7e: v7e(0x6548e9bc) = CONST 
0x83: v83 = EQ v7e(0x6548e9bc) v1f
0x130b: v130b(0x1318) = CONST 
0x130c: JUMPI v130b(0x1318) v83
----------------------------------

Begin block 0x88
prev = {'0x7d'}, next = {'0x130f', '0x131b'}
----------------------------------
Block 0x88
0x89: v89(0x69e527da) = CONST 
0x8e: v8e = EQ v89(0x69e527da) v1f
0x130d: v130d(0x131b) = CONST 
0x130e: JUMPI v130d(0x131b) v8e
----------------------------------

Begin block 0x93
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x93
0x94: v94(0x0) = CONST 
0x97: REVERT v94(0x0) v94(0x0)
----------------------------------

Begin block 0x930x0
prev = {'0x130f', '0x62'}, next = {}
----------------------------------
Block 0x930x0
0x940x0: v094(0x0) = CONST 
0x970x0: REVERT v094(0x0) v094(0x0)
----------------------------------

Begin block 0x98
prev = {}, next = {'0xae', '0xaa'}
----------------------------------
function redeem(uint256,uint256,bytes)()
Block 0x98
0x99: v99(0x114) = CONST 
0x9c: v9c(0x4) = CONST 
0x9f: v9f = CALLDATASIZE 
0xa0: va0 = SUB v9f v9c(0x4)
0xa1: va1(0x60) = CONST 
0xa4: va4 = LT va0 va1(0x60)
0xa5: va5 = ISZERO va4
0xa6: va6(0xae) = CONST 
0xa9: JUMPI va6(0xae) va5
----------------------------------

Begin block 0xaa
prev = {'0x98'}, next = {}
----------------------------------
Block 0xaa
0xaa: vaa(0x0) = CONST 
0xad: REVERT vaa(0x0) vaa(0x0)
----------------------------------

Begin block 0xae
prev = {'0x98'}, next = {'0xd1', '0xd5'}
----------------------------------
Block 0xae
0xb0: vb0 = CALLDATALOAD v9c(0x4)
0xb2: vb2(0x20) = CONST 
0xb5: vb5 = ADD v9c(0x4) vb2(0x20)
0xb6: vb6 = CALLDATALOAD vb5
0xb9: vb9 = ADD v9c(0x4) va0
0xbb: vbb(0x60) = CONST 
0xbe: vbe = ADD v9c(0x4) vbb(0x60)
0xbf: vbf(0x40) = CONST 
0xc2: vc2 = ADD v9c(0x4) vbf(0x40)
0xc3: vc3 = CALLDATALOAD vc2
0xc4: vc4(0x100000000) = CONST 
0xcb: vcb = GT vc3 vc4(0x100000000)
0xcc: vcc = ISZERO vcb
0xcd: vcd(0xd5) = CONST 
0xd0: JUMPI vcd(0xd5) vcc
----------------------------------

Begin block 0xd1
prev = {'0xae'}, next = {}
----------------------------------
Block 0xd1
0xd1: vd1(0x0) = CONST 
0xd4: REVERT vd1(0x0) vd1(0x0)
----------------------------------

Begin block 0xd5
prev = {'0xae'}, next = {'0xe3', '0xe7'}
----------------------------------
Block 0xd5
0xd7: vd7 = ADD v9c(0x4) vc3
0xd9: vd9(0x20) = CONST 
0xdc: vdc = ADD vd7 vd9(0x20)
0xdd: vdd = GT vdc vb9
0xde: vde = ISZERO vdd
0xdf: vdf(0xe7) = CONST 
0xe2: JUMPI vdf(0xe7) vde
----------------------------------

Begin block 0xe3
prev = {'0xd5'}, next = {}
----------------------------------
Block 0xe3
0xe3: ve3(0x0) = CONST 
0xe6: REVERT ve3(0x0) ve3(0x0)
----------------------------------

Begin block 0xe7
prev = {'0xd5'}, next = {'0x105', '0x109'}
----------------------------------
Block 0xe7
0xe9: ve9 = CALLDATALOAD vd7
0xeb: veb(0x20) = CONST 
0xed: ved = ADD veb(0x20) vd7
0xf0: vf0(0x1) = CONST 
0xf3: vf3 = MUL ve9 vf0(0x1)
0xf5: vf5 = ADD ved vf3
0xf6: vf6 = GT vf5 vb9
0xf7: vf7(0x100000000) = CONST 
0xfe: vfe = GT ve9 vf7(0x100000000)
0xff: vff = OR vfe vf6
0x100: v100 = ISZERO vff
0x101: v101(0x109) = CONST 
0x104: JUMPI v101(0x109) v100
----------------------------------

Begin block 0x105
prev = {'0xe7'}, next = {}
----------------------------------
Block 0x105
0x105: v105(0x0) = CONST 
0x108: REVERT v105(0x0) v105(0x0)
----------------------------------

Begin block 0x109
prev = {'0xe7'}, next = {'0x236'}
----------------------------------
Block 0x109
0x110: v110(0x236) = CONST 
0x113: JUMP v110(0x236)
----------------------------------

Begin block 0x1140x98
prev = {'0x81d0x98'}, next = {}
----------------------------------
Block 0x1140x98
0x1150x98: STOP 
----------------------------------

Begin block 0x1140x116
prev = {'0x81d0x116'}, next = {}
----------------------------------
Block 0x1140x116
0x1150x116: STOP 
----------------------------------

Begin block 0x1140x192
prev = {'0xef3'}, next = {}
----------------------------------
Block 0x1140x192
0x1150x192: STOP 
----------------------------------

Begin block 0x1140x208
prev = {'0xffd'}, next = {}
----------------------------------
Block 0x1140x208
0x1150x208: STOP 
----------------------------------

Begin block 0x116
prev = {}, next = {'0x128', '0x12c'}
----------------------------------
function mint(uint256,uint256,bytes)()
Block 0x116
0x117: v117(0x114) = CONST 
0x11a: v11a(0x4) = CONST 
0x11d: v11d = CALLDATASIZE 
0x11e: v11e = SUB v11d v11a(0x4)
0x11f: v11f(0x60) = CONST 
0x122: v122 = LT v11e v11f(0x60)
0x123: v123 = ISZERO v122
0x124: v124(0x12c) = CONST 
0x127: JUMPI v124(0x12c) v123
----------------------------------

Begin block 0x128
prev = {'0x116'}, next = {}
----------------------------------
Block 0x128
0x128: v128(0x0) = CONST 
0x12b: REVERT v128(0x0) v128(0x0)
----------------------------------

Begin block 0x12c
prev = {'0x116'}, next = {'0x153', '0x14f'}
----------------------------------
Block 0x12c
0x12e: v12e = CALLDATALOAD v11a(0x4)
0x130: v130(0x20) = CONST 
0x133: v133 = ADD v11a(0x4) v130(0x20)
0x134: v134 = CALLDATALOAD v133
0x137: v137 = ADD v11a(0x4) v11e
0x139: v139(0x60) = CONST 
0x13c: v13c = ADD v11a(0x4) v139(0x60)
0x13d: v13d(0x40) = CONST 
0x140: v140 = ADD v11a(0x4) v13d(0x40)
0x141: v141 = CALLDATALOAD v140
0x142: v142(0x100000000) = CONST 
0x149: v149 = GT v141 v142(0x100000000)
0x14a: v14a = ISZERO v149
0x14b: v14b(0x153) = CONST 
0x14e: JUMPI v14b(0x153) v14a
----------------------------------

Begin block 0x14f
prev = {'0x12c'}, next = {}
----------------------------------
Block 0x14f
0x14f: v14f(0x0) = CONST 
0x152: REVERT v14f(0x0) v14f(0x0)
----------------------------------

Begin block 0x153
prev = {'0x12c'}, next = {'0x161', '0x165'}
----------------------------------
Block 0x153
0x155: v155 = ADD v11a(0x4) v141
0x157: v157(0x20) = CONST 
0x15a: v15a = ADD v155 v157(0x20)
0x15b: v15b = GT v15a v137
0x15c: v15c = ISZERO v15b
0x15d: v15d(0x165) = CONST 
0x160: JUMPI v15d(0x165) v15c
----------------------------------

Begin block 0x161
prev = {'0x153'}, next = {}
----------------------------------
Block 0x161
0x161: v161(0x0) = CONST 
0x164: REVERT v161(0x0) v161(0x0)
----------------------------------

Begin block 0x165
prev = {'0x153'}, next = {'0x183', '0x187'}
----------------------------------
Block 0x165
0x167: v167 = CALLDATALOAD v155
0x169: v169(0x20) = CONST 
0x16b: v16b = ADD v169(0x20) v155
0x16e: v16e(0x1) = CONST 
0x171: v171 = MUL v167 v16e(0x1)
0x173: v173 = ADD v16b v171
0x174: v174 = GT v173 v137
0x175: v175(0x100000000) = CONST 
0x17c: v17c = GT v167 v175(0x100000000)
0x17d: v17d = OR v17c v174
0x17e: v17e = ISZERO v17d
0x17f: v17f(0x187) = CONST 
0x182: JUMPI v17f(0x187) v17e
----------------------------------

Begin block 0x183
prev = {'0x165'}, next = {}
----------------------------------
Block 0x183
0x183: v183(0x0) = CONST 
0x186: REVERT v183(0x0) v183(0x0)
----------------------------------

Begin block 0x187
prev = {'0x165'}, next = {'0x824'}
----------------------------------
Block 0x187
0x18e: v18e(0x824) = CONST 
0x191: JUMP v18e(0x824)
----------------------------------

Begin block 0x192
prev = {}, next = {'0x1a8', '0x1a4'}
----------------------------------
function setRelayer(address)()
Block 0x192
0x193: v193(0x114) = CONST 
0x196: v196(0x4) = CONST 
0x199: v199 = CALLDATASIZE 
0x19a: v19a = SUB v199 v196(0x4)
0x19b: v19b(0x20) = CONST 
0x19e: v19e = LT v19a v19b(0x20)
0x19f: v19f = ISZERO v19e
0x1a0: v1a0(0x1a8) = CONST 
0x1a3: JUMPI v1a0(0x1a8) v19f
----------------------------------

Begin block 0x1a4
prev = {'0x192'}, next = {}
----------------------------------
Block 0x1a4
0x1a4: v1a4(0x0) = CONST 
0x1a7: REVERT v1a4(0x0) v1a4(0x0)
----------------------------------

Begin block 0x1a8
prev = {'0x192'}, next = {'0xe87'}
----------------------------------
Block 0x1a8
0x1aa: v1aa = CALLDATALOAD v196(0x4)
0x1ab: v1ab(0x1) = CONST 
0x1ad: v1ad(0x1) = CONST 
0x1af: v1af(0xa0) = CONST 
0x1b1: v1b1(0x10000000000000000000000000000000000000000) = SHL v1af(0xa0) v1ad(0x1)
0x1b2: v1b2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1b1(0x10000000000000000000000000000000000000000) v1ab(0x1)
0x1b3: v1b3 = AND v1b2(0xffffffffffffffffffffffffffffffffffffffff) v1aa
0x1b4: v1b4(0xe87) = CONST 
0x1b7: JUMP v1b4(0xe87)
----------------------------------

Begin block 0x1b8
prev = {}, next = {'0xf5d'}
----------------------------------
function cToken()()
Block 0x1b8
0x1b9: v1b9(0x1c0) = CONST 
0x1bc: v1bc(0xf5d) = CONST 
0x1bf: JUMP v1bc(0xf5d)
----------------------------------

Begin block 0x1c00x1b8
prev = {'0xf5d'}, next = {}
----------------------------------
Block 0x1c00x1b8
0x1c10x1b8: v1b81c1(0x40) = CONST 
0x1c40x1b8: v1b81c4 = MLOAD v1b81c1(0x40)
0x1c50x1b8: v1b81c5(0x1) = CONST 
0x1c70x1b8: v1b81c7(0x1) = CONST 
0x1c90x1b8: v1b81c9(0xa0) = CONST 
0x1cb0x1b8: v1b81cb(0x10000000000000000000000000000000000000000) = SHL v1b81c9(0xa0) v1b81c7(0x1)
0x1cc0x1b8: v1b81cc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1b81cb(0x10000000000000000000000000000000000000000) v1b81c5(0x1)
0x1cf0x1b8: v1b81cf = AND vf69 v1b81cc(0xffffffffffffffffffffffffffffffffffffffff)
0x1d10x1b8: MSTORE v1b81c4 v1b81cf
0x1d20x1b8: v1b81d2 = MLOAD v1b81c1(0x40)
0x1d60x1b8: v1b81d6 = SUB v1b81c4 v1b81d2
0x1d70x1b8: v1b81d7(0x20) = CONST 
0x1d90x1b8: v1b81d9 = ADD v1b81d7(0x20) v1b81d6
0x1db0x1b8: RETURN v1b81d2 v1b81d9
----------------------------------

Begin block 0x1c00x1dc
prev = {'0xf6c'}, next = {}
----------------------------------
Block 0x1c00x1dc
0x1c10x1dc: v1dc1c1(0x40) = CONST 
0x1c40x1dc: v1dc1c4 = MLOAD v1dc1c1(0x40)
0x1c50x1dc: v1dc1c5(0x1) = CONST 
0x1c70x1dc: v1dc1c7(0x1) = CONST 
0x1c90x1dc: v1dc1c9(0xa0) = CONST 
0x1cb0x1dc: v1dc1cb(0x10000000000000000000000000000000000000000) = SHL v1dc1c9(0xa0) v1dc1c7(0x1)
0x1cc0x1dc: v1dc1cc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1dc1cb(0x10000000000000000000000000000000000000000) v1dc1c5(0x1)
0x1cf0x1dc: v1dc1cf = AND vf78 v1dc1cc(0xffffffffffffffffffffffffffffffffffffffff)
0x1d10x1dc: MSTORE v1dc1c4 v1dc1cf
0x1d20x1dc: v1dc1d2 = MLOAD v1dc1c1(0x40)
0x1d60x1dc: v1dc1d6 = SUB v1dc1c4 v1dc1d2
0x1d70x1dc: v1dc1d7(0x20) = CONST 
0x1d90x1dc: v1dc1d9 = ADD v1dc1d7(0x20) v1dc1d6
0x1db0x1dc: RETURN v1dc1d2 v1dc1d9
----------------------------------

Begin block 0x1c00x1e4
prev = {'0xf7b'}, next = {}
----------------------------------
Block 0x1c00x1e4
0x1c10x1e4: v1e41c1(0x40) = CONST 
0x1c40x1e4: v1e41c4 = MLOAD v1e41c1(0x40)
0x1c50x1e4: v1e41c5(0x1) = CONST 
0x1c70x1e4: v1e41c7(0x1) = CONST 
0x1c90x1e4: v1e41c9(0xa0) = CONST 
0x1cb0x1e4: v1e41cb(0x10000000000000000000000000000000000000000) = SHL v1e41c9(0xa0) v1e41c7(0x1)
0x1cc0x1e4: v1e41cc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1e41cb(0x10000000000000000000000000000000000000000) v1e41c5(0x1)
0x1cf0x1e4: v1e41cf = AND vf87 v1e41cc(0xffffffffffffffffffffffffffffffffffffffff)
0x1d10x1e4: MSTORE v1e41c4 v1e41cf
0x1d20x1e4: v1e41d2 = MLOAD v1e41c1(0x40)
0x1d60x1e4: v1e41d6 = SUB v1e41c4 v1e41d2
0x1d70x1e4: v1e41d7(0x20) = CONST 
0x1d90x1e4: v1e41d9 = ADD v1e41d7(0x20) v1e41d6
0x1db0x1e4: RETURN v1e41d2 v1e41d9
----------------------------------

Begin block 0x1c00x22e
prev = {'0x1000'}, next = {}
----------------------------------
Block 0x1c00x22e
0x1c10x22e: v22e1c1(0x40) = CONST 
0x1c40x22e: v22e1c4 = MLOAD v22e1c1(0x40)
0x1c50x22e: v22e1c5(0x1) = CONST 
0x1c70x22e: v22e1c7(0x1) = CONST 
0x1c90x22e: v22e1c9(0xa0) = CONST 
0x1cb0x22e: v22e1cb(0x10000000000000000000000000000000000000000) = SHL v22e1c9(0xa0) v22e1c7(0x1)
0x1cc0x22e: v22e1cc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v22e1cb(0x10000000000000000000000000000000000000000) v22e1c5(0x1)
0x1cf0x22e: v22e1cf = AND v100c v22e1cc(0xffffffffffffffffffffffffffffffffffffffff)
0x1d10x22e: MSTORE v22e1c4 v22e1cf
0x1d20x22e: v22e1d2 = MLOAD v22e1c1(0x40)
0x1d60x22e: v22e1d6 = SUB v22e1c4 v22e1d2
0x1d70x22e: v22e1d7(0x20) = CONST 
0x1d90x22e: v22e1d9 = ADD v22e1d7(0x20) v22e1d6
0x1db0x22e: RETURN v22e1d2 v22e1d9
----------------------------------

Begin block 0x1dc
prev = {}, next = {'0xf6c'}
----------------------------------
function relayer()()
Block 0x1dc
0x1dd: v1dd(0x1c0) = CONST 
0x1e0: v1e0(0xf6c) = CONST 
0x1e3: JUMP v1e0(0xf6c)
----------------------------------

Begin block 0x1e4
prev = {}, next = {'0xf7b'}
----------------------------------
function owner()()
Block 0x1e4
0x1e5: v1e5(0x1c0) = CONST 
0x1e8: v1e8(0xf7b) = CONST 
0x1eb: JUMP v1e8(0xf7b)
----------------------------------

Begin block 0x1ec
prev = {}, next = {'0x1f4'}
----------------------------------
function isOwner()()
Block 0x1ec
0x1ed: v1ed(0x1f4) = CONST 
0x1f0: v1f0(0xf8a) = CONST 
0x1f3: v1f3_0 = CALLPRIVATE v1f0(0xf8a) v1ed(0x1f4)
----------------------------------

Begin block 0x1f4
prev = {'0x1ec'}, next = {}
----------------------------------
Block 0x1f4
0x1f5: v1f5(0x40) = CONST 
0x1f8: v1f8 = MLOAD v1f5(0x40)
0x1fa: v1fa = ISZERO v1f3_0
0x1fb: v1fb = ISZERO v1fa
0x1fd: MSTORE v1f8 v1fb
0x1fe: v1fe = MLOAD v1f5(0x40)
0x202: v202 = SUB v1f8 v1fe
0x203: v203(0x20) = CONST 
0x205: v205 = ADD v203(0x20) v202
0x207: RETURN v1fe v205
----------------------------------

Begin block 0x208
prev = {}, next = {'0x21e', '0x21a'}
----------------------------------
function transferOwnership(address)()
Block 0x208
0x209: v209(0x114) = CONST 
0x20c: v20c(0x4) = CONST 
0x20f: v20f = CALLDATASIZE 
0x210: v210 = SUB v20f v20c(0x4)
0x211: v211(0x20) = CONST 
0x214: v214 = LT v210 v211(0x20)
0x215: v215 = ISZERO v214
0x216: v216(0x21e) = CONST 
0x219: JUMPI v216(0x21e) v215
----------------------------------

Begin block 0x21a
prev = {'0x208'}, next = {}
----------------------------------
Block 0x21a
0x21a: v21a(0x0) = CONST 
0x21d: REVERT v21a(0x0) v21a(0x0)
----------------------------------

Begin block 0x21e
prev = {'0x208'}, next = {'0xf9b'}
----------------------------------
Block 0x21e
0x220: v220 = CALLDATALOAD v20c(0x4)
0x221: v221(0x1) = CONST 
0x223: v223(0x1) = CONST 
0x225: v225(0xa0) = CONST 
0x227: v227(0x10000000000000000000000000000000000000000) = SHL v225(0xa0) v223(0x1)
0x228: v228(0xffffffffffffffffffffffffffffffffffffffff) = SUB v227(0x10000000000000000000000000000000000000000) v221(0x1)
0x229: v229 = AND v228(0xffffffffffffffffffffffffffffffffffffffff) v220
0x22a: v22a(0xf9b) = CONST 
0x22d: JUMP v22a(0xf9b)
----------------------------------

Begin block 0x22e
prev = {}, next = {'0x1000'}
----------------------------------
function token()()
Block 0x22e
0x22f: v22f(0x1c0) = CONST 
0x232: v232(0x1000) = CONST 
0x235: JUMP v232(0x1000)
----------------------------------

Begin block 0x236
prev = {'0x109'}, next = {'0x29f', '0x253'}
----------------------------------
Block 0x236
0x237: v237(0x1) = CONST 
0x23a: v23a = SLOAD v237(0x1)
0x23c: v23c = ADD v237(0x1) v23a
0x240: SSTORE v237(0x1) v23c
0x241: v241(0x4) = CONST 
0x243: v243 = SLOAD v241(0x4)
0x244: v244(0x1) = CONST 
0x246: v246(0x1) = CONST 
0x248: v248(0xa0) = CONST 
0x24a: v24a(0x10000000000000000000000000000000000000000) = SHL v248(0xa0) v246(0x1)
0x24b: v24b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v24a(0x10000000000000000000000000000000000000000) v244(0x1)
0x24c: v24c = AND v24b(0xffffffffffffffffffffffffffffffffffffffff) v243
0x24d: v24d = ORIGIN 
0x24e: v24e = EQ v24d v24c
0x24f: v24f(0x29f) = CONST 
0x252: JUMPI v24f(0x29f) v24e
----------------------------------

Begin block 0x253
prev = {'0x236'}, next = {}
----------------------------------
Block 0x253
0x253: v253(0x40) = CONST 
0x256: v256 = MLOAD v253(0x40)
0x257: v257(0x461bcd) = CONST 
0x25b: v25b(0xe5) = CONST 
0x25d: v25d(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v25b(0xe5) v257(0x461bcd)
0x25f: MSTORE v256 v25d(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x260: v260(0x20) = CONST 
0x262: v262(0x4) = CONST 
0x265: v265 = ADD v256 v262(0x4)
0x266: MSTORE v265 v260(0x20)
0x267: v267(0x1a) = CONST 
0x269: v269(0x24) = CONST 
0x26c: v26c = ADD v256 v269(0x24)
0x26d: MSTORE v26c v267(0x1a)
0x26e: v26e(0x496e76616c6964207472616e73616374696f6e206f726967696e000000000000) = CONST 
0x28f: v28f(0x44) = CONST 
0x292: v292 = ADD v256 v28f(0x44)
0x293: MSTORE v292 v26e(0x496e76616c6964207472616e73616374696f6e206f726967696e000000000000)
0x295: v295 = MLOAD v253(0x40)
0x299: v299 = SUB v256 v295
0x29a: v29a(0x64) = CONST 
0x29c: v29c = ADD v29a(0x64) v299
0x29e: REVERT v295 v29c
----------------------------------

Begin block 0x29f
prev = {'0x236'}, next = {'0x31b'}
----------------------------------
Block 0x29f
0x2a0: v2a0(0x40) = CONST 
0x2a3: v2a3 = MLOAD v2a0(0x40)
0x2a4: v2a4 = CALLER 
0x2a5: v2a5(0x60) = CONST 
0x2a9: v2a9 = SHL v2a5(0x60) v2a4
0x2aa: v2aa(0x20) = CONST 
0x2ae: v2ae = ADD v2a3 v2aa(0x20)
0x2b2: MSTORE v2ae v2a9
0x2b3: v2b3(0x34) = CONST 
0x2b6: v2b6 = ADD v2a3 v2b3(0x34)
0x2b9: MSTORE v2b6 vb0
0x2ba: v2ba(0x54) = CONST 
0x2be: v2be = ADD v2a3 v2ba(0x54)
0x2c1: MSTORE v2be vb6
0x2c3: v2c3 = MLOAD v2a0(0x40)
0x2c6: v2c6 = SUB v2a3 v2c3
0x2c9: v2c9 = ADD v2ba(0x54) v2c6
0x2cb: MSTORE v2c3 v2c9
0x2cc: v2cc(0x74) = CONST 
0x2cf: v2cf = ADD v2a3 v2cc(0x74)
0x2d2: MSTORE v2a0(0x40) v2cf
0x2d4: v2d4 = MLOAD v2c3
0x2d7: v2d7 = ADD v2aa(0x20) v2c3
0x2db: v2db = SHA3 v2d7 v2d4
0x2dc: v2dc(0x94) = CONST 
0x2de: v2de(0x1f) = CONST 
0x2e1: v2e1 = ADD ve9 v2de(0x1f)
0x2e4: v2e4 = DIV v2e1 v2aa(0x20)
0x2e7: v2e7 = MUL v2aa(0x20) v2e4
0x2e9: v2e9 = ADD v2a3 v2e7
0x2eb: v2eb = ADD v2dc(0x94) v2e9
0x2ee: MSTORE v2a0(0x40) v2eb
0x2f1: MSTORE v2cf ve9
0x2f5: v2f5(0x31b) = CONST 
0x303: v303 = ADD v2dc(0x94) v2a3
0x309: CALLDATACOPY v303 ved ve9
0x30a: v30a(0x0) = CONST 
0x30d: v30d = ADD v303 ve9
0x311: MSTORE v30d v30a(0x0)
0x313: v313(0x100f) = CONST 
0x31a: v31a_0 = CALLPRIVATE v313(0x100f) v2cf v2db v2f5(0x31b)
----------------------------------

Begin block 0x31b
prev = {'0x29f'}, next = {'0x35d', '0x359'}
----------------------------------
Block 0x31b
0x31c: v31c(0x1) = CONST 
0x31e: v31e(0x1) = CONST 
0x320: v320(0xa0) = CONST 
0x322: v322(0x10000000000000000000000000000000000000000) = SHL v320(0xa0) v31e(0x1)
0x323: v323(0xffffffffffffffffffffffffffffffffffffffff) = SUB v322(0x10000000000000000000000000000000000000000) v31c(0x1)
0x324: v324 = AND v323(0xffffffffffffffffffffffffffffffffffffffff) v31a_0
0x326: v326(0x1) = CONST 
0x328: v328(0x1) = CONST 
0x32a: v32a(0xa0) = CONST 
0x32c: v32c(0x10000000000000000000000000000000000000000) = SHL v32a(0xa0) v328(0x1)
0x32d: v32d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v32c(0x10000000000000000000000000000000000000000) v326(0x1)
0x32e: v32e = AND v32d(0xffffffffffffffffffffffffffffffffffffffff) v2a4
0x32f: v32f(0x238ac933) = CONST 
0x334: v334(0x40) = CONST 
0x336: v336 = MLOAD v334(0x40)
0x338: v338(0xffffffff) = CONST 
0x33d: v33d(0x238ac933) = AND v338(0xffffffff) v32f(0x238ac933)
0x33e: v33e(0xe0) = CONST 
0x340: v340(0x238ac93300000000000000000000000000000000000000000000000000000000) = SHL v33e(0xe0) v33d(0x238ac933)
0x342: MSTORE v336 v340(0x238ac93300000000000000000000000000000000000000000000000000000000)
0x343: v343(0x4) = CONST 
0x345: v345 = ADD v343(0x4) v336
0x346: v346(0x20) = CONST 
0x348: v348(0x40) = CONST 
0x34a: v34a = MLOAD v348(0x40)
0x34d: v34d = SUB v345 v34a
0x351: v351 = EXTCODESIZE v32e
0x352: v352 = ISZERO v351
0x354: v354 = ISZERO v352
0x355: v355(0x35d) = CONST 
0x358: JUMPI v355(0x35d) v354
----------------------------------

Begin block 0x359
prev = {'0x31b'}, next = {}
----------------------------------
Block 0x359
0x359: v359(0x0) = CONST 
0x35c: REVERT v359(0x0) v359(0x0)
----------------------------------

Begin block 0x35d
prev = {'0x31b'}, next = {'0x371', '0x368'}
----------------------------------
Block 0x35d
0x35f: v35f = GAS 
0x360: v360 = STATICCALL v35f v32e v34a v34d v34a v346(0x20)
0x361: v361 = ISZERO v360
0x363: v363 = ISZERO v361
0x364: v364(0x371) = CONST 
0x367: JUMPI v364(0x371) v363
----------------------------------

Begin block 0x368
prev = {'0x35d'}, next = {}
----------------------------------
Block 0x368
0x368: v368 = RETURNDATASIZE 
0x369: v369(0x0) = CONST 
0x36c: RETURNDATACOPY v369(0x0) v369(0x0) v368
0x36d: v36d = RETURNDATASIZE 
0x36e: v36e(0x0) = CONST 
0x370: REVERT v36e(0x0) v36d
----------------------------------

Begin block 0x371
prev = {'0x35d'}, next = {'0x383', '0x387'}
----------------------------------
Block 0x371
0x376: v376(0x40) = CONST 
0x378: v378 = MLOAD v376(0x40)
0x379: v379 = RETURNDATASIZE 
0x37a: v37a(0x20) = CONST 
0x37d: v37d = LT v379 v37a(0x20)
0x37e: v37e = ISZERO v37d
0x37f: v37f(0x387) = CONST 
0x382: JUMPI v37f(0x387) v37e
----------------------------------

Begin block 0x383
prev = {'0x371'}, next = {}
----------------------------------
Block 0x383
0x383: v383(0x0) = CONST 
0x386: REVERT v383(0x0) v383(0x0)
----------------------------------

Begin block 0x387
prev = {'0x371'}, next = {'0x3d8', '0x398'}
----------------------------------
Block 0x387
0x389: v389 = MLOAD v378
0x38a: v38a(0x1) = CONST 
0x38c: v38c(0x1) = CONST 
0x38e: v38e(0xa0) = CONST 
0x390: v390(0x10000000000000000000000000000000000000000) = SHL v38e(0xa0) v38c(0x1)
0x391: v391(0xffffffffffffffffffffffffffffffffffffffff) = SUB v390(0x10000000000000000000000000000000000000000) v38a(0x1)
0x392: v392 = AND v391(0xffffffffffffffffffffffffffffffffffffffff) v389
0x393: v393 = EQ v392 v324
0x394: v394(0x3d8) = CONST 
0x397: JUMPI v394(0x3d8) v393
----------------------------------

Begin block 0x398
prev = {'0x387'}, next = {}
----------------------------------
Block 0x398
0x398: v398(0x40) = CONST 
0x39b: v39b = MLOAD v398(0x40)
0x39c: v39c(0x461bcd) = CONST 
0x3a0: v3a0(0xe5) = CONST 
0x3a2: v3a2(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v3a0(0xe5) v39c(0x461bcd)
0x3a4: MSTORE v39b v3a2(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x3a5: v3a5(0x20) = CONST 
0x3a7: v3a7(0x4) = CONST 
0x3aa: v3aa = ADD v39b v3a7(0x4)
0x3ab: MSTORE v3aa v3a5(0x20)
0x3ac: v3ac(0x11) = CONST 
0x3ae: v3ae(0x24) = CONST 
0x3b1: v3b1 = ADD v39b v3ae(0x24)
0x3b2: MSTORE v3b1 v3ac(0x11)
0x3b3: v3b3(0x496e76616c6964207369676e6174757265) = CONST 
0x3c5: v3c5(0x78) = CONST 
0x3c7: v3c7(0x496e76616c6964207369676e6174757265000000000000000000000000000000) = SHL v3c5(0x78) v3b3(0x496e76616c6964207369676e6174757265)
0x3c8: v3c8(0x44) = CONST 
0x3cb: v3cb = ADD v39b v3c8(0x44)
0x3cc: MSTORE v3cb v3c7(0x496e76616c6964207369676e6174757265000000000000000000000000000000)
0x3ce: v3ce = MLOAD v398(0x40)
0x3d2: v3d2 = SUB v39b v3ce
0x3d3: v3d3(0x64) = CONST 
0x3d5: v3d5 = ADD v3d3(0x64) v3d2
0x3d7: REVERT v3ce v3d5
----------------------------------

Begin block 0x3d8
prev = {'0x387'}, next = {'0x434', '0x438'}
----------------------------------
Block 0x3d8
0x3d9: v3d9(0x2) = CONST 
0x3db: v3db = SLOAD v3d9(0x2)
0x3dc: v3dc(0x4) = CONST 
0x3df: v3df = SLOAD v3dc(0x4)
0x3e0: v3e0(0x40) = CONST 
0x3e3: v3e3 = MLOAD v3e0(0x40)
0x3e4: v3e4(0x23b872dd) = CONST 
0x3e9: v3e9(0xe0) = CONST 
0x3eb: v3eb(0x23b872dd00000000000000000000000000000000000000000000000000000000) = SHL v3e9(0xe0) v3e4(0x23b872dd)
0x3ed: MSTORE v3e3 v3eb(0x23b872dd00000000000000000000000000000000000000000000000000000000)
0x3ee: v3ee = CALLER 
0x3f1: v3f1 = ADD v3e3 v3dc(0x4)
0x3f5: MSTORE v3f1 v3ee
0x3f6: v3f6(0x1) = CONST 
0x3f8: v3f8(0x1) = CONST 
0x3fa: v3fa(0xa0) = CONST 
0x3fc: v3fc(0x10000000000000000000000000000000000000000) = SHL v3fa(0xa0) v3f8(0x1)
0x3fd: v3fd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3fc(0x10000000000000000000000000000000000000000) v3f6(0x1)
0x400: v400 = AND v3fd(0xffffffffffffffffffffffffffffffffffffffff) v3df
0x401: v401(0x24) = CONST 
0x404: v404 = ADD v3e3 v401(0x24)
0x405: MSTORE v404 v400
0x406: v406(0x44) = CONST 
0x409: v409 = ADD v3e3 v406(0x44)
0x40c: MSTORE v409 vb6
0x40d: v40d = MLOAD v3e0(0x40)
0x40f: v40f = AND v3db v3fd(0xffffffffffffffffffffffffffffffffffffffff)
0x411: v411(0x23b872dd) = CONST 
0x417: v417(0x64) = CONST 
0x41b: v41b = ADD v3e3 v417(0x64)
0x41d: v41d(0x20) = CONST 
0x425: v425 = SUB v3e3 v40d
0x426: v426 = ADD v425 v417(0x64)
0x428: v428(0x0) = CONST 
0x42c: v42c = EXTCODESIZE v40f
0x42d: v42d = ISZERO v42c
0x42f: v42f = ISZERO v42d
0x430: v430(0x438) = CONST 
0x433: JUMPI v430(0x438) v42f
----------------------------------

Begin block 0x434
prev = {'0x3d8'}, next = {}
----------------------------------
Block 0x434
0x434: v434(0x0) = CONST 
0x437: REVERT v434(0x0) v434(0x0)
----------------------------------

Begin block 0x438
prev = {'0x3d8'}, next = {'0x443', '0x44c'}
----------------------------------
Block 0x438
0x43a: v43a = GAS 
0x43b: v43b = CALL v43a v40f v428(0x0) v40d v426 v40d v41d(0x20)
0x43c: v43c = ISZERO v43b
0x43e: v43e = ISZERO v43c
0x43f: v43f(0x44c) = CONST 
0x442: JUMPI v43f(0x44c) v43e
----------------------------------

Begin block 0x443
prev = {'0x438'}, next = {}
----------------------------------
Block 0x443
0x443: v443 = RETURNDATASIZE 
0x444: v444(0x0) = CONST 
0x447: RETURNDATACOPY v444(0x0) v444(0x0) v443
0x448: v448 = RETURNDATASIZE 
0x449: v449(0x0) = CONST 
0x44b: REVERT v449(0x0) v448
----------------------------------

Begin block 0x44c
prev = {'0x438'}, next = {'0x45e', '0x462'}
----------------------------------
Block 0x44c
0x451: v451(0x40) = CONST 
0x453: v453 = MLOAD v451(0x40)
0x454: v454 = RETURNDATASIZE 
0x455: v455(0x20) = CONST 
0x458: v458 = LT v454 v455(0x20)
0x459: v459 = ISZERO v458
0x45a: v45a(0x462) = CONST 
0x45d: JUMPI v45a(0x462) v459
----------------------------------

Begin block 0x45e
prev = {'0x44c'}, next = {}
----------------------------------
Block 0x45e
0x45e: v45e(0x0) = CONST 
0x461: REVERT v45e(0x0) v45e(0x0)
----------------------------------

Begin block 0x462
prev = {'0x44c'}, next = {'0x469', '0x46d'}
----------------------------------
Block 0x462
0x464: v464 = MLOAD v453
0x465: v465(0x46d) = CONST 
0x468: JUMPI v465(0x46d) v464
----------------------------------

Begin block 0x469
prev = {'0x462'}, next = {}
----------------------------------
Block 0x469
0x469: v469(0x0) = CONST 
0x46c: REVERT v469(0x0) v469(0x0)
----------------------------------

Begin block 0x46d
prev = {'0x462'}, next = {'0x4c3', '0x4c7'}
----------------------------------
Block 0x46d
0x46e: v46e(0x3) = CONST 
0x470: v470 = SLOAD v46e(0x3)
0x471: v471(0x40) = CONST 
0x474: v474 = MLOAD v471(0x40)
0x475: v475(0x23b872dd) = CONST 
0x47a: v47a(0xe0) = CONST 
0x47c: v47c(0x23b872dd00000000000000000000000000000000000000000000000000000000) = SHL v47a(0xe0) v475(0x23b872dd)
0x47e: MSTORE v474 v47c(0x23b872dd00000000000000000000000000000000000000000000000000000000)
0x47f: v47f = CALLER 
0x480: v480(0x4) = CONST 
0x483: v483 = ADD v474 v480(0x4)
0x484: MSTORE v483 v47f
0x485: v485 = ADDRESS 
0x486: v486(0x24) = CONST 
0x489: v489 = ADD v474 v486(0x24)
0x48a: MSTORE v489 v485
0x48b: v48b(0x44) = CONST 
0x48e: v48e = ADD v474 v48b(0x44)
0x491: MSTORE v48e vb0
0x493: v493 = MLOAD v471(0x40)
0x494: v494(0x1) = CONST 
0x496: v496(0x1) = CONST 
0x498: v498(0xa0) = CONST 
0x49a: v49a(0x10000000000000000000000000000000000000000) = SHL v498(0xa0) v496(0x1)
0x49b: v49b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v49a(0x10000000000000000000000000000000000000000) v494(0x1)
0x49e: v49e = AND v470 v49b(0xffffffffffffffffffffffffffffffffffffffff)
0x4a0: v4a0(0x23b872dd) = CONST 
0x4a6: v4a6(0x64) = CONST 
0x4aa: v4aa = ADD v474 v4a6(0x64)
0x4ac: v4ac(0x20) = CONST 
0x4b4: v4b4 = SUB v474 v493
0x4b5: v4b5 = ADD v4b4 v4a6(0x64)
0x4b7: v4b7(0x0) = CONST 
0x4bb: v4bb = EXTCODESIZE v49e
0x4bc: v4bc = ISZERO v4bb
0x4be: v4be = ISZERO v4bc
0x4bf: v4bf(0x4c7) = CONST 
0x4c2: JUMPI v4bf(0x4c7) v4be
----------------------------------

Begin block 0x4c3
prev = {'0x46d'}, next = {}
----------------------------------
Block 0x4c3
0x4c3: v4c3(0x0) = CONST 
0x4c6: REVERT v4c3(0x0) v4c3(0x0)
----------------------------------

Begin block 0x4c7
prev = {'0x46d'}, next = {'0x4d2', '0x4db'}
----------------------------------
Block 0x4c7
0x4c9: v4c9 = GAS 
0x4ca: v4ca = CALL v4c9 v49e v4b7(0x0) v493 v4b5 v493 v4ac(0x20)
0x4cb: v4cb = ISZERO v4ca
0x4cd: v4cd = ISZERO v4cb
0x4ce: v4ce(0x4db) = CONST 
0x4d1: JUMPI v4ce(0x4db) v4cd
----------------------------------

Begin block 0x4d2
prev = {'0x4c7'}, next = {}
----------------------------------
Block 0x4d2
0x4d2: v4d2 = RETURNDATASIZE 
0x4d3: v4d3(0x0) = CONST 
0x4d6: RETURNDATACOPY v4d3(0x0) v4d3(0x0) v4d2
0x4d7: v4d7 = RETURNDATASIZE 
0x4d8: v4d8(0x0) = CONST 
0x4da: REVERT v4d8(0x0) v4d7
----------------------------------

Begin block 0x4db
prev = {'0x4c7'}, next = {'0x4ed', '0x4f1'}
----------------------------------
Block 0x4db
0x4e0: v4e0(0x40) = CONST 
0x4e2: v4e2 = MLOAD v4e0(0x40)
0x4e3: v4e3 = RETURNDATASIZE 
0x4e4: v4e4(0x20) = CONST 
0x4e7: v4e7 = LT v4e3 v4e4(0x20)
0x4e8: v4e8 = ISZERO v4e7
0x4e9: v4e9(0x4f1) = CONST 
0x4ec: JUMPI v4e9(0x4f1) v4e8
----------------------------------

Begin block 0x4ed
prev = {'0x4db'}, next = {}
----------------------------------
Block 0x4ed
0x4ed: v4ed(0x0) = CONST 
0x4f0: REVERT v4ed(0x0) v4ed(0x0)
----------------------------------

Begin block 0x4f1
prev = {'0x4db'}, next = {'0x4f8', '0x538'}
----------------------------------
Block 0x4f1
0x4f3: v4f3 = MLOAD v4e2
0x4f4: v4f4(0x538) = CONST 
0x4f7: JUMPI v4f4(0x538) v4f3
----------------------------------

Begin block 0x4f8
prev = {'0x4f1'}, next = {}
----------------------------------
Block 0x4f8
0x4f8: v4f8(0x40) = CONST 
0x4fb: v4fb = MLOAD v4f8(0x40)
0x4fc: v4fc(0x461bcd) = CONST 
0x500: v500(0xe5) = CONST 
0x502: v502(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v500(0xe5) v4fc(0x461bcd)
0x504: MSTORE v4fb v502(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x505: v505(0x20) = CONST 
0x507: v507(0x4) = CONST 
0x50a: v50a = ADD v4fb v507(0x4)
0x50b: MSTORE v50a v505(0x20)
0x50c: v50c(0x11) = CONST 
0x50e: v50e(0x24) = CONST 
0x511: v511 = ADD v4fb v50e(0x24)
0x512: MSTORE v511 v50c(0x11)
0x513: v513(0x141d5b1b081d1bdad95b8819985a5b1959) = CONST 
0x525: v525(0x7a) = CONST 
0x527: v527(0x50756c6c20746f6b656e206661696c6564000000000000000000000000000000) = SHL v525(0x7a) v513(0x141d5b1b081d1bdad95b8819985a5b1959)
0x528: v528(0x44) = CONST 
0x52b: v52b = ADD v4fb v528(0x44)
0x52c: MSTORE v52b v527(0x50756c6c20746f6b656e206661696c6564000000000000000000000000000000)
0x52e: v52e = MLOAD v4f8(0x40)
0x532: v532 = SUB v4fb v52e
0x533: v533(0x64) = CONST 
0x535: v535 = ADD v533(0x64) v532
0x537: REVERT v52e v535
----------------------------------

Begin block 0x538
prev = {'0x4f1'}, next = {'0x57f', '0x583'}
----------------------------------
Block 0x538
0x539: v539(0x2) = CONST 
0x53b: v53b = SLOAD v539(0x2)
0x53c: v53c(0x40) = CONST 
0x53f: v53f = MLOAD v53c(0x40)
0x540: v540(0x70a08231) = CONST 
0x545: v545(0xe0) = CONST 
0x547: v547(0x70a0823100000000000000000000000000000000000000000000000000000000) = SHL v545(0xe0) v540(0x70a08231)
0x549: MSTORE v53f v547(0x70a0823100000000000000000000000000000000000000000000000000000000)
0x54a: v54a = ADDRESS 
0x54b: v54b(0x4) = CONST 
0x54e: v54e = ADD v53f v54b(0x4)
0x54f: MSTORE v54e v54a
0x551: v551 = MLOAD v53c(0x40)
0x552: v552(0x0) = CONST 
0x555: v555(0x1) = CONST 
0x557: v557(0x1) = CONST 
0x559: v559(0xa0) = CONST 
0x55b: v55b(0x10000000000000000000000000000000000000000) = SHL v559(0xa0) v557(0x1)
0x55c: v55c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v55b(0x10000000000000000000000000000000000000000) v555(0x1)
0x55d: v55d = AND v55c(0xffffffffffffffffffffffffffffffffffffffff) v53b
0x55f: v55f(0x70a08231) = CONST 
0x565: v565(0x24) = CONST 
0x569: v569 = ADD v53f v565(0x24)
0x56b: v56b(0x20) = CONST 
0x572: v572 = SUB v53f v551
0x573: v573 = ADD v572 v565(0x24)
0x577: v577 = EXTCODESIZE v55d
0x578: v578 = ISZERO v577
0x57a: v57a = ISZERO v578
0x57b: v57b(0x583) = CONST 
0x57e: JUMPI v57b(0x583) v57a
----------------------------------

Begin block 0x57f
prev = {'0x538'}, next = {}
----------------------------------
Block 0x57f
0x57f: v57f(0x0) = CONST 
0x582: REVERT v57f(0x0) v57f(0x0)
----------------------------------

Begin block 0x583
prev = {'0x538'}, next = {'0x597', '0x58e'}
----------------------------------
Block 0x583
0x585: v585 = GAS 
0x586: v586 = STATICCALL v585 v55d v551 v573 v551 v56b(0x20)
0x587: v587 = ISZERO v586
0x589: v589 = ISZERO v587
0x58a: v58a(0x597) = CONST 
0x58d: JUMPI v58a(0x597) v589
----------------------------------

Begin block 0x58e
prev = {'0x583'}, next = {}
----------------------------------
Block 0x58e
0x58e: v58e = RETURNDATASIZE 
0x58f: v58f(0x0) = CONST 
0x592: RETURNDATACOPY v58f(0x0) v58f(0x0) v58e
0x593: v593 = RETURNDATASIZE 
0x594: v594(0x0) = CONST 
0x596: REVERT v594(0x0) v593
----------------------------------

Begin block 0x597
prev = {'0x583'}, next = {'0x5ad', '0x5a9'}
----------------------------------
Block 0x597
0x59c: v59c(0x40) = CONST 
0x59e: v59e = MLOAD v59c(0x40)
0x59f: v59f = RETURNDATASIZE 
0x5a0: v5a0(0x20) = CONST 
0x5a3: v5a3 = LT v59f v5a0(0x20)
0x5a4: v5a4 = ISZERO v5a3
0x5a5: v5a5(0x5ad) = CONST 
0x5a8: JUMPI v5a5(0x5ad) v5a4
----------------------------------

Begin block 0x5a9
prev = {'0x597'}, next = {}
----------------------------------
Block 0x5a9
0x5a9: v5a9(0x0) = CONST 
0x5ac: REVERT v5a9(0x0) v5a9(0x0)
----------------------------------

Begin block 0x5ad
prev = {'0x597'}, next = {'0x600', '0x5fc'}
----------------------------------
Block 0x5ad
0x5af: v5af = MLOAD v59e
0x5b0: v5b0(0x3) = CONST 
0x5b2: v5b2 = SLOAD v5b0(0x3)
0x5b3: v5b3(0x40) = CONST 
0x5b6: v5b6 = MLOAD v5b3(0x40)
0x5b7: v5b7(0xdb006a75) = CONST 
0x5bc: v5bc(0xe0) = CONST 
0x5be: v5be(0xdb006a7500000000000000000000000000000000000000000000000000000000) = SHL v5bc(0xe0) v5b7(0xdb006a75)
0x5c0: MSTORE v5b6 v5be(0xdb006a7500000000000000000000000000000000000000000000000000000000)
0x5c1: v5c1(0x4) = CONST 
0x5c4: v5c4 = ADD v5b6 v5c1(0x4)
0x5c7: MSTORE v5c4 vb0
0x5c9: v5c9 = MLOAD v5b3(0x40)
0x5cd: v5cd(0x1) = CONST 
0x5cf: v5cf(0x1) = CONST 
0x5d1: v5d1(0xa0) = CONST 
0x5d3: v5d3(0x10000000000000000000000000000000000000000) = SHL v5d1(0xa0) v5cf(0x1)
0x5d4: v5d4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5d3(0x10000000000000000000000000000000000000000) v5cd(0x1)
0x5d7: v5d7 = AND v5b2 v5d4(0xffffffffffffffffffffffffffffffffffffffff)
0x5d9: v5d9(0xdb006a75) = CONST 
0x5df: v5df(0x24) = CONST 
0x5e3: v5e3 = ADD v5b6 v5df(0x24)
0x5e5: v5e5(0x20) = CONST 
0x5ed: v5ed = SUB v5b6 v5c9
0x5ee: v5ee = ADD v5ed v5df(0x24)
0x5f0: v5f0(0x0) = CONST 
0x5f4: v5f4 = EXTCODESIZE v5d7
0x5f5: v5f5 = ISZERO v5f4
0x5f7: v5f7 = ISZERO v5f5
0x5f8: v5f8(0x600) = CONST 
0x5fb: JUMPI v5f8(0x600) v5f7
----------------------------------

Begin block 0x5fc
prev = {'0x5ad'}, next = {}
----------------------------------
Block 0x5fc
0x5fc: v5fc(0x0) = CONST 
0x5ff: REVERT v5fc(0x0) v5fc(0x0)
----------------------------------

Begin block 0x600
prev = {'0x5ad'}, next = {'0x614', '0x60b'}
----------------------------------
Block 0x600
0x602: v602 = GAS 
0x603: v603 = CALL v602 v5d7 v5f0(0x0) v5c9 v5ee v5c9 v5e5(0x20)
0x604: v604 = ISZERO v603
0x606: v606 = ISZERO v604
0x607: v607(0x614) = CONST 
0x60a: JUMPI v607(0x614) v606
----------------------------------

Begin block 0x60b
prev = {'0x600'}, next = {}
----------------------------------
Block 0x60b
0x60b: v60b = RETURNDATASIZE 
0x60c: v60c(0x0) = CONST 
0x60f: RETURNDATACOPY v60c(0x0) v60c(0x0) v60b
0x610: v610 = RETURNDATASIZE 
0x611: v611(0x0) = CONST 
0x613: REVERT v611(0x0) v610
----------------------------------

Begin block 0x614
prev = {'0x600'}, next = {'0x62a', '0x626'}
----------------------------------
Block 0x614
0x619: v619(0x40) = CONST 
0x61b: v61b = MLOAD v619(0x40)
0x61c: v61c = RETURNDATASIZE 
0x61d: v61d(0x20) = CONST 
0x620: v620 = LT v61c v61d(0x20)
0x621: v621 = ISZERO v620
0x622: v622(0x62a) = CONST 
0x625: JUMPI v622(0x62a) v621
----------------------------------

Begin block 0x626
prev = {'0x614'}, next = {}
----------------------------------
Block 0x626
0x626: v626(0x0) = CONST 
0x629: REVERT v626(0x0) v626(0x0)
----------------------------------

Begin block 0x62a
prev = {'0x614'}, next = {'0x632', '0x67e'}
----------------------------------
Block 0x62a
0x62c: v62c = MLOAD v61b
0x62d: v62d = ISZERO v62c
0x62e: v62e(0x67e) = CONST 
0x631: JUMPI v62e(0x67e) v62d
----------------------------------

Begin block 0x632
prev = {'0x62a'}, next = {}
----------------------------------
Block 0x632
0x632: v632(0x40) = CONST 
0x635: v635 = MLOAD v632(0x40)
0x636: v636(0x461bcd) = CONST 
0x63a: v63a(0xe5) = CONST 
0x63c: v63c(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v63a(0xe5) v636(0x461bcd)
0x63e: MSTORE v635 v63c(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x63f: v63f(0x20) = CONST 
0x641: v641(0x4) = CONST 
0x644: v644 = ADD v635 v641(0x4)
0x645: MSTORE v644 v63f(0x20)
0x646: v646(0x1b) = CONST 
0x648: v648(0x24) = CONST 
0x64b: v64b = ADD v635 v648(0x24)
0x64c: MSTORE v64b v646(0x1b)
0x64d: v64d(0x556e6465726c79696e672072656465656d696e67206661696c65640000000000) = CONST 
0x66e: v66e(0x44) = CONST 
0x671: v671 = ADD v635 v66e(0x44)
0x672: MSTORE v671 v64d(0x556e6465726c79696e672072656465656d696e67206661696c65640000000000)
0x674: v674 = MLOAD v632(0x40)
0x678: v678 = SUB v635 v674
0x679: v679(0x64) = CONST 
0x67b: v67b = ADD v679(0x64) v678
0x67d: REVERT v674 v67b
----------------------------------

Begin block 0x67e
prev = {'0x62a'}, next = {'0x6c5', '0x6c9'}
----------------------------------
Block 0x67e
0x67f: v67f(0x2) = CONST 
0x681: v681 = SLOAD v67f(0x2)
0x682: v682(0x40) = CONST 
0x685: v685 = MLOAD v682(0x40)
0x686: v686(0x70a08231) = CONST 
0x68b: v68b(0xe0) = CONST 
0x68d: v68d(0x70a0823100000000000000000000000000000000000000000000000000000000) = SHL v68b(0xe0) v686(0x70a08231)
0x68f: MSTORE v685 v68d(0x70a0823100000000000000000000000000000000000000000000000000000000)
0x690: v690 = ADDRESS 
0x691: v691(0x4) = CONST 
0x694: v694 = ADD v685 v691(0x4)
0x695: MSTORE v694 v690
0x697: v697 = MLOAD v682(0x40)
0x698: v698(0x0) = CONST 
0x69b: v69b(0x1) = CONST 
0x69d: v69d(0x1) = CONST 
0x69f: v69f(0xa0) = CONST 
0x6a1: v6a1(0x10000000000000000000000000000000000000000) = SHL v69f(0xa0) v69d(0x1)
0x6a2: v6a2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6a1(0x10000000000000000000000000000000000000000) v69b(0x1)
0x6a3: v6a3 = AND v6a2(0xffffffffffffffffffffffffffffffffffffffff) v681
0x6a5: v6a5(0x70a08231) = CONST 
0x6ab: v6ab(0x24) = CONST 
0x6af: v6af = ADD v685 v6ab(0x24)
0x6b1: v6b1(0x20) = CONST 
0x6b8: v6b8 = SUB v685 v697
0x6b9: v6b9 = ADD v6b8 v6ab(0x24)
0x6bd: v6bd = EXTCODESIZE v6a3
0x6be: v6be = ISZERO v6bd
0x6c0: v6c0 = ISZERO v6be
0x6c1: v6c1(0x6c9) = CONST 
0x6c4: JUMPI v6c1(0x6c9) v6c0
----------------------------------

Begin block 0x6c5
prev = {'0x67e'}, next = {}
----------------------------------
Block 0x6c5
0x6c5: v6c5(0x0) = CONST 
0x6c8: REVERT v6c5(0x0) v6c5(0x0)
----------------------------------

Begin block 0x6c9
prev = {'0x67e'}, next = {'0x6dd', '0x6d4'}
----------------------------------
Block 0x6c9
0x6cb: v6cb = GAS 
0x6cc: v6cc = STATICCALL v6cb v6a3 v697 v6b9 v697 v6b1(0x20)
0x6cd: v6cd = ISZERO v6cc
0x6cf: v6cf = ISZERO v6cd
0x6d0: v6d0(0x6dd) = CONST 
0x6d3: JUMPI v6d0(0x6dd) v6cf
----------------------------------

Begin block 0x6d4
prev = {'0x6c9'}, next = {}
----------------------------------
Block 0x6d4
0x6d4: v6d4 = RETURNDATASIZE 
0x6d5: v6d5(0x0) = CONST 
0x6d8: RETURNDATACOPY v6d5(0x0) v6d5(0x0) v6d4
0x6d9: v6d9 = RETURNDATASIZE 
0x6da: v6da(0x0) = CONST 
0x6dc: REVERT v6da(0x0) v6d9
----------------------------------

Begin block 0x6dd
prev = {'0x6c9'}, next = {'0x6f3', '0x6ef'}
----------------------------------
Block 0x6dd
0x6e2: v6e2(0x40) = CONST 
0x6e4: v6e4 = MLOAD v6e2(0x40)
0x6e5: v6e5 = RETURNDATASIZE 
0x6e6: v6e6(0x20) = CONST 
0x6e9: v6e9 = LT v6e5 v6e6(0x20)
0x6ea: v6ea = ISZERO v6e9
0x6eb: v6eb(0x6f3) = CONST 
0x6ee: JUMPI v6eb(0x6f3) v6ea
----------------------------------

Begin block 0x6ef
prev = {'0x6dd'}, next = {}
----------------------------------
Block 0x6ef
0x6ef: v6ef(0x0) = CONST 
0x6f2: REVERT v6ef(0x0) v6ef(0x0)
----------------------------------

Begin block 0x6f3
prev = {'0x6dd'}, next = {'0x709'}
----------------------------------
Block 0x6f3
0x6f5: v6f5 = MLOAD v6e4
0x6f8: v6f8(0x0) = CONST 
0x6fa: v6fa(0x709) = CONST 
0x6ff: v6ff(0xffffffff) = CONST 
0x704: v704(0x10fe) = CONST 
0x707: v707(0x10fe) = AND v704(0x10fe) v6ff(0xffffffff)
0x708: v708_0 = CALLPRIVATE v707(0x10fe) v5af v6f5 v6fa(0x709)
----------------------------------

Begin block 0x709
prev = {'0x6f3'}, next = {'0x75c', '0x760'}
----------------------------------
Block 0x709
0x70a: v70a(0x2) = CONST 
0x70c: v70c = SLOAD v70a(0x2)
0x70d: v70d(0x40) = CONST 
0x710: v710 = MLOAD v70d(0x40)
0x711: v711(0xa9059cbb) = CONST 
0x716: v716(0xe0) = CONST 
0x718: v718(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = SHL v716(0xe0) v711(0xa9059cbb)
0x71a: MSTORE v710 v718(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0x71b: v71b = CALLER 
0x71c: v71c(0x4) = CONST 
0x71f: v71f = ADD v710 v71c(0x4)
0x720: MSTORE v71f v71b
0x721: v721(0x24) = CONST 
0x724: v724 = ADD v710 v721(0x24)
0x727: MSTORE v724 v708_0
0x729: v729 = MLOAD v70d(0x40)
0x72d: v72d(0x1) = CONST 
0x72f: v72f(0x1) = CONST 
0x731: v731(0xa0) = CONST 
0x733: v733(0x10000000000000000000000000000000000000000) = SHL v731(0xa0) v72f(0x1)
0x734: v734(0xffffffffffffffffffffffffffffffffffffffff) = SUB v733(0x10000000000000000000000000000000000000000) v72d(0x1)
0x737: v737 = AND v70c v734(0xffffffffffffffffffffffffffffffffffffffff)
0x739: v739(0xa9059cbb) = CONST 
0x73f: v73f(0x44) = CONST 
0x743: v743 = ADD v710 v73f(0x44)
0x745: v745(0x20) = CONST 
0x74d: v74d = SUB v710 v729
0x74e: v74e = ADD v74d v73f(0x44)
0x750: v750(0x0) = CONST 
0x754: v754 = EXTCODESIZE v737
0x755: v755 = ISZERO v754
0x757: v757 = ISZERO v755
0x758: v758(0x760) = CONST 
0x75b: JUMPI v758(0x760) v757
----------------------------------

Begin block 0x75c
prev = {'0x709'}, next = {}
----------------------------------
Block 0x75c
0x75c: v75c(0x0) = CONST 
0x75f: REVERT v75c(0x0) v75c(0x0)
----------------------------------

Begin block 0x760
prev = {'0x709'}, next = {'0x774', '0x76b'}
----------------------------------
Block 0x760
0x762: v762 = GAS 
0x763: v763 = CALL v762 v737 v750(0x0) v729 v74e v729 v745(0x20)
0x764: v764 = ISZERO v763
0x766: v766 = ISZERO v764
0x767: v767(0x774) = CONST 
0x76a: JUMPI v767(0x774) v766
----------------------------------

Begin block 0x76b
prev = {'0x760'}, next = {}
----------------------------------
Block 0x76b
0x76b: v76b = RETURNDATASIZE 
0x76c: v76c(0x0) = CONST 
0x76f: RETURNDATACOPY v76c(0x0) v76c(0x0) v76b
0x770: v770 = RETURNDATASIZE 
0x771: v771(0x0) = CONST 
0x773: REVERT v771(0x0) v770
----------------------------------

Begin block 0x774
prev = {'0x760'}, next = {'0x78a', '0x786'}
----------------------------------
Block 0x774
0x779: v779(0x40) = CONST 
0x77b: v77b = MLOAD v779(0x40)
0x77c: v77c = RETURNDATASIZE 
0x77d: v77d(0x20) = CONST 
0x780: v780 = LT v77c v77d(0x20)
0x781: v781 = ISZERO v780
0x782: v782(0x78a) = CONST 
0x785: JUMPI v782(0x78a) v781
----------------------------------

Begin block 0x786
prev = {'0x774'}, next = {}
----------------------------------
Block 0x786
0x786: v786(0x0) = CONST 
0x789: REVERT v786(0x0) v786(0x0)
----------------------------------

Begin block 0x78a
prev = {'0x774'}, next = {'0x7d1', '0x81d0x98'}
----------------------------------
Block 0x78a
0x78d: v78d(0x40) = CONST 
0x790: v790 = MLOAD v78d(0x40)
0x793: MSTORE v790 v708_0
0x795: v795 = MLOAD v78d(0x40)
0x796: v796 = CALLER 
0x798: v798(0x222838db2794d11532d940e8dec38ae307ed0b63cd97c233322e221f998767a6) = CONST 
0x7bd: v7bd = SUB v790 v795
0x7be: v7be(0x20) = CONST 
0x7c0: v7c0 = ADD v7be(0x20) v7bd
0x7c2: LOG2 v795 v7c0 v798(0x222838db2794d11532d940e8dec38ae307ed0b63cd97c233322e221f998767a6) v796
0x7c8: v7c8(0x1) = CONST 
0x7ca: v7ca = SLOAD v7c8(0x1)
0x7cc: v7cc = EQ v23c v7ca
0x7cd: v7cd(0x81d) = CONST 
0x7d0: JUMPI v7cd(0x81d) v7cc
----------------------------------

Begin block 0x7d1
prev = {'0x78a'}, next = {}
----------------------------------
Block 0x7d1
0x7d1: v7d1(0x40) = CONST 
0x7d4: v7d4 = MLOAD v7d1(0x40)
0x7d5: v7d5(0x461bcd) = CONST 
0x7d9: v7d9(0xe5) = CONST 
0x7db: v7db(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v7d9(0xe5) v7d5(0x461bcd)
0x7dd: MSTORE v7d4 v7db(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x7de: v7de(0x20) = CONST 
0x7e0: v7e0(0x4) = CONST 
0x7e3: v7e3 = ADD v7d4 v7e0(0x4)
0x7e4: MSTORE v7e3 v7de(0x20)
0x7e5: v7e5(0x1f) = CONST 
0x7e7: v7e7(0x24) = CONST 
0x7ea: v7ea = ADD v7d4 v7e7(0x24)
0x7eb: MSTORE v7ea v7e5(0x1f)
0x7ec: v7ec(0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00) = CONST 
0x80d: v80d(0x44) = CONST 
0x810: v810 = ADD v7d4 v80d(0x44)
0x811: MSTORE v810 v7ec(0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00)
0x813: v813 = MLOAD v7d1(0x40)
0x817: v817 = SUB v7d4 v813
0x818: v818(0x64) = CONST 
0x81a: v81a = ADD v818(0x64) v817
0x81c: REVERT v813 v81a
----------------------------------

Begin block 0x81d0x98
prev = {'0x78a'}, next = {'0x1140x98'}
----------------------------------
Block 0x81d0x98
0x8230x98: JUMP v99(0x114)
----------------------------------

Begin block 0x81d0x116
prev = {'0xdf6'}, next = {'0x1140x116'}
----------------------------------
Block 0x81d0x116
0x8230x116: JUMP v117(0x114)
----------------------------------

Begin block 0x824
prev = {'0x187'}, next = {'0x88d', '0x841'}
----------------------------------
Block 0x824
0x825: v825(0x1) = CONST 
0x828: v828 = SLOAD v825(0x1)
0x82a: v82a = ADD v825(0x1) v828
0x82e: SSTORE v825(0x1) v82a
0x82f: v82f(0x4) = CONST 
0x831: v831 = SLOAD v82f(0x4)
0x832: v832(0x1) = CONST 
0x834: v834(0x1) = CONST 
0x836: v836(0xa0) = CONST 
0x838: v838(0x10000000000000000000000000000000000000000) = SHL v836(0xa0) v834(0x1)
0x839: v839(0xffffffffffffffffffffffffffffffffffffffff) = SUB v838(0x10000000000000000000000000000000000000000) v832(0x1)
0x83a: v83a = AND v839(0xffffffffffffffffffffffffffffffffffffffff) v831
0x83b: v83b = ORIGIN 
0x83c: v83c = EQ v83b v83a
0x83d: v83d(0x88d) = CONST 
0x840: JUMPI v83d(0x88d) v83c
----------------------------------

Begin block 0x841
prev = {'0x824'}, next = {}
----------------------------------
Block 0x841
0x841: v841(0x40) = CONST 
0x844: v844 = MLOAD v841(0x40)
0x845: v845(0x461bcd) = CONST 
0x849: v849(0xe5) = CONST 
0x84b: v84b(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v849(0xe5) v845(0x461bcd)
0x84d: MSTORE v844 v84b(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x84e: v84e(0x20) = CONST 
0x850: v850(0x4) = CONST 
0x853: v853 = ADD v844 v850(0x4)
0x854: MSTORE v853 v84e(0x20)
0x855: v855(0x1a) = CONST 
0x857: v857(0x24) = CONST 
0x85a: v85a = ADD v844 v857(0x24)
0x85b: MSTORE v85a v855(0x1a)
0x85c: v85c(0x496e76616c6964207472616e73616374696f6e206f726967696e000000000000) = CONST 
0x87d: v87d(0x44) = CONST 
0x880: v880 = ADD v844 v87d(0x44)
0x881: MSTORE v880 v85c(0x496e76616c6964207472616e73616374696f6e206f726967696e000000000000)
0x883: v883 = MLOAD v841(0x40)
0x887: v887 = SUB v844 v883
0x888: v888(0x64) = CONST 
0x88a: v88a = ADD v888(0x64) v887
0x88c: REVERT v883 v88a
----------------------------------

Begin block 0x88d
prev = {'0x824'}, next = {'0x909'}
----------------------------------
Block 0x88d
0x88e: v88e(0x40) = CONST 
0x891: v891 = MLOAD v88e(0x40)
0x892: v892 = CALLER 
0x893: v893(0x60) = CONST 
0x897: v897 = SHL v893(0x60) v892
0x898: v898(0x20) = CONST 
0x89c: v89c = ADD v891 v898(0x20)
0x8a0: MSTORE v89c v897
0x8a1: v8a1(0x34) = CONST 
0x8a4: v8a4 = ADD v891 v8a1(0x34)
0x8a7: MSTORE v8a4 v12e
0x8a8: v8a8(0x54) = CONST 
0x8ac: v8ac = ADD v891 v8a8(0x54)
0x8af: MSTORE v8ac v134
0x8b1: v8b1 = MLOAD v88e(0x40)
0x8b4: v8b4 = SUB v891 v8b1
0x8b7: v8b7 = ADD v8a8(0x54) v8b4
0x8b9: MSTORE v8b1 v8b7
0x8ba: v8ba(0x74) = CONST 
0x8bd: v8bd = ADD v891 v8ba(0x74)
0x8c0: MSTORE v88e(0x40) v8bd
0x8c2: v8c2 = MLOAD v8b1
0x8c5: v8c5 = ADD v898(0x20) v8b1
0x8c9: v8c9 = SHA3 v8c5 v8c2
0x8ca: v8ca(0x94) = CONST 
0x8cc: v8cc(0x1f) = CONST 
0x8cf: v8cf = ADD v167 v8cc(0x1f)
0x8d2: v8d2 = DIV v8cf v898(0x20)
0x8d5: v8d5 = MUL v898(0x20) v8d2
0x8d7: v8d7 = ADD v891 v8d5
0x8d9: v8d9 = ADD v8ca(0x94) v8d7
0x8dc: MSTORE v88e(0x40) v8d9
0x8df: MSTORE v8bd v167
0x8e3: v8e3(0x909) = CONST 
0x8f1: v8f1 = ADD v8ca(0x94) v891
0x8f7: CALLDATACOPY v8f1 v16b v167
0x8f8: v8f8(0x0) = CONST 
0x8fb: v8fb = ADD v8f1 v167
0x8ff: MSTORE v8fb v8f8(0x0)
0x901: v901(0x100f) = CONST 
0x908: v908_0 = CALLPRIVATE v901(0x100f) v8bd v8c9 v8e3(0x909)
----------------------------------

Begin block 0x909
prev = {'0x88d'}, next = {'0x947', '0x94b'}
----------------------------------
Block 0x909
0x90a: v90a(0x1) = CONST 
0x90c: v90c(0x1) = CONST 
0x90e: v90e(0xa0) = CONST 
0x910: v910(0x10000000000000000000000000000000000000000) = SHL v90e(0xa0) v90c(0x1)
0x911: v911(0xffffffffffffffffffffffffffffffffffffffff) = SUB v910(0x10000000000000000000000000000000000000000) v90a(0x1)
0x912: v912 = AND v911(0xffffffffffffffffffffffffffffffffffffffff) v908_0
0x914: v914(0x1) = CONST 
0x916: v916(0x1) = CONST 
0x918: v918(0xa0) = CONST 
0x91a: v91a(0x10000000000000000000000000000000000000000) = SHL v918(0xa0) v916(0x1)
0x91b: v91b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v91a(0x10000000000000000000000000000000000000000) v914(0x1)
0x91c: v91c = AND v91b(0xffffffffffffffffffffffffffffffffffffffff) v892
0x91d: v91d(0x238ac933) = CONST 
0x922: v922(0x40) = CONST 
0x924: v924 = MLOAD v922(0x40)
0x926: v926(0xffffffff) = CONST 
0x92b: v92b(0x238ac933) = AND v926(0xffffffff) v91d(0x238ac933)
0x92c: v92c(0xe0) = CONST 
0x92e: v92e(0x238ac93300000000000000000000000000000000000000000000000000000000) = SHL v92c(0xe0) v92b(0x238ac933)
0x930: MSTORE v924 v92e(0x238ac93300000000000000000000000000000000000000000000000000000000)
0x931: v931(0x4) = CONST 
0x933: v933 = ADD v931(0x4) v924
0x934: v934(0x20) = CONST 
0x936: v936(0x40) = CONST 
0x938: v938 = MLOAD v936(0x40)
0x93b: v93b = SUB v933 v938
0x93f: v93f = EXTCODESIZE v91c
0x940: v940 = ISZERO v93f
0x942: v942 = ISZERO v940
0x943: v943(0x94b) = CONST 
0x946: JUMPI v943(0x94b) v942
----------------------------------

Begin block 0x947
prev = {'0x909'}, next = {}
----------------------------------
Block 0x947
0x947: v947(0x0) = CONST 
0x94a: REVERT v947(0x0) v947(0x0)
----------------------------------

Begin block 0x94b
prev = {'0x909'}, next = {'0x95f', '0x956'}
----------------------------------
Block 0x94b
0x94d: v94d = GAS 
0x94e: v94e = STATICCALL v94d v91c v938 v93b v938 v934(0x20)
0x94f: v94f = ISZERO v94e
0x951: v951 = ISZERO v94f
0x952: v952(0x95f) = CONST 
0x955: JUMPI v952(0x95f) v951
----------------------------------

Begin block 0x956
prev = {'0x94b'}, next = {}
----------------------------------
Block 0x956
0x956: v956 = RETURNDATASIZE 
0x957: v957(0x0) = CONST 
0x95a: RETURNDATACOPY v957(0x0) v957(0x0) v956
0x95b: v95b = RETURNDATASIZE 
0x95c: v95c(0x0) = CONST 
0x95e: REVERT v95c(0x0) v95b
----------------------------------

Begin block 0x95f
prev = {'0x94b'}, next = {'0x975', '0x971'}
----------------------------------
Block 0x95f
0x964: v964(0x40) = CONST 
0x966: v966 = MLOAD v964(0x40)
0x967: v967 = RETURNDATASIZE 
0x968: v968(0x20) = CONST 
0x96b: v96b = LT v967 v968(0x20)
0x96c: v96c = ISZERO v96b
0x96d: v96d(0x975) = CONST 
0x970: JUMPI v96d(0x975) v96c
----------------------------------

Begin block 0x971
prev = {'0x95f'}, next = {}
----------------------------------
Block 0x971
0x971: v971(0x0) = CONST 
0x974: REVERT v971(0x0) v971(0x0)
----------------------------------

Begin block 0x975
prev = {'0x95f'}, next = {'0x986', '0x9c6'}
----------------------------------
Block 0x975
0x977: v977 = MLOAD v966
0x978: v978(0x1) = CONST 
0x97a: v97a(0x1) = CONST 
0x97c: v97c(0xa0) = CONST 
0x97e: v97e(0x10000000000000000000000000000000000000000) = SHL v97c(0xa0) v97a(0x1)
0x97f: v97f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v97e(0x10000000000000000000000000000000000000000) v978(0x1)
0x980: v980 = AND v97f(0xffffffffffffffffffffffffffffffffffffffff) v977
0x981: v981 = EQ v980 v912
0x982: v982(0x9c6) = CONST 
0x985: JUMPI v982(0x9c6) v981
----------------------------------

Begin block 0x986
prev = {'0x975'}, next = {}
----------------------------------
Block 0x986
0x986: v986(0x40) = CONST 
0x989: v989 = MLOAD v986(0x40)
0x98a: v98a(0x461bcd) = CONST 
0x98e: v98e(0xe5) = CONST 
0x990: v990(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v98e(0xe5) v98a(0x461bcd)
0x992: MSTORE v989 v990(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x993: v993(0x20) = CONST 
0x995: v995(0x4) = CONST 
0x998: v998 = ADD v989 v995(0x4)
0x999: MSTORE v998 v993(0x20)
0x99a: v99a(0x11) = CONST 
0x99c: v99c(0x24) = CONST 
0x99f: v99f = ADD v989 v99c(0x24)
0x9a0: MSTORE v99f v99a(0x11)
0x9a1: v9a1(0x496e76616c6964207369676e6174757265) = CONST 
0x9b3: v9b3(0x78) = CONST 
0x9b5: v9b5(0x496e76616c6964207369676e6174757265000000000000000000000000000000) = SHL v9b3(0x78) v9a1(0x496e76616c6964207369676e6174757265)
0x9b6: v9b6(0x44) = CONST 
0x9b9: v9b9 = ADD v989 v9b6(0x44)
0x9ba: MSTORE v9b9 v9b5(0x496e76616c6964207369676e6174757265000000000000000000000000000000)
0x9bc: v9bc = MLOAD v986(0x40)
0x9c0: v9c0 = SUB v989 v9bc
0x9c1: v9c1(0x64) = CONST 
0x9c3: v9c3 = ADD v9c1(0x64) v9c0
0x9c5: REVERT v9bc v9c3
----------------------------------

Begin block 0x9c6
prev = {'0x975'}, next = {'0xa22', '0xa26'}
----------------------------------
Block 0x9c6
0x9c7: v9c7(0x2) = CONST 
0x9c9: v9c9 = SLOAD v9c7(0x2)
0x9ca: v9ca(0x4) = CONST 
0x9cd: v9cd = SLOAD v9ca(0x4)
0x9ce: v9ce(0x40) = CONST 
0x9d1: v9d1 = MLOAD v9ce(0x40)
0x9d2: v9d2(0x23b872dd) = CONST 
0x9d7: v9d7(0xe0) = CONST 
0x9d9: v9d9(0x23b872dd00000000000000000000000000000000000000000000000000000000) = SHL v9d7(0xe0) v9d2(0x23b872dd)
0x9db: MSTORE v9d1 v9d9(0x23b872dd00000000000000000000000000000000000000000000000000000000)
0x9dc: v9dc = CALLER 
0x9df: v9df = ADD v9d1 v9ca(0x4)
0x9e3: MSTORE v9df v9dc
0x9e4: v9e4(0x1) = CONST 
0x9e6: v9e6(0x1) = CONST 
0x9e8: v9e8(0xa0) = CONST 
0x9ea: v9ea(0x10000000000000000000000000000000000000000) = SHL v9e8(0xa0) v9e6(0x1)
0x9eb: v9eb(0xffffffffffffffffffffffffffffffffffffffff) = SUB v9ea(0x10000000000000000000000000000000000000000) v9e4(0x1)
0x9ee: v9ee = AND v9eb(0xffffffffffffffffffffffffffffffffffffffff) v9cd
0x9ef: v9ef(0x24) = CONST 
0x9f2: v9f2 = ADD v9d1 v9ef(0x24)
0x9f3: MSTORE v9f2 v9ee
0x9f4: v9f4(0x44) = CONST 
0x9f7: v9f7 = ADD v9d1 v9f4(0x44)
0x9fa: MSTORE v9f7 v134
0x9fb: v9fb = MLOAD v9ce(0x40)
0x9fd: v9fd = AND v9c9 v9eb(0xffffffffffffffffffffffffffffffffffffffff)
0x9ff: v9ff(0x23b872dd) = CONST 
0xa05: va05(0x64) = CONST 
0xa09: va09 = ADD v9d1 va05(0x64)
0xa0b: va0b(0x20) = CONST 
0xa13: va13 = SUB v9d1 v9fb
0xa14: va14 = ADD va13 va05(0x64)
0xa16: va16(0x0) = CONST 
0xa1a: va1a = EXTCODESIZE v9fd
0xa1b: va1b = ISZERO va1a
0xa1d: va1d = ISZERO va1b
0xa1e: va1e(0xa26) = CONST 
0xa21: JUMPI va1e(0xa26) va1d
----------------------------------

Begin block 0xa22
prev = {'0x9c6'}, next = {}
----------------------------------
Block 0xa22
0xa22: va22(0x0) = CONST 
0xa25: REVERT va22(0x0) va22(0x0)
----------------------------------

Begin block 0xa26
prev = {'0x9c6'}, next = {'0xa31', '0xa3a'}
----------------------------------
Block 0xa26
0xa28: va28 = GAS 
0xa29: va29 = CALL va28 v9fd va16(0x0) v9fb va14 v9fb va0b(0x20)
0xa2a: va2a = ISZERO va29
0xa2c: va2c = ISZERO va2a
0xa2d: va2d(0xa3a) = CONST 
0xa30: JUMPI va2d(0xa3a) va2c
----------------------------------

Begin block 0xa31
prev = {'0xa26'}, next = {}
----------------------------------
Block 0xa31
0xa31: va31 = RETURNDATASIZE 
0xa32: va32(0x0) = CONST 
0xa35: RETURNDATACOPY va32(0x0) va32(0x0) va31
0xa36: va36 = RETURNDATASIZE 
0xa37: va37(0x0) = CONST 
0xa39: REVERT va37(0x0) va36
----------------------------------

Begin block 0xa3a
prev = {'0xa26'}, next = {'0xa50', '0xa4c'}
----------------------------------
Block 0xa3a
0xa3f: va3f(0x40) = CONST 
0xa41: va41 = MLOAD va3f(0x40)
0xa42: va42 = RETURNDATASIZE 
0xa43: va43(0x20) = CONST 
0xa46: va46 = LT va42 va43(0x20)
0xa47: va47 = ISZERO va46
0xa48: va48(0xa50) = CONST 
0xa4b: JUMPI va48(0xa50) va47
----------------------------------

Begin block 0xa4c
prev = {'0xa3a'}, next = {}
----------------------------------
Block 0xa4c
0xa4c: va4c(0x0) = CONST 
0xa4f: REVERT va4c(0x0) va4c(0x0)
----------------------------------

Begin block 0xa50
prev = {'0xa3a'}, next = {'0xa57', '0xa8d'}
----------------------------------
Block 0xa50
0xa52: va52 = MLOAD va41
0xa53: va53(0xa8d) = CONST 
0xa56: JUMPI va53(0xa8d) va52
----------------------------------

Begin block 0xa57
prev = {'0xa50'}, next = {}
----------------------------------
Block 0xa57
0xa57: va57(0x40) = CONST 
0xa59: va59 = MLOAD va57(0x40)
0xa5a: va5a(0x461bcd) = CONST 
0xa5e: va5e(0xe5) = CONST 
0xa60: va60(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL va5e(0xe5) va5a(0x461bcd)
0xa62: MSTORE va59 va60(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xa63: va63(0x4) = CONST 
0xa65: va65 = ADD va63(0x4) va59
0xa68: va68(0x20) = CONST 
0xa6a: va6a = ADD va68(0x20) va65
0xa6d: va6d = SUB va6a va65
0xa6f: MSTORE va65 va6d
0xa70: va70(0x29) = CONST 
0xa73: MSTORE va6a va70(0x29)
0xa74: va74(0x20) = CONST 
0xa76: va76 = ADD va74(0x20) va6a
0xa78: va78(0x12a5) = CONST 
0xa7b: va7b(0x29) = CONST 
0xa7e: CODECOPY va76 va78(0x12a5) va7b(0x29)
0xa7f: va7f(0x40) = CONST 
0xa81: va81 = ADD va7f(0x40) va76
0xa85: va85(0x40) = CONST 
0xa87: va87 = MLOAD va85(0x40)
0xa8a: va8a = SUB va81 va87
0xa8c: REVERT va87 va8a
----------------------------------

Begin block 0xa8d
prev = {'0xa50'}, next = {'0xae7', '0xae3'}
----------------------------------
Block 0xa8d
0xa8e: va8e(0x2) = CONST 
0xa90: va90 = SLOAD va8e(0x2)
0xa91: va91(0x40) = CONST 
0xa94: va94 = MLOAD va91(0x40)
0xa95: va95(0x23b872dd) = CONST 
0xa9a: va9a(0xe0) = CONST 
0xa9c: va9c(0x23b872dd00000000000000000000000000000000000000000000000000000000) = SHL va9a(0xe0) va95(0x23b872dd)
0xa9e: MSTORE va94 va9c(0x23b872dd00000000000000000000000000000000000000000000000000000000)
0xa9f: va9f = CALLER 
0xaa0: vaa0(0x4) = CONST 
0xaa3: vaa3 = ADD va94 vaa0(0x4)
0xaa4: MSTORE vaa3 va9f
0xaa5: vaa5 = ADDRESS 
0xaa6: vaa6(0x24) = CONST 
0xaa9: vaa9 = ADD va94 vaa6(0x24)
0xaaa: MSTORE vaa9 vaa5
0xaab: vaab(0x44) = CONST 
0xaae: vaae = ADD va94 vaab(0x44)
0xab1: MSTORE vaae v12e
0xab3: vab3 = MLOAD va91(0x40)
0xab4: vab4(0x1) = CONST 
0xab6: vab6(0x1) = CONST 
0xab8: vab8(0xa0) = CONST 
0xaba: vaba(0x10000000000000000000000000000000000000000) = SHL vab8(0xa0) vab6(0x1)
0xabb: vabb(0xffffffffffffffffffffffffffffffffffffffff) = SUB vaba(0x10000000000000000000000000000000000000000) vab4(0x1)
0xabe: vabe = AND va90 vabb(0xffffffffffffffffffffffffffffffffffffffff)
0xac0: vac0(0x23b872dd) = CONST 
0xac6: vac6(0x64) = CONST 
0xaca: vaca = ADD va94 vac6(0x64)
0xacc: vacc(0x20) = CONST 
0xad4: vad4 = SUB va94 vab3
0xad5: vad5 = ADD vad4 vac6(0x64)
0xad7: vad7(0x0) = CONST 
0xadb: vadb = EXTCODESIZE vabe
0xadc: vadc = ISZERO vadb
0xade: vade = ISZERO vadc
0xadf: vadf(0xae7) = CONST 
0xae2: JUMPI vadf(0xae7) vade
----------------------------------

Begin block 0xae3
prev = {'0xa8d'}, next = {}
----------------------------------
Block 0xae3
0xae3: vae3(0x0) = CONST 
0xae6: REVERT vae3(0x0) vae3(0x0)
----------------------------------

Begin block 0xae7
prev = {'0xa8d'}, next = {'0xaf2', '0xafb'}
----------------------------------
Block 0xae7
0xae9: vae9 = GAS 
0xaea: vaea = CALL vae9 vabe vad7(0x0) vab3 vad5 vab3 vacc(0x20)
0xaeb: vaeb = ISZERO vaea
0xaed: vaed = ISZERO vaeb
0xaee: vaee(0xafb) = CONST 
0xaf1: JUMPI vaee(0xafb) vaed
----------------------------------

Begin block 0xaf2
prev = {'0xae7'}, next = {}
----------------------------------
Block 0xaf2
0xaf2: vaf2 = RETURNDATASIZE 
0xaf3: vaf3(0x0) = CONST 
0xaf6: RETURNDATACOPY vaf3(0x0) vaf3(0x0) vaf2
0xaf7: vaf7 = RETURNDATASIZE 
0xaf8: vaf8(0x0) = CONST 
0xafa: REVERT vaf8(0x0) vaf7
----------------------------------

Begin block 0xafb
prev = {'0xae7'}, next = {'0xb11', '0xb0d'}
----------------------------------
Block 0xafb
0xb00: vb00(0x40) = CONST 
0xb02: vb02 = MLOAD vb00(0x40)
0xb03: vb03 = RETURNDATASIZE 
0xb04: vb04(0x20) = CONST 
0xb07: vb07 = LT vb03 vb04(0x20)
0xb08: vb08 = ISZERO vb07
0xb09: vb09(0xb11) = CONST 
0xb0c: JUMPI vb09(0xb11) vb08
----------------------------------

Begin block 0xb0d
prev = {'0xafb'}, next = {}
----------------------------------
Block 0xb0d
0xb0d: vb0d(0x0) = CONST 
0xb10: REVERT vb0d(0x0) vb0d(0x0)
----------------------------------

Begin block 0xb11
prev = {'0xafb'}, next = {'0xb18', '0xb58'}
----------------------------------
Block 0xb11
0xb13: vb13 = MLOAD vb02
0xb14: vb14(0xb58) = CONST 
0xb17: JUMPI vb14(0xb58) vb13
----------------------------------

Begin block 0xb18
prev = {'0xb11'}, next = {}
----------------------------------
Block 0xb18
0xb18: vb18(0x40) = CONST 
0xb1b: vb1b = MLOAD vb18(0x40)
0xb1c: vb1c(0x461bcd) = CONST 
0xb20: vb20(0xe5) = CONST 
0xb22: vb22(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vb20(0xe5) vb1c(0x461bcd)
0xb24: MSTORE vb1b vb22(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xb25: vb25(0x20) = CONST 
0xb27: vb27(0x4) = CONST 
0xb2a: vb2a = ADD vb1b vb27(0x4)
0xb2b: MSTORE vb2a vb25(0x20)
0xb2c: vb2c(0x11) = CONST 
0xb2e: vb2e(0x24) = CONST 
0xb31: vb31 = ADD vb1b vb2e(0x24)
0xb32: MSTORE vb31 vb2c(0x11)
0xb33: vb33(0x141d5b1b081d1bdad95b8819985a5b1959) = CONST 
0xb45: vb45(0x7a) = CONST 
0xb47: vb47(0x50756c6c20746f6b656e206661696c6564000000000000000000000000000000) = SHL vb45(0x7a) vb33(0x141d5b1b081d1bdad95b8819985a5b1959)
0xb48: vb48(0x44) = CONST 
0xb4b: vb4b = ADD vb1b vb48(0x44)
0xb4c: MSTORE vb4b vb47(0x50756c6c20746f6b656e206661696c6564000000000000000000000000000000)
0xb4e: vb4e = MLOAD vb18(0x40)
0xb52: vb52 = SUB vb1b vb4e
0xb53: vb53(0x64) = CONST 
0xb55: vb55 = ADD vb53(0x64) vb52
0xb57: REVERT vb4e vb55
----------------------------------

Begin block 0xb58
prev = {'0xb11'}, next = {'0xb9f', '0xba3'}
----------------------------------
Block 0xb58
0xb59: vb59(0x3) = CONST 
0xb5b: vb5b = SLOAD vb59(0x3)
0xb5c: vb5c(0x40) = CONST 
0xb5f: vb5f = MLOAD vb5c(0x40)
0xb60: vb60(0x70a08231) = CONST 
0xb65: vb65(0xe0) = CONST 
0xb67: vb67(0x70a0823100000000000000000000000000000000000000000000000000000000) = SHL vb65(0xe0) vb60(0x70a08231)
0xb69: MSTORE vb5f vb67(0x70a0823100000000000000000000000000000000000000000000000000000000)
0xb6a: vb6a = ADDRESS 
0xb6b: vb6b(0x4) = CONST 
0xb6e: vb6e = ADD vb5f vb6b(0x4)
0xb6f: MSTORE vb6e vb6a
0xb71: vb71 = MLOAD vb5c(0x40)
0xb72: vb72(0x0) = CONST 
0xb75: vb75(0x1) = CONST 
0xb77: vb77(0x1) = CONST 
0xb79: vb79(0xa0) = CONST 
0xb7b: vb7b(0x10000000000000000000000000000000000000000) = SHL vb79(0xa0) vb77(0x1)
0xb7c: vb7c(0xffffffffffffffffffffffffffffffffffffffff) = SUB vb7b(0x10000000000000000000000000000000000000000) vb75(0x1)
0xb7d: vb7d = AND vb7c(0xffffffffffffffffffffffffffffffffffffffff) vb5b
0xb7f: vb7f(0x70a08231) = CONST 
0xb85: vb85(0x24) = CONST 
0xb89: vb89 = ADD vb5f vb85(0x24)
0xb8b: vb8b(0x20) = CONST 
0xb92: vb92 = SUB vb5f vb71
0xb93: vb93 = ADD vb92 vb85(0x24)
0xb97: vb97 = EXTCODESIZE vb7d
0xb98: vb98 = ISZERO vb97
0xb9a: vb9a = ISZERO vb98
0xb9b: vb9b(0xba3) = CONST 
0xb9e: JUMPI vb9b(0xba3) vb9a
----------------------------------

Begin block 0xb9f
prev = {'0xb58'}, next = {}
----------------------------------
Block 0xb9f
0xb9f: vb9f(0x0) = CONST 
0xba2: REVERT vb9f(0x0) vb9f(0x0)
----------------------------------

Begin block 0xba3
prev = {'0xb58'}, next = {'0xbae', '0xbb7'}
----------------------------------
Block 0xba3
0xba5: vba5 = GAS 
0xba6: vba6 = STATICCALL vba5 vb7d vb71 vb93 vb71 vb8b(0x20)
0xba7: vba7 = ISZERO vba6
0xba9: vba9 = ISZERO vba7
0xbaa: vbaa(0xbb7) = CONST 
0xbad: JUMPI vbaa(0xbb7) vba9
----------------------------------

Begin block 0xbae
prev = {'0xba3'}, next = {}
----------------------------------
Block 0xbae
0xbae: vbae = RETURNDATASIZE 
0xbaf: vbaf(0x0) = CONST 
0xbb2: RETURNDATACOPY vbaf(0x0) vbaf(0x0) vbae
0xbb3: vbb3 = RETURNDATASIZE 
0xbb4: vbb4(0x0) = CONST 
0xbb6: REVERT vbb4(0x0) vbb3
----------------------------------

Begin block 0xbb7
prev = {'0xba3'}, next = {'0xbcd', '0xbc9'}
----------------------------------
Block 0xbb7
0xbbc: vbbc(0x40) = CONST 
0xbbe: vbbe = MLOAD vbbc(0x40)
0xbbf: vbbf = RETURNDATASIZE 
0xbc0: vbc0(0x20) = CONST 
0xbc3: vbc3 = LT vbbf vbc0(0x20)
0xbc4: vbc4 = ISZERO vbc3
0xbc5: vbc5(0xbcd) = CONST 
0xbc8: JUMPI vbc5(0xbcd) vbc4
----------------------------------

Begin block 0xbc9
prev = {'0xbb7'}, next = {}
----------------------------------
Block 0xbc9
0xbc9: vbc9(0x0) = CONST 
0xbcc: REVERT vbc9(0x0) vbc9(0x0)
----------------------------------

Begin block 0xbcd
prev = {'0xbb7'}, next = {'0xc20', '0xc1c'}
----------------------------------
Block 0xbcd
0xbcf: vbcf = MLOAD vbbe
0xbd0: vbd0(0x3) = CONST 
0xbd2: vbd2 = SLOAD vbd0(0x3)
0xbd3: vbd3(0x40) = CONST 
0xbd6: vbd6 = MLOAD vbd3(0x40)
0xbd7: vbd7(0x140e25ad) = CONST 
0xbdc: vbdc(0xe3) = CONST 
0xbde: vbde(0xa0712d6800000000000000000000000000000000000000000000000000000000) = SHL vbdc(0xe3) vbd7(0x140e25ad)
0xbe0: MSTORE vbd6 vbde(0xa0712d6800000000000000000000000000000000000000000000000000000000)
0xbe1: vbe1(0x4) = CONST 
0xbe4: vbe4 = ADD vbd6 vbe1(0x4)
0xbe7: MSTORE vbe4 v12e
0xbe9: vbe9 = MLOAD vbd3(0x40)
0xbed: vbed(0x1) = CONST 
0xbef: vbef(0x1) = CONST 
0xbf1: vbf1(0xa0) = CONST 
0xbf3: vbf3(0x10000000000000000000000000000000000000000) = SHL vbf1(0xa0) vbef(0x1)
0xbf4: vbf4(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbf3(0x10000000000000000000000000000000000000000) vbed(0x1)
0xbf7: vbf7 = AND vbd2 vbf4(0xffffffffffffffffffffffffffffffffffffffff)
0xbf9: vbf9(0xa0712d68) = CONST 
0xbff: vbff(0x24) = CONST 
0xc03: vc03 = ADD vbd6 vbff(0x24)
0xc05: vc05(0x20) = CONST 
0xc0d: vc0d = SUB vbd6 vbe9
0xc0e: vc0e = ADD vc0d vbff(0x24)
0xc10: vc10(0x0) = CONST 
0xc14: vc14 = EXTCODESIZE vbf7
0xc15: vc15 = ISZERO vc14
0xc17: vc17 = ISZERO vc15
0xc18: vc18(0xc20) = CONST 
0xc1b: JUMPI vc18(0xc20) vc17
----------------------------------

Begin block 0xc1c
prev = {'0xbcd'}, next = {}
----------------------------------
Block 0xc1c
0xc1c: vc1c(0x0) = CONST 
0xc1f: REVERT vc1c(0x0) vc1c(0x0)
----------------------------------

Begin block 0xc20
prev = {'0xbcd'}, next = {'0xc2b', '0xc34'}
----------------------------------
Block 0xc20
0xc22: vc22 = GAS 
0xc23: vc23 = CALL vc22 vbf7 vc10(0x0) vbe9 vc0e vbe9 vc05(0x20)
0xc24: vc24 = ISZERO vc23
0xc26: vc26 = ISZERO vc24
0xc27: vc27(0xc34) = CONST 
0xc2a: JUMPI vc27(0xc34) vc26
----------------------------------

Begin block 0xc2b
prev = {'0xc20'}, next = {}
----------------------------------
Block 0xc2b
0xc2b: vc2b = RETURNDATASIZE 
0xc2c: vc2c(0x0) = CONST 
0xc2f: RETURNDATACOPY vc2c(0x0) vc2c(0x0) vc2b
0xc30: vc30 = RETURNDATASIZE 
0xc31: vc31(0x0) = CONST 
0xc33: REVERT vc31(0x0) vc30
----------------------------------

Begin block 0xc34
prev = {'0xc20'}, next = {'0xc46', '0xc4a'}
----------------------------------
Block 0xc34
0xc39: vc39(0x40) = CONST 
0xc3b: vc3b = MLOAD vc39(0x40)
0xc3c: vc3c = RETURNDATASIZE 
0xc3d: vc3d(0x20) = CONST 
0xc40: vc40 = LT vc3c vc3d(0x20)
0xc41: vc41 = ISZERO vc40
0xc42: vc42(0xc4a) = CONST 
0xc45: JUMPI vc42(0xc4a) vc41
----------------------------------

Begin block 0xc46
prev = {'0xc34'}, next = {}
----------------------------------
Block 0xc46
0xc46: vc46(0x0) = CONST 
0xc49: REVERT vc46(0x0) vc46(0x0)
----------------------------------

Begin block 0xc4a
prev = {'0xc34'}, next = {'0xc52', '0xc97'}
----------------------------------
Block 0xc4a
0xc4c: vc4c = MLOAD vc3b
0xc4d: vc4d = ISZERO vc4c
0xc4e: vc4e(0xc97) = CONST 
0xc51: JUMPI vc4e(0xc97) vc4d
----------------------------------

Begin block 0xc52
prev = {'0xc4a'}, next = {}
----------------------------------
Block 0xc52
0xc52: vc52(0x40) = CONST 
0xc55: vc55 = MLOAD vc52(0x40)
0xc56: vc56(0x461bcd) = CONST 
0xc5a: vc5a(0xe5) = CONST 
0xc5c: vc5c(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vc5a(0xe5) vc56(0x461bcd)
0xc5e: MSTORE vc55 vc5c(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xc5f: vc5f(0x20) = CONST 
0xc61: vc61(0x4) = CONST 
0xc64: vc64 = ADD vc55 vc61(0x4)
0xc65: MSTORE vc64 vc5f(0x20)
0xc66: vc66(0x16) = CONST 
0xc68: vc68(0x24) = CONST 
0xc6b: vc6b = ADD vc55 vc68(0x24)
0xc6c: MSTORE vc6b vc66(0x16)
0xc6d: vc6d(0x1d5b99195c9b1e5a5b99c81b5a5b9d0819985a5b1959) = CONST 
0xc84: vc84(0x52) = CONST 
0xc86: vc86(0x756e6465726c79696e67206d696e74206661696c656400000000000000000000) = SHL vc84(0x52) vc6d(0x1d5b99195c9b1e5a5b99c81b5a5b9d0819985a5b1959)
0xc87: vc87(0x44) = CONST 
0xc8a: vc8a = ADD vc55 vc87(0x44)
0xc8b: MSTORE vc8a vc86(0x756e6465726c79696e67206d696e74206661696c656400000000000000000000)
0xc8d: vc8d = MLOAD vc52(0x40)
0xc91: vc91 = SUB vc55 vc8d
0xc92: vc92(0x64) = CONST 
0xc94: vc94 = ADD vc92(0x64) vc91
0xc96: REVERT vc8d vc94
----------------------------------

Begin block 0xc97
prev = {'0xc4a'}, next = {'0xcde', '0xce2'}
----------------------------------
Block 0xc97
0xc98: vc98(0x3) = CONST 
0xc9a: vc9a = SLOAD vc98(0x3)
0xc9b: vc9b(0x40) = CONST 
0xc9e: vc9e = MLOAD vc9b(0x40)
0xc9f: vc9f(0x70a08231) = CONST 
0xca4: vca4(0xe0) = CONST 
0xca6: vca6(0x70a0823100000000000000000000000000000000000000000000000000000000) = SHL vca4(0xe0) vc9f(0x70a08231)
0xca8: MSTORE vc9e vca6(0x70a0823100000000000000000000000000000000000000000000000000000000)
0xca9: vca9 = ADDRESS 
0xcaa: vcaa(0x4) = CONST 
0xcad: vcad = ADD vc9e vcaa(0x4)
0xcae: MSTORE vcad vca9
0xcb0: vcb0 = MLOAD vc9b(0x40)
0xcb1: vcb1(0x0) = CONST 
0xcb4: vcb4(0x1) = CONST 
0xcb6: vcb6(0x1) = CONST 
0xcb8: vcb8(0xa0) = CONST 
0xcba: vcba(0x10000000000000000000000000000000000000000) = SHL vcb8(0xa0) vcb6(0x1)
0xcbb: vcbb(0xffffffffffffffffffffffffffffffffffffffff) = SUB vcba(0x10000000000000000000000000000000000000000) vcb4(0x1)
0xcbc: vcbc = AND vcbb(0xffffffffffffffffffffffffffffffffffffffff) vc9a
0xcbe: vcbe(0x70a08231) = CONST 
0xcc4: vcc4(0x24) = CONST 
0xcc8: vcc8 = ADD vc9e vcc4(0x24)
0xcca: vcca(0x20) = CONST 
0xcd1: vcd1 = SUB vc9e vcb0
0xcd2: vcd2 = ADD vcd1 vcc4(0x24)
0xcd6: vcd6 = EXTCODESIZE vcbc
0xcd7: vcd7 = ISZERO vcd6
0xcd9: vcd9 = ISZERO vcd7
0xcda: vcda(0xce2) = CONST 
0xcdd: JUMPI vcda(0xce2) vcd9
----------------------------------

Begin block 0xcde
prev = {'0xc97'}, next = {}
----------------------------------
Block 0xcde
0xcde: vcde(0x0) = CONST 
0xce1: REVERT vcde(0x0) vcde(0x0)
----------------------------------

Begin block 0xce2
prev = {'0xc97'}, next = {'0xced', '0xcf6'}
----------------------------------
Block 0xce2
0xce4: vce4 = GAS 
0xce5: vce5 = STATICCALL vce4 vcbc vcb0 vcd2 vcb0 vcca(0x20)
0xce6: vce6 = ISZERO vce5
0xce8: vce8 = ISZERO vce6
0xce9: vce9(0xcf6) = CONST 
0xcec: JUMPI vce9(0xcf6) vce8
----------------------------------

Begin block 0xced
prev = {'0xce2'}, next = {}
----------------------------------
Block 0xced
0xced: vced = RETURNDATASIZE 
0xcee: vcee(0x0) = CONST 
0xcf1: RETURNDATACOPY vcee(0x0) vcee(0x0) vced
0xcf2: vcf2 = RETURNDATASIZE 
0xcf3: vcf3(0x0) = CONST 
0xcf5: REVERT vcf3(0x0) vcf2
----------------------------------

Begin block 0xcf6
prev = {'0xce2'}, next = {'0xd0c', '0xd08'}
----------------------------------
Block 0xcf6
0xcfb: vcfb(0x40) = CONST 
0xcfd: vcfd = MLOAD vcfb(0x40)
0xcfe: vcfe = RETURNDATASIZE 
0xcff: vcff(0x20) = CONST 
0xd02: vd02 = LT vcfe vcff(0x20)
0xd03: vd03 = ISZERO vd02
0xd04: vd04(0xd0c) = CONST 
0xd07: JUMPI vd04(0xd0c) vd03
----------------------------------

Begin block 0xd08
prev = {'0xcf6'}, next = {}
----------------------------------
Block 0xd08
0xd08: vd08(0x0) = CONST 
0xd0b: REVERT vd08(0x0) vd08(0x0)
----------------------------------

Begin block 0xd0c
prev = {'0xcf6'}, next = {'0xd22'}
----------------------------------
Block 0xd0c
0xd0e: vd0e = MLOAD vcfd
0xd11: vd11(0x0) = CONST 
0xd13: vd13(0xd22) = CONST 
0xd18: vd18(0xffffffff) = CONST 
0xd1d: vd1d(0x10fe) = CONST 
0xd20: vd20(0x10fe) = AND vd1d(0x10fe) vd18(0xffffffff)
0xd21: vd21_0 = CALLPRIVATE vd20(0x10fe) vbcf vd0e vd13(0xd22)
----------------------------------

Begin block 0xd22
prev = {'0xd0c'}, next = {'0xd75', '0xd79'}
----------------------------------
Block 0xd22
0xd23: vd23(0x3) = CONST 
0xd25: vd25 = SLOAD vd23(0x3)
0xd26: vd26(0x40) = CONST 
0xd29: vd29 = MLOAD vd26(0x40)
0xd2a: vd2a(0xa9059cbb) = CONST 
0xd2f: vd2f(0xe0) = CONST 
0xd31: vd31(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = SHL vd2f(0xe0) vd2a(0xa9059cbb)
0xd33: MSTORE vd29 vd31(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0xd34: vd34 = CALLER 
0xd35: vd35(0x4) = CONST 
0xd38: vd38 = ADD vd29 vd35(0x4)
0xd39: MSTORE vd38 vd34
0xd3a: vd3a(0x24) = CONST 
0xd3d: vd3d = ADD vd29 vd3a(0x24)
0xd40: MSTORE vd3d vd21_0
0xd42: vd42 = MLOAD vd26(0x40)
0xd46: vd46(0x1) = CONST 
0xd48: vd48(0x1) = CONST 
0xd4a: vd4a(0xa0) = CONST 
0xd4c: vd4c(0x10000000000000000000000000000000000000000) = SHL vd4a(0xa0) vd48(0x1)
0xd4d: vd4d(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd4c(0x10000000000000000000000000000000000000000) vd46(0x1)
0xd50: vd50 = AND vd25 vd4d(0xffffffffffffffffffffffffffffffffffffffff)
0xd52: vd52(0xa9059cbb) = CONST 
0xd58: vd58(0x44) = CONST 
0xd5c: vd5c = ADD vd29 vd58(0x44)
0xd5e: vd5e(0x20) = CONST 
0xd66: vd66 = SUB vd29 vd42
0xd67: vd67 = ADD vd66 vd58(0x44)
0xd69: vd69(0x0) = CONST 
0xd6d: vd6d = EXTCODESIZE vd50
0xd6e: vd6e = ISZERO vd6d
0xd70: vd70 = ISZERO vd6e
0xd71: vd71(0xd79) = CONST 
0xd74: JUMPI vd71(0xd79) vd70
----------------------------------

Begin block 0xd75
prev = {'0xd22'}, next = {}
----------------------------------
Block 0xd75
0xd75: vd75(0x0) = CONST 
0xd78: REVERT vd75(0x0) vd75(0x0)
----------------------------------

Begin block 0xd79
prev = {'0xd22'}, next = {'0xd84', '0xd8d'}
----------------------------------
Block 0xd79
0xd7b: vd7b = GAS 
0xd7c: vd7c = CALL vd7b vd50 vd69(0x0) vd42 vd67 vd42 vd5e(0x20)
0xd7d: vd7d = ISZERO vd7c
0xd7f: vd7f = ISZERO vd7d
0xd80: vd80(0xd8d) = CONST 
0xd83: JUMPI vd80(0xd8d) vd7f
----------------------------------

Begin block 0xd84
prev = {'0xd79'}, next = {}
----------------------------------
Block 0xd84
0xd84: vd84 = RETURNDATASIZE 
0xd85: vd85(0x0) = CONST 
0xd88: RETURNDATACOPY vd85(0x0) vd85(0x0) vd84
0xd89: vd89 = RETURNDATASIZE 
0xd8a: vd8a(0x0) = CONST 
0xd8c: REVERT vd8a(0x0) vd89
----------------------------------

Begin block 0xd8d
prev = {'0xd79'}, next = {'0xd9f', '0xda3'}
----------------------------------
Block 0xd8d
0xd92: vd92(0x40) = CONST 
0xd94: vd94 = MLOAD vd92(0x40)
0xd95: vd95 = RETURNDATASIZE 
0xd96: vd96(0x20) = CONST 
0xd99: vd99 = LT vd95 vd96(0x20)
0xd9a: vd9a = ISZERO vd99
0xd9b: vd9b(0xda3) = CONST 
0xd9e: JUMPI vd9b(0xda3) vd9a
----------------------------------

Begin block 0xd9f
prev = {'0xd8d'}, next = {}
----------------------------------
Block 0xd9f
0xd9f: vd9f(0x0) = CONST 
0xda2: REVERT vd9f(0x0) vd9f(0x0)
----------------------------------

Begin block 0xda3
prev = {'0xd8d'}, next = {'0xdaa', '0xdf6'}
----------------------------------
Block 0xda3
0xda5: vda5 = MLOAD vd94
0xda6: vda6(0xdf6) = CONST 
0xda9: JUMPI vda6(0xdf6) vda5
----------------------------------

Begin block 0xdaa
prev = {'0xda3'}, next = {}
----------------------------------
Block 0xdaa
0xdaa: vdaa(0x40) = CONST 
0xdad: vdad = MLOAD vdaa(0x40)
0xdae: vdae(0x461bcd) = CONST 
0xdb2: vdb2(0xe5) = CONST 
0xdb4: vdb4(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vdb2(0xe5) vdae(0x461bcd)
0xdb6: MSTORE vdad vdb4(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xdb7: vdb7(0x20) = CONST 
0xdb9: vdb9(0x4) = CONST 
0xdbc: vdbc = ADD vdad vdb9(0x4)
0xdbd: MSTORE vdbc vdb7(0x20)
0xdbe: vdbe(0x1a) = CONST 
0xdc0: vdc0(0x24) = CONST 
0xdc3: vdc3 = ADD vdad vdc0(0x24)
0xdc4: MSTORE vdc3 vdbe(0x1a)
0xdc5: vdc5(0x546865207472616e73666572206d6574686f64206661696c6564000000000000) = CONST 
0xde6: vde6(0x44) = CONST 
0xde9: vde9 = ADD vdad vde6(0x44)
0xdea: MSTORE vde9 vdc5(0x546865207472616e73666572206d6574686f64206661696c6564000000000000)
0xdec: vdec = MLOAD vdaa(0x40)
0xdf0: vdf0 = SUB vdad vdec
0xdf1: vdf1(0x64) = CONST 
0xdf3: vdf3 = ADD vdf1(0x64) vdf0
0xdf5: REVERT vdec vdf3
----------------------------------

Begin block 0xdf6
prev = {'0xda3'}, next = {'0xe3b', '0x81d0x116'}
----------------------------------
Block 0xdf6
0xdf7: vdf7(0x40) = CONST 
0xdfa: vdfa = MLOAD vdf7(0x40)
0xdfd: MSTORE vdfa vd21_0
0xdff: vdff = MLOAD vdf7(0x40)
0xe00: ve00 = CALLER 
0xe02: ve02(0xf6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885) = CONST 
0xe27: ve27 = SUB vdfa vdff
0xe28: ve28(0x20) = CONST 
0xe2a: ve2a = ADD ve28(0x20) ve27
0xe2c: LOG2 vdff ve2a ve02(0xf6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885) ve00
0xe32: ve32(0x1) = CONST 
0xe34: ve34 = SLOAD ve32(0x1)
0xe36: ve36 = EQ v82a ve34
0xe37: ve37(0x81d) = CONST 
0xe3a: JUMPI ve37(0x81d) ve36
----------------------------------

Begin block 0xe3b
prev = {'0xdf6'}, next = {}
----------------------------------
Block 0xe3b
0xe3b: ve3b(0x40) = CONST 
0xe3e: ve3e = MLOAD ve3b(0x40)
0xe3f: ve3f(0x461bcd) = CONST 
0xe43: ve43(0xe5) = CONST 
0xe45: ve45(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL ve43(0xe5) ve3f(0x461bcd)
0xe47: MSTORE ve3e ve45(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xe48: ve48(0x20) = CONST 
0xe4a: ve4a(0x4) = CONST 
0xe4d: ve4d = ADD ve3e ve4a(0x4)
0xe4e: MSTORE ve4d ve48(0x20)
0xe4f: ve4f(0x1f) = CONST 
0xe51: ve51(0x24) = CONST 
0xe54: ve54 = ADD ve3e ve51(0x24)
0xe55: MSTORE ve54 ve4f(0x1f)
0xe56: ve56(0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00) = CONST 
0xe77: ve77(0x44) = CONST 
0xe7a: ve7a = ADD ve3e ve77(0x44)
0xe7b: MSTORE ve7a ve56(0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00)
0xe7d: ve7d = MLOAD ve3b(0x40)
0xe81: ve81 = SUB ve3e ve7d
0xe82: ve82(0x64) = CONST 
0xe84: ve84 = ADD ve82(0x64) ve81
0xe86: REVERT ve7d ve84
----------------------------------

Begin block 0xe87
prev = {'0x1a8'}, next = {'0xe8f'}
----------------------------------
Block 0xe87
0xe88: ve88(0xe8f) = CONST 
0xe8b: ve8b(0xf8a) = CONST 
0xe8e: ve8e_0 = CALLPRIVATE ve8b(0xf8a) ve88(0xe8f)
----------------------------------

Begin block 0xe8f
prev = {'0xe87'}, next = {'0xe94', '0xee0'}
----------------------------------
Block 0xe8f
0xe90: ve90(0xee0) = CONST 
0xe93: JUMPI ve90(0xee0) ve8e_0
----------------------------------

Begin block 0xe94
prev = {'0xe8f'}, next = {}
----------------------------------
Block 0xe94
0xe94: ve94(0x40) = CONST 
0xe97: ve97 = MLOAD ve94(0x40)
0xe98: ve98(0x461bcd) = CONST 
0xe9c: ve9c(0xe5) = CONST 
0xe9e: ve9e(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL ve9c(0xe5) ve98(0x461bcd)
0xea0: MSTORE ve97 ve9e(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xea1: vea1(0x20) = CONST 
0xea3: vea3(0x4) = CONST 
0xea6: vea6 = ADD ve97 vea3(0x4)
0xea9: MSTORE vea6 vea1(0x20)
0xeaa: veaa(0x24) = CONST 
0xead: vead = ADD ve97 veaa(0x24)
0xeae: MSTORE vead vea1(0x20)
0xeaf: veaf(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0xed0: ved0(0x44) = CONST 
0xed3: ved3 = ADD ve97 ved0(0x44)
0xed4: MSTORE ved3 veaf(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xed6: ved6 = MLOAD ve94(0x40)
0xeda: veda = SUB ve97 ved6
0xedb: vedb(0x64) = CONST 
0xedd: vedd = ADD vedb(0x64) veda
0xedf: REVERT ved6 vedd
----------------------------------

Begin block 0xee0
prev = {'0xe8f'}, next = {'0xeef', '0xef3'}
----------------------------------
Block 0xee0
0xee1: vee1(0x1) = CONST 
0xee3: vee3(0x1) = CONST 
0xee5: vee5(0xa0) = CONST 
0xee7: vee7(0x10000000000000000000000000000000000000000) = SHL vee5(0xa0) vee3(0x1)
0xee8: vee8(0xffffffffffffffffffffffffffffffffffffffff) = SUB vee7(0x10000000000000000000000000000000000000000) vee1(0x1)
0xeea: veea = AND v1b3 vee8(0xffffffffffffffffffffffffffffffffffffffff)
0xeeb: veeb(0xef3) = CONST 
0xeee: JUMPI veeb(0xef3) veea
----------------------------------

Begin block 0xeef
prev = {'0xee0'}, next = {}
----------------------------------
Block 0xeef
0xeef: veef(0x0) = CONST 
0xef2: REVERT veef(0x0) veef(0x0)
----------------------------------

Begin block 0xef3
prev = {'0xee0'}, next = {'0x1140x192'}
----------------------------------
Block 0xef3
0xef4: vef4(0x4) = CONST 
0xef6: vef6 = SLOAD vef4(0x4)
0xef7: vef7(0x40) = CONST 
0xefa: vefa = MLOAD vef7(0x40)
0xefb: vefb(0x1) = CONST 
0xefd: vefd(0x1) = CONST 
0xeff: veff(0xa0) = CONST 
0xf01: vf01(0x10000000000000000000000000000000000000000) = SHL veff(0xa0) vefd(0x1)
0xf02: vf02(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf01(0x10000000000000000000000000000000000000000) vefb(0x1)
0xf05: vf05 = AND vf02(0xffffffffffffffffffffffffffffffffffffffff) vef6
0xf07: MSTORE vefa vf05
0xf0a: vf0a = AND v1b3 vf02(0xffffffffffffffffffffffffffffffffffffffff)
0xf0b: vf0b(0x20) = CONST 
0xf0e: vf0e = ADD vefa vf0b(0x20)
0xf0f: MSTORE vf0e vf0a
0xf11: vf11 = MLOAD vef7(0x40)
0xf12: vf12(0x6a47b816181bfcd232101080f856b7d3af3792c208ccca6d558866195917d6ec) = CONST 
0xf36: vf36 = SUB vefa vf11
0xf39: vf39 = ADD vef7(0x40) vf36
0xf3b: LOG1 vf11 vf39 vf12(0x6a47b816181bfcd232101080f856b7d3af3792c208ccca6d558866195917d6ec)
0xf3c: vf3c(0x4) = CONST 
0xf3f: vf3f = SLOAD vf3c(0x4)
0xf40: vf40(0x1) = CONST 
0xf42: vf42(0x1) = CONST 
0xf44: vf44(0xa0) = CONST 
0xf46: vf46(0x10000000000000000000000000000000000000000) = SHL vf44(0xa0) vf42(0x1)
0xf47: vf47(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf46(0x10000000000000000000000000000000000000000) vf40(0x1)
0xf48: vf48(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vf47(0xffffffffffffffffffffffffffffffffffffffff)
0xf49: vf49 = AND vf48(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) vf3f
0xf4a: vf4a(0x1) = CONST 
0xf4c: vf4c(0x1) = CONST 
0xf4e: vf4e(0xa0) = CONST 
0xf50: vf50(0x10000000000000000000000000000000000000000) = SHL vf4e(0xa0) vf4c(0x1)
0xf51: vf51(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf50(0x10000000000000000000000000000000000000000) vf4a(0x1)
0xf55: vf55 = AND vf51(0xffffffffffffffffffffffffffffffffffffffff) v1b3
0xf59: vf59 = OR vf55 vf49
0xf5b: SSTORE vf3c(0x4) vf59
0xf5c: JUMP v193(0x114)
----------------------------------

Begin block 0xf5d
prev = {'0x1b8'}, next = {'0x1c00x1b8'}
----------------------------------
Block 0xf5d
0xf5e: vf5e(0x3) = CONST 
0xf60: vf60 = SLOAD vf5e(0x3)
0xf61: vf61(0x1) = CONST 
0xf63: vf63(0x1) = CONST 
0xf65: vf65(0xa0) = CONST 
0xf67: vf67(0x10000000000000000000000000000000000000000) = SHL vf65(0xa0) vf63(0x1)
0xf68: vf68(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf67(0x10000000000000000000000000000000000000000) vf61(0x1)
0xf69: vf69 = AND vf68(0xffffffffffffffffffffffffffffffffffffffff) vf60
0xf6b: JUMP v1b9(0x1c0)
----------------------------------

Begin block 0xf6c
prev = {'0x1dc'}, next = {'0x1c00x1dc'}
----------------------------------
Block 0xf6c
0xf6d: vf6d(0x4) = CONST 
0xf6f: vf6f = SLOAD vf6d(0x4)
0xf70: vf70(0x1) = CONST 
0xf72: vf72(0x1) = CONST 
0xf74: vf74(0xa0) = CONST 
0xf76: vf76(0x10000000000000000000000000000000000000000) = SHL vf74(0xa0) vf72(0x1)
0xf77: vf77(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf76(0x10000000000000000000000000000000000000000) vf70(0x1)
0xf78: vf78 = AND vf77(0xffffffffffffffffffffffffffffffffffffffff) vf6f
0xf7a: JUMP v1dd(0x1c0)
----------------------------------

Begin block 0xf7b
prev = {'0x1e4'}, next = {'0x1c00x1e4'}
----------------------------------
Block 0xf7b
0xf7c: vf7c(0x0) = CONST 
0xf7e: vf7e = SLOAD vf7c(0x0)
0xf7f: vf7f(0x1) = CONST 
0xf81: vf81(0x1) = CONST 
0xf83: vf83(0xa0) = CONST 
0xf85: vf85(0x10000000000000000000000000000000000000000) = SHL vf83(0xa0) vf81(0x1)
0xf86: vf86(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf85(0x10000000000000000000000000000000000000000) vf7f(0x1)
0xf87: vf87 = AND vf86(0xffffffffffffffffffffffffffffffffffffffff) vf7e
0xf89: JUMP v1e5(0x1c0)
----------------------------------

Begin block 0xf8a
prev = {}, next = {}
----------------------------------
function 0xf8a(vf8aarg0)
Block 0xf8a
0xf8b: vf8b(0x0) = CONST 
0xf8d: vf8d = SLOAD vf8b(0x0)
0xf8e: vf8e(0x1) = CONST 
0xf90: vf90(0x1) = CONST 
0xf92: vf92(0xa0) = CONST 
0xf94: vf94(0x10000000000000000000000000000000000000000) = SHL vf92(0xa0) vf90(0x1)
0xf95: vf95(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf94(0x10000000000000000000000000000000000000000) vf8e(0x1)
0xf96: vf96 = AND vf95(0xffffffffffffffffffffffffffffffffffffffff) vf8d
0xf97: vf97 = CALLER 
0xf98: vf98 = EQ vf97 vf96
0xf9a: RETURNPRIVATE vf8aarg0 vf98
----------------------------------

Begin block 0xf9b
prev = {'0x21e'}, next = {'0xfa3'}
----------------------------------
Block 0xf9b
0xf9c: vf9c(0xfa3) = CONST 
0xf9f: vf9f(0xf8a) = CONST 
0xfa2: vfa2_0 = CALLPRIVATE vf9f(0xf8a) vf9c(0xfa3)
----------------------------------

Begin block 0xfa3
prev = {'0xf9b'}, next = {'0xfa8', '0xff4'}
----------------------------------
Block 0xfa3
0xfa4: vfa4(0xff4) = CONST 
0xfa7: JUMPI vfa4(0xff4) vfa2_0
----------------------------------

Begin block 0xfa8
prev = {'0xfa3'}, next = {}
----------------------------------
Block 0xfa8
0xfa8: vfa8(0x40) = CONST 
0xfab: vfab = MLOAD vfa8(0x40)
0xfac: vfac(0x461bcd) = CONST 
0xfb0: vfb0(0xe5) = CONST 
0xfb2: vfb2(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vfb0(0xe5) vfac(0x461bcd)
0xfb4: MSTORE vfab vfb2(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xfb5: vfb5(0x20) = CONST 
0xfb7: vfb7(0x4) = CONST 
0xfba: vfba = ADD vfab vfb7(0x4)
0xfbd: MSTORE vfba vfb5(0x20)
0xfbe: vfbe(0x24) = CONST 
0xfc1: vfc1 = ADD vfab vfbe(0x24)
0xfc2: MSTORE vfc1 vfb5(0x20)
0xfc3: vfc3(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0xfe4: vfe4(0x44) = CONST 
0xfe7: vfe7 = ADD vfab vfe4(0x44)
0xfe8: MSTORE vfe7 vfc3(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xfea: vfea = MLOAD vfa8(0x40)
0xfee: vfee = SUB vfab vfea
0xfef: vfef(0x64) = CONST 
0xff1: vff1 = ADD vfef(0x64) vfee
0xff3: REVERT vfea vff1
----------------------------------

Begin block 0xff4
prev = {'0xfa3'}, next = {'0x1147'}
----------------------------------
Block 0xff4
0xff5: vff5(0xffd) = CONST 
0xff9: vff9(0x1147) = CONST 
0xffc: JUMP vff9(0x1147)
----------------------------------

Begin block 0xffd
prev = {'0x118c'}, next = {'0x1140x208'}
----------------------------------
Block 0xffd
0xfff: JUMP v209(0x114)
----------------------------------

Begin block 0x1000
prev = {'0x22e'}, next = {'0x1c00x22e'}
----------------------------------
Block 0x1000
0x1001: v1001(0x2) = CONST 
0x1003: v1003 = SLOAD v1001(0x2)
0x1004: v1004(0x1) = CONST 
0x1006: v1006(0x1) = CONST 
0x1008: v1008(0xa0) = CONST 
0x100a: v100a(0x10000000000000000000000000000000000000000) = SHL v1008(0xa0) v1006(0x1)
0x100b: v100b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v100a(0x10000000000000000000000000000000000000000) v1004(0x1)
0x100c: v100c = AND v100b(0xffffffffffffffffffffffffffffffffffffffff) v1003
0x100e: JUMP v22f(0x1c0)
----------------------------------

Begin block 0x100f
prev = {}, next = {'0x1022', '0x101b'}
----------------------------------
function 0x100f(v100farg0, v100farg1, v100farg2)
Block 0x100f
0x1010: v1010(0x0) = CONST 
0x1013: v1013 = MLOAD v100farg0
0x1014: v1014(0x41) = CONST 
0x1016: v1016 = EQ v1014(0x41) v1013
0x1017: v1017(0x1022) = CONST 
0x101a: JUMPI v1017(0x1022) v1016
----------------------------------

Begin block 0x101b
prev = {'0x100f'}, next = {'0x10f8'}
----------------------------------
Block 0x101b
0x101c: v101c(0x0) = CONST 
0x101e: v101e(0x10f8) = CONST 
0x1021: JUMP v101e(0x10f8)
----------------------------------

Begin block 0x1022
prev = {'0x100f'}, next = {'0x105d', '0x1068'}
----------------------------------
Block 0x1022
0x1023: v1023(0x20) = CONST 
0x1026: v1026 = ADD v100farg0 v1023(0x20)
0x1027: v1027 = MLOAD v1026
0x1028: v1028(0x40) = CONST 
0x102b: v102b = ADD v100farg0 v1028(0x40)
0x102c: v102c = MLOAD v102b
0x102d: v102d(0x60) = CONST 
0x1030: v1030 = ADD v100farg0 v102d(0x60)
0x1031: v1031 = MLOAD v1030
0x1032: v1032(0x0) = CONST 
0x1034: v1034 = BYTE v1032(0x0) v1031
0x1035: v1035(0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0) = CONST 
0x1057: v1057 = GT v102c v1035(0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)
0x1058: v1058 = ISZERO v1057
0x1059: v1059(0x1068) = CONST 
0x105c: JUMPI v1059(0x1068) v1058
----------------------------------

Begin block 0x105d
prev = {'0x1022'}, next = {'0x10f8'}
----------------------------------
Block 0x105d
0x105d: v105d(0x0) = CONST 
0x1064: v1064(0x10f8) = CONST 
0x1067: JUMP v1064(0x10f8)
----------------------------------

Begin block 0x1068
prev = {'0x1022'}, next = {'0x1077', '0x1080'}
----------------------------------
Block 0x1068
0x106a: v106a(0xff) = CONST 
0x106c: v106c = AND v106a(0xff) v1034
0x106d: v106d(0x1b) = CONST 
0x106f: v106f = EQ v106d(0x1b) v106c
0x1070: v1070 = ISZERO v106f
0x1072: v1072 = ISZERO v1070
0x1073: v1073(0x1080) = CONST 
0x1076: JUMPI v1073(0x1080) v1072
----------------------------------

Begin block 0x1077
prev = {'0x1068'}, next = {'0x1080'}
----------------------------------
Block 0x1077
0x1079: v1079(0xff) = CONST 
0x107b: v107b = AND v1079(0xff) v1034
0x107c: v107c(0x1c) = CONST 
0x107e: v107e = EQ v107c(0x1c) v107b
0x107f: v107f = ISZERO v107e
----------------------------------

Begin block 0x1080
prev = {'0x1077', '0x1068'}, next = {'0x1086', '0x1091'}
----------------------------------
Block 0x1080
0x1080_0x0: v1080_0 = PHI v1070 v107f
0x1081: v1081 = ISZERO v1080_0
0x1082: v1082(0x1091) = CONST 
0x1085: JUMPI v1082(0x1091) v1081
----------------------------------

Begin block 0x1086
prev = {'0x1080'}, next = {'0x10f8'}
----------------------------------
Block 0x1086
0x1086: v1086(0x0) = CONST 
0x108d: v108d(0x10f8) = CONST 
0x1090: JUMP v108d(0x10f8)
----------------------------------

Begin block 0x1091
prev = {'0x1080'}, next = {'0x10df', '0x10e8'}
----------------------------------
Block 0x1091
0x1092: v1092(0x40) = CONST 
0x1095: v1095 = MLOAD v1092(0x40)
0x1096: v1096(0x0) = CONST 
0x1099: MSTORE v1095 v1096(0x0)
0x109a: v109a(0x20) = CONST 
0x109e: v109e = ADD v1095 v109a(0x20)
0x10a1: MSTORE v1092(0x40) v109e
0x10a4: MSTORE v109e v100farg1
0x10a5: v10a5(0xff) = CONST 
0x10a8: v10a8 = AND v1034 v10a5(0xff)
0x10ab: v10ab = ADD v1092(0x40) v1095
0x10ac: MSTORE v10ab v10a8
0x10ad: v10ad(0x60) = CONST 
0x10b0: v10b0 = ADD v1095 v10ad(0x60)
0x10b3: MSTORE v10b0 v1027
0x10b4: v10b4(0x80) = CONST 
0x10b7: v10b7 = ADD v1095 v10b4(0x80)
0x10ba: MSTORE v10b7 v102c
0x10bc: v10bc = MLOAD v1092(0x40)
0x10bd: v10bd(0x1) = CONST 
0x10c0: v10c0(0xa0) = CONST 
0x10c4: v10c4 = ADD v1095 v10c0(0xa0)
0x10c8: v10c8(0x1f) = CONST 
0x10ca: v10ca(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v10c8(0x1f)
0x10cc: v10cc = ADD v10bc v10ca(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
0x10d0: v10d0 = SUB v1095 v10bc
0x10d3: v10d3 = ADD v10c0(0xa0) v10d0
0x10d6: v10d6 = GAS 
0x10d7: v10d7 = STATICCALL v10d6 v10bd(0x1) v10bc v10d3 v10cc v109a(0x20)
0x10d8: v10d8 = ISZERO v10d7
0x10da: v10da = ISZERO v10d8
0x10db: v10db(0x10e8) = CONST 
0x10de: JUMPI v10db(0x10e8) v10da
----------------------------------

Begin block 0x10df
prev = {'0x1091'}, next = {}
----------------------------------
Block 0x10df
0x10df: v10df = RETURNDATASIZE 
0x10e0: v10e0(0x0) = CONST 
0x10e3: RETURNDATACOPY v10e0(0x0) v10e0(0x0) v10df
0x10e4: v10e4 = RETURNDATASIZE 
0x10e5: v10e5(0x0) = CONST 
0x10e7: REVERT v10e5(0x0) v10e4
----------------------------------

Begin block 0x10e8
prev = {'0x1091'}, next = {'0x10f8'}
----------------------------------
Block 0x10e8
0x10ec: v10ec(0x20) = CONST 
0x10ee: v10ee(0x40) = CONST 
0x10f0: v10f0 = MLOAD v10ee(0x40)
0x10f1: v10f1 = SUB v10f0 v10ec(0x20)
0x10f2: v10f2 = MLOAD v10f1
----------------------------------

Begin block 0x10f8
prev = {'0x105d', '0x101b', '0x1086', '0x10e8'}, next = {}
----------------------------------
Block 0x10f8
0x10f8_0x0: v10f8_0 = PHI v101c(0x0) v105d(0x0) v1086(0x0) v10f2
0x10fd: RETURNPRIVATE v100farg2 v10f8_0
----------------------------------

Begin block 0x10fe
prev = {}, next = {'0x11e7'}
----------------------------------
function 0x10fe(v10fearg0, v10fearg1, v10fearg2)
Block 0x10fe
0x10ff: v10ff(0x0) = CONST 
0x1101: v1101(0x1140) = CONST 
0x1106: v1106(0x40) = CONST 
0x1108: v1108 = MLOAD v1106(0x40)
0x110a: v110a(0x40) = CONST 
0x110c: v110c = ADD v110a(0x40) v1108
0x110d: v110d(0x40) = CONST 
0x110f: MSTORE v110d(0x40) v110c
0x1111: v1111(0x1e) = CONST 
0x1114: MSTORE v1108 v1111(0x1e)
0x1115: v1115(0x20) = CONST 
0x1117: v1117 = ADD v1115(0x20) v1108
0x1118: v1118(0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000) = CONST 
0x113a: MSTORE v1117 v1118(0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000)
0x113c: v113c(0x11e7) = CONST 
0x113f: JUMP v113c(0x11e7)
----------------------------------

Begin block 0x1140
prev = {'0x1276'}, next = {}
----------------------------------
Block 0x1140
0x1146: RETURNPRIVATE v10fearg2 v127b
----------------------------------

Begin block 0x1147
prev = {'0xff4'}, next = {'0x118c', '0x1156'}
----------------------------------
Block 0x1147
0x1148: v1148(0x1) = CONST 
0x114a: v114a(0x1) = CONST 
0x114c: v114c(0xa0) = CONST 
0x114e: v114e(0x10000000000000000000000000000000000000000) = SHL v114c(0xa0) v114a(0x1)
0x114f: v114f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v114e(0x10000000000000000000000000000000000000000) v1148(0x1)
0x1151: v1151 = AND v229 v114f(0xffffffffffffffffffffffffffffffffffffffff)
0x1152: v1152(0x118c) = CONST 
0x1155: JUMPI v1152(0x118c) v1151
----------------------------------

Begin block 0x1156
prev = {'0x1147'}, next = {}
----------------------------------
Block 0x1156
0x1156: v1156(0x40) = CONST 
0x1158: v1158 = MLOAD v1156(0x40)
0x1159: v1159(0x461bcd) = CONST 
0x115d: v115d(0xe5) = CONST 
0x115f: v115f(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v115d(0xe5) v1159(0x461bcd)
0x1161: MSTORE v1158 v115f(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1162: v1162(0x4) = CONST 
0x1164: v1164 = ADD v1162(0x4) v1158
0x1167: v1167(0x20) = CONST 
0x1169: v1169 = ADD v1167(0x20) v1164
0x116c: v116c = SUB v1169 v1164
0x116e: MSTORE v1164 v116c
0x116f: v116f(0x26) = CONST 
0x1172: MSTORE v1169 v116f(0x26)
0x1173: v1173(0x20) = CONST 
0x1175: v1175 = ADD v1173(0x20) v1169
0x1177: v1177(0x127f) = CONST 
0x117a: v117a(0x26) = CONST 
0x117d: CODECOPY v1175 v1177(0x127f) v117a(0x26)
0x117e: v117e(0x40) = CONST 
0x1180: v1180 = ADD v117e(0x40) v1175
0x1184: v1184(0x40) = CONST 
0x1186: v1186 = MLOAD v1184(0x40)
0x1189: v1189 = SUB v1180 v1186
0x118b: REVERT v1186 v1189
----------------------------------

Begin block 0x118c
prev = {'0x1147'}, next = {'0xffd'}
----------------------------------
Block 0x118c
0x118d: v118d(0x0) = CONST 
0x1190: v1190 = SLOAD v118d(0x0)
0x1191: v1191(0x40) = CONST 
0x1193: v1193 = MLOAD v1191(0x40)
0x1194: v1194(0x1) = CONST 
0x1196: v1196(0x1) = CONST 
0x1198: v1198(0xa0) = CONST 
0x119a: v119a(0x10000000000000000000000000000000000000000) = SHL v1198(0xa0) v1196(0x1)
0x119b: v119b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v119a(0x10000000000000000000000000000000000000000) v1194(0x1)
0x119e: v119e = AND v229 v119b(0xffffffffffffffffffffffffffffffffffffffff)
0x11a1: v11a1 = AND v1190 v119b(0xffffffffffffffffffffffffffffffffffffffff)
0x11a3: v11a3(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x11c5: LOG3 v1193 v118d(0x0) v11a3(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v11a1 v119e
0x11c6: v11c6(0x0) = CONST 
0x11c9: v11c9 = SLOAD v11c6(0x0)
0x11ca: v11ca(0x1) = CONST 
0x11cc: v11cc(0x1) = CONST 
0x11ce: v11ce(0xa0) = CONST 
0x11d0: v11d0(0x10000000000000000000000000000000000000000) = SHL v11ce(0xa0) v11cc(0x1)
0x11d1: v11d1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v11d0(0x10000000000000000000000000000000000000000) v11ca(0x1)
0x11d2: v11d2(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v11d1(0xffffffffffffffffffffffffffffffffffffffff)
0x11d3: v11d3 = AND v11d2(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v11c9
0x11d4: v11d4(0x1) = CONST 
0x11d6: v11d6(0x1) = CONST 
0x11d8: v11d8(0xa0) = CONST 
0x11da: v11da(0x10000000000000000000000000000000000000000) = SHL v11d8(0xa0) v11d6(0x1)
0x11db: v11db(0xffffffffffffffffffffffffffffffffffffffff) = SUB v11da(0x10000000000000000000000000000000000000000) v11d4(0x1)
0x11df: v11df = AND v11db(0xffffffffffffffffffffffffffffffffffffffff) v229
0x11e3: v11e3 = OR v11df v11d3
0x11e5: SSTORE v11c6(0x0) v11e3
0x11e6: JUMP vff5(0xffd)
----------------------------------

Begin block 0x11e7
prev = {'0x10fe'}, next = {'0x1276', '0x11f3'}
----------------------------------
Block 0x11e7
0x11e8: v11e8(0x0) = CONST 
0x11ed: v11ed = GT v10fearg0 v10fearg1
0x11ee: v11ee = ISZERO v11ed
0x11ef: v11ef(0x1276) = CONST 
0x11f2: JUMPI v11ef(0x1276) v11ee
----------------------------------

Begin block 0x11f3
prev = {'0x11e7'}, next = {'0x1223'}
----------------------------------
Block 0x11f3
0x11f3: v11f3(0x40) = CONST 
0x11f5: v11f5 = MLOAD v11f3(0x40)
0x11f6: v11f6(0x461bcd) = CONST 
0x11fa: v11fa(0xe5) = CONST 
0x11fc: v11fc(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v11fa(0xe5) v11f6(0x461bcd)
0x11fe: MSTORE v11f5 v11fc(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x11ff: v11ff(0x4) = CONST 
0x1201: v1201 = ADD v11ff(0x4) v11f5
0x1204: v1204(0x20) = CONST 
0x1206: v1206 = ADD v1204(0x20) v1201
0x1209: v1209 = SUB v1206 v1201
0x120b: MSTORE v1201 v1209
0x120f: v120f = MLOAD v1108
0x1211: MSTORE v1206 v120f
0x1212: v1212(0x20) = CONST 
0x1214: v1214 = ADD v1212(0x20) v1206
0x1218: v1218 = MLOAD v1108
0x121a: v121a(0x20) = CONST 
0x121c: v121c = ADD v121a(0x20) v1108
0x1221: v1221(0x0) = CONST 
----------------------------------

Begin block 0x1223
prev = {'0x122c', '0x11f3'}, next = {'0x123b', '0x122c'}
----------------------------------
Block 0x1223
0x1223_0x0: v1223_0 = PHI v1221(0x0) v1236
0x1226: v1226 = LT v1223_0 v1218
0x1227: v1227 = ISZERO v1226
0x1228: v1228(0x123b) = CONST 
0x122b: JUMPI v1228(0x123b) v1227
----------------------------------

Begin block 0x122c
prev = {'0x1223'}, next = {'0x1223'}
----------------------------------
Block 0x122c
0x122c_0x0: v122c_0 = PHI v1221(0x0) v1236
0x122e: v122e = ADD v122c_0 v121c
0x122f: v122f = MLOAD v122e
0x1232: v1232 = ADD v122c_0 v1214
0x1233: MSTORE v1232 v122f
0x1234: v1234(0x20) = CONST 
0x1236: v1236 = ADD v1234(0x20) v122c_0
0x1237: v1237(0x1223) = CONST 
0x123a: JUMP v1237(0x1223)
----------------------------------

Begin block 0x123b
prev = {'0x1223'}, next = {'0x124f', '0x1268'}
----------------------------------
Block 0x123b
0x1244: v1244 = ADD v1218 v1214
0x1246: v1246(0x1f) = CONST 
0x1248: v1248 = AND v1246(0x1f) v1218
0x124a: v124a = ISZERO v1248
0x124b: v124b(0x1268) = CONST 
0x124e: JUMPI v124b(0x1268) v124a
----------------------------------

Begin block 0x124f
prev = {'0x123b'}, next = {'0x1268'}
----------------------------------
Block 0x124f
0x1251: v1251 = SUB v1244 v1248
0x1253: v1253 = MLOAD v1251
0x1254: v1254(0x1) = CONST 
0x1257: v1257(0x20) = CONST 
0x1259: v1259 = SUB v1257(0x20) v1248
0x125a: v125a(0x100) = CONST 
0x125d: v125d = EXP v125a(0x100) v1259
0x125e: v125e = SUB v125d v1254(0x1)
0x125f: v125f = NOT v125e
0x1260: v1260 = AND v125f v1253
0x1262: MSTORE v1251 v1260
0x1263: v1263(0x20) = CONST 
0x1265: v1265 = ADD v1263(0x20) v1251
----------------------------------

Begin block 0x1268
prev = {'0x124f', '0x123b'}, next = {}
----------------------------------
Block 0x1268
0x1268_0x1: v1268_1 = PHI v1244 v1265
0x126e: v126e(0x40) = CONST 
0x1270: v1270 = MLOAD v126e(0x40)
0x1273: v1273 = SUB v1268_1 v1270
0x1275: REVERT v1270 v1273
----------------------------------

Begin block 0x1276
prev = {'0x11e7'}, next = {'0x1140'}
----------------------------------
Block 0x1276
0x127b: v127b = SUB v10fearg1 v10fearg0
0x127d: JUMP v1101(0x1140)
----------------------------------

Begin block 0x130f
prev = {'0x88', '0x10'}, next = {'0x930x0'}
----------------------------------
Block 0x130f
0x1310: v1310(0x93) = CONST 
0x1311: CALLPRIVATE v1310(0x93)
----------------------------------

Begin block 0x1312
prev = {'0x66'}, next = {}
----------------------------------
Block 0x1312
0x1313: v1313(0x98) = CONST 
0x1314: CALLPRIVATE v1313(0x98)
----------------------------------

Begin block 0x1315
prev = {'0x72'}, next = {}
----------------------------------
Block 0x1315
0x1316: v1316(0x116) = CONST 
0x1317: CALLPRIVATE v1316(0x116)
----------------------------------

Begin block 0x1318
prev = {'0x7d'}, next = {}
----------------------------------
Block 0x1318
0x1319: v1319(0x192) = CONST 
0x131a: CALLPRIVATE v1319(0x192)
----------------------------------

Begin block 0x131b
prev = {'0x88'}, next = {}
----------------------------------
Block 0x131b
0x131c: v131c(0x1b8) = CONST 
0x131d: CALLPRIVATE v131c(0x1b8)
----------------------------------

Begin block 0x131e
prev = {'0x2b'}, next = {}
----------------------------------
Block 0x131e
0x131f: v131f(0x1dc) = CONST 
0x1320: CALLPRIVATE v131f(0x1dc)
----------------------------------

Begin block 0x1321
prev = {'0x36'}, next = {}
----------------------------------
Block 0x1321
0x1322: v1322(0x1e4) = CONST 
0x1323: CALLPRIVATE v1322(0x1e4)
----------------------------------

Begin block 0x1324
prev = {'0x41'}, next = {}
----------------------------------
Block 0x1324
0x1325: v1325(0x1ec) = CONST 
0x1326: CALLPRIVATE v1325(0x1ec)
----------------------------------

Begin block 0x1327
prev = {'0x4c'}, next = {}
----------------------------------
Block 0x1327
0x1328: v1328(0x208) = CONST 
0x1329: CALLPRIVATE v1328(0x208)
----------------------------------

Begin block 0x132a
prev = {'0x57'}, next = {}
----------------------------------
Block 0x132a
0x132b: v132b(0x22e) = CONST 
0x132c: CALLPRIVATE v132b(0x22e)
----------------------------------
