
Begin block 0x0
prev = {}, next = {'0xf09', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0xeef: veef(0xf09) = CONST 
0xef0: JUMPI veef(0xf09) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x1e', '0x64'}
----------------------------------
Block 0xd
0xd: vd(0x0) = CONST 
0xf: vf = CALLDATALOAD vd(0x0)
0x10: v10(0xe0) = CONST 
0x12: v12 = SHR v10(0xe0) vf
0x14: v14(0x8f32d59b) = CONST 
0x19: v19 = GT v14(0x8f32d59b) v12
0x1a: v1a(0x64) = CONST 
0x1d: JUMPI v1a(0x64) v19
----------------------------------

Begin block 0x1e
prev = {'0xd'}, next = {'0xf1e', '0x29'}
----------------------------------
Block 0x1e
0x1f: v1f(0x8f32d59b) = CONST 
0x24: v24 = EQ v1f(0x8f32d59b) v12
0xef1: vef1(0xf1e) = CONST 
0xef2: JUMPI vef1(0xf1e) v24
----------------------------------

Begin block 0x29
prev = {'0x1e'}, next = {'0x34', '0xf21'}
----------------------------------
Block 0x29
0x2a: v2a(0x9e1a4d19) = CONST 
0x2f: v2f = EQ v2a(0x9e1a4d19) v12
0xef3: vef3(0xf21) = CONST 
0xef4: JUMPI vef3(0xf21) v2f
----------------------------------

Begin block 0x34
prev = {'0x29'}, next = {'0xf24', '0x3f'}
----------------------------------
Block 0x34
0x35: v35(0xb404e001) = CONST 
0x3a: v3a = EQ v35(0xb404e001) v12
0xef5: vef5(0xf24) = CONST 
0xef6: JUMPI vef5(0xf24) v3a
----------------------------------

Begin block 0x3f
prev = {'0x34'}, next = {'0x4a', '0xf27'}
----------------------------------
Block 0x3f
0x40: v40(0xf088d547) = CONST 
0x45: v45 = EQ v40(0xf088d547) v12
0xef7: vef7(0xf27) = CONST 
0xef8: JUMPI vef7(0xf27) v45
----------------------------------

Begin block 0x4a
prev = {'0x3f'}, next = {'0xf2a', '0x55'}
----------------------------------
Block 0x4a
0x4b: v4b(0xf2fde38b) = CONST 
0x50: v50 = EQ v4b(0xf2fde38b) v12
0xef9: vef9(0xf2a) = CONST 
0xefa: JUMPI vef9(0xf2a) v50
----------------------------------

Begin block 0x55
prev = {'0x4a'}, next = {'0x60', '0xf2d'}
----------------------------------
Block 0x55
0x56: v56(0xfc0c546a) = CONST 
0x5b: v5b = EQ v56(0xfc0c546a) v12
0xefb: vefb(0xf2d) = CONST 
0xefc: JUMPI vefb(0xf2d) v5b
----------------------------------

Begin block 0x60
prev = {'0x55'}, next = {'0xa70x0'}
----------------------------------
Block 0x60
0x60: v60(0xa7) = CONST 
0x63: JUMP v60(0xa7)
----------------------------------

Begin block 0x64
prev = {'0xd'}, next = {'0xf0c', '0x70'}
----------------------------------
Block 0x64
0x66: v66(0x970864f) = CONST 
0x6b: v6b = EQ v66(0x970864f) v12
0xefd: vefd(0xf0c) = CONST 
0xefe: JUMPI vefd(0xf0c) v6b
----------------------------------

Begin block 0x70
prev = {'0x64'}, next = {'0x7b', '0xf0f'}
----------------------------------
Block 0x70
0x71: v71(0x2c4e722e) = CONST 
0x76: v76 = EQ v71(0x2c4e722e) v12
0xeff: veff(0xf0f) = CONST 
0xf00: JUMPI veff(0xf0f) v76
----------------------------------

Begin block 0x7b
prev = {'0x70'}, next = {'0x86', '0xf12'}
----------------------------------
Block 0x7b
0x7c: v7c(0x2e1a7d4d) = CONST 
0x81: v81 = EQ v7c(0x2e1a7d4d) v12
0xf01: vf01(0xf12) = CONST 
0xf02: JUMPI vf01(0xf12) v81
----------------------------------

Begin block 0x86
prev = {'0x7b'}, next = {'0x91', '0xf15'}
----------------------------------
Block 0x86
0x87: v87(0x34fcf437) = CONST 
0x8c: v8c = EQ v87(0x34fcf437) v12
0xf03: vf03(0xf15) = CONST 
0xf04: JUMPI vf03(0xf15) v8c
----------------------------------

Begin block 0x91
prev = {'0x86'}, next = {'0xf18', '0x9c'}
----------------------------------
Block 0x91
0x92: v92(0x715018a6) = CONST 
0x97: v97 = EQ v92(0x715018a6) v12
0xf05: vf05(0xf18) = CONST 
0xf06: JUMPI vf05(0xf18) v97
----------------------------------

Begin block 0x9c
prev = {'0x91'}, next = {'0xf09', '0xf1b'}
----------------------------------
Block 0x9c
0x9d: v9d(0x8da5cb5b) = CONST 
0xa2: va2 = EQ v9d(0x8da5cb5b) v12
0xf07: vf07(0xf1b) = CONST 
0xf08: JUMPI vf07(0xf1b) va2
----------------------------------

Begin block 0xa7
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0xa7
0xa8: va8(0x0) = CONST 
0xab: REVERT va8(0x0) va8(0x0)
----------------------------------

Begin block 0xa70x0
prev = {'0xf09', '0x60'}, next = {}
----------------------------------
Block 0xa70x0
0xa80x0: v0a8(0x0) = CONST 
0xab0x0: REVERT v0a8(0x0) v0a8(0x0)
----------------------------------

Begin block 0xac
prev = {}, next = {'0xb4', '0xb8'}
----------------------------------
function 0x0970864f()
Block 0xac
0xad: vad = CALLVALUE 
0xaf: vaf = ISZERO vad
0xb0: vb0(0xb8) = CONST 
0xb3: JUMPI vb0(0xb8) vaf
----------------------------------

Begin block 0xb4
prev = {'0xac'}, next = {}
----------------------------------
Block 0xb4
0xb4: vb4(0x0) = CONST 
0xb7: REVERT vb4(0x0) vb4(0x0)
----------------------------------

Begin block 0xb8
prev = {'0xac'}, next = {'0xcf', '0xcb'}
----------------------------------
Block 0xb8
0xba: vba(0x105) = CONST 
0xbd: vbd(0x4) = CONST 
0xc0: vc0 = CALLDATASIZE 
0xc1: vc1 = SUB vc0 vbd(0x4)
0xc2: vc2(0x40) = CONST 
0xc5: vc5 = LT vc1 vc2(0x40)
0xc6: vc6 = ISZERO vc5
0xc7: vc7(0xcf) = CONST 
0xca: JUMPI vc7(0xcf) vc6
----------------------------------

Begin block 0xcb
prev = {'0xb8'}, next = {}
----------------------------------
Block 0xcb
0xcb: vcb(0x0) = CONST 
0xce: REVERT vcb(0x0) vcb(0x0)
----------------------------------

Begin block 0xcf
prev = {'0xb8'}, next = {'0x39b'}
----------------------------------
Block 0xcf
0xd1: vd1 = ADD vbd(0x4) vc1
0xd5: vd5 = CALLDATALOAD vbd(0x4)
0xd6: vd6(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xeb: veb = AND vd6(0xffffffffffffffffffffffffffffffffffffffff) vd5
0xed: ved(0x20) = CONST 
0xef: vef = ADD ved(0x20) vbd(0x4)
0xf5: vf5 = CALLDATALOAD vef
0xf7: vf7(0x20) = CONST 
0xf9: vf9 = ADD vf7(0x20) vef
0x101: v101(0x39b) = CONST 
0x104: JUMP v101(0x39b)
----------------------------------

Begin block 0x105
prev = {'0x42f'}, next = {}
----------------------------------
Block 0x105
0x106: STOP 
----------------------------------

Begin block 0x107
prev = {}, next = {'0x113', '0x10f'}
----------------------------------
function rate()()
Block 0x107
0x108: v108 = CALLVALUE 
0x10a: v10a = ISZERO v108
0x10b: v10b(0x113) = CONST 
0x10e: JUMPI v10b(0x113) v10a
----------------------------------

Begin block 0x10f
prev = {'0x107'}, next = {}
----------------------------------
Block 0x10f
0x10f: v10f(0x0) = CONST 
0x112: REVERT v10f(0x0) v10f(0x0)
----------------------------------

Begin block 0x113
prev = {'0x107'}, next = {'0x47d'}
----------------------------------
Block 0x113
0x115: v115(0x11c) = CONST 
0x118: v118(0x47d) = CONST 
0x11b: JUMP v118(0x47d)
----------------------------------

Begin block 0x11c
prev = {'0x47d'}, next = {}
----------------------------------
Block 0x11c
0x11d: v11d(0x40) = CONST 
0x11f: v11f = MLOAD v11d(0x40)
0x123: MSTORE v11f v480
0x124: v124(0x20) = CONST 
0x126: v126 = ADD v124(0x20) v11f
0x12a: v12a(0x40) = CONST 
0x12c: v12c = MLOAD v12a(0x40)
0x12f: v12f = SUB v126 v12c
0x131: RETURN v12c v12f
----------------------------------

Begin block 0x132
prev = {}, next = {'0x13a', '0x13e'}
----------------------------------
function withdraw(uint256)()
Block 0x132
0x133: v133 = CALLVALUE 
0x135: v135 = ISZERO v133
0x136: v136(0x13e) = CONST 
0x139: JUMPI v136(0x13e) v135
----------------------------------

Begin block 0x13a
prev = {'0x132'}, next = {}
----------------------------------
Block 0x13a
0x13a: v13a(0x0) = CONST 
0x13d: REVERT v13a(0x0) v13a(0x0)
----------------------------------

Begin block 0x13e
prev = {'0x132'}, next = {'0x155', '0x151'}
----------------------------------
Block 0x13e
0x140: v140(0x16b) = CONST 
0x143: v143(0x4) = CONST 
0x146: v146 = CALLDATASIZE 
0x147: v147 = SUB v146 v143(0x4)
0x148: v148(0x20) = CONST 
0x14b: v14b = LT v147 v148(0x20)
0x14c: v14c = ISZERO v14b
0x14d: v14d(0x155) = CONST 
0x150: JUMPI v14d(0x155) v14c
----------------------------------

Begin block 0x151
prev = {'0x13e'}, next = {}
----------------------------------
Block 0x151
0x151: v151(0x0) = CONST 
0x154: REVERT v151(0x0) v151(0x0)
----------------------------------

Begin block 0x155
prev = {'0x13e'}, next = {'0x483'}
----------------------------------
Block 0x155
0x157: v157 = ADD v143(0x4) v147
0x15b: v15b = CALLDATALOAD v143(0x4)
0x15d: v15d(0x20) = CONST 
0x15f: v15f = ADD v15d(0x20) v143(0x4)
0x167: v167(0x483) = CONST 
0x16a: JUMP v167(0x483)
----------------------------------

Begin block 0x16d
prev = {}, next = {'0x175', '0x179'}
----------------------------------
function setRate(uint256)()
Block 0x16d
0x16e: v16e = CALLVALUE 
0x170: v170 = ISZERO v16e
0x171: v171(0x179) = CONST 
0x174: JUMPI v171(0x179) v170
----------------------------------

Begin block 0x175
prev = {'0x16d'}, next = {}
----------------------------------
Block 0x175
0x175: v175(0x0) = CONST 
0x178: REVERT v175(0x0) v175(0x0)
----------------------------------

Begin block 0x179
prev = {'0x16d'}, next = {'0x190', '0x18c'}
----------------------------------
Block 0x179
0x17b: v17b(0x1a6) = CONST 
0x17e: v17e(0x4) = CONST 
0x181: v181 = CALLDATASIZE 
0x182: v182 = SUB v181 v17e(0x4)
0x183: v183(0x20) = CONST 
0x186: v186 = LT v182 v183(0x20)
0x187: v187 = ISZERO v186
0x188: v188(0x190) = CONST 
0x18b: JUMPI v188(0x190) v187
----------------------------------

Begin block 0x18c
prev = {'0x179'}, next = {}
----------------------------------
Block 0x18c
0x18c: v18c(0x0) = CONST 
0x18f: REVERT v18c(0x0) v18c(0x0)
----------------------------------

Begin block 0x190
prev = {'0x179'}, next = {'0x607'}
----------------------------------
Block 0x190
0x192: v192 = ADD v17e(0x4) v182
0x196: v196 = CALLDATALOAD v17e(0x4)
0x198: v198(0x20) = CONST 
0x19a: v19a = ADD v198(0x20) v17e(0x4)
0x1a2: v1a2(0x607) = CONST 
0x1a5: JUMP v1a2(0x607)
----------------------------------

Begin block 0x1a6
prev = {'0x681'}, next = {}
----------------------------------
Block 0x1a6
0x1a7: STOP 
----------------------------------

Begin block 0x1a8
prev = {}, next = {'0x1b0', '0x1b4'}
----------------------------------
function renounceOwnership()()
Block 0x1a8
0x1a9: v1a9 = CALLVALUE 
0x1ab: v1ab = ISZERO v1a9
0x1ac: v1ac(0x1b4) = CONST 
0x1af: JUMPI v1ac(0x1b4) v1ab
----------------------------------

Begin block 0x1b0
prev = {'0x1a8'}, next = {}
----------------------------------
Block 0x1b0
0x1b0: v1b0(0x0) = CONST 
0x1b3: REVERT v1b0(0x0) v1b0(0x0)
----------------------------------

Begin block 0x1b4
prev = {'0x1a8'}, next = {'0x68b'}
----------------------------------
Block 0x1b4
0x1b6: v1b6(0x1bd) = CONST 
0x1b9: v1b9(0x68b) = CONST 
0x1bc: JUMP v1b9(0x68b)
----------------------------------

Begin block 0x1bd
prev = {'0x705'}, next = {}
----------------------------------
Block 0x1bd
0x1be: STOP 
----------------------------------

Begin block 0x1bf
prev = {}, next = {'0x1c7', '0x1cb'}
----------------------------------
function owner()()
Block 0x1bf
0x1c0: v1c0 = CALLVALUE 
0x1c2: v1c2 = ISZERO v1c0
0x1c3: v1c3(0x1cb) = CONST 
0x1c6: JUMPI v1c3(0x1cb) v1c2
----------------------------------

Begin block 0x1c7
prev = {'0x1bf'}, next = {}
----------------------------------
Block 0x1c7
0x1c7: v1c7(0x0) = CONST 
0x1ca: REVERT v1c7(0x0) v1c7(0x0)
----------------------------------

Begin block 0x1cb
prev = {'0x1bf'}, next = {'0x7c4'}
----------------------------------
Block 0x1cb
0x1cd: v1cd(0x1d4) = CONST 
0x1d0: v1d0(0x7c4) = CONST 
0x1d3: JUMP v1d0(0x7c4)
----------------------------------

Begin block 0x1d4
prev = {'0x7c4'}, next = {}
----------------------------------
Block 0x1d4
0x1d5: v1d5(0x40) = CONST 
0x1d7: v1d7 = MLOAD v1d5(0x40)
0x1da: v1da(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x1ef: v1ef = AND v1da(0xffffffffffffffffffffffffffffffffffffffff) v7e8
0x1f0: v1f0(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x205: v205 = AND v1f0(0xffffffffffffffffffffffffffffffffffffffff) v1ef
0x207: MSTORE v1d7 v205
0x208: v208(0x20) = CONST 
0x20a: v20a = ADD v208(0x20) v1d7
0x20e: v20e(0x40) = CONST 
0x210: v210 = MLOAD v20e(0x40)
0x213: v213 = SUB v20a v210
0x215: RETURN v210 v213
----------------------------------

Begin block 0x216
prev = {}, next = {'0x222', '0x21e'}
----------------------------------
function isOwner()()
Block 0x216
0x217: v217 = CALLVALUE 
0x219: v219 = ISZERO v217
0x21a: v21a(0x222) = CONST 
0x21d: JUMPI v21a(0x222) v219
----------------------------------

Begin block 0x21e
prev = {'0x216'}, next = {}
----------------------------------
Block 0x21e
0x21e: v21e(0x0) = CONST 
0x221: REVERT v21e(0x0) v21e(0x0)
----------------------------------

Begin block 0x222
prev = {'0x216'}, next = {'0x22b'}
----------------------------------
Block 0x222
0x224: v224(0x22b) = CONST 
0x227: v227(0x7ed) = CONST 
0x22a: v22a_0 = CALLPRIVATE v227(0x7ed) v224(0x22b)
----------------------------------

Begin block 0x22b
prev = {'0x222'}, next = {}
----------------------------------
Block 0x22b
0x22c: v22c(0x40) = CONST 
0x22e: v22e = MLOAD v22c(0x40)
0x231: v231 = ISZERO v22a_0
0x232: v232 = ISZERO v231
0x233: v233 = ISZERO v232
0x234: v234 = ISZERO v233
0x236: MSTORE v22e v234
0x237: v237(0x20) = CONST 
0x239: v239 = ADD v237(0x20) v22e
0x23d: v23d(0x40) = CONST 
0x23f: v23f = MLOAD v23d(0x40)
0x242: v242 = SUB v239 v23f
0x244: RETURN v23f v242
----------------------------------

Begin block 0x245
prev = {}, next = {'0x251', '0x24d'}
----------------------------------
function tokenBalance()()
Block 0x245
0x246: v246 = CALLVALUE 
0x248: v248 = ISZERO v246
0x249: v249(0x251) = CONST 
0x24c: JUMPI v249(0x251) v248
----------------------------------

Begin block 0x24d
prev = {'0x245'}, next = {}
----------------------------------
Block 0x24d
0x24d: v24d(0x0) = CONST 
0x250: REVERT v24d(0x0) v24d(0x0)
----------------------------------

Begin block 0x251
prev = {'0x245'}, next = {'0x25a'}
----------------------------------
Block 0x251
0x253: v253(0x25a) = CONST 
0x256: v256(0x84b) = CONST 
0x259: v259_0 = CALLPRIVATE v256(0x84b) v253(0x25a)
----------------------------------

Begin block 0x25a
prev = {'0x251'}, next = {}
----------------------------------
Block 0x25a
0x25b: v25b(0x40) = CONST 
0x25d: v25d = MLOAD v25b(0x40)
0x261: MSTORE v25d v259_0
0x262: v262(0x20) = CONST 
0x264: v264 = ADD v262(0x20) v25d
0x268: v268(0x40) = CONST 
0x26a: v26a = MLOAD v268(0x40)
0x26d: v26d = SUB v264 v26a
0x26f: RETURN v26a v26d
----------------------------------

Begin block 0x270
prev = {}, next = {'0x27c', '0x278'}
----------------------------------
function COMMISSION_PERCENT()()
Block 0x270
0x271: v271 = CALLVALUE 
0x273: v273 = ISZERO v271
0x274: v274(0x27c) = CONST 
0x277: JUMPI v274(0x27c) v273
----------------------------------

Begin block 0x278
prev = {'0x270'}, next = {}
----------------------------------
Block 0x278
0x278: v278(0x0) = CONST 
0x27b: REVERT v278(0x0) v278(0x0)
----------------------------------

Begin block 0x27c
prev = {'0x270'}, next = {'0x92c'}
----------------------------------
Block 0x27c
0x27e: v27e(0x285) = CONST 
0x281: v281(0x92c) = CONST 
0x284: JUMP v281(0x92c)
----------------------------------

Begin block 0x285
prev = {'0x92c'}, next = {}
----------------------------------
Block 0x285
0x286: v286(0x40) = CONST 
0x288: v288 = MLOAD v286(0x40)
0x28c: MSTORE v288 v92d(0x5)
0x28d: v28d(0x20) = CONST 
0x28f: v28f = ADD v28d(0x20) v288
0x293: v293(0x40) = CONST 
0x295: v295 = MLOAD v293(0x40)
0x298: v298 = SUB v28f v295
0x29a: RETURN v295 v298
----------------------------------

Begin block 0x29b
prev = {}, next = {'0x2ad', '0x2b1'}
----------------------------------
function buy(address)()
Block 0x29b
0x29c: v29c(0x2dd) = CONST 
0x29f: v29f(0x4) = CONST 
0x2a2: v2a2 = CALLDATASIZE 
0x2a3: v2a3 = SUB v2a2 v29f(0x4)
0x2a4: v2a4(0x20) = CONST 
0x2a7: v2a7 = LT v2a3 v2a4(0x20)
0x2a8: v2a8 = ISZERO v2a7
0x2a9: v2a9(0x2b1) = CONST 
0x2ac: JUMPI v2a9(0x2b1) v2a8
----------------------------------

Begin block 0x2ad
prev = {'0x29b'}, next = {}
----------------------------------
Block 0x2ad
0x2ad: v2ad(0x0) = CONST 
0x2b0: REVERT v2ad(0x0) v2ad(0x0)
----------------------------------

Begin block 0x2b1
prev = {'0x29b'}, next = {'0x931'}
----------------------------------
Block 0x2b1
0x2b3: v2b3 = ADD v29f(0x4) v2a3
0x2b7: v2b7 = CALLDATALOAD v29f(0x4)
0x2b8: v2b8(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x2cd: v2cd = AND v2b8(0xffffffffffffffffffffffffffffffffffffffff) v2b7
0x2cf: v2cf(0x20) = CONST 
0x2d1: v2d1 = ADD v2cf(0x20) v29f(0x4)
0x2d9: v2d9(0x931) = CONST 
0x2dc: JUMP v2d9(0x931)
----------------------------------

Begin block 0x2dd
prev = {'0xc1a'}, next = {}
----------------------------------
Block 0x2dd
0x2de: v2de(0x40) = CONST 
0x2e0: v2e0 = MLOAD v2de(0x40)
0x2e4: MSTORE v2e0 v932(0x0)
0x2e5: v2e5(0x20) = CONST 
0x2e7: v2e7 = ADD v2e5(0x20) v2e0
0x2eb: v2eb(0x40) = CONST 
0x2ed: v2ed = MLOAD v2eb(0x40)
0x2f0: v2f0 = SUB v2e7 v2ed
0x2f2: RETURN v2ed v2f0
----------------------------------

Begin block 0x2f3
prev = {}, next = {'0x2ff', '0x2fb'}
----------------------------------
function transferOwnership(address)()
Block 0x2f3
0x2f4: v2f4 = CALLVALUE 
0x2f6: v2f6 = ISZERO v2f4
0x2f7: v2f7(0x2ff) = CONST 
0x2fa: JUMPI v2f7(0x2ff) v2f6
----------------------------------

Begin block 0x2fb
prev = {'0x2f3'}, next = {}
----------------------------------
Block 0x2fb
0x2fb: v2fb(0x0) = CONST 
0x2fe: REVERT v2fb(0x0) v2fb(0x0)
----------------------------------

Begin block 0x2ff
prev = {'0x2f3'}, next = {'0x312', '0x316'}
----------------------------------
Block 0x2ff
0x301: v301(0x342) = CONST 
0x304: v304(0x4) = CONST 
0x307: v307 = CALLDATASIZE 
0x308: v308 = SUB v307 v304(0x4)
0x309: v309(0x20) = CONST 
0x30c: v30c = LT v308 v309(0x20)
0x30d: v30d = ISZERO v30c
0x30e: v30e(0x316) = CONST 
0x311: JUMPI v30e(0x316) v30d
----------------------------------

Begin block 0x312
prev = {'0x2ff'}, next = {}
----------------------------------
Block 0x312
0x312: v312(0x0) = CONST 
0x315: REVERT v312(0x0) v312(0x0)
----------------------------------

Begin block 0x316
prev = {'0x2ff'}, next = {'0xc57'}
----------------------------------
Block 0x316
0x318: v318 = ADD v304(0x4) v308
0x31c: v31c = CALLDATALOAD v304(0x4)
0x31d: v31d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x332: v332 = AND v31d(0xffffffffffffffffffffffffffffffffffffffff) v31c
0x334: v334(0x20) = CONST 
0x336: v336 = ADD v334(0x20) v304(0x4)
0x33e: v33e(0xc57) = CONST 
0x341: JUMP v33e(0xc57)
----------------------------------

Begin block 0x342
prev = {'0xcda'}, next = {}
----------------------------------
Block 0x342
0x343: STOP 
----------------------------------

Begin block 0x344
prev = {}, next = {'0x350', '0x34c'}
----------------------------------
function token()()
Block 0x344
0x345: v345 = CALLVALUE 
0x347: v347 = ISZERO v345
0x348: v348(0x350) = CONST 
0x34b: JUMPI v348(0x350) v347
----------------------------------

Begin block 0x34c
prev = {'0x344'}, next = {}
----------------------------------
Block 0x34c
0x34c: v34c(0x0) = CONST 
0x34f: REVERT v34c(0x0) v34c(0x0)
----------------------------------

Begin block 0x350
prev = {'0x344'}, next = {'0xcdd'}
----------------------------------
Block 0x350
0x352: v352(0x359) = CONST 
0x355: v355(0xcdd) = CONST 
0x358: JUMP v355(0xcdd)
----------------------------------

Begin block 0x359
prev = {'0xcdd'}, next = {}
----------------------------------
Block 0x359
0x35a: v35a(0x40) = CONST 
0x35c: v35c = MLOAD v35a(0x40)
0x35f: v35f(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x374: v374 = AND v35f(0xffffffffffffffffffffffffffffffffffffffff) vd00
0x375: v375(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x38a: v38a = AND v375(0xffffffffffffffffffffffffffffffffffffffff) v374
0x38c: MSTORE v35c v38a
0x38d: v38d(0x20) = CONST 
0x38f: v38f = ADD v38d(0x20) v35c
0x393: v393(0x40) = CONST 
0x395: v395 = MLOAD v393(0x40)
0x398: v398 = SUB v38f v395
0x39a: RETURN v395 v398
----------------------------------

Begin block 0x39b
prev = {'0xcf'}, next = {'0x3a3'}
----------------------------------
Block 0x39b
0x39c: v39c(0x3a3) = CONST 
0x39f: v39f(0x7ed) = CONST 
0x3a2: v3a2_0 = CALLPRIVATE v39f(0x7ed) v39c(0x3a3)
----------------------------------

Begin block 0x3a3
prev = {'0x39b'}, next = {'0x3a8', '0x415'}
----------------------------------
Block 0x3a3
0x3a4: v3a4(0x415) = CONST 
0x3a7: JUMPI v3a4(0x415) v3a2_0
----------------------------------

Begin block 0x3a8
prev = {'0x3a3'}, next = {}
----------------------------------
Block 0x3a8
0x3a8: v3a8(0x40) = CONST 
0x3aa: v3aa = MLOAD v3a8(0x40)
0x3ab: v3ab(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x3cd: MSTORE v3aa v3ab(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x3ce: v3ce(0x4) = CONST 
0x3d0: v3d0 = ADD v3ce(0x4) v3aa
0x3d3: v3d3(0x20) = CONST 
0x3d5: v3d5 = ADD v3d3(0x20) v3d0
0x3d8: v3d8 = SUB v3d5 v3d0
0x3da: MSTORE v3d0 v3d8
0x3db: v3db(0x20) = CONST 
0x3de: MSTORE v3d5 v3db(0x20)
0x3df: v3df(0x20) = CONST 
0x3e1: v3e1 = ADD v3df(0x20) v3d5
0x3e3: v3e3(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x405: MSTORE v3e1 v3e3(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x407: v407(0x20) = CONST 
0x409: v409 = ADD v407(0x20) v3e1
0x40d: v40d(0x40) = CONST 
0x40f: v40f = MLOAD v40d(0x40)
0x412: v412 = SUB v409 v40f
0x414: REVERT v40f v412
----------------------------------

Begin block 0x415
prev = {'0x3a3'}, next = {'0x422', '0x41e'}
----------------------------------
Block 0x415
0x416: v416(0x5) = CONST 
0x419: v419 = GT vf5 v416(0x5)
0x41a: v41a(0x422) = CONST 
0x41d: JUMPI v41a(0x422) v419
----------------------------------

Begin block 0x41e
prev = {'0x415'}, next = {}
----------------------------------
Block 0x41e
0x41e: v41e(0x0) = CONST 
0x421: REVERT v41e(0x0) v41e(0x0)
----------------------------------

Begin block 0x422
prev = {'0x415'}, next = {'0x42f', '0x42b'}
----------------------------------
Block 0x422
0x423: v423(0x5f) = CONST 
0x426: v426 = LT vf5 v423(0x5f)
0x427: v427(0x42f) = CONST 
0x42a: JUMPI v427(0x42f) v426
----------------------------------

Begin block 0x42b
prev = {'0x422'}, next = {}
----------------------------------
Block 0x42b
0x42b: v42b(0x0) = CONST 
0x42e: REVERT v42b(0x0) v42b(0x0)
----------------------------------

Begin block 0x42f
prev = {'0x422'}, next = {'0x105'}
----------------------------------
Block 0x42f
0x430: v430(0x5) = CONST 
0x433: v433 = SUB vf5 v430(0x5)
0x437: v437(0x1) = CONST 
0x439: v439(0x0) = CONST 
0x43c: v43c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x451: v451 = AND v43c(0xffffffffffffffffffffffffffffffffffffffff) veb
0x452: v452(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x467: v467 = AND v452(0xffffffffffffffffffffffffffffffffffffffff) v451
0x469: MSTORE v439(0x0) v467
0x46a: v46a(0x20) = CONST 
0x46c: v46c(0x20) = ADD v46a(0x20) v439(0x0)
0x46f: MSTORE v46c(0x20) v437(0x1)
0x470: v470(0x20) = CONST 
0x472: v472(0x40) = ADD v470(0x20) v46c(0x20)
0x473: v473(0x0) = CONST 
0x475: v475 = SHA3 v473(0x0) v472(0x40)
0x478: SSTORE v475 v433
0x47c: JUMP vba(0x105)
----------------------------------

Begin block 0x47d
prev = {'0x113'}, next = {'0x11c'}
----------------------------------
Block 0x47d
0x47e: v47e(0x3) = CONST 
0x480: v480 = SLOAD v47e(0x3)
0x482: JUMP v115(0x11c)
----------------------------------

Begin block 0x483
prev = {'0x155'}, next = {'0x48b'}
----------------------------------
Block 0x483
0x484: v484(0x48b) = CONST 
0x487: v487(0x7ed) = CONST 
0x48a: v48a_0 = CALLPRIVATE v487(0x7ed) v484(0x48b)
----------------------------------

Begin block 0x48b
prev = {'0x483'}, next = {'0x490', '0x4fd'}
----------------------------------
Block 0x48b
0x48c: v48c(0x4fd) = CONST 
0x48f: JUMPI v48c(0x4fd) v48a_0
----------------------------------

Begin block 0x490
prev = {'0x48b'}, next = {}
----------------------------------
Block 0x490
0x490: v490(0x40) = CONST 
0x492: v492 = MLOAD v490(0x40)
0x493: v493(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x4b5: MSTORE v492 v493(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x4b6: v4b6(0x4) = CONST 
0x4b8: v4b8 = ADD v4b6(0x4) v492
0x4bb: v4bb(0x20) = CONST 
0x4bd: v4bd = ADD v4bb(0x20) v4b8
0x4c0: v4c0 = SUB v4bd v4b8
0x4c2: MSTORE v4b8 v4c0
0x4c3: v4c3(0x20) = CONST 
0x4c6: MSTORE v4bd v4c3(0x20)
0x4c7: v4c7(0x20) = CONST 
0x4c9: v4c9 = ADD v4c7(0x20) v4bd
0x4cb: v4cb(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x4ed: MSTORE v4c9 v4cb(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x4ef: v4ef(0x20) = CONST 
0x4f1: v4f1 = ADD v4ef(0x20) v4c9
0x4f5: v4f5(0x40) = CONST 
0x4f7: v4f7 = MLOAD v4f5(0x40)
0x4fa: v4fa = SUB v4f1 v4f7
0x4fc: REVERT v4f7 v4fa
----------------------------------

Begin block 0x4fd
prev = {'0x48b'}, next = {}
----------------------------------
Block 0x4fd
0x4fe: v4fe(0x0) = CONST 
0x500: MISSING 
----------------------------------

Begin block 0x607
prev = {'0x190'}, next = {'0x60f'}
----------------------------------
Block 0x607
0x608: v608(0x60f) = CONST 
0x60b: v60b(0x7ed) = CONST 
0x60e: v60e_0 = CALLPRIVATE v60b(0x7ed) v608(0x60f)
----------------------------------

Begin block 0x60f
prev = {'0x607'}, next = {'0x681', '0x614'}
----------------------------------
Block 0x60f
0x610: v610(0x681) = CONST 
0x613: JUMPI v610(0x681) v60e_0
----------------------------------

Begin block 0x614
prev = {'0x60f'}, next = {}
----------------------------------
Block 0x614
0x614: v614(0x40) = CONST 
0x616: v616 = MLOAD v614(0x40)
0x617: v617(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x639: MSTORE v616 v617(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x63a: v63a(0x4) = CONST 
0x63c: v63c = ADD v63a(0x4) v616
0x63f: v63f(0x20) = CONST 
0x641: v641 = ADD v63f(0x20) v63c
0x644: v644 = SUB v641 v63c
0x646: MSTORE v63c v644
0x647: v647(0x20) = CONST 
0x64a: MSTORE v641 v647(0x20)
0x64b: v64b(0x20) = CONST 
0x64d: v64d = ADD v64b(0x20) v641
0x64f: v64f(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x671: MSTORE v64d v64f(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x673: v673(0x20) = CONST 
0x675: v675 = ADD v673(0x20) v64d
0x679: v679(0x40) = CONST 
0x67b: v67b = MLOAD v679(0x40)
0x67e: v67e = SUB v675 v67b
0x680: REVERT v67b v67e
----------------------------------

Begin block 0x681
prev = {'0x60f'}, next = {'0x1a6'}
----------------------------------
Block 0x681
0x683: v683(0x3) = CONST 
0x687: SSTORE v683(0x3) v196
0x68a: JUMP v17b(0x1a6)
----------------------------------

Begin block 0x68b
prev = {'0x1b4'}, next = {'0x693'}
----------------------------------
Block 0x68b
0x68c: v68c(0x693) = CONST 
0x68f: v68f(0x7ed) = CONST 
0x692: v692_0 = CALLPRIVATE v68f(0x7ed) v68c(0x693)
----------------------------------

Begin block 0x693
prev = {'0x68b'}, next = {'0x705', '0x698'}
----------------------------------
Block 0x693
0x694: v694(0x705) = CONST 
0x697: JUMPI v694(0x705) v692_0
----------------------------------

Begin block 0x698
prev = {'0x693'}, next = {}
----------------------------------
Block 0x698
0x698: v698(0x40) = CONST 
0x69a: v69a = MLOAD v698(0x40)
0x69b: v69b(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x6bd: MSTORE v69a v69b(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x6be: v6be(0x4) = CONST 
0x6c0: v6c0 = ADD v6be(0x4) v69a
0x6c3: v6c3(0x20) = CONST 
0x6c5: v6c5 = ADD v6c3(0x20) v6c0
0x6c8: v6c8 = SUB v6c5 v6c0
0x6ca: MSTORE v6c0 v6c8
0x6cb: v6cb(0x20) = CONST 
0x6ce: MSTORE v6c5 v6cb(0x20)
0x6cf: v6cf(0x20) = CONST 
0x6d1: v6d1 = ADD v6cf(0x20) v6c5
0x6d3: v6d3(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x6f5: MSTORE v6d1 v6d3(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x6f7: v6f7(0x20) = CONST 
0x6f9: v6f9 = ADD v6f7(0x20) v6d1
0x6fd: v6fd(0x40) = CONST 
0x6ff: v6ff = MLOAD v6fd(0x40)
0x702: v702 = SUB v6f9 v6ff
0x704: REVERT v6ff v702
----------------------------------

Begin block 0x705
prev = {'0x693'}, next = {'0x1bd'}
----------------------------------
Block 0x705
0x706: v706(0x0) = CONST 
0x708: v708(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x71d: v71d(0x0) = AND v708(0xffffffffffffffffffffffffffffffffffffffff) v706(0x0)
0x71e: v71e(0x0) = CONST 
0x722: v722 = SLOAD v71e(0x0)
0x724: v724(0x100) = CONST 
0x727: v727(0x1) = EXP v724(0x100) v71e(0x0)
0x729: v729 = DIV v722 v727(0x1)
0x72a: v72a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x73f: v73f = AND v72a(0xffffffffffffffffffffffffffffffffffffffff) v729
0x740: v740(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x755: v755 = AND v740(0xffffffffffffffffffffffffffffffffffffffff) v73f
0x756: v756(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x777: v777(0x40) = CONST 
0x779: v779 = MLOAD v777(0x40)
0x77a: v77a(0x40) = CONST 
0x77c: v77c = MLOAD v77a(0x40)
0x77f: v77f = SUB v779 v77c
0x781: LOG3 v77c v77f v756(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v755 v71d(0x0)
0x782: v782(0x0) = CONST 
0x785: v785(0x0) = CONST 
0x787: v787(0x100) = CONST 
0x78a: v78a(0x1) = EXP v787(0x100) v785(0x0)
0x78c: v78c = SLOAD v782(0x0)
0x78e: v78e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x7a3: v7a3(0xffffffffffffffffffffffffffffffffffffffff) = MUL v78e(0xffffffffffffffffffffffffffffffffffffffff) v78a(0x1)
0x7a4: v7a4(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v7a3(0xffffffffffffffffffffffffffffffffffffffff)
0x7a5: v7a5 = AND v7a4(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v78c
0x7a8: v7a8(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x7bd: v7bd(0x0) = AND v7a8(0xffffffffffffffffffffffffffffffffffffffff) v782(0x0)
0x7be: v7be(0x0) = MUL v7bd(0x0) v78a(0x1)
0x7bf: v7bf = OR v7be(0x0) v7a5
0x7c1: SSTORE v782(0x0) v7bf
0x7c3: JUMP v1b6(0x1bd)
----------------------------------

Begin block 0x7c4
prev = {'0x1cb'}, next = {'0x1d4'}
----------------------------------
Block 0x7c4
0x7c5: v7c5(0x0) = CONST 
0x7c8: v7c8(0x0) = CONST 
0x7cb: v7cb = SLOAD v7c5(0x0)
0x7cd: v7cd(0x100) = CONST 
0x7d0: v7d0(0x1) = EXP v7cd(0x100) v7c8(0x0)
0x7d2: v7d2 = DIV v7cb v7d0(0x1)
0x7d3: v7d3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x7e8: v7e8 = AND v7d3(0xffffffffffffffffffffffffffffffffffffffff) v7d2
0x7ec: JUMP v1cd(0x1d4)
----------------------------------

Begin block 0x7ed
prev = {}, next = {'0xd03'}
----------------------------------
function 0x7ed(v7edarg0)
Block 0x7ed
0x7ee: v7ee(0x0) = CONST 
0x7f1: v7f1(0x0) = CONST 
0x7f4: v7f4 = SLOAD v7ee(0x0)
0x7f6: v7f6(0x100) = CONST 
0x7f9: v7f9(0x1) = EXP v7f6(0x100) v7f1(0x0)
0x7fb: v7fb = DIV v7f4 v7f9(0x1)
0x7fc: v7fc(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x811: v811 = AND v7fc(0xffffffffffffffffffffffffffffffffffffffff) v7fb
0x812: v812(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x827: v827 = AND v812(0xffffffffffffffffffffffffffffffffffffffff) v811
0x828: v828(0x82f) = CONST 
0x82b: v82b(0xd03) = CONST 
0x82e: JUMP v82b(0xd03)
----------------------------------

Begin block 0x82f
prev = {'0xd03'}, next = {}
----------------------------------
Block 0x82f
0x830: v830(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x845: v845 = AND v830(0xffffffffffffffffffffffffffffffffffffffff) vd06
0x846: v846 = EQ v845 v827
0x84a: RETURNPRIVATE v7edarg0 v846
----------------------------------

Begin block 0x84b
prev = {}, next = {'0x8e8', '0x8ec'}
----------------------------------
function 0x84b(v84barg0)
Block 0x84b
0x84c: v84c(0x0) = CONST 
0x84e: v84e(0x2) = CONST 
0x850: v850(0x0) = CONST 
0x853: v853 = SLOAD v84e(0x2)
0x855: v855(0x100) = CONST 
0x858: v858(0x1) = EXP v855(0x100) v850(0x0)
0x85a: v85a = DIV v853 v858(0x1)
0x85b: v85b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x870: v870 = AND v85b(0xffffffffffffffffffffffffffffffffffffffff) v85a
0x871: v871(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x886: v886 = AND v871(0xffffffffffffffffffffffffffffffffffffffff) v870
0x887: v887(0x70a08231) = CONST 
0x88c: v88c = ADDRESS 
0x88d: v88d(0x40) = CONST 
0x88f: v88f = MLOAD v88d(0x40)
0x891: v891(0xffffffff) = CONST 
0x896: v896(0x70a08231) = AND v891(0xffffffff) v887(0x70a08231)
0x897: v897(0xe0) = CONST 
0x899: v899(0x70a0823100000000000000000000000000000000000000000000000000000000) = SHL v897(0xe0) v896(0x70a08231)
0x89b: MSTORE v88f v899(0x70a0823100000000000000000000000000000000000000000000000000000000)
0x89c: v89c(0x4) = CONST 
0x89e: v89e = ADD v89c(0x4) v88f
0x8a1: v8a1(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x8b6: v8b6 = AND v8a1(0xffffffffffffffffffffffffffffffffffffffff) v88c
0x8b7: v8b7(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x8cc: v8cc = AND v8b7(0xffffffffffffffffffffffffffffffffffffffff) v8b6
0x8ce: MSTORE v89e v8cc
0x8cf: v8cf(0x20) = CONST 
0x8d1: v8d1 = ADD v8cf(0x20) v89e
0x8d5: v8d5(0x20) = CONST 
0x8d7: v8d7(0x40) = CONST 
0x8d9: v8d9 = MLOAD v8d7(0x40)
0x8dc: v8dc = SUB v8d1 v8d9
0x8e0: v8e0 = EXTCODESIZE v886
0x8e1: v8e1 = ISZERO v8e0
0x8e3: v8e3 = ISZERO v8e1
0x8e4: v8e4(0x8ec) = CONST 
0x8e7: JUMPI v8e4(0x8ec) v8e3
----------------------------------

Begin block 0x8e8
prev = {'0x84b'}, next = {}
----------------------------------
Block 0x8e8
0x8e8: v8e8(0x0) = CONST 
0x8eb: REVERT v8e8(0x0) v8e8(0x0)
----------------------------------

Begin block 0x8ec
prev = {'0x84b'}, next = {'0x900', '0x8f7'}
----------------------------------
Block 0x8ec
0x8ee: v8ee = GAS 
0x8ef: v8ef = STATICCALL v8ee v886 v8d9 v8dc v8d9 v8d5(0x20)
0x8f0: v8f0 = ISZERO v8ef
0x8f2: v8f2 = ISZERO v8f0
0x8f3: v8f3(0x900) = CONST 
0x8f6: JUMPI v8f3(0x900) v8f2
----------------------------------

Begin block 0x8f7
prev = {'0x8ec'}, next = {}
----------------------------------
Block 0x8f7
0x8f7: v8f7 = RETURNDATASIZE 
0x8f8: v8f8(0x0) = CONST 
0x8fb: RETURNDATACOPY v8f8(0x0) v8f8(0x0) v8f7
0x8fc: v8fc = RETURNDATASIZE 
0x8fd: v8fd(0x0) = CONST 
0x8ff: REVERT v8fd(0x0) v8fc
----------------------------------

Begin block 0x900
prev = {'0x8ec'}, next = {'0x912', '0x916'}
----------------------------------
Block 0x900
0x905: v905(0x40) = CONST 
0x907: v907 = MLOAD v905(0x40)
0x908: v908 = RETURNDATASIZE 
0x909: v909(0x20) = CONST 
0x90c: v90c = LT v908 v909(0x20)
0x90d: v90d = ISZERO v90c
0x90e: v90e(0x916) = CONST 
0x911: JUMPI v90e(0x916) v90d
----------------------------------

Begin block 0x912
prev = {'0x900'}, next = {}
----------------------------------
Block 0x912
0x912: v912(0x0) = CONST 
0x915: REVERT v912(0x0) v912(0x0)
----------------------------------

Begin block 0x916
prev = {'0x900'}, next = {}
----------------------------------
Block 0x916
0x918: v918 = ADD v907 v908
0x91c: v91c = MLOAD v907
0x91e: v91e(0x20) = CONST 
0x920: v920 = ADD v91e(0x20) v907
0x92b: RETURNPRIVATE v84barg0 v91c
----------------------------------

Begin block 0x92c
prev = {'0x27c'}, next = {'0x285'}
----------------------------------
Block 0x92c
0x92d: v92d(0x5) = CONST 
0x930: JUMP v27e(0x285)
----------------------------------

Begin block 0x931
prev = {'0x2b1'}, next = {'0x943'}
----------------------------------
Block 0x931
0x932: v932(0x0) = CONST 
0x935: v935(0x3) = CONST 
0x937: v937 = SLOAD v935(0x3)
0x938: v938 = CALLVALUE 
0x939: v939 = MUL v938 v937
0x93c: v93c(0x943) = CONST 
0x93f: v93f(0x84b) = CONST 
0x942: v942_0 = CALLPRIVATE v93f(0x84b) v93c(0x943)
----------------------------------

Begin block 0x943
prev = {'0x931'}, next = {'0x94b', '0x94f'}
----------------------------------
Block 0x943
0x945: v945 = GT v939 v942_0
0x946: v946 = ISZERO v945
0x947: v947(0x94f) = CONST 
0x94a: JUMPI v947(0x94f) v946
----------------------------------

Begin block 0x94b
prev = {'0x943'}, next = {}
----------------------------------
Block 0x94b
0x94b: v94b(0x0) = CONST 
0x94e: REVERT v94b(0x0) v94b(0x0)
----------------------------------

Begin block 0x94f
prev = {'0x943'}, next = {'0x9f4', '0x9f8'}
----------------------------------
Block 0x94f
0x950: v950(0x2) = CONST 
0x952: v952(0x0) = CONST 
0x955: v955 = SLOAD v950(0x2)
0x957: v957(0x100) = CONST 
0x95a: v95a(0x1) = EXP v957(0x100) v952(0x0)
0x95c: v95c = DIV v955 v95a(0x1)
0x95d: v95d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x972: v972 = AND v95d(0xffffffffffffffffffffffffffffffffffffffff) v95c
0x973: v973(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x988: v988 = AND v973(0xffffffffffffffffffffffffffffffffffffffff) v972
0x989: v989(0xa9059cbb) = CONST 
0x98e: v98e = CALLER 
0x990: v990(0x40) = CONST 
0x992: v992 = MLOAD v990(0x40)
0x994: v994(0xffffffff) = CONST 
0x999: v999(0xa9059cbb) = AND v994(0xffffffff) v989(0xa9059cbb)
0x99a: v99a(0xe0) = CONST 
0x99c: v99c(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = SHL v99a(0xe0) v999(0xa9059cbb)
0x99e: MSTORE v992 v99c(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0x99f: v99f(0x4) = CONST 
0x9a1: v9a1 = ADD v99f(0x4) v992
0x9a4: v9a4(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x9b9: v9b9 = AND v9a4(0xffffffffffffffffffffffffffffffffffffffff) v98e
0x9ba: v9ba(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x9cf: v9cf = AND v9ba(0xffffffffffffffffffffffffffffffffffffffff) v9b9
0x9d1: MSTORE v9a1 v9cf
0x9d2: v9d2(0x20) = CONST 
0x9d4: v9d4 = ADD v9d2(0x20) v9a1
0x9d7: MSTORE v9d4 v939
0x9d8: v9d8(0x20) = CONST 
0x9da: v9da = ADD v9d8(0x20) v9d4
0x9df: v9df(0x20) = CONST 
0x9e1: v9e1(0x40) = CONST 
0x9e3: v9e3 = MLOAD v9e1(0x40)
0x9e6: v9e6 = SUB v9da v9e3
0x9e8: v9e8(0x0) = CONST 
0x9ec: v9ec = EXTCODESIZE v988
0x9ed: v9ed = ISZERO v9ec
0x9ef: v9ef = ISZERO v9ed
0x9f0: v9f0(0x9f8) = CONST 
0x9f3: JUMPI v9f0(0x9f8) v9ef
----------------------------------

Begin block 0x9f4
prev = {'0x94f'}, next = {}
----------------------------------
Block 0x9f4
0x9f4: v9f4(0x0) = CONST 
0x9f7: REVERT v9f4(0x0) v9f4(0x0)
----------------------------------

Begin block 0x9f8
prev = {'0x94f'}, next = {'0xa03', '0xa0c'}
----------------------------------
Block 0x9f8
0x9fa: v9fa = GAS 
0x9fb: v9fb = CALL v9fa v988 v9e8(0x0) v9e3 v9e6 v9e3 v9df(0x20)
0x9fc: v9fc = ISZERO v9fb
0x9fe: v9fe = ISZERO v9fc
0x9ff: v9ff(0xa0c) = CONST 
0xa02: JUMPI v9ff(0xa0c) v9fe
----------------------------------

Begin block 0xa03
prev = {'0x9f8'}, next = {}
----------------------------------
Block 0xa03
0xa03: va03 = RETURNDATASIZE 
0xa04: va04(0x0) = CONST 
0xa07: RETURNDATACOPY va04(0x0) va04(0x0) va03
0xa08: va08 = RETURNDATASIZE 
0xa09: va09(0x0) = CONST 
0xa0b: REVERT va09(0x0) va08
----------------------------------

Begin block 0xa0c
prev = {'0x9f8'}, next = {'0xa22', '0xa1e'}
----------------------------------
Block 0xa0c
0xa11: va11(0x40) = CONST 
0xa13: va13 = MLOAD va11(0x40)
0xa14: va14 = RETURNDATASIZE 
0xa15: va15(0x20) = CONST 
0xa18: va18 = LT va14 va15(0x20)
0xa19: va19 = ISZERO va18
0xa1a: va1a(0xa22) = CONST 
0xa1d: JUMPI va1a(0xa22) va19
----------------------------------

Begin block 0xa1e
prev = {'0xa0c'}, next = {}
----------------------------------
Block 0xa1e
0xa1e: va1e(0x0) = CONST 
0xa21: REVERT va1e(0x0) va1e(0x0)
----------------------------------

Begin block 0xa22
prev = {'0xa0c'}, next = {'0xa69', '0xc1a'}
----------------------------------
Block 0xa22
0xa24: va24 = ADD va13 va14
0xa28: va28 = MLOAD va13
0xa2a: va2a(0x20) = CONST 
0xa2c: va2c = ADD va2a(0x20) va13
0xa35: va35(0x0) = CONST 
0xa37: va37(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xa4c: va4c(0x0) = AND va37(0xffffffffffffffffffffffffffffffffffffffff) va35(0x0)
0xa4e: va4e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xa63: va63 = AND va4e(0xffffffffffffffffffffffffffffffffffffffff) v2cd
0xa64: va64 = EQ va63 va4c(0x0)
0xa65: va65(0xc1a) = CONST 
0xa68: JUMPI va65(0xc1a) va64
----------------------------------

Begin block 0xa69
prev = {'0xa22'}, next = {'0xaed', '0xa9d'}
----------------------------------
Block 0xa69
0xa69: va69 = CALLER 
0xa6a: va6a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xa7f: va7f = AND va6a(0xffffffffffffffffffffffffffffffffffffffff) va69
0xa81: va81(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xa96: va96 = AND va81(0xffffffffffffffffffffffffffffffffffffffff) v2cd
0xa97: va97 = EQ va96 va7f
0xa98: va98 = ISZERO va97
0xa99: va99(0xaed) = CONST 
0xa9c: JUMPI va99(0xaed) va98
----------------------------------

Begin block 0xa9d
prev = {'0xa69'}, next = {}
----------------------------------
Block 0xa9d
0xa9d: va9d(0x40) = CONST 
0xa9f: va9f = MLOAD va9d(0x40)
0xaa0: vaa0(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xac2: MSTORE va9f vaa0(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xac3: vac3(0x4) = CONST 
0xac5: vac5 = ADD vac3(0x4) va9f
0xac8: vac8(0x20) = CONST 
0xaca: vaca = ADD vac8(0x20) vac5
0xacd: vacd = SUB vaca vac5
0xacf: MSTORE vac5 vacd
0xad0: vad0(0x21) = CONST 
0xad3: MSTORE vaca vad0(0x21)
0xad4: vad4(0x20) = CONST 
0xad6: vad6 = ADD vad4(0x20) vaca
0xad8: vad8(0xea2) = CONST 
0xadb: vadb(0x21) = CONST 
0xade: CODECOPY vad6 vad8(0xea2) vadb(0x21)
0xadf: vadf(0x40) = CONST 
0xae1: vae1 = ADD vadf(0x40) vad6
0xae5: vae5(0x40) = CONST 
0xae7: vae7 = MLOAD vae5(0x40)
0xaea: vaea = SUB vae1 vae7
0xaec: REVERT vae7 vaea
----------------------------------

Begin block 0xaed
prev = {'0xa69'}, next = {'0xb22', '0xb72'}
----------------------------------
Block 0xaed
0xaee: vaee = ORIGIN 
0xaef: vaef(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xb04: vb04 = AND vaef(0xffffffffffffffffffffffffffffffffffffffff) vaee
0xb06: vb06(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xb1b: vb1b = AND vb06(0xffffffffffffffffffffffffffffffffffffffff) v2cd
0xb1c: vb1c = EQ vb1b vb04
0xb1d: vb1d = ISZERO vb1c
0xb1e: vb1e(0xb72) = CONST 
0xb21: JUMPI vb1e(0xb72) vb1d
----------------------------------

Begin block 0xb22
prev = {'0xaed'}, next = {}
----------------------------------
Block 0xb22
0xb22: vb22(0x40) = CONST 
0xb24: vb24 = MLOAD vb22(0x40)
0xb25: vb25(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xb47: MSTORE vb24 vb25(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xb48: vb48(0x4) = CONST 
0xb4a: vb4a = ADD vb48(0x4) vb24
0xb4d: vb4d(0x20) = CONST 
0xb4f: vb4f = ADD vb4d(0x20) vb4a
0xb52: vb52 = SUB vb4f vb4a
0xb54: MSTORE vb4a vb52
0xb55: vb55(0x2c) = CONST 
0xb58: MSTORE vb4f vb55(0x2c)
0xb59: vb59(0x20) = CONST 
0xb5b: vb5b = ADD vb59(0x20) vb4f
0xb5d: vb5d(0xe76) = CONST 
0xb60: vb60(0x2c) = CONST 
0xb63: CODECOPY vb5b vb5d(0xe76) vb60(0x2c)
0xb64: vb64(0x40) = CONST 
0xb66: vb66 = ADD vb64(0x40) vb5b
0xb6a: vb6a(0x40) = CONST 
0xb6c: vb6c = MLOAD vb6a(0x40)
0xb6f: vb6f = SUB vb66 vb6c
0xb71: REVERT vb6c vb6f
----------------------------------

Begin block 0xb72
prev = {'0xaed'}, next = {'0xbc7'}
----------------------------------
Block 0xb72
0xb73: vb73(0x0) = CONST 
0xb75: vb75(0x1) = CONST 
0xb77: vb77(0x0) = CONST 
0xb7a: vb7a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xb8f: vb8f = AND vb7a(0xffffffffffffffffffffffffffffffffffffffff) v2cd
0xb90: vb90(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xba5: vba5 = AND vb90(0xffffffffffffffffffffffffffffffffffffffff) vb8f
0xba7: MSTORE vb77(0x0) vba5
0xba8: vba8(0x20) = CONST 
0xbaa: vbaa(0x20) = ADD vba8(0x20) vb77(0x0)
0xbad: MSTORE vbaa(0x20) vb75(0x1)
0xbae: vbae(0x20) = CONST 
0xbb0: vbb0(0x40) = ADD vbae(0x20) vbaa(0x20)
0xbb1: vbb1(0x0) = CONST 
0xbb3: vbb3 = SHA3 vbb1(0x0) vbb0(0x40)
0xbb4: vbb4 = SLOAD vbb3
0xbb5: vbb5(0x5) = CONST 
0xbb7: vbb7 = ADD vbb5(0x5) vbb4
0xbba: vbba(0x0) = CONST 
0xbbc: vbbc(0x64) = CONST 
0xbbf: vbbf = CALLVALUE 
0xbc0: vbc0 = MUL vbbf vbb7
0xbc2: vbc2(0xbc7) = CONST 
0xbc5: JUMPI vbc2(0xbc7) vbbc(0x64)
----------------------------------

Begin block 0xbc7
prev = {'0xb72'}, next = {'0xc15', '0xc0c'}
----------------------------------
Block 0xbc7
0xbc8: vbc8 = DIV vbc0 vbbc(0x64)
0xbcb: vbcb(0x0) = CONST 
0xbd1: vbd1(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xbe6: vbe6 = AND vbd1(0xffffffffffffffffffffffffffffffffffffffff) v2cd
0xbe7: vbe7(0x8fc) = CONST 
0xbed: vbed = ISZERO vbc8
0xbee: vbee = MUL vbed vbe7(0x8fc)
0xbf0: vbf0(0x40) = CONST 
0xbf2: vbf2 = MLOAD vbf0(0x40)
0xbf3: vbf3(0x0) = CONST 
0xbf5: vbf5(0x40) = CONST 
0xbf7: vbf7 = MLOAD vbf5(0x40)
0xbfa: vbfa = SUB vbf2 vbf7
0xbff: vbff = CALL vbee vbe6 vbc8 vbf7 vbfa vbf7 vbf3(0x0)
0xc05: vc05 = ISZERO vbff
0xc07: vc07 = ISZERO vc05
0xc08: vc08(0xc15) = CONST 
0xc0b: JUMPI vc08(0xc15) vc07
----------------------------------

Begin block 0xc0c
prev = {'0xbc7'}, next = {}
----------------------------------
Block 0xc0c
0xc0c: vc0c = RETURNDATASIZE 
0xc0d: vc0d(0x0) = CONST 
0xc10: RETURNDATACOPY vc0d(0x0) vc0d(0x0) vc0c
0xc11: vc11 = RETURNDATASIZE 
0xc12: vc12(0x0) = CONST 
0xc14: REVERT vc12(0x0) vc11
----------------------------------

Begin block 0xc15
prev = {'0xbc7'}, next = {'0xc1a'}
----------------------------------
Block 0xc15
----------------------------------

Begin block 0xc1a
prev = {'0xc15', '0xa22'}, next = {'0x2dd'}
----------------------------------
Block 0xc1a
0xc1b: vc1b(0x6ac79300fdc15433d6baf4670095e0ccb0ea9ce0e461056a51b917f25165188c) = CONST 
0xc3d: vc3d(0x40) = CONST 
0xc3f: vc3f = MLOAD vc3d(0x40)
0xc43: MSTORE vc3f v939
0xc44: vc44(0x20) = CONST 
0xc46: vc46 = ADD vc44(0x20) vc3f
0xc4a: vc4a(0x40) = CONST 
0xc4c: vc4c = MLOAD vc4a(0x40)
0xc4f: vc4f = SUB vc46 vc4c
0xc51: LOG1 vc4c vc4f vc1b(0x6ac79300fdc15433d6baf4670095e0ccb0ea9ce0e461056a51b917f25165188c)
0xc56: JUMP v29c(0x2dd)
----------------------------------

Begin block 0xc57
prev = {'0x316'}, next = {'0xc5f'}
----------------------------------
Block 0xc57
0xc58: vc58(0xc5f) = CONST 
0xc5b: vc5b(0x7ed) = CONST 
0xc5e: vc5e_0 = CALLPRIVATE vc5b(0x7ed) vc58(0xc5f)
----------------------------------

Begin block 0xc5f
prev = {'0xc57'}, next = {'0xcd1', '0xc64'}
----------------------------------
Block 0xc5f
0xc60: vc60(0xcd1) = CONST 
0xc63: JUMPI vc60(0xcd1) vc5e_0
----------------------------------

Begin block 0xc64
prev = {'0xc5f'}, next = {}
----------------------------------
Block 0xc64
0xc64: vc64(0x40) = CONST 
0xc66: vc66 = MLOAD vc64(0x40)
0xc67: vc67(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xc89: MSTORE vc66 vc67(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xc8a: vc8a(0x4) = CONST 
0xc8c: vc8c = ADD vc8a(0x4) vc66
0xc8f: vc8f(0x20) = CONST 
0xc91: vc91 = ADD vc8f(0x20) vc8c
0xc94: vc94 = SUB vc91 vc8c
0xc96: MSTORE vc8c vc94
0xc97: vc97(0x20) = CONST 
0xc9a: MSTORE vc91 vc97(0x20)
0xc9b: vc9b(0x20) = CONST 
0xc9d: vc9d = ADD vc9b(0x20) vc91
0xc9f: vc9f(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0xcc1: MSTORE vc9d vc9f(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xcc3: vcc3(0x20) = CONST 
0xcc5: vcc5 = ADD vcc3(0x20) vc9d
0xcc9: vcc9(0x40) = CONST 
0xccb: vccb = MLOAD vcc9(0x40)
0xcce: vcce = SUB vcc5 vccb
0xcd0: REVERT vccb vcce
----------------------------------

Begin block 0xcd1
prev = {'0xc5f'}, next = {'0xd0b'}
----------------------------------
Block 0xcd1
0xcd2: vcd2(0xcda) = CONST 
0xcd6: vcd6(0xd0b) = CONST 
0xcd9: JUMP vcd6(0xd0b)
----------------------------------

Begin block 0xcda
prev = {'0xd91'}, next = {'0x342'}
----------------------------------
Block 0xcda
0xcdc: JUMP v301(0x342)
----------------------------------

Begin block 0xcdd
prev = {'0x350'}, next = {'0x359'}
----------------------------------
Block 0xcdd
0xcde: vcde(0x2) = CONST 
0xce0: vce0(0x0) = CONST 
0xce3: vce3 = SLOAD vcde(0x2)
0xce5: vce5(0x100) = CONST 
0xce8: vce8(0x1) = EXP vce5(0x100) vce0(0x0)
0xcea: vcea = DIV vce3 vce8(0x1)
0xceb: vceb(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xd00: vd00 = AND vceb(0xffffffffffffffffffffffffffffffffffffffff) vcea
0xd02: JUMP v352(0x359)
----------------------------------

Begin block 0xd03
prev = {'0x7ed'}, next = {'0x82f'}
----------------------------------
Block 0xd03
0xd04: vd04(0x0) = CONST 
0xd06: vd06 = CALLER 
0xd0a: JUMP v828(0x82f)
----------------------------------

Begin block 0xd0b
prev = {'0xcd1'}, next = {'0xd91', '0xd41'}
----------------------------------
Block 0xd0b
0xd0c: vd0c(0x0) = CONST 
0xd0e: vd0e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xd23: vd23(0x0) = AND vd0e(0xffffffffffffffffffffffffffffffffffffffff) vd0c(0x0)
0xd25: vd25(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xd3a: vd3a = AND vd25(0xffffffffffffffffffffffffffffffffffffffff) v332
0xd3b: vd3b = EQ vd3a vd23(0x0)
0xd3c: vd3c = ISZERO vd3b
0xd3d: vd3d(0xd91) = CONST 
0xd40: JUMPI vd3d(0xd91) vd3c
----------------------------------

Begin block 0xd41
prev = {'0xd0b'}, next = {}
----------------------------------
Block 0xd41
0xd41: vd41(0x40) = CONST 
0xd43: vd43 = MLOAD vd41(0x40)
0xd44: vd44(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xd66: MSTORE vd43 vd44(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xd67: vd67(0x4) = CONST 
0xd69: vd69 = ADD vd67(0x4) vd43
0xd6c: vd6c(0x20) = CONST 
0xd6e: vd6e = ADD vd6c(0x20) vd69
0xd71: vd71 = SUB vd6e vd69
0xd73: MSTORE vd69 vd71
0xd74: vd74(0x26) = CONST 
0xd77: MSTORE vd6e vd74(0x26)
0xd78: vd78(0x20) = CONST 
0xd7a: vd7a = ADD vd78(0x20) vd6e
0xd7c: vd7c(0xe50) = CONST 
0xd7f: vd7f(0x26) = CONST 
0xd82: CODECOPY vd7a vd7c(0xe50) vd7f(0x26)
0xd83: vd83(0x40) = CONST 
0xd85: vd85 = ADD vd83(0x40) vd7a
0xd89: vd89(0x40) = CONST 
0xd8b: vd8b = MLOAD vd89(0x40)
0xd8e: vd8e = SUB vd85 vd8b
0xd90: REVERT vd8b vd8e
----------------------------------

Begin block 0xd91
prev = {'0xd0b'}, next = {'0xcda'}
----------------------------------
Block 0xd91
0xd93: vd93(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xda8: vda8 = AND vd93(0xffffffffffffffffffffffffffffffffffffffff) v332
0xda9: vda9(0x0) = CONST 
0xdad: vdad = SLOAD vda9(0x0)
0xdaf: vdaf(0x100) = CONST 
0xdb2: vdb2(0x1) = EXP vdaf(0x100) vda9(0x0)
0xdb4: vdb4 = DIV vdad vdb2(0x1)
0xdb5: vdb5(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xdca: vdca = AND vdb5(0xffffffffffffffffffffffffffffffffffffffff) vdb4
0xdcb: vdcb(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xde0: vde0 = AND vdcb(0xffffffffffffffffffffffffffffffffffffffff) vdca
0xde1: vde1(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0xe02: ve02(0x40) = CONST 
0xe04: ve04 = MLOAD ve02(0x40)
0xe05: ve05(0x40) = CONST 
0xe07: ve07 = MLOAD ve05(0x40)
0xe0a: ve0a = SUB ve04 ve07
0xe0c: LOG3 ve07 ve0a vde1(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) vde0 vda8
0xe0e: ve0e(0x0) = CONST 
0xe11: ve11(0x100) = CONST 
0xe14: ve14(0x1) = EXP ve11(0x100) ve0e(0x0)
0xe16: ve16 = SLOAD ve0e(0x0)
0xe18: ve18(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xe2d: ve2d(0xffffffffffffffffffffffffffffffffffffffff) = MUL ve18(0xffffffffffffffffffffffffffffffffffffffff) ve14(0x1)
0xe2e: ve2e(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT ve2d(0xffffffffffffffffffffffffffffffffffffffff)
0xe2f: ve2f = AND ve2e(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) ve16
0xe32: ve32(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xe47: ve47 = AND ve32(0xffffffffffffffffffffffffffffffffffffffff) v332
0xe48: ve48 = MUL ve47 ve14(0x1)
0xe49: ve49 = OR ve48 ve2f
0xe4b: SSTORE ve0e(0x0) ve49
0xe4e: JUMP vcd2(0xcda)
----------------------------------

Begin block 0xf09
prev = {'0x9c', '0x0'}, next = {'0xa70x0'}
----------------------------------
Block 0xf09
0xf0a: vf0a(0xa7) = CONST 
0xf0b: CALLPRIVATE vf0a(0xa7)
----------------------------------

Begin block 0xf0c
prev = {'0x64'}, next = {}
----------------------------------
Block 0xf0c
0xf0d: vf0d(0xac) = CONST 
0xf0e: CALLPRIVATE vf0d(0xac)
----------------------------------

Begin block 0xf0f
prev = {'0x70'}, next = {}
----------------------------------
Block 0xf0f
0xf10: vf10(0x107) = CONST 
0xf11: CALLPRIVATE vf10(0x107)
----------------------------------

Begin block 0xf12
prev = {'0x7b'}, next = {}
----------------------------------
Block 0xf12
0xf13: vf13(0x132) = CONST 
0xf14: CALLPRIVATE vf13(0x132)
----------------------------------

Begin block 0xf15
prev = {'0x86'}, next = {}
----------------------------------
Block 0xf15
0xf16: vf16(0x16d) = CONST 
0xf17: CALLPRIVATE vf16(0x16d)
----------------------------------

Begin block 0xf18
prev = {'0x91'}, next = {}
----------------------------------
Block 0xf18
0xf19: vf19(0x1a8) = CONST 
0xf1a: CALLPRIVATE vf19(0x1a8)
----------------------------------

Begin block 0xf1b
prev = {'0x9c'}, next = {}
----------------------------------
Block 0xf1b
0xf1c: vf1c(0x1bf) = CONST 
0xf1d: CALLPRIVATE vf1c(0x1bf)
----------------------------------

Begin block 0xf1e
prev = {'0x1e'}, next = {}
----------------------------------
Block 0xf1e
0xf1f: vf1f(0x216) = CONST 
0xf20: CALLPRIVATE vf1f(0x216)
----------------------------------

Begin block 0xf21
prev = {'0x29'}, next = {}
----------------------------------
Block 0xf21
0xf22: vf22(0x245) = CONST 
0xf23: CALLPRIVATE vf22(0x245)
----------------------------------

Begin block 0xf24
prev = {'0x34'}, next = {}
----------------------------------
Block 0xf24
0xf25: vf25(0x270) = CONST 
0xf26: CALLPRIVATE vf25(0x270)
----------------------------------

Begin block 0xf27
prev = {'0x3f'}, next = {}
----------------------------------
Block 0xf27
0xf28: vf28(0x29b) = CONST 
0xf29: CALLPRIVATE vf28(0x29b)
----------------------------------

Begin block 0xf2a
prev = {'0x4a'}, next = {}
----------------------------------
Block 0xf2a
0xf2b: vf2b(0x2f3) = CONST 
0xf2c: CALLPRIVATE vf2b(0x2f3)
----------------------------------

Begin block 0xf2d
prev = {'0x55'}, next = {}
----------------------------------
Block 0xf2d
0xf2e: vf2e(0x344) = CONST 
0xf2f: CALLPRIVATE vf2e(0x344)
----------------------------------
