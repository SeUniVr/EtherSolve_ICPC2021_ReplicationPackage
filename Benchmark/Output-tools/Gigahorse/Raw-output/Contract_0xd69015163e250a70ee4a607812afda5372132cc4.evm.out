
Begin block 0x0
prev = {}, next = {'0xd', '0x2d6'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x2ce: v2ce(0x2d6) = CONST 
0x2cf: JUMPI v2ce(0x2d6) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x2d9', '0x1e'}
----------------------------------
Block 0xd
0xd: vd(0x0) = CONST 
0xf: vf = CALLDATALOAD vd(0x0)
0x10: v10(0xe0) = CONST 
0x12: v12 = SHR v10(0xe0) vf
0x14: v14(0x2801617e) = CONST 
0x19: v19 = EQ v14(0x2801617e) v12
0x2d0: v2d0(0x2d9) = CONST 
0x2d1: JUMPI v2d0(0x2d9) v19
----------------------------------

Begin block 0x1e
prev = {'0xd'}, next = {'0x2dc', '0x29'}
----------------------------------
Block 0x1e
0x1f: v1f(0x6d4ce63c) = CONST 
0x24: v24 = EQ v1f(0x6d4ce63c) v12
0x2d2: v2d2(0x2dc) = CONST 
0x2d3: JUMPI v2d2(0x2dc) v24
----------------------------------

Begin block 0x29
prev = {'0x1e'}, next = {'0x34', '0x2df'}
----------------------------------
Block 0x29
0x2a: v2a(0xa6f9dae1) = CONST 
0x2f: v2f = EQ v2a(0xa6f9dae1) v12
0x2d4: v2d4(0x2df) = CONST 
0x2d5: JUMPI v2d4(0x2df) v2f
----------------------------------

Begin block 0x34
prev = {'0x29'}, next = {'0xb70x0'}
----------------------------------
Block 0x34
0x34: v34(0xb7) = CONST 
0x37: JUMP v34(0xb7)
----------------------------------

Begin block 0x38
prev = {}, next = {'0x3e', '0xb70x38'}
----------------------------------
function batchLock_63efZf()()
Block 0x38
0x39: v39 = CALLDATASIZE 
0x3a: v3a(0xb7) = CONST 
0x3d: JUMPI v3a(0xb7) v39
----------------------------------

Begin block 0x3e
prev = {'0x38'}, next = {'0x70', '0x79'}
----------------------------------
Block 0x3e
0x3e: v3e(0x1) = CONST 
0x40: v40 = SLOAD v3e(0x1)
0x41: v41(0x40) = CONST 
0x43: v43 = MLOAD v41(0x40)
0x44: v44(0x1) = CONST 
0x46: v46(0x1) = CONST 
0x48: v48(0xa0) = CONST 
0x4a: v4a(0x10000000000000000000000000000000000000000) = SHL v48(0xa0) v46(0x1)
0x4b: v4b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4a(0x10000000000000000000000000000000000000000) v44(0x1)
0x4e: v4e = AND v40 v4b(0xffffffffffffffffffffffffffffffffffffffff)
0x50: v50(0xa) = CONST 
0x52: v52 = CALLVALUE 
0x53: v53 = DIV v52 v50(0xa)
0x55: v55 = ISZERO v53
0x56: v56(0x8fc) = CONST 
0x59: v59 = MUL v56(0x8fc) v55
0x5b: v5b(0x0) = CONST 
0x63: v63 = CALL v59 v4e v53 v43 v5b(0x0) v43 v5b(0x0)
0x69: v69 = ISZERO v63
0x6b: v6b = ISZERO v69
0x6c: v6c(0x79) = CONST 
0x6f: JUMPI v6c(0x79) v6b
----------------------------------

Begin block 0x70
prev = {'0x3e'}, next = {}
----------------------------------
Block 0x70
0x70: v70 = RETURNDATASIZE 
0x71: v71(0x0) = CONST 
0x74: RETURNDATACOPY v71(0x0) v71(0x0) v70
0x75: v75 = RETURNDATASIZE 
0x76: v76(0x0) = CONST 
0x78: REVERT v76(0x0) v75
----------------------------------

Begin block 0x79
prev = {'0x3e'}, next = {}
----------------------------------
Block 0x79
0x7b: v7b(0x0) = CONST 
0x7e: v7e = SLOAD v7b(0x0)
0x7f: v7f(0x40) = CONST 
0x81: v81 = MLOAD v7f(0x40)
0x82: v82(0x1) = CONST 
0x84: v84(0x1) = CONST 
0x86: v86(0xa0) = CONST 
0x88: v88(0x10000000000000000000000000000000000000000) = SHL v86(0xa0) v84(0x1)
0x89: v89(0xffffffffffffffffffffffffffffffffffffffff) = SUB v88(0x10000000000000000000000000000000000000000) v82(0x1)
0x8c: v8c = AND v7e v89(0xffffffffffffffffffffffffffffffffffffffff)
0x8e: MISSING 
----------------------------------

Begin block 0xb70x0
prev = {'0x34'}, next = {}
----------------------------------
Block 0xb70x0
0xb80x0: v0b8(0x0) = CONST 
0xbb0x0: REVERT v0b8(0x0) v0b8(0x0)
----------------------------------

Begin block 0xb70x38
prev = {'0x38'}, next = {}
----------------------------------
Block 0xb70x38
0xb80x38: v38b8(0x0) = CONST 
0xbb0x38: REVERT v38b8(0x0) v38b8(0x0)
----------------------------------

Begin block 0xbc
prev = {}, next = {'0xc4', '0xc8'}
----------------------------------
function set(address)()
Block 0xbc
0xbd: vbd = CALLVALUE 
0xbf: vbf = ISZERO vbd
0xc0: vc0(0xc8) = CONST 
0xc3: JUMPI vc0(0xc8) vbf
----------------------------------

Begin block 0xc4
prev = {'0xbc'}, next = {}
----------------------------------
Block 0xc4
0xc4: vc4(0x0) = CONST 
0xc7: REVERT vc4(0x0) vc4(0x0)
----------------------------------

Begin block 0xc8
prev = {'0xbc'}, next = {'0xdf', '0xdb'}
----------------------------------
Block 0xc8
0xca: vca(0xef) = CONST 
0xcd: vcd(0x4) = CONST 
0xd0: vd0 = CALLDATASIZE 
0xd1: vd1 = SUB vd0 vcd(0x4)
0xd2: vd2(0x20) = CONST 
0xd5: vd5 = LT vd1 vd2(0x20)
0xd6: vd6 = ISZERO vd5
0xd7: vd7(0xdf) = CONST 
0xda: JUMPI vd7(0xdf) vd6
----------------------------------

Begin block 0xdb
prev = {'0xc8'}, next = {}
----------------------------------
Block 0xdb
0xdb: vdb(0x0) = CONST 
0xde: REVERT vdb(0x0) vdb(0x0)
----------------------------------

Begin block 0xdf
prev = {'0xc8'}, next = {'0x15f'}
----------------------------------
Block 0xdf
0xe1: ve1 = CALLDATALOAD vcd(0x4)
0xe2: ve2(0x1) = CONST 
0xe4: ve4(0x1) = CONST 
0xe6: ve6(0xa0) = CONST 
0xe8: ve8(0x10000000000000000000000000000000000000000) = SHL ve6(0xa0) ve4(0x1)
0xe9: ve9(0xffffffffffffffffffffffffffffffffffffffff) = SUB ve8(0x10000000000000000000000000000000000000000) ve2(0x1)
0xea: vea = AND ve9(0xffffffffffffffffffffffffffffffffffffffff) ve1
0xeb: veb(0x15f) = CONST 
0xee: JUMP veb(0x15f)
----------------------------------

Begin block 0xef0xbc
prev = {'0x1b6'}, next = {}
----------------------------------
Block 0xef0xbc
0xf00xbc: STOP 
----------------------------------

Begin block 0xef0x12c
prev = {'0x246'}, next = {}
----------------------------------
Block 0xef0x12c
0xf00x12c: STOP 
----------------------------------

Begin block 0xf1
prev = {}, next = {'0xf9', '0xfd'}
----------------------------------
function get()()
Block 0xf1
0xf2: vf2 = CALLVALUE 
0xf4: vf4 = ISZERO vf2
0xf5: vf5(0xfd) = CONST 
0xf8: JUMPI vf5(0xfd) vf4
----------------------------------

Begin block 0xf9
prev = {'0xf1'}, next = {}
----------------------------------
Block 0xf9
0xf9: vf9(0x0) = CONST 
0xfc: REVERT vf9(0x0) vf9(0x0)
----------------------------------

Begin block 0xfd
prev = {'0xf1'}, next = {'0x1d8'}
----------------------------------
Block 0xfd
0xff: vff(0x106) = CONST 
0x102: v102(0x1d8) = CONST 
0x105: JUMP v102(0x1d8)
----------------------------------

Begin block 0x106
prev = {'0x1d8'}, next = {}
----------------------------------
Block 0x106
0x107: v107(0x40) = CONST 
0x10a: v10a = MLOAD v107(0x40)
0x10b: v10b(0x1) = CONST 
0x10d: v10d(0x1) = CONST 
0x10f: v10f(0xa0) = CONST 
0x111: v111(0x10000000000000000000000000000000000000000) = SHL v10f(0xa0) v10d(0x1)
0x112: v112(0xffffffffffffffffffffffffffffffffffffffff) = SUB v111(0x10000000000000000000000000000000000000000) v10b(0x1)
0x115: v115 = AND v112(0xffffffffffffffffffffffffffffffffffffffff) v1e9
0x117: MSTORE v10a v115
0x11b: v11b = AND v112(0xffffffffffffffffffffffffffffffffffffffff) v1eb
0x11c: v11c(0x20) = CONST 
0x11f: v11f = ADD v10a v11c(0x20)
0x120: MSTORE v11f v11b
0x122: v122 = MLOAD v107(0x40)
0x126: v126 = SUB v10a v122
0x129: v129 = ADD v107(0x40) v126
0x12b: RETURN v122 v129
----------------------------------

Begin block 0x12c
prev = {}, next = {'0x138', '0x134'}
----------------------------------
function changeOwner(address)()
Block 0x12c
0x12d: v12d = CALLVALUE 
0x12f: v12f = ISZERO v12d
0x130: v130(0x138) = CONST 
0x133: JUMPI v130(0x138) v12f
----------------------------------

Begin block 0x134
prev = {'0x12c'}, next = {}
----------------------------------
Block 0x134
0x134: v134(0x0) = CONST 
0x137: REVERT v134(0x0) v134(0x0)
----------------------------------

Begin block 0x138
prev = {'0x12c'}, next = {'0x14b', '0x14f'}
----------------------------------
Block 0x138
0x13a: v13a(0xef) = CONST 
0x13d: v13d(0x4) = CONST 
0x140: v140 = CALLDATASIZE 
0x141: v141 = SUB v140 v13d(0x4)
0x142: v142(0x20) = CONST 
0x145: v145 = LT v141 v142(0x20)
0x146: v146 = ISZERO v145
0x147: v147(0x14f) = CONST 
0x14a: JUMPI v147(0x14f) v146
----------------------------------

Begin block 0x14b
prev = {'0x138'}, next = {}
----------------------------------
Block 0x14b
0x14b: v14b(0x0) = CONST 
0x14e: REVERT v14b(0x0) v14b(0x0)
----------------------------------

Begin block 0x14f
prev = {'0x138'}, next = {'0x1ef'}
----------------------------------
Block 0x14f
0x151: v151 = CALLDATALOAD v13d(0x4)
0x152: v152(0x1) = CONST 
0x154: v154(0x1) = CONST 
0x156: v156(0xa0) = CONST 
0x158: v158(0x10000000000000000000000000000000000000000) = SHL v156(0xa0) v154(0x1)
0x159: v159(0xffffffffffffffffffffffffffffffffffffffff) = SUB v158(0x10000000000000000000000000000000000000000) v152(0x1)
0x15a: v15a = AND v159(0xffffffffffffffffffffffffffffffffffffffff) v151
0x15b: v15b(0x1ef) = CONST 
0x15e: JUMP v15b(0x1ef)
----------------------------------

Begin block 0x15f
prev = {'0xdf'}, next = {'0x1b6', '0x172'}
----------------------------------
Block 0x15f
0x160: v160(0x0) = CONST 
0x162: v162 = SLOAD v160(0x0)
0x163: v163(0x1) = CONST 
0x165: v165(0x1) = CONST 
0x167: v167(0xa0) = CONST 
0x169: v169(0x10000000000000000000000000000000000000000) = SHL v167(0xa0) v165(0x1)
0x16a: v16a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v169(0x10000000000000000000000000000000000000000) v163(0x1)
0x16b: v16b = AND v16a(0xffffffffffffffffffffffffffffffffffffffff) v162
0x16c: v16c = CALLER 
0x16d: v16d = EQ v16c v16b
0x16e: v16e(0x1b6) = CONST 
0x171: JUMPI v16e(0x1b6) v16d
----------------------------------

Begin block 0x172
prev = {'0x15f'}, next = {}
----------------------------------
Block 0x172
0x172: v172(0x40) = CONST 
0x175: v175 = MLOAD v172(0x40)
0x176: v176(0x461bcd) = CONST 
0x17a: v17a(0xe5) = CONST 
0x17c: v17c(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v17a(0xe5) v176(0x461bcd)
0x17e: MSTORE v175 v17c(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x17f: v17f(0x20) = CONST 
0x181: v181(0x4) = CONST 
0x184: v184 = ADD v175 v181(0x4)
0x185: MSTORE v184 v17f(0x20)
0x186: v186(0x15) = CONST 
0x188: v188(0x24) = CONST 
0x18b: v18b = ADD v175 v188(0x24)
0x18c: MSTORE v18b v186(0x15)
0x18d: v18d(0x2cb7ba9030b932903737ba103a34329037bbb732b9) = CONST 
0x1a3: v1a3(0x59) = CONST 
0x1a5: v1a5(0x596f7520617265206e6f7420746865206f776e65720000000000000000000000) = SHL v1a3(0x59) v18d(0x2cb7ba9030b932903737ba103a34329037bbb732b9)
0x1a6: v1a6(0x44) = CONST 
0x1a9: v1a9 = ADD v175 v1a6(0x44)
0x1aa: MSTORE v1a9 v1a5(0x596f7520617265206e6f7420746865206f776e65720000000000000000000000)
0x1ac: v1ac = MLOAD v172(0x40)
0x1b0: v1b0 = SUB v175 v1ac
0x1b1: v1b1(0x64) = CONST 
0x1b3: v1b3 = ADD v1b1(0x64) v1b0
0x1b5: REVERT v1ac v1b3
----------------------------------

Begin block 0x1b6
prev = {'0x15f'}, next = {'0xef0xbc'}
----------------------------------
Block 0x1b6
0x1b7: v1b7(0x1) = CONST 
0x1ba: v1ba = SLOAD v1b7(0x1)
0x1bb: v1bb(0x1) = CONST 
0x1bd: v1bd(0x1) = CONST 
0x1bf: v1bf(0xa0) = CONST 
0x1c1: v1c1(0x10000000000000000000000000000000000000000) = SHL v1bf(0xa0) v1bd(0x1)
0x1c2: v1c2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1c1(0x10000000000000000000000000000000000000000) v1bb(0x1)
0x1c3: v1c3(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v1c2(0xffffffffffffffffffffffffffffffffffffffff)
0x1c4: v1c4 = AND v1c3(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v1ba
0x1c5: v1c5(0x1) = CONST 
0x1c7: v1c7(0x1) = CONST 
0x1c9: v1c9(0xa0) = CONST 
0x1cb: v1cb(0x10000000000000000000000000000000000000000) = SHL v1c9(0xa0) v1c7(0x1)
0x1cc: v1cc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1cb(0x10000000000000000000000000000000000000000) v1c5(0x1)
0x1d0: v1d0 = AND v1cc(0xffffffffffffffffffffffffffffffffffffffff) vea
0x1d4: v1d4 = OR v1d0 v1c4
0x1d6: SSTORE v1b7(0x1) v1d4
0x1d7: JUMP vca(0xef)
----------------------------------

Begin block 0x1d8
prev = {'0xfd'}, next = {'0x106'}
----------------------------------
Block 0x1d8
0x1d9: v1d9(0x0) = CONST 
0x1db: v1db = SLOAD v1d9(0x0)
0x1dc: v1dc(0x1) = CONST 
0x1de: v1de = SLOAD v1dc(0x1)
0x1df: v1df(0x1) = CONST 
0x1e1: v1e1(0x1) = CONST 
0x1e3: v1e3(0xa0) = CONST 
0x1e5: v1e5(0x10000000000000000000000000000000000000000) = SHL v1e3(0xa0) v1e1(0x1)
0x1e6: v1e6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1e5(0x10000000000000000000000000000000000000000) v1df(0x1)
0x1e9: v1e9 = AND v1e6(0xffffffffffffffffffffffffffffffffffffffff) v1db
0x1eb: v1eb = AND v1e6(0xffffffffffffffffffffffffffffffffffffffff) v1de
0x1ee: JUMP vff(0x106)
----------------------------------

Begin block 0x1ef
prev = {'0x14f'}, next = {'0x246', '0x202'}
----------------------------------
Block 0x1ef
0x1f0: v1f0(0x0) = CONST 
0x1f2: v1f2 = SLOAD v1f0(0x0)
0x1f3: v1f3(0x1) = CONST 
0x1f5: v1f5(0x1) = CONST 
0x1f7: v1f7(0xa0) = CONST 
0x1f9: v1f9(0x10000000000000000000000000000000000000000) = SHL v1f7(0xa0) v1f5(0x1)
0x1fa: v1fa(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1f9(0x10000000000000000000000000000000000000000) v1f3(0x1)
0x1fb: v1fb = AND v1fa(0xffffffffffffffffffffffffffffffffffffffff) v1f2
0x1fc: v1fc = CALLER 
0x1fd: v1fd = EQ v1fc v1fb
0x1fe: v1fe(0x246) = CONST 
0x201: JUMPI v1fe(0x246) v1fd
----------------------------------

Begin block 0x202
prev = {'0x1ef'}, next = {}
----------------------------------
Block 0x202
0x202: v202(0x40) = CONST 
0x205: v205 = MLOAD v202(0x40)
0x206: v206(0x461bcd) = CONST 
0x20a: v20a(0xe5) = CONST 
0x20c: v20c(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v20a(0xe5) v206(0x461bcd)
0x20e: MSTORE v205 v20c(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x20f: v20f(0x20) = CONST 
0x211: v211(0x4) = CONST 
0x214: v214 = ADD v205 v211(0x4)
0x215: MSTORE v214 v20f(0x20)
0x216: v216(0x15) = CONST 
0x218: v218(0x24) = CONST 
0x21b: v21b = ADD v205 v218(0x24)
0x21c: MSTORE v21b v216(0x15)
0x21d: v21d(0x2cb7ba9030b932903737ba103a34329037bbb732b9) = CONST 
0x233: v233(0x59) = CONST 
0x235: v235(0x596f7520617265206e6f7420746865206f776e65720000000000000000000000) = SHL v233(0x59) v21d(0x2cb7ba9030b932903737ba103a34329037bbb732b9)
0x236: v236(0x44) = CONST 
0x239: v239 = ADD v205 v236(0x44)
0x23a: MSTORE v239 v235(0x596f7520617265206e6f7420746865206f776e65720000000000000000000000)
0x23c: v23c = MLOAD v202(0x40)
0x240: v240 = SUB v205 v23c
0x241: v241(0x64) = CONST 
0x243: v243 = ADD v241(0x64) v240
0x245: REVERT v23c v243
----------------------------------

Begin block 0x246
prev = {'0x1ef'}, next = {'0xef0x12c'}
----------------------------------
Block 0x246
0x247: v247(0x0) = CONST 
0x24a: v24a = SLOAD v247(0x0)
0x24b: v24b(0x40) = CONST 
0x24d: v24d = MLOAD v24b(0x40)
0x24e: v24e(0x1) = CONST 
0x250: v250(0x1) = CONST 
0x252: v252(0xa0) = CONST 
0x254: v254(0x10000000000000000000000000000000000000000) = SHL v252(0xa0) v250(0x1)
0x255: v255(0xffffffffffffffffffffffffffffffffffffffff) = SUB v254(0x10000000000000000000000000000000000000000) v24e(0x1)
0x258: v258 = AND v15a v255(0xffffffffffffffffffffffffffffffffffffffff)
0x25b: v25b = AND v24a v255(0xffffffffffffffffffffffffffffffffffffffff)
0x25d: v25d(0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735) = CONST 
0x27f: LOG3 v24d v247(0x0) v25d(0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735) v25b v258
0x280: v280(0x0) = CONST 
0x283: v283 = SLOAD v280(0x0)
0x284: v284(0x1) = CONST 
0x286: v286(0x1) = CONST 
0x288: v288(0xa0) = CONST 
0x28a: v28a(0x10000000000000000000000000000000000000000) = SHL v288(0xa0) v286(0x1)
0x28b: v28b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v28a(0x10000000000000000000000000000000000000000) v284(0x1)
0x28c: v28c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v28b(0xffffffffffffffffffffffffffffffffffffffff)
0x28d: v28d = AND v28c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v283
0x28e: v28e(0x1) = CONST 
0x290: v290(0x1) = CONST 
0x292: v292(0xa0) = CONST 
0x294: v294(0x10000000000000000000000000000000000000000) = SHL v292(0xa0) v290(0x1)
0x295: v295(0xffffffffffffffffffffffffffffffffffffffff) = SUB v294(0x10000000000000000000000000000000000000000) v28e(0x1)
0x299: v299 = AND v295(0xffffffffffffffffffffffffffffffffffffffff) v15a
0x29d: v29d = OR v299 v28d
0x29f: SSTORE v280(0x0) v29d
0x2a0: JUMP v13a(0xef)
----------------------------------

Begin block 0x2d6
prev = {'0x0'}, next = {}
----------------------------------
Block 0x2d6
0x2d7: v2d7(0x38) = CONST 
0x2d8: CALLPRIVATE v2d7(0x38)
----------------------------------

Begin block 0x2d9
prev = {'0xd'}, next = {}
----------------------------------
Block 0x2d9
0x2da: v2da(0xbc) = CONST 
0x2db: CALLPRIVATE v2da(0xbc)
----------------------------------

Begin block 0x2dc
prev = {'0x1e'}, next = {}
----------------------------------
Block 0x2dc
0x2dd: v2dd(0xf1) = CONST 
0x2de: CALLPRIVATE v2dd(0xf1)
----------------------------------

Begin block 0x2df
prev = {'0x29'}, next = {}
----------------------------------
Block 0x2df
0x2e0: v2e0(0x12c) = CONST 
0x2e1: CALLPRIVATE v2e0(0x12c)
----------------------------------
