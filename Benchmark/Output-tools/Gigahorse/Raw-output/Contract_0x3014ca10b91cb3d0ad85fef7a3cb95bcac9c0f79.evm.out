
Begin block 0x0
prev = {}, next = {'0xd', '0x62e'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x61c: v61c(0x62e) = CONST 
0x61d: JUMPI v61c(0x62e) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x631', '0x27'}
----------------------------------
Block 0xd
0xd: vd(0xffffffff) = CONST 
0x12: v12(0xe0) = CONST 
0x14: v14(0x2) = CONST 
0x16: v16(0x100000000000000000000000000000000000000000000000000000000) = EXP v14(0x2) v12(0xe0)
0x17: v17(0x0) = CONST 
0x19: v19 = CALLDATALOAD v17(0x0)
0x1a: v1a = DIV v19 v16(0x100000000000000000000000000000000000000000000000000000000)
0x1b: v1b = AND v1a vd(0xffffffff)
0x1c: v1c(0x25313a2) = CONST 
0x22: v22 = EQ v1b v1c(0x25313a2)
0x61e: v61e(0x631) = CONST 
0x61f: JUMPI v61e(0x631) v22
----------------------------------

Begin block 0x27
prev = {'0xd'}, next = {'0x32', '0x634'}
----------------------------------
Block 0x27
0x28: v28(0x3ad06d16) = CONST 
0x2d: v2d = EQ v28(0x3ad06d16) v1b
0x620: v620(0x634) = CONST 
0x621: JUMPI v620(0x634) v2d
----------------------------------

Begin block 0x32
prev = {'0x27'}, next = {'0x637', '0x3d'}
----------------------------------
Block 0x32
0x33: v33(0x54fd4d50) = CONST 
0x38: v38 = EQ v33(0x54fd4d50) v1b
0x622: v622(0x637) = CONST 
0x623: JUMPI v622(0x637) v38
----------------------------------

Begin block 0x3d
prev = {'0x32'}, next = {'0x48', '0x63a'}
----------------------------------
Block 0x3d
0x3e: v3e(0x5c60da1b) = CONST 
0x43: v43 = EQ v3e(0x5c60da1b) v1b
0x624: v624(0x63a) = CONST 
0x625: JUMPI v624(0x63a) v43
----------------------------------

Begin block 0x48
prev = {'0x3d'}, next = {'0x53', '0x63d'}
----------------------------------
Block 0x48
0x49: v49(0x6fde8202) = CONST 
0x4e: v4e = EQ v49(0x6fde8202) v1b
0x626: v626(0x63d) = CONST 
0x627: JUMPI v626(0x63d) v4e
----------------------------------

Begin block 0x53
prev = {'0x48'}, next = {'0x640', '0x5e'}
----------------------------------
Block 0x53
0x54: v54(0xa9c45fcb) = CONST 
0x59: v59 = EQ v54(0xa9c45fcb) v1b
0x628: v628(0x640) = CONST 
0x629: JUMPI v628(0x640) v59
----------------------------------

Begin block 0x5e
prev = {'0x53'}, next = {'0x643', '0x69'}
----------------------------------
Block 0x5e
0x5f: v5f(0xd784d426) = CONST 
0x64: v64 = EQ v5f(0xd784d426) v1b
0x62a: v62a(0x643) = CONST 
0x62b: JUMPI v62a(0x643) v64
----------------------------------

Begin block 0x69
prev = {'0x5e'}, next = {'0x646', '0x62e'}
----------------------------------
Block 0x69
0x6a: v6a(0xf1739cae) = CONST 
0x6f: v6f = EQ v6a(0xf1739cae) v1b
0x62c: v62c(0x646) = CONST 
0x62d: JUMPI v62c(0x646) v6f
----------------------------------

Begin block 0x74
prev = {}, next = {'0x82'}
----------------------------------
function batchLock_63efZf()()
Block 0x74
0x75: v75(0x0) = CONST 
0x78: v78(0x0) = CONST 
0x7b: v7b(0x82) = CONST 
0x7e: v7e(0x374) = CONST 
0x81: v81_0 = CALLPRIVATE v7e(0x374) v7b(0x82)
----------------------------------

Begin block 0x82
prev = {'0x74'}, next = {'0x99', '0x95'}
----------------------------------
Block 0x82
0x85: v85(0x1) = CONST 
0x87: v87(0xa0) = CONST 
0x89: v89(0x2) = CONST 
0x8b: v8b(0x10000000000000000000000000000000000000000) = EXP v89(0x2) v87(0xa0)
0x8c: v8c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8b(0x10000000000000000000000000000000000000000) v85(0x1)
0x8e: v8e = AND v81_0 v8c(0xffffffffffffffffffffffffffffffffffffffff)
0x8f: v8f = ISZERO v8e
0x90: v90 = ISZERO v8f
0x91: v91(0x99) = CONST 
0x94: JUMPI v91(0x99) v90
----------------------------------

Begin block 0x95
prev = {'0x82'}, next = {}
----------------------------------
Block 0x95
0x95: v95(0x0) = CONST 
0x98: REVERT v95(0x0) v95(0x0)
----------------------------------

Begin block 0x99
prev = {'0x82'}, next = {'0x1e1', '0xd8'}
----------------------------------
Block 0x99
0x9a: v9a = ADDRESS 
0x9e: v9e(0x1) = CONST 
0xa0: va0(0xa0) = CONST 
0xa2: va2(0x2) = CONST 
0xa4: va4(0x10000000000000000000000000000000000000000) = EXP va2(0x2) va0(0xa0)
0xa5: va5(0xffffffffffffffffffffffffffffffffffffffff) = SUB va4(0x10000000000000000000000000000000000000000) v9e(0x1)
0xa6: va6 = AND va5(0xffffffffffffffffffffffffffffffffffffffff) v81_0
0xa7: va7(0x5c60da1b) = CONST 
0xac: vac(0x40) = CONST 
0xae: vae = MLOAD vac(0x40)
0xb0: vb0(0xffffffff) = CONST 
0xb5: vb5(0x5c60da1b) = AND vb0(0xffffffff) va7(0x5c60da1b)
0xb6: vb6(0xe0) = CONST 
0xb8: vb8(0x2) = CONST 
0xba: vba(0x100000000000000000000000000000000000000000000000000000000) = EXP vb8(0x2) vb6(0xe0)
0xbb: vbb(0x5c60da1b00000000000000000000000000000000000000000000000000000000) = MUL vba(0x100000000000000000000000000000000000000000000000000000000) vb5(0x5c60da1b)
0xbd: MSTORE vae vbb(0x5c60da1b00000000000000000000000000000000000000000000000000000000)
0xbe: vbe(0x4) = CONST 
0xc0: vc0 = ADD vbe(0x4) vae
0xc1: vc1(0x0) = CONST 
0xc3: vc3(0x40) = CONST 
0xc5: vc5 = MLOAD vc3(0x40)
0xc8: vc8 = SUB vc0 vc5
0xca: vca(0x0) = CONST 
0xcd: vcd = GAS 
0xce: vce = CALL vcd va6 vca(0x0) vc5 vc8 vc5 vc1(0x0)
0xd3: vd3 = ISZERO vce
0xd4: vd4(0x1e1) = CONST 
0xd7: JUMPI vd4(0x1e1) vd3
----------------------------------

Begin block 0xd8
prev = {'0x99'}, next = {'0x115', '0x111'}
----------------------------------
Block 0xd8
0xd9: vd9(0x1) = CONST 
0xdb: vdb(0xa0) = CONST 
0xdd: vdd(0x2) = CONST 
0xdf: vdf(0x10000000000000000000000000000000000000000) = EXP vdd(0x2) vdb(0xa0)
0xe0: ve0(0xffffffffffffffffffffffffffffffffffffffff) = SUB vdf(0x10000000000000000000000000000000000000000) vd9(0x1)
0xe1: ve1 = AND ve0(0xffffffffffffffffffffffffffffffffffffffff) v81_0
0xe2: ve2(0x5c60da1b) = CONST 
0xe7: ve7(0x40) = CONST 
0xe9: ve9 = MLOAD ve7(0x40)
0xeb: veb(0xffffffff) = CONST 
0xf0: vf0(0x5c60da1b) = AND veb(0xffffffff) ve2(0x5c60da1b)
0xf1: vf1(0xe0) = CONST 
0xf3: vf3(0x2) = CONST 
0xf5: vf5(0x100000000000000000000000000000000000000000000000000000000) = EXP vf3(0x2) vf1(0xe0)
0xf6: vf6(0x5c60da1b00000000000000000000000000000000000000000000000000000000) = MUL vf5(0x100000000000000000000000000000000000000000000000000000000) vf0(0x5c60da1b)
0xf8: MSTORE ve9 vf6(0x5c60da1b00000000000000000000000000000000000000000000000000000000)
0xf9: vf9(0x4) = CONST 
0xfb: vfb = ADD vf9(0x4) ve9
0xfc: vfc(0x20) = CONST 
0xfe: vfe(0x40) = CONST 
0x100: v100 = MLOAD vfe(0x40)
0x103: v103 = SUB vfb v100
0x105: v105(0x0) = CONST 
0x109: v109 = EXTCODESIZE ve1
0x10a: v10a = ISZERO v109
0x10c: v10c = ISZERO v10a
0x10d: v10d(0x115) = CONST 
0x110: JUMPI v10d(0x115) v10c
----------------------------------

Begin block 0x111
prev = {'0xd8'}, next = {}
----------------------------------
Block 0x111
0x111: v111(0x0) = CONST 
0x114: REVERT v111(0x0) v111(0x0)
----------------------------------

Begin block 0x115
prev = {'0xd8'}, next = {'0x120', '0x129'}
----------------------------------
Block 0x115
0x117: v117 = GAS 
0x118: v118 = CALL v117 ve1 v105(0x0) v100 v103 v100 vfc(0x20)
0x119: v119 = ISZERO v118
0x11b: v11b = ISZERO v119
0x11c: v11c(0x129) = CONST 
0x11f: JUMPI v11c(0x129) v11b
----------------------------------

Begin block 0x120
prev = {'0x115'}, next = {}
----------------------------------
Block 0x120
0x120: v120 = RETURNDATASIZE 
0x121: v121(0x0) = CONST 
0x124: RETURNDATACOPY v121(0x0) v121(0x0) v120
0x125: v125 = RETURNDATASIZE 
0x126: v126(0x0) = CONST 
0x128: REVERT v126(0x0) v125
----------------------------------

Begin block 0x129
prev = {'0x115'}, next = {'0x13f', '0x13b'}
----------------------------------
Block 0x129
0x12e: v12e(0x40) = CONST 
0x130: v130 = MLOAD v12e(0x40)
0x131: v131 = RETURNDATASIZE 
0x132: v132(0x20) = CONST 
0x135: v135 = LT v131 v132(0x20)
0x136: v136 = ISZERO v135
0x137: v137(0x13f) = CONST 
0x13a: JUMPI v137(0x13f) v136
----------------------------------

Begin block 0x13b
prev = {'0x129'}, next = {}
----------------------------------
Block 0x13b
0x13b: v13b(0x0) = CONST 
0x13e: REVERT v13b(0x0) v13b(0x0)
----------------------------------

Begin block 0x13f
prev = {'0x129'}, next = {'0x1a5', '0x1a1'}
----------------------------------
Block 0x13f
0x141: v141 = MLOAD v130
0x142: v142(0x40) = CONST 
0x145: v145 = MLOAD v142(0x40)
0x146: v146(0xd784d42600000000000000000000000000000000000000000000000000000000) = CONST 
0x168: MSTORE v145 v146(0xd784d42600000000000000000000000000000000000000000000000000000000)
0x169: v169(0x1) = CONST 
0x16b: v16b(0xa0) = CONST 
0x16d: v16d(0x2) = CONST 
0x16f: v16f(0x10000000000000000000000000000000000000000) = EXP v16d(0x2) v16b(0xa0)
0x170: v170(0xffffffffffffffffffffffffffffffffffffffff) = SUB v16f(0x10000000000000000000000000000000000000000) v169(0x1)
0x172: v172 = AND v141 v170(0xffffffffffffffffffffffffffffffffffffffff)
0x173: v173(0x4) = CONST 
0x176: v176 = ADD v145 v173(0x4)
0x177: MSTORE v176 v172
0x179: v179 = MLOAD v142(0x40)
0x17d: v17d = ADDRESS 
0x17f: v17f(0xd784d426) = CONST 
0x185: v185(0x24) = CONST 
0x189: v189 = ADD v145 v185(0x24)
0x18b: v18b(0x0) = CONST 
0x193: v193 = SUB v145 v179
0x194: v194 = ADD v193 v185(0x24)
0x199: v199 = EXTCODESIZE v17d
0x19a: v19a = ISZERO v199
0x19c: v19c = ISZERO v19a
0x19d: v19d(0x1a5) = CONST 
0x1a0: JUMPI v19d(0x1a5) v19c
----------------------------------

Begin block 0x1a1
prev = {'0x13f'}, next = {}
----------------------------------
Block 0x1a1
0x1a1: v1a1(0x0) = CONST 
0x1a4: REVERT v1a1(0x0) v1a1(0x0)
----------------------------------

Begin block 0x1a5
prev = {'0x13f'}, next = {'0x1b9', '0x1b0'}
----------------------------------
Block 0x1a5
0x1a7: v1a7 = GAS 
0x1a8: v1a8 = CALL v1a7 v17d v18b(0x0) v179 v194 v179 v18b(0x0)
0x1a9: v1a9 = ISZERO v1a8
0x1ab: v1ab = ISZERO v1a9
0x1ac: v1ac(0x1b9) = CONST 
0x1af: JUMPI v1ac(0x1b9) v1ab
----------------------------------

Begin block 0x1b0
prev = {'0x1a5'}, next = {}
----------------------------------
Block 0x1b0
0x1b0: v1b0 = RETURNDATASIZE 
0x1b1: v1b1(0x0) = CONST 
0x1b4: RETURNDATACOPY v1b1(0x0) v1b1(0x0) v1b0
0x1b5: v1b5 = RETURNDATASIZE 
0x1b6: v1b6(0x0) = CONST 
0x1b8: REVERT v1b6(0x0) v1b5
----------------------------------

Begin block 0x1b9
prev = {'0x1a5'}, next = {'0x1e1'}
----------------------------------
Block 0x1b9
0x1bb: v1bb(0xd784d42600000000000000000000000000000000000000000000000000000000) = CONST 
----------------------------------

Begin block 0x1e1
prev = {'0x1b9', '0x99'}, next = {'0x205', '0x21e'}
----------------------------------
Block 0x1e1
0x1e1_0x1: v1e1_1 = PHI v78(0x0) v1bb(0xd784d42600000000000000000000000000000000000000000000000000000000)
0x1e2: v1e2(0x40) = CONST 
0x1e4: v1e4 = MLOAD v1e2(0x40)
0x1e5: v1e5 = CALLDATASIZE 
0x1e6: v1e6(0x0) = CONST 
0x1e9: CALLDATACOPY v1e4 v1e6(0x0) v1e5
0x1ea: v1ea(0x0) = CONST 
0x1ed: v1ed = CALLDATASIZE 
0x1f0: v1f0 = GAS 
0x1f1: v1f1 = DELEGATECALL v1f0 v81_0 v1e4 v1ed v1ea(0x0) v1ea(0x0)
0x1f2: v1f2 = RETURNDATASIZE 
0x1f4: v1f4 = ADD v1e4 v1f2
0x1f5: v1f5(0x40) = CONST 
0x1f7: MSTORE v1f5(0x40) v1f4
0x1f8: v1f8 = RETURNDATASIZE 
0x1f9: v1f9(0x0) = CONST 
0x1fc: RETURNDATACOPY v1e4 v1f9(0x0) v1f8
0x1fd: v1fd = RETURNDATASIZE 
0x200: v200 = ISZERO v1e1_1
0x201: v201(0x21e) = CONST 
0x204: JUMPI v201(0x21e) v200
----------------------------------

Begin block 0x205
prev = {'0x1e1'}, next = {'0x21e'}
----------------------------------
Block 0x205
0x205_0x5: v205_5 = PHI v78(0x0) v1bb(0xd784d42600000000000000000000000000000000000000000000000000000000)
0x205: v205(0x40) = CONST 
0x207: v207 = MLOAD v205(0x40)
0x20a: MSTORE v207 v205_5
0x20c: v20c(0x4) = CONST 
0x20f: v20f = ADD v207 v20c(0x4)
0x210: MSTORE v20f v81_0
0x211: v211(0x0) = CONST 
0x214: v214(0x24) = CONST 
0x217: v217(0x0) = CONST 
0x21a: v21a = GAS 
0x21b: v21b = CALL v21a v9a v217(0x0) v207 v214(0x24) v207 v211(0x0)
----------------------------------

Begin block 0x21e
prev = {'0x1e1', '0x205'}, next = {'0x227', '0x22a'}
----------------------------------
Block 0x21e
0x222: v222 = ISZERO v1f1
0x223: v223(0x22a) = CONST 
0x226: JUMPI v223(0x22a) v222
----------------------------------

Begin block 0x227
prev = {'0x21e'}, next = {}
----------------------------------
Block 0x227
0x229: RETURN v1e4 v1fd
----------------------------------

Begin block 0x22a
prev = {'0x21e'}, next = {}
----------------------------------
Block 0x22a
0x22d: REVERT v1e4 v1fd
----------------------------------

Begin block 0x22e
prev = {}, next = {'0x236', '0x23a'}
----------------------------------
function proxyOwner()()
Block 0x22e
0x22f: v22f = CALLVALUE 
0x231: v231 = ISZERO v22f
0x232: v232(0x23a) = CONST 
0x235: JUMPI v232(0x23a) v231
----------------------------------

Begin block 0x236
prev = {'0x22e'}, next = {}
----------------------------------
Block 0x236
0x236: v236(0x0) = CONST 
0x239: REVERT v236(0x0) v236(0x0)
----------------------------------

Begin block 0x23a
prev = {'0x22e'}, next = {'0x2430x22e'}
----------------------------------
Block 0x23a
0x23c: v23c(0x243) = CONST 
0x23f: v23f(0x383) = CONST 
0x242: v242_0 = CALLPRIVATE v23f(0x383) v23c(0x243)
----------------------------------

Begin block 0x2430x22e
prev = {'0x23a'}, next = {}
----------------------------------
Block 0x2430x22e
0x2440x22e: v22e244(0x40) = CONST 
0x2470x22e: v22e247 = MLOAD v22e244(0x40)
0x2480x22e: v22e248(0x1) = CONST 
0x24a0x22e: v22e24a(0xa0) = CONST 
0x24c0x22e: v22e24c(0x2) = CONST 
0x24e0x22e: v22e24e(0x10000000000000000000000000000000000000000) = EXP v22e24c(0x2) v22e24a(0xa0)
0x24f0x22e: v22e24f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v22e24e(0x10000000000000000000000000000000000000000) v22e248(0x1)
0x2520x22e: v22e252 = AND v242_0 v22e24f(0xffffffffffffffffffffffffffffffffffffffff)
0x2540x22e: MSTORE v22e247 v22e252
0x2550x22e: v22e255 = MLOAD v22e244(0x40)
0x2590x22e: v22e259 = SUB v22e247 v22e255
0x25a0x22e: v22e25a(0x20) = CONST 
0x25c0x22e: v22e25c = ADD v22e25a(0x20) v22e259
0x25e0x22e: RETURN v22e255 v22e25c
----------------------------------

Begin block 0x2430x2ac
prev = {'0x2b8'}, next = {}
----------------------------------
Block 0x2430x2ac
0x2440x2ac: v2ac244(0x40) = CONST 
0x2470x2ac: v2ac247 = MLOAD v2ac244(0x40)
0x2480x2ac: v2ac248(0x1) = CONST 
0x24a0x2ac: v2ac24a(0xa0) = CONST 
0x24c0x2ac: v2ac24c(0x2) = CONST 
0x24e0x2ac: v2ac24e(0x10000000000000000000000000000000000000000) = EXP v2ac24c(0x2) v2ac24a(0xa0)
0x24f0x2ac: v2ac24f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2ac24e(0x10000000000000000000000000000000000000000) v2ac248(0x1)
0x2520x2ac: v2ac252 = AND v2c0_0 v2ac24f(0xffffffffffffffffffffffffffffffffffffffff)
0x2540x2ac: MSTORE v2ac247 v2ac252
0x2550x2ac: v2ac255 = MLOAD v2ac244(0x40)
0x2590x2ac: v2ac259 = SUB v2ac247 v2ac255
0x25a0x2ac: v2ac25a(0x20) = CONST 
0x25c0x2ac: v2ac25c = ADD v2ac25a(0x20) v2ac259
0x25e0x2ac: RETURN v2ac255 v2ac25c
----------------------------------

Begin block 0x2430x2c1
prev = {'0x2cd'}, next = {}
----------------------------------
Block 0x2430x2c1
0x2440x2c1: v2c1244(0x40) = CONST 
0x2470x2c1: v2c1247 = MLOAD v2c1244(0x40)
0x2480x2c1: v2c1248(0x1) = CONST 
0x24a0x2c1: v2c124a(0xa0) = CONST 
0x24c0x2c1: v2c124c(0x2) = CONST 
0x24e0x2c1: v2c124e(0x10000000000000000000000000000000000000000) = EXP v2c124c(0x2) v2c124a(0xa0)
0x24f0x2c1: v2c124f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2c124e(0x10000000000000000000000000000000000000000) v2c1248(0x1)
0x2520x2c1: v2c1252 = AND v2d5_0 v2c124f(0xffffffffffffffffffffffffffffffffffffffff)
0x2540x2c1: MSTORE v2c1247 v2c1252
0x2550x2c1: v2c1255 = MLOAD v2c1244(0x40)
0x2590x2c1: v2c1259 = SUB v2c1247 v2c1255
0x25a0x2c1: v2c125a(0x20) = CONST 
0x25c0x2c1: v2c125c = ADD v2c125a(0x20) v2c1259
0x25e0x2c1: RETURN v2c1255 v2c125c
----------------------------------

Begin block 0x25f
prev = {}, next = {'0x267', '0x26b'}
----------------------------------
function upgradeTo(uint256,address)()
Block 0x25f
0x260: v260 = CALLVALUE 
0x262: v262 = ISZERO v260
0x263: v263(0x26b) = CONST 
0x266: JUMPI v263(0x26b) v262
----------------------------------

Begin block 0x267
prev = {'0x25f'}, next = {}
----------------------------------
Block 0x267
0x267: v267(0x0) = CONST 
0x26a: REVERT v267(0x0) v267(0x0)
----------------------------------

Begin block 0x26b
prev = {'0x25f'}, next = {'0x2830x25f'}
----------------------------------
Block 0x26b
0x26d: v26d(0x283) = CONST 
0x270: v270(0x4) = CONST 
0x272: v272 = CALLDATALOAD v270(0x4)
0x273: v273(0x1) = CONST 
0x275: v275(0xa0) = CONST 
0x277: v277(0x2) = CONST 
0x279: v279(0x10000000000000000000000000000000000000000) = EXP v277(0x2) v275(0xa0)
0x27a: v27a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v279(0x10000000000000000000000000000000000000000) v273(0x1)
0x27b: v27b(0x24) = CONST 
0x27d: v27d = CALLDATALOAD v27b(0x24)
0x27e: v27e = AND v27d v27a(0xffffffffffffffffffffffffffffffffffffffff)
0x27f: v27f(0x392) = CONST 
0x282: CALLPRIVATE v27f(0x392) v27e v272 v26d(0x283)
----------------------------------

Begin block 0x2830x25f
prev = {'0x26b'}, next = {}
----------------------------------
Block 0x2830x25f
0x2840x25f: STOP 
----------------------------------

Begin block 0x2830x2d6
prev = {'0x47a'}, next = {}
----------------------------------
Block 0x2830x2d6
0x2840x2d6: STOP 
----------------------------------

Begin block 0x2830x332
prev = {'0x48b'}, next = {}
----------------------------------
Block 0x2830x332
0x2840x332: STOP 
----------------------------------

Begin block 0x2830x353
prev = {'0x53f'}, next = {}
----------------------------------
Block 0x2830x353
0x2840x353: STOP 
----------------------------------

Begin block 0x285
prev = {}, next = {'0x291', '0x28d'}
----------------------------------
function version()()
Block 0x285
0x286: v286 = CALLVALUE 
0x288: v288 = ISZERO v286
0x289: v289(0x291) = CONST 
0x28c: JUMPI v289(0x291) v288
----------------------------------

Begin block 0x28d
prev = {'0x285'}, next = {}
----------------------------------
Block 0x28d
0x28d: v28d(0x0) = CONST 
0x290: REVERT v28d(0x0) v28d(0x0)
----------------------------------

Begin block 0x291
prev = {'0x285'}, next = {'0x3bc'}
----------------------------------
Block 0x291
0x293: v293(0x29a) = CONST 
0x296: v296(0x3bc) = CONST 
0x299: JUMP v296(0x3bc)
----------------------------------

Begin block 0x29a
prev = {'0x3bc'}, next = {}
----------------------------------
Block 0x29a
0x29b: v29b(0x40) = CONST 
0x29e: v29e = MLOAD v29b(0x40)
0x2a1: MSTORE v29e v3bf
0x2a2: v2a2 = MLOAD v29b(0x40)
0x2a6: v2a6 = SUB v29e v2a2
0x2a7: v2a7(0x20) = CONST 
0x2a9: v2a9 = ADD v2a7(0x20) v2a6
0x2ab: RETURN v2a2 v2a9
----------------------------------

Begin block 0x2ac
prev = {}, next = {'0x2b8', '0x2b4'}
----------------------------------
function implementation()()
Block 0x2ac
0x2ad: v2ad = CALLVALUE 
0x2af: v2af = ISZERO v2ad
0x2b0: v2b0(0x2b8) = CONST 
0x2b3: JUMPI v2b0(0x2b8) v2af
----------------------------------

Begin block 0x2b4
prev = {'0x2ac'}, next = {}
----------------------------------
Block 0x2b4
0x2b4: v2b4(0x0) = CONST 
0x2b7: REVERT v2b4(0x0) v2b4(0x0)
----------------------------------

Begin block 0x2b8
prev = {'0x2ac'}, next = {'0x2430x2ac'}
----------------------------------
Block 0x2b8
0x2ba: v2ba(0x243) = CONST 
0x2bd: v2bd(0x374) = CONST 
0x2c0: v2c0_0 = CALLPRIVATE v2bd(0x374) v2ba(0x243)
----------------------------------

Begin block 0x2c1
prev = {}, next = {'0x2c9', '0x2cd'}
----------------------------------
function upgradeabilityOwner()()
Block 0x2c1
0x2c2: v2c2 = CALLVALUE 
0x2c4: v2c4 = ISZERO v2c2
0x2c5: v2c5(0x2cd) = CONST 
0x2c8: JUMPI v2c5(0x2cd) v2c4
----------------------------------

Begin block 0x2c9
prev = {'0x2c1'}, next = {}
----------------------------------
Block 0x2c9
0x2c9: v2c9(0x0) = CONST 
0x2cc: REVERT v2c9(0x0) v2c9(0x0)
----------------------------------

Begin block 0x2cd
prev = {'0x2c1'}, next = {'0x2430x2c1'}
----------------------------------
Block 0x2cd
0x2cf: v2cf(0x243) = CONST 
0x2d2: v2d2(0x3c2) = CONST 
0x2d5: v2d5_0 = CALLPRIVATE v2d2(0x3c2) v2cf(0x243)
----------------------------------

Begin block 0x2d6
prev = {}, next = {'0x3d1'}
----------------------------------
function upgradeToAndCall(uint256,address,bytes)()
Block 0x2d6
0x2d7: v2d7(0x40) = CONST 
0x2da: v2da = MLOAD v2d7(0x40)
0x2db: v2db(0x20) = CONST 
0x2dd: v2dd(0x4) = CONST 
0x2df: v2df(0x44) = CONST 
0x2e1: v2e1 = CALLDATALOAD v2df(0x44)
0x2e4: v2e4 = ADD v2e1 v2dd(0x4)
0x2e5: v2e5 = CALLDATALOAD v2e4
0x2e6: v2e6(0x1f) = CONST 
0x2e9: v2e9 = ADD v2e5 v2e6(0x1f)
0x2ec: v2ec = DIV v2e9 v2db(0x20)
0x2ee: v2ee = MUL v2db(0x20) v2ec
0x2f0: v2f0 = ADD v2da v2ee
0x2f2: v2f2 = ADD v2db(0x20) v2f0
0x2f5: MSTORE v2d7(0x40) v2f2
0x2f8: MSTORE v2da v2e5
0x2f9: v2f9(0x283) = CONST 
0x2fe: v2fe = CALLDATALOAD v2dd(0x4)
0x300: v300(0x24) = CONST 
0x303: v303 = CALLDATALOAD v300(0x24)
0x304: v304(0x1) = CONST 
0x306: v306(0xa0) = CONST 
0x308: v308(0x2) = CONST 
0x30a: v30a(0x10000000000000000000000000000000000000000) = EXP v308(0x2) v306(0xa0)
0x30b: v30b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v30a(0x10000000000000000000000000000000000000000) v304(0x1)
0x30c: v30c = AND v30b(0xffffffffffffffffffffffffffffffffffffffff) v303
0x30e: v30e = CALLDATASIZE 
0x311: v311(0x64) = CONST 
0x315: v315 = ADD v300(0x24) v2e1
0x31b: v31b = ADD v2da v2db(0x20)
0x321: CALLDATACOPY v31b v315 v2e5
0x326: v326(0x3d1) = CONST 
0x331: JUMP v326(0x3d1)
----------------------------------

Begin block 0x332
prev = {}, next = {'0x33a', '0x33e'}
----------------------------------
function setImplementation(address)()
Block 0x332
0x333: v333 = CALLVALUE 
0x335: v335 = ISZERO v333
0x336: v336(0x33e) = CONST 
0x339: JUMPI v336(0x33e) v335
----------------------------------

Begin block 0x33a
prev = {'0x332'}, next = {}
----------------------------------
Block 0x33a
0x33a: v33a(0x0) = CONST 
0x33d: REVERT v33a(0x0) v33a(0x0)
----------------------------------

Begin block 0x33e
prev = {'0x332'}, next = {'0x47f'}
----------------------------------
Block 0x33e
0x340: v340(0x283) = CONST 
0x343: v343(0x1) = CONST 
0x345: v345(0xa0) = CONST 
0x347: v347(0x2) = CONST 
0x349: v349(0x10000000000000000000000000000000000000000) = EXP v347(0x2) v345(0xa0)
0x34a: v34a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v349(0x10000000000000000000000000000000000000000) v343(0x1)
0x34b: v34b(0x4) = CONST 
0x34d: v34d = CALLDATALOAD v34b(0x4)
0x34e: v34e = AND v34d v34a(0xffffffffffffffffffffffffffffffffffffffff)
0x34f: v34f(0x47f) = CONST 
0x352: JUMP v34f(0x47f)
----------------------------------

Begin block 0x353
prev = {}, next = {'0x35b', '0x35f'}
----------------------------------
function transferProxyOwnership(address)()
Block 0x353
0x354: v354 = CALLVALUE 
0x356: v356 = ISZERO v354
0x357: v357(0x35f) = CONST 
0x35a: JUMPI v357(0x35f) v356
----------------------------------

Begin block 0x35b
prev = {'0x353'}, next = {}
----------------------------------
Block 0x35b
0x35b: v35b(0x0) = CONST 
0x35e: REVERT v35b(0x0) v35b(0x0)
----------------------------------

Begin block 0x35f
prev = {'0x353'}, next = {'0x4ba'}
----------------------------------
Block 0x35f
0x361: v361(0x283) = CONST 
0x364: v364(0x1) = CONST 
0x366: v366(0xa0) = CONST 
0x368: v368(0x2) = CONST 
0x36a: v36a(0x10000000000000000000000000000000000000000) = EXP v368(0x2) v366(0xa0)
0x36b: v36b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v36a(0x10000000000000000000000000000000000000000) v364(0x1)
0x36c: v36c(0x4) = CONST 
0x36e: v36e = CALLDATALOAD v36c(0x4)
0x36f: v36f = AND v36e v36b(0xffffffffffffffffffffffffffffffffffffffff)
0x370: v370(0x4ba) = CONST 
0x373: JUMP v370(0x4ba)
----------------------------------

Begin block 0x374
prev = {}, next = {}
----------------------------------
function 0x374(v374arg0)
Block 0x374
0x375: v375(0x2) = CONST 
0x377: v377 = SLOAD v375(0x2)
0x378: v378(0x1) = CONST 
0x37a: v37a(0xa0) = CONST 
0x37c: v37c(0x2) = CONST 
0x37e: v37e(0x10000000000000000000000000000000000000000) = EXP v37c(0x2) v37a(0xa0)
0x37f: v37f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v37e(0x10000000000000000000000000000000000000000) v378(0x1)
0x380: v380 = AND v37f(0xffffffffffffffffffffffffffffffffffffffff) v377
0x382: RETURNPRIVATE v374arg0 v380
----------------------------------

Begin block 0x383
prev = {}, next = {'0x38d'}
----------------------------------
function 0x383(v383arg0)
Block 0x383
0x384: v384(0x0) = CONST 
0x386: v386(0x38d) = CONST 
0x389: v389(0x3c2) = CONST 
0x38c: v38c_0 = CALLPRIVATE v389(0x3c2) v386(0x38d)
----------------------------------

Begin block 0x38d
prev = {'0x383'}, next = {}
----------------------------------
Block 0x38d
0x391: RETURNPRIVATE v383arg0 v38c_0
----------------------------------

Begin block 0x392
prev = {}, next = {'0x39a'}
----------------------------------
function 0x392(v392arg0, v392arg1, v392arg2)
Block 0x392
0x393: v393(0x39a) = CONST 
0x396: v396(0x383) = CONST 
0x399: v399_0 = CALLPRIVATE v396(0x383) v393(0x39a)
----------------------------------

Begin block 0x39a
prev = {'0x392'}, next = {'0x3aa', '0x3ae'}
----------------------------------
Block 0x39a
0x39b: v39b(0x1) = CONST 
0x39d: v39d(0xa0) = CONST 
0x39f: v39f(0x2) = CONST 
0x3a1: v3a1(0x10000000000000000000000000000000000000000) = EXP v39f(0x2) v39d(0xa0)
0x3a2: v3a2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3a1(0x10000000000000000000000000000000000000000) v39b(0x1)
0x3a3: v3a3 = AND v3a2(0xffffffffffffffffffffffffffffffffffffffff) v399_0
0x3a4: v3a4 = CALLER 
0x3a5: v3a5 = EQ v3a4 v3a3
0x3a6: v3a6(0x3ae) = CONST 
0x3a9: JUMPI v3a6(0x3ae) v3a5
----------------------------------

Begin block 0x3aa
prev = {'0x39a'}, next = {}
----------------------------------
Block 0x3aa
0x3aa: v3aa(0x0) = CONST 
0x3ad: REVERT v3aa(0x0) v3aa(0x0)
----------------------------------

Begin block 0x3ae
prev = {'0x39a'}, next = {'0x542'}
----------------------------------
Block 0x3ae
0x3af: v3af(0x3b8) = CONST 
0x3b4: v3b4(0x542) = CONST 
0x3b7: JUMP v3b4(0x542)
----------------------------------

Begin block 0x3b8
prev = {'0x56b'}, next = {}
----------------------------------
Block 0x3b8
0x3bb: RETURNPRIVATE v392arg2
----------------------------------

Begin block 0x3bc
prev = {'0x291'}, next = {'0x29a'}
----------------------------------
Block 0x3bc
0x3bd: v3bd(0x1) = CONST 
0x3bf: v3bf = SLOAD v3bd(0x1)
0x3c1: JUMP v293(0x29a)
----------------------------------

Begin block 0x3c2
prev = {}, next = {}
----------------------------------
function 0x3c2(v3c2arg0)
Block 0x3c2
0x3c3: v3c3(0x0) = CONST 
0x3c5: v3c5 = SLOAD v3c3(0x0)
0x3c6: v3c6(0x1) = CONST 
0x3c8: v3c8(0xa0) = CONST 
0x3ca: v3ca(0x2) = CONST 
0x3cc: v3cc(0x10000000000000000000000000000000000000000) = EXP v3ca(0x2) v3c8(0xa0)
0x3cd: v3cd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3cc(0x10000000000000000000000000000000000000000) v3c6(0x1)
0x3ce: v3ce = AND v3cd(0xffffffffffffffffffffffffffffffffffffffff) v3c5
0x3d0: RETURNPRIVATE v3c2arg0 v3ce
----------------------------------

Begin block 0x3d1
prev = {'0x2d6'}, next = {'0x3d9'}
----------------------------------
Block 0x3d1
0x3d2: v3d2(0x3d9) = CONST 
0x3d5: v3d5(0x383) = CONST 
0x3d8: v3d8_0 = CALLPRIVATE v3d5(0x383) v3d2(0x3d9)
----------------------------------

Begin block 0x3d9
prev = {'0x3d1'}, next = {'0x3e9', '0x3ed'}
----------------------------------
Block 0x3d9
0x3da: v3da(0x1) = CONST 
0x3dc: v3dc(0xa0) = CONST 
0x3de: v3de(0x2) = CONST 
0x3e0: v3e0(0x10000000000000000000000000000000000000000) = EXP v3de(0x2) v3dc(0xa0)
0x3e1: v3e1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3e0(0x10000000000000000000000000000000000000000) v3da(0x1)
0x3e2: v3e2 = AND v3e1(0xffffffffffffffffffffffffffffffffffffffff) v3d8_0
0x3e3: v3e3 = CALLER 
0x3e4: v3e4 = EQ v3e3 v3e2
0x3e5: v3e5(0x3ed) = CONST 
0x3e8: JUMPI v3e5(0x3ed) v3e4
----------------------------------

Begin block 0x3e9
prev = {'0x3d9'}, next = {}
----------------------------------
Block 0x3e9
0x3e9: v3e9(0x0) = CONST 
0x3ec: REVERT v3e9(0x0) v3e9(0x0)
----------------------------------

Begin block 0x3ed
prev = {'0x3d9'}, next = {'0x3f7'}
----------------------------------
Block 0x3ed
0x3ee: v3ee(0x3f7) = CONST 
0x3f3: v3f3(0x392) = CONST 
0x3f6: CALLPRIVATE v3f3(0x392) v30c v2fe v3ee(0x3f7)
----------------------------------

Begin block 0x3f7
prev = {'0x3ed'}, next = {'0x415'}
----------------------------------
Block 0x3f7
0x3f8: v3f8 = ADDRESS 
0x3f9: v3f9(0x1) = CONST 
0x3fb: v3fb(0xa0) = CONST 
0x3fd: v3fd(0x2) = CONST 
0x3ff: v3ff(0x10000000000000000000000000000000000000000) = EXP v3fd(0x2) v3fb(0xa0)
0x400: v400(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3ff(0x10000000000000000000000000000000000000000) v3f9(0x1)
0x401: v401 = AND v400(0xffffffffffffffffffffffffffffffffffffffff) v3f8
0x402: v402 = CALLVALUE 
0x404: v404(0x40) = CONST 
0x406: v406 = MLOAD v404(0x40)
0x40a: v40a = MLOAD v2da
0x40c: v40c(0x20) = CONST 
0x40e: v40e = ADD v40c(0x20) v2da
0x413: v413(0x0) = CONST 
----------------------------------

Begin block 0x415
prev = {'0x41e', '0x3f7'}, next = {'0x41e', '0x42d'}
----------------------------------
Block 0x415
0x415_0x0: v415_0 = PHI v413(0x0) v428
0x418: v418 = LT v415_0 v40a
0x419: v419 = ISZERO v418
0x41a: v41a(0x42d) = CONST 
0x41d: JUMPI v41a(0x42d) v419
----------------------------------

Begin block 0x41e
prev = {'0x415'}, next = {'0x415'}
----------------------------------
Block 0x41e
0x41e_0x0: v41e_0 = PHI v413(0x0) v428
0x420: v420 = ADD v41e_0 v40e
0x421: v421 = MLOAD v420
0x424: v424 = ADD v41e_0 v406
0x425: MSTORE v424 v421
0x426: v426(0x20) = CONST 
0x428: v428 = ADD v426(0x20) v41e_0
0x429: v429(0x415) = CONST 
0x42c: JUMP v429(0x415)
----------------------------------

Begin block 0x42d
prev = {'0x415'}, next = {'0x45a', '0x441'}
----------------------------------
Block 0x42d
0x436: v436 = ADD v40a v406
0x438: v438(0x1f) = CONST 
0x43a: v43a = AND v438(0x1f) v40a
0x43c: v43c = ISZERO v43a
0x43d: v43d(0x45a) = CONST 
0x440: JUMPI v43d(0x45a) v43c
----------------------------------

Begin block 0x441
prev = {'0x42d'}, next = {'0x45a'}
----------------------------------
Block 0x441
0x443: v443 = SUB v436 v43a
0x445: v445 = MLOAD v443
0x446: v446(0x1) = CONST 
0x449: v449(0x20) = CONST 
0x44b: v44b = SUB v449(0x20) v43a
0x44c: v44c(0x100) = CONST 
0x44f: v44f = EXP v44c(0x100) v44b
0x450: v450 = SUB v44f v446(0x1)
0x451: v451 = NOT v450
0x452: v452 = AND v451 v445
0x454: MSTORE v443 v452
0x455: v455(0x20) = CONST 
0x457: v457 = ADD v455(0x20) v443
----------------------------------

Begin block 0x45a
prev = {'0x42d', '0x441'}, next = {'0x476', '0x47a'}
----------------------------------
Block 0x45a
0x45a_0x1: v45a_1 = PHI v436 v457
0x45f: v45f(0x0) = CONST 
0x461: v461(0x40) = CONST 
0x463: v463 = MLOAD v461(0x40)
0x466: v466 = SUB v45a_1 v463
0x46a: v46a = GAS 
0x46b: v46b = CALL v46a v401 v402 v463 v466 v463 v45f(0x0)
0x470: v470 = ISZERO v46b
0x471: v471 = ISZERO v470
0x472: v472(0x47a) = CONST 
0x475: JUMPI v472(0x47a) v471
----------------------------------

Begin block 0x476
prev = {'0x45a'}, next = {}
----------------------------------
Block 0x476
0x476: v476(0x0) = CONST 
0x479: REVERT v476(0x0) v476(0x0)
----------------------------------

Begin block 0x47a
prev = {'0x45a'}, next = {'0x2830x2d6'}
----------------------------------
Block 0x47a
0x47e: JUMP v2f9(0x283)
----------------------------------

Begin block 0x47f
prev = {'0x33e'}, next = {'0x487', '0x48b'}
----------------------------------
Block 0x47f
0x480: v480 = CALLER 
0x481: v481 = ADDRESS 
0x482: v482 = EQ v481 v480
0x483: v483(0x48b) = CONST 
0x486: JUMPI v483(0x48b) v482
----------------------------------

Begin block 0x487
prev = {'0x47f'}, next = {}
----------------------------------
Block 0x487
0x487: v487(0x0) = CONST 
0x48a: REVERT v487(0x0) v487(0x0)
----------------------------------

Begin block 0x48b
prev = {'0x47f'}, next = {'0x2830x332'}
----------------------------------
Block 0x48b
0x48c: v48c(0x2) = CONST 
0x48f: v48f = SLOAD v48c(0x2)
0x490: v490(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x4a5: v4a5(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v490(0xffffffffffffffffffffffffffffffffffffffff)
0x4a6: v4a6 = AND v4a5(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v48f
0x4a7: v4a7(0x1) = CONST 
0x4a9: v4a9(0xa0) = CONST 
0x4ab: v4ab(0x2) = CONST 
0x4ad: v4ad(0x10000000000000000000000000000000000000000) = EXP v4ab(0x2) v4a9(0xa0)
0x4ae: v4ae(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4ad(0x10000000000000000000000000000000000000000) v4a7(0x1)
0x4b2: v4b2 = AND v4ae(0xffffffffffffffffffffffffffffffffffffffff) v34e
0x4b6: v4b6 = OR v4b2 v4a6
0x4b8: SSTORE v48c(0x2) v4b6
0x4b9: JUMP v340(0x283)
----------------------------------

Begin block 0x4ba
prev = {'0x35f'}, next = {'0x4c2'}
----------------------------------
Block 0x4ba
0x4bb: v4bb(0x4c2) = CONST 
0x4be: v4be(0x383) = CONST 
0x4c1: v4c1_0 = CALLPRIVATE v4be(0x383) v4bb(0x4c2)
----------------------------------

Begin block 0x4c2
prev = {'0x4ba'}, next = {'0x4d6', '0x4d2'}
----------------------------------
Block 0x4c2
0x4c3: v4c3(0x1) = CONST 
0x4c5: v4c5(0xa0) = CONST 
0x4c7: v4c7(0x2) = CONST 
0x4c9: v4c9(0x10000000000000000000000000000000000000000) = EXP v4c7(0x2) v4c5(0xa0)
0x4ca: v4ca(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4c9(0x10000000000000000000000000000000000000000) v4c3(0x1)
0x4cb: v4cb = AND v4ca(0xffffffffffffffffffffffffffffffffffffffff) v4c1_0
0x4cc: v4cc = CALLER 
0x4cd: v4cd = EQ v4cc v4cb
0x4ce: v4ce(0x4d6) = CONST 
0x4d1: JUMPI v4ce(0x4d6) v4cd
----------------------------------

Begin block 0x4d2
prev = {'0x4c2'}, next = {}
----------------------------------
Block 0x4d2
0x4d2: v4d2(0x0) = CONST 
0x4d5: REVERT v4d2(0x0) v4d2(0x0)
----------------------------------

Begin block 0x4d6
prev = {'0x4c2'}, next = {'0x4eb', '0x4e7'}
----------------------------------
Block 0x4d6
0x4d7: v4d7(0x1) = CONST 
0x4d9: v4d9(0xa0) = CONST 
0x4db: v4db(0x2) = CONST 
0x4dd: v4dd(0x10000000000000000000000000000000000000000) = EXP v4db(0x2) v4d9(0xa0)
0x4de: v4de(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4dd(0x10000000000000000000000000000000000000000) v4d7(0x1)
0x4e0: v4e0 = AND v36f v4de(0xffffffffffffffffffffffffffffffffffffffff)
0x4e1: v4e1 = ISZERO v4e0
0x4e2: v4e2 = ISZERO v4e1
0x4e3: v4e3(0x4eb) = CONST 
0x4e6: JUMPI v4e3(0x4eb) v4e2
----------------------------------

Begin block 0x4e7
prev = {'0x4d6'}, next = {}
----------------------------------
Block 0x4e7
0x4e7: v4e7(0x0) = CONST 
0x4ea: REVERT v4e7(0x0) v4e7(0x0)
----------------------------------

Begin block 0x4eb
prev = {'0x4d6'}, next = {'0x514'}
----------------------------------
Block 0x4eb
0x4ec: v4ec(0x5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9) = CONST 
0x50d: v50d(0x514) = CONST 
0x510: v510(0x383) = CONST 
0x513: v513_0 = CALLPRIVATE v510(0x383) v50d(0x514)
----------------------------------

Begin block 0x514
prev = {'0x4eb'}, next = {'0x5d3'}
----------------------------------
Block 0x514
0x515: v515(0x40) = CONST 
0x518: v518 = MLOAD v515(0x40)
0x519: v519(0x1) = CONST 
0x51b: v51b(0xa0) = CONST 
0x51d: v51d(0x2) = CONST 
0x51f: v51f(0x10000000000000000000000000000000000000000) = EXP v51d(0x2) v51b(0xa0)
0x520: v520(0xffffffffffffffffffffffffffffffffffffffff) = SUB v51f(0x10000000000000000000000000000000000000000) v519(0x1)
0x523: v523 = AND v520(0xffffffffffffffffffffffffffffffffffffffff) v513_0
0x525: MSTORE v518 v523
0x528: v528 = AND v36f v520(0xffffffffffffffffffffffffffffffffffffffff)
0x529: v529(0x20) = CONST 
0x52c: v52c = ADD v518 v529(0x20)
0x52d: MSTORE v52c v528
0x52f: v52f = MLOAD v515(0x40)
0x533: v533 = SUB v518 v52f
0x534: v534 = ADD v533 v515(0x40)
0x536: LOG1 v52f v534 v4ec(0x5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9)
0x537: v537(0x53f) = CONST 
0x53b: v53b(0x5d3) = CONST 
0x53e: JUMP v53b(0x5d3)
----------------------------------

Begin block 0x53f
prev = {'0x5d3'}, next = {'0x2830x353'}
----------------------------------
Block 0x53f
0x541: JUMP v361(0x283)
----------------------------------

Begin block 0x542
prev = {'0x3ae'}, next = {'0x559', '0x55d'}
----------------------------------
Block 0x542
0x543: v543(0x2) = CONST 
0x545: v545 = SLOAD v543(0x2)
0x546: v546(0x1) = CONST 
0x548: v548(0xa0) = CONST 
0x54a: v54a(0x2) = CONST 
0x54c: v54c(0x10000000000000000000000000000000000000000) = EXP v54a(0x2) v548(0xa0)
0x54d: v54d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v54c(0x10000000000000000000000000000000000000000) v546(0x1)
0x550: v550 = AND v54d(0xffffffffffffffffffffffffffffffffffffffff) v392arg0
0x552: v552 = AND v545 v54d(0xffffffffffffffffffffffffffffffffffffffff)
0x553: v553 = EQ v552 v550
0x554: v554 = ISZERO v553
0x555: v555(0x55d) = CONST 
0x558: JUMPI v555(0x55d) v554
----------------------------------

Begin block 0x559
prev = {'0x542'}, next = {}
----------------------------------
Block 0x559
0x559: v559(0x0) = CONST 
0x55c: REVERT v559(0x0) v559(0x0)
----------------------------------

Begin block 0x55d
prev = {'0x542'}, next = {'0x56b', '0x567'}
----------------------------------
Block 0x55d
0x55e: v55e(0x1) = CONST 
0x560: v560 = SLOAD v55e(0x1)
0x562: v562 = GT v392arg1 v560
0x563: v563(0x56b) = CONST 
0x566: JUMPI v563(0x56b) v562
----------------------------------

Begin block 0x567
prev = {'0x55d'}, next = {}
----------------------------------
Block 0x567
0x567: v567(0x0) = CONST 
0x56a: REVERT v567(0x0) v567(0x0)
----------------------------------

Begin block 0x56b
prev = {'0x55d'}, next = {'0x3b8'}
----------------------------------
Block 0x56b
0x56c: v56c(0x1) = CONST 
0x570: SSTORE v56c(0x1) v392arg1
0x571: v571(0x2) = CONST 
0x574: v574 = SLOAD v571(0x2)
0x575: v575(0x1) = CONST 
0x577: v577(0xa0) = CONST 
0x579: v579(0x2) = CONST 
0x57b: v57b(0x10000000000000000000000000000000000000000) = EXP v579(0x2) v577(0xa0)
0x57c: v57c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v57b(0x10000000000000000000000000000000000000000) v575(0x1)
0x57e: v57e = AND v392arg0 v57c(0xffffffffffffffffffffffffffffffffffffffff)
0x57f: v57f(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x594: v594(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v57f(0xffffffffffffffffffffffffffffffffffffffff)
0x597: v597 = AND v574 v594(0xffffffffffffffffffffffff0000000000000000000000000000000000000000)
0x599: v599 = OR v57e v597
0x59c: SSTORE v571(0x2) v599
0x59d: v59d(0x40) = CONST 
0x5a0: v5a0 = MLOAD v59d(0x40)
0x5a3: MSTORE v5a0 v392arg1
0x5a5: v5a5 = MLOAD v59d(0x40)
0x5a6: v5a6(0x4289d6195cf3c2d2174adf98d0e19d4d2d08887995b99cb7b100e7ffe795820e) = CONST 
0x5ca: v5ca = SUB v5a0 v5a5
0x5cb: v5cb(0x20) = CONST 
0x5cd: v5cd = ADD v5cb(0x20) v5ca
0x5cf: LOG2 v5a5 v5cd v5a6(0x4289d6195cf3c2d2174adf98d0e19d4d2d08887995b99cb7b100e7ffe795820e) v57e
0x5d2: JUMP v3af(0x3b8)
----------------------------------

Begin block 0x5d3
prev = {'0x514'}, next = {'0x53f'}
----------------------------------
Block 0x5d3
0x5d4: v5d4(0x0) = CONST 
0x5d7: v5d7 = SLOAD v5d4(0x0)
0x5d8: v5d8(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x5ed: v5ed(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v5d8(0xffffffffffffffffffffffffffffffffffffffff)
0x5ee: v5ee = AND v5ed(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v5d7
0x5ef: v5ef(0x1) = CONST 
0x5f1: v5f1(0xa0) = CONST 
0x5f3: v5f3(0x2) = CONST 
0x5f5: v5f5(0x10000000000000000000000000000000000000000) = EXP v5f3(0x2) v5f1(0xa0)
0x5f6: v5f6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5f5(0x10000000000000000000000000000000000000000) v5ef(0x1)
0x5fa: v5fa = AND v5f6(0xffffffffffffffffffffffffffffffffffffffff) v36f
0x5fe: v5fe = OR v5fa v5ee
0x600: SSTORE v5d4(0x0) v5fe
0x601: JUMP v537(0x53f)
----------------------------------

Begin block 0x62e
prev = {'0x0', '0x69'}, next = {}
----------------------------------
Block 0x62e
0x62f: v62f(0x74) = CONST 
0x630: CALLPRIVATE v62f(0x74)
----------------------------------

Begin block 0x631
prev = {'0xd'}, next = {}
----------------------------------
Block 0x631
0x632: v632(0x22e) = CONST 
0x633: CALLPRIVATE v632(0x22e)
----------------------------------

Begin block 0x634
prev = {'0x27'}, next = {}
----------------------------------
Block 0x634
0x635: v635(0x25f) = CONST 
0x636: CALLPRIVATE v635(0x25f)
----------------------------------

Begin block 0x637
prev = {'0x32'}, next = {}
----------------------------------
Block 0x637
0x638: v638(0x285) = CONST 
0x639: CALLPRIVATE v638(0x285)
----------------------------------

Begin block 0x63a
prev = {'0x3d'}, next = {}
----------------------------------
Block 0x63a
0x63b: v63b(0x2ac) = CONST 
0x63c: CALLPRIVATE v63b(0x2ac)
----------------------------------

Begin block 0x63d
prev = {'0x48'}, next = {}
----------------------------------
Block 0x63d
0x63e: v63e(0x2c1) = CONST 
0x63f: CALLPRIVATE v63e(0x2c1)
----------------------------------

Begin block 0x640
prev = {'0x53'}, next = {}
----------------------------------
Block 0x640
0x641: v641(0x2d6) = CONST 
0x642: CALLPRIVATE v641(0x2d6)
----------------------------------

Begin block 0x643
prev = {'0x5e'}, next = {}
----------------------------------
Block 0x643
0x644: v644(0x332) = CONST 
0x645: CALLPRIVATE v644(0x332)
----------------------------------

Begin block 0x646
prev = {'0x69'}, next = {}
----------------------------------
Block 0x646
0x647: v647(0x353) = CONST 
0x648: CALLPRIVATE v647(0x353)
----------------------------------
