
Begin block 0x0
prev = {}, next = {'0xd', '0x665'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x651: v651(0x665) = CONST 
0x652: JUMPI v651(0x665) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x668', '0x40'}
----------------------------------
Block 0xd
0xd: vd(0xffffffff) = CONST 
0x12: v12(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x30: v30(0x0) = CONST 
0x32: v32 = CALLDATALOAD v30(0x0)
0x33: v33 = DIV v32 v12(0x100000000000000000000000000000000000000000000000000000000)
0x34: v34 = AND v33 vd(0xffffffff)
0x35: v35(0x6fdde03) = CONST 
0x3b: v3b = EQ v34 v35(0x6fdde03)
0x653: v653(0x668) = CONST 
0x654: JUMPI v653(0x668) v3b
----------------------------------

Begin block 0x40
prev = {'0xd'}, next = {'0x4b', '0x66b'}
----------------------------------
Block 0x40
0x41: v41(0x95ea7b3) = CONST 
0x46: v46 = EQ v41(0x95ea7b3) v34
0x655: v655(0x66b) = CONST 
0x656: JUMPI v655(0x66b) v46
----------------------------------

Begin block 0x4b
prev = {'0x40'}, next = {'0x66e', '0x56'}
----------------------------------
Block 0x4b
0x4c: v4c(0x18160ddd) = CONST 
0x51: v51 = EQ v4c(0x18160ddd) v34
0x657: v657(0x66e) = CONST 
0x658: JUMPI v657(0x66e) v51
----------------------------------

Begin block 0x56
prev = {'0x4b'}, next = {'0x61', '0x671'}
----------------------------------
Block 0x56
0x57: v57(0x23b872dd) = CONST 
0x5c: v5c = EQ v57(0x23b872dd) v34
0x659: v659(0x671) = CONST 
0x65a: JUMPI v659(0x671) v5c
----------------------------------

Begin block 0x61
prev = {'0x56'}, next = {'0x674', '0x6c'}
----------------------------------
Block 0x61
0x62: v62(0x313ce567) = CONST 
0x67: v67 = EQ v62(0x313ce567) v34
0x65b: v65b(0x674) = CONST 
0x65c: JUMPI v65b(0x674) v67
----------------------------------

Begin block 0x6c
prev = {'0x61'}, next = {'0x77', '0x677'}
----------------------------------
Block 0x6c
0x6d: v6d(0x70a08231) = CONST 
0x72: v72 = EQ v6d(0x70a08231) v34
0x65d: v65d(0x677) = CONST 
0x65e: JUMPI v65d(0x677) v72
----------------------------------

Begin block 0x77
prev = {'0x6c'}, next = {'0x67a', '0x82'}
----------------------------------
Block 0x77
0x78: v78(0x95d89b41) = CONST 
0x7d: v7d = EQ v78(0x95d89b41) v34
0x65f: v65f(0x67a) = CONST 
0x660: JUMPI v65f(0x67a) v7d
----------------------------------

Begin block 0x82
prev = {'0x77'}, next = {'0x67d', '0x8d'}
----------------------------------
Block 0x82
0x83: v83(0xa9059cbb) = CONST 
0x88: v88 = EQ v83(0xa9059cbb) v34
0x661: v661(0x67d) = CONST 
0x662: JUMPI v661(0x67d) v88
----------------------------------

Begin block 0x8d
prev = {'0x82'}, next = {'0x665', '0x680'}
----------------------------------
Block 0x8d
0x8e: v8e(0xdd62ed3e) = CONST 
0x93: v93 = EQ v8e(0xdd62ed3e) v34
0x663: v663(0x680) = CONST 
0x664: JUMPI v663(0x680) v93
----------------------------------

Begin block 0x98
prev = {}, next = {'0xa0', '0xa4'}
----------------------------------
function batchLock_63efZf()()
Block 0x98
0x99: v99 = CALLVALUE 
0x9b: v9b = ISZERO v99
0x9c: v9c(0xa4) = CONST 
0x9f: JUMPI v9c(0xa4) v9b
----------------------------------

Begin block 0xa0
prev = {'0x98'}, next = {}
----------------------------------
Block 0xa0
0xa0: va0(0x0) = CONST 
0xa3: REVERT va0(0x0) va0(0x0)
----------------------------------

Begin block 0xa4
prev = {'0x98'}, next = {}
----------------------------------
Block 0xa4
0xa6: va6(0x0) = CONST 
0xa9: REVERT va6(0x0) va6(0x0)
----------------------------------

Begin block 0xaa
prev = {}, next = {'0xb2', '0xb6'}
----------------------------------
function name()()
Block 0xaa
0xab: vab = CALLVALUE 
0xad: vad = ISZERO vab
0xae: vae(0xb6) = CONST 
0xb1: JUMPI vae(0xb6) vad
----------------------------------

Begin block 0xb2
prev = {'0xaa'}, next = {}
----------------------------------
Block 0xb2
0xb2: vb2(0x0) = CONST 
0xb5: REVERT vb2(0x0) vb2(0x0)
----------------------------------

Begin block 0xb6
prev = {'0xaa'}, next = {'0xbf0xaa'}
----------------------------------
Block 0xb6
0xb8: vb8(0xbf) = CONST 
0xbb: vbb(0x253) = CONST 
0xbe: vbe_0, vbe_1 = CALLPRIVATE vbb(0x253) vb8(0xbf)
----------------------------------

Begin block 0xbf0xaa
prev = {'0xb6'}, next = {'0xe10xaa'}
----------------------------------
Block 0xbf0xaa
0xc00xaa: vaac0(0x40) = CONST 
0xc30xaa: vaac3 = MLOAD vaac0(0x40)
0xc40xaa: vaac4(0x20) = CONST 
0xc80xaa: MSTORE vaac3 vaac4(0x20)
0xca0xaa: vaaca = MLOAD vbe_0
0xcd0xaa: vaacd = ADD vaac3 vaac4(0x20)
0xce0xaa: MSTORE vaacd vaaca
0xd00xaa: vaad0 = MLOAD vbe_0
0xd70xaa: vaad7 = ADD vaac3 vaac0(0x40)
0xda0xaa: vaada = ADD vbe_0 vaac4(0x20)
0xdf0xaa: vaadf(0x0) = CONST 
----------------------------------

Begin block 0xbf0x1f3
prev = {'0x1ff'}, next = {'0xe10x1f3'}
----------------------------------
Block 0xbf0x1f3
0xc00x1f3: v1f3c0(0x40) = CONST 
0xc30x1f3: v1f3c3 = MLOAD v1f3c0(0x40)
0xc40x1f3: v1f3c4(0x20) = CONST 
0xc80x1f3: MSTORE v1f3c3 v1f3c4(0x20)
0xca0x1f3: v1f3ca = MLOAD v207_0
0xcd0x1f3: v1f3cd = ADD v1f3c3 v1f3c4(0x20)
0xce0x1f3: MSTORE v1f3cd v1f3ca
0xd00x1f3: v1f3d0 = MLOAD v207_0
0xd70x1f3: v1f3d7 = ADD v1f3c3 v1f3c0(0x40)
0xda0x1f3: v1f3da = ADD v207_0 v1f3c4(0x20)
0xdf0x1f3: v1f3df(0x0) = CONST 
----------------------------------

Begin block 0xe10xaa
prev = {'0xbf0xaa', '0xea0xaa'}, next = {'0xf90xaa', '0xea0xaa'}
----------------------------------
Block 0xe10xaa
0xe10xaa_0x0: ve1aa_0 = PHI vaadf(0x0) vaaf4
0xe40xaa: vaae4 = LT ve1aa_0 vaad0
0xe50xaa: vaae5 = ISZERO vaae4
0xe60xaa: vaae6(0xf9) = CONST 
0xe90xaa: JUMPI vaae6(0xf9) vaae5
----------------------------------

Begin block 0xe10x1f3
prev = {'0xbf0x1f3', '0xea0x1f3'}, next = {'0xf90x1f3', '0xea0x1f3'}
----------------------------------
Block 0xe10x1f3
0xe10x1f3_0x0: ve11f3_0 = PHI v1f3df(0x0) v1f3f4
0xe40x1f3: v1f3e4 = LT ve11f3_0 v1f3d0
0xe50x1f3: v1f3e5 = ISZERO v1f3e4
0xe60x1f3: v1f3e6(0xf9) = CONST 
0xe90x1f3: JUMPI v1f3e6(0xf9) v1f3e5
----------------------------------

Begin block 0xea0xaa
prev = {'0xe10xaa'}, next = {'0xe10xaa'}
----------------------------------
Block 0xea0xaa
0xea0xaa_0x0: veaaa_0 = PHI vaadf(0x0) vaaf4
0xec0xaa: vaaec = ADD veaaa_0 vaada
0xed0xaa: vaaed = MLOAD vaaec
0xf00xaa: vaaf0 = ADD veaaa_0 vaad7
0xf10xaa: MSTORE vaaf0 vaaed
0xf20xaa: vaaf2(0x20) = CONST 
0xf40xaa: vaaf4 = ADD vaaf2(0x20) veaaa_0
0xf50xaa: vaaf5(0xe1) = CONST 
0xf80xaa: JUMP vaaf5(0xe1)
----------------------------------

Begin block 0xea0x1f3
prev = {'0xe10x1f3'}, next = {'0xe10x1f3'}
----------------------------------
Block 0xea0x1f3
0xea0x1f3_0x0: vea1f3_0 = PHI v1f3df(0x0) v1f3f4
0xec0x1f3: v1f3ec = ADD vea1f3_0 v1f3da
0xed0x1f3: v1f3ed = MLOAD v1f3ec
0xf00x1f3: v1f3f0 = ADD vea1f3_0 v1f3d7
0xf10x1f3: MSTORE v1f3f0 v1f3ed
0xf20x1f3: v1f3f2(0x20) = CONST 
0xf40x1f3: v1f3f4 = ADD v1f3f2(0x20) vea1f3_0
0xf50x1f3: v1f3f5(0xe1) = CONST 
0xf80x1f3: JUMP v1f3f5(0xe1)
----------------------------------

Begin block 0xf90xaa
prev = {'0xe10xaa'}, next = {'0x1260xaa', '0x10d0xaa'}
----------------------------------
Block 0xf90xaa
0x1020xaa: vaa102 = ADD vaad0 vaad7
0x1040xaa: vaa104(0x1f) = CONST 
0x1060xaa: vaa106 = AND vaa104(0x1f) vaad0
0x1080xaa: vaa108 = ISZERO vaa106
0x1090xaa: vaa109(0x126) = CONST 
0x10c0xaa: JUMPI vaa109(0x126) vaa108
----------------------------------

Begin block 0xf90x1f3
prev = {'0xe10x1f3'}, next = {'0x1260x1f3', '0x10d0x1f3'}
----------------------------------
Block 0xf90x1f3
0x1020x1f3: v1f3102 = ADD v1f3d0 v1f3d7
0x1040x1f3: v1f3104(0x1f) = CONST 
0x1060x1f3: v1f3106 = AND v1f3104(0x1f) v1f3d0
0x1080x1f3: v1f3108 = ISZERO v1f3106
0x1090x1f3: v1f3109(0x126) = CONST 
0x10c0x1f3: JUMPI v1f3109(0x126) v1f3108
----------------------------------

Begin block 0x10d0xaa
prev = {'0xf90xaa'}, next = {'0x1260xaa'}
----------------------------------
Block 0x10d0xaa
0x10f0xaa: vaa10f = SUB vaa102 vaa106
0x1110xaa: vaa111 = MLOAD vaa10f
0x1120xaa: vaa112(0x1) = CONST 
0x1150xaa: vaa115(0x20) = CONST 
0x1170xaa: vaa117 = SUB vaa115(0x20) vaa106
0x1180xaa: vaa118(0x100) = CONST 
0x11b0xaa: vaa11b = EXP vaa118(0x100) vaa117
0x11c0xaa: vaa11c = SUB vaa11b vaa112(0x1)
0x11d0xaa: vaa11d = NOT vaa11c
0x11e0xaa: vaa11e = AND vaa11d vaa111
0x1200xaa: MSTORE vaa10f vaa11e
0x1210xaa: vaa121(0x20) = CONST 
0x1230xaa: vaa123 = ADD vaa121(0x20) vaa10f
----------------------------------

Begin block 0x10d0x1f3
prev = {'0xf90x1f3'}, next = {'0x1260x1f3'}
----------------------------------
Block 0x10d0x1f3
0x10f0x1f3: v1f310f = SUB v1f3102 v1f3106
0x1110x1f3: v1f3111 = MLOAD v1f310f
0x1120x1f3: v1f3112(0x1) = CONST 
0x1150x1f3: v1f3115(0x20) = CONST 
0x1170x1f3: v1f3117 = SUB v1f3115(0x20) v1f3106
0x1180x1f3: v1f3118(0x100) = CONST 
0x11b0x1f3: v1f311b = EXP v1f3118(0x100) v1f3117
0x11c0x1f3: v1f311c = SUB v1f311b v1f3112(0x1)
0x11d0x1f3: v1f311d = NOT v1f311c
0x11e0x1f3: v1f311e = AND v1f311d v1f3111
0x1200x1f3: MSTORE v1f310f v1f311e
0x1210x1f3: v1f3121(0x20) = CONST 
0x1230x1f3: v1f3123 = ADD v1f3121(0x20) v1f310f
----------------------------------

Begin block 0x1260xaa
prev = {'0x10d0xaa', '0xf90xaa'}, next = {}
----------------------------------
Block 0x1260xaa
0x1260xaa_0x1: v126aa_1 = PHI vaa102 vaa123
0x12c0xaa: vaa12c(0x40) = CONST 
0x12e0xaa: vaa12e = MLOAD vaa12c(0x40)
0x1310xaa: vaa131 = SUB v126aa_1 vaa12e
0x1330xaa: RETURN vaa12e vaa131
----------------------------------

Begin block 0x1260x1f3
prev = {'0xf90x1f3', '0x10d0x1f3'}, next = {}
----------------------------------
Block 0x1260x1f3
0x1260x1f3_0x1: v1261f3_1 = PHI v1f3102 v1f3123
0x12c0x1f3: v1f312c(0x40) = CONST 
0x12e0x1f3: v1f312e = MLOAD v1f312c(0x40)
0x1310x1f3: v1f3131 = SUB v1261f3_1 v1f312e
0x1330x1f3: RETURN v1f312e v1f3131
----------------------------------

Begin block 0x134
prev = {}, next = {'0x140', '0x13c'}
----------------------------------
function approve(address,uint256)()
Block 0x134
0x135: v135 = CALLVALUE 
0x137: v137 = ISZERO v135
0x138: v138(0x140) = CONST 
0x13b: JUMPI v138(0x140) v137
----------------------------------

Begin block 0x13c
prev = {'0x134'}, next = {}
----------------------------------
Block 0x13c
0x13c: v13c(0x0) = CONST 
0x13f: REVERT v13c(0x0) v13c(0x0)
----------------------------------

Begin block 0x140
prev = {'0x134'}, next = {'0x2e1'}
----------------------------------
Block 0x140
0x142: v142(0x158) = CONST 
0x145: v145(0x1) = CONST 
0x147: v147(0xa0) = CONST 
0x149: v149(0x2) = CONST 
0x14b: v14b(0x10000000000000000000000000000000000000000) = EXP v149(0x2) v147(0xa0)
0x14c: v14c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v14b(0x10000000000000000000000000000000000000000) v145(0x1)
0x14d: v14d(0x4) = CONST 
0x14f: v14f = CALLDATALOAD v14d(0x4)
0x150: v150 = AND v14f v14c(0xffffffffffffffffffffffffffffffffffffffff)
0x151: v151(0x24) = CONST 
0x153: v153 = CALLDATALOAD v151(0x24)
0x154: v154(0x2e1) = CONST 
0x157: JUMP v154(0x2e1)
----------------------------------

Begin block 0x1580x134
prev = {'0x2fd'}, next = {}
----------------------------------
Block 0x1580x134
0x1590x134: v134159(0x40) = CONST 
0x15c0x134: v13415c = MLOAD v134159(0x40)
0x15e0x134: v13415e = ISZERO v35d(0x1)
0x15f0x134: v13415f = ISZERO v13415e
0x1610x134: MSTORE v13415c v13415f
0x1620x134: v134162 = MLOAD v134159(0x40)
0x1660x134: v134166 = SUB v13415c v134162
0x1670x134: v134167(0x20) = CONST 
0x1690x134: v134169 = ADD v134167(0x20) v134166
0x16b0x134: RETURN v134162 v134169
----------------------------------

Begin block 0x1580x193
prev = {'0x462'}, next = {}
----------------------------------
Block 0x1580x193
0x1590x193: v193159(0x40) = CONST 
0x15c0x193: v19315c = MLOAD v193159(0x40)
0x15e0x193: v19315e = ISZERO v4af(0x1)
0x15f0x193: v19315f = ISZERO v19315e
0x1610x193: MSTORE v19315c v19315f
0x1620x193: v193162 = MLOAD v193159(0x40)
0x1660x193: v193166 = SUB v19315c v193162
0x1670x193: v193167(0x20) = CONST 
0x1690x193: v193169 = ADD v193167(0x20) v193166
0x16b0x193: RETURN v193162 v193169
----------------------------------

Begin block 0x1580x208
prev = {'0x5b1'}, next = {}
----------------------------------
Block 0x1580x208
0x1590x208: v208159(0x40) = CONST 
0x15c0x208: v20815c = MLOAD v208159(0x40)
0x15e0x208: v20815e = ISZERO v5f3(0x1)
0x15f0x208: v20815f = ISZERO v20815e
0x1610x208: MSTORE v20815c v20815f
0x1620x208: v208162 = MLOAD v208159(0x40)
0x1660x208: v208166 = SUB v20815c v208162
0x1670x208: v208167(0x20) = CONST 
0x1690x208: v208169 = ADD v208167(0x20) v208166
0x16b0x208: RETURN v208162 v208169
----------------------------------

Begin block 0x16c
prev = {}, next = {'0x174', '0x178'}
----------------------------------
function totalSupply()()
Block 0x16c
0x16d: v16d = CALLVALUE 
0x16f: v16f = ISZERO v16d
0x170: v170(0x178) = CONST 
0x173: JUMPI v170(0x178) v16f
----------------------------------

Begin block 0x174
prev = {'0x16c'}, next = {}
----------------------------------
Block 0x174
0x174: v174(0x0) = CONST 
0x177: REVERT v174(0x0) v174(0x0)
----------------------------------

Begin block 0x178
prev = {'0x16c'}, next = {'0x364'}
----------------------------------
Block 0x178
0x17a: v17a(0x181) = CONST 
0x17d: v17d(0x364) = CONST 
0x180: JUMP v17d(0x364)
----------------------------------

Begin block 0x1810x16c
prev = {'0x364'}, next = {}
----------------------------------
Block 0x1810x16c
0x1820x16c: v16c182(0x40) = CONST 
0x1850x16c: v16c185 = MLOAD v16c182(0x40)
0x1880x16c: MSTORE v16c185 v367
0x1890x16c: v16c189 = MLOAD v16c182(0x40)
0x18d0x16c: v16c18d = SUB v16c185 v16c189
0x18e0x16c: v16c18e(0x20) = CONST 
0x1900x16c: v16c190 = ADD v16c18e(0x20) v16c18d
0x1920x16c: RETURN v16c189 v16c190
----------------------------------

Begin block 0x1810x1bd
prev = {'0x4b7'}, next = {}
----------------------------------
Block 0x1810x1bd
0x1820x1bd: v1bd182(0x40) = CONST 
0x1850x1bd: v1bd185 = MLOAD v1bd182(0x40)
0x1880x1bd: MSTORE v1bd185 v4ba
0x1890x1bd: v1bd189 = MLOAD v1bd182(0x40)
0x18d0x1bd: v1bd18d = SUB v1bd185 v1bd189
0x18e0x1bd: v1bd18e(0x20) = CONST 
0x1900x1bd: v1bd190 = ADD v1bd18e(0x20) v1bd18d
0x1920x1bd: RETURN v1bd189 v1bd190
----------------------------------

Begin block 0x1810x1d2
prev = {'0x4bd'}, next = {}
----------------------------------
Block 0x1810x1d2
0x1820x1d2: v1d2182(0x40) = CONST 
0x1850x1d2: v1d2185 = MLOAD v1d2182(0x40)
0x1880x1d2: MSTORE v1d2185 v4d5
0x1890x1d2: v1d2189 = MLOAD v1d2182(0x40)
0x18d0x1d2: v1d218d = SUB v1d2185 v1d2189
0x18e0x1d2: v1d218e(0x20) = CONST 
0x1900x1d2: v1d2190 = ADD v1d218e(0x20) v1d218d
0x1920x1d2: RETURN v1d2189 v1d2190
----------------------------------

Begin block 0x1810x22c
prev = {'0x5fa'}, next = {}
----------------------------------
Block 0x1810x22c
0x1820x22c: v22c182(0x40) = CONST 
0x1850x22c: v22c185 = MLOAD v22c182(0x40)
0x1880x22c: MSTORE v22c185 v622
0x1890x22c: v22c189 = MLOAD v22c182(0x40)
0x18d0x22c: v22c18d = SUB v22c185 v22c189
0x18e0x22c: v22c18e(0x20) = CONST 
0x1900x22c: v22c190 = ADD v22c18e(0x20) v22c18d
0x1920x22c: RETURN v22c189 v22c190
----------------------------------

Begin block 0x193
prev = {}, next = {'0x19f', '0x19b'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x193
0x194: v194 = CALLVALUE 
0x196: v196 = ISZERO v194
0x197: v197(0x19f) = CONST 
0x19a: JUMPI v197(0x19f) v196
----------------------------------

Begin block 0x19b
prev = {'0x193'}, next = {}
----------------------------------
Block 0x19b
0x19b: v19b(0x0) = CONST 
0x19e: REVERT v19b(0x0) v19b(0x0)
----------------------------------

Begin block 0x19f
prev = {'0x193'}, next = {'0x36a'}
----------------------------------
Block 0x19f
0x1a1: v1a1(0x158) = CONST 
0x1a4: v1a4(0x1) = CONST 
0x1a6: v1a6(0xa0) = CONST 
0x1a8: v1a8(0x2) = CONST 
0x1aa: v1aa(0x10000000000000000000000000000000000000000) = EXP v1a8(0x2) v1a6(0xa0)
0x1ab: v1ab(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1aa(0x10000000000000000000000000000000000000000) v1a4(0x1)
0x1ac: v1ac(0x4) = CONST 
0x1ae: v1ae = CALLDATALOAD v1ac(0x4)
0x1b0: v1b0 = AND v1ab(0xffffffffffffffffffffffffffffffffffffffff) v1ae
0x1b2: v1b2(0x24) = CONST 
0x1b4: v1b4 = CALLDATALOAD v1b2(0x24)
0x1b5: v1b5 = AND v1b4 v1ab(0xffffffffffffffffffffffffffffffffffffffff)
0x1b6: v1b6(0x44) = CONST 
0x1b8: v1b8 = CALLDATALOAD v1b6(0x44)
0x1b9: v1b9(0x36a) = CONST 
0x1bc: JUMP v1b9(0x36a)
----------------------------------

Begin block 0x1bd
prev = {}, next = {'0x1c9', '0x1c5'}
----------------------------------
function decimals()()
Block 0x1bd
0x1be: v1be = CALLVALUE 
0x1c0: v1c0 = ISZERO v1be
0x1c1: v1c1(0x1c9) = CONST 
0x1c4: JUMPI v1c1(0x1c9) v1c0
----------------------------------

Begin block 0x1c5
prev = {'0x1bd'}, next = {}
----------------------------------
Block 0x1c5
0x1c5: v1c5(0x0) = CONST 
0x1c8: REVERT v1c5(0x0) v1c5(0x0)
----------------------------------

Begin block 0x1c9
prev = {'0x1bd'}, next = {'0x4b7'}
----------------------------------
Block 0x1c9
0x1cb: v1cb(0x181) = CONST 
0x1ce: v1ce(0x4b7) = CONST 
0x1d1: JUMP v1ce(0x4b7)
----------------------------------

Begin block 0x1d2
prev = {}, next = {'0x1da', '0x1de'}
----------------------------------
function balanceOf(address)()
Block 0x1d2
0x1d3: v1d3 = CALLVALUE 
0x1d5: v1d5 = ISZERO v1d3
0x1d6: v1d6(0x1de) = CONST 
0x1d9: JUMPI v1d6(0x1de) v1d5
----------------------------------

Begin block 0x1da
prev = {'0x1d2'}, next = {}
----------------------------------
Block 0x1da
0x1da: v1da(0x0) = CONST 
0x1dd: REVERT v1da(0x0) v1da(0x0)
----------------------------------

Begin block 0x1de
prev = {'0x1d2'}, next = {'0x4bd'}
----------------------------------
Block 0x1de
0x1e0: v1e0(0x181) = CONST 
0x1e3: v1e3(0x1) = CONST 
0x1e5: v1e5(0xa0) = CONST 
0x1e7: v1e7(0x2) = CONST 
0x1e9: v1e9(0x10000000000000000000000000000000000000000) = EXP v1e7(0x2) v1e5(0xa0)
0x1ea: v1ea(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1e9(0x10000000000000000000000000000000000000000) v1e3(0x1)
0x1eb: v1eb(0x4) = CONST 
0x1ed: v1ed = CALLDATALOAD v1eb(0x4)
0x1ee: v1ee = AND v1ed v1ea(0xffffffffffffffffffffffffffffffffffffffff)
0x1ef: v1ef(0x4bd) = CONST 
0x1f2: JUMP v1ef(0x4bd)
----------------------------------

Begin block 0x1f3
prev = {}, next = {'0x1fb', '0x1ff'}
----------------------------------
function symbol()()
Block 0x1f3
0x1f4: v1f4 = CALLVALUE 
0x1f6: v1f6 = ISZERO v1f4
0x1f7: v1f7(0x1ff) = CONST 
0x1fa: JUMPI v1f7(0x1ff) v1f6
----------------------------------

Begin block 0x1fb
prev = {'0x1f3'}, next = {}
----------------------------------
Block 0x1fb
0x1fb: v1fb(0x0) = CONST 
0x1fe: REVERT v1fb(0x0) v1fb(0x0)
----------------------------------

Begin block 0x1ff
prev = {'0x1f3'}, next = {'0xbf0x1f3'}
----------------------------------
Block 0x1ff
0x201: v201(0xbf) = CONST 
0x204: v204(0x4d8) = CONST 
0x207: v207_0, v207_1 = CALLPRIVATE v204(0x4d8) v201(0xbf)
----------------------------------

Begin block 0x208
prev = {}, next = {'0x214', '0x210'}
----------------------------------
function transfer(address,uint256)()
Block 0x208
0x209: v209 = CALLVALUE 
0x20b: v20b = ISZERO v209
0x20c: v20c(0x214) = CONST 
0x20f: JUMPI v20c(0x214) v20b
----------------------------------

Begin block 0x210
prev = {'0x208'}, next = {}
----------------------------------
Block 0x210
0x210: v210(0x0) = CONST 
0x213: REVERT v210(0x0) v210(0x0)
----------------------------------

Begin block 0x214
prev = {'0x208'}, next = {'0x530'}
----------------------------------
Block 0x214
0x216: v216(0x158) = CONST 
0x219: v219(0x1) = CONST 
0x21b: v21b(0xa0) = CONST 
0x21d: v21d(0x2) = CONST 
0x21f: v21f(0x10000000000000000000000000000000000000000) = EXP v21d(0x2) v21b(0xa0)
0x220: v220(0xffffffffffffffffffffffffffffffffffffffff) = SUB v21f(0x10000000000000000000000000000000000000000) v219(0x1)
0x221: v221(0x4) = CONST 
0x223: v223 = CALLDATALOAD v221(0x4)
0x224: v224 = AND v223 v220(0xffffffffffffffffffffffffffffffffffffffff)
0x225: v225(0x24) = CONST 
0x227: v227 = CALLDATALOAD v225(0x24)
0x228: v228(0x530) = CONST 
0x22b: JUMP v228(0x530)
----------------------------------

Begin block 0x22c
prev = {}, next = {'0x234', '0x238'}
----------------------------------
function allowance(address,address)()
Block 0x22c
0x22d: v22d = CALLVALUE 
0x22f: v22f = ISZERO v22d
0x230: v230(0x238) = CONST 
0x233: JUMPI v230(0x238) v22f
----------------------------------

Begin block 0x234
prev = {'0x22c'}, next = {}
----------------------------------
Block 0x234
0x234: v234(0x0) = CONST 
0x237: REVERT v234(0x0) v234(0x0)
----------------------------------

Begin block 0x238
prev = {'0x22c'}, next = {'0x5fa'}
----------------------------------
Block 0x238
0x23a: v23a(0x181) = CONST 
0x23d: v23d(0x1) = CONST 
0x23f: v23f(0xa0) = CONST 
0x241: v241(0x2) = CONST 
0x243: v243(0x10000000000000000000000000000000000000000) = EXP v241(0x2) v23f(0xa0)
0x244: v244(0xffffffffffffffffffffffffffffffffffffffff) = SUB v243(0x10000000000000000000000000000000000000000) v23d(0x1)
0x245: v245(0x4) = CONST 
0x247: v247 = CALLDATALOAD v245(0x4)
0x249: v249 = AND v244(0xffffffffffffffffffffffffffffffffffffffff) v247
0x24b: v24b(0x24) = CONST 
0x24d: v24d = CALLDATALOAD v24b(0x24)
0x24e: v24e = AND v24d v244(0xffffffffffffffffffffffffffffffffffffffff)
0x24f: v24f(0x5fa) = CONST 
0x252: JUMP v24f(0x5fa)
----------------------------------

Begin block 0x253
prev = {}, next = {'0x293', '0x2d90x253'}
----------------------------------
function 0x253(v253arg0)
Block 0x253
0x254: v254(0x3) = CONST 
0x257: v257 = SLOAD v254(0x3)
0x258: v258(0x40) = CONST 
0x25b: v25b = MLOAD v258(0x40)
0x25c: v25c(0x20) = CONST 
0x25e: v25e(0x2) = CONST 
0x260: v260(0x1) = CONST 
0x263: v263 = AND v257 v260(0x1)
0x264: v264 = ISZERO v263
0x265: v265(0x100) = CONST 
0x268: v268 = MUL v265(0x100) v264
0x269: v269(0x0) = CONST 
0x26b: v26b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v269(0x0)
0x26c: v26c = ADD v26b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v268
0x26f: v26f = AND v257 v26c
0x273: v273 = DIV v26f v25e(0x2)
0x274: v274(0x1f) = CONST 
0x277: v277 = ADD v273 v274(0x1f)
0x27a: v27a = DIV v277 v25c(0x20)
0x27c: v27c = MUL v25c(0x20) v27a
0x27e: v27e = ADD v25b v27c
0x280: v280 = ADD v25c(0x20) v27e
0x283: MSTORE v258(0x40) v280
0x286: MSTORE v25b v273
0x28a: v28a = ADD v25b v25c(0x20)
0x28e: v28e = ISZERO v273
0x28f: v28f(0x2d9) = CONST 
0x292: JUMPI v28f(0x2d9) v28e
----------------------------------

Begin block 0x293
prev = {'0x253'}, next = {'0x29b', '0x2ae0x253'}
----------------------------------
Block 0x293
0x294: v294(0x1f) = CONST 
0x296: v296 = LT v294(0x1f) v273
0x297: v297(0x2ae) = CONST 
0x29a: JUMPI v297(0x2ae) v296
----------------------------------

Begin block 0x29b
prev = {'0x293'}, next = {'0x2d90x253'}
----------------------------------
Block 0x29b
0x29b: v29b(0x100) = CONST 
0x2a0: v2a0 = SLOAD v254(0x3)
0x2a1: v2a1 = DIV v2a0 v29b(0x100)
0x2a2: v2a2 = MUL v2a1 v29b(0x100)
0x2a4: MSTORE v28a v2a2
0x2a6: v2a6(0x20) = CONST 
0x2a8: v2a8 = ADD v2a6(0x20) v28a
0x2aa: v2aa(0x2d9) = CONST 
0x2ad: JUMP v2aa(0x2d9)
----------------------------------

Begin block 0x2ae0x253
prev = {'0x293'}, next = {'0x2bc0x253'}
----------------------------------
Block 0x2ae0x253
0x2b00x253: v2532b0 = ADD v28a v273
0x2b30x253: v2532b3(0x0) = CONST 
0x2b50x253: MSTORE v2532b3(0x0) v254(0x3)
0x2b60x253: v2532b6(0x20) = CONST 
0x2b80x253: v2532b8(0x0) = CONST 
0x2ba0x253: v2532ba = SHA3 v2532b8(0x0) v2532b6(0x20)
----------------------------------

Begin block 0x2ae0x4d8
prev = {'0x515'}, next = {'0x2bc0x4d8'}
----------------------------------
Block 0x2ae0x4d8
0x2b00x4d8: v4d82b0 = ADD v50c v4f5
0x2b30x4d8: v4d82b3(0x0) = CONST 
0x2b50x4d8: MSTORE v4d82b3(0x0) v4d9(0x2)
0x2b60x4d8: v4d82b6(0x20) = CONST 
0x2b80x4d8: v4d82b8(0x0) = CONST 
0x2ba0x4d8: v4d82ba = SHA3 v4d82b8(0x0) v4d82b6(0x20)
----------------------------------

Begin block 0x2bc0x253
prev = {'0x2ae0x253', '0x2bc0x253'}, next = {'0x2d00x253', '0x2bc0x253'}
----------------------------------
Block 0x2bc0x253
0x2bc0x253_0x0: v2bc253_0 = PHI v28a v2532c8
0x2bc0x253_0x1: v2bc253_1 = PHI v2532c4 v2532ba
0x2be0x253: v2532be = SLOAD v2bc253_1
0x2c00x253: MSTORE v2bc253_0 v2532be
0x2c20x253: v2532c2(0x1) = CONST 
0x2c40x253: v2532c4 = ADD v2532c2(0x1) v2bc253_1
0x2c60x253: v2532c6(0x20) = CONST 
0x2c80x253: v2532c8 = ADD v2532c6(0x20) v2bc253_0
0x2cb0x253: v2532cb = GT v2532b0 v2532c8
0x2cc0x253: v2532cc(0x2bc) = CONST 
0x2cf0x253: JUMPI v2532cc(0x2bc) v2532cb
----------------------------------

Begin block 0x2bc0x4d8
prev = {'0x2bc0x4d8', '0x2ae0x4d8'}, next = {'0x2d00x4d8', '0x2bc0x4d8'}
----------------------------------
Block 0x2bc0x4d8
0x2bc0x4d8_0x0: v2bc4d8_0 = PHI v50c v4d82c8
0x2bc0x4d8_0x1: v2bc4d8_1 = PHI v4d82c4 v4d82ba
0x2be0x4d8: v4d82be = SLOAD v2bc4d8_1
0x2c00x4d8: MSTORE v2bc4d8_0 v4d82be
0x2c20x4d8: v4d82c2(0x1) = CONST 
0x2c40x4d8: v4d82c4 = ADD v4d82c2(0x1) v2bc4d8_1
0x2c60x4d8: v4d82c6(0x20) = CONST 
0x2c80x4d8: v4d82c8 = ADD v4d82c6(0x20) v2bc4d8_0
0x2cb0x4d8: v4d82cb = GT v4d82b0 v4d82c8
0x2cc0x4d8: v4d82cc(0x2bc) = CONST 
0x2cf0x4d8: JUMPI v4d82cc(0x2bc) v4d82cb
----------------------------------

Begin block 0x2d00x253
prev = {'0x2bc0x253'}, next = {'0x2d90x253'}
----------------------------------
Block 0x2d00x253
0x2d20x253: v2532d2 = SUB v2532c8 v2532b0
0x2d30x253: v2532d3(0x1f) = CONST 
0x2d50x253: v2532d5 = AND v2532d3(0x1f) v2532d2
0x2d70x253: v2532d7 = ADD v2532b0 v2532d5
----------------------------------

Begin block 0x2d00x4d8
prev = {'0x2bc0x4d8'}, next = {'0x2d90x4d8'}
----------------------------------
Block 0x2d00x4d8
0x2d20x4d8: v4d82d2 = SUB v4d82c8 v4d82b0
0x2d30x4d8: v4d82d3(0x1f) = CONST 
0x2d50x4d8: v4d82d5 = AND v4d82d3(0x1f) v4d82d2
0x2d70x4d8: v4d82d7 = ADD v4d82b0 v4d82d5
----------------------------------

Begin block 0x2d90x253
prev = {'0x253', '0x29b', '0x2d00x253'}, next = {}
----------------------------------
Block 0x2d90x253
0x2e00x253: RETURNPRIVATE v253arg0 v25b v253arg0
----------------------------------

Begin block 0x2d90x4d8
prev = {'0x4d8', '0x2d00x4d8', '0x51d'}, next = {}
----------------------------------
Block 0x2d90x4d8
0x2e00x4d8: RETURNPRIVATE v4d8arg0 v4e0 v4d8arg0
----------------------------------

Begin block 0x2e1
prev = {'0x140'}, next = {'0x2fd', '0x2f9'}
----------------------------------
Block 0x2e1
0x2e2: v2e2 = CALLER 
0x2e3: v2e3(0x0) = CONST 
0x2e7: MSTORE v2e3(0x0) v2e2
0x2e8: v2e8(0x5) = CONST 
0x2ea: v2ea(0x20) = CONST 
0x2ec: MSTORE v2ea(0x20) v2e8(0x5)
0x2ed: v2ed(0x40) = CONST 
0x2f0: v2f0 = SHA3 v2e3(0x0) v2ed(0x40)
0x2f1: v2f1 = SLOAD v2f0
0x2f3: v2f3 = GT v153 v2f1
0x2f4: v2f4 = ISZERO v2f3
0x2f5: v2f5(0x2fd) = CONST 
0x2f8: JUMPI v2f5(0x2fd) v2f4
----------------------------------

Begin block 0x2f9
prev = {'0x2e1'}, next = {}
----------------------------------
Block 0x2f9
0x2f9: v2f9(0x0) = CONST 
0x2fc: REVERT v2f9(0x0) v2f9(0x0)
----------------------------------

Begin block 0x2fd
prev = {'0x2e1'}, next = {'0x1580x134'}
----------------------------------
Block 0x2fd
0x2fe: v2fe = CALLER 
0x2ff: v2ff(0x0) = CONST 
0x303: MSTORE v2ff(0x0) v2fe
0x304: v304(0x4) = CONST 
0x306: v306(0x20) = CONST 
0x30a: MSTORE v306(0x20) v304(0x4)
0x30b: v30b(0x40) = CONST 
0x30f: v30f = SHA3 v2ff(0x0) v30b(0x40)
0x310: v310(0x1) = CONST 
0x312: v312(0xa0) = CONST 
0x314: v314(0x2) = CONST 
0x316: v316(0x10000000000000000000000000000000000000000) = EXP v314(0x2) v312(0xa0)
0x317: v317(0xffffffffffffffffffffffffffffffffffffffff) = SUB v316(0x10000000000000000000000000000000000000000) v310(0x1)
0x319: v319 = AND v150 v317(0xffffffffffffffffffffffffffffffffffffffff)
0x31c: MSTORE v2ff(0x0) v319
0x31f: MSTORE v306(0x20) v30f
0x323: v323 = SHA3 v2ff(0x0) v30b(0x40)
0x326: SSTORE v323 v153
0x328: v328 = MLOAD v30b(0x40)
0x32b: MSTORE v328 v153
0x32d: v32d = MLOAD v30b(0x40)
0x331: v331(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0x356: v356 = SUB v328 v32d
0x359: v359 = ADD v306(0x20) v356
0x35b: LOG3 v32d v359 v331(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) v2fe v319
0x35d: v35d(0x1) = CONST 
0x363: JUMP v142(0x158)
----------------------------------

Begin block 0x364
prev = {'0x178'}, next = {'0x1810x16c'}
----------------------------------
Block 0x364
0x365: v365(0x0) = CONST 
0x367: v367 = SLOAD v365(0x0)
0x369: JUMP v17a(0x181)
----------------------------------

Begin block 0x36a
prev = {'0x19f'}, next = {'0x38b', '0x38f'}
----------------------------------
Block 0x36a
0x36b: v36b(0x1) = CONST 
0x36d: v36d(0xa0) = CONST 
0x36f: v36f(0x2) = CONST 
0x371: v371(0x10000000000000000000000000000000000000000) = EXP v36f(0x2) v36d(0xa0)
0x372: v372(0xffffffffffffffffffffffffffffffffffffffff) = SUB v371(0x10000000000000000000000000000000000000000) v36b(0x1)
0x374: v374 = AND v1b0 v372(0xffffffffffffffffffffffffffffffffffffffff)
0x375: v375(0x0) = CONST 
0x379: MSTORE v375(0x0) v374
0x37a: v37a(0x5) = CONST 
0x37c: v37c(0x20) = CONST 
0x37e: MSTORE v37c(0x20) v37a(0x5)
0x37f: v37f(0x40) = CONST 
0x382: v382 = SHA3 v375(0x0) v37f(0x40)
0x383: v383 = SLOAD v382
0x385: v385 = GT v1b8 v383
0x386: v386 = ISZERO v385
0x387: v387(0x38f) = CONST 
0x38a: JUMPI v387(0x38f) v386
----------------------------------

Begin block 0x38b
prev = {'0x36a'}, next = {}
----------------------------------
Block 0x38b
0x38b: v38b(0x0) = CONST 
0x38e: REVERT v38b(0x0) v38b(0x0)
----------------------------------

Begin block 0x38f
prev = {'0x36a'}, next = {'0x3bb', '0x3bf'}
----------------------------------
Block 0x38f
0x390: v390(0x1) = CONST 
0x392: v392(0xa0) = CONST 
0x394: v394(0x2) = CONST 
0x396: v396(0x10000000000000000000000000000000000000000) = EXP v394(0x2) v392(0xa0)
0x397: v397(0xffffffffffffffffffffffffffffffffffffffff) = SUB v396(0x10000000000000000000000000000000000000000) v390(0x1)
0x399: v399 = AND v1b0 v397(0xffffffffffffffffffffffffffffffffffffffff)
0x39a: v39a(0x0) = CONST 
0x39e: MSTORE v39a(0x0) v399
0x39f: v39f(0x4) = CONST 
0x3a1: v3a1(0x20) = CONST 
0x3a5: MSTORE v3a1(0x20) v39f(0x4)
0x3a6: v3a6(0x40) = CONST 
0x3aa: v3aa = SHA3 v39a(0x0) v3a6(0x40)
0x3ab: v3ab = CALLER 
0x3ad: MSTORE v39a(0x0) v3ab
0x3b0: MSTORE v3a1(0x20) v3aa
0x3b2: v3b2 = SHA3 v39a(0x0) v3a6(0x40)
0x3b3: v3b3 = SLOAD v3b2
0x3b5: v3b5 = GT v1b8 v3b3
0x3b6: v3b6 = ISZERO v3b5
0x3b7: v3b7(0x3bf) = CONST 
0x3ba: JUMPI v3b7(0x3bf) v3b6
----------------------------------

Begin block 0x3bb
prev = {'0x38f'}, next = {}
----------------------------------
Block 0x3bb
0x3bb: v3bb(0x0) = CONST 
0x3be: REVERT v3bb(0x0) v3bb(0x0)
----------------------------------

Begin block 0x3bf
prev = {'0x38f'}, next = {'0x3e0', '0x3e1'}
----------------------------------
Block 0x3bf
0x3c0: v3c0(0x1) = CONST 
0x3c2: v3c2(0xa0) = CONST 
0x3c4: v3c4(0x2) = CONST 
0x3c6: v3c6(0x10000000000000000000000000000000000000000) = EXP v3c4(0x2) v3c2(0xa0)
0x3c7: v3c7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3c6(0x10000000000000000000000000000000000000000) v3c0(0x1)
0x3c9: v3c9 = AND v1b0 v3c7(0xffffffffffffffffffffffffffffffffffffffff)
0x3ca: v3ca(0x0) = CONST 
0x3ce: MSTORE v3ca(0x0) v3c9
0x3cf: v3cf(0x5) = CONST 
0x3d1: v3d1(0x20) = CONST 
0x3d3: MSTORE v3d1(0x20) v3cf(0x5)
0x3d4: v3d4(0x40) = CONST 
0x3d7: v3d7 = SHA3 v3ca(0x0) v3d4(0x40)
0x3d8: v3d8 = SLOAD v3d7
0x3da: v3da = GT v1b8 v3d8
0x3db: v3db = ISZERO v3da
0x3dc: v3dc(0x3e1) = CONST 
0x3df: JUMPI v3dc(0x3e1) v3db
----------------------------------

Begin block 0x3e0
prev = {'0x3bf'}, next = {}
----------------------------------
Block 0x3e0
0x3e0: THROW 
----------------------------------

Begin block 0x3e1
prev = {'0x3bf'}, next = {'0x41c', '0x41b'}
----------------------------------
Block 0x3e1
0x3e2: v3e2(0x1) = CONST 
0x3e4: v3e4(0xa0) = CONST 
0x3e6: v3e6(0x2) = CONST 
0x3e8: v3e8(0x10000000000000000000000000000000000000000) = EXP v3e6(0x2) v3e4(0xa0)
0x3e9: v3e9(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3e8(0x10000000000000000000000000000000000000000) v3e2(0x1)
0x3eb: v3eb = AND v1b0 v3e9(0xffffffffffffffffffffffffffffffffffffffff)
0x3ec: v3ec(0x0) = CONST 
0x3f0: MSTORE v3ec(0x0) v3eb
0x3f1: v3f1(0x5) = CONST 
0x3f3: v3f3(0x20) = CONST 
0x3f7: MSTORE v3f3(0x20) v3f1(0x5)
0x3f8: v3f8(0x40) = CONST 
0x3fc: v3fc = SHA3 v3ec(0x0) v3f8(0x40)
0x3fe: v3fe = SLOAD v3fc
0x401: v401 = SUB v3fe v1b8
0x403: SSTORE v3fc v401
0x404: v404(0x4) = CONST 
0x407: MSTORE v3f3(0x20) v404(0x4)
0x40a: v40a = SHA3 v3ec(0x0) v3f8(0x40)
0x40b: v40b = CALLER 
0x40d: MSTORE v3ec(0x0) v40b
0x410: MSTORE v3f3(0x20) v40a
0x412: v412 = SHA3 v3ec(0x0) v3f8(0x40)
0x413: v413 = SLOAD v412
0x415: v415 = GT v1b8 v413
0x416: v416 = ISZERO v415
0x417: v417(0x41c) = CONST 
0x41a: JUMPI v417(0x41c) v416
----------------------------------

Begin block 0x41b
prev = {'0x3e1'}, next = {}
----------------------------------
Block 0x41b
0x41b: THROW 
----------------------------------

Begin block 0x41c
prev = {'0x3e1'}, next = {'0x461', '0x462'}
----------------------------------
Block 0x41c
0x41d: v41d(0x1) = CONST 
0x41f: v41f(0xa0) = CONST 
0x421: v421(0x2) = CONST 
0x423: v423(0x10000000000000000000000000000000000000000) = EXP v421(0x2) v41f(0xa0)
0x424: v424(0xffffffffffffffffffffffffffffffffffffffff) = SUB v423(0x10000000000000000000000000000000000000000) v41d(0x1)
0x427: v427 = AND v1b0 v424(0xffffffffffffffffffffffffffffffffffffffff)
0x428: v428(0x0) = CONST 
0x42c: MSTORE v428(0x0) v427
0x42d: v42d(0x4) = CONST 
0x42f: v42f(0x20) = CONST 
0x433: MSTORE v42f(0x20) v42d(0x4)
0x434: v434(0x40) = CONST 
0x438: v438 = SHA3 v428(0x0) v434(0x40)
0x439: v439 = CALLER 
0x43b: MSTORE v428(0x0) v439
0x43d: MSTORE v42f(0x20) v438
0x440: v440 = SHA3 v428(0x0) v434(0x40)
0x442: v442 = SLOAD v440
0x445: v445 = SUB v442 v1b8
0x447: SSTORE v440 v445
0x44a: v44a = AND v1b5 v424(0xffffffffffffffffffffffffffffffffffffffff)
0x44c: MSTORE v428(0x0) v44a
0x44d: v44d(0x5) = CONST 
0x450: MSTORE v42f(0x20) v44d(0x5)
0x451: v451 = SHA3 v428(0x0) v434(0x40)
0x453: v453 = SLOAD v451
0x455: v455 = ADD v1b8 v453
0x459: SSTORE v451 v455
0x45b: v45b = GT v1b8 v455
0x45c: v45c = ISZERO v45b
0x45d: v45d(0x462) = CONST 
0x460: JUMPI v45d(0x462) v45c
----------------------------------

Begin block 0x461
prev = {'0x41c'}, next = {}
----------------------------------
Block 0x461
0x461: THROW 
----------------------------------

Begin block 0x462
prev = {'0x41c'}, next = {'0x1580x193'}
----------------------------------
Block 0x462
0x464: v464(0x1) = CONST 
0x466: v466(0xa0) = CONST 
0x468: v468(0x2) = CONST 
0x46a: v46a(0x10000000000000000000000000000000000000000) = EXP v468(0x2) v466(0xa0)
0x46b: v46b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v46a(0x10000000000000000000000000000000000000000) v464(0x1)
0x46c: v46c = AND v46b(0xffffffffffffffffffffffffffffffffffffffff) v1b5
0x46e: v46e(0x1) = CONST 
0x470: v470(0xa0) = CONST 
0x472: v472(0x2) = CONST 
0x474: v474(0x10000000000000000000000000000000000000000) = EXP v472(0x2) v470(0xa0)
0x475: v475(0xffffffffffffffffffffffffffffffffffffffff) = SUB v474(0x10000000000000000000000000000000000000000) v46e(0x1)
0x476: v476 = AND v475(0xffffffffffffffffffffffffffffffffffffffff) v1b0
0x477: v477(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x499: v499(0x40) = CONST 
0x49b: v49b = MLOAD v499(0x40)
0x49f: MSTORE v49b v1b8
0x4a0: v4a0(0x20) = CONST 
0x4a2: v4a2 = ADD v4a0(0x20) v49b
0x4a6: v4a6(0x40) = CONST 
0x4a8: v4a8 = MLOAD v4a6(0x40)
0x4ab: v4ab = SUB v4a2 v4a8
0x4ad: LOG3 v4a8 v4ab v477(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v476 v46c
0x4af: v4af(0x1) = CONST 
0x4b6: JUMP v1a1(0x158)
----------------------------------

Begin block 0x4b7
prev = {'0x1c9'}, next = {'0x1810x1bd'}
----------------------------------
Block 0x4b7
0x4b8: v4b8(0x1) = CONST 
0x4ba: v4ba = SLOAD v4b8(0x1)
0x4bc: JUMP v1cb(0x181)
----------------------------------

Begin block 0x4bd
prev = {'0x1de'}, next = {'0x1810x1d2'}
----------------------------------
Block 0x4bd
0x4be: v4be(0x1) = CONST 
0x4c0: v4c0(0xa0) = CONST 
0x4c2: v4c2(0x2) = CONST 
0x4c4: v4c4(0x10000000000000000000000000000000000000000) = EXP v4c2(0x2) v4c0(0xa0)
0x4c5: v4c5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4c4(0x10000000000000000000000000000000000000000) v4be(0x1)
0x4c6: v4c6 = AND v4c5(0xffffffffffffffffffffffffffffffffffffffff) v1ee
0x4c7: v4c7(0x0) = CONST 
0x4cb: MSTORE v4c7(0x0) v4c6
0x4cc: v4cc(0x5) = CONST 
0x4ce: v4ce(0x20) = CONST 
0x4d0: MSTORE v4ce(0x20) v4cc(0x5)
0x4d1: v4d1(0x40) = CONST 
0x4d4: v4d4 = SHA3 v4c7(0x0) v4d1(0x40)
0x4d5: v4d5 = SLOAD v4d4
0x4d7: JUMP v1e0(0x181)
----------------------------------

Begin block 0x4d8
prev = {}, next = {'0x515', '0x2d90x4d8'}
----------------------------------
function 0x4d8(v4d8arg0)
Block 0x4d8
0x4d9: v4d9(0x2) = CONST 
0x4dc: v4dc = SLOAD v4d9(0x2)
0x4dd: v4dd(0x40) = CONST 
0x4e0: v4e0 = MLOAD v4dd(0x40)
0x4e1: v4e1(0x20) = CONST 
0x4e3: v4e3(0x1) = CONST 
0x4e6: v4e6 = AND v4dc v4e3(0x1)
0x4e7: v4e7 = ISZERO v4e6
0x4e8: v4e8(0x100) = CONST 
0x4eb: v4eb = MUL v4e8(0x100) v4e7
0x4ec: v4ec(0x0) = CONST 
0x4ee: v4ee(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v4ec(0x0)
0x4ef: v4ef = ADD v4ee(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v4eb
0x4f2: v4f2 = AND v4dc v4ef
0x4f5: v4f5 = DIV v4f2 v4d9(0x2)
0x4f6: v4f6(0x1f) = CONST 
0x4f9: v4f9 = ADD v4f5 v4f6(0x1f)
0x4fc: v4fc = DIV v4f9 v4e1(0x20)
0x4fe: v4fe = MUL v4e1(0x20) v4fc
0x500: v500 = ADD v4e0 v4fe
0x502: v502 = ADD v4e1(0x20) v500
0x505: MSTORE v4dd(0x40) v502
0x508: MSTORE v4e0 v4f5
0x50c: v50c = ADD v4e0 v4e1(0x20)
0x510: v510 = ISZERO v4f5
0x511: v511(0x2d9) = CONST 
0x514: JUMPI v511(0x2d9) v510
----------------------------------

Begin block 0x515
prev = {'0x4d8'}, next = {'0x51d', '0x2ae0x4d8'}
----------------------------------
Block 0x515
0x516: v516(0x1f) = CONST 
0x518: v518 = LT v516(0x1f) v4f5
0x519: v519(0x2ae) = CONST 
0x51c: JUMPI v519(0x2ae) v518
----------------------------------

Begin block 0x51d
prev = {'0x515'}, next = {'0x2d90x4d8'}
----------------------------------
Block 0x51d
0x51d: v51d(0x100) = CONST 
0x522: v522 = SLOAD v4d9(0x2)
0x523: v523 = DIV v522 v51d(0x100)
0x524: v524 = MUL v523 v51d(0x100)
0x526: MSTORE v50c v524
0x528: v528(0x20) = CONST 
0x52a: v52a = ADD v528(0x20) v50c
0x52c: v52c(0x2d9) = CONST 
0x52f: JUMP v52c(0x2d9)
----------------------------------

Begin block 0x530
prev = {'0x214'}, next = {'0x54c', '0x548'}
----------------------------------
Block 0x530
0x531: v531 = CALLER 
0x532: v532(0x0) = CONST 
0x536: MSTORE v532(0x0) v531
0x537: v537(0x5) = CONST 
0x539: v539(0x20) = CONST 
0x53b: MSTORE v539(0x20) v537(0x5)
0x53c: v53c(0x40) = CONST 
0x53f: v53f = SHA3 v532(0x0) v53c(0x40)
0x540: v540 = SLOAD v53f
0x542: v542 = GT v227 v540
0x543: v543 = ISZERO v542
0x544: v544(0x54c) = CONST 
0x547: JUMPI v544(0x54c) v543
----------------------------------

Begin block 0x548
prev = {'0x530'}, next = {}
----------------------------------
Block 0x548
0x548: v548(0x0) = CONST 
0x54b: REVERT v548(0x0) v548(0x0)
----------------------------------

Begin block 0x54c
prev = {'0x530'}, next = {'0x55e', '0x562'}
----------------------------------
Block 0x54c
0x54d: v54d = CALLER 
0x54e: v54e(0x1) = CONST 
0x550: v550(0xa0) = CONST 
0x552: v552(0x2) = CONST 
0x554: v554(0x10000000000000000000000000000000000000000) = EXP v552(0x2) v550(0xa0)
0x555: v555(0xffffffffffffffffffffffffffffffffffffffff) = SUB v554(0x10000000000000000000000000000000000000000) v54e(0x1)
0x557: v557 = AND v224 v555(0xffffffffffffffffffffffffffffffffffffffff)
0x558: v558 = EQ v557 v54d
0x559: v559 = ISZERO v558
0x55a: v55a(0x562) = CONST 
0x55d: JUMPI v55a(0x562) v559
----------------------------------

Begin block 0x55e
prev = {'0x54c'}, next = {}
----------------------------------
Block 0x55e
0x55e: v55e(0x0) = CONST 
0x561: REVERT v55e(0x0) v55e(0x0)
----------------------------------

Begin block 0x562
prev = {'0x54c'}, next = {'0x57a', '0x57b'}
----------------------------------
Block 0x562
0x563: v563 = CALLER 
0x564: v564(0x0) = CONST 
0x568: MSTORE v564(0x0) v563
0x569: v569(0x5) = CONST 
0x56b: v56b(0x20) = CONST 
0x56d: MSTORE v56b(0x20) v569(0x5)
0x56e: v56e(0x40) = CONST 
0x571: v571 = SHA3 v564(0x0) v56e(0x40)
0x572: v572 = SLOAD v571
0x574: v574 = GT v227 v572
0x575: v575 = ISZERO v574
0x576: v576(0x57b) = CONST 
0x579: JUMPI v576(0x57b) v575
----------------------------------

Begin block 0x57a
prev = {'0x562'}, next = {}
----------------------------------
Block 0x57a
0x57a: THROW 
----------------------------------

Begin block 0x57b
prev = {'0x562'}, next = {'0x5b0', '0x5b1'}
----------------------------------
Block 0x57b
0x57c: v57c = CALLER 
0x57d: v57d(0x0) = CONST 
0x581: MSTORE v57d(0x0) v57c
0x582: v582(0x5) = CONST 
0x584: v584(0x20) = CONST 
0x586: MSTORE v584(0x20) v582(0x5)
0x587: v587(0x40) = CONST 
0x58b: v58b = SHA3 v57d(0x0) v587(0x40)
0x58d: v58d = SLOAD v58b
0x590: v590 = SUB v58d v227
0x592: SSTORE v58b v590
0x593: v593(0x1) = CONST 
0x595: v595(0xa0) = CONST 
0x597: v597(0x2) = CONST 
0x599: v599(0x10000000000000000000000000000000000000000) = EXP v597(0x2) v595(0xa0)
0x59a: v59a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v599(0x10000000000000000000000000000000000000000) v593(0x1)
0x59c: v59c = AND v224 v59a(0xffffffffffffffffffffffffffffffffffffffff)
0x59e: MSTORE v57d(0x0) v59c
0x5a0: v5a0 = SHA3 v57d(0x0) v587(0x40)
0x5a2: v5a2 = SLOAD v5a0
0x5a4: v5a4 = ADD v227 v5a2
0x5a8: SSTORE v5a0 v5a4
0x5aa: v5aa = GT v227 v5a4
0x5ab: v5ab = ISZERO v5aa
0x5ac: v5ac(0x5b1) = CONST 
0x5af: JUMPI v5ac(0x5b1) v5ab
----------------------------------

Begin block 0x5b0
prev = {'0x57b'}, next = {}
----------------------------------
Block 0x5b0
0x5b0: THROW 
----------------------------------

Begin block 0x5b1
prev = {'0x57b'}, next = {'0x1580x208'}
----------------------------------
Block 0x5b1
0x5b2: v5b2(0x40) = CONST 
0x5b5: v5b5 = MLOAD v5b2(0x40)
0x5b8: MSTORE v5b5 v227
0x5ba: v5ba = MLOAD v5b2(0x40)
0x5bb: v5bb(0x1) = CONST 
0x5bd: v5bd(0xa0) = CONST 
0x5bf: v5bf(0x2) = CONST 
0x5c1: v5c1(0x10000000000000000000000000000000000000000) = EXP v5bf(0x2) v5bd(0xa0)
0x5c2: v5c2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5c1(0x10000000000000000000000000000000000000000) v5bb(0x1)
0x5c4: v5c4 = AND v224 v5c2(0xffffffffffffffffffffffffffffffffffffffff)
0x5c6: v5c6 = CALLER 
0x5c8: v5c8(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x5ec: v5ec = SUB v5b5 v5ba
0x5ed: v5ed(0x20) = CONST 
0x5ef: v5ef = ADD v5ed(0x20) v5ec
0x5f1: LOG3 v5ba v5ef v5c8(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v5c6 v5c4
0x5f3: v5f3(0x1) = CONST 
0x5f9: JUMP v216(0x158)
----------------------------------

Begin block 0x5fa
prev = {'0x238'}, next = {'0x1810x22c'}
----------------------------------
Block 0x5fa
0x5fb: v5fb(0x1) = CONST 
0x5fd: v5fd(0xa0) = CONST 
0x5ff: v5ff(0x2) = CONST 
0x601: v601(0x10000000000000000000000000000000000000000) = EXP v5ff(0x2) v5fd(0xa0)
0x602: v602(0xffffffffffffffffffffffffffffffffffffffff) = SUB v601(0x10000000000000000000000000000000000000000) v5fb(0x1)
0x605: v605 = AND v602(0xffffffffffffffffffffffffffffffffffffffff) v249
0x606: v606(0x0) = CONST 
0x60a: MSTORE v606(0x0) v605
0x60b: v60b(0x4) = CONST 
0x60d: v60d(0x20) = CONST 
0x611: MSTORE v60d(0x20) v60b(0x4)
0x612: v612(0x40) = CONST 
0x616: v616 = SHA3 v606(0x0) v612(0x40)
0x61a: v61a = AND v602(0xffffffffffffffffffffffffffffffffffffffff) v24e
0x61c: MSTORE v606(0x0) v61a
0x620: MSTORE v60d(0x20) v616
0x621: v621 = SHA3 v606(0x0) v612(0x40)
0x622: v622 = SLOAD v621
0x624: JUMP v23a(0x181)
----------------------------------

Begin block 0x665
prev = {'0x8d', '0x0'}, next = {}
----------------------------------
Block 0x665
0x666: v666(0x98) = CONST 
0x667: CALLPRIVATE v666(0x98)
----------------------------------

Begin block 0x668
prev = {'0xd'}, next = {}
----------------------------------
Block 0x668
0x669: v669(0xaa) = CONST 
0x66a: CALLPRIVATE v669(0xaa)
----------------------------------

Begin block 0x66b
prev = {'0x40'}, next = {}
----------------------------------
Block 0x66b
0x66c: v66c(0x134) = CONST 
0x66d: CALLPRIVATE v66c(0x134)
----------------------------------

Begin block 0x66e
prev = {'0x4b'}, next = {}
----------------------------------
Block 0x66e
0x66f: v66f(0x16c) = CONST 
0x670: CALLPRIVATE v66f(0x16c)
----------------------------------

Begin block 0x671
prev = {'0x56'}, next = {}
----------------------------------
Block 0x671
0x672: v672(0x193) = CONST 
0x673: CALLPRIVATE v672(0x193)
----------------------------------

Begin block 0x674
prev = {'0x61'}, next = {}
----------------------------------
Block 0x674
0x675: v675(0x1bd) = CONST 
0x676: CALLPRIVATE v675(0x1bd)
----------------------------------

Begin block 0x677
prev = {'0x6c'}, next = {}
----------------------------------
Block 0x677
0x678: v678(0x1d2) = CONST 
0x679: CALLPRIVATE v678(0x1d2)
----------------------------------

Begin block 0x67a
prev = {'0x77'}, next = {}
----------------------------------
Block 0x67a
0x67b: v67b(0x1f3) = CONST 
0x67c: CALLPRIVATE v67b(0x1f3)
----------------------------------

Begin block 0x67d
prev = {'0x82'}, next = {}
----------------------------------
Block 0x67d
0x67e: v67e(0x208) = CONST 
0x67f: CALLPRIVATE v67e(0x208)
----------------------------------

Begin block 0x680
prev = {'0x8d'}, next = {}
----------------------------------
Block 0x680
0x681: v681(0x22c) = CONST 
0x682: CALLPRIVATE v681(0x22c)
----------------------------------
