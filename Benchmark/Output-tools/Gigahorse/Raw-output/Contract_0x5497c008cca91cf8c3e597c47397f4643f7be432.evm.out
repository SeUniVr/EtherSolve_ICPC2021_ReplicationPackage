
Begin block 0x0
prev = {}, next = {'0x994', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x97e: v97e(0x994) = CONST 
0x97f: JUMPI v97e(0x994) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x59', '0x1e'}
----------------------------------
Block 0xd
0xd: vd(0x0) = CONST 
0xf: vf = CALLDATALOAD vd(0x0)
0x10: v10(0xe0) = CONST 
0x12: v12 = SHR v10(0xe0) vf
0x14: v14(0x63961069) = CONST 
0x19: v19 = GT v14(0x63961069) v12
0x1a: v1a(0x59) = CONST 
0x1d: JUMPI v1a(0x59) v19
----------------------------------

Begin block 0x1e
prev = {'0xd'}, next = {'0x29', '0x9a6'}
----------------------------------
Block 0x1e
0x1f: v1f(0x63961069) = CONST 
0x24: v24 = EQ v1f(0x63961069) v12
0x980: v980(0x9a6) = CONST 
0x981: JUMPI v980(0x9a6) v24
----------------------------------

Begin block 0x29
prev = {'0x1e'}, next = {'0x34', '0x9a9'}
----------------------------------
Block 0x29
0x2a: v2a(0x8da5cb5b) = CONST 
0x2f: v2f = EQ v2a(0x8da5cb5b) v12
0x982: v982(0x9a9) = CONST 
0x983: JUMPI v982(0x9a9) v2f
----------------------------------

Begin block 0x34
prev = {'0x29'}, next = {'0x3f', '0x9ac'}
----------------------------------
Block 0x34
0x35: v35(0x8f4ffcb1) = CONST 
0x3a: v3a = EQ v35(0x8f4ffcb1) v12
0x984: v984(0x9ac) = CONST 
0x985: JUMPI v984(0x9ac) v3a
----------------------------------

Begin block 0x3f
prev = {'0x34'}, next = {'0x4a', '0x9af'}
----------------------------------
Block 0x3f
0x40: v40(0x9d76ea58) = CONST 
0x45: v45 = EQ v40(0x9d76ea58) v12
0x986: v986(0x9af) = CONST 
0x987: JUMPI v986(0x9af) v45
----------------------------------

Begin block 0x4a
prev = {'0x3f'}, next = {'0x55', '0x9b2'}
----------------------------------
Block 0x4a
0x4b: v4b(0xf2fde38b) = CONST 
0x50: v50 = EQ v4b(0xf2fde38b) v12
0x988: v988(0x9b2) = CONST 
0x989: JUMPI v988(0x9b2) v50
----------------------------------

Begin block 0x55
prev = {'0x4a'}, next = {'0x910x0'}
----------------------------------
Block 0x55
0x55: v55(0x91) = CONST 
0x58: JUMP v55(0x91)
----------------------------------

Begin block 0x59
prev = {'0xd'}, next = {'0x65', '0x997'}
----------------------------------
Block 0x59
0x5b: v5b(0x9c5eabe) = CONST 
0x60: v60 = EQ v5b(0x9c5eabe) v12
0x98a: v98a(0x997) = CONST 
0x98b: JUMPI v98a(0x997) v60
----------------------------------

Begin block 0x65
prev = {'0x59'}, next = {'0x99a', '0x70'}
----------------------------------
Block 0x65
0x66: v66(0x158ef93e) = CONST 
0x6b: v6b = EQ v66(0x158ef93e) v12
0x98c: v98c(0x99a) = CONST 
0x98d: JUMPI v98c(0x99a) v6b
----------------------------------

Begin block 0x70
prev = {'0x65'}, next = {'0x99d', '0x7b'}
----------------------------------
Block 0x70
0x71: v71(0x19ab453c) = CONST 
0x76: v76 = EQ v71(0x19ab453c) v12
0x98e: v98e(0x99d) = CONST 
0x98f: JUMPI v98e(0x99d) v76
----------------------------------

Begin block 0x7b
prev = {'0x70'}, next = {'0x86', '0x9a0'}
----------------------------------
Block 0x7b
0x7c: v7c(0x315a095d) = CONST 
0x81: v81 = EQ v7c(0x315a095d) v12
0x990: v990(0x9a0) = CONST 
0x991: JUMPI v990(0x9a0) v81
----------------------------------

Begin block 0x86
prev = {'0x7b'}, next = {'0x9a3', '0x994'}
----------------------------------
Block 0x86
0x87: v87(0x3bed33ce) = CONST 
0x8c: v8c = EQ v87(0x3bed33ce) v12
0x992: v992(0x9a3) = CONST 
0x993: JUMPI v992(0x9a3) v8c
----------------------------------

Begin block 0x91
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x91
0x92: v92(0x40) = CONST 
0x95: v95 = MLOAD v92(0x40)
0x96: v96 = CALLER 
0x98: MSTORE v95 v96
0x99: v99 = CALLVALUE 
0x9a: v9a(0x20) = CONST 
0x9d: v9d = ADD v95 v9a(0x20)
0x9e: MSTORE v9d v99
0xa0: va0 = MLOAD v92(0x40)
0xa1: va1(0xa398b89ba344a0b23a0b9de53db298b2a1a868b396c1878b7e9dcbafecd49b13) = CONST 
0xc6: vc6 = SUB v95 va0
0xc9: vc9 = ADD v92(0x40) vc6
0xcb: LOG1 va0 vc9 va1(0xa398b89ba344a0b23a0b9de53db298b2a1a868b396c1878b7e9dcbafecd49b13)
0xcc: STOP 
----------------------------------

Begin block 0x910x0
prev = {'0x55', '0x994'}, next = {}
----------------------------------
Block 0x910x0
0x920x0: v092(0x40) = CONST 
0x950x0: v095 = MLOAD v092(0x40)
0x960x0: v096 = CALLER 
0x980x0: MSTORE v095 v096
0x990x0: v099 = CALLVALUE 
0x9a0x0: v09a(0x20) = CONST 
0x9d0x0: v09d = ADD v095 v09a(0x20)
0x9e0x0: MSTORE v09d v099
0xa00x0: v0a0 = MLOAD v092(0x40)
0xa10x0: v0a1(0xa398b89ba344a0b23a0b9de53db298b2a1a868b396c1878b7e9dcbafecd49b13) = CONST 
0xc60x0: v0c6 = SUB v095 v0a0
0xc90x0: v0c9 = ADD v092(0x40) v0c6
0xcb0x0: LOG1 v0a0 v0c9 v0a1(0xa398b89ba344a0b23a0b9de53db298b2a1a868b396c1878b7e9dcbafecd49b13)
0xcc0x0: STOP 
----------------------------------

Begin block 0xcd
prev = {}, next = {'0xd5', '0xd9'}
----------------------------------
function 0x09c5eabe()
Block 0xcd
0xce: vce = CALLVALUE 
0xd0: vd0 = ISZERO vce
0xd1: vd1(0xd9) = CONST 
0xd4: JUMPI vd1(0xd9) vd0
----------------------------------

Begin block 0xd5
prev = {'0xcd'}, next = {}
----------------------------------
Block 0xd5
0xd5: vd5(0x0) = CONST 
0xd8: REVERT vd5(0x0) vd5(0x0)
----------------------------------

Begin block 0xd9
prev = {'0xcd'}, next = {'0xec', '0xf0'}
----------------------------------
Block 0xd9
0xdb: vdb(0x180) = CONST 
0xde: vde(0x4) = CONST 
0xe1: ve1 = CALLDATASIZE 
0xe2: ve2 = SUB ve1 vde(0x4)
0xe3: ve3(0x20) = CONST 
0xe6: ve6 = LT ve2 ve3(0x20)
0xe7: ve7 = ISZERO ve6
0xe8: ve8(0xf0) = CONST 
0xeb: JUMPI ve8(0xf0) ve7
----------------------------------

Begin block 0xec
prev = {'0xd9'}, next = {}
----------------------------------
Block 0xec
0xec: vec(0x0) = CONST 
0xef: REVERT vec(0x0) vec(0x0)
----------------------------------

Begin block 0xf0
prev = {'0xd9'}, next = {'0x10b', '0x107'}
----------------------------------
Block 0xf0
0xf2: vf2 = ADD vde(0x4) ve2
0xf4: vf4(0x20) = CONST 
0xf7: vf7 = ADD vde(0x4) vf4(0x20)
0xf9: vf9 = CALLDATALOAD vde(0x4)
0xfa: vfa(0x100000000) = CONST 
0x101: v101 = GT vf9 vfa(0x100000000)
0x102: v102 = ISZERO v101
0x103: v103(0x10b) = CONST 
0x106: JUMPI v103(0x10b) v102
----------------------------------

Begin block 0x107
prev = {'0xf0'}, next = {}
----------------------------------
Block 0x107
0x107: v107(0x0) = CONST 
0x10a: REVERT v107(0x0) v107(0x0)
----------------------------------

Begin block 0x10b
prev = {'0xf0'}, next = {'0x11d', '0x119'}
----------------------------------
Block 0x10b
0x10d: v10d = ADD vde(0x4) vf9
0x10f: v10f(0x20) = CONST 
0x112: v112 = ADD v10d v10f(0x20)
0x113: v113 = GT v112 vf2
0x114: v114 = ISZERO v113
0x115: v115(0x11d) = CONST 
0x118: JUMPI v115(0x11d) v114
----------------------------------

Begin block 0x119
prev = {'0x10b'}, next = {}
----------------------------------
Block 0x119
0x119: v119(0x0) = CONST 
0x11c: REVERT v119(0x0) v119(0x0)
----------------------------------

Begin block 0x11d
prev = {'0x10b'}, next = {'0x13b', '0x13f'}
----------------------------------
Block 0x11d
0x11f: v11f = CALLDATALOAD v10d
0x121: v121(0x20) = CONST 
0x123: v123 = ADD v121(0x20) v10d
0x126: v126(0x1) = CONST 
0x129: v129 = MUL v11f v126(0x1)
0x12b: v12b = ADD v123 v129
0x12c: v12c = GT v12b vf2
0x12d: v12d(0x100000000) = CONST 
0x134: v134 = GT v11f v12d(0x100000000)
0x135: v135 = OR v134 v12c
0x136: v136 = ISZERO v135
0x137: v137(0x13f) = CONST 
0x13a: JUMPI v137(0x13f) v136
----------------------------------

Begin block 0x13b
prev = {'0x11d'}, next = {}
----------------------------------
Block 0x13b
0x13b: v13b(0x0) = CONST 
0x13e: REVERT v13b(0x0) v13b(0x0)
----------------------------------

Begin block 0x13f
prev = {'0x11d'}, next = {'0x3b6'}
----------------------------------
Block 0x13f
0x144: v144(0x1f) = CONST 
0x146: v146 = ADD v144(0x1f) v11f
0x147: v147(0x20) = CONST 
0x14b: v14b = DIV v146 v147(0x20)
0x14c: v14c = MUL v14b v147(0x20)
0x14d: v14d(0x20) = CONST 
0x14f: v14f = ADD v14d(0x20) v14c
0x150: v150(0x40) = CONST 
0x152: v152 = MLOAD v150(0x40)
0x155: v155 = ADD v152 v14f
0x156: v156(0x40) = CONST 
0x158: MSTORE v156(0x40) v155
0x160: MSTORE v152 v11f
0x161: v161(0x20) = CONST 
0x163: v163 = ADD v161(0x20) v152
0x169: CALLDATACOPY v163 v123 v11f
0x16a: v16a(0x0) = CONST 
0x16d: v16d = ADD v163 v11f
0x171: MSTORE v16d v16a(0x0)
0x176: v176(0x3b6) = CONST 
0x17f: JUMP v176(0x3b6)
----------------------------------

Begin block 0x1800xcd
prev = {'0x496'}, next = {}
----------------------------------
Block 0x1800xcd
0x1810xcd: STOP 
----------------------------------

Begin block 0x1800x1ab
prev = {'0x4d8'}, next = {}
----------------------------------
Block 0x1800x1ab
0x1810x1ab: STOP 
----------------------------------

Begin block 0x1800x1de
prev = {'0x5d9'}, next = {}
----------------------------------
Block 0x1800x1de
0x1810x1de: STOP 
----------------------------------

Begin block 0x1800x208
prev = {'0x65d'}, next = {}
----------------------------------
Block 0x1800x208
0x1810x208: STOP 
----------------------------------

Begin block 0x1800x232
prev = {'0x72c'}, next = {}
----------------------------------
Block 0x1800x232
0x1810x232: STOP 
----------------------------------

Begin block 0x1800x29c
prev = {'0x8dc'}, next = {}
----------------------------------
Block 0x1800x29c
0x1810x29c: STOP 
----------------------------------

Begin block 0x1800x383
prev = {'0x92f'}, next = {}
----------------------------------
Block 0x1800x383
0x1810x383: STOP 
----------------------------------

Begin block 0x182
prev = {}, next = {'0x18e', '0x18a'}
----------------------------------
function initialized()()
Block 0x182
0x183: v183 = CALLVALUE 
0x185: v185 = ISZERO v183
0x186: v186(0x18e) = CONST 
0x189: JUMPI v186(0x18e) v185
----------------------------------

Begin block 0x18a
prev = {'0x182'}, next = {}
----------------------------------
Block 0x18a
0x18a: v18a(0x0) = CONST 
0x18d: REVERT v18a(0x0) v18a(0x0)
----------------------------------

Begin block 0x18e
prev = {'0x182'}, next = {'0x49a'}
----------------------------------
Block 0x18e
0x190: v190(0x197) = CONST 
0x193: v193(0x49a) = CONST 
0x196: JUMP v193(0x49a)
----------------------------------

Begin block 0x197
prev = {'0x49a'}, next = {}
----------------------------------
Block 0x197
0x198: v198(0x40) = CONST 
0x19b: v19b = MLOAD v198(0x40)
0x19d: v19d = ISZERO v4a7
0x19e: v19e = ISZERO v19d
0x1a0: MSTORE v19b v19e
0x1a1: v1a1 = MLOAD v198(0x40)
0x1a5: v1a5 = SUB v19b v1a1
0x1a6: v1a6(0x20) = CONST 
0x1a8: v1a8 = ADD v1a6(0x20) v1a5
0x1aa: RETURN v1a1 v1a8
----------------------------------

Begin block 0x1ab
prev = {}, next = {'0x1b3', '0x1b7'}
----------------------------------
function init(address)()
Block 0x1ab
0x1ac: v1ac = CALLVALUE 
0x1ae: v1ae = ISZERO v1ac
0x1af: v1af(0x1b7) = CONST 
0x1b2: JUMPI v1af(0x1b7) v1ae
----------------------------------

Begin block 0x1b3
prev = {'0x1ab'}, next = {}
----------------------------------
Block 0x1b3
0x1b3: v1b3(0x0) = CONST 
0x1b6: REVERT v1b3(0x0) v1b3(0x0)
----------------------------------

Begin block 0x1b7
prev = {'0x1ab'}, next = {'0x1ca', '0x1ce'}
----------------------------------
Block 0x1b7
0x1b9: v1b9(0x180) = CONST 
0x1bc: v1bc(0x4) = CONST 
0x1bf: v1bf = CALLDATASIZE 
0x1c0: v1c0 = SUB v1bf v1bc(0x4)
0x1c1: v1c1(0x20) = CONST 
0x1c4: v1c4 = LT v1c0 v1c1(0x20)
0x1c5: v1c5 = ISZERO v1c4
0x1c6: v1c6(0x1ce) = CONST 
0x1c9: JUMPI v1c6(0x1ce) v1c5
----------------------------------

Begin block 0x1ca
prev = {'0x1b7'}, next = {}
----------------------------------
Block 0x1ca
0x1ca: v1ca(0x0) = CONST 
0x1cd: REVERT v1ca(0x0) v1ca(0x0)
----------------------------------

Begin block 0x1ce
prev = {'0x1b7'}, next = {'0x4aa'}
----------------------------------
Block 0x1ce
0x1d0: v1d0 = CALLDATALOAD v1bc(0x4)
0x1d1: v1d1(0x1) = CONST 
0x1d3: v1d3(0x1) = CONST 
0x1d5: v1d5(0xa0) = CONST 
0x1d7: v1d7(0x10000000000000000000000000000000000000000) = SHL v1d5(0xa0) v1d3(0x1)
0x1d8: v1d8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1d7(0x10000000000000000000000000000000000000000) v1d1(0x1)
0x1d9: v1d9 = AND v1d8(0xffffffffffffffffffffffffffffffffffffffff) v1d0
0x1da: v1da(0x4aa) = CONST 
0x1dd: JUMP v1da(0x4aa)
----------------------------------

Begin block 0x1de
prev = {}, next = {'0x1e6', '0x1ea'}
----------------------------------
function withdrawTokens(uint256)()
Block 0x1de
0x1df: v1df = CALLVALUE 
0x1e1: v1e1 = ISZERO v1df
0x1e2: v1e2(0x1ea) = CONST 
0x1e5: JUMPI v1e2(0x1ea) v1e1
----------------------------------

Begin block 0x1e6
prev = {'0x1de'}, next = {}
----------------------------------
Block 0x1e6
0x1e6: v1e6(0x0) = CONST 
0x1e9: REVERT v1e6(0x0) v1e6(0x0)
----------------------------------

Begin block 0x1ea
prev = {'0x1de'}, next = {'0x201', '0x1fd'}
----------------------------------
Block 0x1ea
0x1ec: v1ec(0x180) = CONST 
0x1ef: v1ef(0x4) = CONST 
0x1f2: v1f2 = CALLDATASIZE 
0x1f3: v1f3 = SUB v1f2 v1ef(0x4)
0x1f4: v1f4(0x20) = CONST 
0x1f7: v1f7 = LT v1f3 v1f4(0x20)
0x1f8: v1f8 = ISZERO v1f7
0x1f9: v1f9(0x201) = CONST 
0x1fc: JUMPI v1f9(0x201) v1f8
----------------------------------

Begin block 0x1fd
prev = {'0x1ea'}, next = {}
----------------------------------
Block 0x1fd
0x1fd: v1fd(0x0) = CONST 
0x200: REVERT v1fd(0x0) v1fd(0x0)
----------------------------------

Begin block 0x201
prev = {'0x1ea'}, next = {'0x52e'}
----------------------------------
Block 0x201
0x203: v203 = CALLDATALOAD v1ef(0x4)
0x204: v204(0x52e) = CONST 
0x207: JUMP v204(0x52e)
----------------------------------

Begin block 0x208
prev = {}, next = {'0x214', '0x210'}
----------------------------------
function withdrawEther(uint256)()
Block 0x208
0x209: v209 = CALLVALUE 
0x20b: v20b = ISZERO v209
0x20c: v20c(0x214) = CONST 
0x20f: JUMPI v20c(0x214) v20b
----------------------------------

Begin block 0x210
prev = {'0x208'}, next = {}
----------------------------------
Block 0x210
0x210: v210(0x0) = CONST 
0x213: REVERT v210(0x0) v210(0x0)
----------------------------------

Begin block 0x214
prev = {'0x208'}, next = {'0x227', '0x22b'}
----------------------------------
Block 0x214
0x216: v216(0x180) = CONST 
0x219: v219(0x4) = CONST 
0x21c: v21c = CALLDATASIZE 
0x21d: v21d = SUB v21c v219(0x4)
0x21e: v21e(0x20) = CONST 
0x221: v221 = LT v21d v21e(0x20)
0x222: v222 = ISZERO v221
0x223: v223(0x22b) = CONST 
0x226: JUMPI v223(0x22b) v222
----------------------------------

Begin block 0x227
prev = {'0x214'}, next = {}
----------------------------------
Block 0x227
0x227: v227(0x0) = CONST 
0x22a: REVERT v227(0x0) v227(0x0)
----------------------------------

Begin block 0x22b
prev = {'0x214'}, next = {'0x619'}
----------------------------------
Block 0x22b
0x22d: v22d = CALLDATALOAD v219(0x4)
0x22e: v22e(0x619) = CONST 
0x231: JUMP v22e(0x619)
----------------------------------

Begin block 0x232
prev = {}, next = {'0x23a', '0x23e'}
----------------------------------
function 0x63961069()
Block 0x232
0x233: v233 = CALLVALUE 
0x235: v235 = ISZERO v233
0x236: v236(0x23e) = CONST 
0x239: JUMPI v236(0x23e) v235
----------------------------------

Begin block 0x23a
prev = {'0x232'}, next = {}
----------------------------------
Block 0x23a
0x23a: v23a(0x0) = CONST 
0x23d: REVERT v23a(0x0) v23a(0x0)
----------------------------------

Begin block 0x23e
prev = {'0x232'}, next = {'0x255', '0x251'}
----------------------------------
Block 0x23e
0x240: v240(0x180) = CONST 
0x243: v243(0x4) = CONST 
0x246: v246 = CALLDATASIZE 
0x247: v247 = SUB v246 v243(0x4)
0x248: v248(0x40) = CONST 
0x24b: v24b = LT v247 v248(0x40)
0x24c: v24c = ISZERO v24b
0x24d: v24d(0x255) = CONST 
0x250: JUMPI v24d(0x255) v24c
----------------------------------

Begin block 0x251
prev = {'0x23e'}, next = {}
----------------------------------
Block 0x251
0x251: v251(0x0) = CONST 
0x254: REVERT v251(0x0) v251(0x0)
----------------------------------

Begin block 0x255
prev = {'0x23e'}, next = {'0x69c'}
----------------------------------
Block 0x255
0x257: v257(0x1) = CONST 
0x259: v259(0x1) = CONST 
0x25b: v25b(0xa0) = CONST 
0x25d: v25d(0x10000000000000000000000000000000000000000) = SHL v25b(0xa0) v259(0x1)
0x25e: v25e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v25d(0x10000000000000000000000000000000000000000) v257(0x1)
0x260: v260 = CALLDATALOAD v243(0x4)
0x261: v261 = AND v260 v25e(0xffffffffffffffffffffffffffffffffffffffff)
0x263: v263(0x20) = CONST 
0x265: v265 = ADD v263(0x20) v243(0x4)
0x266: v266 = CALLDATALOAD v265
0x267: v267(0x69c) = CONST 
0x26a: JUMP v267(0x69c)
----------------------------------

Begin block 0x26b
prev = {}, next = {'0x277', '0x273'}
----------------------------------
function owner()()
Block 0x26b
0x26c: v26c = CALLVALUE 
0x26e: v26e = ISZERO v26c
0x26f: v26f(0x277) = CONST 
0x272: JUMPI v26f(0x277) v26e
----------------------------------

Begin block 0x273
prev = {'0x26b'}, next = {}
----------------------------------
Block 0x273
0x273: v273(0x0) = CONST 
0x276: REVERT v273(0x0) v273(0x0)
----------------------------------

Begin block 0x277
prev = {'0x26b'}, next = {'0x77a'}
----------------------------------
Block 0x277
0x279: v279(0x280) = CONST 
0x27c: v27c(0x77a) = CONST 
0x27f: JUMP v27c(0x77a)
----------------------------------

Begin block 0x2800x26b
prev = {'0x77a'}, next = {}
----------------------------------
Block 0x2800x26b
0x2810x26b: v26b281(0x40) = CONST 
0x2840x26b: v26b284 = MLOAD v26b281(0x40)
0x2850x26b: v26b285(0x1) = CONST 
0x2870x26b: v26b287(0x1) = CONST 
0x2890x26b: v26b289(0xa0) = CONST 
0x28b0x26b: v26b28b(0x10000000000000000000000000000000000000000) = SHL v26b289(0xa0) v26b287(0x1)
0x28c0x26b: v26b28c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v26b28b(0x10000000000000000000000000000000000000000) v26b285(0x1)
0x28f0x26b: v26b28f = AND v786 v26b28c(0xffffffffffffffffffffffffffffffffffffffff)
0x2910x26b: MSTORE v26b284 v26b28f
0x2920x26b: v26b292 = MLOAD v26b281(0x40)
0x2960x26b: v26b296 = SUB v26b284 v26b292
0x2970x26b: v26b297(0x20) = CONST 
0x2990x26b: v26b299 = ADD v26b297(0x20) v26b296
0x29b0x26b: RETURN v26b292 v26b299
----------------------------------

Begin block 0x2800x36e
prev = {'0x8f3'}, next = {}
----------------------------------
Block 0x2800x36e
0x2810x36e: v36e281(0x40) = CONST 
0x2840x36e: v36e284 = MLOAD v36e281(0x40)
0x2850x36e: v36e285(0x1) = CONST 
0x2870x36e: v36e287(0x1) = CONST 
0x2890x36e: v36e289(0xa0) = CONST 
0x28b0x36e: v36e28b(0x10000000000000000000000000000000000000000) = SHL v36e289(0xa0) v36e287(0x1)
0x28c0x36e: v36e28c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v36e28b(0x10000000000000000000000000000000000000000) v36e285(0x1)
0x28f0x36e: v36e28f = AND v8ff v36e28c(0xffffffffffffffffffffffffffffffffffffffff)
0x2910x36e: MSTORE v36e284 v36e28f
0x2920x36e: v36e292 = MLOAD v36e281(0x40)
0x2960x36e: v36e296 = SUB v36e284 v36e292
0x2970x36e: v36e297(0x20) = CONST 
0x2990x36e: v36e299 = ADD v36e297(0x20) v36e296
0x29b0x36e: RETURN v36e292 v36e299
----------------------------------

Begin block 0x29c
prev = {}, next = {'0x2a4', '0x2a8'}
----------------------------------
function receiveApproval(address,uint256,address,bytes)()
Block 0x29c
0x29d: v29d = CALLVALUE 
0x29f: v29f = ISZERO v29d
0x2a0: v2a0(0x2a8) = CONST 
0x2a3: JUMPI v2a0(0x2a8) v29f
----------------------------------

Begin block 0x2a4
prev = {'0x29c'}, next = {}
----------------------------------
Block 0x2a4
0x2a4: v2a4(0x0) = CONST 
0x2a7: REVERT v2a4(0x0) v2a4(0x0)
----------------------------------

Begin block 0x2a8
prev = {'0x29c'}, next = {'0x2bb', '0x2bf'}
----------------------------------
Block 0x2a8
0x2aa: v2aa(0x180) = CONST 
0x2ad: v2ad(0x4) = CONST 
0x2b0: v2b0 = CALLDATASIZE 
0x2b1: v2b1 = SUB v2b0 v2ad(0x4)
0x2b2: v2b2(0x80) = CONST 
0x2b5: v2b5 = LT v2b1 v2b2(0x80)
0x2b6: v2b6 = ISZERO v2b5
0x2b7: v2b7(0x2bf) = CONST 
0x2ba: JUMPI v2b7(0x2bf) v2b6
----------------------------------

Begin block 0x2bb
prev = {'0x2a8'}, next = {}
----------------------------------
Block 0x2bb
0x2bb: v2bb(0x0) = CONST 
0x2be: REVERT v2bb(0x0) v2bb(0x0)
----------------------------------

Begin block 0x2bf
prev = {'0x2a8'}, next = {'0x2f9', '0x2f5'}
----------------------------------
Block 0x2bf
0x2c0: v2c0(0x1) = CONST 
0x2c2: v2c2(0x1) = CONST 
0x2c4: v2c4(0xa0) = CONST 
0x2c6: v2c6(0x10000000000000000000000000000000000000000) = SHL v2c4(0xa0) v2c2(0x1)
0x2c7: v2c7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2c6(0x10000000000000000000000000000000000000000) v2c0(0x1)
0x2c9: v2c9 = CALLDATALOAD v2ad(0x4)
0x2cb: v2cb = AND v2c7(0xffffffffffffffffffffffffffffffffffffffff) v2c9
0x2cd: v2cd(0x20) = CONST 
0x2d0: v2d0 = ADD v2ad(0x4) v2cd(0x20)
0x2d1: v2d1 = CALLDATALOAD v2d0
0x2d3: v2d3(0x40) = CONST 
0x2d6: v2d6 = ADD v2ad(0x4) v2d3(0x40)
0x2d7: v2d7 = CALLDATALOAD v2d6
0x2da: v2da = AND v2c7(0xffffffffffffffffffffffffffffffffffffffff) v2d7
0x2dd: v2dd = ADD v2ad(0x4) v2b1
0x2df: v2df(0x80) = CONST 
0x2e2: v2e2 = ADD v2ad(0x4) v2df(0x80)
0x2e3: v2e3(0x60) = CONST 
0x2e6: v2e6 = ADD v2ad(0x4) v2e3(0x60)
0x2e7: v2e7 = CALLDATALOAD v2e6
0x2e8: v2e8(0x100000000) = CONST 
0x2ef: v2ef = GT v2e7 v2e8(0x100000000)
0x2f0: v2f0 = ISZERO v2ef
0x2f1: v2f1(0x2f9) = CONST 
0x2f4: JUMPI v2f1(0x2f9) v2f0
----------------------------------

Begin block 0x2f5
prev = {'0x2bf'}, next = {}
----------------------------------
Block 0x2f5
0x2f5: v2f5(0x0) = CONST 
0x2f8: REVERT v2f5(0x0) v2f5(0x0)
----------------------------------

Begin block 0x2f9
prev = {'0x2bf'}, next = {'0x307', '0x30b'}
----------------------------------
Block 0x2f9
0x2fb: v2fb = ADD v2ad(0x4) v2e7
0x2fd: v2fd(0x20) = CONST 
0x300: v300 = ADD v2fb v2fd(0x20)
0x301: v301 = GT v300 v2dd
0x302: v302 = ISZERO v301
0x303: v303(0x30b) = CONST 
0x306: JUMPI v303(0x30b) v302
----------------------------------

Begin block 0x307
prev = {'0x2f9'}, next = {}
----------------------------------
Block 0x307
0x307: v307(0x0) = CONST 
0x30a: REVERT v307(0x0) v307(0x0)
----------------------------------

Begin block 0x30b
prev = {'0x2f9'}, next = {'0x32d', '0x329'}
----------------------------------
Block 0x30b
0x30d: v30d = CALLDATALOAD v2fb
0x30f: v30f(0x20) = CONST 
0x311: v311 = ADD v30f(0x20) v2fb
0x314: v314(0x1) = CONST 
0x317: v317 = MUL v30d v314(0x1)
0x319: v319 = ADD v311 v317
0x31a: v31a = GT v319 v2dd
0x31b: v31b(0x100000000) = CONST 
0x322: v322 = GT v30d v31b(0x100000000)
0x323: v323 = OR v322 v31a
0x324: v324 = ISZERO v323
0x325: v325(0x32d) = CONST 
0x328: JUMPI v325(0x32d) v324
----------------------------------

Begin block 0x329
prev = {'0x30b'}, next = {}
----------------------------------
Block 0x329
0x329: v329(0x0) = CONST 
0x32c: REVERT v329(0x0) v329(0x0)
----------------------------------

Begin block 0x32d
prev = {'0x30b'}, next = {'0x789'}
----------------------------------
Block 0x32d
0x332: v332(0x1f) = CONST 
0x334: v334 = ADD v332(0x1f) v30d
0x335: v335(0x20) = CONST 
0x339: v339 = DIV v334 v335(0x20)
0x33a: v33a = MUL v339 v335(0x20)
0x33b: v33b(0x20) = CONST 
0x33d: v33d = ADD v33b(0x20) v33a
0x33e: v33e(0x40) = CONST 
0x340: v340 = MLOAD v33e(0x40)
0x343: v343 = ADD v340 v33d
0x344: v344(0x40) = CONST 
0x346: MSTORE v344(0x40) v343
0x34e: MSTORE v340 v30d
0x34f: v34f(0x20) = CONST 
0x351: v351 = ADD v34f(0x20) v340
0x357: CALLDATACOPY v351 v311 v30d
0x358: v358(0x0) = CONST 
0x35b: v35b = ADD v351 v30d
0x35f: MSTORE v35b v358(0x0)
0x364: v364(0x789) = CONST 
0x36d: JUMP v364(0x789)
----------------------------------

Begin block 0x36e
prev = {}, next = {'0x37a', '0x376'}
----------------------------------
function tokenAddress()()
Block 0x36e
0x36f: v36f = CALLVALUE 
0x371: v371 = ISZERO v36f
0x372: v372(0x37a) = CONST 
0x375: JUMPI v372(0x37a) v371
----------------------------------

Begin block 0x376
prev = {'0x36e'}, next = {}
----------------------------------
Block 0x376
0x376: v376(0x0) = CONST 
0x379: REVERT v376(0x0) v376(0x0)
----------------------------------

Begin block 0x37a
prev = {'0x36e'}, next = {'0x8f3'}
----------------------------------
Block 0x37a
0x37c: v37c(0x280) = CONST 
0x37f: v37f(0x8f3) = CONST 
0x382: JUMP v37f(0x8f3)
----------------------------------

Begin block 0x383
prev = {}, next = {'0x38b', '0x38f'}
----------------------------------
function transferOwnership(address)()
Block 0x383
0x384: v384 = CALLVALUE 
0x386: v386 = ISZERO v384
0x387: v387(0x38f) = CONST 
0x38a: JUMPI v387(0x38f) v386
----------------------------------

Begin block 0x38b
prev = {'0x383'}, next = {}
----------------------------------
Block 0x38b
0x38b: v38b(0x0) = CONST 
0x38e: REVERT v38b(0x0) v38b(0x0)
----------------------------------

Begin block 0x38f
prev = {'0x383'}, next = {'0x3a6', '0x3a2'}
----------------------------------
Block 0x38f
0x391: v391(0x180) = CONST 
0x394: v394(0x4) = CONST 
0x397: v397 = CALLDATASIZE 
0x398: v398 = SUB v397 v394(0x4)
0x399: v399(0x20) = CONST 
0x39c: v39c = LT v398 v399(0x20)
0x39d: v39d = ISZERO v39c
0x39e: v39e(0x3a6) = CONST 
0x3a1: JUMPI v39e(0x3a6) v39d
----------------------------------

Begin block 0x3a2
prev = {'0x38f'}, next = {}
----------------------------------
Block 0x3a2
0x3a2: v3a2(0x0) = CONST 
0x3a5: REVERT v3a2(0x0) v3a2(0x0)
----------------------------------

Begin block 0x3a6
prev = {'0x38f'}, next = {'0x902'}
----------------------------------
Block 0x3a6
0x3a8: v3a8 = CALLDATALOAD v394(0x4)
0x3a9: v3a9(0x1) = CONST 
0x3ab: v3ab(0x1) = CONST 
0x3ad: v3ad(0xa0) = CONST 
0x3af: v3af(0x10000000000000000000000000000000000000000) = SHL v3ad(0xa0) v3ab(0x1)
0x3b0: v3b0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3af(0x10000000000000000000000000000000000000000) v3a9(0x1)
0x3b1: v3b1 = AND v3b0(0xffffffffffffffffffffffffffffffffffffffff) v3a8
0x3b2: v3b2(0x902) = CONST 
0x3b5: JUMP v3b2(0x902)
----------------------------------

Begin block 0x3b6
prev = {'0x13f'}, next = {'0x3cd', '0x3c9'}
----------------------------------
Block 0x3b6
0x3b7: v3b7(0x0) = CONST 
0x3b9: v3b9 = SLOAD v3b7(0x0)
0x3ba: v3ba(0x1) = CONST 
0x3bc: v3bc(0x1) = CONST 
0x3be: v3be(0xa0) = CONST 
0x3c0: v3c0(0x10000000000000000000000000000000000000000) = SHL v3be(0xa0) v3bc(0x1)
0x3c1: v3c1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3c0(0x10000000000000000000000000000000000000000) v3ba(0x1)
0x3c2: v3c2 = AND v3c1(0xffffffffffffffffffffffffffffffffffffffff) v3b9
0x3c3: v3c3 = CALLER 
0x3c4: v3c4 = EQ v3c3 v3c2
0x3c5: v3c5(0x3cd) = CONST 
0x3c8: JUMPI v3c5(0x3cd) v3c4
----------------------------------

Begin block 0x3c9
prev = {'0x3b6'}, next = {}
----------------------------------
Block 0x3c9
0x3c9: v3c9(0x0) = CONST 
0x3cc: REVERT v3c9(0x0) v3c9(0x0)
----------------------------------

Begin block 0x3cd
prev = {'0x3b6'}, next = {'0x3df', '0x3e3'}
----------------------------------
Block 0x3cd
0x3ce: v3ce(0x1) = CONST 
0x3d0: v3d0 = SLOAD v3ce(0x1)
0x3d1: v3d1(0x1) = CONST 
0x3d3: v3d3(0xa0) = CONST 
0x3d5: v3d5(0x10000000000000000000000000000000000000000) = SHL v3d3(0xa0) v3d1(0x1)
0x3d7: v3d7 = DIV v3d0 v3d5(0x10000000000000000000000000000000000000000)
0x3d8: v3d8(0xff) = CONST 
0x3da: v3da = AND v3d8(0xff) v3d7
0x3db: v3db(0x3e3) = CONST 
0x3de: JUMPI v3db(0x3e3) v3da
----------------------------------

Begin block 0x3df
prev = {'0x3cd'}, next = {}
----------------------------------
Block 0x3df
0x3df: v3df(0x0) = CONST 
0x3e2: REVERT v3df(0x0) v3df(0x0)
----------------------------------

Begin block 0x3e3
prev = {'0x3cd'}, next = {'0x402'}
----------------------------------
Block 0x3e3
0x3e4: v3e4(0x0) = CONST 
0x3e6: v3e6 = CALLER 
0x3e7: v3e7(0x1) = CONST 
0x3e9: v3e9(0x1) = CONST 
0x3eb: v3eb(0xa0) = CONST 
0x3ed: v3ed(0x10000000000000000000000000000000000000000) = SHL v3eb(0xa0) v3e9(0x1)
0x3ee: v3ee(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3ed(0x10000000000000000000000000000000000000000) v3e7(0x1)
0x3ef: v3ef = AND v3ee(0xffffffffffffffffffffffffffffffffffffffff) v3e6
0x3f0: v3f0(0x0) = CONST 
0x3f3: v3f3(0x40) = CONST 
0x3f5: v3f5 = MLOAD v3f3(0x40)
0x3f9: v3f9 = MLOAD v152
0x3fb: v3fb(0x20) = CONST 
0x3fd: v3fd = ADD v3fb(0x20) v152
----------------------------------

Begin block 0x402
prev = {'0x3e3', '0x40b'}, next = {'0x40b', '0x421'}
----------------------------------
Block 0x402
0x402_0x2: v402_2 = PHI v3f9 v414
0x403: v403(0x20) = CONST 
0x406: v406 = LT v402_2 v403(0x20)
0x407: v407(0x421) = CONST 
0x40a: JUMPI v407(0x421) v406
----------------------------------

Begin block 0x40b
prev = {'0x402'}, next = {'0x402'}
----------------------------------
Block 0x40b
0x40b_0x0: v40b_0 = PHI v3fd v41c
0x40b_0x1: v40b_1 = PHI v3f5 v41a
0x40b_0x2: v40b_2 = PHI v3f9 v414
0x40c: v40c = MLOAD v40b_0
0x40e: MSTORE v40b_1 v40c
0x40f: v40f(0x1f) = CONST 
0x411: v411(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v40f(0x1f)
0x414: v414 = ADD v40b_2 v411(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
0x416: v416(0x20) = CONST 
0x41a: v41a = ADD v416(0x20) v40b_1
0x41c: v41c = ADD v416(0x20) v40b_0
0x41d: v41d(0x402) = CONST 
0x420: JUMP v41d(0x402)
----------------------------------

Begin block 0x421
prev = {'0x402'}, next = {'0x462', '0x483'}
----------------------------------
Block 0x421
0x421_0x0: v421_0 = PHI v3fd v41c
0x421_0x1: v421_1 = PHI v3f5 v41a
0x421_0x2: v421_2 = PHI v3f9 v414
0x422: v422(0x1) = CONST 
0x425: v425(0x20) = CONST 
0x427: v427 = SUB v425(0x20) v421_2
0x428: v428(0x100) = CONST 
0x42b: v42b = EXP v428(0x100) v427
0x42c: v42c = SUB v42b v422(0x1)
0x42e: v42e = NOT v42c
0x430: v430 = MLOAD v421_0
0x431: v431 = AND v430 v42e
0x434: v434 = MLOAD v421_1
0x435: v435 = AND v434 v42c
0x438: v438 = OR v431 v435
0x43a: MSTORE v421_1 v438
0x443: v443 = ADD v3f9 v3f5
0x447: v447(0x0) = CONST 
0x449: v449(0x40) = CONST 
0x44b: v44b = MLOAD v449(0x40)
0x44e: v44e = SUB v443 v44b
0x452: v452 = GAS 
0x453: v453 = CALL v452 v3ef v3f0(0x0) v44b v44e v44b v447(0x0)
0x458: v458 = RETURNDATASIZE 
0x45a: v45a(0x0) = CONST 
0x45d: v45d = EQ v458 v45a(0x0)
0x45e: v45e(0x483) = CONST 
0x461: JUMPI v45e(0x483) v45d
----------------------------------

Begin block 0x462
prev = {'0x421'}, next = {'0x488'}
----------------------------------
Block 0x462
0x462: v462(0x40) = CONST 
0x464: v464 = MLOAD v462(0x40)
0x467: v467(0x1f) = CONST 
0x469: v469(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v467(0x1f)
0x46a: v46a(0x3f) = CONST 
0x46c: v46c = RETURNDATASIZE 
0x46d: v46d = ADD v46c v46a(0x3f)
0x46e: v46e = AND v46d v469(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
0x470: v470 = ADD v464 v46e
0x471: v471(0x40) = CONST 
0x473: MSTORE v471(0x40) v470
0x474: v474 = RETURNDATASIZE 
0x476: MSTORE v464 v474
0x477: v477 = RETURNDATASIZE 
0x478: v478(0x0) = CONST 
0x47a: v47a(0x20) = CONST 
0x47d: v47d = ADD v464 v47a(0x20)
0x47e: RETURNDATACOPY v47d v478(0x0) v477
0x47f: v47f(0x488) = CONST 
0x482: JUMP v47f(0x488)
----------------------------------

Begin block 0x483
prev = {'0x421'}, next = {'0x488'}
----------------------------------
Block 0x483
0x484: v484(0x60) = CONST 
----------------------------------

Begin block 0x488
prev = {'0x462', '0x483'}, next = {'0x496', '0x492'}
----------------------------------
Block 0x488
0x48e: v48e(0x496) = CONST 
0x491: JUMPI v48e(0x496) v453
----------------------------------

Begin block 0x492
prev = {'0x488'}, next = {}
----------------------------------
Block 0x492
0x492: v492(0x0) = CONST 
0x495: REVERT v492(0x0) v492(0x0)
----------------------------------

Begin block 0x496
prev = {'0x488'}, next = {'0x1800xcd'}
----------------------------------
Block 0x496
0x499: JUMP vdb(0x180)
----------------------------------

Begin block 0x49a
prev = {'0x18e'}, next = {'0x197'}
----------------------------------
Block 0x49a
0x49b: v49b(0x1) = CONST 
0x49d: v49d = SLOAD v49b(0x1)
0x49e: v49e(0x1) = CONST 
0x4a0: v4a0(0xa0) = CONST 
0x4a2: v4a2(0x10000000000000000000000000000000000000000) = SHL v4a0(0xa0) v49e(0x1)
0x4a4: v4a4 = DIV v49d v4a2(0x10000000000000000000000000000000000000000)
0x4a5: v4a5(0xff) = CONST 
0x4a7: v4a7 = AND v4a5(0xff) v4a4
0x4a9: JUMP v190(0x197)
----------------------------------

Begin block 0x4aa
prev = {'0x1ce'}, next = {'0x4c1', '0x4bd'}
----------------------------------
Block 0x4aa
0x4ab: v4ab(0x0) = CONST 
0x4ad: v4ad = SLOAD v4ab(0x0)
0x4ae: v4ae(0x1) = CONST 
0x4b0: v4b0(0x1) = CONST 
0x4b2: v4b2(0xa0) = CONST 
0x4b4: v4b4(0x10000000000000000000000000000000000000000) = SHL v4b2(0xa0) v4b0(0x1)
0x4b5: v4b5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4b4(0x10000000000000000000000000000000000000000) v4ae(0x1)
0x4b6: v4b6 = AND v4b5(0xffffffffffffffffffffffffffffffffffffffff) v4ad
0x4b7: v4b7 = CALLER 
0x4b8: v4b8 = EQ v4b7 v4b6
0x4b9: v4b9(0x4c1) = CONST 
0x4bc: JUMPI v4b9(0x4c1) v4b8
----------------------------------

Begin block 0x4bd
prev = {'0x4aa'}, next = {}
----------------------------------
Block 0x4bd
0x4bd: v4bd(0x0) = CONST 
0x4c0: REVERT v4bd(0x0) v4bd(0x0)
----------------------------------

Begin block 0x4c1
prev = {'0x4aa'}, next = {'0x4d4', '0x4d8'}
----------------------------------
Block 0x4c1
0x4c2: v4c2(0x1) = CONST 
0x4c4: v4c4 = SLOAD v4c2(0x1)
0x4c5: v4c5(0x1) = CONST 
0x4c7: v4c7(0xa0) = CONST 
0x4c9: v4c9(0x10000000000000000000000000000000000000000) = SHL v4c7(0xa0) v4c5(0x1)
0x4cb: v4cb = DIV v4c4 v4c9(0x10000000000000000000000000000000000000000)
0x4cc: v4cc(0xff) = CONST 
0x4ce: v4ce = AND v4cc(0xff) v4cb
0x4cf: v4cf = ISZERO v4ce
0x4d0: v4d0(0x4d8) = CONST 
0x4d3: JUMPI v4d0(0x4d8) v4cf
----------------------------------

Begin block 0x4d4
prev = {'0x4c1'}, next = {}
----------------------------------
Block 0x4d4
0x4d4: v4d4(0x0) = CONST 
0x4d7: REVERT v4d4(0x0) v4d4(0x0)
----------------------------------

Begin block 0x4d8
prev = {'0x4c1'}, next = {'0x1800x1ab'}
----------------------------------
Block 0x4d8
0x4d9: v4d9(0x1) = CONST 
0x4dc: v4dc = SLOAD v4d9(0x1)
0x4dd: v4dd(0x1) = CONST 
0x4df: v4df(0xa0) = CONST 
0x4e1: v4e1(0x10000000000000000000000000000000000000000) = SHL v4df(0xa0) v4dd(0x1)
0x4e2: v4e2(0xff) = CONST 
0x4e4: v4e4(0xa0) = CONST 
0x4e6: v4e6(0xff0000000000000000000000000000000000000000) = SHL v4e4(0xa0) v4e2(0xff)
0x4e7: v4e7(0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff) = NOT v4e6(0xff0000000000000000000000000000000000000000)
0x4ea: v4ea = AND v4dc v4e7(0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff)
0x4eb: v4eb = OR v4ea v4e1(0x10000000000000000000000000000000000000000)
0x4ec: v4ec(0x1) = CONST 
0x4ee: v4ee(0x1) = CONST 
0x4f0: v4f0(0xa0) = CONST 
0x4f2: v4f2(0x10000000000000000000000000000000000000000) = SHL v4f0(0xa0) v4ee(0x1)
0x4f3: v4f3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4f2(0x10000000000000000000000000000000000000000) v4ec(0x1)
0x4f4: v4f4(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v4f3(0xffffffffffffffffffffffffffffffffffffffff)
0x4f5: v4f5 = AND v4f4(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v4eb
0x4f6: v4f6(0x1) = CONST 
0x4f8: v4f8(0x1) = CONST 
0x4fa: v4fa(0xa0) = CONST 
0x4fc: v4fc(0x10000000000000000000000000000000000000000) = SHL v4fa(0xa0) v4f8(0x1)
0x4fd: v4fd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4fc(0x10000000000000000000000000000000000000000) v4f6(0x1)
0x4ff: v4ff = AND v1d9 v4fd(0xffffffffffffffffffffffffffffffffffffffff)
0x500: v500 = OR v4ff v4f5
0x502: SSTORE v4d9(0x1) v500
0x503: v503(0x40) = CONST 
0x505: v505 = MLOAD v503(0x40)
0x506: v506(0x5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c8) = CONST 
0x528: v528(0x0) = CONST 
0x52b: LOG1 v505 v528(0x0) v506(0x5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c8)
0x52d: JUMP v1b9(0x180)
----------------------------------

Begin block 0x52e
prev = {'0x201'}, next = {'0x545', '0x541'}
----------------------------------
Block 0x52e
0x52f: v52f(0x0) = CONST 
0x531: v531 = SLOAD v52f(0x0)
0x532: v532(0x1) = CONST 
0x534: v534(0x1) = CONST 
0x536: v536(0xa0) = CONST 
0x538: v538(0x10000000000000000000000000000000000000000) = SHL v536(0xa0) v534(0x1)
0x539: v539(0xffffffffffffffffffffffffffffffffffffffff) = SUB v538(0x10000000000000000000000000000000000000000) v532(0x1)
0x53a: v53a = AND v539(0xffffffffffffffffffffffffffffffffffffffff) v531
0x53b: v53b = CALLER 
0x53c: v53c = EQ v53b v53a
0x53d: v53d(0x545) = CONST 
0x540: JUMPI v53d(0x545) v53c
----------------------------------

Begin block 0x541
prev = {'0x52e'}, next = {}
----------------------------------
Block 0x541
0x541: v541(0x0) = CONST 
0x544: REVERT v541(0x0) v541(0x0)
----------------------------------

Begin block 0x545
prev = {'0x52e'}, next = {'0x557', '0x55b'}
----------------------------------
Block 0x545
0x546: v546(0x1) = CONST 
0x548: v548 = SLOAD v546(0x1)
0x549: v549(0x1) = CONST 
0x54b: v54b(0xa0) = CONST 
0x54d: v54d(0x10000000000000000000000000000000000000000) = SHL v54b(0xa0) v549(0x1)
0x54f: v54f = DIV v548 v54d(0x10000000000000000000000000000000000000000)
0x550: v550(0xff) = CONST 
0x552: v552 = AND v550(0xff) v54f
0x553: v553(0x55b) = CONST 
0x556: JUMPI v553(0x55b) v552
----------------------------------

Begin block 0x557
prev = {'0x545'}, next = {}
----------------------------------
Block 0x557
0x557: v557(0x0) = CONST 
0x55a: REVERT v557(0x0) v557(0x0)
----------------------------------

Begin block 0x55b
prev = {'0x545'}, next = {'0x5ab', '0x5af'}
----------------------------------
Block 0x55b
0x55c: v55c(0x1) = CONST 
0x55e: v55e = SLOAD v55c(0x1)
0x55f: v55f(0x40) = CONST 
0x562: v562 = MLOAD v55f(0x40)
0x563: v563(0xa9059cbb) = CONST 
0x568: v568(0xe0) = CONST 
0x56a: v56a(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = SHL v568(0xe0) v563(0xa9059cbb)
0x56c: MSTORE v562 v56a(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0x56d: v56d = CALLER 
0x56e: v56e(0x4) = CONST 
0x571: v571 = ADD v562 v56e(0x4)
0x572: MSTORE v571 v56d
0x573: v573(0x24) = CONST 
0x576: v576 = ADD v562 v573(0x24)
0x579: MSTORE v576 v203
0x57b: v57b = MLOAD v55f(0x40)
0x57c: v57c(0x1) = CONST 
0x57e: v57e(0x1) = CONST 
0x580: v580(0xa0) = CONST 
0x582: v582(0x10000000000000000000000000000000000000000) = SHL v580(0xa0) v57e(0x1)
0x583: v583(0xffffffffffffffffffffffffffffffffffffffff) = SUB v582(0x10000000000000000000000000000000000000000) v57c(0x1)
0x586: v586 = AND v55e v583(0xffffffffffffffffffffffffffffffffffffffff)
0x588: v588(0xa9059cbb) = CONST 
0x58e: v58e(0x44) = CONST 
0x592: v592 = ADD v562 v58e(0x44)
0x594: v594(0x20) = CONST 
0x59c: v59c = SUB v562 v57b
0x59d: v59d = ADD v59c v58e(0x44)
0x59f: v59f(0x0) = CONST 
0x5a3: v5a3 = EXTCODESIZE v586
0x5a4: v5a4 = ISZERO v5a3
0x5a6: v5a6 = ISZERO v5a4
0x5a7: v5a7(0x5af) = CONST 
0x5aa: JUMPI v5a7(0x5af) v5a6
----------------------------------

Begin block 0x5ab
prev = {'0x55b'}, next = {}
----------------------------------
Block 0x5ab
0x5ab: v5ab(0x0) = CONST 
0x5ae: REVERT v5ab(0x0) v5ab(0x0)
----------------------------------

Begin block 0x5af
prev = {'0x55b'}, next = {'0x5ba', '0x5c3'}
----------------------------------
Block 0x5af
0x5b1: v5b1 = GAS 
0x5b2: v5b2 = CALL v5b1 v586 v59f(0x0) v57b v59d v57b v594(0x20)
0x5b3: v5b3 = ISZERO v5b2
0x5b5: v5b5 = ISZERO v5b3
0x5b6: v5b6(0x5c3) = CONST 
0x5b9: JUMPI v5b6(0x5c3) v5b5
----------------------------------

Begin block 0x5ba
prev = {'0x5af'}, next = {}
----------------------------------
Block 0x5ba
0x5ba: v5ba = RETURNDATASIZE 
0x5bb: v5bb(0x0) = CONST 
0x5be: RETURNDATACOPY v5bb(0x0) v5bb(0x0) v5ba
0x5bf: v5bf = RETURNDATASIZE 
0x5c0: v5c0(0x0) = CONST 
0x5c2: REVERT v5c0(0x0) v5bf
----------------------------------

Begin block 0x5c3
prev = {'0x5af'}, next = {'0x5d9', '0x5d5'}
----------------------------------
Block 0x5c3
0x5c8: v5c8(0x40) = CONST 
0x5ca: v5ca = MLOAD v5c8(0x40)
0x5cb: v5cb = RETURNDATASIZE 
0x5cc: v5cc(0x20) = CONST 
0x5cf: v5cf = LT v5cb v5cc(0x20)
0x5d0: v5d0 = ISZERO v5cf
0x5d1: v5d1(0x5d9) = CONST 
0x5d4: JUMPI v5d1(0x5d9) v5d0
----------------------------------

Begin block 0x5d5
prev = {'0x5c3'}, next = {}
----------------------------------
Block 0x5d5
0x5d5: v5d5(0x0) = CONST 
0x5d8: REVERT v5d5(0x0) v5d5(0x0)
----------------------------------

Begin block 0x5d9
prev = {'0x5c3'}, next = {'0x1800x1de'}
----------------------------------
Block 0x5d9
0x5dc: v5dc(0x40) = CONST 
0x5df: v5df = MLOAD v5dc(0x40)
0x5e0: v5e0 = CALLER 
0x5e2: MSTORE v5df v5e0
0x5e3: v5e3(0x20) = CONST 
0x5e6: v5e6 = ADD v5df v5e3(0x20)
0x5e9: MSTORE v5e6 v203
0x5eb: v5eb = MLOAD v5dc(0x40)
0x5ec: v5ec(0x680f2e4f4032ebf1774e8cdbaddcb1b617a5a606411c8ca96257ada338d3833c) = CONST 
0x611: v611 = SUB v5df v5eb
0x614: v614 = ADD v5dc(0x40) v611
0x616: LOG1 v5eb v614 v5ec(0x680f2e4f4032ebf1774e8cdbaddcb1b617a5a606411c8ca96257ada338d3833c)
0x618: JUMP v1ec(0x180)
----------------------------------

Begin block 0x619
prev = {'0x22b'}, next = {'0x630', '0x62c'}
----------------------------------
Block 0x619
0x61a: v61a(0x0) = CONST 
0x61c: v61c = SLOAD v61a(0x0)
0x61d: v61d(0x1) = CONST 
0x61f: v61f(0x1) = CONST 
0x621: v621(0xa0) = CONST 
0x623: v623(0x10000000000000000000000000000000000000000) = SHL v621(0xa0) v61f(0x1)
0x624: v624(0xffffffffffffffffffffffffffffffffffffffff) = SUB v623(0x10000000000000000000000000000000000000000) v61d(0x1)
0x625: v625 = AND v624(0xffffffffffffffffffffffffffffffffffffffff) v61c
0x626: v626 = CALLER 
0x627: v627 = EQ v626 v625
0x628: v628(0x630) = CONST 
0x62b: JUMPI v628(0x630) v627
----------------------------------

Begin block 0x62c
prev = {'0x619'}, next = {}
----------------------------------
Block 0x62c
0x62c: v62c(0x0) = CONST 
0x62f: REVERT v62c(0x0) v62c(0x0)
----------------------------------

Begin block 0x630
prev = {'0x619'}, next = {'0x65d', '0x654'}
----------------------------------
Block 0x630
0x631: v631(0x40) = CONST 
0x633: v633 = MLOAD v631(0x40)
0x634: v634 = CALLER 
0x637: v637 = ISZERO v22d
0x638: v638(0x8fc) = CONST 
0x63b: v63b = MUL v638(0x8fc) v637
0x63f: v63f(0x0) = CONST 
0x647: v647 = CALL v63b v634 v22d v633 v63f(0x0) v633 v63f(0x0)
0x64d: v64d = ISZERO v647
0x64f: v64f = ISZERO v64d
0x650: v650(0x65d) = CONST 
0x653: JUMPI v650(0x65d) v64f
----------------------------------

Begin block 0x654
prev = {'0x630'}, next = {}
----------------------------------
Block 0x654
0x654: v654 = RETURNDATASIZE 
0x655: v655(0x0) = CONST 
0x658: RETURNDATACOPY v655(0x0) v655(0x0) v654
0x659: v659 = RETURNDATASIZE 
0x65a: v65a(0x0) = CONST 
0x65c: REVERT v65a(0x0) v659
----------------------------------

Begin block 0x65d
prev = {'0x630'}, next = {'0x1800x208'}
----------------------------------
Block 0x65d
0x65f: v65f(0x40) = CONST 
0x662: v662 = MLOAD v65f(0x40)
0x663: v663 = CALLER 
0x665: MSTORE v662 v663
0x666: v666(0x20) = CONST 
0x669: v669 = ADD v662 v666(0x20)
0x66c: MSTORE v669 v22d
0x66e: v66e = MLOAD v65f(0x40)
0x66f: v66f(0xdb35132c111efe920cede025e819975671cfd1b8fcc1174762c8670c4e94c211) = CONST 
0x694: v694 = SUB v662 v66e
0x697: v697 = ADD v65f(0x40) v694
0x699: LOG1 v66e v697 v66f(0xdb35132c111efe920cede025e819975671cfd1b8fcc1174762c8670c4e94c211)
0x69b: JUMP v216(0x180)
----------------------------------

Begin block 0x69c
prev = {'0x255'}, next = {'0x6af', '0x6b3'}
----------------------------------
Block 0x69c
0x69d: v69d(0x0) = CONST 
0x69f: v69f = SLOAD v69d(0x0)
0x6a0: v6a0(0x1) = CONST 
0x6a2: v6a2(0x1) = CONST 
0x6a4: v6a4(0xa0) = CONST 
0x6a6: v6a6(0x10000000000000000000000000000000000000000) = SHL v6a4(0xa0) v6a2(0x1)
0x6a7: v6a7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6a6(0x10000000000000000000000000000000000000000) v6a0(0x1)
0x6a8: v6a8 = AND v6a7(0xffffffffffffffffffffffffffffffffffffffff) v69f
0x6a9: v6a9 = CALLER 
0x6aa: v6aa = EQ v6a9 v6a8
0x6ab: v6ab(0x6b3) = CONST 
0x6ae: JUMPI v6ab(0x6b3) v6aa
----------------------------------

Begin block 0x6af
prev = {'0x69c'}, next = {}
----------------------------------
Block 0x6af
0x6af: v6af(0x0) = CONST 
0x6b2: REVERT v6af(0x0) v6af(0x0)
----------------------------------

Begin block 0x6b3
prev = {'0x69c'}, next = {'0x6fe', '0x702'}
----------------------------------
Block 0x6b3
0x6b4: v6b4(0x40) = CONST 
0x6b7: v6b7 = MLOAD v6b4(0x40)
0x6b8: v6b8(0xa9059cbb) = CONST 
0x6bd: v6bd(0xe0) = CONST 
0x6bf: v6bf(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = SHL v6bd(0xe0) v6b8(0xa9059cbb)
0x6c1: MSTORE v6b7 v6bf(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0x6c2: v6c2 = CALLER 
0x6c3: v6c3(0x4) = CONST 
0x6c6: v6c6 = ADD v6b7 v6c3(0x4)
0x6c7: MSTORE v6c6 v6c2
0x6c8: v6c8(0x24) = CONST 
0x6cb: v6cb = ADD v6b7 v6c8(0x24)
0x6ce: MSTORE v6cb v266
0x6d0: v6d0 = MLOAD v6b4(0x40)
0x6d1: v6d1(0x1) = CONST 
0x6d3: v6d3(0x1) = CONST 
0x6d5: v6d5(0xa0) = CONST 
0x6d7: v6d7(0x10000000000000000000000000000000000000000) = SHL v6d5(0xa0) v6d3(0x1)
0x6d8: v6d8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6d7(0x10000000000000000000000000000000000000000) v6d1(0x1)
0x6da: v6da = AND v261 v6d8(0xffffffffffffffffffffffffffffffffffffffff)
0x6dc: v6dc(0xa9059cbb) = CONST 
0x6e2: v6e2(0x44) = CONST 
0x6e6: v6e6 = ADD v6b7 v6e2(0x44)
0x6e8: v6e8(0x20) = CONST 
0x6ef: v6ef = SUB v6b7 v6d0
0x6f0: v6f0 = ADD v6ef v6e2(0x44)
0x6f2: v6f2(0x0) = CONST 
0x6f6: v6f6 = EXTCODESIZE v6da
0x6f7: v6f7 = ISZERO v6f6
0x6f9: v6f9 = ISZERO v6f7
0x6fa: v6fa(0x702) = CONST 
0x6fd: JUMPI v6fa(0x702) v6f9
----------------------------------

Begin block 0x6fe
prev = {'0x6b3'}, next = {}
----------------------------------
Block 0x6fe
0x6fe: v6fe(0x0) = CONST 
0x701: REVERT v6fe(0x0) v6fe(0x0)
----------------------------------

Begin block 0x702
prev = {'0x6b3'}, next = {'0x716', '0x70d'}
----------------------------------
Block 0x702
0x704: v704 = GAS 
0x705: v705 = CALL v704 v6da v6f2(0x0) v6d0 v6f0 v6d0 v6e8(0x20)
0x706: v706 = ISZERO v705
0x708: v708 = ISZERO v706
0x709: v709(0x716) = CONST 
0x70c: JUMPI v709(0x716) v708
----------------------------------

Begin block 0x70d
prev = {'0x702'}, next = {}
----------------------------------
Block 0x70d
0x70d: v70d = RETURNDATASIZE 
0x70e: v70e(0x0) = CONST 
0x711: RETURNDATACOPY v70e(0x0) v70e(0x0) v70d
0x712: v712 = RETURNDATASIZE 
0x713: v713(0x0) = CONST 
0x715: REVERT v713(0x0) v712
----------------------------------

Begin block 0x716
prev = {'0x702'}, next = {'0x72c', '0x728'}
----------------------------------
Block 0x716
0x71b: v71b(0x40) = CONST 
0x71d: v71d = MLOAD v71b(0x40)
0x71e: v71e = RETURNDATASIZE 
0x71f: v71f(0x20) = CONST 
0x722: v722 = LT v71e v71f(0x20)
0x723: v723 = ISZERO v722
0x724: v724(0x72c) = CONST 
0x727: JUMPI v724(0x72c) v723
----------------------------------

Begin block 0x728
prev = {'0x716'}, next = {}
----------------------------------
Block 0x728
0x728: v728(0x0) = CONST 
0x72b: REVERT v728(0x0) v728(0x0)
----------------------------------

Begin block 0x72c
prev = {'0x716'}, next = {'0x1800x232'}
----------------------------------
Block 0x72c
0x72f: v72f(0x40) = CONST 
0x732: v732 = MLOAD v72f(0x40)
0x733: v733(0x1) = CONST 
0x735: v735(0x1) = CONST 
0x737: v737(0xa0) = CONST 
0x739: v739(0x10000000000000000000000000000000000000000) = SHL v737(0xa0) v735(0x1)
0x73a: v73a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v739(0x10000000000000000000000000000000000000000) v733(0x1)
0x73c: v73c = AND v261 v73a(0xffffffffffffffffffffffffffffffffffffffff)
0x73e: MSTORE v732 v73c
0x73f: v73f = CALLER 
0x740: v740(0x20) = CONST 
0x743: v743 = ADD v732 v740(0x20)
0x744: MSTORE v743 v73f
0x747: v747 = ADD v72f(0x40) v732
0x74a: MSTORE v747 v266
0x74c: v74c = MLOAD v72f(0x40)
0x74d: v74d(0x7eb9eb40ed423c1da9cf9ae51a11a25043eeb0db5672ffa1c6baeafbbd168764) = CONST 
0x771: v771 = SUB v732 v74c
0x772: v772(0x60) = CONST 
0x774: v774 = ADD v772(0x60) v771
0x776: LOG1 v74c v774 v74d(0x7eb9eb40ed423c1da9cf9ae51a11a25043eeb0db5672ffa1c6baeafbbd168764)
0x779: JUMP v240(0x180)
----------------------------------

Begin block 0x77a
prev = {'0x277'}, next = {'0x2800x26b'}
----------------------------------
Block 0x77a
0x77b: v77b(0x0) = CONST 
0x77d: v77d = SLOAD v77b(0x0)
0x77e: v77e(0x1) = CONST 
0x780: v780(0x1) = CONST 
0x782: v782(0xa0) = CONST 
0x784: v784(0x10000000000000000000000000000000000000000) = SHL v782(0xa0) v780(0x1)
0x785: v785(0xffffffffffffffffffffffffffffffffffffffff) = SUB v784(0x10000000000000000000000000000000000000000) v77e(0x1)
0x786: v786 = AND v785(0xffffffffffffffffffffffffffffffffffffffff) v77d
0x788: JUMP v279(0x280)
----------------------------------

Begin block 0x789
prev = {'0x32d'}, next = {'0x7e2', '0x7de'}
----------------------------------
Block 0x789
0x78a: v78a(0x40) = CONST 
0x78d: v78d = MLOAD v78a(0x40)
0x78e: v78e(0x23b872dd) = CONST 
0x793: v793(0xe0) = CONST 
0x795: v795(0x23b872dd00000000000000000000000000000000000000000000000000000000) = SHL v793(0xe0) v78e(0x23b872dd)
0x797: MSTORE v78d v795(0x23b872dd00000000000000000000000000000000000000000000000000000000)
0x798: v798(0x1) = CONST 
0x79a: v79a(0x1) = CONST 
0x79c: v79c(0xa0) = CONST 
0x79e: v79e(0x10000000000000000000000000000000000000000) = SHL v79c(0xa0) v79a(0x1)
0x79f: v79f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v79e(0x10000000000000000000000000000000000000000) v798(0x1)
0x7a2: v7a2 = AND v79f(0xffffffffffffffffffffffffffffffffffffffff) v2cb
0x7a3: v7a3(0x4) = CONST 
0x7a6: v7a6 = ADD v78d v7a3(0x4)
0x7a7: MSTORE v7a6 v7a2
0x7a8: v7a8 = ADDRESS 
0x7a9: v7a9(0x24) = CONST 
0x7ac: v7ac = ADD v78d v7a9(0x24)
0x7ad: MSTORE v7ac v7a8
0x7ae: v7ae(0x44) = CONST 
0x7b1: v7b1 = ADD v78d v7ae(0x44)
0x7b4: MSTORE v7b1 v2d1
0x7b6: v7b6 = MLOAD v78a(0x40)
0x7ba: v7ba = AND v2da v79f(0xffffffffffffffffffffffffffffffffffffffff)
0x7bc: v7bc(0x23b872dd) = CONST 
0x7c2: v7c2(0x64) = CONST 
0x7c6: v7c6 = ADD v78d v7c2(0x64)
0x7c8: v7c8(0x20) = CONST 
0x7cf: v7cf = SUB v78d v7b6
0x7d0: v7d0 = ADD v7cf v7c2(0x64)
0x7d2: v7d2(0x0) = CONST 
0x7d6: v7d6 = EXTCODESIZE v7ba
0x7d7: v7d7 = ISZERO v7d6
0x7d9: v7d9 = ISZERO v7d7
0x7da: v7da(0x7e2) = CONST 
0x7dd: JUMPI v7da(0x7e2) v7d9
----------------------------------

Begin block 0x7de
prev = {'0x789'}, next = {}
----------------------------------
Block 0x7de
0x7de: v7de(0x0) = CONST 
0x7e1: REVERT v7de(0x0) v7de(0x0)
----------------------------------

Begin block 0x7e2
prev = {'0x789'}, next = {'0x7ed', '0x7f6'}
----------------------------------
Block 0x7e2
0x7e4: v7e4 = GAS 
0x7e5: v7e5 = CALL v7e4 v7ba v7d2(0x0) v7b6 v7d0 v7b6 v7c8(0x20)
0x7e6: v7e6 = ISZERO v7e5
0x7e8: v7e8 = ISZERO v7e6
0x7e9: v7e9(0x7f6) = CONST 
0x7ec: JUMPI v7e9(0x7f6) v7e8
----------------------------------

Begin block 0x7ed
prev = {'0x7e2'}, next = {}
----------------------------------
Block 0x7ed
0x7ed: v7ed = RETURNDATASIZE 
0x7ee: v7ee(0x0) = CONST 
0x7f1: RETURNDATACOPY v7ee(0x0) v7ee(0x0) v7ed
0x7f2: v7f2 = RETURNDATASIZE 
0x7f3: v7f3(0x0) = CONST 
0x7f5: REVERT v7f3(0x0) v7f2
----------------------------------

Begin block 0x7f6
prev = {'0x7e2'}, next = {'0x80c', '0x808'}
----------------------------------
Block 0x7f6
0x7fb: v7fb(0x40) = CONST 
0x7fd: v7fd = MLOAD v7fb(0x40)
0x7fe: v7fe = RETURNDATASIZE 
0x7ff: v7ff(0x20) = CONST 
0x802: v802 = LT v7fe v7ff(0x20)
0x803: v803 = ISZERO v802
0x804: v804(0x80c) = CONST 
0x807: JUMPI v804(0x80c) v803
----------------------------------

Begin block 0x808
prev = {'0x7f6'}, next = {}
----------------------------------
Block 0x808
0x808: v808(0x0) = CONST 
0x80b: REVERT v808(0x0) v808(0x0)
----------------------------------

Begin block 0x80c
prev = {'0x7f6'}, next = {'0x813', '0x817'}
----------------------------------
Block 0x80c
0x80e: v80e = MLOAD v7fd
0x80f: v80f(0x817) = CONST 
0x812: JUMPI v80f(0x817) v80e
----------------------------------

Begin block 0x813
prev = {'0x80c'}, next = {}
----------------------------------
Block 0x813
0x813: v813(0x0) = CONST 
0x816: REVERT v813(0x0) v813(0x0)
----------------------------------

Begin block 0x817
prev = {'0x80c'}, next = {'0x897'}
----------------------------------
Block 0x817
0x818: v818(0xeeb71b8926d7ed8f47a2cedf6b9b204e2001344c7fa20c696c9f06ea7c413c6) = CONST 
0x83d: v83d(0x40) = CONST 
0x83f: v83f = MLOAD v83d(0x40)
0x842: v842(0x1) = CONST 
0x844: v844(0x1) = CONST 
0x846: v846(0xa0) = CONST 
0x848: v848(0x10000000000000000000000000000000000000000) = SHL v846(0xa0) v844(0x1)
0x849: v849(0xffffffffffffffffffffffffffffffffffffffff) = SUB v848(0x10000000000000000000000000000000000000000) v842(0x1)
0x84a: v84a = AND v849(0xffffffffffffffffffffffffffffffffffffffff) v2cb
0x84b: v84b(0x1) = CONST 
0x84d: v84d(0x1) = CONST 
0x84f: v84f(0xa0) = CONST 
0x851: v851(0x10000000000000000000000000000000000000000) = SHL v84f(0xa0) v84d(0x1)
0x852: v852(0xffffffffffffffffffffffffffffffffffffffff) = SUB v851(0x10000000000000000000000000000000000000000) v84b(0x1)
0x853: v853 = AND v852(0xffffffffffffffffffffffffffffffffffffffff) v84a
0x855: MSTORE v83f v853
0x856: v856(0x20) = CONST 
0x858: v858 = ADD v856(0x20) v83f
0x85b: MSTORE v858 v2d1
0x85c: v85c(0x20) = CONST 
0x85e: v85e = ADD v85c(0x20) v858
0x860: v860(0x1) = CONST 
0x862: v862(0x1) = CONST 
0x864: v864(0xa0) = CONST 
0x866: v866(0x10000000000000000000000000000000000000000) = SHL v864(0xa0) v862(0x1)
0x867: v867(0xffffffffffffffffffffffffffffffffffffffff) = SUB v866(0x10000000000000000000000000000000000000000) v860(0x1)
0x868: v868 = AND v867(0xffffffffffffffffffffffffffffffffffffffff) v2da
0x869: v869(0x1) = CONST 
0x86b: v86b(0x1) = CONST 
0x86d: v86d(0xa0) = CONST 
0x86f: v86f(0x10000000000000000000000000000000000000000) = SHL v86d(0xa0) v86b(0x1)
0x870: v870(0xffffffffffffffffffffffffffffffffffffffff) = SUB v86f(0x10000000000000000000000000000000000000000) v869(0x1)
0x871: v871 = AND v870(0xffffffffffffffffffffffffffffffffffffffff) v868
0x873: MSTORE v85e v871
0x874: v874(0x20) = CONST 
0x876: v876 = ADD v874(0x20) v85e
0x878: v878(0x20) = CONST 
0x87a: v87a = ADD v878(0x20) v876
0x87d: v87d = SUB v87a v83f
0x87f: MSTORE v876 v87d
0x883: v883 = MLOAD v340
0x885: MSTORE v87a v883
0x886: v886(0x20) = CONST 
0x888: v888 = ADD v886(0x20) v87a
0x88c: v88c = MLOAD v340
0x88e: v88e(0x20) = CONST 
0x890: v890 = ADD v88e(0x20) v340
0x895: v895(0x0) = CONST 
----------------------------------

Begin block 0x897
prev = {'0x8a0', '0x817'}, next = {'0x8af', '0x8a0'}
----------------------------------
Block 0x897
0x897_0x0: v897_0 = PHI v895(0x0) v8aa
0x89a: v89a = LT v897_0 v88c
0x89b: v89b = ISZERO v89a
0x89c: v89c(0x8af) = CONST 
0x89f: JUMPI v89c(0x8af) v89b
----------------------------------

Begin block 0x8a0
prev = {'0x897'}, next = {'0x897'}
----------------------------------
Block 0x8a0
0x8a0_0x0: v8a0_0 = PHI v895(0x0) v8aa
0x8a2: v8a2 = ADD v8a0_0 v890
0x8a3: v8a3 = MLOAD v8a2
0x8a6: v8a6 = ADD v8a0_0 v888
0x8a7: MSTORE v8a6 v8a3
0x8a8: v8a8(0x20) = CONST 
0x8aa: v8aa = ADD v8a8(0x20) v8a0_0
0x8ab: v8ab(0x897) = CONST 
0x8ae: JUMP v8ab(0x897)
----------------------------------

Begin block 0x8af
prev = {'0x897'}, next = {'0x8dc', '0x8c3'}
----------------------------------
Block 0x8af
0x8b8: v8b8 = ADD v88c v888
0x8ba: v8ba(0x1f) = CONST 
0x8bc: v8bc = AND v8ba(0x1f) v88c
0x8be: v8be = ISZERO v8bc
0x8bf: v8bf(0x8dc) = CONST 
0x8c2: JUMPI v8bf(0x8dc) v8be
----------------------------------

Begin block 0x8c3
prev = {'0x8af'}, next = {'0x8dc'}
----------------------------------
Block 0x8c3
0x8c5: v8c5 = SUB v8b8 v8bc
0x8c7: v8c7 = MLOAD v8c5
0x8c8: v8c8(0x1) = CONST 
0x8cb: v8cb(0x20) = CONST 
0x8cd: v8cd = SUB v8cb(0x20) v8bc
0x8ce: v8ce(0x100) = CONST 
0x8d1: v8d1 = EXP v8ce(0x100) v8cd
0x8d2: v8d2 = SUB v8d1 v8c8(0x1)
0x8d3: v8d3 = NOT v8d2
0x8d4: v8d4 = AND v8d3 v8c7
0x8d6: MSTORE v8c5 v8d4
0x8d7: v8d7(0x20) = CONST 
0x8d9: v8d9 = ADD v8d7(0x20) v8c5
----------------------------------

Begin block 0x8dc
prev = {'0x8af', '0x8c3'}, next = {'0x1800x29c'}
----------------------------------
Block 0x8dc
0x8dc_0x1: v8dc_1 = PHI v8b8 v8d9
0x8e5: v8e5(0x40) = CONST 
0x8e7: v8e7 = MLOAD v8e5(0x40)
0x8ea: v8ea = SUB v8dc_1 v8e7
0x8ec: LOG1 v8e7 v8ea v818(0xeeb71b8926d7ed8f47a2cedf6b9b204e2001344c7fa20c696c9f06ea7c413c6)
0x8f2: JUMP v2aa(0x180)
----------------------------------

Begin block 0x8f3
prev = {'0x37a'}, next = {'0x2800x36e'}
----------------------------------
Block 0x8f3
0x8f4: v8f4(0x1) = CONST 
0x8f6: v8f6 = SLOAD v8f4(0x1)
0x8f7: v8f7(0x1) = CONST 
0x8f9: v8f9(0x1) = CONST 
0x8fb: v8fb(0xa0) = CONST 
0x8fd: v8fd(0x10000000000000000000000000000000000000000) = SHL v8fb(0xa0) v8f9(0x1)
0x8fe: v8fe(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8fd(0x10000000000000000000000000000000000000000) v8f7(0x1)
0x8ff: v8ff = AND v8fe(0xffffffffffffffffffffffffffffffffffffffff) v8f6
0x901: JUMP v37c(0x280)
----------------------------------

Begin block 0x902
prev = {'0x3a6'}, next = {'0x919', '0x915'}
----------------------------------
Block 0x902
0x903: v903(0x0) = CONST 
0x905: v905 = SLOAD v903(0x0)
0x906: v906(0x1) = CONST 
0x908: v908(0x1) = CONST 
0x90a: v90a(0xa0) = CONST 
0x90c: v90c(0x10000000000000000000000000000000000000000) = SHL v90a(0xa0) v908(0x1)
0x90d: v90d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v90c(0x10000000000000000000000000000000000000000) v906(0x1)
0x90e: v90e = AND v90d(0xffffffffffffffffffffffffffffffffffffffff) v905
0x90f: v90f = CALLER 
0x910: v910 = EQ v90f v90e
0x911: v911(0x919) = CONST 
0x914: JUMPI v911(0x919) v910
----------------------------------

Begin block 0x915
prev = {'0x902'}, next = {}
----------------------------------
Block 0x915
0x915: v915(0x0) = CONST 
0x918: REVERT v915(0x0) v915(0x0)
----------------------------------

Begin block 0x919
prev = {'0x902'}, next = {'0x92b', '0x92f'}
----------------------------------
Block 0x919
0x91a: v91a(0x1) = CONST 
0x91c: v91c(0x1) = CONST 
0x91e: v91e(0xa0) = CONST 
0x920: v920(0x10000000000000000000000000000000000000000) = SHL v91e(0xa0) v91c(0x1)
0x921: v921(0xffffffffffffffffffffffffffffffffffffffff) = SUB v920(0x10000000000000000000000000000000000000000) v91a(0x1)
0x923: v923 = AND v3b1 v921(0xffffffffffffffffffffffffffffffffffffffff)
0x924: v924 = ADDRESS 
0x925: v925 = EQ v924 v923
0x926: v926 = ISZERO v925
0x927: v927(0x92f) = CONST 
0x92a: JUMPI v927(0x92f) v926
----------------------------------

Begin block 0x92b
prev = {'0x919'}, next = {}
----------------------------------
Block 0x92b
0x92b: v92b(0x0) = CONST 
0x92e: REVERT v92b(0x0) v92b(0x0)
----------------------------------

Begin block 0x92f
prev = {'0x919'}, next = {'0x1800x383'}
----------------------------------
Block 0x92f
0x930: v930(0x0) = CONST 
0x933: v933 = SLOAD v930(0x0)
0x934: v934(0x1) = CONST 
0x936: v936(0x1) = CONST 
0x938: v938(0xa0) = CONST 
0x93a: v93a(0x10000000000000000000000000000000000000000) = SHL v938(0xa0) v936(0x1)
0x93b: v93b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v93a(0x10000000000000000000000000000000000000000) v934(0x1)
0x93c: v93c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v93b(0xffffffffffffffffffffffffffffffffffffffff)
0x93d: v93d = AND v93c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v933
0x93e: v93e(0x1) = CONST 
0x940: v940(0x1) = CONST 
0x942: v942(0xa0) = CONST 
0x944: v944(0x10000000000000000000000000000000000000000) = SHL v942(0xa0) v940(0x1)
0x945: v945(0xffffffffffffffffffffffffffffffffffffffff) = SUB v944(0x10000000000000000000000000000000000000000) v93e(0x1)
0x949: v949 = AND v945(0xffffffffffffffffffffffffffffffffffffffff) v3b1
0x94d: v94d = OR v949 v93d
0x94f: SSTORE v930(0x0) v94d
0x950: JUMP v391(0x180)
----------------------------------

Begin block 0x994
prev = {'0x86', '0x0'}, next = {'0x910x0'}
----------------------------------
Block 0x994
0x995: v995(0x91) = CONST 
0x996: CALLPRIVATE v995(0x91)
----------------------------------

Begin block 0x997
prev = {'0x59'}, next = {}
----------------------------------
Block 0x997
0x998: v998(0xcd) = CONST 
0x999: CALLPRIVATE v998(0xcd)
----------------------------------

Begin block 0x99a
prev = {'0x65'}, next = {}
----------------------------------
Block 0x99a
0x99b: v99b(0x182) = CONST 
0x99c: CALLPRIVATE v99b(0x182)
----------------------------------

Begin block 0x99d
prev = {'0x70'}, next = {}
----------------------------------
Block 0x99d
0x99e: v99e(0x1ab) = CONST 
0x99f: CALLPRIVATE v99e(0x1ab)
----------------------------------

Begin block 0x9a0
prev = {'0x7b'}, next = {}
----------------------------------
Block 0x9a0
0x9a1: v9a1(0x1de) = CONST 
0x9a2: CALLPRIVATE v9a1(0x1de)
----------------------------------

Begin block 0x9a3
prev = {'0x86'}, next = {}
----------------------------------
Block 0x9a3
0x9a4: v9a4(0x208) = CONST 
0x9a5: CALLPRIVATE v9a4(0x208)
----------------------------------

Begin block 0x9a6
prev = {'0x1e'}, next = {}
----------------------------------
Block 0x9a6
0x9a7: v9a7(0x232) = CONST 
0x9a8: CALLPRIVATE v9a7(0x232)
----------------------------------

Begin block 0x9a9
prev = {'0x29'}, next = {}
----------------------------------
Block 0x9a9
0x9aa: v9aa(0x26b) = CONST 
0x9ab: CALLPRIVATE v9aa(0x26b)
----------------------------------

Begin block 0x9ac
prev = {'0x34'}, next = {}
----------------------------------
Block 0x9ac
0x9ad: v9ad(0x29c) = CONST 
0x9ae: CALLPRIVATE v9ad(0x29c)
----------------------------------

Begin block 0x9af
prev = {'0x3f'}, next = {}
----------------------------------
Block 0x9af
0x9b0: v9b0(0x36e) = CONST 
0x9b1: CALLPRIVATE v9b0(0x36e)
----------------------------------

Begin block 0x9b2
prev = {'0x4a'}, next = {}
----------------------------------
Block 0x9b2
0x9b3: v9b3(0x383) = CONST 
0x9b4: CALLPRIVATE v9b3(0x383)
----------------------------------
