
Begin block 0x0
prev = {}, next = {'0x5c8', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x5b4: v5b4(0x5c8) = CONST 
0x5b5: JUMPI v5b4(0x5c8) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x5cb', '0x3a'}
----------------------------------
Block 0xd
0xd: vd(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x2b: v2b(0x0) = CONST 
0x2d: v2d = CALLDATALOAD v2b(0x0)
0x2e: v2e = DIV v2d vd(0x100000000000000000000000000000000000000000000000000000000)
0x2f: v2f(0x6fdde03) = CONST 
0x35: v35 = EQ v2e v2f(0x6fdde03)
0x5b6: v5b6(0x5cb) = CONST 
0x5b7: JUMPI v5b6(0x5cb) v35
----------------------------------

Begin block 0x3a
prev = {'0xd'}, next = {'0x5ce', '0x45'}
----------------------------------
Block 0x3a
0x3b: v3b(0x18160ddd) = CONST 
0x40: v40 = EQ v3b(0x18160ddd) v2e
0x5b8: v5b8(0x5ce) = CONST 
0x5b9: JUMPI v5b8(0x5ce) v40
----------------------------------

Begin block 0x45
prev = {'0x3a'}, next = {'0x5d1', '0x50'}
----------------------------------
Block 0x45
0x46: v46(0x27e235e3) = CONST 
0x4b: v4b = EQ v46(0x27e235e3) v2e
0x5ba: v5ba(0x5d1) = CONST 
0x5bb: JUMPI v5ba(0x5d1) v4b
----------------------------------

Begin block 0x50
prev = {'0x45'}, next = {'0x5b', '0x5d4'}
----------------------------------
Block 0x50
0x51: v51(0x313ce567) = CONST 
0x56: v56 = EQ v51(0x313ce567) v2e
0x5bc: v5bc(0x5d4) = CONST 
0x5bd: JUMPI v5bc(0x5d4) v56
----------------------------------

Begin block 0x5b
prev = {'0x50'}, next = {'0x5d7', '0x66'}
----------------------------------
Block 0x5b
0x5c: v5c(0x33a581d2) = CONST 
0x61: v61 = EQ v5c(0x33a581d2) v2e
0x5be: v5be(0x5d7) = CONST 
0x5bf: JUMPI v5be(0x5d7) v61
----------------------------------

Begin block 0x66
prev = {'0x5b'}, next = {'0x71', '0x5da'}
----------------------------------
Block 0x66
0x67: v67(0x42966c68) = CONST 
0x6c: v6c = EQ v67(0x42966c68) v2e
0x5c0: v5c0(0x5da) = CONST 
0x5c1: JUMPI v5c0(0x5da) v6c
----------------------------------

Begin block 0x71
prev = {'0x66'}, next = {'0x5dd', '0x7c'}
----------------------------------
Block 0x71
0x72: v72(0x70a08231) = CONST 
0x77: v77 = EQ v72(0x70a08231) v2e
0x5c2: v5c2(0x5dd) = CONST 
0x5c3: JUMPI v5c2(0x5dd) v77
----------------------------------

Begin block 0x7c
prev = {'0x71'}, next = {'0x5e0', '0x87'}
----------------------------------
Block 0x7c
0x7d: v7d(0x95d89b41) = CONST 
0x82: v82 = EQ v7d(0x95d89b41) v2e
0x5c4: v5c4(0x5e0) = CONST 
0x5c5: JUMPI v5c4(0x5e0) v82
----------------------------------

Begin block 0x87
prev = {'0x7c'}, next = {'0x5c8', '0x5e3'}
----------------------------------
Block 0x87
0x88: v88(0xa9059cbb) = CONST 
0x8d: v8d = EQ v88(0xa9059cbb) v2e
0x5c6: v5c6(0x5e3) = CONST 
0x5c7: JUMPI v5c6(0x5e3) v8d
----------------------------------

Begin block 0x92
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x92
0x93: v93(0x0) = CONST 
0x96: REVERT v93(0x0) v93(0x0)
----------------------------------

Begin block 0x97
prev = {}, next = {'0x9f', '0xa3'}
----------------------------------
function name()()
Block 0x97
0x98: v98 = CALLVALUE 
0x9a: v9a = ISZERO v98
0x9b: v9b(0xa3) = CONST 
0x9e: JUMPI v9b(0xa3) v9a
----------------------------------

Begin block 0x9f
prev = {'0x97'}, next = {}
----------------------------------
Block 0x9f
0x9f: v9f(0x0) = CONST 
0xa2: REVERT v9f(0x0) v9f(0x0)
----------------------------------

Begin block 0xa3
prev = {'0x97'}, next = {'0xac0x97'}
----------------------------------
Block 0xa3
0xa5: va5(0xac) = CONST 
0xa8: va8(0x27a) = CONST 
0xab: vab_0, vab_1 = CALLPRIVATE va8(0x27a) va5(0xac)
----------------------------------

Begin block 0xac0x97
prev = {'0xa3'}, next = {'0xce0x97'}
----------------------------------
Block 0xac0x97
0xad0x97: v97ad(0x40) = CONST 
0xb00x97: v97b0 = MLOAD v97ad(0x40)
0xb10x97: v97b1(0x20) = CONST 
0xb50x97: MSTORE v97b0 v97b1(0x20)
0xb70x97: v97b7 = MLOAD vab_0
0xba0x97: v97ba = ADD v97b0 v97b1(0x20)
0xbb0x97: MSTORE v97ba v97b7
0xbd0x97: v97bd = MLOAD vab_0
0xc40x97: v97c4 = ADD v97b0 v97ad(0x40)
0xc70x97: v97c7 = ADD vab_0 v97b1(0x20)
0xcc0x97: v97cc(0x0) = CONST 
----------------------------------

Begin block 0xac0x22c
prev = {'0x238'}, next = {'0xce0x22c'}
----------------------------------
Block 0xac0x22c
0xad0x22c: v22cad(0x40) = CONST 
0xb00x22c: v22cb0 = MLOAD v22cad(0x40)
0xb10x22c: v22cb1(0x20) = CONST 
0xb50x22c: MSTORE v22cb0 v22cb1(0x20)
0xb70x22c: v22cb7 = MLOAD v240_0
0xba0x22c: v22cba = ADD v22cb0 v22cb1(0x20)
0xbb0x22c: MSTORE v22cba v22cb7
0xbd0x22c: v22cbd = MLOAD v240_0
0xc40x22c: v22cc4 = ADD v22cb0 v22cad(0x40)
0xc70x22c: v22cc7 = ADD v240_0 v22cb1(0x20)
0xcc0x22c: v22ccc(0x0) = CONST 
----------------------------------

Begin block 0xce0x97
prev = {'0xac0x97', '0xd70x97'}, next = {'0xd70x97', '0xe60x97'}
----------------------------------
Block 0xce0x97
0xce0x97_0x0: vce97_0 = PHI v97cc(0x0) v97e1
0xd10x97: v97d1 = LT vce97_0 v97bd
0xd20x97: v97d2 = ISZERO v97d1
0xd30x97: v97d3(0xe6) = CONST 
0xd60x97: JUMPI v97d3(0xe6) v97d2
----------------------------------

Begin block 0xce0x22c
prev = {'0xd70x22c', '0xac0x22c'}, next = {'0xd70x22c', '0xe60x22c'}
----------------------------------
Block 0xce0x22c
0xce0x22c_0x0: vce22c_0 = PHI v22ccc(0x0) v22ce1
0xd10x22c: v22cd1 = LT vce22c_0 v22cbd
0xd20x22c: v22cd2 = ISZERO v22cd1
0xd30x22c: v22cd3(0xe6) = CONST 
0xd60x22c: JUMPI v22cd3(0xe6) v22cd2
----------------------------------

Begin block 0xd70x97
prev = {'0xce0x97'}, next = {'0xce0x97'}
----------------------------------
Block 0xd70x97
0xd70x97_0x0: vd797_0 = PHI v97cc(0x0) v97e1
0xd90x97: v97d9 = ADD vd797_0 v97c7
0xda0x97: v97da = MLOAD v97d9
0xdd0x97: v97dd = ADD vd797_0 v97c4
0xde0x97: MSTORE v97dd v97da
0xdf0x97: v97df(0x20) = CONST 
0xe10x97: v97e1 = ADD v97df(0x20) vd797_0
0xe20x97: v97e2(0xce) = CONST 
0xe50x97: JUMP v97e2(0xce)
----------------------------------

Begin block 0xd70x22c
prev = {'0xce0x22c'}, next = {'0xce0x22c'}
----------------------------------
Block 0xd70x22c
0xd70x22c_0x0: vd722c_0 = PHI v22ccc(0x0) v22ce1
0xd90x22c: v22cd9 = ADD vd722c_0 v22cc7
0xda0x22c: v22cda = MLOAD v22cd9
0xdd0x22c: v22cdd = ADD vd722c_0 v22cc4
0xde0x22c: MSTORE v22cdd v22cda
0xdf0x22c: v22cdf(0x20) = CONST 
0xe10x22c: v22ce1 = ADD v22cdf(0x20) vd722c_0
0xe20x22c: v22ce2(0xce) = CONST 
0xe50x22c: JUMP v22ce2(0xce)
----------------------------------

Begin block 0xe60x97
prev = {'0xce0x97'}, next = {'0x1130x97', '0xfa0x97'}
----------------------------------
Block 0xe60x97
0xef0x97: v97ef = ADD v97bd v97c4
0xf10x97: v97f1(0x1f) = CONST 
0xf30x97: v97f3 = AND v97f1(0x1f) v97bd
0xf50x97: v97f5 = ISZERO v97f3
0xf60x97: v97f6(0x113) = CONST 
0xf90x97: JUMPI v97f6(0x113) v97f5
----------------------------------

Begin block 0xe60x22c
prev = {'0xce0x22c'}, next = {'0x1130x22c', '0xfa0x22c'}
----------------------------------
Block 0xe60x22c
0xef0x22c: v22cef = ADD v22cbd v22cc4
0xf10x22c: v22cf1(0x1f) = CONST 
0xf30x22c: v22cf3 = AND v22cf1(0x1f) v22cbd
0xf50x22c: v22cf5 = ISZERO v22cf3
0xf60x22c: v22cf6(0x113) = CONST 
0xf90x22c: JUMPI v22cf6(0x113) v22cf5
----------------------------------

Begin block 0xfa0x97
prev = {'0xe60x97'}, next = {'0x1130x97'}
----------------------------------
Block 0xfa0x97
0xfc0x97: v97fc = SUB v97ef v97f3
0xfe0x97: v97fe = MLOAD v97fc
0xff0x97: v97ff(0x1) = CONST 
0x1020x97: v97102(0x20) = CONST 
0x1040x97: v97104 = SUB v97102(0x20) v97f3
0x1050x97: v97105(0x100) = CONST 
0x1080x97: v97108 = EXP v97105(0x100) v97104
0x1090x97: v97109 = SUB v97108 v97ff(0x1)
0x10a0x97: v9710a = NOT v97109
0x10b0x97: v9710b = AND v9710a v97fe
0x10d0x97: MSTORE v97fc v9710b
0x10e0x97: v9710e(0x20) = CONST 
0x1100x97: v97110 = ADD v9710e(0x20) v97fc
----------------------------------

Begin block 0xfa0x22c
prev = {'0xe60x22c'}, next = {'0x1130x22c'}
----------------------------------
Block 0xfa0x22c
0xfc0x22c: v22cfc = SUB v22cef v22cf3
0xfe0x22c: v22cfe = MLOAD v22cfc
0xff0x22c: v22cff(0x1) = CONST 
0x1020x22c: v22c102(0x20) = CONST 
0x1040x22c: v22c104 = SUB v22c102(0x20) v22cf3
0x1050x22c: v22c105(0x100) = CONST 
0x1080x22c: v22c108 = EXP v22c105(0x100) v22c104
0x1090x22c: v22c109 = SUB v22c108 v22cff(0x1)
0x10a0x22c: v22c10a = NOT v22c109
0x10b0x22c: v22c10b = AND v22c10a v22cfe
0x10d0x22c: MSTORE v22cfc v22c10b
0x10e0x22c: v22c10e(0x20) = CONST 
0x1100x22c: v22c110 = ADD v22c10e(0x20) v22cfc
----------------------------------

Begin block 0x1130x97
prev = {'0xfa0x97', '0xe60x97'}, next = {}
----------------------------------
Block 0x1130x97
0x1130x97_0x1: v11397_1 = PHI v97ef v97110
0x1190x97: v97119(0x40) = CONST 
0x11b0x97: v9711b = MLOAD v97119(0x40)
0x11e0x97: v9711e = SUB v11397_1 v9711b
0x1200x97: RETURN v9711b v9711e
----------------------------------

Begin block 0x1130x22c
prev = {'0xfa0x22c', '0xe60x22c'}, next = {}
----------------------------------
Block 0x1130x22c
0x1130x22c_0x1: v11322c_1 = PHI v22cef v22c110
0x1190x22c: v22c119(0x40) = CONST 
0x11b0x22c: v22c11b = MLOAD v22c119(0x40)
0x11e0x22c: v22c11e = SUB v11322c_1 v22c11b
0x1200x22c: RETURN v22c11b v22c11e
----------------------------------

Begin block 0x121
prev = {}, next = {'0x12d', '0x129'}
----------------------------------
function totalSupply()()
Block 0x121
0x122: v122 = CALLVALUE 
0x124: v124 = ISZERO v122
0x125: v125(0x12d) = CONST 
0x128: JUMPI v125(0x12d) v124
----------------------------------

Begin block 0x129
prev = {'0x121'}, next = {}
----------------------------------
Block 0x129
0x129: v129(0x0) = CONST 
0x12c: REVERT v129(0x0) v129(0x0)
----------------------------------

Begin block 0x12d
prev = {'0x121'}, next = {'0x307'}
----------------------------------
Block 0x12d
0x12f: v12f(0x136) = CONST 
0x132: v132(0x307) = CONST 
0x135: JUMP v132(0x307)
----------------------------------

Begin block 0x1360x121
prev = {'0x307'}, next = {}
----------------------------------
Block 0x1360x121
0x1370x121: v121137(0x40) = CONST 
0x13a0x121: v12113a = MLOAD v121137(0x40)
0x13d0x121: MSTORE v12113a v30a
0x13e0x121: v12113e = MLOAD v121137(0x40)
0x1420x121: v121142 = SUB v12113a v12113e
0x1430x121: v121143(0x20) = CONST 
0x1450x121: v121145 = ADD v121143(0x20) v121142
0x1470x121: RETURN v12113e v121145
----------------------------------

Begin block 0x1360x148
prev = {'0x30d'}, next = {}
----------------------------------
Block 0x1360x148
0x1370x148: v148137(0x40) = CONST 
0x13a0x148: v14813a = MLOAD v148137(0x40)
0x13d0x148: MSTORE v14813a v31c
0x13e0x148: v14813e = MLOAD v148137(0x40)
0x1420x148: v148142 = SUB v14813a v14813e
0x1430x148: v148143(0x20) = CONST 
0x1450x148: v148145 = ADD v148143(0x20) v148142
0x1470x148: RETURN v14813e v148145
----------------------------------

Begin block 0x1360x1a6
prev = {'0x328'}, next = {}
----------------------------------
Block 0x1360x1a6
0x1370x1a6: v1a6137(0x40) = CONST 
0x13a0x1a6: v1a613a = MLOAD v1a6137(0x40)
0x13d0x1a6: MSTORE v1a613a v32b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x13e0x1a6: v1a613e = MLOAD v1a6137(0x40)
0x1420x1a6: v1a6142 = SUB v1a613a v1a613e
0x1430x1a6: v1a6143(0x20) = CONST 
0x1450x1a6: v1a6145 = ADD v1a6143(0x20) v1a6142
0x1470x1a6: RETURN v1a613e v1a6145
----------------------------------

Begin block 0x1360x1f9
prev = {'0x3a6'}, next = {}
----------------------------------
Block 0x1360x1f9
0x1370x1f9: v1f9137(0x40) = CONST 
0x13a0x1f9: v1f913a = MLOAD v1f9137(0x40)
0x13d0x1f9: MSTORE v1f913a v3be
0x13e0x1f9: v1f913e = MLOAD v1f9137(0x40)
0x1420x1f9: v1f9142 = SUB v1f913a v1f913e
0x1430x1f9: v1f9143(0x20) = CONST 
0x1450x1f9: v1f9145 = ADD v1f9143(0x20) v1f9142
0x1470x1f9: RETURN v1f913e v1f9145
----------------------------------

Begin block 0x148
prev = {}, next = {'0x150', '0x154'}
----------------------------------
function balances(address)()
Block 0x148
0x149: v149 = CALLVALUE 
0x14b: v14b = ISZERO v149
0x14c: v14c(0x154) = CONST 
0x14f: JUMPI v14c(0x154) v14b
----------------------------------

Begin block 0x150
prev = {'0x148'}, next = {}
----------------------------------
Block 0x150
0x150: v150(0x0) = CONST 
0x153: REVERT v150(0x0) v150(0x0)
----------------------------------

Begin block 0x154
prev = {'0x148'}, next = {'0x167', '0x16b'}
----------------------------------
Block 0x154
0x156: v156(0x136) = CONST 
0x159: v159(0x4) = CONST 
0x15c: v15c = CALLDATASIZE 
0x15d: v15d = SUB v15c v159(0x4)
0x15e: v15e(0x20) = CONST 
0x161: v161 = LT v15d v15e(0x20)
0x162: v162 = ISZERO v161
0x163: v163(0x16b) = CONST 
0x166: JUMPI v163(0x16b) v162
----------------------------------

Begin block 0x167
prev = {'0x154'}, next = {}
----------------------------------
Block 0x167
0x167: v167(0x0) = CONST 
0x16a: REVERT v167(0x0) v167(0x0)
----------------------------------

Begin block 0x16b
prev = {'0x154'}, next = {'0x30d'}
----------------------------------
Block 0x16b
0x16d: v16d = CALLDATALOAD v159(0x4)
0x16e: v16e(0x1) = CONST 
0x170: v170(0xa0) = CONST 
0x172: v172(0x2) = CONST 
0x174: v174(0x10000000000000000000000000000000000000000) = EXP v172(0x2) v170(0xa0)
0x175: v175(0xffffffffffffffffffffffffffffffffffffffff) = SUB v174(0x10000000000000000000000000000000000000000) v16e(0x1)
0x176: v176 = AND v175(0xffffffffffffffffffffffffffffffffffffffff) v16d
0x177: v177(0x30d) = CONST 
0x17a: JUMP v177(0x30d)
----------------------------------

Begin block 0x17b
prev = {}, next = {'0x187', '0x183'}
----------------------------------
function decimals()()
Block 0x17b
0x17c: v17c = CALLVALUE 
0x17e: v17e = ISZERO v17c
0x17f: v17f(0x187) = CONST 
0x182: JUMPI v17f(0x187) v17e
----------------------------------

Begin block 0x183
prev = {'0x17b'}, next = {}
----------------------------------
Block 0x183
0x183: v183(0x0) = CONST 
0x186: REVERT v183(0x0) v183(0x0)
----------------------------------

Begin block 0x187
prev = {'0x17b'}, next = {'0x31f'}
----------------------------------
Block 0x187
0x189: v189(0x190) = CONST 
0x18c: v18c(0x31f) = CONST 
0x18f: JUMP v18c(0x31f)
----------------------------------

Begin block 0x190
prev = {'0x31f'}, next = {}
----------------------------------
Block 0x190
0x191: v191(0x40) = CONST 
0x194: v194 = MLOAD v191(0x40)
0x195: v195(0xff) = CONST 
0x199: v199 = AND v325 v195(0xff)
0x19b: MSTORE v194 v199
0x19c: v19c = MLOAD v191(0x40)
0x1a0: v1a0 = SUB v194 v19c
0x1a1: v1a1(0x20) = CONST 
0x1a3: v1a3 = ADD v1a1(0x20) v1a0
0x1a5: RETURN v19c v1a3
----------------------------------

Begin block 0x1a6
prev = {}, next = {'0x1b2', '0x1ae'}
----------------------------------
function MAX_UINT256()()
Block 0x1a6
0x1a7: v1a7 = CALLVALUE 
0x1a9: v1a9 = ISZERO v1a7
0x1aa: v1aa(0x1b2) = CONST 
0x1ad: JUMPI v1aa(0x1b2) v1a9
----------------------------------

Begin block 0x1ae
prev = {'0x1a6'}, next = {}
----------------------------------
Block 0x1ae
0x1ae: v1ae(0x0) = CONST 
0x1b1: REVERT v1ae(0x0) v1ae(0x0)
----------------------------------

Begin block 0x1b2
prev = {'0x1a6'}, next = {'0x328'}
----------------------------------
Block 0x1b2
0x1b4: v1b4(0x136) = CONST 
0x1b7: v1b7(0x328) = CONST 
0x1ba: JUMP v1b7(0x328)
----------------------------------

Begin block 0x1bb
prev = {}, next = {'0x1c3', '0x1c7'}
----------------------------------
function burn(uint256)()
Block 0x1bb
0x1bc: v1bc = CALLVALUE 
0x1be: v1be = ISZERO v1bc
0x1bf: v1bf(0x1c7) = CONST 
0x1c2: JUMPI v1bf(0x1c7) v1be
----------------------------------

Begin block 0x1c3
prev = {'0x1bb'}, next = {}
----------------------------------
Block 0x1c3
0x1c3: v1c3(0x0) = CONST 
0x1c6: REVERT v1c3(0x0) v1c3(0x0)
----------------------------------

Begin block 0x1c7
prev = {'0x1bb'}, next = {'0x1de', '0x1da'}
----------------------------------
Block 0x1c7
0x1c9: v1c9(0x1e5) = CONST 
0x1cc: v1cc(0x4) = CONST 
0x1cf: v1cf = CALLDATASIZE 
0x1d0: v1d0 = SUB v1cf v1cc(0x4)
0x1d1: v1d1(0x20) = CONST 
0x1d4: v1d4 = LT v1d0 v1d1(0x20)
0x1d5: v1d5 = ISZERO v1d4
0x1d6: v1d6(0x1de) = CONST 
0x1d9: JUMPI v1d6(0x1de) v1d5
----------------------------------

Begin block 0x1da
prev = {'0x1c7'}, next = {}
----------------------------------
Block 0x1da
0x1da: v1da(0x0) = CONST 
0x1dd: REVERT v1da(0x0) v1da(0x0)
----------------------------------

Begin block 0x1de
prev = {'0x1c7'}, next = {'0x32e'}
----------------------------------
Block 0x1de
0x1e0: v1e0 = CALLDATALOAD v1cc(0x4)
0x1e1: v1e1(0x32e) = CONST 
0x1e4: JUMP v1e1(0x32e)
----------------------------------

Begin block 0x1e50x1bb
prev = {'0x365'}, next = {}
----------------------------------
Block 0x1e50x1bb
0x1e60x1bb: v1bb1e6(0x40) = CONST 
0x1e90x1bb: v1bb1e9 = MLOAD v1bb1e6(0x40)
0x1eb0x1bb: v1bb1eb = ISZERO v3a0(0x1)
0x1ec0x1bb: v1bb1ec = ISZERO v1bb1eb
0x1ee0x1bb: MSTORE v1bb1e9 v1bb1ec
0x1ef0x1bb: v1bb1ef = MLOAD v1bb1e6(0x40)
0x1f30x1bb: v1bb1f3 = SUB v1bb1e9 v1bb1ef
0x1f40x1bb: v1bb1f4(0x20) = CONST 
0x1f60x1bb: v1bb1f6 = ADD v1bb1f4(0x20) v1bb1f3
0x1f80x1bb: RETURN v1bb1ef v1bb1f6
----------------------------------

Begin block 0x1e50x241
prev = {'0x50a'}, next = {}
----------------------------------
Block 0x1e50x241
0x1e60x241: v2411e6(0x40) = CONST 
0x1e90x241: v2411e9 = MLOAD v2411e6(0x40)
0x1eb0x241: v2411eb = ISZERO v54c(0x1)
0x1ec0x241: v2411ec = ISZERO v2411eb
0x1ee0x241: MSTORE v2411e9 v2411ec
0x1ef0x241: v2411ef = MLOAD v2411e6(0x40)
0x1f30x241: v2411f3 = SUB v2411e9 v2411ef
0x1f40x241: v2411f4(0x20) = CONST 
0x1f60x241: v2411f6 = ADD v2411f4(0x20) v2411f3
0x1f80x241: RETURN v2411ef v2411f6
----------------------------------

Begin block 0x1f9
prev = {}, next = {'0x201', '0x205'}
----------------------------------
function balanceOf(address)()
Block 0x1f9
0x1fa: v1fa = CALLVALUE 
0x1fc: v1fc = ISZERO v1fa
0x1fd: v1fd(0x205) = CONST 
0x200: JUMPI v1fd(0x205) v1fc
----------------------------------

Begin block 0x201
prev = {'0x1f9'}, next = {}
----------------------------------
Block 0x201
0x201: v201(0x0) = CONST 
0x204: REVERT v201(0x0) v201(0x0)
----------------------------------

Begin block 0x205
prev = {'0x1f9'}, next = {'0x218', '0x21c'}
----------------------------------
Block 0x205
0x207: v207(0x136) = CONST 
0x20a: v20a(0x4) = CONST 
0x20d: v20d = CALLDATASIZE 
0x20e: v20e = SUB v20d v20a(0x4)
0x20f: v20f(0x20) = CONST 
0x212: v212 = LT v20e v20f(0x20)
0x213: v213 = ISZERO v212
0x214: v214(0x21c) = CONST 
0x217: JUMPI v214(0x21c) v213
----------------------------------

Begin block 0x218
prev = {'0x205'}, next = {}
----------------------------------
Block 0x218
0x218: v218(0x0) = CONST 
0x21b: REVERT v218(0x0) v218(0x0)
----------------------------------

Begin block 0x21c
prev = {'0x205'}, next = {'0x3a6'}
----------------------------------
Block 0x21c
0x21e: v21e = CALLDATALOAD v20a(0x4)
0x21f: v21f(0x1) = CONST 
0x221: v221(0xa0) = CONST 
0x223: v223(0x2) = CONST 
0x225: v225(0x10000000000000000000000000000000000000000) = EXP v223(0x2) v221(0xa0)
0x226: v226(0xffffffffffffffffffffffffffffffffffffffff) = SUB v225(0x10000000000000000000000000000000000000000) v21f(0x1)
0x227: v227 = AND v226(0xffffffffffffffffffffffffffffffffffffffff) v21e
0x228: v228(0x3a6) = CONST 
0x22b: JUMP v228(0x3a6)
----------------------------------

Begin block 0x22c
prev = {}, next = {'0x234', '0x238'}
----------------------------------
function symbol()()
Block 0x22c
0x22d: v22d = CALLVALUE 
0x22f: v22f = ISZERO v22d
0x230: v230(0x238) = CONST 
0x233: JUMPI v230(0x238) v22f
----------------------------------

Begin block 0x234
prev = {'0x22c'}, next = {}
----------------------------------
Block 0x234
0x234: v234(0x0) = CONST 
0x237: REVERT v234(0x0) v234(0x0)
----------------------------------

Begin block 0x238
prev = {'0x22c'}, next = {'0xac0x22c'}
----------------------------------
Block 0x238
0x23a: v23a(0xac) = CONST 
0x23d: v23d(0x3c1) = CONST 
0x240: v240_0, v240_1 = CALLPRIVATE v23d(0x3c1) v23a(0xac)
----------------------------------

Begin block 0x241
prev = {}, next = {'0x249', '0x24d'}
----------------------------------
function transfer(address,uint256)()
Block 0x241
0x242: v242 = CALLVALUE 
0x244: v244 = ISZERO v242
0x245: v245(0x24d) = CONST 
0x248: JUMPI v245(0x24d) v244
----------------------------------

Begin block 0x249
prev = {'0x241'}, next = {}
----------------------------------
Block 0x249
0x249: v249(0x0) = CONST 
0x24c: REVERT v249(0x0) v249(0x0)
----------------------------------

Begin block 0x24d
prev = {'0x241'}, next = {'0x260', '0x264'}
----------------------------------
Block 0x24d
0x24f: v24f(0x1e5) = CONST 
0x252: v252(0x4) = CONST 
0x255: v255 = CALLDATASIZE 
0x256: v256 = SUB v255 v252(0x4)
0x257: v257(0x40) = CONST 
0x25a: v25a = LT v256 v257(0x40)
0x25b: v25b = ISZERO v25a
0x25c: v25c(0x264) = CONST 
0x25f: JUMPI v25c(0x264) v25b
----------------------------------

Begin block 0x260
prev = {'0x24d'}, next = {}
----------------------------------
Block 0x260
0x260: v260(0x0) = CONST 
0x263: REVERT v260(0x0) v260(0x0)
----------------------------------

Begin block 0x264
prev = {'0x24d'}, next = {'0x419'}
----------------------------------
Block 0x264
0x266: v266(0x1) = CONST 
0x268: v268(0xa0) = CONST 
0x26a: v26a(0x2) = CONST 
0x26c: v26c(0x10000000000000000000000000000000000000000) = EXP v26a(0x2) v268(0xa0)
0x26d: v26d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v26c(0x10000000000000000000000000000000000000000) v266(0x1)
0x26f: v26f = CALLDATALOAD v252(0x4)
0x270: v270 = AND v26f v26d(0xffffffffffffffffffffffffffffffffffffffff)
0x272: v272(0x20) = CONST 
0x274: v274 = ADD v272(0x20) v252(0x4)
0x275: v275 = CALLDATALOAD v274
0x276: v276(0x419) = CONST 
0x279: JUMP v276(0x419)
----------------------------------

Begin block 0x27a
prev = {}, next = {'0x2ff0x27a', '0x2b9'}
----------------------------------
function 0x27a(v27aarg0)
Block 0x27a
0x27b: v27b(0x1) = CONST 
0x27e: v27e = SLOAD v27b(0x1)
0x27f: v27f(0x40) = CONST 
0x282: v282 = MLOAD v27f(0x40)
0x283: v283(0x20) = CONST 
0x285: v285(0x2) = CONST 
0x289: v289 = AND v27b(0x1) v27e
0x28a: v28a = ISZERO v289
0x28b: v28b(0x100) = CONST 
0x28e: v28e = MUL v28b(0x100) v28a
0x28f: v28f(0x0) = CONST 
0x291: v291(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v28f(0x0)
0x292: v292 = ADD v291(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v28e
0x295: v295 = AND v27e v292
0x299: v299 = DIV v295 v285(0x2)
0x29a: v29a(0x1f) = CONST 
0x29d: v29d = ADD v299 v29a(0x1f)
0x2a0: v2a0 = DIV v29d v283(0x20)
0x2a2: v2a2 = MUL v283(0x20) v2a0
0x2a4: v2a4 = ADD v282 v2a2
0x2a6: v2a6 = ADD v283(0x20) v2a4
0x2a9: MSTORE v27f(0x40) v2a6
0x2ac: MSTORE v282 v299
0x2b0: v2b0 = ADD v282 v283(0x20)
0x2b4: v2b4 = ISZERO v299
0x2b5: v2b5(0x2ff) = CONST 
0x2b8: JUMPI v2b5(0x2ff) v2b4
----------------------------------

Begin block 0x2b9
prev = {'0x27a'}, next = {'0x2c1', '0x2d40x27a'}
----------------------------------
Block 0x2b9
0x2ba: v2ba(0x1f) = CONST 
0x2bc: v2bc = LT v2ba(0x1f) v299
0x2bd: v2bd(0x2d4) = CONST 
0x2c0: JUMPI v2bd(0x2d4) v2bc
----------------------------------

Begin block 0x2c1
prev = {'0x2b9'}, next = {'0x2ff0x27a'}
----------------------------------
Block 0x2c1
0x2c1: v2c1(0x100) = CONST 
0x2c6: v2c6 = SLOAD v27b(0x1)
0x2c7: v2c7 = DIV v2c6 v2c1(0x100)
0x2c8: v2c8 = MUL v2c7 v2c1(0x100)
0x2ca: MSTORE v2b0 v2c8
0x2cc: v2cc(0x20) = CONST 
0x2ce: v2ce = ADD v2cc(0x20) v2b0
0x2d0: v2d0(0x2ff) = CONST 
0x2d3: JUMP v2d0(0x2ff)
----------------------------------

Begin block 0x2d40x27a
prev = {'0x2b9'}, next = {'0x2e20x27a'}
----------------------------------
Block 0x2d40x27a
0x2d60x27a: v27a2d6 = ADD v2b0 v299
0x2d90x27a: v27a2d9(0x0) = CONST 
0x2db0x27a: MSTORE v27a2d9(0x0) v27b(0x1)
0x2dc0x27a: v27a2dc(0x20) = CONST 
0x2de0x27a: v27a2de(0x0) = CONST 
0x2e00x27a: v27a2e0 = SHA3 v27a2de(0x0) v27a2dc(0x20)
----------------------------------

Begin block 0x2d40x3c1
prev = {'0x3fe'}, next = {'0x2e20x3c1'}
----------------------------------
Block 0x2d40x3c1
0x2d60x3c1: v3c12d6 = ADD v3f5 v3de
0x2d90x3c1: v3c12d9(0x0) = CONST 
0x2db0x3c1: MSTORE v3c12d9(0x0) v3c2(0x2)
0x2dc0x3c1: v3c12dc(0x20) = CONST 
0x2de0x3c1: v3c12de(0x0) = CONST 
0x2e00x3c1: v3c12e0 = SHA3 v3c12de(0x0) v3c12dc(0x20)
----------------------------------

Begin block 0x2e20x27a
prev = {'0x2d40x27a', '0x2e20x27a'}, next = {'0x2e20x27a', '0x2f60x27a'}
----------------------------------
Block 0x2e20x27a
0x2e20x27a_0x0: v2e227a_0 = PHI v2b0 v27a2ee
0x2e20x27a_0x1: v2e227a_1 = PHI v27a2ea v27a2e0
0x2e40x27a: v27a2e4 = SLOAD v2e227a_1
0x2e60x27a: MSTORE v2e227a_0 v27a2e4
0x2e80x27a: v27a2e8(0x1) = CONST 
0x2ea0x27a: v27a2ea = ADD v27a2e8(0x1) v2e227a_1
0x2ec0x27a: v27a2ec(0x20) = CONST 
0x2ee0x27a: v27a2ee = ADD v27a2ec(0x20) v2e227a_0
0x2f10x27a: v27a2f1 = GT v27a2d6 v27a2ee
0x2f20x27a: v27a2f2(0x2e2) = CONST 
0x2f50x27a: JUMPI v27a2f2(0x2e2) v27a2f1
----------------------------------

Begin block 0x2e20x3c1
prev = {'0x2d40x3c1', '0x2e20x3c1'}, next = {'0x2f60x3c1', '0x2e20x3c1'}
----------------------------------
Block 0x2e20x3c1
0x2e20x3c1_0x0: v2e23c1_0 = PHI v3f5 v3c12ee
0x2e20x3c1_0x1: v2e23c1_1 = PHI v3c12ea v3c12e0
0x2e40x3c1: v3c12e4 = SLOAD v2e23c1_1
0x2e60x3c1: MSTORE v2e23c1_0 v3c12e4
0x2e80x3c1: v3c12e8(0x1) = CONST 
0x2ea0x3c1: v3c12ea = ADD v3c12e8(0x1) v2e23c1_1
0x2ec0x3c1: v3c12ec(0x20) = CONST 
0x2ee0x3c1: v3c12ee = ADD v3c12ec(0x20) v2e23c1_0
0x2f10x3c1: v3c12f1 = GT v3c12d6 v3c12ee
0x2f20x3c1: v3c12f2(0x2e2) = CONST 
0x2f50x3c1: JUMPI v3c12f2(0x2e2) v3c12f1
----------------------------------

Begin block 0x2f60x27a
prev = {'0x2e20x27a'}, next = {'0x2ff0x27a'}
----------------------------------
Block 0x2f60x27a
0x2f80x27a: v27a2f8 = SUB v27a2ee v27a2d6
0x2f90x27a: v27a2f9(0x1f) = CONST 
0x2fb0x27a: v27a2fb = AND v27a2f9(0x1f) v27a2f8
0x2fd0x27a: v27a2fd = ADD v27a2d6 v27a2fb
----------------------------------

Begin block 0x2f60x3c1
prev = {'0x2e20x3c1'}, next = {'0x2ff0x3c1'}
----------------------------------
Block 0x2f60x3c1
0x2f80x3c1: v3c12f8 = SUB v3c12ee v3c12d6
0x2f90x3c1: v3c12f9(0x1f) = CONST 
0x2fb0x3c1: v3c12fb = AND v3c12f9(0x1f) v3c12f8
0x2fd0x3c1: v3c12fd = ADD v3c12d6 v3c12fb
----------------------------------

Begin block 0x2ff0x27a
prev = {'0x2c1', '0x27a', '0x2f60x27a'}, next = {}
----------------------------------
Block 0x2ff0x27a
0x3060x27a: RETURNPRIVATE v27aarg0 v282 v27aarg0
----------------------------------

Begin block 0x2ff0x3c1
prev = {'0x2f60x3c1', '0x406', '0x3c1'}, next = {}
----------------------------------
Block 0x2ff0x3c1
0x3060x3c1: RETURNPRIVATE v3c1arg0 v3c9 v3c1arg0
----------------------------------

Begin block 0x307
prev = {'0x12d'}, next = {'0x1360x121'}
----------------------------------
Block 0x307
0x308: v308(0x4) = CONST 
0x30a: v30a = SLOAD v308(0x4)
0x30c: JUMP v12f(0x136)
----------------------------------

Begin block 0x30d
prev = {'0x16b'}, next = {'0x1360x148'}
----------------------------------
Block 0x30d
0x30e: v30e(0x0) = CONST 
0x310: v310(0x20) = CONST 
0x314: MSTORE v310(0x20) v30e(0x0)
0x317: MSTORE v30e(0x0) v176
0x318: v318(0x40) = CONST 
0x31b: v31b = SHA3 v30e(0x0) v318(0x40)
0x31c: v31c = SLOAD v31b
0x31e: JUMP v156(0x136)
----------------------------------

Begin block 0x31f
prev = {'0x187'}, next = {'0x190'}
----------------------------------
Block 0x31f
0x320: v320(0x3) = CONST 
0x322: v322 = SLOAD v320(0x3)
0x323: v323(0xff) = CONST 
0x325: v325 = AND v323(0xff) v322
0x327: JUMP v189(0x190)
----------------------------------

Begin block 0x328
prev = {'0x1b2'}, next = {'0x1360x1a6'}
----------------------------------
Block 0x328
0x329: v329(0x0) = CONST 
0x32b: v32b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v329(0x0)
0x32d: JUMP v1b4(0x136)
----------------------------------

Begin block 0x32e
prev = {'0x1de'}, next = {'0x348'}
----------------------------------
Block 0x32e
0x32f: v32f = CALLER 
0x330: v330(0x0) = CONST 
0x334: MSTORE v330(0x0) v32f
0x335: v335(0x20) = CONST 
0x339: MSTORE v335(0x20) v330(0x0)
0x33a: v33a(0x40) = CONST 
0x33d: v33d = SHA3 v330(0x0) v33a(0x40)
0x33e: v33e = SLOAD v33d
0x33f: v33f(0x348) = CONST 
0x344: v344(0x553) = CONST 
0x347: v347_0 = CALLPRIVATE v344(0x553) v1e0 v33e v33f(0x348)
----------------------------------

Begin block 0x348
prev = {'0x32e'}, next = {'0x365'}
----------------------------------
Block 0x348
0x349: v349 = CALLER 
0x34a: v34a(0x0) = CONST 
0x34e: MSTORE v34a(0x0) v349
0x34f: v34f(0x20) = CONST 
0x353: MSTORE v34f(0x20) v34a(0x0)
0x354: v354(0x40) = CONST 
0x357: v357 = SHA3 v34a(0x0) v354(0x40)
0x358: SSTORE v357 v347_0
0x359: v359(0x4) = CONST 
0x35b: v35b = SLOAD v359(0x4)
0x35c: v35c(0x365) = CONST 
0x361: v361(0x553) = CONST 
0x364: v364_0 = CALLPRIVATE v361(0x553) v1e0 v35b v35c(0x365)
----------------------------------

Begin block 0x365
prev = {'0x348'}, next = {'0x1e50x1bb'}
----------------------------------
Block 0x365
0x366: v366(0x4) = CONST 
0x368: SSTORE v366(0x4) v364_0
0x369: v369(0x40) = CONST 
0x36c: v36c = MLOAD v369(0x40)
0x36f: MSTORE v36c v1e0
0x371: v371 = MLOAD v369(0x40)
0x372: v372 = CALLER 
0x374: v374(0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5) = CONST 
0x399: v399 = SUB v36c v371
0x39a: v39a(0x20) = CONST 
0x39c: v39c = ADD v39a(0x20) v399
0x39e: LOG2 v371 v39c v374(0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5) v372
0x3a0: v3a0(0x1) = CONST 
0x3a5: JUMP v1c9(0x1e5)
----------------------------------

Begin block 0x3a6
prev = {'0x21c'}, next = {'0x1360x1f9'}
----------------------------------
Block 0x3a6
0x3a7: v3a7(0x1) = CONST 
0x3a9: v3a9(0xa0) = CONST 
0x3ab: v3ab(0x2) = CONST 
0x3ad: v3ad(0x10000000000000000000000000000000000000000) = EXP v3ab(0x2) v3a9(0xa0)
0x3ae: v3ae(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3ad(0x10000000000000000000000000000000000000000) v3a7(0x1)
0x3af: v3af = AND v3ae(0xffffffffffffffffffffffffffffffffffffffff) v227
0x3b0: v3b0(0x0) = CONST 
0x3b4: MSTORE v3b0(0x0) v3af
0x3b5: v3b5(0x20) = CONST 
0x3b9: MSTORE v3b5(0x20) v3b0(0x0)
0x3ba: v3ba(0x40) = CONST 
0x3bd: v3bd = SHA3 v3b0(0x0) v3ba(0x40)
0x3be: v3be = SLOAD v3bd
0x3c0: JUMP v207(0x136)
----------------------------------

Begin block 0x3c1
prev = {}, next = {'0x3fe', '0x2ff0x3c1'}
----------------------------------
function 0x3c1(v3c1arg0)
Block 0x3c1
0x3c2: v3c2(0x2) = CONST 
0x3c5: v3c5 = SLOAD v3c2(0x2)
0x3c6: v3c6(0x40) = CONST 
0x3c9: v3c9 = MLOAD v3c6(0x40)
0x3ca: v3ca(0x20) = CONST 
0x3cc: v3cc(0x1) = CONST 
0x3cf: v3cf = AND v3c5 v3cc(0x1)
0x3d0: v3d0 = ISZERO v3cf
0x3d1: v3d1(0x100) = CONST 
0x3d4: v3d4 = MUL v3d1(0x100) v3d0
0x3d5: v3d5(0x0) = CONST 
0x3d7: v3d7(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v3d5(0x0)
0x3d8: v3d8 = ADD v3d7(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v3d4
0x3db: v3db = AND v3c5 v3d8
0x3de: v3de = DIV v3db v3c2(0x2)
0x3df: v3df(0x1f) = CONST 
0x3e2: v3e2 = ADD v3de v3df(0x1f)
0x3e5: v3e5 = DIV v3e2 v3ca(0x20)
0x3e7: v3e7 = MUL v3ca(0x20) v3e5
0x3e9: v3e9 = ADD v3c9 v3e7
0x3eb: v3eb = ADD v3ca(0x20) v3e9
0x3ee: MSTORE v3c6(0x40) v3eb
0x3f1: MSTORE v3c9 v3de
0x3f5: v3f5 = ADD v3c9 v3ca(0x20)
0x3f9: v3f9 = ISZERO v3de
0x3fa: v3fa(0x2ff) = CONST 
0x3fd: JUMPI v3fa(0x2ff) v3f9
----------------------------------

Begin block 0x3fe
prev = {'0x3c1'}, next = {'0x2d40x3c1', '0x406'}
----------------------------------
Block 0x3fe
0x3ff: v3ff(0x1f) = CONST 
0x401: v401 = LT v3ff(0x1f) v3de
0x402: v402(0x2d4) = CONST 
0x405: JUMPI v402(0x2d4) v401
----------------------------------

Begin block 0x406
prev = {'0x3fe'}, next = {'0x2ff0x3c1'}
----------------------------------
Block 0x406
0x406: v406(0x100) = CONST 
0x40b: v40b = SLOAD v3c2(0x2)
0x40c: v40c = DIV v40b v406(0x100)
0x40d: v40d = MUL v40c v406(0x100)
0x40f: MSTORE v3f5 v40d
0x411: v411(0x20) = CONST 
0x413: v413 = ADD v411(0x20) v3f5
0x415: v415(0x2ff) = CONST 
0x418: JUMP v415(0x2ff)
----------------------------------

Begin block 0x419
prev = {'0x264'}, next = {'0x433'}
----------------------------------
Block 0x419
0x41a: v41a = CALLER 
0x41b: v41b(0x0) = CONST 
0x41f: MSTORE v41b(0x0) v41a
0x420: v420(0x20) = CONST 
0x424: MSTORE v420(0x20) v41b(0x0)
0x425: v425(0x40) = CONST 
0x428: v428 = SHA3 v41b(0x0) v425(0x40)
0x429: v429 = SLOAD v428
0x42a: v42a(0x433) = CONST 
0x42f: v42f(0x553) = CONST 
0x432: v432_0 = CALLPRIVATE v42f(0x553) v275 v429 v42a(0x433)
----------------------------------

Begin block 0x433
prev = {'0x419'}, next = {'0x568'}
----------------------------------
Block 0x433
0x434: v434 = CALLER 
0x435: v435(0x0) = CONST 
0x439: MSTORE v435(0x0) v434
0x43a: v43a(0x20) = CONST 
0x43e: MSTORE v43a(0x20) v435(0x0)
0x43f: v43f(0x40) = CONST 
0x443: v443 = SHA3 v435(0x0) v43f(0x40)
0x447: SSTORE v443 v432_0
0x448: v448(0x1) = CONST 
0x44a: v44a(0xa0) = CONST 
0x44c: v44c(0x2) = CONST 
0x44e: v44e(0x10000000000000000000000000000000000000000) = EXP v44c(0x2) v44a(0xa0)
0x44f: v44f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v44e(0x10000000000000000000000000000000000000000) v448(0x1)
0x451: v451 = AND v270 v44f(0xffffffffffffffffffffffffffffffffffffffff)
0x453: MSTORE v435(0x0) v451
0x454: v454 = SHA3 v435(0x0) v43f(0x40)
0x455: v455 = SLOAD v454
0x456: v456(0x45f) = CONST 
0x45b: v45b(0x568) = CONST 
0x45e: JUMP v45b(0x568)
----------------------------------

Begin block 0x45f
prev = {'0x57b'}, next = {'0x580'}
----------------------------------
Block 0x45f
0x460: v460(0x1) = CONST 
0x462: v462(0xa0) = CONST 
0x464: v464(0x2) = CONST 
0x466: v466(0x10000000000000000000000000000000000000000) = EXP v464(0x2) v462(0xa0)
0x467: v467(0xffffffffffffffffffffffffffffffffffffffff) = SUB v466(0x10000000000000000000000000000000000000000) v460(0x1)
0x469: v469 = AND v270 v467(0xffffffffffffffffffffffffffffffffffffffff)
0x46a: v46a(0x0) = CONST 
0x46e: MSTORE v46a(0x0) v469
0x46f: v46f(0x20) = CONST 
0x473: MSTORE v46f(0x20) v46a(0x0)
0x474: v474(0x40) = CONST 
0x477: v477 = SHA3 v46a(0x0) v474(0x40)
0x478: SSTORE v477 v57d
0x479: v479(0x481) = CONST 
0x47d: v47d(0x580) = CONST 
0x480: JUMP v47d(0x580)
----------------------------------

Begin block 0x481
prev = {'0x580'}, next = {'0x50a', '0x487'}
----------------------------------
Block 0x481
0x482: v482 = ISZERO v585
0x483: v483(0x50a) = CONST 
0x486: JUMPI v483(0x50a) v482
----------------------------------

Begin block 0x487
prev = {'0x481'}, next = {'0x4ec', '0x4f0'}
----------------------------------
Block 0x487
0x487: v487(0x40) = CONST 
0x48a: v48a = MLOAD v487(0x40)
0x48b: v48b(0x3b66d02b00000000000000000000000000000000000000000000000000000000) = CONST 
0x4ad: MSTORE v48a v48b(0x3b66d02b00000000000000000000000000000000000000000000000000000000)
0x4ae: v4ae = CALLER 
0x4af: v4af(0x4) = CONST 
0x4b2: v4b2 = ADD v48a v4af(0x4)
0x4b3: MSTORE v4b2 v4ae
0x4b4: v4b4(0x24) = CONST 
0x4b7: v4b7 = ADD v48a v4b4(0x24)
0x4ba: MSTORE v4b7 v275
0x4bc: v4bc = MLOAD v487(0x40)
0x4bf: v4bf(0x1) = CONST 
0x4c1: v4c1(0xa0) = CONST 
0x4c3: v4c3(0x2) = CONST 
0x4c5: v4c5(0x10000000000000000000000000000000000000000) = EXP v4c3(0x2) v4c1(0xa0)
0x4c6: v4c6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4c5(0x10000000000000000000000000000000000000000) v4bf(0x1)
0x4c8: v4c8 = AND v270 v4c6(0xffffffffffffffffffffffffffffffffffffffff)
0x4ca: v4ca(0x3b66d02b) = CONST 
0x4d0: v4d0(0x44) = CONST 
0x4d4: v4d4 = ADD v48a v4d0(0x44)
0x4d6: v4d6(0x0) = CONST 
0x4de: v4de = SUB v48a v4bc
0x4df: v4df = ADD v4de v4d0(0x44)
0x4e4: v4e4 = EXTCODESIZE v4c8
0x4e5: v4e5 = ISZERO v4e4
0x4e7: v4e7 = ISZERO v4e5
0x4e8: v4e8(0x4f0) = CONST 
0x4eb: JUMPI v4e8(0x4f0) v4e7
----------------------------------

Begin block 0x4ec
prev = {'0x487'}, next = {}
----------------------------------
Block 0x4ec
0x4ec: v4ec(0x0) = CONST 
0x4ef: REVERT v4ec(0x0) v4ec(0x0)
----------------------------------

Begin block 0x4f0
prev = {'0x487'}, next = {'0x4fb', '0x504'}
----------------------------------
Block 0x4f0
0x4f2: v4f2 = GAS 
0x4f3: v4f3 = CALL v4f2 v4c8 v4d6(0x0) v4bc v4df v4bc v4d6(0x0)
0x4f4: v4f4 = ISZERO v4f3
0x4f6: v4f6 = ISZERO v4f4
0x4f7: v4f7(0x504) = CONST 
0x4fa: JUMPI v4f7(0x504) v4f6
----------------------------------

Begin block 0x4fb
prev = {'0x4f0'}, next = {}
----------------------------------
Block 0x4fb
0x4fb: v4fb = RETURNDATASIZE 
0x4fc: v4fc(0x0) = CONST 
0x4ff: RETURNDATACOPY v4fc(0x0) v4fc(0x0) v4fb
0x500: v500 = RETURNDATASIZE 
0x501: v501(0x0) = CONST 
0x503: REVERT v501(0x0) v500
----------------------------------

Begin block 0x504
prev = {'0x4f0'}, next = {'0x50a'}
----------------------------------
Block 0x504
----------------------------------

Begin block 0x50a
prev = {'0x504', '0x481'}, next = {'0x1e50x241'}
----------------------------------
Block 0x50a
0x50b: v50b(0x40) = CONST 
0x50e: v50e = MLOAD v50b(0x40)
0x511: MSTORE v50e v275
0x513: v513 = MLOAD v50b(0x40)
0x514: v514(0x1) = CONST 
0x516: v516(0xa0) = CONST 
0x518: v518(0x2) = CONST 
0x51a: v51a(0x10000000000000000000000000000000000000000) = EXP v518(0x2) v516(0xa0)
0x51b: v51b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v51a(0x10000000000000000000000000000000000000000) v514(0x1)
0x51d: v51d = AND v270 v51b(0xffffffffffffffffffffffffffffffffffffffff)
0x51f: v51f = CALLER 
0x521: v521(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x545: v545 = SUB v50e v513
0x546: v546(0x20) = CONST 
0x548: v548 = ADD v546(0x20) v545
0x54a: LOG3 v513 v548 v521(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v51f v51d
0x54c: v54c(0x1) = CONST 
0x552: JUMP v24f(0x1e5)
----------------------------------

Begin block 0x553
prev = {}, next = {'0x55e', '0x562'}
----------------------------------
function 0x553(v553arg0, v553arg1, v553arg2)
Block 0x553
0x554: v554(0x0) = CONST 
0x558: v558 = LT v553arg1 v553arg0
0x559: v559 = ISZERO v558
0x55a: v55a(0x562) = CONST 
0x55d: JUMPI v55a(0x562) v559
----------------------------------

Begin block 0x55e
prev = {'0x553'}, next = {}
----------------------------------
Block 0x55e
0x55e: v55e(0x0) = CONST 
0x561: REVERT v55e(0x0) v55e(0x0)
----------------------------------

Begin block 0x562
prev = {'0x553'}, next = {}
----------------------------------
Block 0x562
0x565: v565 = SUB v553arg1 v553arg0
0x567: RETURNPRIVATE v553arg2 v565
----------------------------------

Begin block 0x568
prev = {'0x433'}, next = {'0x57b', '0x577'}
----------------------------------
Block 0x568
0x569: v569(0x0) = CONST 
0x56c: v56c(0x0) = CONST 
0x56e: v56e(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v56c(0x0)
0x56f: v56f = SUB v56e(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v275
0x571: v571 = GT v455 v56f
0x572: v572 = ISZERO v571
0x573: v573(0x57b) = CONST 
0x576: JUMPI v573(0x57b) v572
----------------------------------

Begin block 0x577
prev = {'0x568'}, next = {}
----------------------------------
Block 0x577
0x577: v577(0x0) = CONST 
0x57a: REVERT v577(0x0) v577(0x0)
----------------------------------

Begin block 0x57b
prev = {'0x568'}, next = {'0x45f'}
----------------------------------
Block 0x57b
0x57d: v57d = ADD v275 v455
0x57f: JUMP v456(0x45f)
----------------------------------

Begin block 0x580
prev = {'0x45f'}, next = {'0x481'}
----------------------------------
Block 0x580
0x581: v581(0x0) = CONST 
0x584: v584 = EXTCODESIZE v270
0x585: v585 = GT v584 v581(0x0)
0x587: JUMP v479(0x481)
----------------------------------

Begin block 0x5c8
prev = {'0x87', '0x0'}, next = {}
----------------------------------
Block 0x5c8
0x5c9: v5c9(0x92) = CONST 
0x5ca: CALLPRIVATE v5c9(0x92)
----------------------------------

Begin block 0x5cb
prev = {'0xd'}, next = {}
----------------------------------
Block 0x5cb
0x5cc: v5cc(0x97) = CONST 
0x5cd: CALLPRIVATE v5cc(0x97)
----------------------------------

Begin block 0x5ce
prev = {'0x3a'}, next = {}
----------------------------------
Block 0x5ce
0x5cf: v5cf(0x121) = CONST 
0x5d0: CALLPRIVATE v5cf(0x121)
----------------------------------

Begin block 0x5d1
prev = {'0x45'}, next = {}
----------------------------------
Block 0x5d1
0x5d2: v5d2(0x148) = CONST 
0x5d3: CALLPRIVATE v5d2(0x148)
----------------------------------

Begin block 0x5d4
prev = {'0x50'}, next = {}
----------------------------------
Block 0x5d4
0x5d5: v5d5(0x17b) = CONST 
0x5d6: CALLPRIVATE v5d5(0x17b)
----------------------------------

Begin block 0x5d7
prev = {'0x5b'}, next = {}
----------------------------------
Block 0x5d7
0x5d8: v5d8(0x1a6) = CONST 
0x5d9: CALLPRIVATE v5d8(0x1a6)
----------------------------------

Begin block 0x5da
prev = {'0x66'}, next = {}
----------------------------------
Block 0x5da
0x5db: v5db(0x1bb) = CONST 
0x5dc: CALLPRIVATE v5db(0x1bb)
----------------------------------

Begin block 0x5dd
prev = {'0x71'}, next = {}
----------------------------------
Block 0x5dd
0x5de: v5de(0x1f9) = CONST 
0x5df: CALLPRIVATE v5de(0x1f9)
----------------------------------

Begin block 0x5e0
prev = {'0x7c'}, next = {}
----------------------------------
Block 0x5e0
0x5e1: v5e1(0x22c) = CONST 
0x5e2: CALLPRIVATE v5e1(0x22c)
----------------------------------

Begin block 0x5e3
prev = {'0x87'}, next = {}
----------------------------------
Block 0x5e3
0x5e4: v5e4(0x241) = CONST 
0x5e5: CALLPRIVATE v5e4(0x241)
----------------------------------
