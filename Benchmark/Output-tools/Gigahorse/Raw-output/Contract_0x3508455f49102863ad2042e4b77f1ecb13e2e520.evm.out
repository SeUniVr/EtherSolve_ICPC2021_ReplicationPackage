
Begin block 0x0
prev = {}, next = {'0xc', '0x10'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x1a', '0x144b'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x141d: v141d(0x144b) = CONST 
0x141e: JUMPI v141d(0x144b) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0xb8', '0x2b'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x8da5cb5b) = CONST 
0x26: v26 = GT v21(0x8da5cb5b) v1f
0x27: v27(0xb8) = CONST 
0x2a: JUMPI v27(0xb8) v26
----------------------------------

Begin block 0x2b
prev = {'0x1a'}, next = {'0x36', '0x7c'}
----------------------------------
Block 0x2b
0x2c: v2c(0xa457c2d7) = CONST 
0x31: v31 = GT v2c(0xa457c2d7) v1f
0x32: v32(0x7c) = CONST 
0x35: JUMPI v32(0x7c) v31
----------------------------------

Begin block 0x36
prev = {'0x2b'}, next = {'0x41', '0x147e'}
----------------------------------
Block 0x36
0x37: v37(0xa457c2d7) = CONST 
0x3c: v3c = EQ v37(0xa457c2d7) v1f
0x141f: v141f(0x147e) = CONST 
0x1420: JUMPI v141f(0x147e) v3c
----------------------------------

Begin block 0x41
prev = {'0x36'}, next = {'0x4c', '0x1481'}
----------------------------------
Block 0x41
0x42: v42(0xa9059cbb) = CONST 
0x47: v47 = EQ v42(0xa9059cbb) v1f
0x1421: v1421(0x1481) = CONST 
0x1422: JUMPI v1421(0x1481) v47
----------------------------------

Begin block 0x4c
prev = {'0x41'}, next = {'0x1484', '0x57'}
----------------------------------
Block 0x4c
0x4d: v4d(0xaa271e1a) = CONST 
0x52: v52 = EQ v4d(0xaa271e1a) v1f
0x1423: v1423(0x1484) = CONST 
0x1424: JUMPI v1423(0x1484) v52
----------------------------------

Begin block 0x57
prev = {'0x4c'}, next = {'0x62', '0x1487'}
----------------------------------
Block 0x57
0x58: v58(0xcae9ca51) = CONST 
0x5d: v5d = EQ v58(0xcae9ca51) v1f
0x1425: v1425(0x1487) = CONST 
0x1426: JUMPI v1425(0x1487) v5d
----------------------------------

Begin block 0x62
prev = {'0x57'}, next = {'0x148a', '0x6d'}
----------------------------------
Block 0x62
0x63: v63(0xdd62ed3e) = CONST 
0x68: v68 = EQ v63(0xdd62ed3e) v1f
0x1427: v1427(0x148a) = CONST 
0x1428: JUMPI v1427(0x148a) v68
----------------------------------

Begin block 0x6d
prev = {'0x62'}, next = {'0x78', '0x148d'}
----------------------------------
Block 0x6d
0x6e: v6e(0xf2fde38b) = CONST 
0x73: v73 = EQ v6e(0xf2fde38b) v1f
0x1429: v1429(0x148d) = CONST 
0x142a: JUMPI v1429(0x148d) v73
----------------------------------

Begin block 0x78
prev = {'0x6d'}, next = {'0x1420x0'}
----------------------------------
Block 0x78
0x78: v78(0x142) = CONST 
0x7b: JUMP v78(0x142)
----------------------------------

Begin block 0x7c
prev = {'0x2b'}, next = {'0x146f', '0x88'}
----------------------------------
Block 0x7c
0x7e: v7e(0x8da5cb5b) = CONST 
0x83: v83 = EQ v7e(0x8da5cb5b) v1f
0x142b: v142b(0x146f) = CONST 
0x142c: JUMPI v142b(0x146f) v83
----------------------------------

Begin block 0x88
prev = {'0x7c'}, next = {'0x1472', '0x93'}
----------------------------------
Block 0x88
0x89: v89(0x8f32d59b) = CONST 
0x8e: v8e = EQ v89(0x8f32d59b) v1f
0x142d: v142d(0x1472) = CONST 
0x142e: JUMPI v142d(0x1472) v8e
----------------------------------

Begin block 0x93
prev = {'0x88'}, next = {'0x1475', '0x9e'}
----------------------------------
Block 0x93
0x94: v94(0x95d89b41) = CONST 
0x99: v99 = EQ v94(0x95d89b41) v1f
0x142f: v142f(0x1475) = CONST 
0x1430: JUMPI v142f(0x1475) v99
----------------------------------

Begin block 0x9e
prev = {'0x93'}, next = {'0xa9', '0x1478'}
----------------------------------
Block 0x9e
0x9f: v9f(0x983b2d56) = CONST 
0xa4: va4 = EQ v9f(0x983b2d56) v1f
0x1431: v1431(0x1478) = CONST 
0x1432: JUMPI v1431(0x1478) va4
----------------------------------

Begin block 0xa9
prev = {'0x9e'}, next = {'0x147b', '0xb4'}
----------------------------------
Block 0xa9
0xaa: vaa(0x98650275) = CONST 
0xaf: vaf = EQ vaa(0x98650275) v1f
0x1433: v1433(0x147b) = CONST 
0x1434: JUMPI v1433(0x147b) vaf
----------------------------------

Begin block 0xb4
prev = {'0xa9'}, next = {'0x1420x0'}
----------------------------------
Block 0xb4
0xb4: vb4(0x142) = CONST 
0xb7: JUMP vb4(0x142)
----------------------------------

Begin block 0xb8
prev = {'0x1a'}, next = {'0x10a', '0xc4'}
----------------------------------
Block 0xb8
0xba: vba(0x39509351) = CONST 
0xbf: vbf = GT vba(0x39509351) v1f
0xc0: vc0(0x10a) = CONST 
0xc3: JUMPI vc0(0x10a) vbf
----------------------------------

Begin block 0xc4
prev = {'0xb8'}, next = {'0x145d', '0xcf'}
----------------------------------
Block 0xc4
0xc5: vc5(0x39509351) = CONST 
0xca: vca = EQ vc5(0x39509351) v1f
0x1435: v1435(0x145d) = CONST 
0x1436: JUMPI v1435(0x145d) vca
----------------------------------

Begin block 0xcf
prev = {'0xc4'}, next = {'0x1460', '0xda'}
----------------------------------
Block 0xcf
0xd0: vd0(0x40c10f19) = CONST 
0xd5: vd5 = EQ vd0(0x40c10f19) v1f
0x1437: v1437(0x1460) = CONST 
0x1438: JUMPI v1437(0x1460) vd5
----------------------------------

Begin block 0xda
prev = {'0xcf'}, next = {'0x1463', '0xe5'}
----------------------------------
Block 0xda
0xdb: vdb(0x4885b254) = CONST 
0xe0: ve0 = EQ vdb(0x4885b254) v1f
0x1439: v1439(0x1463) = CONST 
0x143a: JUMPI v1439(0x1463) ve0
----------------------------------

Begin block 0xe5
prev = {'0xda'}, next = {'0x1466', '0xf0'}
----------------------------------
Block 0xe5
0xe6: ve6(0x70a08231) = CONST 
0xeb: veb = EQ ve6(0x70a08231) v1f
0x143b: v143b(0x1466) = CONST 
0x143c: JUMPI v143b(0x1466) veb
----------------------------------

Begin block 0xf0
prev = {'0xe5'}, next = {'0xfb', '0x1469'}
----------------------------------
Block 0xf0
0xf1: vf1(0x715018a6) = CONST 
0xf6: vf6 = EQ vf1(0x715018a6) v1f
0x143d: v143d(0x1469) = CONST 
0x143e: JUMPI v143d(0x1469) vf6
----------------------------------

Begin block 0xfb
prev = {'0xf0'}, next = {'0x146c', '0x106'}
----------------------------------
Block 0xfb
0xfc: vfc(0x88d695b2) = CONST 
0x101: v101 = EQ vfc(0x88d695b2) v1f
0x143f: v143f(0x146c) = CONST 
0x1440: JUMPI v143f(0x146c) v101
----------------------------------

Begin block 0x106
prev = {'0xfb'}, next = {'0x1420x0'}
----------------------------------
Block 0x106
0x106: v106(0x142) = CONST 
0x109: JUMP v106(0x142)
----------------------------------

Begin block 0x10a
prev = {'0xb8'}, next = {'0x116', '0x144e'}
----------------------------------
Block 0x10a
0x10c: v10c(0x6fdde03) = CONST 
0x111: v111 = EQ v10c(0x6fdde03) v1f
0x1441: v1441(0x144e) = CONST 
0x1442: JUMPI v1441(0x144e) v111
----------------------------------

Begin block 0x116
prev = {'0x10a'}, next = {'0x121', '0x1451'}
----------------------------------
Block 0x116
0x117: v117(0x95ea7b3) = CONST 
0x11c: v11c = EQ v117(0x95ea7b3) v1f
0x1443: v1443(0x1451) = CONST 
0x1444: JUMPI v1443(0x1451) v11c
----------------------------------

Begin block 0x121
prev = {'0x116'}, next = {'0x12c', '0x1454'}
----------------------------------
Block 0x121
0x122: v122(0x18160ddd) = CONST 
0x127: v127 = EQ v122(0x18160ddd) v1f
0x1445: v1445(0x1454) = CONST 
0x1446: JUMPI v1445(0x1454) v127
----------------------------------

Begin block 0x12c
prev = {'0x121'}, next = {'0x1457', '0x137'}
----------------------------------
Block 0x12c
0x12d: v12d(0x23b872dd) = CONST 
0x132: v132 = EQ v12d(0x23b872dd) v1f
0x1447: v1447(0x1457) = CONST 
0x1448: JUMPI v1447(0x1457) v132
----------------------------------

Begin block 0x137
prev = {'0x12c'}, next = {'0x145a', '0x144b'}
----------------------------------
Block 0x137
0x138: v138(0x313ce567) = CONST 
0x13d: v13d = EQ v138(0x313ce567) v1f
0x1449: v1449(0x145a) = CONST 
0x144a: JUMPI v1449(0x145a) v13d
----------------------------------

Begin block 0x142
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x142
0x143: v143(0x0) = CONST 
0x146: REVERT v143(0x0) v143(0x0)
----------------------------------

Begin block 0x1420x0
prev = {'0x144b', '0x78', '0x106', '0xb4'}, next = {}
----------------------------------
Block 0x1420x0
0x1430x0: v0143(0x0) = CONST 
0x1460x0: REVERT v0143(0x0) v0143(0x0)
----------------------------------

Begin block 0x147
prev = {}, next = {'0x14f0x147'}
----------------------------------
function name()()
Block 0x147
0x148: v148(0x14f) = CONST 
0x14b: v14b(0x673) = CONST 
0x14e: v14e_0, v14e_1 = CALLPRIVATE v14b(0x673) v148(0x14f)
----------------------------------

Begin block 0x14f0x147
prev = {'0x147'}, next = {'0x1710x147'}
----------------------------------
Block 0x14f0x147
0x1500x147: v147150(0x40) = CONST 
0x1530x147: v147153 = MLOAD v147150(0x40)
0x1540x147: v147154(0x20) = CONST 
0x1580x147: MSTORE v147153 v147154(0x20)
0x15a0x147: v14715a = MLOAD v14e_0
0x15d0x147: v14715d = ADD v147153 v147154(0x20)
0x15e0x147: MSTORE v14715d v14715a
0x1600x147: v147160 = MLOAD v14e_0
0x1670x147: v147167 = ADD v147153 v147150(0x40)
0x16a0x147: v14716a = ADD v14e_0 v147154(0x20)
0x16f0x147: v14716f(0x0) = CONST 
----------------------------------

Begin block 0x14f0x4b2
prev = {'0x4b2'}, next = {'0x1710x4b2'}
----------------------------------
Block 0x14f0x4b2
0x1500x4b2: v4b2150(0x40) = CONST 
0x1530x4b2: v4b2153 = MLOAD v4b2150(0x40)
0x1540x4b2: v4b2154(0x20) = CONST 
0x1580x4b2: MSTORE v4b2153 v4b2154(0x20)
0x15a0x4b2: v4b215a = MLOAD v4b9_0
0x15d0x4b2: v4b215d = ADD v4b2153 v4b2154(0x20)
0x15e0x4b2: MSTORE v4b215d v4b215a
0x1600x4b2: v4b2160 = MLOAD v4b9_0
0x1670x4b2: v4b2167 = ADD v4b2153 v4b2150(0x40)
0x16a0x4b2: v4b216a = ADD v4b9_0 v4b2154(0x20)
0x16f0x4b2: v4b216f(0x0) = CONST 
----------------------------------

Begin block 0x1710x147
prev = {'0x17a0x147', '0x14f0x147'}, next = {'0x17a0x147', '0x1890x147'}
----------------------------------
Block 0x1710x147
0x1710x147_0x0: v171147_0 = PHI v14716f(0x0) v147184
0x1740x147: v147174 = LT v171147_0 v147160
0x1750x147: v147175 = ISZERO v147174
0x1760x147: v147176(0x189) = CONST 
0x1790x147: JUMPI v147176(0x189) v147175
----------------------------------

Begin block 0x1710x4b2
prev = {'0x14f0x4b2', '0x17a0x4b2'}, next = {'0x17a0x4b2', '0x1890x4b2'}
----------------------------------
Block 0x1710x4b2
0x1710x4b2_0x0: v1714b2_0 = PHI v4b216f(0x0) v4b2184
0x1740x4b2: v4b2174 = LT v1714b2_0 v4b2160
0x1750x4b2: v4b2175 = ISZERO v4b2174
0x1760x4b2: v4b2176(0x189) = CONST 
0x1790x4b2: JUMPI v4b2176(0x189) v4b2175
----------------------------------

Begin block 0x17a0x147
prev = {'0x1710x147'}, next = {'0x1710x147'}
----------------------------------
Block 0x17a0x147
0x17a0x147_0x0: v17a147_0 = PHI v14716f(0x0) v147184
0x17c0x147: v14717c = ADD v17a147_0 v14716a
0x17d0x147: v14717d = MLOAD v14717c
0x1800x147: v147180 = ADD v17a147_0 v147167
0x1810x147: MSTORE v147180 v14717d
0x1820x147: v147182(0x20) = CONST 
0x1840x147: v147184 = ADD v147182(0x20) v17a147_0
0x1850x147: v147185(0x171) = CONST 
0x1880x147: JUMP v147185(0x171)
----------------------------------

Begin block 0x17a0x4b2
prev = {'0x1710x4b2'}, next = {'0x1710x4b2'}
----------------------------------
Block 0x17a0x4b2
0x17a0x4b2_0x0: v17a4b2_0 = PHI v4b216f(0x0) v4b2184
0x17c0x4b2: v4b217c = ADD v17a4b2_0 v4b216a
0x17d0x4b2: v4b217d = MLOAD v4b217c
0x1800x4b2: v4b2180 = ADD v17a4b2_0 v4b2167
0x1810x4b2: MSTORE v4b2180 v4b217d
0x1820x4b2: v4b2182(0x20) = CONST 
0x1840x4b2: v4b2184 = ADD v4b2182(0x20) v17a4b2_0
0x1850x4b2: v4b2185(0x171) = CONST 
0x1880x4b2: JUMP v4b2185(0x171)
----------------------------------

Begin block 0x1890x147
prev = {'0x1710x147'}, next = {'0x19d0x147', '0x1b60x147'}
----------------------------------
Block 0x1890x147
0x1920x147: v147192 = ADD v147160 v147167
0x1940x147: v147194(0x1f) = CONST 
0x1960x147: v147196 = AND v147194(0x1f) v147160
0x1980x147: v147198 = ISZERO v147196
0x1990x147: v147199(0x1b6) = CONST 
0x19c0x147: JUMPI v147199(0x1b6) v147198
----------------------------------

Begin block 0x1890x4b2
prev = {'0x1710x4b2'}, next = {'0x19d0x4b2', '0x1b60x4b2'}
----------------------------------
Block 0x1890x4b2
0x1920x4b2: v4b2192 = ADD v4b2160 v4b2167
0x1940x4b2: v4b2194(0x1f) = CONST 
0x1960x4b2: v4b2196 = AND v4b2194(0x1f) v4b2160
0x1980x4b2: v4b2198 = ISZERO v4b2196
0x1990x4b2: v4b2199(0x1b6) = CONST 
0x19c0x4b2: JUMPI v4b2199(0x1b6) v4b2198
----------------------------------

Begin block 0x19d0x147
prev = {'0x1890x147'}, next = {'0x1b60x147'}
----------------------------------
Block 0x19d0x147
0x19f0x147: v14719f = SUB v147192 v147196
0x1a10x147: v1471a1 = MLOAD v14719f
0x1a20x147: v1471a2(0x1) = CONST 
0x1a50x147: v1471a5(0x20) = CONST 
0x1a70x147: v1471a7 = SUB v1471a5(0x20) v147196
0x1a80x147: v1471a8(0x100) = CONST 
0x1ab0x147: v1471ab = EXP v1471a8(0x100) v1471a7
0x1ac0x147: v1471ac = SUB v1471ab v1471a2(0x1)
0x1ad0x147: v1471ad = NOT v1471ac
0x1ae0x147: v1471ae = AND v1471ad v1471a1
0x1b00x147: MSTORE v14719f v1471ae
0x1b10x147: v1471b1(0x20) = CONST 
0x1b30x147: v1471b3 = ADD v1471b1(0x20) v14719f
----------------------------------

Begin block 0x19d0x4b2
prev = {'0x1890x4b2'}, next = {'0x1b60x4b2'}
----------------------------------
Block 0x19d0x4b2
0x19f0x4b2: v4b219f = SUB v4b2192 v4b2196
0x1a10x4b2: v4b21a1 = MLOAD v4b219f
0x1a20x4b2: v4b21a2(0x1) = CONST 
0x1a50x4b2: v4b21a5(0x20) = CONST 
0x1a70x4b2: v4b21a7 = SUB v4b21a5(0x20) v4b2196
0x1a80x4b2: v4b21a8(0x100) = CONST 
0x1ab0x4b2: v4b21ab = EXP v4b21a8(0x100) v4b21a7
0x1ac0x4b2: v4b21ac = SUB v4b21ab v4b21a2(0x1)
0x1ad0x4b2: v4b21ad = NOT v4b21ac
0x1ae0x4b2: v4b21ae = AND v4b21ad v4b21a1
0x1b00x4b2: MSTORE v4b219f v4b21ae
0x1b10x4b2: v4b21b1(0x20) = CONST 
0x1b30x4b2: v4b21b3 = ADD v4b21b1(0x20) v4b219f
----------------------------------

Begin block 0x1b60x147
prev = {'0x19d0x147', '0x1890x147'}, next = {}
----------------------------------
Block 0x1b60x147
0x1b60x147_0x1: v1b6147_1 = PHI v147192 v1471b3
0x1bc0x147: v1471bc(0x40) = CONST 
0x1be0x147: v1471be = MLOAD v1471bc(0x40)
0x1c10x147: v1471c1 = SUB v1b6147_1 v1471be
0x1c30x147: RETURN v1471be v1471c1
----------------------------------

Begin block 0x1b60x4b2
prev = {'0x19d0x4b2', '0x1890x4b2'}, next = {}
----------------------------------
Block 0x1b60x4b2
0x1b60x4b2_0x1: v1b64b2_1 = PHI v4b2192 v4b21b3
0x1bc0x4b2: v4b21bc(0x40) = CONST 
0x1be0x4b2: v4b21be = MLOAD v4b21bc(0x40)
0x1c10x4b2: v4b21c1 = SUB v1b64b2_1 v4b21be
0x1c30x4b2: RETURN v4b21be v4b21c1
----------------------------------

Begin block 0x1c4
prev = {}, next = {'0x1d6', '0x1da'}
----------------------------------
function approve(address,uint256)()
Block 0x1c4
0x1c5: v1c5(0x1f0) = CONST 
0x1c8: v1c8(0x4) = CONST 
0x1cb: v1cb = CALLDATASIZE 
0x1cc: v1cc = SUB v1cb v1c8(0x4)
0x1cd: v1cd(0x40) = CONST 
0x1d0: v1d0 = LT v1cc v1cd(0x40)
0x1d1: v1d1 = ISZERO v1d0
0x1d2: v1d2(0x1da) = CONST 
0x1d5: JUMPI v1d2(0x1da) v1d1
----------------------------------

Begin block 0x1d6
prev = {'0x1c4'}, next = {}
----------------------------------
Block 0x1d6
0x1d6: v1d6(0x0) = CONST 
0x1d9: REVERT v1d6(0x0) v1d6(0x0)
----------------------------------

Begin block 0x1da
prev = {'0x1c4'}, next = {'0x7010x1c4'}
----------------------------------
Block 0x1da
0x1dc: v1dc(0x1) = CONST 
0x1de: v1de(0x1) = CONST 
0x1e0: v1e0(0xa0) = CONST 
0x1e2: v1e2(0x10000000000000000000000000000000000000000) = SHL v1e0(0xa0) v1de(0x1)
0x1e3: v1e3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1e2(0x10000000000000000000000000000000000000000) v1dc(0x1)
0x1e5: v1e5 = CALLDATALOAD v1c8(0x4)
0x1e6: v1e6 = AND v1e5 v1e3(0xffffffffffffffffffffffffffffffffffffffff)
0x1e8: v1e8(0x20) = CONST 
0x1ea: v1ea = ADD v1e8(0x20) v1c8(0x4)
0x1eb: v1eb = CALLDATALOAD v1ea
0x1ec: v1ec(0x701) = CONST 
0x1ef: JUMP v1ec(0x701)
----------------------------------

Begin block 0x1f00x1c4
prev = {'0x70e0x1c4'}, next = {}
----------------------------------
Block 0x1f00x1c4
0x1f10x1c4: v1c41f1(0x40) = CONST 
0x1f40x1c4: v1c41f4 = MLOAD v1c41f1(0x40)
0x1f60x1c4: v1c41f6 = ISZERO v1c4710(0x1)
0x1f70x1c4: v1c41f7 = ISZERO v1c41f6
0x1f90x1c4: MSTORE v1c41f4 v1c41f7
0x1fa0x1c4: v1c41fa = MLOAD v1c41f1(0x40)
0x1fe0x1c4: v1c41fe = SUB v1c41f4 v1c41fa
0x1ff0x1c4: v1c41ff(0x20) = CONST 
0x2010x1c4: v1c4201 = ADD v1c41ff(0x20) v1c41fe
0x2030x1c4: RETURN v1c41fa v1c4201
----------------------------------

Begin block 0x1f00x21e
prev = {'0x76a0x21e'}, next = {}
----------------------------------
Block 0x1f00x21e
0x1f10x21e: v21e1f1(0x40) = CONST 
0x1f40x21e: v21e1f4 = MLOAD v21e1f1(0x40)
0x1f60x21e: v21e1f6 = ISZERO v21e76c(0x1)
0x1f70x21e: v21e1f7 = ISZERO v21e1f6
0x1f90x21e: MSTORE v21e1f4 v21e1f7
0x1fa0x21e: v21e1fa = MLOAD v21e1f1(0x40)
0x1fe0x21e: v21e1fe = SUB v21e1f4 v21e1fa
0x1ff0x21e: v21e1ff(0x20) = CONST 
0x2010x21e: v21e201 = ADD v21e1ff(0x20) v21e1fe
0x2030x21e: RETURN v21e1fa v21e201
----------------------------------

Begin block 0x1f00x272
prev = {'0x70e0x272'}, next = {}
----------------------------------
Block 0x1f00x272
0x1f10x272: v2721f1(0x40) = CONST 
0x1f40x272: v2721f4 = MLOAD v2721f1(0x40)
0x1f60x272: v2721f6 = ISZERO v272710(0x1)
0x1f70x272: v2721f7 = ISZERO v2721f6
0x1f90x272: MSTORE v2721f4 v2721f7
0x1fa0x272: v2721fa = MLOAD v2721f1(0x40)
0x1fe0x272: v2721fe = SUB v2721f4 v2721fa
0x1ff0x272: v2721ff(0x20) = CONST 
0x2010x272: v272201 = ADD v2721ff(0x20) v2721fe
0x2030x272: RETURN v2721fa v272201
----------------------------------

Begin block 0x1f00x29e
prev = {'0x70e0x29e'}, next = {}
----------------------------------
Block 0x1f00x29e
0x1f10x29e: v29e1f1(0x40) = CONST 
0x1f40x29e: v29e1f4 = MLOAD v29e1f1(0x40)
0x1f60x29e: v29e1f6 = ISZERO v29e710(0x1)
0x1f70x29e: v29e1f7 = ISZERO v29e1f6
0x1f90x29e: MSTORE v29e1f4 v29e1f7
0x1fa0x29e: v29e1fa = MLOAD v29e1f1(0x40)
0x1fe0x29e: v29e1fe = SUB v29e1f4 v29e1fa
0x1ff0x29e: v29e1ff(0x20) = CONST 
0x2010x29e: v29e201 = ADD v29e1ff(0x20) v29e1fe
0x2030x29e: RETURN v29e1fa v29e201
----------------------------------

Begin block 0x1f00x2ca
prev = {'0x86b'}, next = {}
----------------------------------
Block 0x1f00x2ca
0x1f10x2ca: v2ca1f1(0x40) = CONST 
0x1f40x2ca: v2ca1f4 = MLOAD v2ca1f1(0x40)
0x1f60x2ca: v2ca1f6 = ISZERO v86d(0x1)
0x1f70x2ca: v2ca1f7 = ISZERO v2ca1f6
0x1f90x2ca: MSTORE v2ca1f4 v2ca1f7
0x1fa0x2ca: v2ca1fa = MLOAD v2ca1f1(0x40)
0x1fe0x2ca: v2ca1fe = SUB v2ca1f4 v2ca1fa
0x1ff0x2ca: v2ca1ff(0x20) = CONST 
0x2010x2ca: v2ca201 = ADD v2ca1ff(0x20) v2ca1fe
0x2030x2ca: RETURN v2ca1fa v2ca201
----------------------------------

Begin block 0x1f00x3c8
prev = {'0x997'}, next = {}
----------------------------------
Block 0x1f00x3c8
0x1f10x3c8: v3c81f1(0x40) = CONST 
0x1f40x3c8: v3c81f4 = MLOAD v3c81f1(0x40)
0x1f60x3c8: v3c81f6 = ISZERO v999(0x1)
0x1f70x3c8: v3c81f7 = ISZERO v3c81f6
0x1f90x3c8: MSTORE v3c81f4 v3c81f7
0x1fa0x3c8: v3c81fa = MLOAD v3c81f1(0x40)
0x1fe0x3c8: v3c81fe = SUB v3c81f4 v3c81fa
0x1ff0x3c8: v3c81ff(0x20) = CONST 
0x2010x3c8: v3c8201 = ADD v3c81ff(0x20) v3c81fe
0x2030x3c8: RETURN v3c81fa v3c8201
----------------------------------

Begin block 0x1f00x4aa
prev = {'0x4aa'}, next = {}
----------------------------------
Block 0x1f00x4aa
0x1f10x4aa: v4aa1f1(0x40) = CONST 
0x1f40x4aa: v4aa1f4 = MLOAD v4aa1f1(0x40)
0x1f60x4aa: v4aa1f6 = ISZERO v4b1_0
0x1f70x4aa: v4aa1f7 = ISZERO v4aa1f6
0x1f90x4aa: MSTORE v4aa1f4 v4aa1f7
0x1fa0x4aa: v4aa1fa = MLOAD v4aa1f1(0x40)
0x1fe0x4aa: v4aa1fe = SUB v4aa1f4 v4aa1fa
0x1ff0x4aa: v4aa1ff(0x20) = CONST 
0x2010x4aa: v4aa201 = ADD v4aa1ff(0x20) v4aa1fe
0x2030x4aa: RETURN v4aa1fa v4aa201
----------------------------------

Begin block 0x1f00x4e8
prev = {'0x70e0x4e8'}, next = {}
----------------------------------
Block 0x1f00x4e8
0x1f10x4e8: v4e81f1(0x40) = CONST 
0x1f40x4e8: v4e81f4 = MLOAD v4e81f1(0x40)
0x1f60x4e8: v4e81f6 = ISZERO v4e8710(0x1)
0x1f70x4e8: v4e81f7 = ISZERO v4e81f6
0x1f90x4e8: MSTORE v4e81f4 v4e81f7
0x1fa0x4e8: v4e81fa = MLOAD v4e81f1(0x40)
0x1fe0x4e8: v4e81fe = SUB v4e81f4 v4e81fa
0x1ff0x4e8: v4e81ff(0x20) = CONST 
0x2010x4e8: v4e8201 = ADD v4e81ff(0x20) v4e81fe
0x2030x4e8: RETURN v4e81fa v4e8201
----------------------------------

Begin block 0x1f00x514
prev = {'0x70e0x514'}, next = {}
----------------------------------
Block 0x1f00x514
0x1f10x514: v5141f1(0x40) = CONST 
0x1f40x514: v5141f4 = MLOAD v5141f1(0x40)
0x1f60x514: v5141f6 = ISZERO v514710(0x1)
0x1f70x514: v5141f7 = ISZERO v5141f6
0x1f90x514: MSTORE v5141f4 v5141f7
0x1fa0x514: v5141fa = MLOAD v5141f1(0x40)
0x1fe0x514: v5141fe = SUB v5141f4 v5141fa
0x1ff0x514: v5141ff(0x20) = CONST 
0x2010x514: v514201 = ADD v5141ff(0x20) v5141fe
0x2030x514: RETURN v5141fa v514201
----------------------------------

Begin block 0x1f00x540
prev = {'0xad50x540'}, next = {}
----------------------------------
Block 0x1f00x540
0x1f10x540: v5401f1(0x40) = CONST 
0x1f40x540: v5401f4 = MLOAD v5401f1(0x40)
0x1f60x540: v5401f6 = ISZERO v540ad4_0
0x1f70x540: v5401f7 = ISZERO v5401f6
0x1f90x540: MSTORE v5401f4 v5401f7
0x1fa0x540: v5401fa = MLOAD v5401f1(0x40)
0x1fe0x540: v5401fe = SUB v5401f4 v5401fa
0x1ff0x540: v5401ff(0x20) = CONST 
0x2010x540: v540201 = ADD v5401ff(0x20) v5401fe
0x2030x540: RETURN v5401fa v540201
----------------------------------

Begin block 0x1f00x566
prev = {'0x76a0x566'}, next = {}
----------------------------------
Block 0x1f00x566
0x1f10x566: v5661f1(0x40) = CONST 
0x1f40x566: v5661f4 = MLOAD v5661f1(0x40)
0x1f60x566: v5661f6 = ISZERO v56676c(0x1)
0x1f70x566: v5661f7 = ISZERO v5661f6
0x1f90x566: MSTORE v5661f4 v5661f7
0x1fa0x566: v5661fa = MLOAD v5661f1(0x40)
0x1fe0x566: v5661fe = SUB v5661f4 v5661fa
0x1ff0x566: v5661ff(0x20) = CONST 
0x2010x566: v566201 = ADD v5661ff(0x20) v5661fe
0x2030x566: RETURN v5661fa v566201
----------------------------------

Begin block 0x204
prev = {}, next = {'0x717'}
----------------------------------
function totalSupply()()
Block 0x204
0x205: v205(0x20c) = CONST 
0x208: v208(0x717) = CONST 
0x20b: JUMP v208(0x717)
----------------------------------

Begin block 0x20c0x204
prev = {'0x717'}, next = {}
----------------------------------
Block 0x20c0x204
0x20d0x204: v20420d(0x40) = CONST 
0x2100x204: v204210 = MLOAD v20420d(0x40)
0x2130x204: MSTORE v204210 v71a
0x2140x204: v204214 = MLOAD v20420d(0x40)
0x2180x204: v204218 = SUB v204210 v204214
0x2190x204: v204219(0x20) = CONST 
0x21b0x204: v20421b = ADD v204219(0x20) v204218
0x21d0x204: RETURN v204214 v20421b
----------------------------------

Begin block 0x20c0x398
prev = {'0x878'}, next = {}
----------------------------------
Block 0x20c0x398
0x20d0x398: v39820d(0x40) = CONST 
0x2100x398: v398210 = MLOAD v39820d(0x40)
0x2130x398: MSTORE v398210 v890
0x2140x398: v398214 = MLOAD v39820d(0x40)
0x2180x398: v398218 = SUB v398210 v398214
0x2190x398: v398219(0x20) = CONST 
0x21b0x398: v39821b = ADD v398219(0x20) v398218
0x21d0x398: RETURN v398214 v39821b
----------------------------------

Begin block 0x20c0x61f
prev = {'0xbee'}, next = {}
----------------------------------
Block 0x20c0x61f
0x20d0x61f: v61f20d(0x40) = CONST 
0x2100x61f: v61f210 = MLOAD v61f20d(0x40)
0x2130x61f: MSTORE v61f210 vc16
0x2140x61f: v61f214 = MLOAD v61f20d(0x40)
0x2180x61f: v61f218 = SUB v61f210 v61f214
0x2190x61f: v61f219(0x20) = CONST 
0x21b0x61f: v61f21b = ADD v61f219(0x20) v61f218
0x21d0x61f: RETURN v61f214 v61f21b
----------------------------------

Begin block 0x21e
prev = {}, next = {'0x234', '0x230'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x21e
0x21f: v21f(0x1f0) = CONST 
0x222: v222(0x4) = CONST 
0x225: v225 = CALLDATASIZE 
0x226: v226 = SUB v225 v222(0x4)
0x227: v227(0x60) = CONST 
0x22a: v22a = LT v226 v227(0x60)
0x22b: v22b = ISZERO v22a
0x22c: v22c(0x234) = CONST 
0x22f: JUMPI v22c(0x234) v22b
----------------------------------

Begin block 0x230
prev = {'0x21e'}, next = {}
----------------------------------
Block 0x230
0x230: v230(0x0) = CONST 
0x233: REVERT v230(0x0) v230(0x0)
----------------------------------

Begin block 0x234
prev = {'0x21e'}, next = {'0x71d0x21e'}
----------------------------------
Block 0x234
0x236: v236(0x1) = CONST 
0x238: v238(0x1) = CONST 
0x23a: v23a(0xa0) = CONST 
0x23c: v23c(0x10000000000000000000000000000000000000000) = SHL v23a(0xa0) v238(0x1)
0x23d: v23d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v23c(0x10000000000000000000000000000000000000000) v236(0x1)
0x23f: v23f = CALLDATALOAD v222(0x4)
0x241: v241 = AND v23d(0xffffffffffffffffffffffffffffffffffffffff) v23f
0x243: v243(0x20) = CONST 
0x246: v246 = ADD v222(0x4) v243(0x20)
0x247: v247 = CALLDATALOAD v246
0x24a: v24a = AND v23d(0xffffffffffffffffffffffffffffffffffffffff) v247
0x24c: v24c(0x40) = CONST 
0x24e: v24e = ADD v24c(0x40) v222(0x4)
0x24f: v24f = CALLDATALOAD v24e
0x250: v250(0x71d) = CONST 
0x253: JUMP v250(0x71d)
----------------------------------

Begin block 0x254
prev = {}, next = {'0x774'}
----------------------------------
function decimals()()
Block 0x254
0x255: v255(0x25c) = CONST 
0x258: v258(0x774) = CONST 
0x25b: JUMP v258(0x774)
----------------------------------

Begin block 0x25c
prev = {'0x774'}, next = {}
----------------------------------
Block 0x25c
0x25d: v25d(0x40) = CONST 
0x260: v260 = MLOAD v25d(0x40)
0x261: v261(0xff) = CONST 
0x265: v265 = AND v77a v261(0xff)
0x267: MSTORE v260 v265
0x268: v268 = MLOAD v25d(0x40)
0x26c: v26c = SUB v260 v268
0x26d: v26d(0x20) = CONST 
0x26f: v26f = ADD v26d(0x20) v26c
0x271: RETURN v268 v26f
----------------------------------

Begin block 0x272
prev = {}, next = {'0x288', '0x284'}
----------------------------------
function increaseAllowance(address,uint256)()
Block 0x272
0x273: v273(0x1f0) = CONST 
0x276: v276(0x4) = CONST 
0x279: v279 = CALLDATASIZE 
0x27a: v27a = SUB v279 v276(0x4)
0x27b: v27b(0x40) = CONST 
0x27e: v27e = LT v27a v27b(0x40)
0x27f: v27f = ISZERO v27e
0x280: v280(0x288) = CONST 
0x283: JUMPI v280(0x288) v27f
----------------------------------

Begin block 0x284
prev = {'0x272'}, next = {}
----------------------------------
Block 0x284
0x284: v284(0x0) = CONST 
0x287: REVERT v284(0x0) v284(0x0)
----------------------------------

Begin block 0x288
prev = {'0x272'}, next = {'0x77d'}
----------------------------------
Block 0x288
0x28a: v28a(0x1) = CONST 
0x28c: v28c(0x1) = CONST 
0x28e: v28e(0xa0) = CONST 
0x290: v290(0x10000000000000000000000000000000000000000) = SHL v28e(0xa0) v28c(0x1)
0x291: v291(0xffffffffffffffffffffffffffffffffffffffff) = SUB v290(0x10000000000000000000000000000000000000000) v28a(0x1)
0x293: v293 = CALLDATALOAD v276(0x4)
0x294: v294 = AND v293 v291(0xffffffffffffffffffffffffffffffffffffffff)
0x296: v296(0x20) = CONST 
0x298: v298 = ADD v296(0x20) v276(0x4)
0x299: v299 = CALLDATALOAD v298
0x29a: v29a(0x77d) = CONST 
0x29d: JUMP v29a(0x77d)
----------------------------------

Begin block 0x29e
prev = {}, next = {'0x2b0', '0x2b4'}
----------------------------------
function mint(address,uint256)()
Block 0x29e
0x29f: v29f(0x1f0) = CONST 
0x2a2: v2a2(0x4) = CONST 
0x2a5: v2a5 = CALLDATASIZE 
0x2a6: v2a6 = SUB v2a5 v2a2(0x4)
0x2a7: v2a7(0x40) = CONST 
0x2aa: v2aa = LT v2a6 v2a7(0x40)
0x2ab: v2ab = ISZERO v2aa
0x2ac: v2ac(0x2b4) = CONST 
0x2af: JUMPI v2ac(0x2b4) v2ab
----------------------------------

Begin block 0x2b0
prev = {'0x29e'}, next = {}
----------------------------------
Block 0x2b0
0x2b0: v2b0(0x0) = CONST 
0x2b3: REVERT v2b0(0x0) v2b0(0x0)
----------------------------------

Begin block 0x2b4
prev = {'0x29e'}, next = {'0x7b9'}
----------------------------------
Block 0x2b4
0x2b6: v2b6(0x1) = CONST 
0x2b8: v2b8(0x1) = CONST 
0x2ba: v2ba(0xa0) = CONST 
0x2bc: v2bc(0x10000000000000000000000000000000000000000) = SHL v2ba(0xa0) v2b8(0x1)
0x2bd: v2bd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2bc(0x10000000000000000000000000000000000000000) v2b6(0x1)
0x2bf: v2bf = CALLDATALOAD v2a2(0x4)
0x2c0: v2c0 = AND v2bf v2bd(0xffffffffffffffffffffffffffffffffffffffff)
0x2c2: v2c2(0x20) = CONST 
0x2c4: v2c4 = ADD v2c2(0x20) v2a2(0x4)
0x2c5: v2c5 = CALLDATALOAD v2c4
0x2c6: v2c6(0x7b9) = CONST 
0x2c9: JUMP v2c6(0x7b9)
----------------------------------

Begin block 0x2ca
prev = {}, next = {'0x2e0', '0x2dc'}
----------------------------------
function batchTransferFrom(address,address[],uint256[])()
Block 0x2ca
0x2cb: v2cb(0x1f0) = CONST 
0x2ce: v2ce(0x4) = CONST 
0x2d1: v2d1 = CALLDATASIZE 
0x2d2: v2d2 = SUB v2d1 v2ce(0x4)
0x2d3: v2d3(0x60) = CONST 
0x2d6: v2d6 = LT v2d2 v2d3(0x60)
0x2d7: v2d7 = ISZERO v2d6
0x2d8: v2d8(0x2e0) = CONST 
0x2db: JUMPI v2d8(0x2e0) v2d7
----------------------------------

Begin block 0x2dc
prev = {'0x2ca'}, next = {}
----------------------------------
Block 0x2dc
0x2dc: v2dc(0x0) = CONST 
0x2df: REVERT v2dc(0x0) v2dc(0x0)
----------------------------------

Begin block 0x2e0
prev = {'0x2ca'}, next = {'0x30a', '0x306'}
----------------------------------
Block 0x2e0
0x2e1: v2e1(0x1) = CONST 
0x2e3: v2e3(0x1) = CONST 
0x2e5: v2e5(0xa0) = CONST 
0x2e7: v2e7(0x10000000000000000000000000000000000000000) = SHL v2e5(0xa0) v2e3(0x1)
0x2e8: v2e8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2e7(0x10000000000000000000000000000000000000000) v2e1(0x1)
0x2ea: v2ea = CALLDATALOAD v2ce(0x4)
0x2eb: v2eb = AND v2ea v2e8(0xffffffffffffffffffffffffffffffffffffffff)
0x2ef: v2ef = ADD v2ce(0x4) v2d2
0x2f1: v2f1(0x40) = CONST 
0x2f4: v2f4 = ADD v2ce(0x4) v2f1(0x40)
0x2f5: v2f5(0x20) = CONST 
0x2f8: v2f8 = ADD v2ce(0x4) v2f5(0x20)
0x2f9: v2f9 = CALLDATALOAD v2f8
0x2fa: v2fa(0x1) = CONST 
0x2fc: v2fc(0x20) = CONST 
0x2fe: v2fe(0x100000000) = SHL v2fc(0x20) v2fa(0x1)
0x300: v300 = GT v2f9 v2fe(0x100000000)
0x301: v301 = ISZERO v300
0x302: v302(0x30a) = CONST 
0x305: JUMPI v302(0x30a) v301
----------------------------------

Begin block 0x306
prev = {'0x2e0'}, next = {}
----------------------------------
Block 0x306
0x306: v306(0x0) = CONST 
0x309: REVERT v306(0x0) v306(0x0)
----------------------------------

Begin block 0x30a
prev = {'0x2e0'}, next = {'0x318', '0x31c'}
----------------------------------
Block 0x30a
0x30c: v30c = ADD v2ce(0x4) v2f9
0x30e: v30e(0x20) = CONST 
0x311: v311 = ADD v30c v30e(0x20)
0x312: v312 = GT v311 v2ef
0x313: v313 = ISZERO v312
0x314: v314(0x31c) = CONST 
0x317: JUMPI v314(0x31c) v313
----------------------------------

Begin block 0x318
prev = {'0x30a'}, next = {}
----------------------------------
Block 0x318
0x318: v318(0x0) = CONST 
0x31b: REVERT v318(0x0) v318(0x0)
----------------------------------

Begin block 0x31c
prev = {'0x30a'}, next = {'0x339', '0x33d'}
----------------------------------
Block 0x31c
0x31e: v31e = CALLDATALOAD v30c
0x320: v320(0x20) = CONST 
0x322: v322 = ADD v320(0x20) v30c
0x325: v325(0x20) = CONST 
0x328: v328 = MUL v31e v325(0x20)
0x32a: v32a = ADD v322 v328
0x32b: v32b = GT v32a v2ef
0x32c: v32c(0x1) = CONST 
0x32e: v32e(0x20) = CONST 
0x330: v330(0x100000000) = SHL v32e(0x20) v32c(0x1)
0x332: v332 = GT v31e v330(0x100000000)
0x333: v333 = OR v332 v32b
0x334: v334 = ISZERO v333
0x335: v335(0x33d) = CONST 
0x338: JUMPI v335(0x33d) v334
----------------------------------

Begin block 0x339
prev = {'0x31c'}, next = {}
----------------------------------
Block 0x339
0x339: v339(0x0) = CONST 
0x33c: REVERT v339(0x0) v339(0x0)
----------------------------------

Begin block 0x33d
prev = {'0x31c'}, next = {'0x35a', '0x356'}
----------------------------------
Block 0x33d
0x344: v344(0x20) = CONST 
0x347: v347 = ADD v2f4 v344(0x20)
0x349: v349 = CALLDATALOAD v2f4
0x34a: v34a(0x1) = CONST 
0x34c: v34c(0x20) = CONST 
0x34e: v34e(0x100000000) = SHL v34c(0x20) v34a(0x1)
0x350: v350 = GT v349 v34e(0x100000000)
0x351: v351 = ISZERO v350
0x352: v352(0x35a) = CONST 
0x355: JUMPI v352(0x35a) v351
----------------------------------

Begin block 0x356
prev = {'0x33d'}, next = {}
----------------------------------
Block 0x356
0x356: v356(0x0) = CONST 
0x359: REVERT v356(0x0) v356(0x0)
----------------------------------

Begin block 0x35a
prev = {'0x33d'}, next = {'0x36c', '0x368'}
----------------------------------
Block 0x35a
0x35c: v35c = ADD v2ce(0x4) v349
0x35e: v35e(0x20) = CONST 
0x361: v361 = ADD v35c v35e(0x20)
0x362: v362 = GT v361 v2ef
0x363: v363 = ISZERO v362
0x364: v364(0x36c) = CONST 
0x367: JUMPI v364(0x36c) v363
----------------------------------

Begin block 0x368
prev = {'0x35a'}, next = {}
----------------------------------
Block 0x368
0x368: v368(0x0) = CONST 
0x36b: REVERT v368(0x0) v368(0x0)
----------------------------------

Begin block 0x36c
prev = {'0x35a'}, next = {'0x389', '0x38d'}
----------------------------------
Block 0x36c
0x36e: v36e = CALLDATALOAD v35c
0x370: v370(0x20) = CONST 
0x372: v372 = ADD v370(0x20) v35c
0x375: v375(0x20) = CONST 
0x378: v378 = MUL v36e v375(0x20)
0x37a: v37a = ADD v372 v378
0x37b: v37b = GT v37a v2ef
0x37c: v37c(0x1) = CONST 
0x37e: v37e(0x20) = CONST 
0x380: v380(0x100000000) = SHL v37e(0x20) v37c(0x1)
0x382: v382 = GT v36e v380(0x100000000)
0x383: v383 = OR v382 v37b
0x384: v384 = ISZERO v383
0x385: v385(0x38d) = CONST 
0x388: JUMPI v385(0x38d) v384
----------------------------------

Begin block 0x389
prev = {'0x36c'}, next = {}
----------------------------------
Block 0x389
0x389: v389(0x0) = CONST 
0x38c: REVERT v389(0x0) v389(0x0)
----------------------------------

Begin block 0x38d
prev = {'0x36c'}, next = {'0x809'}
----------------------------------
Block 0x38d
0x394: v394(0x809) = CONST 
0x397: JUMP v394(0x809)
----------------------------------

Begin block 0x398
prev = {}, next = {'0x3ae', '0x3aa'}
----------------------------------
function balanceOf(address)()
Block 0x398
0x399: v399(0x20c) = CONST 
0x39c: v39c(0x4) = CONST 
0x39f: v39f = CALLDATASIZE 
0x3a0: v3a0 = SUB v39f v39c(0x4)
0x3a1: v3a1(0x20) = CONST 
0x3a4: v3a4 = LT v3a0 v3a1(0x20)
0x3a5: v3a5 = ISZERO v3a4
0x3a6: v3a6(0x3ae) = CONST 
0x3a9: JUMPI v3a6(0x3ae) v3a5
----------------------------------

Begin block 0x3aa
prev = {'0x398'}, next = {}
----------------------------------
Block 0x3aa
0x3aa: v3aa(0x0) = CONST 
0x3ad: REVERT v3aa(0x0) v3aa(0x0)
----------------------------------

Begin block 0x3ae
prev = {'0x398'}, next = {'0x878'}
----------------------------------
Block 0x3ae
0x3b0: v3b0 = CALLDATALOAD v39c(0x4)
0x3b1: v3b1(0x1) = CONST 
0x3b3: v3b3(0x1) = CONST 
0x3b5: v3b5(0xa0) = CONST 
0x3b7: v3b7(0x10000000000000000000000000000000000000000) = SHL v3b5(0xa0) v3b3(0x1)
0x3b8: v3b8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3b7(0x10000000000000000000000000000000000000000) v3b1(0x1)
0x3b9: v3b9 = AND v3b8(0xffffffffffffffffffffffffffffffffffffffff) v3b0
0x3ba: v3ba(0x878) = CONST 
0x3bd: JUMP v3ba(0x878)
----------------------------------

Begin block 0x3be
prev = {}, next = {'0x893'}
----------------------------------
function renounceOwnership()()
Block 0x3be
0x3bf: v3bf(0x3c6) = CONST 
0x3c2: v3c2(0x893) = CONST 
0x3c5: JUMP v3c2(0x893)
----------------------------------

Begin block 0x3c60x3be
prev = {'0x8ec'}, next = {}
----------------------------------
Block 0x3c60x3be
0x3c70x3be: STOP 
----------------------------------

Begin block 0x3c60x4ba
prev = {'0xa6b0x4ba'}, next = {}
----------------------------------
Block 0x3c60x4ba
0x3c70x4ba: STOP 
----------------------------------

Begin block 0x3c60x4e0
prev = {'0xa77'}, next = {}
----------------------------------
Block 0x3c60x4e0
0x3c70x4e0: STOP 
----------------------------------

Begin block 0x3c60x64d
prev = {'0xa6b0x64d'}, next = {}
----------------------------------
Block 0x3c60x64d
0x3c70x64d: STOP 
----------------------------------

Begin block 0x3c8
prev = {}, next = {'0x3da', '0x3de'}
----------------------------------
function batchTransfer(address[],uint256[])()
Block 0x3c8
0x3c9: v3c9(0x1f0) = CONST 
0x3cc: v3cc(0x4) = CONST 
0x3cf: v3cf = CALLDATASIZE 
0x3d0: v3d0 = SUB v3cf v3cc(0x4)
0x3d1: v3d1(0x40) = CONST 
0x3d4: v3d4 = LT v3d0 v3d1(0x40)
0x3d5: v3d5 = ISZERO v3d4
0x3d6: v3d6(0x3de) = CONST 
0x3d9: JUMPI v3d6(0x3de) v3d5
----------------------------------

Begin block 0x3da
prev = {'0x3c8'}, next = {}
----------------------------------
Block 0x3da
0x3da: v3da(0x0) = CONST 
0x3dd: REVERT v3da(0x0) v3da(0x0)
----------------------------------

Begin block 0x3de
prev = {'0x3c8'}, next = {'0x3f8', '0x3f4'}
----------------------------------
Block 0x3de
0x3e0: v3e0 = ADD v3cc(0x4) v3d0
0x3e2: v3e2(0x20) = CONST 
0x3e5: v3e5 = ADD v3cc(0x4) v3e2(0x20)
0x3e7: v3e7 = CALLDATALOAD v3cc(0x4)
0x3e8: v3e8(0x1) = CONST 
0x3ea: v3ea(0x20) = CONST 
0x3ec: v3ec(0x100000000) = SHL v3ea(0x20) v3e8(0x1)
0x3ee: v3ee = GT v3e7 v3ec(0x100000000)
0x3ef: v3ef = ISZERO v3ee
0x3f0: v3f0(0x3f8) = CONST 
0x3f3: JUMPI v3f0(0x3f8) v3ef
----------------------------------

Begin block 0x3f4
prev = {'0x3de'}, next = {}
----------------------------------
Block 0x3f4
0x3f4: v3f4(0x0) = CONST 
0x3f7: REVERT v3f4(0x0) v3f4(0x0)
----------------------------------

Begin block 0x3f8
prev = {'0x3de'}, next = {'0x40a', '0x406'}
----------------------------------
Block 0x3f8
0x3fa: v3fa = ADD v3cc(0x4) v3e7
0x3fc: v3fc(0x20) = CONST 
0x3ff: v3ff = ADD v3fa v3fc(0x20)
0x400: v400 = GT v3ff v3e0
0x401: v401 = ISZERO v400
0x402: v402(0x40a) = CONST 
0x405: JUMPI v402(0x40a) v401
----------------------------------

Begin block 0x406
prev = {'0x3f8'}, next = {}
----------------------------------
Block 0x406
0x406: v406(0x0) = CONST 
0x409: REVERT v406(0x0) v406(0x0)
----------------------------------

Begin block 0x40a
prev = {'0x3f8'}, next = {'0x42b', '0x427'}
----------------------------------
Block 0x40a
0x40c: v40c = CALLDATALOAD v3fa
0x40e: v40e(0x20) = CONST 
0x410: v410 = ADD v40e(0x20) v3fa
0x413: v413(0x20) = CONST 
0x416: v416 = MUL v40c v413(0x20)
0x418: v418 = ADD v410 v416
0x419: v419 = GT v418 v3e0
0x41a: v41a(0x1) = CONST 
0x41c: v41c(0x20) = CONST 
0x41e: v41e(0x100000000) = SHL v41c(0x20) v41a(0x1)
0x420: v420 = GT v40c v41e(0x100000000)
0x421: v421 = OR v420 v419
0x422: v422 = ISZERO v421
0x423: v423(0x42b) = CONST 
0x426: JUMPI v423(0x42b) v422
----------------------------------

Begin block 0x427
prev = {'0x40a'}, next = {}
----------------------------------
Block 0x427
0x427: v427(0x0) = CONST 
0x42a: REVERT v427(0x0) v427(0x0)
----------------------------------

Begin block 0x42b
prev = {'0x40a'}, next = {'0x448', '0x444'}
----------------------------------
Block 0x42b
0x432: v432(0x20) = CONST 
0x435: v435 = ADD v3e5 v432(0x20)
0x437: v437 = CALLDATALOAD v3e5
0x438: v438(0x1) = CONST 
0x43a: v43a(0x20) = CONST 
0x43c: v43c(0x100000000) = SHL v43a(0x20) v438(0x1)
0x43e: v43e = GT v437 v43c(0x100000000)
0x43f: v43f = ISZERO v43e
0x440: v440(0x448) = CONST 
0x443: JUMPI v440(0x448) v43f
----------------------------------

Begin block 0x444
prev = {'0x42b'}, next = {}
----------------------------------
Block 0x444
0x444: v444(0x0) = CONST 
0x447: REVERT v444(0x0) v444(0x0)
----------------------------------

Begin block 0x448
prev = {'0x42b'}, next = {'0x456', '0x45a'}
----------------------------------
Block 0x448
0x44a: v44a = ADD v3cc(0x4) v437
0x44c: v44c(0x20) = CONST 
0x44f: v44f = ADD v44a v44c(0x20)
0x450: v450 = GT v44f v3e0
0x451: v451 = ISZERO v450
0x452: v452(0x45a) = CONST 
0x455: JUMPI v452(0x45a) v451
----------------------------------

Begin block 0x456
prev = {'0x448'}, next = {}
----------------------------------
Block 0x456
0x456: v456(0x0) = CONST 
0x459: REVERT v456(0x0) v456(0x0)
----------------------------------

Begin block 0x45a
prev = {'0x448'}, next = {'0x47b', '0x477'}
----------------------------------
Block 0x45a
0x45c: v45c = CALLDATALOAD v44a
0x45e: v45e(0x20) = CONST 
0x460: v460 = ADD v45e(0x20) v44a
0x463: v463(0x20) = CONST 
0x466: v466 = MUL v45c v463(0x20)
0x468: v468 = ADD v460 v466
0x469: v469 = GT v468 v3e0
0x46a: v46a(0x1) = CONST 
0x46c: v46c(0x20) = CONST 
0x46e: v46e(0x100000000) = SHL v46c(0x20) v46a(0x1)
0x470: v470 = GT v45c v46e(0x100000000)
0x471: v471 = OR v470 v469
0x472: v472 = ISZERO v471
0x473: v473(0x47b) = CONST 
0x476: JUMPI v473(0x47b) v472
----------------------------------

Begin block 0x477
prev = {'0x45a'}, next = {}
----------------------------------
Block 0x477
0x477: v477(0x0) = CONST 
0x47a: REVERT v477(0x0) v477(0x0)
----------------------------------

Begin block 0x47b
prev = {'0x45a'}, next = {'0x936'}
----------------------------------
Block 0x47b
0x482: v482(0x936) = CONST 
0x485: JUMP v482(0x936)
----------------------------------

Begin block 0x486
prev = {}, next = {'0x9a3'}
----------------------------------
function owner()()
Block 0x486
0x487: v487(0x48e) = CONST 
0x48a: v48a(0x9a3) = CONST 
0x48d: JUMP v48a(0x9a3)
----------------------------------

Begin block 0x48e
prev = {'0x9a3'}, next = {}
----------------------------------
Block 0x48e
0x48f: v48f(0x40) = CONST 
0x492: v492 = MLOAD v48f(0x40)
0x493: v493(0x1) = CONST 
0x495: v495(0x1) = CONST 
0x497: v497(0xa0) = CONST 
0x499: v499(0x10000000000000000000000000000000000000000) = SHL v497(0xa0) v495(0x1)
0x49a: v49a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v499(0x10000000000000000000000000000000000000000) v493(0x1)
0x49d: v49d = AND v9af v49a(0xffffffffffffffffffffffffffffffffffffffff)
0x49f: MSTORE v492 v49d
0x4a0: v4a0 = MLOAD v48f(0x40)
0x4a4: v4a4 = SUB v492 v4a0
0x4a5: v4a5(0x20) = CONST 
0x4a7: v4a7 = ADD v4a5(0x20) v4a4
0x4a9: RETURN v4a0 v4a7
----------------------------------

Begin block 0x4aa
prev = {}, next = {'0x1f00x4aa'}
----------------------------------
function isOwner()()
Block 0x4aa
0x4ab: v4ab(0x1f0) = CONST 
0x4ae: v4ae(0x9b2) = CONST 
0x4b1: v4b1_0 = CALLPRIVATE v4ae(0x9b2) v4ab(0x1f0)
----------------------------------

Begin block 0x4b2
prev = {}, next = {'0x14f0x4b2'}
----------------------------------
function symbol()()
Block 0x4b2
0x4b3: v4b3(0x14f) = CONST 
0x4b6: v4b6(0x9c3) = CONST 
0x4b9: v4b9_0, v4b9_1 = CALLPRIVATE v4b6(0x9c3) v4b3(0x14f)
----------------------------------

Begin block 0x4ba
prev = {}, next = {'0x4cc', '0x4d0'}
----------------------------------
function addMinter(address)()
Block 0x4ba
0x4bb: v4bb(0x3c6) = CONST 
0x4be: v4be(0x4) = CONST 
0x4c1: v4c1 = CALLDATASIZE 
0x4c2: v4c2 = SUB v4c1 v4be(0x4)
0x4c3: v4c3(0x20) = CONST 
0x4c6: v4c6 = LT v4c2 v4c3(0x20)
0x4c7: v4c7 = ISZERO v4c6
0x4c8: v4c8(0x4d0) = CONST 
0x4cb: JUMPI v4c8(0x4d0) v4c7
----------------------------------

Begin block 0x4cc
prev = {'0x4ba'}, next = {}
----------------------------------
Block 0x4cc
0x4cc: v4cc(0x0) = CONST 
0x4cf: REVERT v4cc(0x0) v4cc(0x0)
----------------------------------

Begin block 0x4d0
prev = {'0x4ba'}, next = {'0xa1e'}
----------------------------------
Block 0x4d0
0x4d2: v4d2 = CALLDATALOAD v4be(0x4)
0x4d3: v4d3(0x1) = CONST 
0x4d5: v4d5(0x1) = CONST 
0x4d7: v4d7(0xa0) = CONST 
0x4d9: v4d9(0x10000000000000000000000000000000000000000) = SHL v4d7(0xa0) v4d5(0x1)
0x4da: v4da(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4d9(0x10000000000000000000000000000000000000000) v4d3(0x1)
0x4db: v4db = AND v4da(0xffffffffffffffffffffffffffffffffffffffff) v4d2
0x4dc: v4dc(0xa1e) = CONST 
0x4df: JUMP v4dc(0xa1e)
----------------------------------

Begin block 0x4e0
prev = {}, next = {'0xa6e'}
----------------------------------
function renounceMinter()()
Block 0x4e0
0x4e1: v4e1(0x3c6) = CONST 
0x4e4: v4e4(0xa6e) = CONST 
0x4e7: JUMP v4e4(0xa6e)
----------------------------------

Begin block 0x4e8
prev = {}, next = {'0x4fa', '0x4fe'}
----------------------------------
function decreaseAllowance(address,uint256)()
Block 0x4e8
0x4e9: v4e9(0x1f0) = CONST 
0x4ec: v4ec(0x4) = CONST 
0x4ef: v4ef = CALLDATASIZE 
0x4f0: v4f0 = SUB v4ef v4ec(0x4)
0x4f1: v4f1(0x40) = CONST 
0x4f4: v4f4 = LT v4f0 v4f1(0x40)
0x4f5: v4f5 = ISZERO v4f4
0x4f6: v4f6(0x4fe) = CONST 
0x4f9: JUMPI v4f6(0x4fe) v4f5
----------------------------------

Begin block 0x4fa
prev = {'0x4e8'}, next = {}
----------------------------------
Block 0x4fa
0x4fa: v4fa(0x0) = CONST 
0x4fd: REVERT v4fa(0x0) v4fa(0x0)
----------------------------------

Begin block 0x4fe
prev = {'0x4e8'}, next = {'0xa79'}
----------------------------------
Block 0x4fe
0x500: v500(0x1) = CONST 
0x502: v502(0x1) = CONST 
0x504: v504(0xa0) = CONST 
0x506: v506(0x10000000000000000000000000000000000000000) = SHL v504(0xa0) v502(0x1)
0x507: v507(0xffffffffffffffffffffffffffffffffffffffff) = SUB v506(0x10000000000000000000000000000000000000000) v500(0x1)
0x509: v509 = CALLDATALOAD v4ec(0x4)
0x50a: v50a = AND v509 v507(0xffffffffffffffffffffffffffffffffffffffff)
0x50c: v50c(0x20) = CONST 
0x50e: v50e = ADD v50c(0x20) v4ec(0x4)
0x50f: v50f = CALLDATALOAD v50e
0x510: v510(0xa79) = CONST 
0x513: JUMP v510(0xa79)
----------------------------------

Begin block 0x514
prev = {}, next = {'0x526', '0x52a'}
----------------------------------
function transfer(address,uint256)()
Block 0x514
0x515: v515(0x1f0) = CONST 
0x518: v518(0x4) = CONST 
0x51b: v51b = CALLDATASIZE 
0x51c: v51c = SUB v51b v518(0x4)
0x51d: v51d(0x40) = CONST 
0x520: v520 = LT v51c v51d(0x40)
0x521: v521 = ISZERO v520
0x522: v522(0x52a) = CONST 
0x525: JUMPI v522(0x52a) v521
----------------------------------

Begin block 0x526
prev = {'0x514'}, next = {}
----------------------------------
Block 0x526
0x526: v526(0x0) = CONST 
0x529: REVERT v526(0x0) v526(0x0)
----------------------------------

Begin block 0x52a
prev = {'0x514'}, next = {'0xab50x514'}
----------------------------------
Block 0x52a
0x52c: v52c(0x1) = CONST 
0x52e: v52e(0x1) = CONST 
0x530: v530(0xa0) = CONST 
0x532: v532(0x10000000000000000000000000000000000000000) = SHL v530(0xa0) v52e(0x1)
0x533: v533(0xffffffffffffffffffffffffffffffffffffffff) = SUB v532(0x10000000000000000000000000000000000000000) v52c(0x1)
0x535: v535 = CALLDATALOAD v518(0x4)
0x536: v536 = AND v535 v533(0xffffffffffffffffffffffffffffffffffffffff)
0x538: v538(0x20) = CONST 
0x53a: v53a = ADD v538(0x20) v518(0x4)
0x53b: v53b = CALLDATALOAD v53a
0x53c: v53c(0xab5) = CONST 
0x53f: JUMP v53c(0xab5)
----------------------------------

Begin block 0x540
prev = {}, next = {'0x552', '0x556'}
----------------------------------
function isMinter(address)()
Block 0x540
0x541: v541(0x1f0) = CONST 
0x544: v544(0x4) = CONST 
0x547: v547 = CALLDATASIZE 
0x548: v548 = SUB v547 v544(0x4)
0x549: v549(0x20) = CONST 
0x54c: v54c = LT v548 v549(0x20)
0x54d: v54d = ISZERO v54c
0x54e: v54e(0x556) = CONST 
0x551: JUMPI v54e(0x556) v54d
----------------------------------

Begin block 0x552
prev = {'0x540'}, next = {}
----------------------------------
Block 0x552
0x552: v552(0x0) = CONST 
0x555: REVERT v552(0x0) v552(0x0)
----------------------------------

Begin block 0x556
prev = {'0x540'}, next = {'0xac20x540'}
----------------------------------
Block 0x556
0x558: v558 = CALLDATALOAD v544(0x4)
0x559: v559(0x1) = CONST 
0x55b: v55b(0x1) = CONST 
0x55d: v55d(0xa0) = CONST 
0x55f: v55f(0x10000000000000000000000000000000000000000) = SHL v55d(0xa0) v55b(0x1)
0x560: v560(0xffffffffffffffffffffffffffffffffffffffff) = SUB v55f(0x10000000000000000000000000000000000000000) v559(0x1)
0x561: v561 = AND v560(0xffffffffffffffffffffffffffffffffffffffff) v558
0x562: v562(0xac2) = CONST 
0x565: JUMP v562(0xac2)
----------------------------------

Begin block 0x566
prev = {}, next = {'0x578', '0x57c'}
----------------------------------
function approveAndCall(address,uint256,bytes)()
Block 0x566
0x567: v567(0x1f0) = CONST 
0x56a: v56a(0x4) = CONST 
0x56d: v56d = CALLDATASIZE 
0x56e: v56e = SUB v56d v56a(0x4)
0x56f: v56f(0x60) = CONST 
0x572: v572 = LT v56e v56f(0x60)
0x573: v573 = ISZERO v572
0x574: v574(0x57c) = CONST 
0x577: JUMPI v574(0x57c) v573
----------------------------------

Begin block 0x578
prev = {'0x566'}, next = {}
----------------------------------
Block 0x578
0x578: v578(0x0) = CONST 
0x57b: REVERT v578(0x0) v578(0x0)
----------------------------------

Begin block 0x57c
prev = {'0x566'}, next = {'0x5ab', '0x5a7'}
----------------------------------
Block 0x57c
0x57d: v57d(0x1) = CONST 
0x57f: v57f(0x1) = CONST 
0x581: v581(0xa0) = CONST 
0x583: v583(0x10000000000000000000000000000000000000000) = SHL v581(0xa0) v57f(0x1)
0x584: v584(0xffffffffffffffffffffffffffffffffffffffff) = SUB v583(0x10000000000000000000000000000000000000000) v57d(0x1)
0x586: v586 = CALLDATALOAD v56a(0x4)
0x587: v587 = AND v586 v584(0xffffffffffffffffffffffffffffffffffffffff)
0x589: v589(0x20) = CONST 
0x58c: v58c = ADD v56a(0x4) v589(0x20)
0x58d: v58d = CALLDATALOAD v58c
0x590: v590 = ADD v56a(0x4) v56e
0x592: v592(0x60) = CONST 
0x595: v595 = ADD v56a(0x4) v592(0x60)
0x596: v596(0x40) = CONST 
0x599: v599 = ADD v56a(0x4) v596(0x40)
0x59a: v59a = CALLDATALOAD v599
0x59b: v59b(0x1) = CONST 
0x59d: v59d(0x20) = CONST 
0x59f: v59f(0x100000000) = SHL v59d(0x20) v59b(0x1)
0x5a1: v5a1 = GT v59a v59f(0x100000000)
0x5a2: v5a2 = ISZERO v5a1
0x5a3: v5a3(0x5ab) = CONST 
0x5a6: JUMPI v5a3(0x5ab) v5a2
----------------------------------

Begin block 0x5a7
prev = {'0x57c'}, next = {}
----------------------------------
Block 0x5a7
0x5a7: v5a7(0x0) = CONST 
0x5aa: REVERT v5a7(0x0) v5a7(0x0)
----------------------------------

Begin block 0x5ab
prev = {'0x57c'}, next = {'0x5b9', '0x5bd'}
----------------------------------
Block 0x5ab
0x5ad: v5ad = ADD v56a(0x4) v59a
0x5af: v5af(0x20) = CONST 
0x5b2: v5b2 = ADD v5ad v5af(0x20)
0x5b3: v5b3 = GT v5b2 v590
0x5b4: v5b4 = ISZERO v5b3
0x5b5: v5b5(0x5bd) = CONST 
0x5b8: JUMPI v5b5(0x5bd) v5b4
----------------------------------

Begin block 0x5b9
prev = {'0x5ab'}, next = {}
----------------------------------
Block 0x5b9
0x5b9: v5b9(0x0) = CONST 
0x5bc: REVERT v5b9(0x0) v5b9(0x0)
----------------------------------

Begin block 0x5bd
prev = {'0x5ab'}, next = {'0x5da', '0x5de'}
----------------------------------
Block 0x5bd
0x5bf: v5bf = CALLDATALOAD v5ad
0x5c1: v5c1(0x20) = CONST 
0x5c3: v5c3 = ADD v5c1(0x20) v5ad
0x5c6: v5c6(0x1) = CONST 
0x5c9: v5c9 = MUL v5bf v5c6(0x1)
0x5cb: v5cb = ADD v5c3 v5c9
0x5cc: v5cc = GT v5cb v590
0x5cd: v5cd(0x1) = CONST 
0x5cf: v5cf(0x20) = CONST 
0x5d1: v5d1(0x100000000) = SHL v5cf(0x20) v5cd(0x1)
0x5d3: v5d3 = GT v5bf v5d1(0x100000000)
0x5d4: v5d4 = OR v5d3 v5cc
0x5d5: v5d5 = ISZERO v5d4
0x5d6: v5d6(0x5de) = CONST 
0x5d9: JUMPI v5d6(0x5de) v5d5
----------------------------------

Begin block 0x5da
prev = {'0x5bd'}, next = {}
----------------------------------
Block 0x5da
0x5da: v5da(0x0) = CONST 
0x5dd: REVERT v5da(0x0) v5da(0x0)
----------------------------------

Begin block 0x5de
prev = {'0x5bd'}, next = {'0xadb'}
----------------------------------
Block 0x5de
0x5e3: v5e3(0x1f) = CONST 
0x5e5: v5e5 = ADD v5e3(0x1f) v5bf
0x5e6: v5e6(0x20) = CONST 
0x5ea: v5ea = DIV v5e5 v5e6(0x20)
0x5eb: v5eb = MUL v5ea v5e6(0x20)
0x5ec: v5ec(0x20) = CONST 
0x5ee: v5ee = ADD v5ec(0x20) v5eb
0x5ef: v5ef(0x40) = CONST 
0x5f1: v5f1 = MLOAD v5ef(0x40)
0x5f4: v5f4 = ADD v5f1 v5ee
0x5f5: v5f5(0x40) = CONST 
0x5f7: MSTORE v5f5(0x40) v5f4
0x5ff: MSTORE v5f1 v5bf
0x600: v600(0x20) = CONST 
0x602: v602 = ADD v600(0x20) v5f1
0x608: CALLDATACOPY v602 v5c3 v5bf
0x609: v609(0x0) = CONST 
0x60c: v60c = ADD v602 v5bf
0x610: MSTORE v60c v609(0x0)
0x615: v615(0xadb) = CONST 
0x61e: JUMP v615(0xadb)
----------------------------------

Begin block 0x61f
prev = {}, next = {'0x635', '0x631'}
----------------------------------
function allowance(address,address)()
Block 0x61f
0x620: v620(0x20c) = CONST 
0x623: v623(0x4) = CONST 
0x626: v626 = CALLDATASIZE 
0x627: v627 = SUB v626 v623(0x4)
0x628: v628(0x40) = CONST 
0x62b: v62b = LT v627 v628(0x40)
0x62c: v62c = ISZERO v62b
0x62d: v62d(0x635) = CONST 
0x630: JUMPI v62d(0x635) v62c
----------------------------------

Begin block 0x631
prev = {'0x61f'}, next = {}
----------------------------------
Block 0x631
0x631: v631(0x0) = CONST 
0x634: REVERT v631(0x0) v631(0x0)
----------------------------------

Begin block 0x635
prev = {'0x61f'}, next = {'0xbee'}
----------------------------------
Block 0x635
0x637: v637(0x1) = CONST 
0x639: v639(0x1) = CONST 
0x63b: v63b(0xa0) = CONST 
0x63d: v63d(0x10000000000000000000000000000000000000000) = SHL v63b(0xa0) v639(0x1)
0x63e: v63e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v63d(0x10000000000000000000000000000000000000000) v637(0x1)
0x640: v640 = CALLDATALOAD v623(0x4)
0x642: v642 = AND v63e(0xffffffffffffffffffffffffffffffffffffffff) v640
0x644: v644(0x20) = CONST 
0x646: v646 = ADD v644(0x20) v623(0x4)
0x647: v647 = CALLDATALOAD v646
0x648: v648 = AND v647 v63e(0xffffffffffffffffffffffffffffffffffffffff)
0x649: v649(0xbee) = CONST 
0x64c: JUMP v649(0xbee)
----------------------------------

Begin block 0x64d
prev = {}, next = {'0x65f', '0x663'}
----------------------------------
function transferOwnership(address)()
Block 0x64d
0x64e: v64e(0x3c6) = CONST 
0x651: v651(0x4) = CONST 
0x654: v654 = CALLDATASIZE 
0x655: v655 = SUB v654 v651(0x4)
0x656: v656(0x20) = CONST 
0x659: v659 = LT v655 v656(0x20)
0x65a: v65a = ISZERO v659
0x65b: v65b(0x663) = CONST 
0x65e: JUMPI v65b(0x663) v65a
----------------------------------

Begin block 0x65f
prev = {'0x64d'}, next = {}
----------------------------------
Block 0x65f
0x65f: v65f(0x0) = CONST 
0x662: REVERT v65f(0x0) v65f(0x0)
----------------------------------

Begin block 0x663
prev = {'0x64d'}, next = {'0xc19'}
----------------------------------
Block 0x663
0x665: v665 = CALLDATALOAD v651(0x4)
0x666: v666(0x1) = CONST 
0x668: v668(0x1) = CONST 
0x66a: v66a(0xa0) = CONST 
0x66c: v66c(0x10000000000000000000000000000000000000000) = SHL v66a(0xa0) v668(0x1)
0x66d: v66d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v66c(0x10000000000000000000000000000000000000000) v666(0x1)
0x66e: v66e = AND v66d(0xffffffffffffffffffffffffffffffffffffffff) v665
0x66f: v66f(0xc19) = CONST 
0x672: JUMP v66f(0xc19)
----------------------------------

Begin block 0x673
prev = {}, next = {'0x6b3', '0x6f90x673'}
----------------------------------
function 0x673(v673arg0)
Block 0x673
0x674: v674(0x5) = CONST 
0x677: v677 = SLOAD v674(0x5)
0x678: v678(0x40) = CONST 
0x67b: v67b = MLOAD v678(0x40)
0x67c: v67c(0x20) = CONST 
0x67e: v67e(0x2) = CONST 
0x680: v680(0x1) = CONST 
0x683: v683 = AND v677 v680(0x1)
0x684: v684 = ISZERO v683
0x685: v685(0x100) = CONST 
0x688: v688 = MUL v685(0x100) v684
0x689: v689(0x0) = CONST 
0x68b: v68b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v689(0x0)
0x68c: v68c = ADD v68b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v688
0x68f: v68f = AND v677 v68c
0x693: v693 = DIV v68f v67e(0x2)
0x694: v694(0x1f) = CONST 
0x697: v697 = ADD v693 v694(0x1f)
0x69a: v69a = DIV v697 v67c(0x20)
0x69c: v69c = MUL v67c(0x20) v69a
0x69e: v69e = ADD v67b v69c
0x6a0: v6a0 = ADD v67c(0x20) v69e
0x6a3: MSTORE v678(0x40) v6a0
0x6a6: MSTORE v67b v693
0x6aa: v6aa = ADD v67b v67c(0x20)
0x6ae: v6ae = ISZERO v693
0x6af: v6af(0x6f9) = CONST 
0x6b2: JUMPI v6af(0x6f9) v6ae
----------------------------------

Begin block 0x6b3
prev = {'0x673'}, next = {'0x6ce0x673', '0x6bb'}
----------------------------------
Block 0x6b3
0x6b4: v6b4(0x1f) = CONST 
0x6b6: v6b6 = LT v6b4(0x1f) v693
0x6b7: v6b7(0x6ce) = CONST 
0x6ba: JUMPI v6b7(0x6ce) v6b6
----------------------------------

Begin block 0x6bb
prev = {'0x6b3'}, next = {'0x6f90x673'}
----------------------------------
Block 0x6bb
0x6bb: v6bb(0x100) = CONST 
0x6c0: v6c0 = SLOAD v674(0x5)
0x6c1: v6c1 = DIV v6c0 v6bb(0x100)
0x6c2: v6c2 = MUL v6c1 v6bb(0x100)
0x6c4: MSTORE v6aa v6c2
0x6c6: v6c6(0x20) = CONST 
0x6c8: v6c8 = ADD v6c6(0x20) v6aa
0x6ca: v6ca(0x6f9) = CONST 
0x6cd: JUMP v6ca(0x6f9)
----------------------------------

Begin block 0x6ce0x673
prev = {'0x6b3'}, next = {'0x6dc0x673'}
----------------------------------
Block 0x6ce0x673
0x6d00x673: v6736d0 = ADD v6aa v693
0x6d30x673: v6736d3(0x0) = CONST 
0x6d50x673: MSTORE v6736d3(0x0) v674(0x5)
0x6d60x673: v6736d6(0x20) = CONST 
0x6d80x673: v6736d8(0x0) = CONST 
0x6da0x673: v6736da = SHA3 v6736d8(0x0) v6736d6(0x20)
----------------------------------

Begin block 0x6ce0x9c3
prev = {'0xa03'}, next = {'0x6dc0x9c3'}
----------------------------------
Block 0x6ce0x9c3
0x6d00x9c3: v9c36d0 = ADD v9fa v9e3
0x6d30x9c3: v9c36d3(0x0) = CONST 
0x6d50x9c3: MSTORE v9c36d3(0x0) v9c4(0x6)
0x6d60x9c3: v9c36d6(0x20) = CONST 
0x6d80x9c3: v9c36d8(0x0) = CONST 
0x6da0x9c3: v9c36da = SHA3 v9c36d8(0x0) v9c36d6(0x20)
----------------------------------

Begin block 0x6dc0x673
prev = {'0x6ce0x673', '0x6dc0x673'}, next = {'0x6f00x673', '0x6dc0x673'}
----------------------------------
Block 0x6dc0x673
0x6dc0x673_0x0: v6dc673_0 = PHI v6aa v6736e8
0x6dc0x673_0x1: v6dc673_1 = PHI v6736e4 v6736da
0x6de0x673: v6736de = SLOAD v6dc673_1
0x6e00x673: MSTORE v6dc673_0 v6736de
0x6e20x673: v6736e2(0x1) = CONST 
0x6e40x673: v6736e4 = ADD v6736e2(0x1) v6dc673_1
0x6e60x673: v6736e6(0x20) = CONST 
0x6e80x673: v6736e8 = ADD v6736e6(0x20) v6dc673_0
0x6eb0x673: v6736eb = GT v6736d0 v6736e8
0x6ec0x673: v6736ec(0x6dc) = CONST 
0x6ef0x673: JUMPI v6736ec(0x6dc) v6736eb
----------------------------------

Begin block 0x6dc0x9c3
prev = {'0x6dc0x9c3', '0x6ce0x9c3'}, next = {'0x6dc0x9c3', '0x6f00x9c3'}
----------------------------------
Block 0x6dc0x9c3
0x6dc0x9c3_0x0: v6dc9c3_0 = PHI v9fa v9c36e8
0x6dc0x9c3_0x1: v6dc9c3_1 = PHI v9c36e4 v9c36da
0x6de0x9c3: v9c36de = SLOAD v6dc9c3_1
0x6e00x9c3: MSTORE v6dc9c3_0 v9c36de
0x6e20x9c3: v9c36e2(0x1) = CONST 
0x6e40x9c3: v9c36e4 = ADD v9c36e2(0x1) v6dc9c3_1
0x6e60x9c3: v9c36e6(0x20) = CONST 
0x6e80x9c3: v9c36e8 = ADD v9c36e6(0x20) v6dc9c3_0
0x6eb0x9c3: v9c36eb = GT v9c36d0 v9c36e8
0x6ec0x9c3: v9c36ec(0x6dc) = CONST 
0x6ef0x9c3: JUMPI v9c36ec(0x6dc) v9c36eb
----------------------------------

Begin block 0x6f00x673
prev = {'0x6dc0x673'}, next = {'0x6f90x673'}
----------------------------------
Block 0x6f00x673
0x6f20x673: v6736f2 = SUB v6736e8 v6736d0
0x6f30x673: v6736f3(0x1f) = CONST 
0x6f50x673: v6736f5 = AND v6736f3(0x1f) v6736f2
0x6f70x673: v6736f7 = ADD v6736d0 v6736f5
----------------------------------

Begin block 0x6f00x9c3
prev = {'0x6dc0x9c3'}, next = {'0x6f90x9c3'}
----------------------------------
Block 0x6f00x9c3
0x6f20x9c3: v9c36f2 = SUB v9c36e8 v9c36d0
0x6f30x9c3: v9c36f3(0x1f) = CONST 
0x6f50x9c3: v9c36f5 = AND v9c36f3(0x1f) v9c36f2
0x6f70x9c3: v9c36f7 = ADD v9c36d0 v9c36f5
----------------------------------

Begin block 0x6f90x673
prev = {'0x673', '0x6bb', '0x6f00x673'}, next = {}
----------------------------------
Block 0x6f90x673
0x7000x673: RETURNPRIVATE v673arg0 v67b v673arg0
----------------------------------

Begin block 0x6f90x9c3
prev = {'0x6f00x9c3', '0x9c3', '0xa0b'}, next = {}
----------------------------------
Block 0x6f90x9c3
0x7000x9c3: RETURNPRIVATE v9c3arg0 v9cb v9c3arg0
----------------------------------

Begin block 0x7010x1c4
prev = {'0x1da'}, next = {'0x70e0x1c4'}
----------------------------------
Block 0x7010x1c4
0x7020x1c4: v1c4702(0x0) = CONST 
0x7040x1c4: v1c4704(0x70e) = CONST 
0x7070x1c4: v1c4707 = CALLER 
0x70a0x1c4: v1c470a(0xc7b) = CONST 
0x70d0x1c4: CALLPRIVATE v1c470a(0xc7b) v1eb v1e6 v1c4707 v1c4704(0x70e)
----------------------------------

Begin block 0x7010x566
prev = {'0xadb'}, next = {'0x70e0x566'}
----------------------------------
Block 0x7010x566
0x7020x566: v566702(0x0) = CONST 
0x7040x566: v566704(0x70e) = CONST 
0x7070x566: v566707 = CALLER 
0x70a0x566: v56670a(0xc7b) = CONST 
0x70d0x566: CALLPRIVATE v56670a(0xc7b) v58d v587 v566707 v566704(0x70e)
----------------------------------

Begin block 0x70e0x1c4
prev = {'0x7010x1c4'}, next = {'0x1f00x1c4'}
----------------------------------
Block 0x70e0x1c4
0x7100x1c4: v1c4710(0x1) = CONST 
0x7160x1c4: JUMP v1c5(0x1f0)
----------------------------------

Begin block 0x70e0x272
prev = {'0x7650x272'}, next = {'0x1f00x272'}
----------------------------------
Block 0x70e0x272
0x7100x272: v272710(0x1) = CONST 
0x7160x272: JUMP v273(0x1f0)
----------------------------------

Begin block 0x70e0x29e
prev = {'0x1003'}, next = {'0x1f00x29e'}
----------------------------------
Block 0x70e0x29e
0x7100x29e: v29e710(0x1) = CONST 
0x7160x29e: JUMP v29f(0x1f0)
----------------------------------

Begin block 0x70e0x3c8
prev = {'0xab50x3c8'}, next = {'0x986'}
----------------------------------
Block 0x70e0x3c8
0x7100x3c8: v3c8710(0x1) = CONST 
0x7160x3c8: JUMP v950(0x986)
----------------------------------

Begin block 0x70e0x4e8
prev = {'0x7650x4e8'}, next = {'0x1f00x4e8'}
----------------------------------
Block 0x70e0x4e8
0x7100x4e8: v4e8710(0x1) = CONST 
0x7160x4e8: JUMP v4e9(0x1f0)
----------------------------------

Begin block 0x70e0x514
prev = {'0xab50x514'}, next = {'0x1f00x514'}
----------------------------------
Block 0x70e0x514
0x7100x514: v514710(0x1) = CONST 
0x7160x514: JUMP v515(0x1f0)
----------------------------------

Begin block 0x70e0x566
prev = {'0x7010x566'}, next = {'0xae7'}
----------------------------------
Block 0x70e0x566
0x7100x566: v566710(0x1) = CONST 
0x7160x566: JUMP vade(0xae7)
----------------------------------

Begin block 0x717
prev = {'0x204'}, next = {'0x20c0x204'}
----------------------------------
Block 0x717
0x718: v718(0x3) = CONST 
0x71a: v71a = SLOAD v718(0x3)
0x71c: JUMP v205(0x20c)
----------------------------------

Begin block 0x71d0x21e
prev = {'0x234'}, next = {'0x72a0x21e'}
----------------------------------
Block 0x71d0x21e
0x71e0x21e: v21e71e(0x0) = CONST 
0x7200x21e: v21e720(0x72a) = CONST 
0x7260x21e: v21e726(0xd67) = CONST 
0x7290x21e: CALLPRIVATE v21e726(0xd67) v24f v24a v241 v21e720(0x72a)
----------------------------------

Begin block 0x71d0x2ca
prev = {'0x84e'}, next = {'0x72a0x2ca'}
----------------------------------
Block 0x71d0x2ca
0x71e0x2ca: v2ca71e(0x0) = CONST 
0x7200x2ca: v2ca720(0x72a) = CONST 
0x7260x2ca: v2ca726(0xd67) = CONST 
0x7290x2ca: CALLPRIVATE v2ca726(0xd67) v855 v842 v2eb v2ca720(0x72a)
----------------------------------

Begin block 0x72a0x21e
prev = {'0x71d0x21e'}, next = {'0x7650x21e'}
----------------------------------
Block 0x72a0x21e
0x72b0x21e: v21e72b(0x1) = CONST 
0x72d0x21e: v21e72d(0x1) = CONST 
0x72f0x21e: v21e72f(0xa0) = CONST 
0x7310x21e: v21e731(0x10000000000000000000000000000000000000000) = SHL v21e72f(0xa0) v21e72d(0x1)
0x7320x21e: v21e732(0xffffffffffffffffffffffffffffffffffffffff) = SUB v21e731(0x10000000000000000000000000000000000000000) v21e72b(0x1)
0x7340x21e: v21e734 = AND v241 v21e732(0xffffffffffffffffffffffffffffffffffffffff)
0x7350x21e: v21e735(0x0) = CONST 
0x7390x21e: MSTORE v21e735(0x0) v21e734
0x73a0x21e: v21e73a(0x2) = CONST 
0x73c0x21e: v21e73c(0x20) = CONST 
0x7400x21e: MSTORE v21e73c(0x20) v21e73a(0x2)
0x7410x21e: v21e741(0x40) = CONST 
0x7450x21e: v21e745 = SHA3 v21e735(0x0) v21e741(0x40)
0x7460x21e: v21e746 = CALLER 
0x7490x21e: MSTORE v21e735(0x0) v21e746
0x74b0x21e: MSTORE v21e73c(0x20) v21e745
0x74e0x21e: v21e74e = SHA3 v21e735(0x0) v21e741(0x40)
0x74f0x21e: v21e74f = SLOAD v21e74e
0x7500x21e: v21e750(0x76a) = CONST 
0x7560x21e: v21e756(0x765) = CONST 
0x75b0x21e: v21e75b(0xffffffff) = CONST 
0x7600x21e: v21e760(0xeab) = CONST 
0x7630x21e: v21e763(0xeab) = AND v21e760(0xeab) v21e75b(0xffffffff)
0x7640x21e: v21e764_0 = CALLPRIVATE v21e763(0xeab) v24f v21e74f v21e756(0x765)
----------------------------------

Begin block 0x72a0x2ca
prev = {'0x71d0x2ca'}, next = {'0x7650x2ca'}
----------------------------------
Block 0x72a0x2ca
0x72b0x2ca: v2ca72b(0x1) = CONST 
0x72d0x2ca: v2ca72d(0x1) = CONST 
0x72f0x2ca: v2ca72f(0xa0) = CONST 
0x7310x2ca: v2ca731(0x10000000000000000000000000000000000000000) = SHL v2ca72f(0xa0) v2ca72d(0x1)
0x7320x2ca: v2ca732(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2ca731(0x10000000000000000000000000000000000000000) v2ca72b(0x1)
0x7340x2ca: v2ca734 = AND v2eb v2ca732(0xffffffffffffffffffffffffffffffffffffffff)
0x7350x2ca: v2ca735(0x0) = CONST 
0x7390x2ca: MSTORE v2ca735(0x0) v2ca734
0x73a0x2ca: v2ca73a(0x2) = CONST 
0x73c0x2ca: v2ca73c(0x20) = CONST 
0x7400x2ca: MSTORE v2ca73c(0x20) v2ca73a(0x2)
0x7410x2ca: v2ca741(0x40) = CONST 
0x7450x2ca: v2ca745 = SHA3 v2ca735(0x0) v2ca741(0x40)
0x7460x2ca: v2ca746 = CALLER 
0x7490x2ca: MSTORE v2ca735(0x0) v2ca746
0x74b0x2ca: MSTORE v2ca73c(0x20) v2ca745
0x74e0x2ca: v2ca74e = SHA3 v2ca735(0x0) v2ca741(0x40)
0x74f0x2ca: v2ca74f = SLOAD v2ca74e
0x7500x2ca: v2ca750(0x76a) = CONST 
0x7560x2ca: v2ca756(0x765) = CONST 
0x75b0x2ca: v2ca75b(0xffffffff) = CONST 
0x7600x2ca: v2ca760(0xeab) = CONST 
0x7630x2ca: v2ca763(0xeab) = AND v2ca760(0xeab) v2ca75b(0xffffffff)
0x7640x2ca: v2ca764_0 = CALLPRIVATE v2ca763(0xeab) v855 v2ca74f v2ca756(0x765)
----------------------------------

Begin block 0x7650x21e
prev = {'0x72a0x21e'}, next = {'0x76a0x21e'}
----------------------------------
Block 0x7650x21e
0x7660x21e: v21e766(0xc7b) = CONST 
0x7690x21e: CALLPRIVATE v21e766(0xc7b) v21e764_0 v21e746 v241 v21e750(0x76a)
----------------------------------

Begin block 0x7650x272
prev = {'0x77d'}, next = {'0x70e0x272'}
----------------------------------
Block 0x7650x272
0x7660x272: v272766(0xc7b) = CONST 
0x7690x272: CALLPRIVATE v272766(0xc7b) v7b8_0 v294 v77e v7a4(0x70e)
----------------------------------

Begin block 0x7650x2ca
prev = {'0x72a0x2ca'}, next = {'0x76a0x2ca'}
----------------------------------
Block 0x7650x2ca
0x7660x2ca: v2ca766(0xc7b) = CONST 
0x7690x2ca: CALLPRIVATE v2ca766(0xc7b) v2ca764_0 v2ca746 v2eb v2ca750(0x76a)
----------------------------------

Begin block 0x7650x4e8
prev = {'0xa79'}, next = {'0x70e0x4e8'}
----------------------------------
Block 0x7650x4e8
0x7660x4e8: v4e8766(0xc7b) = CONST 
0x7690x4e8: CALLPRIVATE v4e8766(0xc7b) vab4_0 v50a va7a vaa0(0x70e)
----------------------------------

Begin block 0x76a0x21e
prev = {'0x7650x21e'}, next = {'0x1f00x21e'}
----------------------------------
Block 0x76a0x21e
0x76c0x21e: v21e76c(0x1) = CONST 
0x7730x21e: JUMP v21f(0x1f0)
----------------------------------

Begin block 0x76a0x2ca
prev = {'0x7650x2ca'}, next = {'0x85a'}
----------------------------------
Block 0x76a0x2ca
0x76c0x2ca: v2ca76c(0x1) = CONST 
0x7730x2ca: JUMP v823(0x85a)
----------------------------------

Begin block 0x76a0x566
prev = {'0xbe3'}, next = {'0x1f00x566'}
----------------------------------
Block 0x76a0x566
0x76c0x566: v56676c(0x1) = CONST 
0x7730x566: JUMP v567(0x1f0)
----------------------------------

Begin block 0x774
prev = {'0x254'}, next = {'0x25c'}
----------------------------------
Block 0x774
0x775: v775(0x7) = CONST 
0x777: v777 = SLOAD v775(0x7)
0x778: v778(0xff) = CONST 
0x77a: v77a = AND v778(0xff) v777
0x77c: JUMP v255(0x25c)
----------------------------------

Begin block 0x77d
prev = {'0x288'}, next = {'0x7650x272'}
----------------------------------
Block 0x77d
0x77e: v77e = CALLER 
0x77f: v77f(0x0) = CONST 
0x783: MSTORE v77f(0x0) v77e
0x784: v784(0x2) = CONST 
0x786: v786(0x20) = CONST 
0x78a: MSTORE v786(0x20) v784(0x2)
0x78b: v78b(0x40) = CONST 
0x78f: v78f = SHA3 v77f(0x0) v78b(0x40)
0x790: v790(0x1) = CONST 
0x792: v792(0x1) = CONST 
0x794: v794(0xa0) = CONST 
0x796: v796(0x10000000000000000000000000000000000000000) = SHL v794(0xa0) v792(0x1)
0x797: v797(0xffffffffffffffffffffffffffffffffffffffff) = SUB v796(0x10000000000000000000000000000000000000000) v790(0x1)
0x799: v799 = AND v294 v797(0xffffffffffffffffffffffffffffffffffffffff)
0x79b: MSTORE v77f(0x0) v799
0x79e: MSTORE v786(0x20) v78f
0x7a0: v7a0 = SHA3 v77f(0x0) v78b(0x40)
0x7a1: v7a1 = SLOAD v7a0
0x7a4: v7a4(0x70e) = CONST 
0x7aa: v7aa(0x765) = CONST 
0x7af: v7af(0xffffffff) = CONST 
0x7b4: v7b4(0xf08) = CONST 
0x7b7: v7b7(0xf08) = AND v7b4(0xf08) v7af(0xffffffff)
0x7b8: v7b8_0 = CALLPRIVATE v7b7(0xf08) v299 v7a1 v7aa(0x765)
----------------------------------

Begin block 0x7b9
prev = {'0x2b4'}, next = {'0x7c4'}
----------------------------------
Block 0x7b9
0x7ba: v7ba(0x0) = CONST 
0x7bc: v7bc(0x7c4) = CONST 
0x7bf: v7bf = CALLER 
0x7c0: v7c0(0xac2) = CONST 
0x7c3: v7c3_0 = CALLPRIVATE v7c0(0xac2) v7bf v7bc(0x7c4)
----------------------------------

Begin block 0x7c4
prev = {'0x7b9'}, next = {'0x7ff', '0x7c9'}
----------------------------------
Block 0x7c4
0x7c5: v7c5(0x7ff) = CONST 
0x7c8: JUMPI v7c5(0x7ff) v7c3_0
----------------------------------

Begin block 0x7c9
prev = {'0x7c4'}, next = {}
----------------------------------
Block 0x7c9
0x7c9: v7c9(0x40) = CONST 
0x7cb: v7cb = MLOAD v7c9(0x40)
0x7cc: v7cc(0x461bcd) = CONST 
0x7d0: v7d0(0xe5) = CONST 
0x7d2: v7d2(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v7d0(0xe5) v7cc(0x461bcd)
0x7d4: MSTORE v7cb v7d2(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x7d5: v7d5(0x4) = CONST 
0x7d7: v7d7 = ADD v7d5(0x4) v7cb
0x7da: v7da(0x20) = CONST 
0x7dc: v7dc = ADD v7da(0x20) v7d7
0x7df: v7df = SUB v7dc v7d7
0x7e1: MSTORE v7d7 v7df
0x7e2: v7e2(0x30) = CONST 
0x7e5: MSTORE v7dc v7e2(0x30)
0x7e6: v7e6(0x20) = CONST 
0x7e8: v7e8 = ADD v7e6(0x20) v7dc
0x7ea: v7ea(0x1346) = CONST 
0x7ed: v7ed(0x30) = CONST 
0x7f0: CODECOPY v7e8 v7ea(0x1346) v7ed(0x30)
0x7f1: v7f1(0x40) = CONST 
0x7f3: v7f3 = ADD v7f1(0x40) v7e8
0x7f7: v7f7(0x40) = CONST 
0x7f9: v7f9 = MLOAD v7f7(0x40)
0x7fc: v7fc = SUB v7f3 v7f9
0x7fe: REVERT v7f9 v7fc
----------------------------------

Begin block 0x7ff
prev = {'0x7c4'}, next = {'0xf69'}
----------------------------------
Block 0x7ff
0x800: v800(0x70e) = CONST 
0x805: v805(0xf69) = CONST 
0x808: JUMP v805(0xf69)
----------------------------------

Begin block 0x809
prev = {'0x38d'}, next = {'0x813', '0x817'}
----------------------------------
Block 0x809
0x80a: v80a(0x0) = CONST 
0x80e: v80e = EQ v36e v31e
0x80f: v80f(0x817) = CONST 
0x812: JUMPI v80f(0x817) v80e
----------------------------------

Begin block 0x813
prev = {'0x809'}, next = {}
----------------------------------
Block 0x813
0x813: v813(0x0) = CONST 
0x816: REVERT v813(0x0) v813(0x0)
----------------------------------

Begin block 0x817
prev = {'0x809'}, next = {'0x81a'}
----------------------------------
Block 0x817
0x818: v818(0x0) = CONST 
----------------------------------

Begin block 0x81a
prev = {'0x863', '0x817'}, next = {'0x823', '0x86b'}
----------------------------------
Block 0x81a
0x81a_0x0: v81a_0 = PHI v818(0x0) v866
0x81d: v81d = LT v81a_0 v31e
0x81e: v81e = ISZERO v81d
0x81f: v81f(0x86b) = CONST 
0x822: JUMPI v81f(0x86b) v81e
----------------------------------

Begin block 0x823
prev = {'0x81a'}, next = {'0x831', '0x832'}
----------------------------------
Block 0x823
0x823_0x0: v823_0 = PHI v818(0x0) v866
0x823: v823(0x85a) = CONST 
0x82c: v82c = LT v823_0 v31e
0x82d: v82d(0x832) = CONST 
0x830: JUMPI v82d(0x832) v82c
----------------------------------

Begin block 0x831
prev = {'0x823'}, next = {}
----------------------------------
Block 0x831
0x831: THROW 
----------------------------------

Begin block 0x832
prev = {'0x823'}, next = {'0x84e', '0x84d'}
----------------------------------
Block 0x832
0x832_0x0: v832_0 = PHI v818(0x0) v866
0x832_0x5: v832_5 = PHI v818(0x0) v866
0x835: v835(0x20) = CONST 
0x837: v837 = MUL v835(0x20) v832_0
0x838: v838 = ADD v837 v322
0x839: v839 = CALLDATALOAD v838
0x83a: v83a(0x1) = CONST 
0x83c: v83c(0x1) = CONST 
0x83e: v83e(0xa0) = CONST 
0x840: v840(0x10000000000000000000000000000000000000000) = SHL v83e(0xa0) v83c(0x1)
0x841: v841(0xffffffffffffffffffffffffffffffffffffffff) = SUB v840(0x10000000000000000000000000000000000000000) v83a(0x1)
0x842: v842 = AND v841(0xffffffffffffffffffffffffffffffffffffffff) v839
0x848: v848 = LT v832_5 v36e
0x849: v849(0x84e) = CONST 
0x84c: JUMPI v849(0x84e) v848
----------------------------------

Begin block 0x84d
prev = {'0x832'}, next = {}
----------------------------------
Block 0x84d
0x84d: THROW 
----------------------------------

Begin block 0x84e
prev = {'0x832'}, next = {'0x71d0x2ca'}
----------------------------------
Block 0x84e
0x84e_0x0: v84e_0 = PHI v818(0x0) v866
0x851: v851(0x20) = CONST 
0x853: v853 = MUL v851(0x20) v84e_0
0x854: v854 = ADD v853 v372
0x855: v855 = CALLDATALOAD v854
0x856: v856(0x71d) = CONST 
0x859: JUMP v856(0x71d)
----------------------------------

Begin block 0x85a
prev = {'0x76a0x2ca'}, next = {'0x863', '0x85f'}
----------------------------------
Block 0x85a
0x85b: v85b(0x863) = CONST 
0x85e: JUMPI v85b(0x863) v2ca76c(0x1)
----------------------------------

Begin block 0x85f
prev = {'0x85a'}, next = {}
----------------------------------
Block 0x85f
0x85f: v85f(0x0) = CONST 
0x862: REVERT v85f(0x0) v85f(0x0)
----------------------------------

Begin block 0x863
prev = {'0x85a'}, next = {'0x81a'}
----------------------------------
Block 0x863
0x863_0x0: v863_0 = PHI v818(0x0) v866
0x864: v864(0x1) = CONST 
0x866: v866 = ADD v864(0x1) v863_0
0x867: v867(0x81a) = CONST 
0x86a: JUMP v867(0x81a)
----------------------------------

Begin block 0x86b
prev = {'0x81a'}, next = {'0x1f00x2ca'}
----------------------------------
Block 0x86b
0x86d: v86d(0x1) = CONST 
0x877: JUMP v2cb(0x1f0)
----------------------------------

Begin block 0x878
prev = {'0x3ae'}, next = {'0x20c0x398'}
----------------------------------
Block 0x878
0x879: v879(0x1) = CONST 
0x87b: v87b(0x1) = CONST 
0x87d: v87d(0xa0) = CONST 
0x87f: v87f(0x10000000000000000000000000000000000000000) = SHL v87d(0xa0) v87b(0x1)
0x880: v880(0xffffffffffffffffffffffffffffffffffffffff) = SUB v87f(0x10000000000000000000000000000000000000000) v879(0x1)
0x881: v881 = AND v880(0xffffffffffffffffffffffffffffffffffffffff) v3b9
0x882: v882(0x0) = CONST 
0x886: MSTORE v882(0x0) v881
0x887: v887(0x1) = CONST 
0x889: v889(0x20) = CONST 
0x88b: MSTORE v889(0x20) v887(0x1)
0x88c: v88c(0x40) = CONST 
0x88f: v88f = SHA3 v882(0x0) v88c(0x40)
0x890: v890 = SLOAD v88f
0x892: JUMP v399(0x20c)
----------------------------------

Begin block 0x893
prev = {'0x3be'}, next = {'0x89b'}
----------------------------------
Block 0x893
0x894: v894(0x89b) = CONST 
0x897: v897(0x9b2) = CONST 
0x89a: v89a_0 = CALLPRIVATE v897(0x9b2) v894(0x89b)
----------------------------------

Begin block 0x89b
prev = {'0x893'}, next = {'0x8a0', '0x8ec'}
----------------------------------
Block 0x89b
0x89c: v89c(0x8ec) = CONST 
0x89f: JUMPI v89c(0x8ec) v89a_0
----------------------------------

Begin block 0x8a0
prev = {'0x89b'}, next = {}
----------------------------------
Block 0x8a0
0x8a0: v8a0(0x40) = CONST 
0x8a3: v8a3 = MLOAD v8a0(0x40)
0x8a4: v8a4(0x461bcd) = CONST 
0x8a8: v8a8(0xe5) = CONST 
0x8aa: v8aa(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v8a8(0xe5) v8a4(0x461bcd)
0x8ac: MSTORE v8a3 v8aa(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x8ad: v8ad(0x20) = CONST 
0x8af: v8af(0x4) = CONST 
0x8b2: v8b2 = ADD v8a3 v8af(0x4)
0x8b5: MSTORE v8b2 v8ad(0x20)
0x8b6: v8b6(0x24) = CONST 
0x8b9: v8b9 = ADD v8a3 v8b6(0x24)
0x8ba: MSTORE v8b9 v8ad(0x20)
0x8bb: v8bb(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x8dc: v8dc(0x44) = CONST 
0x8df: v8df = ADD v8a3 v8dc(0x44)
0x8e0: MSTORE v8df v8bb(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x8e2: v8e2 = MLOAD v8a0(0x40)
0x8e6: v8e6 = SUB v8a3 v8e2
0x8e7: v8e7(0x64) = CONST 
0x8e9: v8e9 = ADD v8e7(0x64) v8e6
0x8eb: REVERT v8e2 v8e9
----------------------------------

Begin block 0x8ec
prev = {'0x89b'}, next = {'0x3c60x3be'}
----------------------------------
Block 0x8ec
0x8ed: v8ed(0x0) = CONST 
0x8f0: v8f0 = SLOAD v8ed(0x0)
0x8f1: v8f1(0x40) = CONST 
0x8f3: v8f3 = MLOAD v8f1(0x40)
0x8f4: v8f4(0x1) = CONST 
0x8f6: v8f6(0x1) = CONST 
0x8f8: v8f8(0xa0) = CONST 
0x8fa: v8fa(0x10000000000000000000000000000000000000000) = SHL v8f8(0xa0) v8f6(0x1)
0x8fb: v8fb(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8fa(0x10000000000000000000000000000000000000000) v8f4(0x1)
0x8fe: v8fe = AND v8f0 v8fb(0xffffffffffffffffffffffffffffffffffffffff)
0x900: v900(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x924: LOG3 v8f3 v8ed(0x0) v900(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v8fe v8ed(0x0)
0x925: v925(0x0) = CONST 
0x928: v928 = SLOAD v925(0x0)
0x929: v929(0x1) = CONST 
0x92b: v92b(0x1) = CONST 
0x92d: v92d(0xa0) = CONST 
0x92f: v92f(0x10000000000000000000000000000000000000000) = SHL v92d(0xa0) v92b(0x1)
0x930: v930(0xffffffffffffffffffffffffffffffffffffffff) = SUB v92f(0x10000000000000000000000000000000000000000) v929(0x1)
0x931: v931(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v930(0xffffffffffffffffffffffffffffffffffffffff)
0x932: v932 = AND v931(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v928
0x934: SSTORE v925(0x0) v932
0x935: JUMP v3bf(0x3c6)
----------------------------------

Begin block 0x936
prev = {'0x47b'}, next = {'0x940', '0x944'}
----------------------------------
Block 0x936
0x937: v937(0x0) = CONST 
0x93b: v93b = EQ v45c v40c
0x93c: v93c(0x944) = CONST 
0x93f: JUMPI v93c(0x944) v93b
----------------------------------

Begin block 0x940
prev = {'0x936'}, next = {}
----------------------------------
Block 0x940
0x940: v940(0x0) = CONST 
0x943: REVERT v940(0x0) v940(0x0)
----------------------------------

Begin block 0x944
prev = {'0x936'}, next = {'0x947'}
----------------------------------
Block 0x944
0x945: v945(0x0) = CONST 
----------------------------------

Begin block 0x947
prev = {'0x944', '0x98f'}, next = {'0x950', '0x997'}
----------------------------------
Block 0x947
0x947_0x0: v947_0 = PHI v945(0x0) v992
0x94a: v94a = LT v947_0 v40c
0x94b: v94b = ISZERO v94a
0x94c: v94c(0x997) = CONST 
0x94f: JUMPI v94c(0x997) v94b
----------------------------------

Begin block 0x950
prev = {'0x947'}, next = {'0x95d', '0x95e'}
----------------------------------
Block 0x950
0x950_0x0: v950_0 = PHI v945(0x0) v992
0x950: v950(0x986) = CONST 
0x958: v958 = LT v950_0 v40c
0x959: v959(0x95e) = CONST 
0x95c: JUMPI v959(0x95e) v958
----------------------------------

Begin block 0x95d
prev = {'0x950'}, next = {}
----------------------------------
Block 0x95d
0x95d: THROW 
----------------------------------

Begin block 0x95e
prev = {'0x950'}, next = {'0x979', '0x97a'}
----------------------------------
Block 0x95e
0x95e_0x0: v95e_0 = PHI v945(0x0) v992
0x95e_0x4: v95e_4 = PHI v945(0x0) v992
0x961: v961(0x20) = CONST 
0x963: v963 = MUL v961(0x20) v95e_0
0x964: v964 = ADD v963 v410
0x965: v965 = CALLDATALOAD v964
0x966: v966(0x1) = CONST 
0x968: v968(0x1) = CONST 
0x96a: v96a(0xa0) = CONST 
0x96c: v96c(0x10000000000000000000000000000000000000000) = SHL v96a(0xa0) v968(0x1)
0x96d: v96d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v96c(0x10000000000000000000000000000000000000000) v966(0x1)
0x96e: v96e = AND v96d(0xffffffffffffffffffffffffffffffffffffffff) v965
0x974: v974 = LT v95e_4 v45c
0x975: v975(0x97a) = CONST 
0x978: JUMPI v975(0x97a) v974
----------------------------------

Begin block 0x979
prev = {'0x95e'}, next = {}
----------------------------------
Block 0x979
0x979: THROW 
----------------------------------

Begin block 0x97a
prev = {'0x95e'}, next = {'0xab50x3c8'}
----------------------------------
Block 0x97a
0x97a_0x0: v97a_0 = PHI v945(0x0) v992
0x97d: v97d(0x20) = CONST 
0x97f: v97f = MUL v97d(0x20) v97a_0
0x980: v980 = ADD v97f v460
0x981: v981 = CALLDATALOAD v980
0x982: v982(0xab5) = CONST 
0x985: JUMP v982(0xab5)
----------------------------------

Begin block 0x986
prev = {'0x70e0x3c8'}, next = {'0x98b', '0x98f'}
----------------------------------
Block 0x986
0x987: v987(0x98f) = CONST 
0x98a: JUMPI v987(0x98f) v3c8710(0x1)
----------------------------------

Begin block 0x98b
prev = {'0x986'}, next = {}
----------------------------------
Block 0x98b
0x98b: v98b(0x0) = CONST 
0x98e: REVERT v98b(0x0) v98b(0x0)
----------------------------------

Begin block 0x98f
prev = {'0x986'}, next = {'0x947'}
----------------------------------
Block 0x98f
0x98f_0x0: v98f_0 = PHI v945(0x0) v992
0x990: v990(0x1) = CONST 
0x992: v992 = ADD v990(0x1) v98f_0
0x993: v993(0x947) = CONST 
0x996: JUMP v993(0x947)
----------------------------------

Begin block 0x997
prev = {'0x947'}, next = {'0x1f00x3c8'}
----------------------------------
Block 0x997
0x999: v999(0x1) = CONST 
0x9a2: JUMP v3c9(0x1f0)
----------------------------------

Begin block 0x9a3
prev = {'0x486'}, next = {'0x48e'}
----------------------------------
Block 0x9a3
0x9a4: v9a4(0x0) = CONST 
0x9a6: v9a6 = SLOAD v9a4(0x0)
0x9a7: v9a7(0x1) = CONST 
0x9a9: v9a9(0x1) = CONST 
0x9ab: v9ab(0xa0) = CONST 
0x9ad: v9ad(0x10000000000000000000000000000000000000000) = SHL v9ab(0xa0) v9a9(0x1)
0x9ae: v9ae(0xffffffffffffffffffffffffffffffffffffffff) = SUB v9ad(0x10000000000000000000000000000000000000000) v9a7(0x1)
0x9af: v9af = AND v9ae(0xffffffffffffffffffffffffffffffffffffffff) v9a6
0x9b1: JUMP v487(0x48e)
----------------------------------

Begin block 0x9b2
prev = {}, next = {}
----------------------------------
function 0x9b2(v9b2arg0)
Block 0x9b2
0x9b3: v9b3(0x0) = CONST 
0x9b5: v9b5 = SLOAD v9b3(0x0)
0x9b6: v9b6(0x1) = CONST 
0x9b8: v9b8(0x1) = CONST 
0x9ba: v9ba(0xa0) = CONST 
0x9bc: v9bc(0x10000000000000000000000000000000000000000) = SHL v9ba(0xa0) v9b8(0x1)
0x9bd: v9bd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v9bc(0x10000000000000000000000000000000000000000) v9b6(0x1)
0x9be: v9be = AND v9bd(0xffffffffffffffffffffffffffffffffffffffff) v9b5
0x9bf: v9bf = CALLER 
0x9c0: v9c0 = EQ v9bf v9be
0x9c2: RETURNPRIVATE v9b2arg0 v9c0
----------------------------------

Begin block 0x9c3
prev = {}, next = {'0x6f90x9c3', '0xa03'}
----------------------------------
function 0x9c3(v9c3arg0)
Block 0x9c3
0x9c4: v9c4(0x6) = CONST 
0x9c7: v9c7 = SLOAD v9c4(0x6)
0x9c8: v9c8(0x40) = CONST 
0x9cb: v9cb = MLOAD v9c8(0x40)
0x9cc: v9cc(0x20) = CONST 
0x9ce: v9ce(0x2) = CONST 
0x9d0: v9d0(0x1) = CONST 
0x9d3: v9d3 = AND v9c7 v9d0(0x1)
0x9d4: v9d4 = ISZERO v9d3
0x9d5: v9d5(0x100) = CONST 
0x9d8: v9d8 = MUL v9d5(0x100) v9d4
0x9d9: v9d9(0x0) = CONST 
0x9db: v9db(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v9d9(0x0)
0x9dc: v9dc = ADD v9db(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v9d8
0x9df: v9df = AND v9c7 v9dc
0x9e3: v9e3 = DIV v9df v9ce(0x2)
0x9e4: v9e4(0x1f) = CONST 
0x9e7: v9e7 = ADD v9e3 v9e4(0x1f)
0x9ea: v9ea = DIV v9e7 v9cc(0x20)
0x9ec: v9ec = MUL v9cc(0x20) v9ea
0x9ee: v9ee = ADD v9cb v9ec
0x9f0: v9f0 = ADD v9cc(0x20) v9ee
0x9f3: MSTORE v9c8(0x40) v9f0
0x9f6: MSTORE v9cb v9e3
0x9fa: v9fa = ADD v9cb v9cc(0x20)
0x9fe: v9fe = ISZERO v9e3
0x9ff: v9ff(0x6f9) = CONST 
0xa02: JUMPI v9ff(0x6f9) v9fe
----------------------------------

Begin block 0xa03
prev = {'0x9c3'}, next = {'0x6ce0x9c3', '0xa0b'}
----------------------------------
Block 0xa03
0xa04: va04(0x1f) = CONST 
0xa06: va06 = LT va04(0x1f) v9e3
0xa07: va07(0x6ce) = CONST 
0xa0a: JUMPI va07(0x6ce) va06
----------------------------------

Begin block 0xa0b
prev = {'0xa03'}, next = {'0x6f90x9c3'}
----------------------------------
Block 0xa0b
0xa0b: va0b(0x100) = CONST 
0xa10: va10 = SLOAD v9c4(0x6)
0xa11: va11 = DIV va10 va0b(0x100)
0xa12: va12 = MUL va11 va0b(0x100)
0xa14: MSTORE v9fa va12
0xa16: va16(0x20) = CONST 
0xa18: va18 = ADD va16(0x20) v9fa
0xa1a: va1a(0x6f9) = CONST 
0xa1d: JUMP va1a(0x6f9)
----------------------------------

Begin block 0xa1e
prev = {'0x4d0'}, next = {'0xa27'}
----------------------------------
Block 0xa1e
0xa1f: va1f(0xa27) = CONST 
0xa22: va22 = CALLER 
0xa23: va23(0xac2) = CONST 
0xa26: va26_0 = CALLPRIVATE va23(0xac2) va22 va1f(0xa27)
----------------------------------

Begin block 0xa27
prev = {'0xa1e'}, next = {'0xa62', '0xa2c'}
----------------------------------
Block 0xa27
0xa28: va28(0xa62) = CONST 
0xa2b: JUMPI va28(0xa62) va26_0
----------------------------------

Begin block 0xa2c
prev = {'0xa27'}, next = {}
----------------------------------
Block 0xa2c
0xa2c: va2c(0x40) = CONST 
0xa2e: va2e = MLOAD va2c(0x40)
0xa2f: va2f(0x461bcd) = CONST 
0xa33: va33(0xe5) = CONST 
0xa35: va35(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL va33(0xe5) va2f(0x461bcd)
0xa37: MSTORE va2e va35(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xa38: va38(0x4) = CONST 
0xa3a: va3a = ADD va38(0x4) va2e
0xa3d: va3d(0x20) = CONST 
0xa3f: va3f = ADD va3d(0x20) va3a
0xa42: va42 = SUB va3f va3a
0xa44: MSTORE va3a va42
0xa45: va45(0x30) = CONST 
0xa48: MSTORE va3f va45(0x30)
0xa49: va49(0x20) = CONST 
0xa4b: va4b = ADD va49(0x20) va3f
0xa4d: va4d(0x1346) = CONST 
0xa50: va50(0x30) = CONST 
0xa53: CODECOPY va4b va4d(0x1346) va50(0x30)
0xa54: va54(0x40) = CONST 
0xa56: va56 = ADD va54(0x40) va4b
0xa5a: va5a(0x40) = CONST 
0xa5c: va5c = MLOAD va5a(0x40)
0xa5f: va5f = SUB va56 va5c
0xa61: REVERT va5c va5f
----------------------------------

Begin block 0xa62
prev = {'0xa27'}, next = {'0x105b'}
----------------------------------
Block 0xa62
0xa63: va63(0xa6b) = CONST 
0xa67: va67(0x105b) = CONST 
0xa6a: JUMP va67(0x105b)
----------------------------------

Begin block 0xa6b0x4ba
prev = {'0x106c'}, next = {'0x3c60x4ba'}
----------------------------------
Block 0xa6b0x4ba
0xa6d0x4ba: JUMP v4bb(0x3c6)
----------------------------------

Begin block 0xa6b0x64d
prev = {'0x1197'}, next = {'0x3c60x64d'}
----------------------------------
Block 0xa6b0x64d
0xa6d0x64d: JUMP v64e(0x3c6)
----------------------------------

Begin block 0xa6e
prev = {'0x4e0'}, next = {'0x10a3'}
----------------------------------
Block 0xa6e
0xa6f: va6f(0xa77) = CONST 
0xa72: va72 = CALLER 
0xa73: va73(0x10a3) = CONST 
0xa76: JUMP va73(0x10a3)
----------------------------------

Begin block 0xa77
prev = {'0x10b4'}, next = {'0x3c60x4e0'}
----------------------------------
Block 0xa77
0xa78: JUMP v4e1(0x3c6)
----------------------------------

Begin block 0xa79
prev = {'0x4fe'}, next = {'0x7650x4e8'}
----------------------------------
Block 0xa79
0xa7a: va7a = CALLER 
0xa7b: va7b(0x0) = CONST 
0xa7f: MSTORE va7b(0x0) va7a
0xa80: va80(0x2) = CONST 
0xa82: va82(0x20) = CONST 
0xa86: MSTORE va82(0x20) va80(0x2)
0xa87: va87(0x40) = CONST 
0xa8b: va8b = SHA3 va7b(0x0) va87(0x40)
0xa8c: va8c(0x1) = CONST 
0xa8e: va8e(0x1) = CONST 
0xa90: va90(0xa0) = CONST 
0xa92: va92(0x10000000000000000000000000000000000000000) = SHL va90(0xa0) va8e(0x1)
0xa93: va93(0xffffffffffffffffffffffffffffffffffffffff) = SUB va92(0x10000000000000000000000000000000000000000) va8c(0x1)
0xa95: va95 = AND v50a va93(0xffffffffffffffffffffffffffffffffffffffff)
0xa97: MSTORE va7b(0x0) va95
0xa9a: MSTORE va82(0x20) va8b
0xa9c: va9c = SHA3 va7b(0x0) va87(0x40)
0xa9d: va9d = SLOAD va9c
0xaa0: vaa0(0x70e) = CONST 
0xaa6: vaa6(0x765) = CONST 
0xaab: vaab(0xffffffff) = CONST 
0xab0: vab0(0xeab) = CONST 
0xab3: vab3(0xeab) = AND vab0(0xeab) vaab(0xffffffff)
0xab4: vab4_0 = CALLPRIVATE vab3(0xeab) v50f va9d vaa6(0x765)
----------------------------------

Begin block 0xab50x3c8
prev = {'0x97a'}, next = {'0x70e0x3c8'}
----------------------------------
Block 0xab50x3c8
0xab60x3c8: v3c8ab6(0x0) = CONST 
0xab80x3c8: v3c8ab8(0x70e) = CONST 
0xabb0x3c8: v3c8abb = CALLER 
0xabe0x3c8: v3c8abe(0xd67) = CONST 
0xac10x3c8: CALLPRIVATE v3c8abe(0xd67) v981 v96e v3c8abb v3c8ab8(0x70e)
----------------------------------

Begin block 0xab50x514
prev = {'0x52a'}, next = {'0x70e0x514'}
----------------------------------
Block 0xab50x514
0xab60x514: v514ab6(0x0) = CONST 
0xab80x514: v514ab8(0x70e) = CONST 
0xabb0x514: v514abb = CALLER 
0xabe0x514: v514abe(0xd67) = CONST 
0xac10x514: CALLPRIVATE v514abe(0xd67) v53b v536 v514abb v514ab8(0x70e)
----------------------------------

Begin block 0xac2
prev = {}, next = {'0xad50xac2'}
----------------------------------
function 0xac2(vac2arg0, vac2arg1)
Block 0xac2
0xac3: vac3(0x0) = CONST 
0xac5: vac5(0xad5) = CONST 
0xac8: vac8(0x4) = CONST 
0xacb: vacb(0xffffffff) = CONST 
0xad0: vad0(0x10eb) = CONST 
0xad3: vad3(0x10eb) = AND vad0(0x10eb) vacb(0xffffffff)
0xad4: vad4_0 = CALLPRIVATE vad3(0x10eb) vac2arg0 vac8(0x4) vac5(0xad5)
----------------------------------

Begin block 0xac20x540
prev = {'0x556'}, next = {'0xad50x540'}
----------------------------------
Block 0xac20x540
0xac30x540: v540ac3(0x0) = CONST 
0xac50x540: v540ac5(0xad5) = CONST 
0xac80x540: v540ac8(0x4) = CONST 
0xacb0x540: v540acb(0xffffffff) = CONST 
0xad00x540: v540ad0(0x10eb) = CONST 
0xad30x540: v540ad3(0x10eb) = AND v540ad0(0x10eb) v540acb(0xffffffff)
0xad40x540: v540ad4_0 = CALLPRIVATE v540ad3(0x10eb) v561 v540ac8(0x4) v540ac5(0xad5)
----------------------------------

Begin block 0xad50x540
prev = {'0xac20x540'}, next = {'0x1f00x540'}
----------------------------------
Block 0xad50x540
0xada0x540: JUMP v541(0x1f0)
----------------------------------

Begin block 0xad50xac2
prev = {'0xac2'}, next = {}
----------------------------------
Block 0xad50xac2
0xada0xac2: RETURNPRIVATE vac2arg1 vad4_0
----------------------------------

Begin block 0xadb
prev = {'0x5de'}, next = {'0x7010x566'}
----------------------------------
Block 0xadb
0xadc: vadc(0x0) = CONST 
0xade: vade(0xae7) = CONST 
0xae3: vae3(0x701) = CONST 
0xae6: JUMP vae3(0x701)
----------------------------------

Begin block 0xae7
prev = {'0x70e0x566'}, next = {'0xaec', '0xaf0'}
----------------------------------
Block 0xae7
0xae8: vae8(0xaf0) = CONST 
0xaeb: JUMPI vae8(0xaf0) v566710(0x1)
----------------------------------

Begin block 0xaec
prev = {'0xae7'}, next = {}
----------------------------------
Block 0xaec
0xaec: vaec(0x0) = CONST 
0xaef: REVERT vaec(0x0) vaec(0x0)
----------------------------------

Begin block 0xaf0
prev = {'0xae7'}, next = {'0xb52'}
----------------------------------
Block 0xaf0
0xaf1: vaf1(0x40) = CONST 
0xaf3: vaf3 = MLOAD vaf1(0x40)
0xaf4: vaf4(0x8f4ffcb1) = CONST 
0xaf9: vaf9(0xe0) = CONST 
0xafb: vafb(0x8f4ffcb100000000000000000000000000000000000000000000000000000000) = SHL vaf9(0xe0) vaf4(0x8f4ffcb1)
0xafd: MSTORE vaf3 vafb(0x8f4ffcb100000000000000000000000000000000000000000000000000000000)
0xafe: vafe = CALLER 
0xaff: vaff(0x4) = CONST 
0xb02: vb02 = ADD vaf3 vaff(0x4)
0xb05: MSTORE vb02 vafe
0xb06: vb06(0x24) = CONST 
0xb09: vb09 = ADD vaf3 vb06(0x24)
0xb0c: MSTORE vb09 v58d
0xb0d: vb0d = ADDRESS 
0xb0e: vb0e(0x44) = CONST 
0xb11: vb11 = ADD vaf3 vb0e(0x44)
0xb14: MSTORE vb11 vb0d
0xb15: vb15(0x80) = CONST 
0xb17: vb17(0x64) = CONST 
0xb1a: vb1a = ADD vaf3 vb17(0x64)
0xb1d: MSTORE vb1a vb15(0x80)
0xb1f: vb1f = MLOAD v5f1
0xb20: vb20(0x84) = CONST 
0xb23: vb23 = ADD vaf3 vb20(0x84)
0xb24: MSTORE vb23 vb1f
0xb26: vb26 = MLOAD v5f1
0xb27: vb27(0x1) = CONST 
0xb29: vb29(0x1) = CONST 
0xb2b: vb2b(0xa0) = CONST 
0xb2d: vb2d(0x10000000000000000000000000000000000000000) = SHL vb2b(0xa0) vb29(0x1)
0xb2e: vb2e(0xffffffffffffffffffffffffffffffffffffffff) = SUB vb2d(0x10000000000000000000000000000000000000000) vb27(0x1)
0xb30: vb30 = AND v587 vb2e(0xffffffffffffffffffffffffffffffffffffffff)
0xb32: vb32(0x8f4ffcb1) = CONST 
0xb42: vb42(0xa4) = CONST 
0xb46: vb46 = ADD vaf3 vb42(0xa4)
0xb48: vb48(0x20) = CONST 
0xb4b: vb4b = ADD v5f1 vb48(0x20)
0xb50: vb50(0x0) = CONST 
----------------------------------

Begin block 0xb52
prev = {'0xaf0', '0xb5b'}, next = {'0xb6a', '0xb5b'}
----------------------------------
Block 0xb52
0xb52_0x0: vb52_0 = PHI vb50(0x0) vb65
0xb55: vb55 = LT vb52_0 vb26
0xb56: vb56 = ISZERO vb55
0xb57: vb57(0xb6a) = CONST 
0xb5a: JUMPI vb57(0xb6a) vb56
----------------------------------

Begin block 0xb5b
prev = {'0xb52'}, next = {'0xb52'}
----------------------------------
Block 0xb5b
0xb5b_0x0: vb5b_0 = PHI vb50(0x0) vb65
0xb5d: vb5d = ADD vb5b_0 vb4b
0xb5e: vb5e = MLOAD vb5d
0xb61: vb61 = ADD vb5b_0 vb46
0xb62: MSTORE vb61 vb5e
0xb63: vb63(0x20) = CONST 
0xb65: vb65 = ADD vb63(0x20) vb5b_0
0xb66: vb66(0xb52) = CONST 
0xb69: JUMP vb66(0xb52)
----------------------------------

Begin block 0xb6a
prev = {'0xb52'}, next = {'0xb7e', '0xb97'}
----------------------------------
Block 0xb6a
0xb73: vb73 = ADD vb26 vb46
0xb75: vb75(0x1f) = CONST 
0xb77: vb77 = AND vb75(0x1f) vb26
0xb79: vb79 = ISZERO vb77
0xb7a: vb7a(0xb97) = CONST 
0xb7d: JUMPI vb7a(0xb97) vb79
----------------------------------

Begin block 0xb7e
prev = {'0xb6a'}, next = {'0xb97'}
----------------------------------
Block 0xb7e
0xb80: vb80 = SUB vb73 vb77
0xb82: vb82 = MLOAD vb80
0xb83: vb83(0x1) = CONST 
0xb86: vb86(0x20) = CONST 
0xb88: vb88 = SUB vb86(0x20) vb77
0xb89: vb89(0x100) = CONST 
0xb8c: vb8c = EXP vb89(0x100) vb88
0xb8d: vb8d = SUB vb8c vb83(0x1)
0xb8e: vb8e = NOT vb8d
0xb8f: vb8f = AND vb8e vb82
0xb91: MSTORE vb80 vb8f
0xb92: vb92(0x20) = CONST 
0xb94: vb94 = ADD vb92(0x20) vb80
----------------------------------

Begin block 0xb97
prev = {'0xb7e', '0xb6a'}, next = {'0xbb9', '0xbb5'}
----------------------------------
Block 0xb97
0xb97_0x1: vb97_1 = PHI vb73 vb94
0xba0: vba0(0x20) = CONST 
0xba2: vba2(0x40) = CONST 
0xba4: vba4 = MLOAD vba2(0x40)
0xba7: vba7 = SUB vb97_1 vba4
0xba9: vba9(0x0) = CONST 
0xbad: vbad = EXTCODESIZE vb30
0xbae: vbae = ISZERO vbad
0xbb0: vbb0 = ISZERO vbae
0xbb1: vbb1(0xbb9) = CONST 
0xbb4: JUMPI vbb1(0xbb9) vbb0
----------------------------------

Begin block 0xbb5
prev = {'0xb97'}, next = {}
----------------------------------
Block 0xbb5
0xbb5: vbb5(0x0) = CONST 
0xbb8: REVERT vbb5(0x0) vbb5(0x0)
----------------------------------

Begin block 0xbb9
prev = {'0xb97'}, next = {'0xbc4', '0xbcd'}
----------------------------------
Block 0xbb9
0xbbb: vbbb = GAS 
0xbbc: vbbc = CALL vbbb vb30 vba9(0x0) vba4 vba7 vba4 vba0(0x20)
0xbbd: vbbd = ISZERO vbbc
0xbbf: vbbf = ISZERO vbbd
0xbc0: vbc0(0xbcd) = CONST 
0xbc3: JUMPI vbc0(0xbcd) vbbf
----------------------------------

Begin block 0xbc4
prev = {'0xbb9'}, next = {}
----------------------------------
Block 0xbc4
0xbc4: vbc4 = RETURNDATASIZE 
0xbc5: vbc5(0x0) = CONST 
0xbc8: RETURNDATACOPY vbc5(0x0) vbc5(0x0) vbc4
0xbc9: vbc9 = RETURNDATASIZE 
0xbca: vbca(0x0) = CONST 
0xbcc: REVERT vbca(0x0) vbc9
----------------------------------

Begin block 0xbcd
prev = {'0xbb9'}, next = {'0xbdf', '0xbe3'}
----------------------------------
Block 0xbcd
0xbd2: vbd2(0x40) = CONST 
0xbd4: vbd4 = MLOAD vbd2(0x40)
0xbd5: vbd5 = RETURNDATASIZE 
0xbd6: vbd6(0x20) = CONST 
0xbd9: vbd9 = LT vbd5 vbd6(0x20)
0xbda: vbda = ISZERO vbd9
0xbdb: vbdb(0xbe3) = CONST 
0xbde: JUMPI vbdb(0xbe3) vbda
----------------------------------

Begin block 0xbdf
prev = {'0xbcd'}, next = {}
----------------------------------
Block 0xbdf
0xbdf: vbdf(0x0) = CONST 
0xbe2: REVERT vbdf(0x0) vbdf(0x0)
----------------------------------

Begin block 0xbe3
prev = {'0xbcd'}, next = {'0xbea', '0x76a0x566'}
----------------------------------
Block 0xbe3
0xbe5: vbe5 = MLOAD vbd4
0xbe6: vbe6(0x76a) = CONST 
0xbe9: JUMPI vbe6(0x76a) vbe5
----------------------------------

Begin block 0xbea
prev = {'0xbe3'}, next = {}
----------------------------------
Block 0xbea
0xbea: vbea(0x0) = CONST 
0xbed: REVERT vbea(0x0) vbea(0x0)
----------------------------------

Begin block 0xbee
prev = {'0x635'}, next = {'0x20c0x61f'}
----------------------------------
Block 0xbee
0xbef: vbef(0x1) = CONST 
0xbf1: vbf1(0x1) = CONST 
0xbf3: vbf3(0xa0) = CONST 
0xbf5: vbf5(0x10000000000000000000000000000000000000000) = SHL vbf3(0xa0) vbf1(0x1)
0xbf6: vbf6(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbf5(0x10000000000000000000000000000000000000000) vbef(0x1)
0xbf9: vbf9 = AND vbf6(0xffffffffffffffffffffffffffffffffffffffff) v642
0xbfa: vbfa(0x0) = CONST 
0xbfe: MSTORE vbfa(0x0) vbf9
0xbff: vbff(0x2) = CONST 
0xc01: vc01(0x20) = CONST 
0xc05: MSTORE vc01(0x20) vbff(0x2)
0xc06: vc06(0x40) = CONST 
0xc0a: vc0a = SHA3 vbfa(0x0) vc06(0x40)
0xc0e: vc0e = AND vbf6(0xffffffffffffffffffffffffffffffffffffffff) v648
0xc10: MSTORE vbfa(0x0) vc0e
0xc14: MSTORE vc01(0x20) vc0a
0xc15: vc15 = SHA3 vbfa(0x0) vc06(0x40)
0xc16: vc16 = SLOAD vc15
0xc18: JUMP v620(0x20c)
----------------------------------

Begin block 0xc19
prev = {'0x663'}, next = {'0xc21'}
----------------------------------
Block 0xc19
0xc1a: vc1a(0xc21) = CONST 
0xc1d: vc1d(0x9b2) = CONST 
0xc20: vc20_0 = CALLPRIVATE vc1d(0x9b2) vc1a(0xc21)
----------------------------------

Begin block 0xc21
prev = {'0xc19'}, next = {'0xc72', '0xc26'}
----------------------------------
Block 0xc21
0xc22: vc22(0xc72) = CONST 
0xc25: JUMPI vc22(0xc72) vc20_0
----------------------------------

Begin block 0xc26
prev = {'0xc21'}, next = {}
----------------------------------
Block 0xc26
0xc26: vc26(0x40) = CONST 
0xc29: vc29 = MLOAD vc26(0x40)
0xc2a: vc2a(0x461bcd) = CONST 
0xc2e: vc2e(0xe5) = CONST 
0xc30: vc30(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vc2e(0xe5) vc2a(0x461bcd)
0xc32: MSTORE vc29 vc30(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xc33: vc33(0x20) = CONST 
0xc35: vc35(0x4) = CONST 
0xc38: vc38 = ADD vc29 vc35(0x4)
0xc3b: MSTORE vc38 vc33(0x20)
0xc3c: vc3c(0x24) = CONST 
0xc3f: vc3f = ADD vc29 vc3c(0x24)
0xc40: MSTORE vc3f vc33(0x20)
0xc41: vc41(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0xc62: vc62(0x44) = CONST 
0xc65: vc65 = ADD vc29 vc62(0x44)
0xc66: MSTORE vc65 vc41(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xc68: vc68 = MLOAD vc26(0x40)
0xc6c: vc6c = SUB vc29 vc68
0xc6d: vc6d(0x64) = CONST 
0xc6f: vc6f = ADD vc6d(0x64) vc6c
0xc71: REVERT vc68 vc6f
----------------------------------

Begin block 0xc72
prev = {'0xc21'}, next = {'0x1152'}
----------------------------------
Block 0xc72
0xc73: vc73(0xa6b) = CONST 
0xc77: vc77(0x1152) = CONST 
0xc7a: JUMP vc77(0x1152)
----------------------------------

Begin block 0xc7b
prev = {}, next = {'0xcc0', '0xc8a'}
----------------------------------
function 0xc7b(vc7barg0, vc7barg1, vc7barg2, vc7barg3)
Block 0xc7b
0xc7c: vc7c(0x1) = CONST 
0xc7e: vc7e(0x1) = CONST 
0xc80: vc80(0xa0) = CONST 
0xc82: vc82(0x10000000000000000000000000000000000000000) = SHL vc80(0xa0) vc7e(0x1)
0xc83: vc83(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc82(0x10000000000000000000000000000000000000000) vc7c(0x1)
0xc85: vc85 = AND vc7barg2 vc83(0xffffffffffffffffffffffffffffffffffffffff)
0xc86: vc86(0xcc0) = CONST 
0xc89: JUMPI vc86(0xcc0) vc85
----------------------------------

Begin block 0xc8a
prev = {'0xc7b'}, next = {}
----------------------------------
Block 0xc8a
0xc8a: vc8a(0x40) = CONST 
0xc8c: vc8c = MLOAD vc8a(0x40)
0xc8d: vc8d(0x461bcd) = CONST 
0xc91: vc91(0xe5) = CONST 
0xc93: vc93(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vc91(0xe5) vc8d(0x461bcd)
0xc95: MSTORE vc8c vc93(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xc96: vc96(0x4) = CONST 
0xc98: vc98 = ADD vc96(0x4) vc8c
0xc9b: vc9b(0x20) = CONST 
0xc9d: vc9d = ADD vc9b(0x20) vc98
0xca0: vca0 = SUB vc9d vc98
0xca2: MSTORE vc98 vca0
0xca3: vca3(0x24) = CONST 
0xca6: MSTORE vc9d vca3(0x24)
0xca7: vca7(0x20) = CONST 
0xca9: vca9 = ADD vca7(0x20) vc9d
0xcab: vcab(0x13de) = CONST 
0xcae: vcae(0x24) = CONST 
0xcb1: CODECOPY vca9 vcab(0x13de) vcae(0x24)
0xcb2: vcb2(0x40) = CONST 
0xcb4: vcb4 = ADD vcb2(0x40) vca9
0xcb8: vcb8(0x40) = CONST 
0xcba: vcba = MLOAD vcb8(0x40)
0xcbd: vcbd = SUB vcb4 vcba
0xcbf: REVERT vcba vcbd
----------------------------------

Begin block 0xcc0
prev = {'0xc7b'}, next = {'0xccf', '0xd05'}
----------------------------------
Block 0xcc0
0xcc1: vcc1(0x1) = CONST 
0xcc3: vcc3(0x1) = CONST 
0xcc5: vcc5(0xa0) = CONST 
0xcc7: vcc7(0x10000000000000000000000000000000000000000) = SHL vcc5(0xa0) vcc3(0x1)
0xcc8: vcc8(0xffffffffffffffffffffffffffffffffffffffff) = SUB vcc7(0x10000000000000000000000000000000000000000) vcc1(0x1)
0xcca: vcca = AND vc7barg1 vcc8(0xffffffffffffffffffffffffffffffffffffffff)
0xccb: vccb(0xd05) = CONST 
0xcce: JUMPI vccb(0xd05) vcca
----------------------------------

Begin block 0xccf
prev = {'0xcc0'}, next = {}
----------------------------------
Block 0xccf
0xccf: vccf(0x40) = CONST 
0xcd1: vcd1 = MLOAD vccf(0x40)
0xcd2: vcd2(0x461bcd) = CONST 
0xcd6: vcd6(0xe5) = CONST 
0xcd8: vcd8(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vcd6(0xe5) vcd2(0x461bcd)
0xcda: MSTORE vcd1 vcd8(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xcdb: vcdb(0x4) = CONST 
0xcdd: vcdd = ADD vcdb(0x4) vcd1
0xce0: vce0(0x20) = CONST 
0xce2: vce2 = ADD vce0(0x20) vcdd
0xce5: vce5 = SUB vce2 vcdd
0xce7: MSTORE vcdd vce5
0xce8: vce8(0x22) = CONST 
0xceb: MSTORE vce2 vce8(0x22)
0xcec: vcec(0x20) = CONST 
0xcee: vcee = ADD vcec(0x20) vce2
0xcf0: vcf0(0x1324) = CONST 
0xcf3: vcf3(0x22) = CONST 
0xcf6: CODECOPY vcee vcf0(0x1324) vcf3(0x22)
0xcf7: vcf7(0x40) = CONST 
0xcf9: vcf9 = ADD vcf7(0x40) vcee
0xcfd: vcfd(0x40) = CONST 
0xcff: vcff = MLOAD vcfd(0x40)
0xd02: vd02 = SUB vcf9 vcff
0xd04: REVERT vcff vd02
----------------------------------

Begin block 0xd05
prev = {'0xcc0'}, next = {}
----------------------------------
Block 0xd05
0xd06: vd06(0x1) = CONST 
0xd08: vd08(0x1) = CONST 
0xd0a: vd0a(0xa0) = CONST 
0xd0c: vd0c(0x10000000000000000000000000000000000000000) = SHL vd0a(0xa0) vd08(0x1)
0xd0d: vd0d(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd0c(0x10000000000000000000000000000000000000000) vd06(0x1)
0xd10: vd10 = AND vc7barg2 vd0d(0xffffffffffffffffffffffffffffffffffffffff)
0xd11: vd11(0x0) = CONST 
0xd15: MSTORE vd11(0x0) vd10
0xd16: vd16(0x2) = CONST 
0xd18: vd18(0x20) = CONST 
0xd1c: MSTORE vd18(0x20) vd16(0x2)
0xd1d: vd1d(0x40) = CONST 
0xd21: vd21 = SHA3 vd11(0x0) vd1d(0x40)
0xd24: vd24 = AND vc7barg1 vd0d(0xffffffffffffffffffffffffffffffffffffffff)
0xd27: MSTORE vd11(0x0) vd24
0xd2a: MSTORE vd18(0x20) vd21
0xd2e: vd2e = SHA3 vd11(0x0) vd1d(0x40)
0xd31: SSTORE vd2e vc7barg0
0xd33: vd33 = MLOAD vd1d(0x40)
0xd36: MSTORE vd33 vc7barg0
0xd38: vd38 = MLOAD vd1d(0x40)
0xd39: vd39(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0xd5d: vd5d = SUB vd33 vd38
0xd60: vd60 = ADD vd18(0x20) vd5d
0xd62: LOG3 vd38 vd60 vd39(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) vd10 vd24
0xd66: RETURNPRIVATE vc7barg3
----------------------------------

Begin block 0xd67
prev = {}, next = {'0xdac', '0xd76'}
----------------------------------
function 0xd67(vd67arg0, vd67arg1, vd67arg2, vd67arg3)
Block 0xd67
0xd68: vd68(0x1) = CONST 
0xd6a: vd6a(0x1) = CONST 
0xd6c: vd6c(0xa0) = CONST 
0xd6e: vd6e(0x10000000000000000000000000000000000000000) = SHL vd6c(0xa0) vd6a(0x1)
0xd6f: vd6f(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd6e(0x10000000000000000000000000000000000000000) vd68(0x1)
0xd71: vd71 = AND vd67arg2 vd6f(0xffffffffffffffffffffffffffffffffffffffff)
0xd72: vd72(0xdac) = CONST 
0xd75: JUMPI vd72(0xdac) vd71
----------------------------------

Begin block 0xd76
prev = {'0xd67'}, next = {}
----------------------------------
Block 0xd76
0xd76: vd76(0x40) = CONST 
0xd78: vd78 = MLOAD vd76(0x40)
0xd79: vd79(0x461bcd) = CONST 
0xd7d: vd7d(0xe5) = CONST 
0xd7f: vd7f(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vd7d(0xe5) vd79(0x461bcd)
0xd81: MSTORE vd78 vd7f(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xd82: vd82(0x4) = CONST 
0xd84: vd84 = ADD vd82(0x4) vd78
0xd87: vd87(0x20) = CONST 
0xd89: vd89 = ADD vd87(0x20) vd84
0xd8c: vd8c = SUB vd89 vd84
0xd8e: MSTORE vd84 vd8c
0xd8f: vd8f(0x25) = CONST 
0xd92: MSTORE vd89 vd8f(0x25)
0xd93: vd93(0x20) = CONST 
0xd95: vd95 = ADD vd93(0x20) vd89
0xd97: vd97(0x13b9) = CONST 
0xd9a: vd9a(0x25) = CONST 
0xd9d: CODECOPY vd95 vd97(0x13b9) vd9a(0x25)
0xd9e: vd9e(0x40) = CONST 
0xda0: vda0 = ADD vd9e(0x40) vd95
0xda4: vda4(0x40) = CONST 
0xda6: vda6 = MLOAD vda4(0x40)
0xda9: vda9 = SUB vda0 vda6
0xdab: REVERT vda6 vda9
----------------------------------

Begin block 0xdac
prev = {'0xd67'}, next = {'0xdbb', '0xdf1'}
----------------------------------
Block 0xdac
0xdad: vdad(0x1) = CONST 
0xdaf: vdaf(0x1) = CONST 
0xdb1: vdb1(0xa0) = CONST 
0xdb3: vdb3(0x10000000000000000000000000000000000000000) = SHL vdb1(0xa0) vdaf(0x1)
0xdb4: vdb4(0xffffffffffffffffffffffffffffffffffffffff) = SUB vdb3(0x10000000000000000000000000000000000000000) vdad(0x1)
0xdb6: vdb6 = AND vd67arg1 vdb4(0xffffffffffffffffffffffffffffffffffffffff)
0xdb7: vdb7(0xdf1) = CONST 
0xdba: JUMPI vdb7(0xdf1) vdb6
----------------------------------

Begin block 0xdbb
prev = {'0xdac'}, next = {}
----------------------------------
Block 0xdbb
0xdbb: vdbb(0x40) = CONST 
0xdbd: vdbd = MLOAD vdbb(0x40)
0xdbe: vdbe(0x461bcd) = CONST 
0xdc2: vdc2(0xe5) = CONST 
0xdc4: vdc4(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vdc2(0xe5) vdbe(0x461bcd)
0xdc6: MSTORE vdbd vdc4(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xdc7: vdc7(0x4) = CONST 
0xdc9: vdc9 = ADD vdc7(0x4) vdbd
0xdcc: vdcc(0x20) = CONST 
0xdce: vdce = ADD vdcc(0x20) vdc9
0xdd1: vdd1 = SUB vdce vdc9
0xdd3: MSTORE vdc9 vdd1
0xdd4: vdd4(0x23) = CONST 
0xdd7: MSTORE vdce vdd4(0x23)
0xdd8: vdd8(0x20) = CONST 
0xdda: vdda = ADD vdd8(0x20) vdce
0xddc: vddc(0x12db) = CONST 
0xddf: vddf(0x23) = CONST 
0xde2: CODECOPY vdda vddc(0x12db) vddf(0x23)
0xde3: vde3(0x40) = CONST 
0xde5: vde5 = ADD vde3(0x40) vdda
0xde9: vde9(0x40) = CONST 
0xdeb: vdeb = MLOAD vde9(0x40)
0xdee: vdee = SUB vde5 vdeb
0xdf0: REVERT vdeb vdee
----------------------------------

Begin block 0xdf1
prev = {'0xdac'}, next = {'0xe1a'}
----------------------------------
Block 0xdf1
0xdf2: vdf2(0x1) = CONST 
0xdf4: vdf4(0x1) = CONST 
0xdf6: vdf6(0xa0) = CONST 
0xdf8: vdf8(0x10000000000000000000000000000000000000000) = SHL vdf6(0xa0) vdf4(0x1)
0xdf9: vdf9(0xffffffffffffffffffffffffffffffffffffffff) = SUB vdf8(0x10000000000000000000000000000000000000000) vdf2(0x1)
0xdfb: vdfb = AND vd67arg2 vdf9(0xffffffffffffffffffffffffffffffffffffffff)
0xdfc: vdfc(0x0) = CONST 
0xe00: MSTORE vdfc(0x0) vdfb
0xe01: ve01(0x1) = CONST 
0xe03: ve03(0x20) = CONST 
0xe05: MSTORE ve03(0x20) ve01(0x1)
0xe06: ve06(0x40) = CONST 
0xe09: ve09 = SHA3 vdfc(0x0) ve06(0x40)
0xe0a: ve0a = SLOAD ve09
0xe0b: ve0b(0xe1a) = CONST 
0xe10: ve10(0xffffffff) = CONST 
0xe15: ve15(0xeab) = CONST 
0xe18: ve18(0xeab) = AND ve15(0xeab) ve10(0xffffffff)
0xe19: ve19_0 = CALLPRIVATE ve18(0xeab) vd67arg0 ve0a ve0b(0xe1a)
----------------------------------

Begin block 0xe1a
prev = {'0xdf1'}, next = {'0xe4f'}
----------------------------------
Block 0xe1a
0xe1b: ve1b(0x1) = CONST 
0xe1d: ve1d(0x1) = CONST 
0xe1f: ve1f(0xa0) = CONST 
0xe21: ve21(0x10000000000000000000000000000000000000000) = SHL ve1f(0xa0) ve1d(0x1)
0xe22: ve22(0xffffffffffffffffffffffffffffffffffffffff) = SUB ve21(0x10000000000000000000000000000000000000000) ve1b(0x1)
0xe25: ve25 = AND vd67arg2 ve22(0xffffffffffffffffffffffffffffffffffffffff)
0xe26: ve26(0x0) = CONST 
0xe2a: MSTORE ve26(0x0) ve25
0xe2b: ve2b(0x1) = CONST 
0xe2d: ve2d(0x20) = CONST 
0xe2f: MSTORE ve2d(0x20) ve2b(0x1)
0xe30: ve30(0x40) = CONST 
0xe34: ve34 = SHA3 ve26(0x0) ve30(0x40)
0xe38: SSTORE ve34 ve19_0
0xe3b: ve3b = AND vd67arg1 ve22(0xffffffffffffffffffffffffffffffffffffffff)
0xe3d: MSTORE ve26(0x0) ve3b
0xe3e: ve3e = SHA3 ve26(0x0) ve30(0x40)
0xe3f: ve3f = SLOAD ve3e
0xe40: ve40(0xe4f) = CONST 
0xe45: ve45(0xffffffff) = CONST 
0xe4a: ve4a(0xf08) = CONST 
0xe4d: ve4d(0xf08) = AND ve4a(0xf08) ve45(0xffffffff)
0xe4e: ve4e_0 = CALLPRIVATE ve4d(0xf08) vd67arg0 ve3f ve40(0xe4f)
----------------------------------

Begin block 0xe4f
prev = {'0xe1a'}, next = {}
----------------------------------
Block 0xe4f
0xe50: ve50(0x1) = CONST 
0xe52: ve52(0x1) = CONST 
0xe54: ve54(0xa0) = CONST 
0xe56: ve56(0x10000000000000000000000000000000000000000) = SHL ve54(0xa0) ve52(0x1)
0xe57: ve57(0xffffffffffffffffffffffffffffffffffffffff) = SUB ve56(0x10000000000000000000000000000000000000000) ve50(0x1)
0xe5a: ve5a = AND vd67arg1 ve57(0xffffffffffffffffffffffffffffffffffffffff)
0xe5b: ve5b(0x0) = CONST 
0xe5f: MSTORE ve5b(0x0) ve5a
0xe60: ve60(0x1) = CONST 
0xe62: ve62(0x20) = CONST 
0xe66: MSTORE ve62(0x20) ve60(0x1)
0xe67: ve67(0x40) = CONST 
0xe6c: ve6c = SHA3 ve5b(0x0) ve67(0x40)
0xe70: SSTORE ve6c ve4e_0
0xe72: ve72 = MLOAD ve67(0x40)
0xe75: MSTORE ve72 vd67arg0
0xe77: ve77 = MLOAD ve67(0x40)
0xe7c: ve7c = AND vd67arg2 ve57(0xffffffffffffffffffffffffffffffffffffffff)
0xe7e: ve7e(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0xea3: vea3 = SUB ve72 ve77
0xea4: vea4 = ADD vea3 ve62(0x20)
0xea6: LOG3 ve77 vea4 ve7e(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) ve7c ve5a
0xeaa: RETURNPRIVATE vd67arg3
----------------------------------

Begin block 0xeab
prev = {}, next = {'0xf02', '0xeb6'}
----------------------------------
function 0xeab(veabarg0, veabarg1, veabarg2)
Block 0xeab
0xeac: veac(0x0) = CONST 
0xeb0: veb0 = GT veabarg0 veabarg1
0xeb1: veb1 = ISZERO veb0
0xeb2: veb2(0xf02) = CONST 
0xeb5: JUMPI veb2(0xf02) veb1
----------------------------------

Begin block 0xeb6
prev = {'0xeab'}, next = {}
----------------------------------
Block 0xeb6
0xeb6: veb6(0x40) = CONST 
0xeb9: veb9 = MLOAD veb6(0x40)
0xeba: veba(0x461bcd) = CONST 
0xebe: vebe(0xe5) = CONST 
0xec0: vec0(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vebe(0xe5) veba(0x461bcd)
0xec2: MSTORE veb9 vec0(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xec3: vec3(0x20) = CONST 
0xec5: vec5(0x4) = CONST 
0xec8: vec8 = ADD veb9 vec5(0x4)
0xec9: MSTORE vec8 vec3(0x20)
0xeca: veca(0x1e) = CONST 
0xecc: vecc(0x24) = CONST 
0xecf: vecf = ADD veb9 vecc(0x24)
0xed0: MSTORE vecf veca(0x1e)
0xed1: ved1(0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000) = CONST 
0xef2: vef2(0x44) = CONST 
0xef5: vef5 = ADD veb9 vef2(0x44)
0xef6: MSTORE vef5 ved1(0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000)
0xef8: vef8 = MLOAD veb6(0x40)
0xefc: vefc = SUB veb9 vef8
0xefd: vefd(0x64) = CONST 
0xeff: veff = ADD vefd(0x64) vefc
0xf01: REVERT vef8 veff
----------------------------------

Begin block 0xf02
prev = {'0xeab'}, next = {}
----------------------------------
Block 0xf02
0xf05: vf05 = SUB veabarg1 veabarg0
0xf07: RETURNPRIVATE veabarg2 vf05
----------------------------------

Begin block 0xf08
prev = {}, next = {'0xf62', '0xf16'}
----------------------------------
function 0xf08(vf08arg0, vf08arg1, vf08arg2)
Block 0xf08
0xf09: vf09(0x0) = CONST 
0xf0d: vf0d = ADD vf08arg0 vf08arg1
0xf10: vf10 = LT vf0d vf08arg1
0xf11: vf11 = ISZERO vf10
0xf12: vf12(0xf62) = CONST 
0xf15: JUMPI vf12(0xf62) vf11
----------------------------------

Begin block 0xf16
prev = {'0xf08'}, next = {}
----------------------------------
Block 0xf16
0xf16: vf16(0x40) = CONST 
0xf19: vf19 = MLOAD vf16(0x40)
0xf1a: vf1a(0x461bcd) = CONST 
0xf1e: vf1e(0xe5) = CONST 
0xf20: vf20(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vf1e(0xe5) vf1a(0x461bcd)
0xf22: MSTORE vf19 vf20(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xf23: vf23(0x20) = CONST 
0xf25: vf25(0x4) = CONST 
0xf28: vf28 = ADD vf19 vf25(0x4)
0xf29: MSTORE vf28 vf23(0x20)
0xf2a: vf2a(0x1b) = CONST 
0xf2c: vf2c(0x24) = CONST 
0xf2f: vf2f = ADD vf19 vf2c(0x24)
0xf30: MSTORE vf2f vf2a(0x1b)
0xf31: vf31(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000) = CONST 
0xf52: vf52(0x44) = CONST 
0xf55: vf55 = ADD vf19 vf52(0x44)
0xf56: MSTORE vf55 vf31(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000)
0xf58: vf58 = MLOAD vf16(0x40)
0xf5c: vf5c = SUB vf19 vf58
0xf5d: vf5d(0x64) = CONST 
0xf5f: vf5f = ADD vf5d(0x64) vf5c
0xf61: REVERT vf58 vf5f
----------------------------------

Begin block 0xf62
prev = {'0xf08'}, next = {}
----------------------------------
Block 0xf62
0xf68: RETURNPRIVATE vf08arg2 vf0d
----------------------------------

Begin block 0xf69
prev = {'0x7ff'}, next = {'0xfc4', '0xf78'}
----------------------------------
Block 0xf69
0xf6a: vf6a(0x1) = CONST 
0xf6c: vf6c(0x1) = CONST 
0xf6e: vf6e(0xa0) = CONST 
0xf70: vf70(0x10000000000000000000000000000000000000000) = SHL vf6e(0xa0) vf6c(0x1)
0xf71: vf71(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf70(0x10000000000000000000000000000000000000000) vf6a(0x1)
0xf73: vf73 = AND v2c0 vf71(0xffffffffffffffffffffffffffffffffffffffff)
0xf74: vf74(0xfc4) = CONST 
0xf77: JUMPI vf74(0xfc4) vf73
----------------------------------

Begin block 0xf78
prev = {'0xf69'}, next = {}
----------------------------------
Block 0xf78
0xf78: vf78(0x40) = CONST 
0xf7b: vf7b = MLOAD vf78(0x40)
0xf7c: vf7c(0x461bcd) = CONST 
0xf80: vf80(0xe5) = CONST 
0xf82: vf82(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vf80(0xe5) vf7c(0x461bcd)
0xf84: MSTORE vf7b vf82(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xf85: vf85(0x20) = CONST 
0xf87: vf87(0x4) = CONST 
0xf8a: vf8a = ADD vf7b vf87(0x4)
0xf8b: MSTORE vf8a vf85(0x20)
0xf8c: vf8c(0x1f) = CONST 
0xf8e: vf8e(0x24) = CONST 
0xf91: vf91 = ADD vf7b vf8e(0x24)
0xf92: MSTORE vf91 vf8c(0x1f)
0xf93: vf93(0x45524332303a206d696e7420746f20746865207a65726f206164647265737300) = CONST 
0xfb4: vfb4(0x44) = CONST 
0xfb7: vfb7 = ADD vf7b vfb4(0x44)
0xfb8: MSTORE vfb7 vf93(0x45524332303a206d696e7420746f20746865207a65726f206164647265737300)
0xfba: vfba = MLOAD vf78(0x40)
0xfbe: vfbe = SUB vf7b vfba
0xfbf: vfbf(0x64) = CONST 
0xfc1: vfc1 = ADD vfbf(0x64) vfbe
0xfc3: REVERT vfba vfc1
----------------------------------

Begin block 0xfc4
prev = {'0xf69'}, next = {'0xfd7'}
----------------------------------
Block 0xfc4
0xfc5: vfc5(0x3) = CONST 
0xfc7: vfc7 = SLOAD vfc5(0x3)
0xfc8: vfc8(0xfd7) = CONST 
0xfcd: vfcd(0xffffffff) = CONST 
0xfd2: vfd2(0xf08) = CONST 
0xfd5: vfd5(0xf08) = AND vfd2(0xf08) vfcd(0xffffffff)
0xfd6: vfd6_0 = CALLPRIVATE vfd5(0xf08) v2c5 vfc7 vfc8(0xfd7)
----------------------------------

Begin block 0xfd7
prev = {'0xfc4'}, next = {'0x1003'}
----------------------------------
Block 0xfd7
0xfd8: vfd8(0x3) = CONST 
0xfda: SSTORE vfd8(0x3) vfd6_0
0xfdb: vfdb(0x1) = CONST 
0xfdd: vfdd(0x1) = CONST 
0xfdf: vfdf(0xa0) = CONST 
0xfe1: vfe1(0x10000000000000000000000000000000000000000) = SHL vfdf(0xa0) vfdd(0x1)
0xfe2: vfe2(0xffffffffffffffffffffffffffffffffffffffff) = SUB vfe1(0x10000000000000000000000000000000000000000) vfdb(0x1)
0xfe4: vfe4 = AND v2c0 vfe2(0xffffffffffffffffffffffffffffffffffffffff)
0xfe5: vfe5(0x0) = CONST 
0xfe9: MSTORE vfe5(0x0) vfe4
0xfea: vfea(0x1) = CONST 
0xfec: vfec(0x20) = CONST 
0xfee: MSTORE vfec(0x20) vfea(0x1)
0xfef: vfef(0x40) = CONST 
0xff2: vff2 = SHA3 vfe5(0x0) vfef(0x40)
0xff3: vff3 = SLOAD vff2
0xff4: vff4(0x1003) = CONST 
0xff9: vff9(0xffffffff) = CONST 
0xffe: vffe(0xf08) = CONST 
0x1001: v1001(0xf08) = AND vffe(0xf08) vff9(0xffffffff)
0x1002: v1002_0 = CALLPRIVATE v1001(0xf08) v2c5 vff3 vff4(0x1003)
----------------------------------

Begin block 0x1003
prev = {'0xfd7'}, next = {'0x70e0x29e'}
----------------------------------
Block 0x1003
0x1004: v1004(0x1) = CONST 
0x1006: v1006(0x1) = CONST 
0x1008: v1008(0xa0) = CONST 
0x100a: v100a(0x10000000000000000000000000000000000000000) = SHL v1008(0xa0) v1006(0x1)
0x100b: v100b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v100a(0x10000000000000000000000000000000000000000) v1004(0x1)
0x100d: v100d = AND v2c0 v100b(0xffffffffffffffffffffffffffffffffffffffff)
0x100e: v100e(0x0) = CONST 
0x1012: MSTORE v100e(0x0) v100d
0x1013: v1013(0x1) = CONST 
0x1015: v1015(0x20) = CONST 
0x1019: MSTORE v1015(0x20) v1013(0x1)
0x101a: v101a(0x40) = CONST 
0x101e: v101e = SHA3 v100e(0x0) v101a(0x40)
0x1022: SSTORE v101e v1002_0
0x1024: v1024 = MLOAD v101a(0x40)
0x1027: MSTORE v1024 v2c5
0x1029: v1029 = MLOAD v101a(0x40)
0x102e: v102e(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x1052: v1052 = SUB v1024 v1029
0x1055: v1055 = ADD v1015(0x20) v1052
0x1057: LOG3 v1029 v1055 v102e(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v100e(0x0) v100d
0x105a: JUMP v800(0x70e)
----------------------------------

Begin block 0x105b
prev = {'0xa62'}, next = {'0x11f2'}
----------------------------------
Block 0x105b
0x105c: v105c(0x106c) = CONST 
0x105f: v105f(0x4) = CONST 
0x1062: v1062(0xffffffff) = CONST 
0x1067: v1067(0x11f2) = CONST 
0x106a: v106a(0x11f2) = AND v1067(0x11f2) v1062(0xffffffff)
0x106b: JUMP v106a(0x11f2)
----------------------------------

Begin block 0x106c
prev = {'0x124e'}, next = {'0xa6b0x4ba'}
----------------------------------
Block 0x106c
0x106d: v106d(0x40) = CONST 
0x106f: v106f = MLOAD v106d(0x40)
0x1070: v1070(0x1) = CONST 
0x1072: v1072(0x1) = CONST 
0x1074: v1074(0xa0) = CONST 
0x1076: v1076(0x10000000000000000000000000000000000000000) = SHL v1074(0xa0) v1072(0x1)
0x1077: v1077(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1076(0x10000000000000000000000000000000000000000) v1070(0x1)
0x1079: v1079 = AND v4db v1077(0xffffffffffffffffffffffffffffffffffffffff)
0x107b: v107b(0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6) = CONST 
0x109d: v109d(0x0) = CONST 
0x10a0: LOG2 v106f v109d(0x0) v107b(0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6) v1079
0x10a2: JUMP va63(0xa6b)
----------------------------------

Begin block 0x10a3
prev = {'0xa6e'}, next = {'0x1273'}
----------------------------------
Block 0x10a3
0x10a4: v10a4(0x10b4) = CONST 
0x10a7: v10a7(0x4) = CONST 
0x10aa: v10aa(0xffffffff) = CONST 
0x10af: v10af(0x1273) = CONST 
0x10b2: v10b2(0x1273) = AND v10af(0x1273) v10aa(0xffffffff)
0x10b3: JUMP v10b2(0x1273)
----------------------------------

Begin block 0x10b4
prev = {'0x12b8'}, next = {'0xa77'}
----------------------------------
Block 0x10b4
0x10b5: v10b5(0x40) = CONST 
0x10b7: v10b7 = MLOAD v10b5(0x40)
0x10b8: v10b8(0x1) = CONST 
0x10ba: v10ba(0x1) = CONST 
0x10bc: v10bc(0xa0) = CONST 
0x10be: v10be(0x10000000000000000000000000000000000000000) = SHL v10bc(0xa0) v10ba(0x1)
0x10bf: v10bf(0xffffffffffffffffffffffffffffffffffffffff) = SUB v10be(0x10000000000000000000000000000000000000000) v10b8(0x1)
0x10c1: v10c1 = AND va72 v10bf(0xffffffffffffffffffffffffffffffffffffffff)
0x10c3: v10c3(0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692) = CONST 
0x10e5: v10e5(0x0) = CONST 
0x10e8: LOG2 v10b7 v10e5(0x0) v10c3(0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692) v10c1
0x10ea: JUMP va6f(0xa77)
----------------------------------

Begin block 0x10eb
prev = {}, next = {'0x10fc', '0x1132'}
----------------------------------
function 0x10eb(v10ebarg0, v10ebarg1, v10ebarg2)
Block 0x10eb
0x10ec: v10ec(0x0) = CONST 
0x10ee: v10ee(0x1) = CONST 
0x10f0: v10f0(0x1) = CONST 
0x10f2: v10f2(0xa0) = CONST 
0x10f4: v10f4(0x10000000000000000000000000000000000000000) = SHL v10f2(0xa0) v10f0(0x1)
0x10f5: v10f5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v10f4(0x10000000000000000000000000000000000000000) v10ee(0x1)
0x10f7: v10f7 = AND v10ebarg0 v10f5(0xffffffffffffffffffffffffffffffffffffffff)
0x10f8: v10f8(0x1132) = CONST 
0x10fb: JUMPI v10f8(0x1132) v10f7
----------------------------------

Begin block 0x10fc
prev = {'0x10eb'}, next = {}
----------------------------------
Block 0x10fc
0x10fc: v10fc(0x40) = CONST 
0x10fe: v10fe = MLOAD v10fc(0x40)
0x10ff: v10ff(0x461bcd) = CONST 
0x1103: v1103(0xe5) = CONST 
0x1105: v1105(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1103(0xe5) v10ff(0x461bcd)
0x1107: MSTORE v10fe v1105(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1108: v1108(0x4) = CONST 
0x110a: v110a = ADD v1108(0x4) v10fe
0x110d: v110d(0x20) = CONST 
0x110f: v110f = ADD v110d(0x20) v110a
0x1112: v1112 = SUB v110f v110a
0x1114: MSTORE v110a v1112
0x1115: v1115(0x22) = CONST 
0x1118: MSTORE v110f v1115(0x22)
0x1119: v1119(0x20) = CONST 
0x111b: v111b = ADD v1119(0x20) v110f
0x111d: v111d(0x1397) = CONST 
0x1120: v1120(0x22) = CONST 
0x1123: CODECOPY v111b v111d(0x1397) v1120(0x22)
0x1124: v1124(0x40) = CONST 
0x1126: v1126 = ADD v1124(0x40) v111b
0x112a: v112a(0x40) = CONST 
0x112c: v112c = MLOAD v112a(0x40)
0x112f: v112f = SUB v1126 v112c
0x1131: REVERT v112c v112f
----------------------------------

Begin block 0x1132
prev = {'0x10eb'}, next = {}
----------------------------------
Block 0x1132
0x1134: v1134(0x1) = CONST 
0x1136: v1136(0x1) = CONST 
0x1138: v1138(0xa0) = CONST 
0x113a: v113a(0x10000000000000000000000000000000000000000) = SHL v1138(0xa0) v1136(0x1)
0x113b: v113b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v113a(0x10000000000000000000000000000000000000000) v1134(0x1)
0x113c: v113c = AND v113b(0xffffffffffffffffffffffffffffffffffffffff) v10ebarg0
0x113d: v113d(0x0) = CONST 
0x1141: MSTORE v113d(0x0) v113c
0x1142: v1142(0x20) = CONST 
0x1147: MSTORE v1142(0x20) v10ebarg1
0x1148: v1148(0x40) = CONST 
0x114b: v114b = SHA3 v113d(0x0) v1148(0x40)
0x114c: v114c = SLOAD v114b
0x114d: v114d(0xff) = CONST 
0x114f: v114f = AND v114d(0xff) v114c
0x1151: RETURNPRIVATE v10ebarg2 v114f
----------------------------------

Begin block 0x1152
prev = {'0xc72'}, next = {'0x1161', '0x1197'}
----------------------------------
Block 0x1152
0x1153: v1153(0x1) = CONST 
0x1155: v1155(0x1) = CONST 
0x1157: v1157(0xa0) = CONST 
0x1159: v1159(0x10000000000000000000000000000000000000000) = SHL v1157(0xa0) v1155(0x1)
0x115a: v115a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1159(0x10000000000000000000000000000000000000000) v1153(0x1)
0x115c: v115c = AND v66e v115a(0xffffffffffffffffffffffffffffffffffffffff)
0x115d: v115d(0x1197) = CONST 
0x1160: JUMPI v115d(0x1197) v115c
----------------------------------

Begin block 0x1161
prev = {'0x1152'}, next = {}
----------------------------------
Block 0x1161
0x1161: v1161(0x40) = CONST 
0x1163: v1163 = MLOAD v1161(0x40)
0x1164: v1164(0x461bcd) = CONST 
0x1168: v1168(0xe5) = CONST 
0x116a: v116a(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1168(0xe5) v1164(0x461bcd)
0x116c: MSTORE v1163 v116a(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x116d: v116d(0x4) = CONST 
0x116f: v116f = ADD v116d(0x4) v1163
0x1172: v1172(0x20) = CONST 
0x1174: v1174 = ADD v1172(0x20) v116f
0x1177: v1177 = SUB v1174 v116f
0x1179: MSTORE v116f v1177
0x117a: v117a(0x26) = CONST 
0x117d: MSTORE v1174 v117a(0x26)
0x117e: v117e(0x20) = CONST 
0x1180: v1180 = ADD v117e(0x20) v1174
0x1182: v1182(0x12fe) = CONST 
0x1185: v1185(0x26) = CONST 
0x1188: CODECOPY v1180 v1182(0x12fe) v1185(0x26)
0x1189: v1189(0x40) = CONST 
0x118b: v118b = ADD v1189(0x40) v1180
0x118f: v118f(0x40) = CONST 
0x1191: v1191 = MLOAD v118f(0x40)
0x1194: v1194 = SUB v118b v1191
0x1196: REVERT v1191 v1194
----------------------------------

Begin block 0x1197
prev = {'0x1152'}, next = {'0xa6b0x64d'}
----------------------------------
Block 0x1197
0x1198: v1198(0x0) = CONST 
0x119b: v119b = SLOAD v1198(0x0)
0x119c: v119c(0x40) = CONST 
0x119e: v119e = MLOAD v119c(0x40)
0x119f: v119f(0x1) = CONST 
0x11a1: v11a1(0x1) = CONST 
0x11a3: v11a3(0xa0) = CONST 
0x11a5: v11a5(0x10000000000000000000000000000000000000000) = SHL v11a3(0xa0) v11a1(0x1)
0x11a6: v11a6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v11a5(0x10000000000000000000000000000000000000000) v119f(0x1)
0x11a9: v11a9 = AND v66e v11a6(0xffffffffffffffffffffffffffffffffffffffff)
0x11ac: v11ac = AND v119b v11a6(0xffffffffffffffffffffffffffffffffffffffff)
0x11ae: v11ae(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x11d0: LOG3 v119e v1198(0x0) v11ae(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v11ac v11a9
0x11d1: v11d1(0x0) = CONST 
0x11d4: v11d4 = SLOAD v11d1(0x0)
0x11d5: v11d5(0x1) = CONST 
0x11d7: v11d7(0x1) = CONST 
0x11d9: v11d9(0xa0) = CONST 
0x11db: v11db(0x10000000000000000000000000000000000000000) = SHL v11d9(0xa0) v11d7(0x1)
0x11dc: v11dc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v11db(0x10000000000000000000000000000000000000000) v11d5(0x1)
0x11dd: v11dd(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v11dc(0xffffffffffffffffffffffffffffffffffffffff)
0x11de: v11de = AND v11dd(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v11d4
0x11df: v11df(0x1) = CONST 
0x11e1: v11e1(0x1) = CONST 
0x11e3: v11e3(0xa0) = CONST 
0x11e5: v11e5(0x10000000000000000000000000000000000000000) = SHL v11e3(0xa0) v11e1(0x1)
0x11e6: v11e6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v11e5(0x10000000000000000000000000000000000000000) v11df(0x1)
0x11ea: v11ea = AND v11e6(0xffffffffffffffffffffffffffffffffffffffff) v66e
0x11ee: v11ee = OR v11ea v11de
0x11f0: SSTORE v11d1(0x0) v11ee
0x11f1: JUMP vc73(0xa6b)
----------------------------------

Begin block 0x11f2
prev = {'0x105b'}, next = {'0x11fc'}
----------------------------------
Block 0x11f2
0x11f3: v11f3(0x11fc) = CONST 
0x11f8: v11f8(0x10eb) = CONST 
0x11fb: v11fb_0 = CALLPRIVATE v11f8(0x10eb) v4db v105f(0x4) v11f3(0x11fc)
----------------------------------

Begin block 0x11fc
prev = {'0x11f2'}, next = {'0x1202', '0x124e'}
----------------------------------
Block 0x11fc
0x11fd: v11fd = ISZERO v11fb_0
0x11fe: v11fe(0x124e) = CONST 
0x1201: JUMPI v11fe(0x124e) v11fd
----------------------------------

Begin block 0x1202
prev = {'0x11fc'}, next = {}
----------------------------------
Block 0x1202
0x1202: v1202(0x40) = CONST 
0x1205: v1205 = MLOAD v1202(0x40)
0x1206: v1206(0x461bcd) = CONST 
0x120a: v120a(0xe5) = CONST 
0x120c: v120c(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v120a(0xe5) v1206(0x461bcd)
0x120e: MSTORE v1205 v120c(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x120f: v120f(0x20) = CONST 
0x1211: v1211(0x4) = CONST 
0x1214: v1214 = ADD v1205 v1211(0x4)
0x1215: MSTORE v1214 v120f(0x20)
0x1216: v1216(0x1f) = CONST 
0x1218: v1218(0x24) = CONST 
0x121b: v121b = ADD v1205 v1218(0x24)
0x121c: MSTORE v121b v1216(0x1f)
0x121d: v121d(0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500) = CONST 
0x123e: v123e(0x44) = CONST 
0x1241: v1241 = ADD v1205 v123e(0x44)
0x1242: MSTORE v1241 v121d(0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500)
0x1244: v1244 = MLOAD v1202(0x40)
0x1248: v1248 = SUB v1205 v1244
0x1249: v1249(0x64) = CONST 
0x124b: v124b = ADD v1249(0x64) v1248
0x124d: REVERT v1244 v124b
----------------------------------

Begin block 0x124e
prev = {'0x11fc'}, next = {'0x106c'}
----------------------------------
Block 0x124e
0x124f: v124f(0x1) = CONST 
0x1251: v1251(0x1) = CONST 
0x1253: v1253(0xa0) = CONST 
0x1255: v1255(0x10000000000000000000000000000000000000000) = SHL v1253(0xa0) v1251(0x1)
0x1256: v1256(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1255(0x10000000000000000000000000000000000000000) v124f(0x1)
0x1257: v1257 = AND v1256(0xffffffffffffffffffffffffffffffffffffffff) v4db
0x1258: v1258(0x0) = CONST 
0x125c: MSTORE v1258(0x0) v1257
0x125d: v125d(0x20) = CONST 
0x1262: MSTORE v125d(0x20) v105f(0x4)
0x1263: v1263(0x40) = CONST 
0x1266: v1266 = SHA3 v1258(0x0) v1263(0x40)
0x1268: v1268 = SLOAD v1266
0x1269: v1269(0xff) = CONST 
0x126b: v126b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v1269(0xff)
0x126c: v126c = AND v126b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) v1268
0x126d: v126d(0x1) = CONST 
0x126f: v126f = OR v126d(0x1) v126c
0x1271: SSTORE v1266 v126f
0x1272: JUMP v105c(0x106c)
----------------------------------

Begin block 0x1273
prev = {'0x10a3'}, next = {'0x127d'}
----------------------------------
Block 0x1273
0x1274: v1274(0x127d) = CONST 
0x1279: v1279(0x10eb) = CONST 
0x127c: v127c_0 = CALLPRIVATE v1279(0x10eb) va72 v10a7(0x4) v1274(0x127d)
----------------------------------

Begin block 0x127d
prev = {'0x1273'}, next = {'0x1282', '0x12b8'}
----------------------------------
Block 0x127d
0x127e: v127e(0x12b8) = CONST 
0x1281: JUMPI v127e(0x12b8) v127c_0
----------------------------------

Begin block 0x1282
prev = {'0x127d'}, next = {}
----------------------------------
Block 0x1282
0x1282: v1282(0x40) = CONST 
0x1284: v1284 = MLOAD v1282(0x40)
0x1285: v1285(0x461bcd) = CONST 
0x1289: v1289(0xe5) = CONST 
0x128b: v128b(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1289(0xe5) v1285(0x461bcd)
0x128d: MSTORE v1284 v128b(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x128e: v128e(0x4) = CONST 
0x1290: v1290 = ADD v128e(0x4) v1284
0x1293: v1293(0x20) = CONST 
0x1295: v1295 = ADD v1293(0x20) v1290
0x1298: v1298 = SUB v1295 v1290
0x129a: MSTORE v1290 v1298
0x129b: v129b(0x21) = CONST 
0x129e: MSTORE v1295 v129b(0x21)
0x129f: v129f(0x20) = CONST 
0x12a1: v12a1 = ADD v129f(0x20) v1295
0x12a3: v12a3(0x1376) = CONST 
0x12a6: v12a6(0x21) = CONST 
0x12a9: CODECOPY v12a1 v12a3(0x1376) v12a6(0x21)
0x12aa: v12aa(0x40) = CONST 
0x12ac: v12ac = ADD v12aa(0x40) v12a1
0x12b0: v12b0(0x40) = CONST 
0x12b2: v12b2 = MLOAD v12b0(0x40)
0x12b5: v12b5 = SUB v12ac v12b2
0x12b7: REVERT v12b2 v12b5
----------------------------------

Begin block 0x12b8
prev = {'0x127d'}, next = {'0x10b4'}
----------------------------------
Block 0x12b8
0x12b9: v12b9(0x1) = CONST 
0x12bb: v12bb(0x1) = CONST 
0x12bd: v12bd(0xa0) = CONST 
0x12bf: v12bf(0x10000000000000000000000000000000000000000) = SHL v12bd(0xa0) v12bb(0x1)
0x12c0: v12c0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v12bf(0x10000000000000000000000000000000000000000) v12b9(0x1)
0x12c1: v12c1 = AND v12c0(0xffffffffffffffffffffffffffffffffffffffff) va72
0x12c2: v12c2(0x0) = CONST 
0x12c6: MSTORE v12c2(0x0) v12c1
0x12c7: v12c7(0x20) = CONST 
0x12cc: MSTORE v12c7(0x20) v10a7(0x4)
0x12cd: v12cd(0x40) = CONST 
0x12d0: v12d0 = SHA3 v12c2(0x0) v12cd(0x40)
0x12d2: v12d2 = SLOAD v12d0
0x12d3: v12d3(0xff) = CONST 
0x12d5: v12d5(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v12d3(0xff)
0x12d6: v12d6 = AND v12d5(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) v12d2
0x12d8: SSTORE v12d0 v12d6
0x12d9: JUMP v10a4(0x10b4)
----------------------------------

Begin block 0x144b
prev = {'0x137', '0x10'}, next = {'0x1420x0'}
----------------------------------
Block 0x144b
0x144c: v144c(0x142) = CONST 
0x144d: CALLPRIVATE v144c(0x142)
----------------------------------

Begin block 0x144e
prev = {'0x10a'}, next = {}
----------------------------------
Block 0x144e
0x144f: v144f(0x147) = CONST 
0x1450: CALLPRIVATE v144f(0x147)
----------------------------------

Begin block 0x1451
prev = {'0x116'}, next = {}
----------------------------------
Block 0x1451
0x1452: v1452(0x1c4) = CONST 
0x1453: CALLPRIVATE v1452(0x1c4)
----------------------------------

Begin block 0x1454
prev = {'0x121'}, next = {}
----------------------------------
Block 0x1454
0x1455: v1455(0x204) = CONST 
0x1456: CALLPRIVATE v1455(0x204)
----------------------------------

Begin block 0x1457
prev = {'0x12c'}, next = {}
----------------------------------
Block 0x1457
0x1458: v1458(0x21e) = CONST 
0x1459: CALLPRIVATE v1458(0x21e)
----------------------------------

Begin block 0x145a
prev = {'0x137'}, next = {}
----------------------------------
Block 0x145a
0x145b: v145b(0x254) = CONST 
0x145c: CALLPRIVATE v145b(0x254)
----------------------------------

Begin block 0x145d
prev = {'0xc4'}, next = {}
----------------------------------
Block 0x145d
0x145e: v145e(0x272) = CONST 
0x145f: CALLPRIVATE v145e(0x272)
----------------------------------

Begin block 0x1460
prev = {'0xcf'}, next = {}
----------------------------------
Block 0x1460
0x1461: v1461(0x29e) = CONST 
0x1462: CALLPRIVATE v1461(0x29e)
----------------------------------

Begin block 0x1463
prev = {'0xda'}, next = {}
----------------------------------
Block 0x1463
0x1464: v1464(0x2ca) = CONST 
0x1465: CALLPRIVATE v1464(0x2ca)
----------------------------------

Begin block 0x1466
prev = {'0xe5'}, next = {}
----------------------------------
Block 0x1466
0x1467: v1467(0x398) = CONST 
0x1468: CALLPRIVATE v1467(0x398)
----------------------------------

Begin block 0x1469
prev = {'0xf0'}, next = {}
----------------------------------
Block 0x1469
0x146a: v146a(0x3be) = CONST 
0x146b: CALLPRIVATE v146a(0x3be)
----------------------------------

Begin block 0x146c
prev = {'0xfb'}, next = {}
----------------------------------
Block 0x146c
0x146d: v146d(0x3c8) = CONST 
0x146e: CALLPRIVATE v146d(0x3c8)
----------------------------------

Begin block 0x146f
prev = {'0x7c'}, next = {}
----------------------------------
Block 0x146f
0x1470: v1470(0x486) = CONST 
0x1471: CALLPRIVATE v1470(0x486)
----------------------------------

Begin block 0x1472
prev = {'0x88'}, next = {}
----------------------------------
Block 0x1472
0x1473: v1473(0x4aa) = CONST 
0x1474: CALLPRIVATE v1473(0x4aa)
----------------------------------

Begin block 0x1475
prev = {'0x93'}, next = {}
----------------------------------
Block 0x1475
0x1476: v1476(0x4b2) = CONST 
0x1477: CALLPRIVATE v1476(0x4b2)
----------------------------------

Begin block 0x1478
prev = {'0x9e'}, next = {}
----------------------------------
Block 0x1478
0x1479: v1479(0x4ba) = CONST 
0x147a: CALLPRIVATE v1479(0x4ba)
----------------------------------

Begin block 0x147b
prev = {'0xa9'}, next = {}
----------------------------------
Block 0x147b
0x147c: v147c(0x4e0) = CONST 
0x147d: CALLPRIVATE v147c(0x4e0)
----------------------------------

Begin block 0x147e
prev = {'0x36'}, next = {}
----------------------------------
Block 0x147e
0x147f: v147f(0x4e8) = CONST 
0x1480: CALLPRIVATE v147f(0x4e8)
----------------------------------

Begin block 0x1481
prev = {'0x41'}, next = {}
----------------------------------
Block 0x1481
0x1482: v1482(0x514) = CONST 
0x1483: CALLPRIVATE v1482(0x514)
----------------------------------

Begin block 0x1484
prev = {'0x4c'}, next = {}
----------------------------------
Block 0x1484
0x1485: v1485(0x540) = CONST 
0x1486: CALLPRIVATE v1485(0x540)
----------------------------------

Begin block 0x1487
prev = {'0x57'}, next = {}
----------------------------------
Block 0x1487
0x1488: v1488(0x566) = CONST 
0x1489: CALLPRIVATE v1488(0x566)
----------------------------------

Begin block 0x148a
prev = {'0x62'}, next = {}
----------------------------------
Block 0x148a
0x148b: v148b(0x61f) = CONST 
0x148c: CALLPRIVATE v148b(0x61f)
----------------------------------

Begin block 0x148d
prev = {'0x6d'}, next = {}
----------------------------------
Block 0x148d
0x148e: v148e(0x64d) = CONST 
0x148f: CALLPRIVATE v148e(0x64d)
----------------------------------
