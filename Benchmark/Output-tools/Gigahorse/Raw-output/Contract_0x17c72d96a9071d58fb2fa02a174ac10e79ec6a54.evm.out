
Begin block 0x0
prev = {}, next = {'0xc', '0x10'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x1a', '0x130f'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x12df: v12df(0x130f) = CONST 
0x12e0: JUMPI v12df(0x130f) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x2b', '0xc3'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x715018a6) = CONST 
0x26: v26 = GT v21(0x715018a6) v1f
0x27: v27(0xc3) = CONST 
0x2a: JUMPI v27(0xc3) v26
----------------------------------

Begin block 0x2b
prev = {'0x1a'}, next = {'0x36', '0x7c'}
----------------------------------
Block 0x2b
0x2c: v2c(0x98650275) = CONST 
0x31: v31 = GT v2c(0x98650275) v1f
0x32: v32(0x7c) = CONST 
0x35: JUMPI v32(0x7c) v31
----------------------------------

Begin block 0x36
prev = {'0x2b'}, next = {'0x1345', '0x41'}
----------------------------------
Block 0x36
0x37: v37(0x98650275) = CONST 
0x3c: v3c = EQ v37(0x98650275) v1f
0x12e1: v12e1(0x1345) = CONST 
0x12e2: JUMPI v12e1(0x1345) v3c
----------------------------------

Begin block 0x41
prev = {'0x36'}, next = {'0x4c', '0x1348'}
----------------------------------
Block 0x41
0x42: v42(0xa457c2d7) = CONST 
0x47: v47 = EQ v42(0xa457c2d7) v1f
0x12e3: v12e3(0x1348) = CONST 
0x12e4: JUMPI v12e3(0x1348) v47
----------------------------------

Begin block 0x4c
prev = {'0x41'}, next = {'0x57', '0x134b'}
----------------------------------
Block 0x4c
0x4d: v4d(0xa9059cbb) = CONST 
0x52: v52 = EQ v4d(0xa9059cbb) v1f
0x12e5: v12e5(0x134b) = CONST 
0x12e6: JUMPI v12e5(0x134b) v52
----------------------------------

Begin block 0x57
prev = {'0x4c'}, next = {'0x134e', '0x62'}
----------------------------------
Block 0x57
0x58: v58(0xaa271e1a) = CONST 
0x5d: v5d = EQ v58(0xaa271e1a) v1f
0x12e7: v12e7(0x134e) = CONST 
0x12e8: JUMPI v12e7(0x134e) v5d
----------------------------------

Begin block 0x62
prev = {'0x57'}, next = {'0x6d', '0x1351'}
----------------------------------
Block 0x62
0x63: v63(0xdd62ed3e) = CONST 
0x68: v68 = EQ v63(0xdd62ed3e) v1f
0x12e9: v12e9(0x1351) = CONST 
0x12ea: JUMPI v12e9(0x1351) v68
----------------------------------

Begin block 0x6d
prev = {'0x62'}, next = {'0x1354', '0x78'}
----------------------------------
Block 0x6d
0x6e: v6e(0xf2fde38b) = CONST 
0x73: v73 = EQ v6e(0xf2fde38b) v1f
0x12eb: v12eb(0x1354) = CONST 
0x12ec: JUMPI v12eb(0x1354) v73
----------------------------------

Begin block 0x78
prev = {'0x6d'}, next = {'0x14d0x0'}
----------------------------------
Block 0x78
0x78: v78(0x14d) = CONST 
0x7b: JUMP v78(0x14d)
----------------------------------

Begin block 0x7c
prev = {'0x2b'}, next = {'0x88', '0x1333'}
----------------------------------
Block 0x7c
0x7e: v7e(0x715018a6) = CONST 
0x83: v83 = EQ v7e(0x715018a6) v1f
0x12ed: v12ed(0x1333) = CONST 
0x12ee: JUMPI v12ed(0x1333) v83
----------------------------------

Begin block 0x88
prev = {'0x7c'}, next = {'0x93', '0x1336'}
----------------------------------
Block 0x88
0x89: v89(0x79cc6790) = CONST 
0x8e: v8e = EQ v89(0x79cc6790) v1f
0x12ef: v12ef(0x1336) = CONST 
0x12f0: JUMPI v12ef(0x1336) v8e
----------------------------------

Begin block 0x93
prev = {'0x88'}, next = {'0x9e', '0x1339'}
----------------------------------
Block 0x93
0x94: v94(0x8da5cb5b) = CONST 
0x99: v99 = EQ v94(0x8da5cb5b) v1f
0x12f1: v12f1(0x1339) = CONST 
0x12f2: JUMPI v12f1(0x1339) v99
----------------------------------

Begin block 0x9e
prev = {'0x93'}, next = {'0x133c', '0xa9'}
----------------------------------
Block 0x9e
0x9f: v9f(0x8f32d59b) = CONST 
0xa4: va4 = EQ v9f(0x8f32d59b) v1f
0x12f3: v12f3(0x133c) = CONST 
0x12f4: JUMPI v12f3(0x133c) va4
----------------------------------

Begin block 0xa9
prev = {'0x9e'}, next = {'0x133f', '0xb4'}
----------------------------------
Block 0xa9
0xaa: vaa(0x95d89b41) = CONST 
0xaf: vaf = EQ vaa(0x95d89b41) v1f
0x12f5: v12f5(0x133f) = CONST 
0x12f6: JUMPI v12f5(0x133f) vaf
----------------------------------

Begin block 0xb4
prev = {'0xa9'}, next = {'0xbf', '0x1342'}
----------------------------------
Block 0xb4
0xb5: vb5(0x983b2d56) = CONST 
0xba: vba = EQ vb5(0x983b2d56) v1f
0x12f7: v12f7(0x1342) = CONST 
0x12f8: JUMPI v12f7(0x1342) vba
----------------------------------

Begin block 0xbf
prev = {'0xb4'}, next = {'0x14d0x0'}
----------------------------------
Block 0xbf
0xbf: vbf(0x14d) = CONST 
0xc2: JUMP vbf(0x14d)
----------------------------------

Begin block 0xc3
prev = {'0x1a'}, next = {'0xcf', '0x115'}
----------------------------------
Block 0xc3
0xc5: vc5(0x355274ea) = CONST 
0xca: vca = GT vc5(0x355274ea) v1f
0xcb: vcb(0x115) = CONST 
0xce: JUMPI vcb(0x115) vca
----------------------------------

Begin block 0xcf
prev = {'0xc3'}, next = {'0xda', '0x1321'}
----------------------------------
Block 0xcf
0xd0: vd0(0x355274ea) = CONST 
0xd5: vd5 = EQ vd0(0x355274ea) v1f
0x12f9: v12f9(0x1321) = CONST 
0x12fa: JUMPI v12f9(0x1321) vd5
----------------------------------

Begin block 0xda
prev = {'0xcf'}, next = {'0x1324', '0xe5'}
----------------------------------
Block 0xda
0xdb: vdb(0x39509351) = CONST 
0xe0: ve0 = EQ vdb(0x39509351) v1f
0x12fb: v12fb(0x1324) = CONST 
0x12fc: JUMPI v12fb(0x1324) ve0
----------------------------------

Begin block 0xe5
prev = {'0xda'}, next = {'0x1327', '0xf0'}
----------------------------------
Block 0xe5
0xe6: ve6(0x40c10f19) = CONST 
0xeb: veb = EQ ve6(0x40c10f19) v1f
0x12fd: v12fd(0x1327) = CONST 
0x12fe: JUMPI v12fd(0x1327) veb
----------------------------------

Begin block 0xf0
prev = {'0xe5'}, next = {'0x132a', '0xfb'}
----------------------------------
Block 0xf0
0xf1: vf1(0x42966c68) = CONST 
0xf6: vf6 = EQ vf1(0x42966c68) v1f
0x12ff: v12ff(0x132a) = CONST 
0x1300: JUMPI v12ff(0x132a) vf6
----------------------------------

Begin block 0xfb
prev = {'0xf0'}, next = {'0x106', '0x132d'}
----------------------------------
Block 0xfb
0xfc: vfc(0x5a15c373) = CONST 
0x101: v101 = EQ vfc(0x5a15c373) v1f
0x1301: v1301(0x132d) = CONST 
0x1302: JUMPI v1301(0x132d) v101
----------------------------------

Begin block 0x106
prev = {'0xfb'}, next = {'0x1330', '0x111'}
----------------------------------
Block 0x106
0x107: v107(0x70a08231) = CONST 
0x10c: v10c = EQ v107(0x70a08231) v1f
0x1303: v1303(0x1330) = CONST 
0x1304: JUMPI v1303(0x1330) v10c
----------------------------------

Begin block 0x111
prev = {'0x106'}, next = {'0x14d0x0'}
----------------------------------
Block 0x111
0x111: v111(0x14d) = CONST 
0x114: JUMP v111(0x14d)
----------------------------------

Begin block 0x115
prev = {'0xc3'}, next = {'0x121', '0x1312'}
----------------------------------
Block 0x115
0x117: v117(0x6fdde03) = CONST 
0x11c: v11c = EQ v117(0x6fdde03) v1f
0x1305: v1305(0x1312) = CONST 
0x1306: JUMPI v1305(0x1312) v11c
----------------------------------

Begin block 0x121
prev = {'0x115'}, next = {'0x1315', '0x12c'}
----------------------------------
Block 0x121
0x122: v122(0x95ea7b3) = CONST 
0x127: v127 = EQ v122(0x95ea7b3) v1f
0x1307: v1307(0x1315) = CONST 
0x1308: JUMPI v1307(0x1315) v127
----------------------------------

Begin block 0x12c
prev = {'0x121'}, next = {'0x137', '0x1318'}
----------------------------------
Block 0x12c
0x12d: v12d(0x18160ddd) = CONST 
0x132: v132 = EQ v12d(0x18160ddd) v1f
0x1309: v1309(0x1318) = CONST 
0x130a: JUMPI v1309(0x1318) v132
----------------------------------

Begin block 0x137
prev = {'0x12c'}, next = {'0x131b', '0x142'}
----------------------------------
Block 0x137
0x138: v138(0x23b872dd) = CONST 
0x13d: v13d = EQ v138(0x23b872dd) v1f
0x130b: v130b(0x131b) = CONST 
0x130c: JUMPI v130b(0x131b) v13d
----------------------------------

Begin block 0x142
prev = {'0x137'}, next = {'0x131e', '0x130f'}
----------------------------------
Block 0x142
0x143: v143(0x313ce567) = CONST 
0x148: v148 = EQ v143(0x313ce567) v1f
0x130d: v130d(0x131e) = CONST 
0x130e: JUMPI v130d(0x131e) v148
----------------------------------

Begin block 0x14d
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x14d
0x14e: v14e(0x0) = CONST 
0x151: REVERT v14e(0x0) v14e(0x0)
----------------------------------

Begin block 0x14d0x0
prev = {'0xbf', '0x78', '0x130f', '0x111'}, next = {}
----------------------------------
Block 0x14d0x0
0x14e0x0: v014e(0x0) = CONST 
0x1510x0: REVERT v014e(0x0) v014e(0x0)
----------------------------------

Begin block 0x152
prev = {}, next = {'0x15a0x152'}
----------------------------------
function name()()
Block 0x152
0x153: v153(0x15a) = CONST 
0x156: v156(0x4c0) = CONST 
0x159: v159_0 = CALLPRIVATE v156(0x4c0) v153(0x15a)
----------------------------------

Begin block 0x15a0x152
prev = {'0x152'}, next = {'0x17c0x152'}
----------------------------------
Block 0x15a0x152
0x15b0x152: v15215b(0x40) = CONST 
0x15e0x152: v15215e = MLOAD v15215b(0x40)
0x15f0x152: v15215f(0x20) = CONST 
0x1630x152: MSTORE v15215e v15215f(0x20)
0x1650x152: v152165 = MLOAD v159_0
0x1680x152: v152168 = ADD v15215e v15215f(0x20)
0x1690x152: MSTORE v152168 v152165
0x16b0x152: v15216b = MLOAD v159_0
0x1720x152: v152172 = ADD v15215e v15215b(0x40)
0x1750x152: v152175 = ADD v159_0 v15215f(0x20)
0x17a0x152: v15217a(0x0) = CONST 
----------------------------------

Begin block 0x15a0x3b8
prev = {'0x3b8'}, next = {'0x17c0x3b8'}
----------------------------------
Block 0x15a0x3b8
0x15b0x3b8: v3b815b(0x40) = CONST 
0x15e0x3b8: v3b815e = MLOAD v3b815b(0x40)
0x15f0x3b8: v3b815f(0x20) = CONST 
0x1630x3b8: MSTORE v3b815e v3b815f(0x20)
0x1650x3b8: v3b8165 = MLOAD v3bf_0
0x1680x3b8: v3b8168 = ADD v3b815e v3b815f(0x20)
0x1690x3b8: MSTORE v3b8168 v3b8165
0x16b0x3b8: v3b816b = MLOAD v3bf_0
0x1720x3b8: v3b8172 = ADD v3b815e v3b815b(0x40)
0x1750x3b8: v3b8175 = ADD v3bf_0 v3b815f(0x20)
0x17a0x3b8: v3b817a(0x0) = CONST 
----------------------------------

Begin block 0x17c0x152
prev = {'0x1850x152', '0x15a0x152'}, next = {'0x1940x152', '0x1850x152'}
----------------------------------
Block 0x17c0x152
0x17c0x152_0x0: v17c152_0 = PHI v15217a(0x0) v15218f
0x17f0x152: v15217f = LT v17c152_0 v15216b
0x1800x152: v152180 = ISZERO v15217f
0x1810x152: v152181(0x194) = CONST 
0x1840x152: JUMPI v152181(0x194) v152180
----------------------------------

Begin block 0x17c0x3b8
prev = {'0x15a0x3b8', '0x1850x3b8'}, next = {'0x1940x3b8', '0x1850x3b8'}
----------------------------------
Block 0x17c0x3b8
0x17c0x3b8_0x0: v17c3b8_0 = PHI v3b817a(0x0) v3b818f
0x17f0x3b8: v3b817f = LT v17c3b8_0 v3b816b
0x1800x3b8: v3b8180 = ISZERO v3b817f
0x1810x3b8: v3b8181(0x194) = CONST 
0x1840x3b8: JUMPI v3b8181(0x194) v3b8180
----------------------------------

Begin block 0x1850x152
prev = {'0x17c0x152'}, next = {'0x17c0x152'}
----------------------------------
Block 0x1850x152
0x1850x152_0x0: v185152_0 = PHI v15217a(0x0) v15218f
0x1870x152: v152187 = ADD v185152_0 v152175
0x1880x152: v152188 = MLOAD v152187
0x18b0x152: v15218b = ADD v185152_0 v152172
0x18c0x152: MSTORE v15218b v152188
0x18d0x152: v15218d(0x20) = CONST 
0x18f0x152: v15218f = ADD v15218d(0x20) v185152_0
0x1900x152: v152190(0x17c) = CONST 
0x1930x152: JUMP v152190(0x17c)
----------------------------------

Begin block 0x1850x3b8
prev = {'0x17c0x3b8'}, next = {'0x17c0x3b8'}
----------------------------------
Block 0x1850x3b8
0x1850x3b8_0x0: v1853b8_0 = PHI v3b817a(0x0) v3b818f
0x1870x3b8: v3b8187 = ADD v1853b8_0 v3b8175
0x1880x3b8: v3b8188 = MLOAD v3b8187
0x18b0x3b8: v3b818b = ADD v1853b8_0 v3b8172
0x18c0x3b8: MSTORE v3b818b v3b8188
0x18d0x3b8: v3b818d(0x20) = CONST 
0x18f0x3b8: v3b818f = ADD v3b818d(0x20) v1853b8_0
0x1900x3b8: v3b8190(0x17c) = CONST 
0x1930x3b8: JUMP v3b8190(0x17c)
----------------------------------

Begin block 0x1940x152
prev = {'0x17c0x152'}, next = {'0x1c10x152', '0x1a80x152'}
----------------------------------
Block 0x1940x152
0x19d0x152: v15219d = ADD v15216b v152172
0x19f0x152: v15219f(0x1f) = CONST 
0x1a10x152: v1521a1 = AND v15219f(0x1f) v15216b
0x1a30x152: v1521a3 = ISZERO v1521a1
0x1a40x152: v1521a4(0x1c1) = CONST 
0x1a70x152: JUMPI v1521a4(0x1c1) v1521a3
----------------------------------

Begin block 0x1940x3b8
prev = {'0x17c0x3b8'}, next = {'0x1c10x3b8', '0x1a80x3b8'}
----------------------------------
Block 0x1940x3b8
0x19d0x3b8: v3b819d = ADD v3b816b v3b8172
0x19f0x3b8: v3b819f(0x1f) = CONST 
0x1a10x3b8: v3b81a1 = AND v3b819f(0x1f) v3b816b
0x1a30x3b8: v3b81a3 = ISZERO v3b81a1
0x1a40x3b8: v3b81a4(0x1c1) = CONST 
0x1a70x3b8: JUMPI v3b81a4(0x1c1) v3b81a3
----------------------------------

Begin block 0x1a80x152
prev = {'0x1940x152'}, next = {'0x1c10x152'}
----------------------------------
Block 0x1a80x152
0x1aa0x152: v1521aa = SUB v15219d v1521a1
0x1ac0x152: v1521ac = MLOAD v1521aa
0x1ad0x152: v1521ad(0x1) = CONST 
0x1b00x152: v1521b0(0x20) = CONST 
0x1b20x152: v1521b2 = SUB v1521b0(0x20) v1521a1
0x1b30x152: v1521b3(0x100) = CONST 
0x1b60x152: v1521b6 = EXP v1521b3(0x100) v1521b2
0x1b70x152: v1521b7 = SUB v1521b6 v1521ad(0x1)
0x1b80x152: v1521b8 = NOT v1521b7
0x1b90x152: v1521b9 = AND v1521b8 v1521ac
0x1bb0x152: MSTORE v1521aa v1521b9
0x1bc0x152: v1521bc(0x20) = CONST 
0x1be0x152: v1521be = ADD v1521bc(0x20) v1521aa
----------------------------------

Begin block 0x1a80x3b8
prev = {'0x1940x3b8'}, next = {'0x1c10x3b8'}
----------------------------------
Block 0x1a80x3b8
0x1aa0x3b8: v3b81aa = SUB v3b819d v3b81a1
0x1ac0x3b8: v3b81ac = MLOAD v3b81aa
0x1ad0x3b8: v3b81ad(0x1) = CONST 
0x1b00x3b8: v3b81b0(0x20) = CONST 
0x1b20x3b8: v3b81b2 = SUB v3b81b0(0x20) v3b81a1
0x1b30x3b8: v3b81b3(0x100) = CONST 
0x1b60x3b8: v3b81b6 = EXP v3b81b3(0x100) v3b81b2
0x1b70x3b8: v3b81b7 = SUB v3b81b6 v3b81ad(0x1)
0x1b80x3b8: v3b81b8 = NOT v3b81b7
0x1b90x3b8: v3b81b9 = AND v3b81b8 v3b81ac
0x1bb0x3b8: MSTORE v3b81aa v3b81b9
0x1bc0x3b8: v3b81bc(0x20) = CONST 
0x1be0x3b8: v3b81be = ADD v3b81bc(0x20) v3b81aa
----------------------------------

Begin block 0x1c10x152
prev = {'0x1940x152', '0x1a80x152'}, next = {}
----------------------------------
Block 0x1c10x152
0x1c10x152_0x1: v1c1152_1 = PHI v15219d v1521be
0x1c70x152: v1521c7(0x40) = CONST 
0x1c90x152: v1521c9 = MLOAD v1521c7(0x40)
0x1cc0x152: v1521cc = SUB v1c1152_1 v1521c9
0x1ce0x152: RETURN v1521c9 v1521cc
----------------------------------

Begin block 0x1c10x3b8
prev = {'0x1a80x3b8', '0x1940x3b8'}, next = {}
----------------------------------
Block 0x1c10x3b8
0x1c10x3b8_0x1: v1c13b8_1 = PHI v3b819d v3b81be
0x1c70x3b8: v3b81c7(0x40) = CONST 
0x1c90x3b8: v3b81c9 = MLOAD v3b81c7(0x40)
0x1cc0x3b8: v3b81cc = SUB v1c13b8_1 v3b81c9
0x1ce0x3b8: RETURN v3b81c9 v3b81cc
----------------------------------

Begin block 0x1cf
prev = {}, next = {'0x1e1', '0x1e5'}
----------------------------------
function approve(address,uint256)()
Block 0x1cf
0x1d0: v1d0(0x1fb) = CONST 
0x1d3: v1d3(0x4) = CONST 
0x1d6: v1d6 = CALLDATASIZE 
0x1d7: v1d7 = SUB v1d6 v1d3(0x4)
0x1d8: v1d8(0x40) = CONST 
0x1db: v1db = LT v1d7 v1d8(0x40)
0x1dc: v1dc = ISZERO v1db
0x1dd: v1dd(0x1e5) = CONST 
0x1e0: JUMPI v1dd(0x1e5) v1dc
----------------------------------

Begin block 0x1e1
prev = {'0x1cf'}, next = {}
----------------------------------
Block 0x1e1
0x1e1: v1e1(0x0) = CONST 
0x1e4: REVERT v1e1(0x0) v1e1(0x0)
----------------------------------

Begin block 0x1e5
prev = {'0x1cf'}, next = {'0x556'}
----------------------------------
Block 0x1e5
0x1e7: v1e7(0x1) = CONST 
0x1e9: v1e9(0x1) = CONST 
0x1eb: v1eb(0xa0) = CONST 
0x1ed: v1ed(0x10000000000000000000000000000000000000000) = SHL v1eb(0xa0) v1e9(0x1)
0x1ee: v1ee(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1ed(0x10000000000000000000000000000000000000000) v1e7(0x1)
0x1f0: v1f0 = CALLDATALOAD v1d3(0x4)
0x1f1: v1f1 = AND v1f0 v1ee(0xffffffffffffffffffffffffffffffffffffffff)
0x1f3: v1f3(0x20) = CONST 
0x1f5: v1f5 = ADD v1f3(0x20) v1d3(0x4)
0x1f6: v1f6 = CALLDATALOAD v1f5
0x1f7: v1f7(0x556) = CONST 
0x1fa: JUMP v1f7(0x556)
----------------------------------

Begin block 0x1fb0x1cf
prev = {'0x5630x1cf'}, next = {}
----------------------------------
Block 0x1fb0x1cf
0x1fc0x1cf: v1cf1fc(0x40) = CONST 
0x1ff0x1cf: v1cf1ff = MLOAD v1cf1fc(0x40)
0x2010x1cf: v1cf201 = ISZERO v1cf565(0x1)
0x2020x1cf: v1cf202 = ISZERO v1cf201
0x2040x1cf: MSTORE v1cf1ff v1cf202
0x2050x1cf: v1cf205 = MLOAD v1cf1fc(0x40)
0x2090x1cf: v1cf209 = SUB v1cf1ff v1cf205
0x20a0x1cf: v1cf20a(0x20) = CONST 
0x20c0x1cf: v1cf20c = ADD v1cf20a(0x20) v1cf209
0x20e0x1cf: RETURN v1cf205 v1cf20c
----------------------------------

Begin block 0x1fb0x229
prev = {'0x5bf0x229'}, next = {}
----------------------------------
Block 0x1fb0x229
0x1fc0x229: v2291fc(0x40) = CONST 
0x1ff0x229: v2291ff = MLOAD v2291fc(0x40)
0x2010x229: v229201 = ISZERO v2295c1(0x1)
0x2020x229: v229202 = ISZERO v229201
0x2040x229: MSTORE v2291ff v229202
0x2050x229: v229205 = MLOAD v2291fc(0x40)
0x2090x229: v229209 = SUB v2291ff v229205
0x20a0x229: v22920a(0x20) = CONST 
0x20c0x229: v22920c = ADD v22920a(0x20) v229209
0x20e0x229: RETURN v229205 v22920c
----------------------------------

Begin block 0x1fb0x285
prev = {'0x5630x285'}, next = {}
----------------------------------
Block 0x1fb0x285
0x1fc0x285: v2851fc(0x40) = CONST 
0x1ff0x285: v2851ff = MLOAD v2851fc(0x40)
0x2010x285: v285201 = ISZERO v285565(0x1)
0x2020x285: v285202 = ISZERO v285201
0x2040x285: MSTORE v2851ff v285202
0x2050x285: v285205 = MLOAD v2851fc(0x40)
0x2090x285: v285209 = SUB v2851ff v285205
0x20a0x285: v28520a(0x20) = CONST 
0x20c0x285: v28520c = ADD v28520a(0x20) v285209
0x20e0x285: RETURN v285205 v28520c
----------------------------------

Begin block 0x1fb0x2b1
prev = {'0x5630x2b1'}, next = {}
----------------------------------
Block 0x1fb0x2b1
0x1fc0x2b1: v2b11fc(0x40) = CONST 
0x1ff0x2b1: v2b11ff = MLOAD v2b11fc(0x40)
0x2010x2b1: v2b1201 = ISZERO v2b1565(0x1)
0x2020x2b1: v2b1202 = ISZERO v2b1201
0x2040x2b1: MSTORE v2b11ff v2b1202
0x2050x2b1: v2b1205 = MLOAD v2b11fc(0x40)
0x2090x2b1: v2b1209 = SUB v2b11ff v2b1205
0x20a0x2b1: v2b120a(0x20) = CONST 
0x20c0x2b1: v2b120c = ADD v2b120a(0x20) v2b1209
0x20e0x2b1: RETURN v2b1205 v2b120c
----------------------------------

Begin block 0x1fb0x2fc
prev = {'0x5bf0x2fc'}, next = {}
----------------------------------
Block 0x1fb0x2fc
0x1fc0x2fc: v2fc1fc(0x40) = CONST 
0x1ff0x2fc: v2fc1ff = MLOAD v2fc1fc(0x40)
0x2010x2fc: v2fc201 = ISZERO v2fc5c1(0x1)
0x2020x2fc: v2fc202 = ISZERO v2fc201
0x2040x2fc: MSTORE v2fc1ff v2fc202
0x2050x2fc: v2fc205 = MLOAD v2fc1fc(0x40)
0x2090x2fc: v2fc209 = SUB v2fc1ff v2fc205
0x20a0x2fc: v2fc20a(0x20) = CONST 
0x20c0x2fc: v2fc20c = ADD v2fc20a(0x20) v2fc209
0x20e0x2fc: RETURN v2fc205 v2fc20c
----------------------------------

Begin block 0x1fb0x3b0
prev = {'0x3b0'}, next = {}
----------------------------------
Block 0x1fb0x3b0
0x1fc0x3b0: v3b01fc(0x40) = CONST 
0x1ff0x3b0: v3b01ff = MLOAD v3b01fc(0x40)
0x2010x3b0: v3b0201 = ISZERO v3b7_0
0x2020x3b0: v3b0202 = ISZERO v3b0201
0x2040x3b0: MSTORE v3b01ff v3b0202
0x2050x3b0: v3b0205 = MLOAD v3b01fc(0x40)
0x2090x3b0: v3b0209 = SUB v3b01ff v3b0205
0x20a0x3b0: v3b020a(0x20) = CONST 
0x20c0x3b0: v3b020c = ADD v3b020a(0x20) v3b0209
0x20e0x3b0: RETURN v3b0205 v3b020c
----------------------------------

Begin block 0x1fb0x3ee
prev = {'0x5630x3ee'}, next = {}
----------------------------------
Block 0x1fb0x3ee
0x1fc0x3ee: v3ee1fc(0x40) = CONST 
0x1ff0x3ee: v3ee1ff = MLOAD v3ee1fc(0x40)
0x2010x3ee: v3ee201 = ISZERO v3ee565(0x1)
0x2020x3ee: v3ee202 = ISZERO v3ee201
0x2040x3ee: MSTORE v3ee1ff v3ee202
0x2050x3ee: v3ee205 = MLOAD v3ee1fc(0x40)
0x2090x3ee: v3ee209 = SUB v3ee1ff v3ee205
0x20a0x3ee: v3ee20a(0x20) = CONST 
0x20c0x3ee: v3ee20c = ADD v3ee20a(0x20) v3ee209
0x20e0x3ee: RETURN v3ee205 v3ee20c
----------------------------------

Begin block 0x1fb0x41a
prev = {'0x5630x41a'}, next = {}
----------------------------------
Block 0x1fb0x41a
0x1fc0x41a: v41a1fc(0x40) = CONST 
0x1ff0x41a: v41a1ff = MLOAD v41a1fc(0x40)
0x2010x41a: v41a201 = ISZERO v41a565(0x1)
0x2020x41a: v41a202 = ISZERO v41a201
0x2040x41a: MSTORE v41a1ff v41a202
0x2050x41a: v41a205 = MLOAD v41a1fc(0x40)
0x2090x41a: v41a209 = SUB v41a1ff v41a205
0x20a0x41a: v41a20a(0x20) = CONST 
0x20c0x41a: v41a20c = ADD v41a20a(0x20) v41a209
0x20e0x41a: RETURN v41a205 v41a20c
----------------------------------

Begin block 0x1fb0x446
prev = {'0x8d80x446'}, next = {}
----------------------------------
Block 0x1fb0x446
0x1fc0x446: v4461fc(0x40) = CONST 
0x1ff0x446: v4461ff = MLOAD v4461fc(0x40)
0x2010x446: v446201 = ISZERO v4468d7_0
0x2020x446: v446202 = ISZERO v446201
0x2040x446: MSTORE v4461ff v446202
0x2050x446: v446205 = MLOAD v4461fc(0x40)
0x2090x446: v446209 = SUB v4461ff v446205
0x20a0x446: v44620a(0x20) = CONST 
0x20c0x446: v44620c = ADD v44620a(0x20) v446209
0x20e0x446: RETURN v446205 v44620c
----------------------------------

Begin block 0x20f
prev = {}, next = {'0x2170x20f'}
----------------------------------
function totalSupply()()
Block 0x20f
0x210: v210(0x217) = CONST 
0x213: v213(0x56c) = CONST 
0x216: v216_0 = CALLPRIVATE v213(0x56c) v210(0x217)
----------------------------------

Begin block 0x2170x20f
prev = {'0x20f'}, next = {}
----------------------------------
Block 0x2170x20f
0x2180x20f: v20f218(0x40) = CONST 
0x21b0x20f: v20f21b = MLOAD v20f218(0x40)
0x21e0x20f: MSTORE v20f21b v216_0
0x21f0x20f: v20f21f = MLOAD v20f218(0x40)
0x2230x20f: v20f223 = SUB v20f21b v20f21f
0x2240x20f: v20f224(0x20) = CONST 
0x2260x20f: v20f226 = ADD v20f224(0x20) v20f223
0x2280x20f: RETURN v20f21f v20f226
----------------------------------

Begin block 0x2170x27d
prev = {'0x5d2'}, next = {}
----------------------------------
Block 0x2170x27d
0x2180x27d: v27d218(0x40) = CONST 
0x21b0x27d: v27d21b = MLOAD v27d218(0x40)
0x21e0x27d: MSTORE v27d21b v5d5
0x21f0x27d: v27d21f = MLOAD v27d218(0x40)
0x2230x27d: v27d223 = SUB v27d21b v27d21f
0x2240x27d: v27d224(0x20) = CONST 
0x2260x27d: v27d226 = ADD v27d224(0x20) v27d223
0x2280x27d: RETURN v27d21f v27d226
----------------------------------

Begin block 0x2170x332
prev = {'0x6d7'}, next = {}
----------------------------------
Block 0x2170x332
0x2180x332: v332218(0x40) = CONST 
0x21b0x332: v33221b = MLOAD v332218(0x40)
0x21e0x332: MSTORE v33221b v6ef
0x21f0x332: v33221f = MLOAD v332218(0x40)
0x2230x332: v332223 = SUB v33221b v33221f
0x2240x332: v332224(0x20) = CONST 
0x2260x332: v332226 = ADD v332224(0x20) v332223
0x2280x332: RETURN v33221f v332226
----------------------------------

Begin block 0x2170x46c
prev = {'0x8de'}, next = {}
----------------------------------
Block 0x2170x46c
0x2180x46c: v46c218(0x40) = CONST 
0x21b0x46c: v46c21b = MLOAD v46c218(0x40)
0x21e0x46c: MSTORE v46c21b v906
0x21f0x46c: v46c21f = MLOAD v46c218(0x40)
0x2230x46c: v46c223 = SUB v46c21b v46c21f
0x2240x46c: v46c224(0x20) = CONST 
0x2260x46c: v46c226 = ADD v46c224(0x20) v46c223
0x2280x46c: RETURN v46c21f v46c226
----------------------------------

Begin block 0x229
prev = {}, next = {'0x23b', '0x23f'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x229
0x22a: v22a(0x1fb) = CONST 
0x22d: v22d(0x4) = CONST 
0x230: v230 = CALLDATASIZE 
0x231: v231 = SUB v230 v22d(0x4)
0x232: v232(0x60) = CONST 
0x235: v235 = LT v231 v232(0x60)
0x236: v236 = ISZERO v235
0x237: v237(0x23f) = CONST 
0x23a: JUMPI v237(0x23f) v236
----------------------------------

Begin block 0x23b
prev = {'0x229'}, next = {}
----------------------------------
Block 0x23b
0x23b: v23b(0x0) = CONST 
0x23e: REVERT v23b(0x0) v23b(0x0)
----------------------------------

Begin block 0x23f
prev = {'0x229'}, next = {'0x572'}
----------------------------------
Block 0x23f
0x241: v241(0x1) = CONST 
0x243: v243(0x1) = CONST 
0x245: v245(0xa0) = CONST 
0x247: v247(0x10000000000000000000000000000000000000000) = SHL v245(0xa0) v243(0x1)
0x248: v248(0xffffffffffffffffffffffffffffffffffffffff) = SUB v247(0x10000000000000000000000000000000000000000) v241(0x1)
0x24a: v24a = CALLDATALOAD v22d(0x4)
0x24c: v24c = AND v248(0xffffffffffffffffffffffffffffffffffffffff) v24a
0x24e: v24e(0x20) = CONST 
0x251: v251 = ADD v22d(0x4) v24e(0x20)
0x252: v252 = CALLDATALOAD v251
0x255: v255 = AND v248(0xffffffffffffffffffffffffffffffffffffffff) v252
0x257: v257(0x40) = CONST 
0x259: v259 = ADD v257(0x40) v22d(0x4)
0x25a: v25a = CALLDATALOAD v259
0x25b: v25b(0x572) = CONST 
0x25e: JUMP v25b(0x572)
----------------------------------

Begin block 0x25f
prev = {}, next = {'0x5c9'}
----------------------------------
function decimals()()
Block 0x25f
0x260: v260(0x267) = CONST 
0x263: v263(0x5c9) = CONST 
0x266: JUMP v263(0x5c9)
----------------------------------

Begin block 0x267
prev = {'0x5c9'}, next = {}
----------------------------------
Block 0x267
0x268: v268(0x40) = CONST 
0x26b: v26b = MLOAD v268(0x40)
0x26c: v26c(0xff) = CONST 
0x270: v270 = AND v5cf v26c(0xff)
0x272: MSTORE v26b v270
0x273: v273 = MLOAD v268(0x40)
0x277: v277 = SUB v26b v273
0x278: v278(0x20) = CONST 
0x27a: v27a = ADD v278(0x20) v277
0x27c: RETURN v273 v27a
----------------------------------

Begin block 0x27d
prev = {}, next = {'0x5d2'}
----------------------------------
function cap()()
Block 0x27d
0x27e: v27e(0x217) = CONST 
0x281: v281(0x5d2) = CONST 
0x284: JUMP v281(0x5d2)
----------------------------------

Begin block 0x285
prev = {}, next = {'0x297', '0x29b'}
----------------------------------
function increaseAllowance(address,uint256)()
Block 0x285
0x286: v286(0x1fb) = CONST 
0x289: v289(0x4) = CONST 
0x28c: v28c = CALLDATASIZE 
0x28d: v28d = SUB v28c v289(0x4)
0x28e: v28e(0x40) = CONST 
0x291: v291 = LT v28d v28e(0x40)
0x292: v292 = ISZERO v291
0x293: v293(0x29b) = CONST 
0x296: JUMPI v293(0x29b) v292
----------------------------------

Begin block 0x297
prev = {'0x285'}, next = {}
----------------------------------
Block 0x297
0x297: v297(0x0) = CONST 
0x29a: REVERT v297(0x0) v297(0x0)
----------------------------------

Begin block 0x29b
prev = {'0x285'}, next = {'0x5d8'}
----------------------------------
Block 0x29b
0x29d: v29d(0x1) = CONST 
0x29f: v29f(0x1) = CONST 
0x2a1: v2a1(0xa0) = CONST 
0x2a3: v2a3(0x10000000000000000000000000000000000000000) = SHL v2a1(0xa0) v29f(0x1)
0x2a4: v2a4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2a3(0x10000000000000000000000000000000000000000) v29d(0x1)
0x2a6: v2a6 = CALLDATALOAD v289(0x4)
0x2a7: v2a7 = AND v2a6 v2a4(0xffffffffffffffffffffffffffffffffffffffff)
0x2a9: v2a9(0x20) = CONST 
0x2ab: v2ab = ADD v2a9(0x20) v289(0x4)
0x2ac: v2ac = CALLDATALOAD v2ab
0x2ad: v2ad(0x5d8) = CONST 
0x2b0: JUMP v2ad(0x5d8)
----------------------------------

Begin block 0x2b1
prev = {}, next = {'0x2c3', '0x2c7'}
----------------------------------
function mint(address,uint256)()
Block 0x2b1
0x2b2: v2b2(0x1fb) = CONST 
0x2b5: v2b5(0x4) = CONST 
0x2b8: v2b8 = CALLDATASIZE 
0x2b9: v2b9 = SUB v2b8 v2b5(0x4)
0x2ba: v2ba(0x40) = CONST 
0x2bd: v2bd = LT v2b9 v2ba(0x40)
0x2be: v2be = ISZERO v2bd
0x2bf: v2bf(0x2c7) = CONST 
0x2c2: JUMPI v2bf(0x2c7) v2be
----------------------------------

Begin block 0x2c3
prev = {'0x2b1'}, next = {}
----------------------------------
Block 0x2c3
0x2c3: v2c3(0x0) = CONST 
0x2c6: REVERT v2c3(0x0) v2c3(0x0)
----------------------------------

Begin block 0x2c7
prev = {'0x2b1'}, next = {'0x614'}
----------------------------------
Block 0x2c7
0x2c9: v2c9(0x1) = CONST 
0x2cb: v2cb(0x1) = CONST 
0x2cd: v2cd(0xa0) = CONST 
0x2cf: v2cf(0x10000000000000000000000000000000000000000) = SHL v2cd(0xa0) v2cb(0x1)
0x2d0: v2d0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2cf(0x10000000000000000000000000000000000000000) v2c9(0x1)
0x2d2: v2d2 = CALLDATALOAD v2b5(0x4)
0x2d3: v2d3 = AND v2d2 v2d0(0xffffffffffffffffffffffffffffffffffffffff)
0x2d5: v2d5(0x20) = CONST 
0x2d7: v2d7 = ADD v2d5(0x20) v2b5(0x4)
0x2d8: v2d8 = CALLDATALOAD v2d7
0x2d9: v2d9(0x614) = CONST 
0x2dc: JUMP v2d9(0x614)
----------------------------------

Begin block 0x2dd
prev = {}, next = {'0x2ef', '0x2f3'}
----------------------------------
function burn(uint256)()
Block 0x2dd
0x2de: v2de(0x2fa) = CONST 
0x2e1: v2e1(0x4) = CONST 
0x2e4: v2e4 = CALLDATASIZE 
0x2e5: v2e5 = SUB v2e4 v2e1(0x4)
0x2e6: v2e6(0x20) = CONST 
0x2e9: v2e9 = LT v2e5 v2e6(0x20)
0x2ea: v2ea = ISZERO v2e9
0x2eb: v2eb(0x2f3) = CONST 
0x2ee: JUMPI v2eb(0x2f3) v2ea
----------------------------------

Begin block 0x2ef
prev = {'0x2dd'}, next = {}
----------------------------------
Block 0x2ef
0x2ef: v2ef(0x0) = CONST 
0x2f2: REVERT v2ef(0x0) v2ef(0x0)
----------------------------------

Begin block 0x2f3
prev = {'0x2dd'}, next = {'0x664'}
----------------------------------
Block 0x2f3
0x2f5: v2f5 = CALLDATALOAD v2e1(0x4)
0x2f6: v2f6(0x664) = CONST 
0x2f9: JUMP v2f6(0x664)
----------------------------------

Begin block 0x2fa0x2dd
prev = {'0x66e0x2dd'}, next = {}
----------------------------------
Block 0x2fa0x2dd
0x2fb0x2dd: STOP 
----------------------------------

Begin block 0x2fa0x358
prev = {'0x74b'}, next = {}
----------------------------------
Block 0x2fa0x358
0x2fb0x358: STOP 
----------------------------------

Begin block 0x2fa0x360
prev = {'0x79f0x360'}, next = {}
----------------------------------
Block 0x2fa0x360
0x2fb0x360: STOP 
----------------------------------

Begin block 0x2fa0x3c0
prev = {'0x66e0x3c0'}, next = {}
----------------------------------
Block 0x2fa0x3c0
0x2fb0x3c0: STOP 
----------------------------------

Begin block 0x2fa0x3e6
prev = {'0x87a'}, next = {}
----------------------------------
Block 0x2fa0x3e6
0x2fb0x3e6: STOP 
----------------------------------

Begin block 0x2fa0x49a
prev = {'0x66e0x49a'}, next = {}
----------------------------------
Block 0x2fa0x49a
0x2fb0x49a: STOP 
----------------------------------

Begin block 0x2fc
prev = {}, next = {'0x30e', '0x312'}
----------------------------------
function transferByOwner(address,address,uint256)()
Block 0x2fc
0x2fd: v2fd(0x1fb) = CONST 
0x300: v300(0x4) = CONST 
0x303: v303 = CALLDATASIZE 
0x304: v304 = SUB v303 v300(0x4)
0x305: v305(0x60) = CONST 
0x308: v308 = LT v304 v305(0x60)
0x309: v309 = ISZERO v308
0x30a: v30a(0x312) = CONST 
0x30d: JUMPI v30a(0x312) v309
----------------------------------

Begin block 0x30e
prev = {'0x2fc'}, next = {}
----------------------------------
Block 0x30e
0x30e: v30e(0x0) = CONST 
0x311: REVERT v30e(0x0) v30e(0x0)
----------------------------------

Begin block 0x312
prev = {'0x2fc'}, next = {'0x671'}
----------------------------------
Block 0x312
0x314: v314(0x1) = CONST 
0x316: v316(0x1) = CONST 
0x318: v318(0xa0) = CONST 
0x31a: v31a(0x10000000000000000000000000000000000000000) = SHL v318(0xa0) v316(0x1)
0x31b: v31b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v31a(0x10000000000000000000000000000000000000000) v314(0x1)
0x31d: v31d = CALLDATALOAD v300(0x4)
0x31f: v31f = AND v31b(0xffffffffffffffffffffffffffffffffffffffff) v31d
0x321: v321(0x20) = CONST 
0x324: v324 = ADD v300(0x4) v321(0x20)
0x325: v325 = CALLDATALOAD v324
0x328: v328 = AND v31b(0xffffffffffffffffffffffffffffffffffffffff) v325
0x32a: v32a(0x40) = CONST 
0x32c: v32c = ADD v32a(0x40) v300(0x4)
0x32d: v32d = CALLDATALOAD v32c
0x32e: v32e(0x671) = CONST 
0x331: JUMP v32e(0x671)
----------------------------------

Begin block 0x332
prev = {}, next = {'0x348', '0x344'}
----------------------------------
function balanceOf(address)()
Block 0x332
0x333: v333(0x217) = CONST 
0x336: v336(0x4) = CONST 
0x339: v339 = CALLDATASIZE 
0x33a: v33a = SUB v339 v336(0x4)
0x33b: v33b(0x20) = CONST 
0x33e: v33e = LT v33a v33b(0x20)
0x33f: v33f = ISZERO v33e
0x340: v340(0x348) = CONST 
0x343: JUMPI v340(0x348) v33f
----------------------------------

Begin block 0x344
prev = {'0x332'}, next = {}
----------------------------------
Block 0x344
0x344: v344(0x0) = CONST 
0x347: REVERT v344(0x0) v344(0x0)
----------------------------------

Begin block 0x348
prev = {'0x332'}, next = {'0x6d7'}
----------------------------------
Block 0x348
0x34a: v34a = CALLDATALOAD v336(0x4)
0x34b: v34b(0x1) = CONST 
0x34d: v34d(0x1) = CONST 
0x34f: v34f(0xa0) = CONST 
0x351: v351(0x10000000000000000000000000000000000000000) = SHL v34f(0xa0) v34d(0x1)
0x352: v352(0xffffffffffffffffffffffffffffffffffffffff) = SUB v351(0x10000000000000000000000000000000000000000) v34b(0x1)
0x353: v353 = AND v352(0xffffffffffffffffffffffffffffffffffffffff) v34a
0x354: v354(0x6d7) = CONST 
0x357: JUMP v354(0x6d7)
----------------------------------

Begin block 0x358
prev = {}, next = {'0x6f2'}
----------------------------------
function renounceOwnership()()
Block 0x358
0x359: v359(0x2fa) = CONST 
0x35c: v35c(0x6f2) = CONST 
0x35f: JUMP v35c(0x6f2)
----------------------------------

Begin block 0x360
prev = {}, next = {'0x372', '0x376'}
----------------------------------
function burnFrom(address,uint256)()
Block 0x360
0x361: v361(0x2fa) = CONST 
0x364: v364(0x4) = CONST 
0x367: v367 = CALLDATASIZE 
0x368: v368 = SUB v367 v364(0x4)
0x369: v369(0x40) = CONST 
0x36c: v36c = LT v368 v369(0x40)
0x36d: v36d = ISZERO v36c
0x36e: v36e(0x376) = CONST 
0x371: JUMPI v36e(0x376) v36d
----------------------------------

Begin block 0x372
prev = {'0x360'}, next = {}
----------------------------------
Block 0x372
0x372: v372(0x0) = CONST 
0x375: REVERT v372(0x0) v372(0x0)
----------------------------------

Begin block 0x376
prev = {'0x360'}, next = {'0x795'}
----------------------------------
Block 0x376
0x378: v378(0x1) = CONST 
0x37a: v37a(0x1) = CONST 
0x37c: v37c(0xa0) = CONST 
0x37e: v37e(0x10000000000000000000000000000000000000000) = SHL v37c(0xa0) v37a(0x1)
0x37f: v37f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v37e(0x10000000000000000000000000000000000000000) v378(0x1)
0x381: v381 = CALLDATALOAD v364(0x4)
0x382: v382 = AND v381 v37f(0xffffffffffffffffffffffffffffffffffffffff)
0x384: v384(0x20) = CONST 
0x386: v386 = ADD v384(0x20) v364(0x4)
0x387: v387 = CALLDATALOAD v386
0x388: v388(0x795) = CONST 
0x38b: JUMP v388(0x795)
----------------------------------

Begin block 0x38c
prev = {}, next = {'0x7a3'}
----------------------------------
function owner()()
Block 0x38c
0x38d: v38d(0x394) = CONST 
0x390: v390(0x7a3) = CONST 
0x393: JUMP v390(0x7a3)
----------------------------------

Begin block 0x394
prev = {'0x7a3'}, next = {}
----------------------------------
Block 0x394
0x395: v395(0x40) = CONST 
0x398: v398 = MLOAD v395(0x40)
0x399: v399(0x1) = CONST 
0x39b: v39b(0x1) = CONST 
0x39d: v39d(0xa0) = CONST 
0x39f: v39f(0x10000000000000000000000000000000000000000) = SHL v39d(0xa0) v39b(0x1)
0x3a0: v3a0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v39f(0x10000000000000000000000000000000000000000) v399(0x1)
0x3a3: v3a3 = AND v7af v3a0(0xffffffffffffffffffffffffffffffffffffffff)
0x3a5: MSTORE v398 v3a3
0x3a6: v3a6 = MLOAD v395(0x40)
0x3aa: v3aa = SUB v398 v3a6
0x3ab: v3ab(0x20) = CONST 
0x3ad: v3ad = ADD v3ab(0x20) v3aa
0x3af: RETURN v3a6 v3ad
----------------------------------

Begin block 0x3b0
prev = {}, next = {'0x1fb0x3b0'}
----------------------------------
function isOwner()()
Block 0x3b0
0x3b1: v3b1(0x1fb) = CONST 
0x3b4: v3b4(0x7b2) = CONST 
0x3b7: v3b7_0 = CALLPRIVATE v3b4(0x7b2) v3b1(0x1fb)
----------------------------------

Begin block 0x3b8
prev = {}, next = {'0x15a0x3b8'}
----------------------------------
function symbol()()
Block 0x3b8
0x3b9: v3b9(0x15a) = CONST 
0x3bc: v3bc(0x7c3) = CONST 
0x3bf: v3bf_0 = CALLPRIVATE v3bc(0x7c3) v3b9(0x15a)
----------------------------------

Begin block 0x3c0
prev = {}, next = {'0x3d6', '0x3d2'}
----------------------------------
function addMinter(address)()
Block 0x3c0
0x3c1: v3c1(0x2fa) = CONST 
0x3c4: v3c4(0x4) = CONST 
0x3c7: v3c7 = CALLDATASIZE 
0x3c8: v3c8 = SUB v3c7 v3c4(0x4)
0x3c9: v3c9(0x20) = CONST 
0x3cc: v3cc = LT v3c8 v3c9(0x20)
0x3cd: v3cd = ISZERO v3cc
0x3ce: v3ce(0x3d6) = CONST 
0x3d1: JUMPI v3ce(0x3d6) v3cd
----------------------------------

Begin block 0x3d2
prev = {'0x3c0'}, next = {}
----------------------------------
Block 0x3d2
0x3d2: v3d2(0x0) = CONST 
0x3d5: REVERT v3d2(0x0) v3d2(0x0)
----------------------------------

Begin block 0x3d6
prev = {'0x3c0'}, next = {'0x824'}
----------------------------------
Block 0x3d6
0x3d8: v3d8 = CALLDATALOAD v3c4(0x4)
0x3d9: v3d9(0x1) = CONST 
0x3db: v3db(0x1) = CONST 
0x3dd: v3dd(0xa0) = CONST 
0x3df: v3df(0x10000000000000000000000000000000000000000) = SHL v3dd(0xa0) v3db(0x1)
0x3e0: v3e0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3df(0x10000000000000000000000000000000000000000) v3d9(0x1)
0x3e1: v3e1 = AND v3e0(0xffffffffffffffffffffffffffffffffffffffff) v3d8
0x3e2: v3e2(0x824) = CONST 
0x3e5: JUMP v3e2(0x824)
----------------------------------

Begin block 0x3e6
prev = {}, next = {'0x871'}
----------------------------------
function renounceMinter()()
Block 0x3e6
0x3e7: v3e7(0x2fa) = CONST 
0x3ea: v3ea(0x871) = CONST 
0x3ed: JUMP v3ea(0x871)
----------------------------------

Begin block 0x3ee
prev = {}, next = {'0x404', '0x400'}
----------------------------------
function decreaseAllowance(address,uint256)()
Block 0x3ee
0x3ef: v3ef(0x1fb) = CONST 
0x3f2: v3f2(0x4) = CONST 
0x3f5: v3f5 = CALLDATASIZE 
0x3f6: v3f6 = SUB v3f5 v3f2(0x4)
0x3f7: v3f7(0x40) = CONST 
0x3fa: v3fa = LT v3f6 v3f7(0x40)
0x3fb: v3fb = ISZERO v3fa
0x3fc: v3fc(0x404) = CONST 
0x3ff: JUMPI v3fc(0x404) v3fb
----------------------------------

Begin block 0x400
prev = {'0x3ee'}, next = {}
----------------------------------
Block 0x400
0x400: v400(0x0) = CONST 
0x403: REVERT v400(0x0) v400(0x0)
----------------------------------

Begin block 0x404
prev = {'0x3ee'}, next = {'0x87c'}
----------------------------------
Block 0x404
0x406: v406(0x1) = CONST 
0x408: v408(0x1) = CONST 
0x40a: v40a(0xa0) = CONST 
0x40c: v40c(0x10000000000000000000000000000000000000000) = SHL v40a(0xa0) v408(0x1)
0x40d: v40d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v40c(0x10000000000000000000000000000000000000000) v406(0x1)
0x40f: v40f = CALLDATALOAD v3f2(0x4)
0x410: v410 = AND v40f v40d(0xffffffffffffffffffffffffffffffffffffffff)
0x412: v412(0x20) = CONST 
0x414: v414 = ADD v412(0x20) v3f2(0x4)
0x415: v415 = CALLDATALOAD v414
0x416: v416(0x87c) = CONST 
0x419: JUMP v416(0x87c)
----------------------------------

Begin block 0x41a
prev = {}, next = {'0x42c', '0x430'}
----------------------------------
function transfer(address,uint256)()
Block 0x41a
0x41b: v41b(0x1fb) = CONST 
0x41e: v41e(0x4) = CONST 
0x421: v421 = CALLDATASIZE 
0x422: v422 = SUB v421 v41e(0x4)
0x423: v423(0x40) = CONST 
0x426: v426 = LT v422 v423(0x40)
0x427: v427 = ISZERO v426
0x428: v428(0x430) = CONST 
0x42b: JUMPI v428(0x430) v427
----------------------------------

Begin block 0x42c
prev = {'0x41a'}, next = {}
----------------------------------
Block 0x42c
0x42c: v42c(0x0) = CONST 
0x42f: REVERT v42c(0x0) v42c(0x0)
----------------------------------

Begin block 0x430
prev = {'0x41a'}, next = {'0x8b8'}
----------------------------------
Block 0x430
0x432: v432(0x1) = CONST 
0x434: v434(0x1) = CONST 
0x436: v436(0xa0) = CONST 
0x438: v438(0x10000000000000000000000000000000000000000) = SHL v436(0xa0) v434(0x1)
0x439: v439(0xffffffffffffffffffffffffffffffffffffffff) = SUB v438(0x10000000000000000000000000000000000000000) v432(0x1)
0x43b: v43b = CALLDATALOAD v41e(0x4)
0x43c: v43c = AND v43b v439(0xffffffffffffffffffffffffffffffffffffffff)
0x43e: v43e(0x20) = CONST 
0x440: v440 = ADD v43e(0x20) v41e(0x4)
0x441: v441 = CALLDATALOAD v440
0x442: v442(0x8b8) = CONST 
0x445: JUMP v442(0x8b8)
----------------------------------

Begin block 0x446
prev = {}, next = {'0x458', '0x45c'}
----------------------------------
function isMinter(address)()
Block 0x446
0x447: v447(0x1fb) = CONST 
0x44a: v44a(0x4) = CONST 
0x44d: v44d = CALLDATASIZE 
0x44e: v44e = SUB v44d v44a(0x4)
0x44f: v44f(0x20) = CONST 
0x452: v452 = LT v44e v44f(0x20)
0x453: v453 = ISZERO v452
0x454: v454(0x45c) = CONST 
0x457: JUMPI v454(0x45c) v453
----------------------------------

Begin block 0x458
prev = {'0x446'}, next = {}
----------------------------------
Block 0x458
0x458: v458(0x0) = CONST 
0x45b: REVERT v458(0x0) v458(0x0)
----------------------------------

Begin block 0x45c
prev = {'0x446'}, next = {'0x8c50x446'}
----------------------------------
Block 0x45c
0x45e: v45e = CALLDATALOAD v44a(0x4)
0x45f: v45f(0x1) = CONST 
0x461: v461(0x1) = CONST 
0x463: v463(0xa0) = CONST 
0x465: v465(0x10000000000000000000000000000000000000000) = SHL v463(0xa0) v461(0x1)
0x466: v466(0xffffffffffffffffffffffffffffffffffffffff) = SUB v465(0x10000000000000000000000000000000000000000) v45f(0x1)
0x467: v467 = AND v466(0xffffffffffffffffffffffffffffffffffffffff) v45e
0x468: v468(0x8c5) = CONST 
0x46b: JUMP v468(0x8c5)
----------------------------------

Begin block 0x46c
prev = {}, next = {'0x47e', '0x482'}
----------------------------------
function allowance(address,address)()
Block 0x46c
0x46d: v46d(0x217) = CONST 
0x470: v470(0x4) = CONST 
0x473: v473 = CALLDATASIZE 
0x474: v474 = SUB v473 v470(0x4)
0x475: v475(0x40) = CONST 
0x478: v478 = LT v474 v475(0x40)
0x479: v479 = ISZERO v478
0x47a: v47a(0x482) = CONST 
0x47d: JUMPI v47a(0x482) v479
----------------------------------

Begin block 0x47e
prev = {'0x46c'}, next = {}
----------------------------------
Block 0x47e
0x47e: v47e(0x0) = CONST 
0x481: REVERT v47e(0x0) v47e(0x0)
----------------------------------

Begin block 0x482
prev = {'0x46c'}, next = {'0x8de'}
----------------------------------
Block 0x482
0x484: v484(0x1) = CONST 
0x486: v486(0x1) = CONST 
0x488: v488(0xa0) = CONST 
0x48a: v48a(0x10000000000000000000000000000000000000000) = SHL v488(0xa0) v486(0x1)
0x48b: v48b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v48a(0x10000000000000000000000000000000000000000) v484(0x1)
0x48d: v48d = CALLDATALOAD v470(0x4)
0x48f: v48f = AND v48b(0xffffffffffffffffffffffffffffffffffffffff) v48d
0x491: v491(0x20) = CONST 
0x493: v493 = ADD v491(0x20) v470(0x4)
0x494: v494 = CALLDATALOAD v493
0x495: v495 = AND v494 v48b(0xffffffffffffffffffffffffffffffffffffffff)
0x496: v496(0x8de) = CONST 
0x499: JUMP v496(0x8de)
----------------------------------

Begin block 0x49a
prev = {}, next = {'0x4ac', '0x4b0'}
----------------------------------
function transferOwnership(address)()
Block 0x49a
0x49b: v49b(0x2fa) = CONST 
0x49e: v49e(0x4) = CONST 
0x4a1: v4a1 = CALLDATASIZE 
0x4a2: v4a2 = SUB v4a1 v49e(0x4)
0x4a3: v4a3(0x20) = CONST 
0x4a6: v4a6 = LT v4a2 v4a3(0x20)
0x4a7: v4a7 = ISZERO v4a6
0x4a8: v4a8(0x4b0) = CONST 
0x4ab: JUMPI v4a8(0x4b0) v4a7
----------------------------------

Begin block 0x4ac
prev = {'0x49a'}, next = {}
----------------------------------
Block 0x4ac
0x4ac: v4ac(0x0) = CONST 
0x4af: REVERT v4ac(0x0) v4ac(0x0)
----------------------------------

Begin block 0x4b0
prev = {'0x49a'}, next = {'0x909'}
----------------------------------
Block 0x4b0
0x4b2: v4b2 = CALLDATALOAD v49e(0x4)
0x4b3: v4b3(0x1) = CONST 
0x4b5: v4b5(0x1) = CONST 
0x4b7: v4b7(0xa0) = CONST 
0x4b9: v4b9(0x10000000000000000000000000000000000000000) = SHL v4b7(0xa0) v4b5(0x1)
0x4ba: v4ba(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4b9(0x10000000000000000000000000000000000000000) v4b3(0x1)
0x4bb: v4bb = AND v4ba(0xffffffffffffffffffffffffffffffffffffffff) v4b2
0x4bc: v4bc(0x909) = CONST 
0x4bf: JUMP v4bc(0x909)
----------------------------------

Begin block 0x4c0
prev = {}, next = {'0x506', '0x54c0x4c0'}
----------------------------------
function 0x4c0(v4c0arg0)
Block 0x4c0
0x4c1: v4c1(0x6) = CONST 
0x4c4: v4c4 = SLOAD v4c1(0x6)
0x4c5: v4c5(0x40) = CONST 
0x4c8: v4c8 = MLOAD v4c5(0x40)
0x4c9: v4c9(0x20) = CONST 
0x4cb: v4cb(0x1f) = CONST 
0x4cd: v4cd(0x2) = CONST 
0x4cf: v4cf(0x0) = CONST 
0x4d1: v4d1(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v4cf(0x0)
0x4d2: v4d2(0x100) = CONST 
0x4d5: v4d5(0x1) = CONST 
0x4d8: v4d8 = AND v4c4 v4d5(0x1)
0x4d9: v4d9 = ISZERO v4d8
0x4da: v4da = MUL v4d9 v4d2(0x100)
0x4db: v4db = ADD v4da v4d1(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x4de: v4de = AND v4c4 v4db
0x4e2: v4e2 = DIV v4de v4cd(0x2)
0x4e5: v4e5 = ADD v4e2 v4cb(0x1f)
0x4e8: v4e8 = DIV v4e5 v4c9(0x20)
0x4ea: v4ea = MUL v4c9(0x20) v4e8
0x4ec: v4ec = ADD v4c8 v4ea
0x4ee: v4ee = ADD v4c9(0x20) v4ec
0x4f1: MSTORE v4c5(0x40) v4ee
0x4f4: MSTORE v4c8 v4e2
0x4f5: v4f5(0x60) = CONST 
0x4fd: v4fd = ADD v4c8 v4c9(0x20)
0x501: v501 = ISZERO v4e2
0x502: v502(0x54c) = CONST 
0x505: JUMPI v502(0x54c) v501
----------------------------------

Begin block 0x506
prev = {'0x4c0'}, next = {'0x50e', '0x5210x4c0'}
----------------------------------
Block 0x506
0x507: v507(0x1f) = CONST 
0x509: v509 = LT v507(0x1f) v4e2
0x50a: v50a(0x521) = CONST 
0x50d: JUMPI v50a(0x521) v509
----------------------------------

Begin block 0x50e
prev = {'0x506'}, next = {'0x54c0x4c0'}
----------------------------------
Block 0x50e
0x50e: v50e(0x100) = CONST 
0x513: v513 = SLOAD v4c1(0x6)
0x514: v514 = DIV v513 v50e(0x100)
0x515: v515 = MUL v514 v50e(0x100)
0x517: MSTORE v4fd v515
0x519: v519(0x20) = CONST 
0x51b: v51b = ADD v519(0x20) v4fd
0x51d: v51d(0x54c) = CONST 
0x520: JUMP v51d(0x54c)
----------------------------------

Begin block 0x5210x4c0
prev = {'0x506'}, next = {'0x52f0x4c0'}
----------------------------------
Block 0x5210x4c0
0x5230x4c0: v4c0523 = ADD v4fd v4e2
0x5260x4c0: v4c0526(0x0) = CONST 
0x5280x4c0: MSTORE v4c0526(0x0) v4c1(0x6)
0x5290x4c0: v4c0529(0x20) = CONST 
0x52b0x4c0: v4c052b(0x0) = CONST 
0x52d0x4c0: v4c052d = SHA3 v4c052b(0x0) v4c0529(0x20)
----------------------------------

Begin block 0x5210x7c3
prev = {'0x809'}, next = {'0x52f0x7c3'}
----------------------------------
Block 0x5210x7c3
0x5230x7c3: v7c3523 = ADD v800 v7e5
0x5260x7c3: v7c3526(0x0) = CONST 
0x5280x7c3: MSTORE v7c3526(0x0) v7c4(0x7)
0x5290x7c3: v7c3529(0x20) = CONST 
0x52b0x7c3: v7c352b(0x0) = CONST 
0x52d0x7c3: v7c352d = SHA3 v7c352b(0x0) v7c3529(0x20)
----------------------------------

Begin block 0x52f0x4c0
prev = {'0x52f0x4c0', '0x5210x4c0'}, next = {'0x5430x4c0', '0x52f0x4c0'}
----------------------------------
Block 0x52f0x4c0
0x52f0x4c0_0x0: v52f4c0_0 = PHI v4fd v4c053b
0x52f0x4c0_0x1: v52f4c0_1 = PHI v4c0537 v4c052d
0x5310x4c0: v4c0531 = SLOAD v52f4c0_1
0x5330x4c0: MSTORE v52f4c0_0 v4c0531
0x5350x4c0: v4c0535(0x1) = CONST 
0x5370x4c0: v4c0537 = ADD v4c0535(0x1) v52f4c0_1
0x5390x4c0: v4c0539(0x20) = CONST 
0x53b0x4c0: v4c053b = ADD v4c0539(0x20) v52f4c0_0
0x53e0x4c0: v4c053e = GT v4c0523 v4c053b
0x53f0x4c0: v4c053f(0x52f) = CONST 
0x5420x4c0: JUMPI v4c053f(0x52f) v4c053e
----------------------------------

Begin block 0x52f0x7c3
prev = {'0x5210x7c3', '0x52f0x7c3'}, next = {'0x5430x7c3', '0x52f0x7c3'}
----------------------------------
Block 0x52f0x7c3
0x52f0x7c3_0x0: v52f7c3_0 = PHI v800 v7c353b
0x52f0x7c3_0x1: v52f7c3_1 = PHI v7c3537 v7c352d
0x5310x7c3: v7c3531 = SLOAD v52f7c3_1
0x5330x7c3: MSTORE v52f7c3_0 v7c3531
0x5350x7c3: v7c3535(0x1) = CONST 
0x5370x7c3: v7c3537 = ADD v7c3535(0x1) v52f7c3_1
0x5390x7c3: v7c3539(0x20) = CONST 
0x53b0x7c3: v7c353b = ADD v7c3539(0x20) v52f7c3_0
0x53e0x7c3: v7c353e = GT v7c3523 v7c353b
0x53f0x7c3: v7c353f(0x52f) = CONST 
0x5420x7c3: JUMPI v7c353f(0x52f) v7c353e
----------------------------------

Begin block 0x5430x4c0
prev = {'0x52f0x4c0'}, next = {'0x54c0x4c0'}
----------------------------------
Block 0x5430x4c0
0x5450x4c0: v4c0545 = SUB v4c053b v4c0523
0x5460x4c0: v4c0546(0x1f) = CONST 
0x5480x4c0: v4c0548 = AND v4c0546(0x1f) v4c0545
0x54a0x4c0: v4c054a = ADD v4c0523 v4c0548
----------------------------------

Begin block 0x5430x7c3
prev = {'0x52f0x7c3'}, next = {'0x54c0x7c3'}
----------------------------------
Block 0x5430x7c3
0x5450x7c3: v7c3545 = SUB v7c353b v7c3523
0x5460x7c3: v7c3546(0x1f) = CONST 
0x5480x7c3: v7c3548 = AND v7c3546(0x1f) v7c3545
0x54a0x7c3: v7c354a = ADD v7c3523 v7c3548
----------------------------------

Begin block 0x54c0x4c0
prev = {'0x5430x4c0', '0x4c0', '0x50e'}, next = {}
----------------------------------
Block 0x54c0x4c0
0x5550x4c0: RETURNPRIVATE v4c0arg0 v4c8
----------------------------------

Begin block 0x54c0x7c3
prev = {'0x5430x7c3', '0x7c3', '0x811'}, next = {}
----------------------------------
Block 0x54c0x7c3
0x5550x7c3: RETURNPRIVATE v7c3arg0 v7cb
----------------------------------

Begin block 0x556
prev = {'0x1e5'}, next = {'0x5630x1cf'}
----------------------------------
Block 0x556
0x557: v557(0x0) = CONST 
0x559: v559(0x563) = CONST 
0x55c: v55c = CALLER 
0x55f: v55f(0x96b) = CONST 
0x562: CALLPRIVATE v55f(0x96b) v1f6 v1f1 v55c v559(0x563)
----------------------------------

Begin block 0x5630x1cf
prev = {'0x556'}, next = {'0x1fb0x1cf'}
----------------------------------
Block 0x5630x1cf
0x5650x1cf: v1cf565(0x1) = CONST 
0x56b0x1cf: JUMP v1d0(0x1fb)
----------------------------------

Begin block 0x5630x285
prev = {'0x5ba0x285'}, next = {'0x1fb0x285'}
----------------------------------
Block 0x5630x285
0x5650x285: v285565(0x1) = CONST 
0x56b0x285: JUMP v286(0x1fb)
----------------------------------

Begin block 0x5630x2b1
prev = {'0x65a'}, next = {'0x1fb0x2b1'}
----------------------------------
Block 0x5630x2b1
0x5650x2b1: v2b1565(0x1) = CONST 
0x56b0x2b1: JUMP v2b2(0x1fb)
----------------------------------

Begin block 0x5630x3ee
prev = {'0x5ba0x3ee'}, next = {'0x1fb0x3ee'}
----------------------------------
Block 0x5630x3ee
0x5650x3ee: v3ee565(0x1) = CONST 
0x56b0x3ee: JUMP v3ef(0x1fb)
----------------------------------

Begin block 0x5630x41a
prev = {'0x8b8'}, next = {'0x1fb0x41a'}
----------------------------------
Block 0x5630x41a
0x5650x41a: v41a565(0x1) = CONST 
0x56b0x41a: JUMP v41b(0x1fb)
----------------------------------

Begin block 0x56c
prev = {}, next = {}
----------------------------------
function 0x56c(v56carg0)
Block 0x56c
0x56d: v56d(0x3) = CONST 
0x56f: v56f = SLOAD v56d(0x3)
0x571: RETURNPRIVATE v56carg0 v56f
----------------------------------

Begin block 0x572
prev = {'0x23f'}, next = {'0x57f'}
----------------------------------
Block 0x572
0x573: v573(0x0) = CONST 
0x575: v575(0x57f) = CONST 
0x57b: v57b(0xa57) = CONST 
0x57e: CALLPRIVATE v57b(0xa57) v25a v255 v24c v575(0x57f)
----------------------------------

Begin block 0x57f
prev = {'0x572'}, next = {'0x5ba0x229'}
----------------------------------
Block 0x57f
0x580: v580(0x1) = CONST 
0x582: v582(0x1) = CONST 
0x584: v584(0xa0) = CONST 
0x586: v586(0x10000000000000000000000000000000000000000) = SHL v584(0xa0) v582(0x1)
0x587: v587(0xffffffffffffffffffffffffffffffffffffffff) = SUB v586(0x10000000000000000000000000000000000000000) v580(0x1)
0x589: v589 = AND v24c v587(0xffffffffffffffffffffffffffffffffffffffff)
0x58a: v58a(0x0) = CONST 
0x58e: MSTORE v58a(0x0) v589
0x58f: v58f(0x2) = CONST 
0x591: v591(0x20) = CONST 
0x595: MSTORE v591(0x20) v58f(0x2)
0x596: v596(0x40) = CONST 
0x59a: v59a = SHA3 v58a(0x0) v596(0x40)
0x59b: v59b = CALLER 
0x59e: MSTORE v58a(0x0) v59b
0x5a0: MSTORE v591(0x20) v59a
0x5a3: v5a3 = SHA3 v58a(0x0) v596(0x40)
0x5a4: v5a4 = SLOAD v5a3
0x5a5: v5a5(0x5bf) = CONST 
0x5ab: v5ab(0x5ba) = CONST 
0x5b0: v5b0(0xffffffff) = CONST 
0x5b5: v5b5(0xb9b) = CONST 
0x5b8: v5b8(0xb9b) = AND v5b5(0xb9b) v5b0(0xffffffff)
0x5b9: v5b9_0 = CALLPRIVATE v5b8(0xb9b) v25a v5a4 v5ab(0x5ba)
----------------------------------

Begin block 0x5ba0x229
prev = {'0x57f'}, next = {'0x5bf0x229'}
----------------------------------
Block 0x5ba0x229
0x5bb0x229: v2295bb(0x96b) = CONST 
0x5be0x229: CALLPRIVATE v2295bb(0x96b) v5b9_0 v59b v24c v5a5(0x5bf)
----------------------------------

Begin block 0x5ba0x285
prev = {'0x5d8'}, next = {'0x5630x285'}
----------------------------------
Block 0x5ba0x285
0x5bb0x285: v2855bb(0x96b) = CONST 
0x5be0x285: CALLPRIVATE v2855bb(0x96b) v613_0 v2a7 v5d9 v5ff(0x563)
----------------------------------

Begin block 0x5ba0x3ee
prev = {'0x87c'}, next = {'0x5630x3ee'}
----------------------------------
Block 0x5ba0x3ee
0x5bb0x3ee: v3ee5bb(0x96b) = CONST 
0x5be0x3ee: CALLPRIVATE v3ee5bb(0x96b) v8b7_0 v410 v87d v8a3(0x563)
----------------------------------

Begin block 0x5ba0xdac
prev = {'0xdb6'}, next = {'0x79f0xdac'}
----------------------------------
Block 0x5ba0xdac
0x5bb0xdac: vdac5bb(0x96b) = CONST 
0x5be0xdac: CALLPRIVATE vdac5bb(0x96b) vdf0_0 vdd2 vdacarg1 vddc(0x79f)
----------------------------------

Begin block 0x5bf0x229
prev = {'0x5ba0x229'}, next = {'0x1fb0x229'}
----------------------------------
Block 0x5bf0x229
0x5c10x229: v2295c1(0x1) = CONST 
0x5c80x229: JUMP v22a(0x1fb)
----------------------------------

Begin block 0x5bf0x2fc
prev = {'0x6cc'}, next = {'0x1fb0x2fc'}
----------------------------------
Block 0x5bf0x2fc
0x5c10x2fc: v2fc5c1(0x1) = CONST 
0x5c80x2fc: JUMP v2fd(0x1fb)
----------------------------------

Begin block 0x5c9
prev = {'0x25f'}, next = {'0x267'}
----------------------------------
Block 0x5c9
0x5ca: v5ca(0x8) = CONST 
0x5cc: v5cc = SLOAD v5ca(0x8)
0x5cd: v5cd(0xff) = CONST 
0x5cf: v5cf = AND v5cd(0xff) v5cc
0x5d1: JUMP v260(0x267)
----------------------------------

Begin block 0x5d2
prev = {'0x27d'}, next = {'0x2170x27d'}
----------------------------------
Block 0x5d2
0x5d3: v5d3(0x5) = CONST 
0x5d5: v5d5 = SLOAD v5d3(0x5)
0x5d7: JUMP v27e(0x217)
----------------------------------

Begin block 0x5d8
prev = {'0x29b'}, next = {'0x5ba0x285'}
----------------------------------
Block 0x5d8
0x5d9: v5d9 = CALLER 
0x5da: v5da(0x0) = CONST 
0x5de: MSTORE v5da(0x0) v5d9
0x5df: v5df(0x2) = CONST 
0x5e1: v5e1(0x20) = CONST 
0x5e5: MSTORE v5e1(0x20) v5df(0x2)
0x5e6: v5e6(0x40) = CONST 
0x5ea: v5ea = SHA3 v5da(0x0) v5e6(0x40)
0x5eb: v5eb(0x1) = CONST 
0x5ed: v5ed(0x1) = CONST 
0x5ef: v5ef(0xa0) = CONST 
0x5f1: v5f1(0x10000000000000000000000000000000000000000) = SHL v5ef(0xa0) v5ed(0x1)
0x5f2: v5f2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5f1(0x10000000000000000000000000000000000000000) v5eb(0x1)
0x5f4: v5f4 = AND v2a7 v5f2(0xffffffffffffffffffffffffffffffffffffffff)
0x5f6: MSTORE v5da(0x0) v5f4
0x5f9: MSTORE v5e1(0x20) v5ea
0x5fb: v5fb = SHA3 v5da(0x0) v5e6(0x40)
0x5fc: v5fc = SLOAD v5fb
0x5ff: v5ff(0x563) = CONST 
0x605: v605(0x5ba) = CONST 
0x60a: v60a(0xffffffff) = CONST 
0x60f: v60f(0xbf8) = CONST 
0x612: v612(0xbf8) = AND v60f(0xbf8) v60a(0xffffffff)
0x613: v613_0 = CALLPRIVATE v612(0xbf8) v2ac v5fc v605(0x5ba)
----------------------------------

Begin block 0x614
prev = {'0x2c7'}, next = {'0x61f'}
----------------------------------
Block 0x614
0x615: v615(0x0) = CONST 
0x617: v617(0x61f) = CONST 
0x61a: v61a = CALLER 
0x61b: v61b(0x8c5) = CONST 
0x61e: v61e_0 = CALLPRIVATE v61b(0x8c5) v61a v617(0x61f)
----------------------------------

Begin block 0x61f
prev = {'0x614'}, next = {'0x624', '0x65a'}
----------------------------------
Block 0x61f
0x620: v620(0x65a) = CONST 
0x623: JUMPI v620(0x65a) v61e_0
----------------------------------

Begin block 0x624
prev = {'0x61f'}, next = {}
----------------------------------
Block 0x624
0x624: v624(0x40) = CONST 
0x626: v626 = MLOAD v624(0x40)
0x627: v627(0x461bcd) = CONST 
0x62b: v62b(0xe5) = CONST 
0x62d: v62d(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v62b(0xe5) v627(0x461bcd)
0x62f: MSTORE v626 v62d(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x630: v630(0x4) = CONST 
0x632: v632 = ADD v630(0x4) v626
0x635: v635(0x20) = CONST 
0x637: v637 = ADD v635(0x20) v632
0x63a: v63a = SUB v637 v632
0x63c: MSTORE v632 v63a
0x63d: v63d(0x30) = CONST 
0x640: MSTORE v637 v63d(0x30)
0x641: v641(0x20) = CONST 
0x643: v643 = ADD v641(0x20) v637
0x645: v645(0x11ce) = CONST 
0x648: v648(0x30) = CONST 
0x64b: CODECOPY v643 v645(0x11ce) v648(0x30)
0x64c: v64c(0x40) = CONST 
0x64e: v64e = ADD v64c(0x40) v643
0x652: v652(0x40) = CONST 
0x654: v654 = MLOAD v652(0x40)
0x657: v657 = SUB v64e v654
0x659: REVERT v654 v657
----------------------------------

Begin block 0x65a
prev = {'0x61f'}, next = {'0x5630x2b1'}
----------------------------------
Block 0x65a
0x65b: v65b(0x563) = CONST 
0x660: v660(0xc59) = CONST 
0x663: CALLPRIVATE v660(0xc59) v2d8 v2d3 v65b(0x563)
----------------------------------

Begin block 0x664
prev = {'0x2f3'}, next = {'0x66e0x2dd'}
----------------------------------
Block 0x664
0x665: v665(0x66e) = CONST 
0x668: v668 = CALLER 
0x66a: v66a(0xcd1) = CONST 
0x66d: CALLPRIVATE v66a(0xcd1) v2f5 v668 v665(0x66e)
----------------------------------

Begin block 0x66e0x2dd
prev = {'0x664'}, next = {'0x2fa0x2dd'}
----------------------------------
Block 0x66e0x2dd
0x6700x2dd: JUMP v2de(0x2fa)
----------------------------------

Begin block 0x66e0x3c0
prev = {'0xe02'}, next = {'0x2fa0x3c0'}
----------------------------------
Block 0x66e0x3c0
0x6700x3c0: JUMP v3c1(0x2fa)
----------------------------------

Begin block 0x66e0x49a
prev = {'0xf2d'}, next = {'0x2fa0x49a'}
----------------------------------
Block 0x66e0x49a
0x6700x49a: JUMP v49b(0x2fa)
----------------------------------

Begin block 0x671
prev = {'0x312'}, next = {'0x67b'}
----------------------------------
Block 0x671
0x672: v672(0x0) = CONST 
0x674: v674(0x67b) = CONST 
0x677: v677(0x7b2) = CONST 
0x67a: v67a_0 = CALLPRIVATE v677(0x7b2) v674(0x67b)
----------------------------------

Begin block 0x67b
prev = {'0x671'}, next = {'0x6cc', '0x680'}
----------------------------------
Block 0x67b
0x67c: v67c(0x6cc) = CONST 
0x67f: JUMPI v67c(0x6cc) v67a_0
----------------------------------

Begin block 0x680
prev = {'0x67b'}, next = {}
----------------------------------
Block 0x680
0x680: v680(0x40) = CONST 
0x683: v683 = MLOAD v680(0x40)
0x684: v684(0x461bcd) = CONST 
0x688: v688(0xe5) = CONST 
0x68a: v68a(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v688(0xe5) v684(0x461bcd)
0x68c: MSTORE v683 v68a(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x68d: v68d(0x20) = CONST 
0x68f: v68f(0x4) = CONST 
0x692: v692 = ADD v683 v68f(0x4)
0x695: MSTORE v692 v68d(0x20)
0x696: v696(0x24) = CONST 
0x699: v699 = ADD v683 v696(0x24)
0x69a: MSTORE v699 v68d(0x20)
0x69b: v69b(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x6bc: v6bc(0x44) = CONST 
0x6bf: v6bf = ADD v683 v6bc(0x44)
0x6c0: MSTORE v6bf v69b(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x6c2: v6c2 = MLOAD v680(0x40)
0x6c6: v6c6 = SUB v683 v6c2
0x6c7: v6c7(0x64) = CONST 
0x6c9: v6c9 = ADD v6c7(0x64) v6c6
0x6cb: REVERT v6c2 v6c9
----------------------------------

Begin block 0x6cc
prev = {'0x67b'}, next = {'0x5bf0x2fc'}
----------------------------------
Block 0x6cc
0x6cd: v6cd(0x5bf) = CONST 
0x6d3: v6d3(0xa57) = CONST 
0x6d6: CALLPRIVATE v6d3(0xa57) v32d v328 v31f v6cd(0x5bf)
----------------------------------

Begin block 0x6d7
prev = {'0x348'}, next = {'0x2170x332'}
----------------------------------
Block 0x6d7
0x6d8: v6d8(0x1) = CONST 
0x6da: v6da(0x1) = CONST 
0x6dc: v6dc(0xa0) = CONST 
0x6de: v6de(0x10000000000000000000000000000000000000000) = SHL v6dc(0xa0) v6da(0x1)
0x6df: v6df(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6de(0x10000000000000000000000000000000000000000) v6d8(0x1)
0x6e0: v6e0 = AND v6df(0xffffffffffffffffffffffffffffffffffffffff) v353
0x6e1: v6e1(0x0) = CONST 
0x6e5: MSTORE v6e1(0x0) v6e0
0x6e6: v6e6(0x1) = CONST 
0x6e8: v6e8(0x20) = CONST 
0x6ea: MSTORE v6e8(0x20) v6e6(0x1)
0x6eb: v6eb(0x40) = CONST 
0x6ee: v6ee = SHA3 v6e1(0x0) v6eb(0x40)
0x6ef: v6ef = SLOAD v6ee
0x6f1: JUMP v333(0x217)
----------------------------------

Begin block 0x6f2
prev = {'0x358'}, next = {'0x6fa'}
----------------------------------
Block 0x6f2
0x6f3: v6f3(0x6fa) = CONST 
0x6f6: v6f6(0x7b2) = CONST 
0x6f9: v6f9_0 = CALLPRIVATE v6f6(0x7b2) v6f3(0x6fa)
----------------------------------

Begin block 0x6fa
prev = {'0x6f2'}, next = {'0x6ff', '0x74b'}
----------------------------------
Block 0x6fa
0x6fb: v6fb(0x74b) = CONST 
0x6fe: JUMPI v6fb(0x74b) v6f9_0
----------------------------------

Begin block 0x6ff
prev = {'0x6fa'}, next = {}
----------------------------------
Block 0x6ff
0x6ff: v6ff(0x40) = CONST 
0x702: v702 = MLOAD v6ff(0x40)
0x703: v703(0x461bcd) = CONST 
0x707: v707(0xe5) = CONST 
0x709: v709(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v707(0xe5) v703(0x461bcd)
0x70b: MSTORE v702 v709(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x70c: v70c(0x20) = CONST 
0x70e: v70e(0x4) = CONST 
0x711: v711 = ADD v702 v70e(0x4)
0x714: MSTORE v711 v70c(0x20)
0x715: v715(0x24) = CONST 
0x718: v718 = ADD v702 v715(0x24)
0x719: MSTORE v718 v70c(0x20)
0x71a: v71a(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x73b: v73b(0x44) = CONST 
0x73e: v73e = ADD v702 v73b(0x44)
0x73f: MSTORE v73e v71a(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x741: v741 = MLOAD v6ff(0x40)
0x745: v745 = SUB v702 v741
0x746: v746(0x64) = CONST 
0x748: v748 = ADD v746(0x64) v745
0x74a: REVERT v741 v748
----------------------------------

Begin block 0x74b
prev = {'0x6fa'}, next = {'0x2fa0x358'}
----------------------------------
Block 0x74b
0x74c: v74c(0x0) = CONST 
0x74f: v74f = SLOAD v74c(0x0)
0x750: v750(0x40) = CONST 
0x752: v752 = MLOAD v750(0x40)
0x753: v753(0x1) = CONST 
0x755: v755(0x1) = CONST 
0x757: v757(0xa0) = CONST 
0x759: v759(0x10000000000000000000000000000000000000000) = SHL v757(0xa0) v755(0x1)
0x75a: v75a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v759(0x10000000000000000000000000000000000000000) v753(0x1)
0x75d: v75d = AND v74f v75a(0xffffffffffffffffffffffffffffffffffffffff)
0x75f: v75f(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x783: LOG3 v752 v74c(0x0) v75f(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v75d v74c(0x0)
0x784: v784(0x0) = CONST 
0x787: v787 = SLOAD v784(0x0)
0x788: v788(0x1) = CONST 
0x78a: v78a(0x1) = CONST 
0x78c: v78c(0xa0) = CONST 
0x78e: v78e(0x10000000000000000000000000000000000000000) = SHL v78c(0xa0) v78a(0x1)
0x78f: v78f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v78e(0x10000000000000000000000000000000000000000) v788(0x1)
0x790: v790(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v78f(0xffffffffffffffffffffffffffffffffffffffff)
0x791: v791 = AND v790(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v787
0x793: SSTORE v784(0x0) v791
0x794: JUMP v359(0x2fa)
----------------------------------

Begin block 0x795
prev = {'0x376'}, next = {'0x79f0x360'}
----------------------------------
Block 0x795
0x796: v796(0x79f) = CONST 
0x79b: v79b(0xdac) = CONST 
0x79e: CALLPRIVATE v79b(0xdac) v387 v382 v796(0x79f)
----------------------------------

Begin block 0x79f0x360
prev = {'0x795'}, next = {'0x2fa0x360'}
----------------------------------
Block 0x79f0x360
0x7a20x360: JUMP v361(0x2fa)
----------------------------------

Begin block 0x79f0xc59
prev = {'0x1022'}, next = {}
----------------------------------
Block 0x79f0xc59
0x7a20xc59: RETURNPRIVATE vc59arg2
----------------------------------

Begin block 0x79f0xdac
prev = {'0x5ba0xdac'}, next = {}
----------------------------------
Block 0x79f0xdac
0x7a20xdac: RETURNPRIVATE vdacarg2
----------------------------------

Begin block 0x7a3
prev = {'0x38c'}, next = {'0x394'}
----------------------------------
Block 0x7a3
0x7a4: v7a4(0x0) = CONST 
0x7a6: v7a6 = SLOAD v7a4(0x0)
0x7a7: v7a7(0x1) = CONST 
0x7a9: v7a9(0x1) = CONST 
0x7ab: v7ab(0xa0) = CONST 
0x7ad: v7ad(0x10000000000000000000000000000000000000000) = SHL v7ab(0xa0) v7a9(0x1)
0x7ae: v7ae(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7ad(0x10000000000000000000000000000000000000000) v7a7(0x1)
0x7af: v7af = AND v7ae(0xffffffffffffffffffffffffffffffffffffffff) v7a6
0x7b1: JUMP v38d(0x394)
----------------------------------

Begin block 0x7b2
prev = {}, next = {}
----------------------------------
function 0x7b2(v7b2arg0)
Block 0x7b2
0x7b3: v7b3(0x0) = CONST 
0x7b5: v7b5 = SLOAD v7b3(0x0)
0x7b6: v7b6(0x1) = CONST 
0x7b8: v7b8(0x1) = CONST 
0x7ba: v7ba(0xa0) = CONST 
0x7bc: v7bc(0x10000000000000000000000000000000000000000) = SHL v7ba(0xa0) v7b8(0x1)
0x7bd: v7bd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7bc(0x10000000000000000000000000000000000000000) v7b6(0x1)
0x7be: v7be = AND v7bd(0xffffffffffffffffffffffffffffffffffffffff) v7b5
0x7bf: v7bf = CALLER 
0x7c0: v7c0 = EQ v7bf v7be
0x7c2: RETURNPRIVATE v7b2arg0 v7c0
----------------------------------

Begin block 0x7c3
prev = {}, next = {'0x54c0x7c3', '0x809'}
----------------------------------
function 0x7c3(v7c3arg0)
Block 0x7c3
0x7c4: v7c4(0x7) = CONST 
0x7c7: v7c7 = SLOAD v7c4(0x7)
0x7c8: v7c8(0x40) = CONST 
0x7cb: v7cb = MLOAD v7c8(0x40)
0x7cc: v7cc(0x20) = CONST 
0x7ce: v7ce(0x1f) = CONST 
0x7d0: v7d0(0x2) = CONST 
0x7d2: v7d2(0x0) = CONST 
0x7d4: v7d4(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v7d2(0x0)
0x7d5: v7d5(0x100) = CONST 
0x7d8: v7d8(0x1) = CONST 
0x7db: v7db = AND v7c7 v7d8(0x1)
0x7dc: v7dc = ISZERO v7db
0x7dd: v7dd = MUL v7dc v7d5(0x100)
0x7de: v7de = ADD v7dd v7d4(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x7e1: v7e1 = AND v7c7 v7de
0x7e5: v7e5 = DIV v7e1 v7d0(0x2)
0x7e8: v7e8 = ADD v7e5 v7ce(0x1f)
0x7eb: v7eb = DIV v7e8 v7cc(0x20)
0x7ed: v7ed = MUL v7cc(0x20) v7eb
0x7ef: v7ef = ADD v7cb v7ed
0x7f1: v7f1 = ADD v7cc(0x20) v7ef
0x7f4: MSTORE v7c8(0x40) v7f1
0x7f7: MSTORE v7cb v7e5
0x7f8: v7f8(0x60) = CONST 
0x800: v800 = ADD v7cb v7cc(0x20)
0x804: v804 = ISZERO v7e5
0x805: v805(0x54c) = CONST 
0x808: JUMPI v805(0x54c) v804
----------------------------------

Begin block 0x809
prev = {'0x7c3'}, next = {'0x5210x7c3', '0x811'}
----------------------------------
Block 0x809
0x80a: v80a(0x1f) = CONST 
0x80c: v80c = LT v80a(0x1f) v7e5
0x80d: v80d(0x521) = CONST 
0x810: JUMPI v80d(0x521) v80c
----------------------------------

Begin block 0x811
prev = {'0x809'}, next = {'0x54c0x7c3'}
----------------------------------
Block 0x811
0x811: v811(0x100) = CONST 
0x816: v816 = SLOAD v7c4(0x7)
0x817: v817 = DIV v816 v811(0x100)
0x818: v818 = MUL v817 v811(0x100)
0x81a: MSTORE v800 v818
0x81c: v81c(0x20) = CONST 
0x81e: v81e = ADD v81c(0x20) v800
0x820: v820(0x54c) = CONST 
0x823: JUMP v820(0x54c)
----------------------------------

Begin block 0x824
prev = {'0x3d6'}, next = {'0x82d'}
----------------------------------
Block 0x824
0x825: v825(0x82d) = CONST 
0x828: v828 = CALLER 
0x829: v829(0x8c5) = CONST 
0x82c: v82c_0 = CALLPRIVATE v829(0x8c5) v828 v825(0x82d)
----------------------------------

Begin block 0x82d
prev = {'0x824'}, next = {'0x832', '0x868'}
----------------------------------
Block 0x82d
0x82e: v82e(0x868) = CONST 
0x831: JUMPI v82e(0x868) v82c_0
----------------------------------

Begin block 0x832
prev = {'0x82d'}, next = {}
----------------------------------
Block 0x832
0x832: v832(0x40) = CONST 
0x834: v834 = MLOAD v832(0x40)
0x835: v835(0x461bcd) = CONST 
0x839: v839(0xe5) = CONST 
0x83b: v83b(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v839(0xe5) v835(0x461bcd)
0x83d: MSTORE v834 v83b(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x83e: v83e(0x4) = CONST 
0x840: v840 = ADD v83e(0x4) v834
0x843: v843(0x20) = CONST 
0x845: v845 = ADD v843(0x20) v840
0x848: v848 = SUB v845 v840
0x84a: MSTORE v840 v848
0x84b: v84b(0x30) = CONST 
0x84e: MSTORE v845 v84b(0x30)
0x84f: v84f(0x20) = CONST 
0x851: v851 = ADD v84f(0x20) v845
0x853: v853(0x11ce) = CONST 
0x856: v856(0x30) = CONST 
0x859: CODECOPY v851 v853(0x11ce) v856(0x30)
0x85a: v85a(0x40) = CONST 
0x85c: v85c = ADD v85a(0x40) v851
0x860: v860(0x40) = CONST 
0x862: v862 = MLOAD v860(0x40)
0x865: v865 = SUB v85c v862
0x867: REVERT v862 v865
----------------------------------

Begin block 0x868
prev = {'0x82d'}, next = {'0xdf1'}
----------------------------------
Block 0x868
0x869: v869(0x66e) = CONST 
0x86d: v86d(0xdf1) = CONST 
0x870: JUMP v86d(0xdf1)
----------------------------------

Begin block 0x871
prev = {'0x3e6'}, next = {'0xe39'}
----------------------------------
Block 0x871
0x872: v872(0x87a) = CONST 
0x875: v875 = CALLER 
0x876: v876(0xe39) = CONST 
0x879: JUMP v876(0xe39)
----------------------------------

Begin block 0x87a
prev = {'0xe4a'}, next = {'0x2fa0x3e6'}
----------------------------------
Block 0x87a
0x87b: JUMP v3e7(0x2fa)
----------------------------------

Begin block 0x87c
prev = {'0x404'}, next = {'0x5ba0x3ee'}
----------------------------------
Block 0x87c
0x87d: v87d = CALLER 
0x87e: v87e(0x0) = CONST 
0x882: MSTORE v87e(0x0) v87d
0x883: v883(0x2) = CONST 
0x885: v885(0x20) = CONST 
0x889: MSTORE v885(0x20) v883(0x2)
0x88a: v88a(0x40) = CONST 
0x88e: v88e = SHA3 v87e(0x0) v88a(0x40)
0x88f: v88f(0x1) = CONST 
0x891: v891(0x1) = CONST 
0x893: v893(0xa0) = CONST 
0x895: v895(0x10000000000000000000000000000000000000000) = SHL v893(0xa0) v891(0x1)
0x896: v896(0xffffffffffffffffffffffffffffffffffffffff) = SUB v895(0x10000000000000000000000000000000000000000) v88f(0x1)
0x898: v898 = AND v410 v896(0xffffffffffffffffffffffffffffffffffffffff)
0x89a: MSTORE v87e(0x0) v898
0x89d: MSTORE v885(0x20) v88e
0x89f: v89f = SHA3 v87e(0x0) v88a(0x40)
0x8a0: v8a0 = SLOAD v89f
0x8a3: v8a3(0x563) = CONST 
0x8a9: v8a9(0x5ba) = CONST 
0x8ae: v8ae(0xffffffff) = CONST 
0x8b3: v8b3(0xb9b) = CONST 
0x8b6: v8b6(0xb9b) = AND v8b3(0xb9b) v8ae(0xffffffff)
0x8b7: v8b7_0 = CALLPRIVATE v8b6(0xb9b) v415 v8a0 v8a9(0x5ba)
----------------------------------

Begin block 0x8b8
prev = {'0x430'}, next = {'0x5630x41a'}
----------------------------------
Block 0x8b8
0x8b9: v8b9(0x0) = CONST 
0x8bb: v8bb(0x563) = CONST 
0x8be: v8be = CALLER 
0x8c1: v8c1(0xa57) = CONST 
0x8c4: CALLPRIVATE v8c1(0xa57) v441 v43c v8be v8bb(0x563)
----------------------------------

Begin block 0x8c5
prev = {}, next = {'0x8d80x8c5'}
----------------------------------
function 0x8c5(v8c5arg0, v8c5arg1)
Block 0x8c5
0x8c6: v8c6(0x0) = CONST 
0x8c8: v8c8(0x8d8) = CONST 
0x8cb: v8cb(0x4) = CONST 
0x8ce: v8ce(0xffffffff) = CONST 
0x8d3: v8d3(0xe81) = CONST 
0x8d6: v8d6(0xe81) = AND v8d3(0xe81) v8ce(0xffffffff)
0x8d7: v8d7_0 = CALLPRIVATE v8d6(0xe81) v8c5arg0 v8cb(0x4) v8c8(0x8d8)
----------------------------------

Begin block 0x8c50x446
prev = {'0x45c'}, next = {'0x8d80x446'}
----------------------------------
Block 0x8c50x446
0x8c60x446: v4468c6(0x0) = CONST 
0x8c80x446: v4468c8(0x8d8) = CONST 
0x8cb0x446: v4468cb(0x4) = CONST 
0x8ce0x446: v4468ce(0xffffffff) = CONST 
0x8d30x446: v4468d3(0xe81) = CONST 
0x8d60x446: v4468d6(0xe81) = AND v4468d3(0xe81) v4468ce(0xffffffff)
0x8d70x446: v4468d7_0 = CALLPRIVATE v4468d6(0xe81) v467 v4468cb(0x4) v4468c8(0x8d8)
----------------------------------

Begin block 0x8d80x446
prev = {'0x8c50x446'}, next = {'0x1fb0x446'}
----------------------------------
Block 0x8d80x446
0x8dd0x446: JUMP v447(0x1fb)
----------------------------------

Begin block 0x8d80x8c5
prev = {'0x8c5'}, next = {}
----------------------------------
Block 0x8d80x8c5
0x8dd0x8c5: RETURNPRIVATE v8c5arg1 v8d7_0
----------------------------------

Begin block 0x8de
prev = {'0x482'}, next = {'0x2170x46c'}
----------------------------------
Block 0x8de
0x8df: v8df(0x1) = CONST 
0x8e1: v8e1(0x1) = CONST 
0x8e3: v8e3(0xa0) = CONST 
0x8e5: v8e5(0x10000000000000000000000000000000000000000) = SHL v8e3(0xa0) v8e1(0x1)
0x8e6: v8e6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8e5(0x10000000000000000000000000000000000000000) v8df(0x1)
0x8e9: v8e9 = AND v8e6(0xffffffffffffffffffffffffffffffffffffffff) v48f
0x8ea: v8ea(0x0) = CONST 
0x8ee: MSTORE v8ea(0x0) v8e9
0x8ef: v8ef(0x2) = CONST 
0x8f1: v8f1(0x20) = CONST 
0x8f5: MSTORE v8f1(0x20) v8ef(0x2)
0x8f6: v8f6(0x40) = CONST 
0x8fa: v8fa = SHA3 v8ea(0x0) v8f6(0x40)
0x8fe: v8fe = AND v8e6(0xffffffffffffffffffffffffffffffffffffffff) v495
0x900: MSTORE v8ea(0x0) v8fe
0x904: MSTORE v8f1(0x20) v8fa
0x905: v905 = SHA3 v8ea(0x0) v8f6(0x40)
0x906: v906 = SLOAD v905
0x908: JUMP v46d(0x217)
----------------------------------

Begin block 0x909
prev = {'0x4b0'}, next = {'0x911'}
----------------------------------
Block 0x909
0x90a: v90a(0x911) = CONST 
0x90d: v90d(0x7b2) = CONST 
0x910: v910_0 = CALLPRIVATE v90d(0x7b2) v90a(0x911)
----------------------------------

Begin block 0x911
prev = {'0x909'}, next = {'0x962', '0x916'}
----------------------------------
Block 0x911
0x912: v912(0x962) = CONST 
0x915: JUMPI v912(0x962) v910_0
----------------------------------

Begin block 0x916
prev = {'0x911'}, next = {}
----------------------------------
Block 0x916
0x916: v916(0x40) = CONST 
0x919: v919 = MLOAD v916(0x40)
0x91a: v91a(0x461bcd) = CONST 
0x91e: v91e(0xe5) = CONST 
0x920: v920(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v91e(0xe5) v91a(0x461bcd)
0x922: MSTORE v919 v920(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x923: v923(0x20) = CONST 
0x925: v925(0x4) = CONST 
0x928: v928 = ADD v919 v925(0x4)
0x92b: MSTORE v928 v923(0x20)
0x92c: v92c(0x24) = CONST 
0x92f: v92f = ADD v919 v92c(0x24)
0x930: MSTORE v92f v923(0x20)
0x931: v931(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x952: v952(0x44) = CONST 
0x955: v955 = ADD v919 v952(0x44)
0x956: MSTORE v955 v931(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x958: v958 = MLOAD v916(0x40)
0x95c: v95c = SUB v919 v958
0x95d: v95d(0x64) = CONST 
0x95f: v95f = ADD v95d(0x64) v95c
0x961: REVERT v958 v95f
----------------------------------

Begin block 0x962
prev = {'0x911'}, next = {'0xee8'}
----------------------------------
Block 0x962
0x963: v963(0x66e) = CONST 
0x967: v967(0xee8) = CONST 
0x96a: JUMP v967(0xee8)
----------------------------------

Begin block 0x96b
prev = {}, next = {'0x97a', '0x9b0'}
----------------------------------
function 0x96b(v96barg0, v96barg1, v96barg2, v96barg3)
Block 0x96b
0x96c: v96c(0x1) = CONST 
0x96e: v96e(0x1) = CONST 
0x970: v970(0xa0) = CONST 
0x972: v972(0x10000000000000000000000000000000000000000) = SHL v970(0xa0) v96e(0x1)
0x973: v973(0xffffffffffffffffffffffffffffffffffffffff) = SUB v972(0x10000000000000000000000000000000000000000) v96c(0x1)
0x975: v975 = AND v96barg2 v973(0xffffffffffffffffffffffffffffffffffffffff)
0x976: v976(0x9b0) = CONST 
0x979: JUMPI v976(0x9b0) v975
----------------------------------

Begin block 0x97a
prev = {'0x96b'}, next = {}
----------------------------------
Block 0x97a
0x97a: v97a(0x40) = CONST 
0x97c: v97c = MLOAD v97a(0x40)
0x97d: v97d(0x461bcd) = CONST 
0x981: v981(0xe5) = CONST 
0x983: v983(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v981(0xe5) v97d(0x461bcd)
0x985: MSTORE v97c v983(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x986: v986(0x4) = CONST 
0x988: v988 = ADD v986(0x4) v97c
0x98b: v98b(0x20) = CONST 
0x98d: v98d = ADD v98b(0x20) v988
0x990: v990 = SUB v98d v988
0x992: MSTORE v988 v990
0x993: v993(0x24) = CONST 
0x996: MSTORE v98d v993(0x24)
0x997: v997(0x20) = CONST 
0x999: v999 = ADD v997(0x20) v98d
0x99b: v99b(0x1287) = CONST 
0x99e: v99e(0x24) = CONST 
0x9a1: CODECOPY v999 v99b(0x1287) v99e(0x24)
0x9a2: v9a2(0x40) = CONST 
0x9a4: v9a4 = ADD v9a2(0x40) v999
0x9a8: v9a8(0x40) = CONST 
0x9aa: v9aa = MLOAD v9a8(0x40)
0x9ad: v9ad = SUB v9a4 v9aa
0x9af: REVERT v9aa v9ad
----------------------------------

Begin block 0x9b0
prev = {'0x96b'}, next = {'0x9bf', '0x9f5'}
----------------------------------
Block 0x9b0
0x9b1: v9b1(0x1) = CONST 
0x9b3: v9b3(0x1) = CONST 
0x9b5: v9b5(0xa0) = CONST 
0x9b7: v9b7(0x10000000000000000000000000000000000000000) = SHL v9b5(0xa0) v9b3(0x1)
0x9b8: v9b8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v9b7(0x10000000000000000000000000000000000000000) v9b1(0x1)
0x9ba: v9ba = AND v96barg1 v9b8(0xffffffffffffffffffffffffffffffffffffffff)
0x9bb: v9bb(0x9f5) = CONST 
0x9be: JUMPI v9bb(0x9f5) v9ba
----------------------------------

Begin block 0x9bf
prev = {'0x9b0'}, next = {}
----------------------------------
Block 0x9bf
0x9bf: v9bf(0x40) = CONST 
0x9c1: v9c1 = MLOAD v9bf(0x40)
0x9c2: v9c2(0x461bcd) = CONST 
0x9c6: v9c6(0xe5) = CONST 
0x9c8: v9c8(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v9c6(0xe5) v9c2(0x461bcd)
0x9ca: MSTORE v9c1 v9c8(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x9cb: v9cb(0x4) = CONST 
0x9cd: v9cd = ADD v9cb(0x4) v9c1
0x9d0: v9d0(0x20) = CONST 
0x9d2: v9d2 = ADD v9d0(0x20) v9cd
0x9d5: v9d5 = SUB v9d2 v9cd
0x9d7: MSTORE v9cd v9d5
0x9d8: v9d8(0x22) = CONST 
0x9db: MSTORE v9d2 v9d8(0x22)
0x9dc: v9dc(0x20) = CONST 
0x9de: v9de = ADD v9dc(0x20) v9d2
0x9e0: v9e0(0x11ac) = CONST 
0x9e3: v9e3(0x22) = CONST 
0x9e6: CODECOPY v9de v9e0(0x11ac) v9e3(0x22)
0x9e7: v9e7(0x40) = CONST 
0x9e9: v9e9 = ADD v9e7(0x40) v9de
0x9ed: v9ed(0x40) = CONST 
0x9ef: v9ef = MLOAD v9ed(0x40)
0x9f2: v9f2 = SUB v9e9 v9ef
0x9f4: REVERT v9ef v9f2
----------------------------------

Begin block 0x9f5
prev = {'0x9b0'}, next = {}
----------------------------------
Block 0x9f5
0x9f6: v9f6(0x1) = CONST 
0x9f8: v9f8(0x1) = CONST 
0x9fa: v9fa(0xa0) = CONST 
0x9fc: v9fc(0x10000000000000000000000000000000000000000) = SHL v9fa(0xa0) v9f8(0x1)
0x9fd: v9fd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v9fc(0x10000000000000000000000000000000000000000) v9f6(0x1)
0xa00: va00 = AND v96barg2 v9fd(0xffffffffffffffffffffffffffffffffffffffff)
0xa01: va01(0x0) = CONST 
0xa05: MSTORE va01(0x0) va00
0xa06: va06(0x2) = CONST 
0xa08: va08(0x20) = CONST 
0xa0c: MSTORE va08(0x20) va06(0x2)
0xa0d: va0d(0x40) = CONST 
0xa11: va11 = SHA3 va01(0x0) va0d(0x40)
0xa14: va14 = AND v96barg1 v9fd(0xffffffffffffffffffffffffffffffffffffffff)
0xa17: MSTORE va01(0x0) va14
0xa1a: MSTORE va08(0x20) va11
0xa1e: va1e = SHA3 va01(0x0) va0d(0x40)
0xa21: SSTORE va1e v96barg0
0xa23: va23 = MLOAD va0d(0x40)
0xa26: MSTORE va23 v96barg0
0xa28: va28 = MLOAD va0d(0x40)
0xa29: va29(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0xa4d: va4d = SUB va23 va28
0xa50: va50 = ADD va08(0x20) va4d
0xa52: LOG3 va28 va50 va29(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) va00 va14
0xa56: RETURNPRIVATE v96barg3
----------------------------------

Begin block 0xa57
prev = {}, next = {'0xa66', '0xa9c'}
----------------------------------
function 0xa57(va57arg0, va57arg1, va57arg2, va57arg3)
Block 0xa57
0xa58: va58(0x1) = CONST 
0xa5a: va5a(0x1) = CONST 
0xa5c: va5c(0xa0) = CONST 
0xa5e: va5e(0x10000000000000000000000000000000000000000) = SHL va5c(0xa0) va5a(0x1)
0xa5f: va5f(0xffffffffffffffffffffffffffffffffffffffff) = SUB va5e(0x10000000000000000000000000000000000000000) va58(0x1)
0xa61: va61 = AND va57arg2 va5f(0xffffffffffffffffffffffffffffffffffffffff)
0xa62: va62(0xa9c) = CONST 
0xa65: JUMPI va62(0xa9c) va61
----------------------------------

Begin block 0xa66
prev = {'0xa57'}, next = {}
----------------------------------
Block 0xa66
0xa66: va66(0x40) = CONST 
0xa68: va68 = MLOAD va66(0x40)
0xa69: va69(0x461bcd) = CONST 
0xa6d: va6d(0xe5) = CONST 
0xa6f: va6f(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL va6d(0xe5) va69(0x461bcd)
0xa71: MSTORE va68 va6f(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xa72: va72(0x4) = CONST 
0xa74: va74 = ADD va72(0x4) va68
0xa77: va77(0x20) = CONST 
0xa79: va79 = ADD va77(0x20) va74
0xa7c: va7c = SUB va79 va74
0xa7e: MSTORE va74 va7c
0xa7f: va7f(0x25) = CONST 
0xa82: MSTORE va79 va7f(0x25)
0xa83: va83(0x20) = CONST 
0xa85: va85 = ADD va83(0x20) va79
0xa87: va87(0x1262) = CONST 
0xa8a: va8a(0x25) = CONST 
0xa8d: CODECOPY va85 va87(0x1262) va8a(0x25)
0xa8e: va8e(0x40) = CONST 
0xa90: va90 = ADD va8e(0x40) va85
0xa94: va94(0x40) = CONST 
0xa96: va96 = MLOAD va94(0x40)
0xa99: va99 = SUB va90 va96
0xa9b: REVERT va96 va99
----------------------------------

Begin block 0xa9c
prev = {'0xa57'}, next = {'0xae1', '0xaab'}
----------------------------------
Block 0xa9c
0xa9d: va9d(0x1) = CONST 
0xa9f: va9f(0x1) = CONST 
0xaa1: vaa1(0xa0) = CONST 
0xaa3: vaa3(0x10000000000000000000000000000000000000000) = SHL vaa1(0xa0) va9f(0x1)
0xaa4: vaa4(0xffffffffffffffffffffffffffffffffffffffff) = SUB vaa3(0x10000000000000000000000000000000000000000) va9d(0x1)
0xaa6: vaa6 = AND va57arg1 vaa4(0xffffffffffffffffffffffffffffffffffffffff)
0xaa7: vaa7(0xae1) = CONST 
0xaaa: JUMPI vaa7(0xae1) vaa6
----------------------------------

Begin block 0xaab
prev = {'0xa9c'}, next = {}
----------------------------------
Block 0xaab
0xaab: vaab(0x40) = CONST 
0xaad: vaad = MLOAD vaab(0x40)
0xaae: vaae(0x461bcd) = CONST 
0xab2: vab2(0xe5) = CONST 
0xab4: vab4(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vab2(0xe5) vaae(0x461bcd)
0xab6: MSTORE vaad vab4(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xab7: vab7(0x4) = CONST 
0xab9: vab9 = ADD vab7(0x4) vaad
0xabc: vabc(0x20) = CONST 
0xabe: vabe = ADD vabc(0x20) vab9
0xac1: vac1 = SUB vabe vab9
0xac3: MSTORE vab9 vac1
0xac4: vac4(0x23) = CONST 
0xac7: MSTORE vabe vac4(0x23)
0xac8: vac8(0x20) = CONST 
0xaca: vaca = ADD vac8(0x20) vabe
0xacc: vacc(0x1163) = CONST 
0xacf: vacf(0x23) = CONST 
0xad2: CODECOPY vaca vacc(0x1163) vacf(0x23)
0xad3: vad3(0x40) = CONST 
0xad5: vad5 = ADD vad3(0x40) vaca
0xad9: vad9(0x40) = CONST 
0xadb: vadb = MLOAD vad9(0x40)
0xade: vade = SUB vad5 vadb
0xae0: REVERT vadb vade
----------------------------------

Begin block 0xae1
prev = {'0xa9c'}, next = {'0xb0a'}
----------------------------------
Block 0xae1
0xae2: vae2(0x1) = CONST 
0xae4: vae4(0x1) = CONST 
0xae6: vae6(0xa0) = CONST 
0xae8: vae8(0x10000000000000000000000000000000000000000) = SHL vae6(0xa0) vae4(0x1)
0xae9: vae9(0xffffffffffffffffffffffffffffffffffffffff) = SUB vae8(0x10000000000000000000000000000000000000000) vae2(0x1)
0xaeb: vaeb = AND va57arg2 vae9(0xffffffffffffffffffffffffffffffffffffffff)
0xaec: vaec(0x0) = CONST 
0xaf0: MSTORE vaec(0x0) vaeb
0xaf1: vaf1(0x1) = CONST 
0xaf3: vaf3(0x20) = CONST 
0xaf5: MSTORE vaf3(0x20) vaf1(0x1)
0xaf6: vaf6(0x40) = CONST 
0xaf9: vaf9 = SHA3 vaec(0x0) vaf6(0x40)
0xafa: vafa = SLOAD vaf9
0xafb: vafb(0xb0a) = CONST 
0xb00: vb00(0xffffffff) = CONST 
0xb05: vb05(0xb9b) = CONST 
0xb08: vb08(0xb9b) = AND vb05(0xb9b) vb00(0xffffffff)
0xb09: vb09_0 = CALLPRIVATE vb08(0xb9b) va57arg0 vafa vafb(0xb0a)
----------------------------------

Begin block 0xb0a
prev = {'0xae1'}, next = {'0xb3f'}
----------------------------------
Block 0xb0a
0xb0b: vb0b(0x1) = CONST 
0xb0d: vb0d(0x1) = CONST 
0xb0f: vb0f(0xa0) = CONST 
0xb11: vb11(0x10000000000000000000000000000000000000000) = SHL vb0f(0xa0) vb0d(0x1)
0xb12: vb12(0xffffffffffffffffffffffffffffffffffffffff) = SUB vb11(0x10000000000000000000000000000000000000000) vb0b(0x1)
0xb15: vb15 = AND va57arg2 vb12(0xffffffffffffffffffffffffffffffffffffffff)
0xb16: vb16(0x0) = CONST 
0xb1a: MSTORE vb16(0x0) vb15
0xb1b: vb1b(0x1) = CONST 
0xb1d: vb1d(0x20) = CONST 
0xb1f: MSTORE vb1d(0x20) vb1b(0x1)
0xb20: vb20(0x40) = CONST 
0xb24: vb24 = SHA3 vb16(0x0) vb20(0x40)
0xb28: SSTORE vb24 vb09_0
0xb2b: vb2b = AND va57arg1 vb12(0xffffffffffffffffffffffffffffffffffffffff)
0xb2d: MSTORE vb16(0x0) vb2b
0xb2e: vb2e = SHA3 vb16(0x0) vb20(0x40)
0xb2f: vb2f = SLOAD vb2e
0xb30: vb30(0xb3f) = CONST 
0xb35: vb35(0xffffffff) = CONST 
0xb3a: vb3a(0xbf8) = CONST 
0xb3d: vb3d(0xbf8) = AND vb3a(0xbf8) vb35(0xffffffff)
0xb3e: vb3e_0 = CALLPRIVATE vb3d(0xbf8) va57arg0 vb2f vb30(0xb3f)
----------------------------------

Begin block 0xb3f
prev = {'0xb0a'}, next = {}
----------------------------------
Block 0xb3f
0xb40: vb40(0x1) = CONST 
0xb42: vb42(0x1) = CONST 
0xb44: vb44(0xa0) = CONST 
0xb46: vb46(0x10000000000000000000000000000000000000000) = SHL vb44(0xa0) vb42(0x1)
0xb47: vb47(0xffffffffffffffffffffffffffffffffffffffff) = SUB vb46(0x10000000000000000000000000000000000000000) vb40(0x1)
0xb4a: vb4a = AND va57arg1 vb47(0xffffffffffffffffffffffffffffffffffffffff)
0xb4b: vb4b(0x0) = CONST 
0xb4f: MSTORE vb4b(0x0) vb4a
0xb50: vb50(0x1) = CONST 
0xb52: vb52(0x20) = CONST 
0xb56: MSTORE vb52(0x20) vb50(0x1)
0xb57: vb57(0x40) = CONST 
0xb5c: vb5c = SHA3 vb4b(0x0) vb57(0x40)
0xb60: SSTORE vb5c vb3e_0
0xb62: vb62 = MLOAD vb57(0x40)
0xb65: MSTORE vb62 va57arg0
0xb67: vb67 = MLOAD vb57(0x40)
0xb6c: vb6c = AND va57arg2 vb47(0xffffffffffffffffffffffffffffffffffffffff)
0xb6e: vb6e(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0xb93: vb93 = SUB vb62 vb67
0xb94: vb94 = ADD vb93 vb52(0x20)
0xb96: LOG3 vb67 vb94 vb6e(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) vb6c vb4a
0xb9a: RETURNPRIVATE va57arg3
----------------------------------

Begin block 0xb9b
prev = {}, next = {'0xbf2', '0xba6'}
----------------------------------
function 0xb9b(vb9barg0, vb9barg1, vb9barg2)
Block 0xb9b
0xb9c: vb9c(0x0) = CONST 
0xba0: vba0 = GT vb9barg0 vb9barg1
0xba1: vba1 = ISZERO vba0
0xba2: vba2(0xbf2) = CONST 
0xba5: JUMPI vba2(0xbf2) vba1
----------------------------------

Begin block 0xba6
prev = {'0xb9b'}, next = {}
----------------------------------
Block 0xba6
0xba6: vba6(0x40) = CONST 
0xba9: vba9 = MLOAD vba6(0x40)
0xbaa: vbaa(0x461bcd) = CONST 
0xbae: vbae(0xe5) = CONST 
0xbb0: vbb0(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vbae(0xe5) vbaa(0x461bcd)
0xbb2: MSTORE vba9 vbb0(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xbb3: vbb3(0x20) = CONST 
0xbb5: vbb5(0x4) = CONST 
0xbb8: vbb8 = ADD vba9 vbb5(0x4)
0xbb9: MSTORE vbb8 vbb3(0x20)
0xbba: vbba(0x1e) = CONST 
0xbbc: vbbc(0x24) = CONST 
0xbbf: vbbf = ADD vba9 vbbc(0x24)
0xbc0: MSTORE vbbf vbba(0x1e)
0xbc1: vbc1(0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000) = CONST 
0xbe2: vbe2(0x44) = CONST 
0xbe5: vbe5 = ADD vba9 vbe2(0x44)
0xbe6: MSTORE vbe5 vbc1(0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000)
0xbe8: vbe8 = MLOAD vba6(0x40)
0xbec: vbec = SUB vba9 vbe8
0xbed: vbed(0x64) = CONST 
0xbef: vbef = ADD vbed(0x64) vbec
0xbf1: REVERT vbe8 vbef
----------------------------------

Begin block 0xbf2
prev = {'0xb9b'}, next = {}
----------------------------------
Block 0xbf2
0xbf5: vbf5 = SUB vb9barg1 vb9barg0
0xbf7: RETURNPRIVATE vb9barg2 vbf5
----------------------------------

Begin block 0xbf8
prev = {}, next = {'0xc06', '0xc52'}
----------------------------------
function 0xbf8(vbf8arg0, vbf8arg1, vbf8arg2)
Block 0xbf8
0xbf9: vbf9(0x0) = CONST 
0xbfd: vbfd = ADD vbf8arg0 vbf8arg1
0xc00: vc00 = LT vbfd vbf8arg1
0xc01: vc01 = ISZERO vc00
0xc02: vc02(0xc52) = CONST 
0xc05: JUMPI vc02(0xc52) vc01
----------------------------------

Begin block 0xc06
prev = {'0xbf8'}, next = {}
----------------------------------
Block 0xc06
0xc06: vc06(0x40) = CONST 
0xc09: vc09 = MLOAD vc06(0x40)
0xc0a: vc0a(0x461bcd) = CONST 
0xc0e: vc0e(0xe5) = CONST 
0xc10: vc10(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vc0e(0xe5) vc0a(0x461bcd)
0xc12: MSTORE vc09 vc10(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xc13: vc13(0x20) = CONST 
0xc15: vc15(0x4) = CONST 
0xc18: vc18 = ADD vc09 vc15(0x4)
0xc19: MSTORE vc18 vc13(0x20)
0xc1a: vc1a(0x1b) = CONST 
0xc1c: vc1c(0x24) = CONST 
0xc1f: vc1f = ADD vc09 vc1c(0x24)
0xc20: MSTORE vc1f vc1a(0x1b)
0xc21: vc21(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000) = CONST 
0xc42: vc42(0x44) = CONST 
0xc45: vc45 = ADD vc09 vc42(0x44)
0xc46: MSTORE vc45 vc21(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000)
0xc48: vc48 = MLOAD vc06(0x40)
0xc4c: vc4c = SUB vc09 vc48
0xc4d: vc4d(0x64) = CONST 
0xc4f: vc4f = ADD vc4d(0x64) vc4c
0xc51: REVERT vc48 vc4f
----------------------------------

Begin block 0xc52
prev = {'0xbf8'}, next = {}
----------------------------------
Block 0xc52
0xc58: RETURNPRIVATE vbf8arg2 vbfd
----------------------------------

Begin block 0xc59
prev = {}, next = {'0xc68'}
----------------------------------
function 0xc59(vc59arg0, vc59arg1, vc59arg2)
Block 0xc59
0xc5a: vc5a(0x5) = CONST 
0xc5c: vc5c = SLOAD vc5a(0x5)
0xc5d: vc5d(0xc74) = CONST 
0xc61: vc61(0xc68) = CONST 
0xc64: vc64(0x56c) = CONST 
0xc67: vc67_0 = CALLPRIVATE vc64(0x56c) vc61(0xc68)
----------------------------------

Begin block 0xc68
prev = {'0xc59'}, next = {'0xc74'}
----------------------------------
Block 0xc68
0xc6a: vc6a(0xffffffff) = CONST 
0xc6f: vc6f(0xbf8) = CONST 
0xc72: vc72(0xbf8) = AND vc6f(0xbf8) vc6a(0xffffffff)
0xc73: vc73_0 = CALLPRIVATE vc72(0xbf8) vc59arg0 vc67_0 vc5d(0xc74)
----------------------------------

Begin block 0xc74
prev = {'0xc68'}, next = {'0xcc7', '0xc7b'}
----------------------------------
Block 0xc74
0xc75: vc75 = GT vc73_0 vc5c
0xc76: vc76 = ISZERO vc75
0xc77: vc77(0xcc7) = CONST 
0xc7a: JUMPI vc77(0xcc7) vc76
----------------------------------

Begin block 0xc7b
prev = {'0xc74'}, next = {}
----------------------------------
Block 0xc7b
0xc7b: vc7b(0x40) = CONST 
0xc7e: vc7e = MLOAD vc7b(0x40)
0xc7f: vc7f(0x461bcd) = CONST 
0xc83: vc83(0xe5) = CONST 
0xc85: vc85(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vc83(0xe5) vc7f(0x461bcd)
0xc87: MSTORE vc7e vc85(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xc88: vc88(0x20) = CONST 
0xc8a: vc8a(0x4) = CONST 
0xc8d: vc8d = ADD vc7e vc8a(0x4)
0xc8e: MSTORE vc8d vc88(0x20)
0xc8f: vc8f(0x19) = CONST 
0xc91: vc91(0x24) = CONST 
0xc94: vc94 = ADD vc7e vc91(0x24)
0xc95: MSTORE vc94 vc8f(0x19)
0xc96: vc96(0x45524332304361707065643a2063617020657863656564656400000000000000) = CONST 
0xcb7: vcb7(0x44) = CONST 
0xcba: vcba = ADD vc7e vcb7(0x44)
0xcbb: MSTORE vcba vc96(0x45524332304361707065643a2063617020657863656564656400000000000000)
0xcbd: vcbd = MLOAD vc7b(0x40)
0xcc1: vcc1 = SUB vc7e vcbd
0xcc2: vcc2(0x64) = CONST 
0xcc4: vcc4 = ADD vcc2(0x64) vcc1
0xcc6: REVERT vcbd vcc4
----------------------------------

Begin block 0xcc7
prev = {'0xc74'}, next = {'0xf88'}
----------------------------------
Block 0xcc7
0xcc8: vcc8(0x79f) = CONST 
0xccd: vccd(0xf88) = CONST 
0xcd0: JUMP vccd(0xf88)
----------------------------------

Begin block 0xcd1
prev = {}, next = {'0xd16', '0xce0'}
----------------------------------
function 0xcd1(vcd1arg0, vcd1arg1, vcd1arg2)
Block 0xcd1
0xcd2: vcd2(0x1) = CONST 
0xcd4: vcd4(0x1) = CONST 
0xcd6: vcd6(0xa0) = CONST 
0xcd8: vcd8(0x10000000000000000000000000000000000000000) = SHL vcd6(0xa0) vcd4(0x1)
0xcd9: vcd9(0xffffffffffffffffffffffffffffffffffffffff) = SUB vcd8(0x10000000000000000000000000000000000000000) vcd2(0x1)
0xcdb: vcdb = AND vcd1arg1 vcd9(0xffffffffffffffffffffffffffffffffffffffff)
0xcdc: vcdc(0xd16) = CONST 
0xcdf: JUMPI vcdc(0xd16) vcdb
----------------------------------

Begin block 0xce0
prev = {'0xcd1'}, next = {}
----------------------------------
Block 0xce0
0xce0: vce0(0x40) = CONST 
0xce2: vce2 = MLOAD vce0(0x40)
0xce3: vce3(0x461bcd) = CONST 
0xce7: vce7(0xe5) = CONST 
0xce9: vce9(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vce7(0xe5) vce3(0x461bcd)
0xceb: MSTORE vce2 vce9(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xcec: vcec(0x4) = CONST 
0xcee: vcee = ADD vcec(0x4) vce2
0xcf1: vcf1(0x20) = CONST 
0xcf3: vcf3 = ADD vcf1(0x20) vcee
0xcf6: vcf6 = SUB vcf3 vcee
0xcf8: MSTORE vcee vcf6
0xcf9: vcf9(0x21) = CONST 
0xcfc: MSTORE vcf3 vcf9(0x21)
0xcfd: vcfd(0x20) = CONST 
0xcff: vcff = ADD vcfd(0x20) vcf3
0xd01: vd01(0x1241) = CONST 
0xd04: vd04(0x21) = CONST 
0xd07: CODECOPY vcff vd01(0x1241) vd04(0x21)
0xd08: vd08(0x40) = CONST 
0xd0a: vd0a = ADD vd08(0x40) vcff
0xd0e: vd0e(0x40) = CONST 
0xd10: vd10 = MLOAD vd0e(0x40)
0xd13: vd13 = SUB vd0a vd10
0xd15: REVERT vd10 vd13
----------------------------------

Begin block 0xd16
prev = {'0xcd1'}, next = {'0xd29'}
----------------------------------
Block 0xd16
0xd17: vd17(0x3) = CONST 
0xd19: vd19 = SLOAD vd17(0x3)
0xd1a: vd1a(0xd29) = CONST 
0xd1f: vd1f(0xffffffff) = CONST 
0xd24: vd24(0xb9b) = CONST 
0xd27: vd27(0xb9b) = AND vd24(0xb9b) vd1f(0xffffffff)
0xd28: vd28_0 = CALLPRIVATE vd27(0xb9b) vcd1arg0 vd19 vd1a(0xd29)
----------------------------------

Begin block 0xd29
prev = {'0xd16'}, next = {'0xd55'}
----------------------------------
Block 0xd29
0xd2a: vd2a(0x3) = CONST 
0xd2c: SSTORE vd2a(0x3) vd28_0
0xd2d: vd2d(0x1) = CONST 
0xd2f: vd2f(0x1) = CONST 
0xd31: vd31(0xa0) = CONST 
0xd33: vd33(0x10000000000000000000000000000000000000000) = SHL vd31(0xa0) vd2f(0x1)
0xd34: vd34(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd33(0x10000000000000000000000000000000000000000) vd2d(0x1)
0xd36: vd36 = AND vcd1arg1 vd34(0xffffffffffffffffffffffffffffffffffffffff)
0xd37: vd37(0x0) = CONST 
0xd3b: MSTORE vd37(0x0) vd36
0xd3c: vd3c(0x1) = CONST 
0xd3e: vd3e(0x20) = CONST 
0xd40: MSTORE vd3e(0x20) vd3c(0x1)
0xd41: vd41(0x40) = CONST 
0xd44: vd44 = SHA3 vd37(0x0) vd41(0x40)
0xd45: vd45 = SLOAD vd44
0xd46: vd46(0xd55) = CONST 
0xd4b: vd4b(0xffffffff) = CONST 
0xd50: vd50(0xb9b) = CONST 
0xd53: vd53(0xb9b) = AND vd50(0xb9b) vd4b(0xffffffff)
0xd54: vd54_0 = CALLPRIVATE vd53(0xb9b) vcd1arg0 vd45 vd46(0xd55)
----------------------------------

Begin block 0xd55
prev = {'0xd29'}, next = {}
----------------------------------
Block 0xd55
0xd56: vd56(0x1) = CONST 
0xd58: vd58(0x1) = CONST 
0xd5a: vd5a(0xa0) = CONST 
0xd5c: vd5c(0x10000000000000000000000000000000000000000) = SHL vd5a(0xa0) vd58(0x1)
0xd5d: vd5d(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd5c(0x10000000000000000000000000000000000000000) vd56(0x1)
0xd5f: vd5f = AND vcd1arg1 vd5d(0xffffffffffffffffffffffffffffffffffffffff)
0xd60: vd60(0x0) = CONST 
0xd64: MSTORE vd60(0x0) vd5f
0xd65: vd65(0x1) = CONST 
0xd67: vd67(0x20) = CONST 
0xd6b: MSTORE vd67(0x20) vd65(0x1)
0xd6c: vd6c(0x40) = CONST 
0xd70: vd70 = SHA3 vd60(0x0) vd6c(0x40)
0xd74: SSTORE vd70 vd54_0
0xd76: vd76 = MLOAD vd6c(0x40)
0xd79: MSTORE vd76 vcd1arg0
0xd7b: vd7b = MLOAD vd6c(0x40)
0xd7e: vd7e(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0xda3: vda3 = SUB vd76 vd7b
0xda6: vda6 = ADD vd67(0x20) vda3
0xda8: LOG3 vd7b vda6 vd7e(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) vd5f vd60(0x0)
0xdab: RETURNPRIVATE vcd1arg2
----------------------------------

Begin block 0xdac
prev = {}, next = {'0xdb6'}
----------------------------------
function 0xdac(vdacarg0, vdacarg1, vdacarg2)
Block 0xdac
0xdad: vdad(0xdb6) = CONST 
0xdb2: vdb2(0xcd1) = CONST 
0xdb5: CALLPRIVATE vdb2(0xcd1) vdacarg0 vdacarg1 vdad(0xdb6)
----------------------------------

Begin block 0xdb6
prev = {'0xdac'}, next = {'0x5ba0xdac'}
----------------------------------
Block 0xdb6
0xdb7: vdb7(0x1) = CONST 
0xdb9: vdb9(0x1) = CONST 
0xdbb: vdbb(0xa0) = CONST 
0xdbd: vdbd(0x10000000000000000000000000000000000000000) = SHL vdbb(0xa0) vdb9(0x1)
0xdbe: vdbe(0xffffffffffffffffffffffffffffffffffffffff) = SUB vdbd(0x10000000000000000000000000000000000000000) vdb7(0x1)
0xdc0: vdc0 = AND vdacarg1 vdbe(0xffffffffffffffffffffffffffffffffffffffff)
0xdc1: vdc1(0x0) = CONST 
0xdc5: MSTORE vdc1(0x0) vdc0
0xdc6: vdc6(0x2) = CONST 
0xdc8: vdc8(0x20) = CONST 
0xdcc: MSTORE vdc8(0x20) vdc6(0x2)
0xdcd: vdcd(0x40) = CONST 
0xdd1: vdd1 = SHA3 vdc1(0x0) vdcd(0x40)
0xdd2: vdd2 = CALLER 
0xdd5: MSTORE vdc1(0x0) vdd2
0xdd7: MSTORE vdc8(0x20) vdd1
0xdda: vdda = SHA3 vdc1(0x0) vdcd(0x40)
0xddb: vddb = SLOAD vdda
0xddc: vddc(0x79f) = CONST 
0xde2: vde2(0x5ba) = CONST 
0xde7: vde7(0xffffffff) = CONST 
0xdec: vdec(0xb9b) = CONST 
0xdef: vdef(0xb9b) = AND vdec(0xb9b) vde7(0xffffffff)
0xdf0: vdf0_0 = CALLPRIVATE vdef(0xb9b) vdacarg0 vddb vde2(0x5ba)
----------------------------------

Begin block 0xdf1
prev = {'0x868'}, next = {'0x107a'}
----------------------------------
Block 0xdf1
0xdf2: vdf2(0xe02) = CONST 
0xdf5: vdf5(0x4) = CONST 
0xdf8: vdf8(0xffffffff) = CONST 
0xdfd: vdfd(0x107a) = CONST 
0xe00: ve00(0x107a) = AND vdfd(0x107a) vdf8(0xffffffff)
0xe01: JUMP ve00(0x107a)
----------------------------------

Begin block 0xe02
prev = {'0x10d6'}, next = {'0x66e0x3c0'}
----------------------------------
Block 0xe02
0xe03: ve03(0x40) = CONST 
0xe05: ve05 = MLOAD ve03(0x40)
0xe06: ve06(0x1) = CONST 
0xe08: ve08(0x1) = CONST 
0xe0a: ve0a(0xa0) = CONST 
0xe0c: ve0c(0x10000000000000000000000000000000000000000) = SHL ve0a(0xa0) ve08(0x1)
0xe0d: ve0d(0xffffffffffffffffffffffffffffffffffffffff) = SUB ve0c(0x10000000000000000000000000000000000000000) ve06(0x1)
0xe0f: ve0f = AND v3e1 ve0d(0xffffffffffffffffffffffffffffffffffffffff)
0xe11: ve11(0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6) = CONST 
0xe33: ve33(0x0) = CONST 
0xe36: LOG2 ve05 ve33(0x0) ve11(0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6) ve0f
0xe38: JUMP v869(0x66e)
----------------------------------

Begin block 0xe39
prev = {'0x871'}, next = {'0x10fb'}
----------------------------------
Block 0xe39
0xe3a: ve3a(0xe4a) = CONST 
0xe3d: ve3d(0x4) = CONST 
0xe40: ve40(0xffffffff) = CONST 
0xe45: ve45(0x10fb) = CONST 
0xe48: ve48(0x10fb) = AND ve45(0x10fb) ve40(0xffffffff)
0xe49: JUMP ve48(0x10fb)
----------------------------------

Begin block 0xe4a
prev = {'0x1140'}, next = {'0x87a'}
----------------------------------
Block 0xe4a
0xe4b: ve4b(0x40) = CONST 
0xe4d: ve4d = MLOAD ve4b(0x40)
0xe4e: ve4e(0x1) = CONST 
0xe50: ve50(0x1) = CONST 
0xe52: ve52(0xa0) = CONST 
0xe54: ve54(0x10000000000000000000000000000000000000000) = SHL ve52(0xa0) ve50(0x1)
0xe55: ve55(0xffffffffffffffffffffffffffffffffffffffff) = SUB ve54(0x10000000000000000000000000000000000000000) ve4e(0x1)
0xe57: ve57 = AND v875 ve55(0xffffffffffffffffffffffffffffffffffffffff)
0xe59: ve59(0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692) = CONST 
0xe7b: ve7b(0x0) = CONST 
0xe7e: LOG2 ve4d ve7b(0x0) ve59(0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692) ve57
0xe80: JUMP v872(0x87a)
----------------------------------

Begin block 0xe81
prev = {}, next = {'0xec8', '0xe92'}
----------------------------------
function 0xe81(ve81arg0, ve81arg1, ve81arg2)
Block 0xe81
0xe82: ve82(0x0) = CONST 
0xe84: ve84(0x1) = CONST 
0xe86: ve86(0x1) = CONST 
0xe88: ve88(0xa0) = CONST 
0xe8a: ve8a(0x10000000000000000000000000000000000000000) = SHL ve88(0xa0) ve86(0x1)
0xe8b: ve8b(0xffffffffffffffffffffffffffffffffffffffff) = SUB ve8a(0x10000000000000000000000000000000000000000) ve84(0x1)
0xe8d: ve8d = AND ve81arg0 ve8b(0xffffffffffffffffffffffffffffffffffffffff)
0xe8e: ve8e(0xec8) = CONST 
0xe91: JUMPI ve8e(0xec8) ve8d
----------------------------------

Begin block 0xe92
prev = {'0xe81'}, next = {}
----------------------------------
Block 0xe92
0xe92: ve92(0x40) = CONST 
0xe94: ve94 = MLOAD ve92(0x40)
0xe95: ve95(0x461bcd) = CONST 
0xe99: ve99(0xe5) = CONST 
0xe9b: ve9b(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL ve99(0xe5) ve95(0x461bcd)
0xe9d: MSTORE ve94 ve9b(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xe9e: ve9e(0x4) = CONST 
0xea0: vea0 = ADD ve9e(0x4) ve94
0xea3: vea3(0x20) = CONST 
0xea5: vea5 = ADD vea3(0x20) vea0
0xea8: vea8 = SUB vea5 vea0
0xeaa: MSTORE vea0 vea8
0xeab: veab(0x22) = CONST 
0xeae: MSTORE vea5 veab(0x22)
0xeaf: veaf(0x20) = CONST 
0xeb1: veb1 = ADD veaf(0x20) vea5
0xeb3: veb3(0x121f) = CONST 
0xeb6: veb6(0x22) = CONST 
0xeb9: CODECOPY veb1 veb3(0x121f) veb6(0x22)
0xeba: veba(0x40) = CONST 
0xebc: vebc = ADD veba(0x40) veb1
0xec0: vec0(0x40) = CONST 
0xec2: vec2 = MLOAD vec0(0x40)
0xec5: vec5 = SUB vebc vec2
0xec7: REVERT vec2 vec5
----------------------------------

Begin block 0xec8
prev = {'0xe81'}, next = {}
----------------------------------
Block 0xec8
0xeca: veca(0x1) = CONST 
0xecc: vecc(0x1) = CONST 
0xece: vece(0xa0) = CONST 
0xed0: ved0(0x10000000000000000000000000000000000000000) = SHL vece(0xa0) vecc(0x1)
0xed1: ved1(0xffffffffffffffffffffffffffffffffffffffff) = SUB ved0(0x10000000000000000000000000000000000000000) veca(0x1)
0xed2: ved2 = AND ved1(0xffffffffffffffffffffffffffffffffffffffff) ve81arg0
0xed3: ved3(0x0) = CONST 
0xed7: MSTORE ved3(0x0) ved2
0xed8: ved8(0x20) = CONST 
0xedd: MSTORE ved8(0x20) ve81arg1
0xede: vede(0x40) = CONST 
0xee1: vee1 = SHA3 ved3(0x0) vede(0x40)
0xee2: vee2 = SLOAD vee1
0xee3: vee3(0xff) = CONST 
0xee5: vee5 = AND vee3(0xff) vee2
0xee7: RETURNPRIVATE ve81arg2 vee5
----------------------------------

Begin block 0xee8
prev = {'0x962'}, next = {'0xef7', '0xf2d'}
----------------------------------
Block 0xee8
0xee9: vee9(0x1) = CONST 
0xeeb: veeb(0x1) = CONST 
0xeed: veed(0xa0) = CONST 
0xeef: veef(0x10000000000000000000000000000000000000000) = SHL veed(0xa0) veeb(0x1)
0xef0: vef0(0xffffffffffffffffffffffffffffffffffffffff) = SUB veef(0x10000000000000000000000000000000000000000) vee9(0x1)
0xef2: vef2 = AND v4bb vef0(0xffffffffffffffffffffffffffffffffffffffff)
0xef3: vef3(0xf2d) = CONST 
0xef6: JUMPI vef3(0xf2d) vef2
----------------------------------

Begin block 0xef7
prev = {'0xee8'}, next = {}
----------------------------------
Block 0xef7
0xef7: vef7(0x40) = CONST 
0xef9: vef9 = MLOAD vef7(0x40)
0xefa: vefa(0x461bcd) = CONST 
0xefe: vefe(0xe5) = CONST 
0xf00: vf00(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vefe(0xe5) vefa(0x461bcd)
0xf02: MSTORE vef9 vf00(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xf03: vf03(0x4) = CONST 
0xf05: vf05 = ADD vf03(0x4) vef9
0xf08: vf08(0x20) = CONST 
0xf0a: vf0a = ADD vf08(0x20) vf05
0xf0d: vf0d = SUB vf0a vf05
0xf0f: MSTORE vf05 vf0d
0xf10: vf10(0x26) = CONST 
0xf13: MSTORE vf0a vf10(0x26)
0xf14: vf14(0x20) = CONST 
0xf16: vf16 = ADD vf14(0x20) vf0a
0xf18: vf18(0x1186) = CONST 
0xf1b: vf1b(0x26) = CONST 
0xf1e: CODECOPY vf16 vf18(0x1186) vf1b(0x26)
0xf1f: vf1f(0x40) = CONST 
0xf21: vf21 = ADD vf1f(0x40) vf16
0xf25: vf25(0x40) = CONST 
0xf27: vf27 = MLOAD vf25(0x40)
0xf2a: vf2a = SUB vf21 vf27
0xf2c: REVERT vf27 vf2a
----------------------------------

Begin block 0xf2d
prev = {'0xee8'}, next = {'0x66e0x49a'}
----------------------------------
Block 0xf2d
0xf2e: vf2e(0x0) = CONST 
0xf31: vf31 = SLOAD vf2e(0x0)
0xf32: vf32(0x40) = CONST 
0xf34: vf34 = MLOAD vf32(0x40)
0xf35: vf35(0x1) = CONST 
0xf37: vf37(0x1) = CONST 
0xf39: vf39(0xa0) = CONST 
0xf3b: vf3b(0x10000000000000000000000000000000000000000) = SHL vf39(0xa0) vf37(0x1)
0xf3c: vf3c(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf3b(0x10000000000000000000000000000000000000000) vf35(0x1)
0xf3f: vf3f = AND v4bb vf3c(0xffffffffffffffffffffffffffffffffffffffff)
0xf42: vf42 = AND vf31 vf3c(0xffffffffffffffffffffffffffffffffffffffff)
0xf44: vf44(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0xf66: LOG3 vf34 vf2e(0x0) vf44(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) vf42 vf3f
0xf67: vf67(0x0) = CONST 
0xf6a: vf6a = SLOAD vf67(0x0)
0xf6b: vf6b(0x1) = CONST 
0xf6d: vf6d(0x1) = CONST 
0xf6f: vf6f(0xa0) = CONST 
0xf71: vf71(0x10000000000000000000000000000000000000000) = SHL vf6f(0xa0) vf6d(0x1)
0xf72: vf72(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf71(0x10000000000000000000000000000000000000000) vf6b(0x1)
0xf73: vf73(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vf72(0xffffffffffffffffffffffffffffffffffffffff)
0xf74: vf74 = AND vf73(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) vf6a
0xf75: vf75(0x1) = CONST 
0xf77: vf77(0x1) = CONST 
0xf79: vf79(0xa0) = CONST 
0xf7b: vf7b(0x10000000000000000000000000000000000000000) = SHL vf79(0xa0) vf77(0x1)
0xf7c: vf7c(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf7b(0x10000000000000000000000000000000000000000) vf75(0x1)
0xf80: vf80 = AND vf7c(0xffffffffffffffffffffffffffffffffffffffff) v4bb
0xf84: vf84 = OR vf80 vf74
0xf86: SSTORE vf67(0x0) vf84
0xf87: JUMP v963(0x66e)
----------------------------------

Begin block 0xf88
prev = {'0xcc7'}, next = {'0xfe3', '0xf97'}
----------------------------------
Block 0xf88
0xf89: vf89(0x1) = CONST 
0xf8b: vf8b(0x1) = CONST 
0xf8d: vf8d(0xa0) = CONST 
0xf8f: vf8f(0x10000000000000000000000000000000000000000) = SHL vf8d(0xa0) vf8b(0x1)
0xf90: vf90(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf8f(0x10000000000000000000000000000000000000000) vf89(0x1)
0xf92: vf92 = AND vc59arg1 vf90(0xffffffffffffffffffffffffffffffffffffffff)
0xf93: vf93(0xfe3) = CONST 
0xf96: JUMPI vf93(0xfe3) vf92
----------------------------------

Begin block 0xf97
prev = {'0xf88'}, next = {}
----------------------------------
Block 0xf97
0xf97: vf97(0x40) = CONST 
0xf9a: vf9a = MLOAD vf97(0x40)
0xf9b: vf9b(0x461bcd) = CONST 
0xf9f: vf9f(0xe5) = CONST 
0xfa1: vfa1(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vf9f(0xe5) vf9b(0x461bcd)
0xfa3: MSTORE vf9a vfa1(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xfa4: vfa4(0x20) = CONST 
0xfa6: vfa6(0x4) = CONST 
0xfa9: vfa9 = ADD vf9a vfa6(0x4)
0xfaa: MSTORE vfa9 vfa4(0x20)
0xfab: vfab(0x1f) = CONST 
0xfad: vfad(0x24) = CONST 
0xfb0: vfb0 = ADD vf9a vfad(0x24)
0xfb1: MSTORE vfb0 vfab(0x1f)
0xfb2: vfb2(0x45524332303a206d696e7420746f20746865207a65726f206164647265737300) = CONST 
0xfd3: vfd3(0x44) = CONST 
0xfd6: vfd6 = ADD vf9a vfd3(0x44)
0xfd7: MSTORE vfd6 vfb2(0x45524332303a206d696e7420746f20746865207a65726f206164647265737300)
0xfd9: vfd9 = MLOAD vf97(0x40)
0xfdd: vfdd = SUB vf9a vfd9
0xfde: vfde(0x64) = CONST 
0xfe0: vfe0 = ADD vfde(0x64) vfdd
0xfe2: REVERT vfd9 vfe0
----------------------------------

Begin block 0xfe3
prev = {'0xf88'}, next = {'0xff6'}
----------------------------------
Block 0xfe3
0xfe4: vfe4(0x3) = CONST 
0xfe6: vfe6 = SLOAD vfe4(0x3)
0xfe7: vfe7(0xff6) = CONST 
0xfec: vfec(0xffffffff) = CONST 
0xff1: vff1(0xbf8) = CONST 
0xff4: vff4(0xbf8) = AND vff1(0xbf8) vfec(0xffffffff)
0xff5: vff5_0 = CALLPRIVATE vff4(0xbf8) vc59arg0 vfe6 vfe7(0xff6)
----------------------------------

Begin block 0xff6
prev = {'0xfe3'}, next = {'0x1022'}
----------------------------------
Block 0xff6
0xff7: vff7(0x3) = CONST 
0xff9: SSTORE vff7(0x3) vff5_0
0xffa: vffa(0x1) = CONST 
0xffc: vffc(0x1) = CONST 
0xffe: vffe(0xa0) = CONST 
0x1000: v1000(0x10000000000000000000000000000000000000000) = SHL vffe(0xa0) vffc(0x1)
0x1001: v1001(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1000(0x10000000000000000000000000000000000000000) vffa(0x1)
0x1003: v1003 = AND vc59arg1 v1001(0xffffffffffffffffffffffffffffffffffffffff)
0x1004: v1004(0x0) = CONST 
0x1008: MSTORE v1004(0x0) v1003
0x1009: v1009(0x1) = CONST 
0x100b: v100b(0x20) = CONST 
0x100d: MSTORE v100b(0x20) v1009(0x1)
0x100e: v100e(0x40) = CONST 
0x1011: v1011 = SHA3 v1004(0x0) v100e(0x40)
0x1012: v1012 = SLOAD v1011
0x1013: v1013(0x1022) = CONST 
0x1018: v1018(0xffffffff) = CONST 
0x101d: v101d(0xbf8) = CONST 
0x1020: v1020(0xbf8) = AND v101d(0xbf8) v1018(0xffffffff)
0x1021: v1021_0 = CALLPRIVATE v1020(0xbf8) vc59arg0 v1012 v1013(0x1022)
----------------------------------

Begin block 0x1022
prev = {'0xff6'}, next = {'0x79f0xc59'}
----------------------------------
Block 0x1022
0x1023: v1023(0x1) = CONST 
0x1025: v1025(0x1) = CONST 
0x1027: v1027(0xa0) = CONST 
0x1029: v1029(0x10000000000000000000000000000000000000000) = SHL v1027(0xa0) v1025(0x1)
0x102a: v102a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1029(0x10000000000000000000000000000000000000000) v1023(0x1)
0x102c: v102c = AND vc59arg1 v102a(0xffffffffffffffffffffffffffffffffffffffff)
0x102d: v102d(0x0) = CONST 
0x1031: MSTORE v102d(0x0) v102c
0x1032: v1032(0x1) = CONST 
0x1034: v1034(0x20) = CONST 
0x1038: MSTORE v1034(0x20) v1032(0x1)
0x1039: v1039(0x40) = CONST 
0x103d: v103d = SHA3 v102d(0x0) v1039(0x40)
0x1041: SSTORE v103d v1021_0
0x1043: v1043 = MLOAD v1039(0x40)
0x1046: MSTORE v1043 vc59arg0
0x1048: v1048 = MLOAD v1039(0x40)
0x104d: v104d(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x1071: v1071 = SUB v1043 v1048
0x1074: v1074 = ADD v1034(0x20) v1071
0x1076: LOG3 v1048 v1074 v104d(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v102d(0x0) v102c
0x1079: JUMP vcc8(0x79f)
----------------------------------

Begin block 0x107a
prev = {'0xdf1'}, next = {'0x1084'}
----------------------------------
Block 0x107a
0x107b: v107b(0x1084) = CONST 
0x1080: v1080(0xe81) = CONST 
0x1083: v1083_0 = CALLPRIVATE v1080(0xe81) v3e1 vdf5(0x4) v107b(0x1084)
----------------------------------

Begin block 0x1084
prev = {'0x107a'}, next = {'0x108a', '0x10d6'}
----------------------------------
Block 0x1084
0x1085: v1085 = ISZERO v1083_0
0x1086: v1086(0x10d6) = CONST 
0x1089: JUMPI v1086(0x10d6) v1085
----------------------------------

Begin block 0x108a
prev = {'0x1084'}, next = {}
----------------------------------
Block 0x108a
0x108a: v108a(0x40) = CONST 
0x108d: v108d = MLOAD v108a(0x40)
0x108e: v108e(0x461bcd) = CONST 
0x1092: v1092(0xe5) = CONST 
0x1094: v1094(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1092(0xe5) v108e(0x461bcd)
0x1096: MSTORE v108d v1094(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1097: v1097(0x20) = CONST 
0x1099: v1099(0x4) = CONST 
0x109c: v109c = ADD v108d v1099(0x4)
0x109d: MSTORE v109c v1097(0x20)
0x109e: v109e(0x1f) = CONST 
0x10a0: v10a0(0x24) = CONST 
0x10a3: v10a3 = ADD v108d v10a0(0x24)
0x10a4: MSTORE v10a3 v109e(0x1f)
0x10a5: v10a5(0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500) = CONST 
0x10c6: v10c6(0x44) = CONST 
0x10c9: v10c9 = ADD v108d v10c6(0x44)
0x10ca: MSTORE v10c9 v10a5(0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500)
0x10cc: v10cc = MLOAD v108a(0x40)
0x10d0: v10d0 = SUB v108d v10cc
0x10d1: v10d1(0x64) = CONST 
0x10d3: v10d3 = ADD v10d1(0x64) v10d0
0x10d5: REVERT v10cc v10d3
----------------------------------

Begin block 0x10d6
prev = {'0x1084'}, next = {'0xe02'}
----------------------------------
Block 0x10d6
0x10d7: v10d7(0x1) = CONST 
0x10d9: v10d9(0x1) = CONST 
0x10db: v10db(0xa0) = CONST 
0x10dd: v10dd(0x10000000000000000000000000000000000000000) = SHL v10db(0xa0) v10d9(0x1)
0x10de: v10de(0xffffffffffffffffffffffffffffffffffffffff) = SUB v10dd(0x10000000000000000000000000000000000000000) v10d7(0x1)
0x10df: v10df = AND v10de(0xffffffffffffffffffffffffffffffffffffffff) v3e1
0x10e0: v10e0(0x0) = CONST 
0x10e4: MSTORE v10e0(0x0) v10df
0x10e5: v10e5(0x20) = CONST 
0x10ea: MSTORE v10e5(0x20) vdf5(0x4)
0x10eb: v10eb(0x40) = CONST 
0x10ee: v10ee = SHA3 v10e0(0x0) v10eb(0x40)
0x10f0: v10f0 = SLOAD v10ee
0x10f1: v10f1(0xff) = CONST 
0x10f3: v10f3(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v10f1(0xff)
0x10f4: v10f4 = AND v10f3(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) v10f0
0x10f5: v10f5(0x1) = CONST 
0x10f7: v10f7 = OR v10f5(0x1) v10f4
0x10f9: SSTORE v10ee v10f7
0x10fa: JUMP vdf2(0xe02)
----------------------------------

Begin block 0x10fb
prev = {'0xe39'}, next = {'0x1105'}
----------------------------------
Block 0x10fb
0x10fc: v10fc(0x1105) = CONST 
0x1101: v1101(0xe81) = CONST 
0x1104: v1104_0 = CALLPRIVATE v1101(0xe81) v875 ve3d(0x4) v10fc(0x1105)
----------------------------------

Begin block 0x1105
prev = {'0x10fb'}, next = {'0x110a', '0x1140'}
----------------------------------
Block 0x1105
0x1106: v1106(0x1140) = CONST 
0x1109: JUMPI v1106(0x1140) v1104_0
----------------------------------

Begin block 0x110a
prev = {'0x1105'}, next = {}
----------------------------------
Block 0x110a
0x110a: v110a(0x40) = CONST 
0x110c: v110c = MLOAD v110a(0x40)
0x110d: v110d(0x461bcd) = CONST 
0x1111: v1111(0xe5) = CONST 
0x1113: v1113(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v1111(0xe5) v110d(0x461bcd)
0x1115: MSTORE v110c v1113(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1116: v1116(0x4) = CONST 
0x1118: v1118 = ADD v1116(0x4) v110c
0x111b: v111b(0x20) = CONST 
0x111d: v111d = ADD v111b(0x20) v1118
0x1120: v1120 = SUB v111d v1118
0x1122: MSTORE v1118 v1120
0x1123: v1123(0x21) = CONST 
0x1126: MSTORE v111d v1123(0x21)
0x1127: v1127(0x20) = CONST 
0x1129: v1129 = ADD v1127(0x20) v111d
0x112b: v112b(0x11fe) = CONST 
0x112e: v112e(0x21) = CONST 
0x1131: CODECOPY v1129 v112b(0x11fe) v112e(0x21)
0x1132: v1132(0x40) = CONST 
0x1134: v1134 = ADD v1132(0x40) v1129
0x1138: v1138(0x40) = CONST 
0x113a: v113a = MLOAD v1138(0x40)
0x113d: v113d = SUB v1134 v113a
0x113f: REVERT v113a v113d
----------------------------------

Begin block 0x1140
prev = {'0x1105'}, next = {'0xe4a'}
----------------------------------
Block 0x1140
0x1141: v1141(0x1) = CONST 
0x1143: v1143(0x1) = CONST 
0x1145: v1145(0xa0) = CONST 
0x1147: v1147(0x10000000000000000000000000000000000000000) = SHL v1145(0xa0) v1143(0x1)
0x1148: v1148(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1147(0x10000000000000000000000000000000000000000) v1141(0x1)
0x1149: v1149 = AND v1148(0xffffffffffffffffffffffffffffffffffffffff) v875
0x114a: v114a(0x0) = CONST 
0x114e: MSTORE v114a(0x0) v1149
0x114f: v114f(0x20) = CONST 
0x1154: MSTORE v114f(0x20) ve3d(0x4)
0x1155: v1155(0x40) = CONST 
0x1158: v1158 = SHA3 v114a(0x0) v1155(0x40)
0x115a: v115a = SLOAD v1158
0x115b: v115b(0xff) = CONST 
0x115d: v115d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v115b(0xff)
0x115e: v115e = AND v115d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) v115a
0x1160: SSTORE v1158 v115e
0x1161: JUMP ve3a(0xe4a)
----------------------------------

Begin block 0x130f
prev = {'0x10', '0x142'}, next = {'0x14d0x0'}
----------------------------------
Block 0x130f
0x1310: v1310(0x14d) = CONST 
0x1311: CALLPRIVATE v1310(0x14d)
----------------------------------

Begin block 0x1312
prev = {'0x115'}, next = {}
----------------------------------
Block 0x1312
0x1313: v1313(0x152) = CONST 
0x1314: CALLPRIVATE v1313(0x152)
----------------------------------

Begin block 0x1315
prev = {'0x121'}, next = {}
----------------------------------
Block 0x1315
0x1316: v1316(0x1cf) = CONST 
0x1317: CALLPRIVATE v1316(0x1cf)
----------------------------------

Begin block 0x1318
prev = {'0x12c'}, next = {}
----------------------------------
Block 0x1318
0x1319: v1319(0x20f) = CONST 
0x131a: CALLPRIVATE v1319(0x20f)
----------------------------------

Begin block 0x131b
prev = {'0x137'}, next = {}
----------------------------------
Block 0x131b
0x131c: v131c(0x229) = CONST 
0x131d: CALLPRIVATE v131c(0x229)
----------------------------------

Begin block 0x131e
prev = {'0x142'}, next = {}
----------------------------------
Block 0x131e
0x131f: v131f(0x25f) = CONST 
0x1320: CALLPRIVATE v131f(0x25f)
----------------------------------

Begin block 0x1321
prev = {'0xcf'}, next = {}
----------------------------------
Block 0x1321
0x1322: v1322(0x27d) = CONST 
0x1323: CALLPRIVATE v1322(0x27d)
----------------------------------

Begin block 0x1324
prev = {'0xda'}, next = {}
----------------------------------
Block 0x1324
0x1325: v1325(0x285) = CONST 
0x1326: CALLPRIVATE v1325(0x285)
----------------------------------

Begin block 0x1327
prev = {'0xe5'}, next = {}
----------------------------------
Block 0x1327
0x1328: v1328(0x2b1) = CONST 
0x1329: CALLPRIVATE v1328(0x2b1)
----------------------------------

Begin block 0x132a
prev = {'0xf0'}, next = {}
----------------------------------
Block 0x132a
0x132b: v132b(0x2dd) = CONST 
0x132c: CALLPRIVATE v132b(0x2dd)
----------------------------------

Begin block 0x132d
prev = {'0xfb'}, next = {}
----------------------------------
Block 0x132d
0x132e: v132e(0x2fc) = CONST 
0x132f: CALLPRIVATE v132e(0x2fc)
----------------------------------

Begin block 0x1330
prev = {'0x106'}, next = {}
----------------------------------
Block 0x1330
0x1331: v1331(0x332) = CONST 
0x1332: CALLPRIVATE v1331(0x332)
----------------------------------

Begin block 0x1333
prev = {'0x7c'}, next = {}
----------------------------------
Block 0x1333
0x1334: v1334(0x358) = CONST 
0x1335: CALLPRIVATE v1334(0x358)
----------------------------------

Begin block 0x1336
prev = {'0x88'}, next = {}
----------------------------------
Block 0x1336
0x1337: v1337(0x360) = CONST 
0x1338: CALLPRIVATE v1337(0x360)
----------------------------------

Begin block 0x1339
prev = {'0x93'}, next = {}
----------------------------------
Block 0x1339
0x133a: v133a(0x38c) = CONST 
0x133b: CALLPRIVATE v133a(0x38c)
----------------------------------

Begin block 0x133c
prev = {'0x9e'}, next = {}
----------------------------------
Block 0x133c
0x133d: v133d(0x3b0) = CONST 
0x133e: CALLPRIVATE v133d(0x3b0)
----------------------------------

Begin block 0x133f
prev = {'0xa9'}, next = {}
----------------------------------
Block 0x133f
0x1340: v1340(0x3b8) = CONST 
0x1341: CALLPRIVATE v1340(0x3b8)
----------------------------------

Begin block 0x1342
prev = {'0xb4'}, next = {}
----------------------------------
Block 0x1342
0x1343: v1343(0x3c0) = CONST 
0x1344: CALLPRIVATE v1343(0x3c0)
----------------------------------

Begin block 0x1345
prev = {'0x36'}, next = {}
----------------------------------
Block 0x1345
0x1346: v1346(0x3e6) = CONST 
0x1347: CALLPRIVATE v1346(0x3e6)
----------------------------------

Begin block 0x1348
prev = {'0x41'}, next = {}
----------------------------------
Block 0x1348
0x1349: v1349(0x3ee) = CONST 
0x134a: CALLPRIVATE v1349(0x3ee)
----------------------------------

Begin block 0x134b
prev = {'0x4c'}, next = {}
----------------------------------
Block 0x134b
0x134c: v134c(0x41a) = CONST 
0x134d: CALLPRIVATE v134c(0x41a)
----------------------------------

Begin block 0x134e
prev = {'0x57'}, next = {}
----------------------------------
Block 0x134e
0x134f: v134f(0x446) = CONST 
0x1350: CALLPRIVATE v134f(0x446)
----------------------------------

Begin block 0x1351
prev = {'0x62'}, next = {}
----------------------------------
Block 0x1351
0x1352: v1352(0x46c) = CONST 
0x1353: CALLPRIVATE v1352(0x46c)
----------------------------------

Begin block 0x1354
prev = {'0x6d'}, next = {}
----------------------------------
Block 0x1354
0x1355: v1355(0x49a) = CONST 
0x1356: CALLPRIVATE v1355(0x49a)
----------------------------------
