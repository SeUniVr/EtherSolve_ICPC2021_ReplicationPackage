
Begin block 0x0
prev = {}, next = {'0xc', '0x10'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x1a', '0xb8a'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0xb74: vb74(0xb8a) = CONST 
0xb75: JUMPI vb74(0xb8a) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x76', '0x2b'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x42966c68) = CONST 
0x26: v26 = GT v21(0x42966c68) v1f
0x27: v27(0x76) = CONST 
0x2a: JUMPI v27(0x76) v26
----------------------------------

Begin block 0x2b
prev = {'0x1a'}, next = {'0x5b', '0x36'}
----------------------------------
Block 0x2b
0x2c: v2c(0x95d89b41) = CONST 
0x31: v31 = GT v2c(0x95d89b41) v1f
0x32: v32(0x5b) = CONST 
0x35: JUMPI v32(0x5b) v31
----------------------------------

Begin block 0x36
prev = {'0x2b'}, next = {'0xba2', '0x41'}
----------------------------------
Block 0x36
0x37: v37(0x95d89b41) = CONST 
0x3c: v3c = EQ v37(0x95d89b41) v1f
0xb76: vb76(0xba2) = CONST 
0xb77: JUMPI vb76(0xba2) v3c
----------------------------------

Begin block 0x41
prev = {'0x36'}, next = {'0x4c', '0xba5'}
----------------------------------
Block 0x41
0x42: v42(0xa9059cbb) = CONST 
0x47: v47 = EQ v42(0xa9059cbb) v1f
0xb78: vb78(0xba5) = CONST 
0xb79: JUMPI vb78(0xba5) v47
----------------------------------

Begin block 0x4c
prev = {'0x41'}, next = {'0x57', '0xba8'}
----------------------------------
Block 0x4c
0x4d: v4d(0xdd62ed3e) = CONST 
0x52: v52 = EQ v4d(0xdd62ed3e) v1f
0xb7a: vb7a(0xba8) = CONST 
0xb7b: JUMPI vb7a(0xba8) v52
----------------------------------

Begin block 0x57
prev = {'0x4c'}, next = {'0xbe0x0'}
----------------------------------
Block 0x57
0x57: v57(0xbe) = CONST 
0x5a: JUMP v57(0xbe)
----------------------------------

Begin block 0x5b
prev = {'0x2b'}, next = {'0x67', '0xb9c'}
----------------------------------
Block 0x5b
0x5d: v5d(0x42966c68) = CONST 
0x62: v62 = EQ v5d(0x42966c68) v1f
0xb7c: vb7c(0xb9c) = CONST 
0xb7d: JUMPI vb7c(0xb9c) v62
----------------------------------

Begin block 0x67
prev = {'0x5b'}, next = {'0xb9f', '0x72'}
----------------------------------
Block 0x67
0x68: v68(0x70a08231) = CONST 
0x6d: v6d = EQ v68(0x70a08231) v1f
0xb7e: vb7e(0xb9f) = CONST 
0xb7f: JUMPI vb7e(0xb9f) v6d
----------------------------------

Begin block 0x72
prev = {'0x67'}, next = {'0xbe0x0'}
----------------------------------
Block 0x72
0x72: v72(0xbe) = CONST 
0x75: JUMP v72(0xbe)
----------------------------------

Begin block 0x76
prev = {'0x1a'}, next = {'0x82', '0xa7'}
----------------------------------
Block 0x76
0x78: v78(0x18160ddd) = CONST 
0x7d: v7d = GT v78(0x18160ddd) v1f
0x7e: v7e(0xa7) = CONST 
0x81: JUMPI v7e(0xa7) v7d
----------------------------------

Begin block 0x82
prev = {'0x76'}, next = {'0x8d', '0xb93'}
----------------------------------
Block 0x82
0x83: v83(0x18160ddd) = CONST 
0x88: v88 = EQ v83(0x18160ddd) v1f
0xb80: vb80(0xb93) = CONST 
0xb81: JUMPI vb80(0xb93) v88
----------------------------------

Begin block 0x8d
prev = {'0x82'}, next = {'0xb96', '0x98'}
----------------------------------
Block 0x8d
0x8e: v8e(0x23b872dd) = CONST 
0x93: v93 = EQ v8e(0x23b872dd) v1f
0xb82: vb82(0xb96) = CONST 
0xb83: JUMPI vb82(0xb96) v93
----------------------------------

Begin block 0x98
prev = {'0x8d'}, next = {'0xb99', '0xa3'}
----------------------------------
Block 0x98
0x99: v99(0x313ce567) = CONST 
0x9e: v9e = EQ v99(0x313ce567) v1f
0xb84: vb84(0xb99) = CONST 
0xb85: JUMPI vb84(0xb99) v9e
----------------------------------

Begin block 0xa3
prev = {'0x98'}, next = {'0xbe0x0'}
----------------------------------
Block 0xa3
0xa3: va3(0xbe) = CONST 
0xa6: JUMP va3(0xbe)
----------------------------------

Begin block 0xa7
prev = {'0x76'}, next = {'0xb8d', '0xb3'}
----------------------------------
Block 0xa7
0xa9: va9(0x6fdde03) = CONST 
0xae: vae = EQ va9(0x6fdde03) v1f
0xb86: vb86(0xb8d) = CONST 
0xb87: JUMPI vb86(0xb8d) vae
----------------------------------

Begin block 0xb3
prev = {'0xa7'}, next = {'0xb90', '0xb8a'}
----------------------------------
Block 0xb3
0xb4: vb4(0x95ea7b3) = CONST 
0xb9: vb9 = EQ vb4(0x95ea7b3) v1f
0xb88: vb88(0xb90) = CONST 
0xb89: JUMPI vb88(0xb90) vb9
----------------------------------

Begin block 0xbe
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0xbe
0xbf: vbf(0x0) = CONST 
0xc2: REVERT vbf(0x0) vbf(0x0)
----------------------------------

Begin block 0xbe0x0
prev = {'0x57', '0xa3', '0xb8a', '0x72'}, next = {}
----------------------------------
Block 0xbe0x0
0xbf0x0: v0bf(0x0) = CONST 
0xc20x0: REVERT v0bf(0x0) v0bf(0x0)
----------------------------------

Begin block 0xc3
prev = {}, next = {'0xcb0xc3'}
----------------------------------
function name()()
Block 0xc3
0xc4: vc4(0xcb) = CONST 
0xc7: vc7(0x2d6) = CONST 
0xca: vca_0 = CALLPRIVATE vc7(0x2d6) vc4(0xcb)
----------------------------------

Begin block 0xcb0xc3
prev = {'0xc3'}, next = {'0xed0xc3'}
----------------------------------
Block 0xcb0xc3
0xcc0xc3: vc3cc(0x40) = CONST 
0xcf0xc3: vc3cf = MLOAD vc3cc(0x40)
0xd00xc3: vc3d0(0x20) = CONST 
0xd40xc3: MSTORE vc3cf vc3d0(0x20)
0xd60xc3: vc3d6 = MLOAD vca_0
0xd90xc3: vc3d9 = ADD vc3cf vc3d0(0x20)
0xda0xc3: MSTORE vc3d9 vc3d6
0xdc0xc3: vc3dc = MLOAD vca_0
0xe30xc3: vc3e3 = ADD vc3cf vc3cc(0x40)
0xe60xc3: vc3e6 = ADD vca_0 vc3d0(0x20)
0xeb0xc3: vc3eb(0x0) = CONST 
----------------------------------

Begin block 0xcb0x25a
prev = {'0x25a'}, next = {'0xed0x25a'}
----------------------------------
Block 0xcb0x25a
0xcc0x25a: v25acc(0x40) = CONST 
0xcf0x25a: v25acf = MLOAD v25acc(0x40)
0xd00x25a: v25ad0(0x20) = CONST 
0xd40x25a: MSTORE v25acf v25ad0(0x20)
0xd60x25a: v25ad6 = MLOAD v261_0
0xd90x25a: v25ad9 = ADD v25acf v25ad0(0x20)
0xda0x25a: MSTORE v25ad9 v25ad6
0xdc0x25a: v25adc = MLOAD v261_0
0xe30x25a: v25ae3 = ADD v25acf v25acc(0x40)
0xe60x25a: v25ae6 = ADD v261_0 v25ad0(0x20)
0xeb0x25a: v25aeb(0x0) = CONST 
----------------------------------

Begin block 0xed0xc3
prev = {'0xf60xc3', '0xcb0xc3'}, next = {'0xf60xc3', '0x1050xc3'}
----------------------------------
Block 0xed0xc3
0xed0xc3_0x0: vedc3_0 = PHI vc3eb(0x0) vc3100
0xf00xc3: vc3f0 = LT vedc3_0 vc3dc
0xf10xc3: vc3f1 = ISZERO vc3f0
0xf20xc3: vc3f2(0x105) = CONST 
0xf50xc3: JUMPI vc3f2(0x105) vc3f1
----------------------------------

Begin block 0xed0x25a
prev = {'0xf60x25a', '0xcb0x25a'}, next = {'0xf60x25a', '0x1050x25a'}
----------------------------------
Block 0xed0x25a
0xed0x25a_0x0: ved25a_0 = PHI v25aeb(0x0) v25a100
0xf00x25a: v25af0 = LT ved25a_0 v25adc
0xf10x25a: v25af1 = ISZERO v25af0
0xf20x25a: v25af2(0x105) = CONST 
0xf50x25a: JUMPI v25af2(0x105) v25af1
----------------------------------

Begin block 0xf60xc3
prev = {'0xed0xc3'}, next = {'0xed0xc3'}
----------------------------------
Block 0xf60xc3
0xf60xc3_0x0: vf6c3_0 = PHI vc3eb(0x0) vc3100
0xf80xc3: vc3f8 = ADD vf6c3_0 vc3e6
0xf90xc3: vc3f9 = MLOAD vc3f8
0xfc0xc3: vc3fc = ADD vf6c3_0 vc3e3
0xfd0xc3: MSTORE vc3fc vc3f9
0xfe0xc3: vc3fe(0x20) = CONST 
0x1000xc3: vc3100 = ADD vc3fe(0x20) vf6c3_0
0x1010xc3: vc3101(0xed) = CONST 
0x1040xc3: JUMP vc3101(0xed)
----------------------------------

Begin block 0xf60x25a
prev = {'0xed0x25a'}, next = {'0xed0x25a'}
----------------------------------
Block 0xf60x25a
0xf60x25a_0x0: vf625a_0 = PHI v25aeb(0x0) v25a100
0xf80x25a: v25af8 = ADD vf625a_0 v25ae6
0xf90x25a: v25af9 = MLOAD v25af8
0xfc0x25a: v25afc = ADD vf625a_0 v25ae3
0xfd0x25a: MSTORE v25afc v25af9
0xfe0x25a: v25afe(0x20) = CONST 
0x1000x25a: v25a100 = ADD v25afe(0x20) vf625a_0
0x1010x25a: v25a101(0xed) = CONST 
0x1040x25a: JUMP v25a101(0xed)
----------------------------------

Begin block 0x1050xc3
prev = {'0xed0xc3'}, next = {'0x1320xc3', '0x1190xc3'}
----------------------------------
Block 0x1050xc3
0x10e0xc3: vc310e = ADD vc3dc vc3e3
0x1100xc3: vc3110(0x1f) = CONST 
0x1120xc3: vc3112 = AND vc3110(0x1f) vc3dc
0x1140xc3: vc3114 = ISZERO vc3112
0x1150xc3: vc3115(0x132) = CONST 
0x1180xc3: JUMPI vc3115(0x132) vc3114
----------------------------------

Begin block 0x1050x25a
prev = {'0xed0x25a'}, next = {'0x1190x25a', '0x1320x25a'}
----------------------------------
Block 0x1050x25a
0x10e0x25a: v25a10e = ADD v25adc v25ae3
0x1100x25a: v25a110(0x1f) = CONST 
0x1120x25a: v25a112 = AND v25a110(0x1f) v25adc
0x1140x25a: v25a114 = ISZERO v25a112
0x1150x25a: v25a115(0x132) = CONST 
0x1180x25a: JUMPI v25a115(0x132) v25a114
----------------------------------

Begin block 0x1190xc3
prev = {'0x1050xc3'}, next = {'0x1320xc3'}
----------------------------------
Block 0x1190xc3
0x11b0xc3: vc311b = SUB vc310e vc3112
0x11d0xc3: vc311d = MLOAD vc311b
0x11e0xc3: vc311e(0x1) = CONST 
0x1210xc3: vc3121(0x20) = CONST 
0x1230xc3: vc3123 = SUB vc3121(0x20) vc3112
0x1240xc3: vc3124(0x100) = CONST 
0x1270xc3: vc3127 = EXP vc3124(0x100) vc3123
0x1280xc3: vc3128 = SUB vc3127 vc311e(0x1)
0x1290xc3: vc3129 = NOT vc3128
0x12a0xc3: vc312a = AND vc3129 vc311d
0x12c0xc3: MSTORE vc311b vc312a
0x12d0xc3: vc312d(0x20) = CONST 
0x12f0xc3: vc312f = ADD vc312d(0x20) vc311b
----------------------------------

Begin block 0x1190x25a
prev = {'0x1050x25a'}, next = {'0x1320x25a'}
----------------------------------
Block 0x1190x25a
0x11b0x25a: v25a11b = SUB v25a10e v25a112
0x11d0x25a: v25a11d = MLOAD v25a11b
0x11e0x25a: v25a11e(0x1) = CONST 
0x1210x25a: v25a121(0x20) = CONST 
0x1230x25a: v25a123 = SUB v25a121(0x20) v25a112
0x1240x25a: v25a124(0x100) = CONST 
0x1270x25a: v25a127 = EXP v25a124(0x100) v25a123
0x1280x25a: v25a128 = SUB v25a127 v25a11e(0x1)
0x1290x25a: v25a129 = NOT v25a128
0x12a0x25a: v25a12a = AND v25a129 v25a11d
0x12c0x25a: MSTORE v25a11b v25a12a
0x12d0x25a: v25a12d(0x20) = CONST 
0x12f0x25a: v25a12f = ADD v25a12d(0x20) v25a11b
----------------------------------

Begin block 0x1320xc3
prev = {'0x1190xc3', '0x1050xc3'}, next = {}
----------------------------------
Block 0x1320xc3
0x1320xc3_0x1: v132c3_1 = PHI vc310e vc312f
0x1380xc3: vc3138(0x40) = CONST 
0x13a0xc3: vc313a = MLOAD vc3138(0x40)
0x13d0xc3: vc313d = SUB v132c3_1 vc313a
0x13f0xc3: RETURN vc313a vc313d
----------------------------------

Begin block 0x1320x25a
prev = {'0x1190x25a', '0x1050x25a'}, next = {}
----------------------------------
Block 0x1320x25a
0x1320x25a_0x1: v13225a_1 = PHI v25a10e v25a12f
0x1380x25a: v25a138(0x40) = CONST 
0x13a0x25a: v25a13a = MLOAD v25a138(0x40)
0x13d0x25a: v25a13d = SUB v13225a_1 v25a13a
0x13f0x25a: RETURN v25a13a v25a13d
----------------------------------

Begin block 0x140
prev = {}, next = {'0x152', '0x156'}
----------------------------------
function approve(address,uint256)()
Block 0x140
0x141: v141(0x179) = CONST 
0x144: v144(0x4) = CONST 
0x147: v147 = CALLDATASIZE 
0x148: v148 = SUB v147 v144(0x4)
0x149: v149(0x40) = CONST 
0x14c: v14c = LT v148 v149(0x40)
0x14d: v14d = ISZERO v14c
0x14e: v14e(0x156) = CONST 
0x151: JUMPI v14e(0x156) v14d
----------------------------------

Begin block 0x152
prev = {'0x140'}, next = {}
----------------------------------
Block 0x152
0x152: v152(0x0) = CONST 
0x155: REVERT v152(0x0) v152(0x0)
----------------------------------

Begin block 0x156
prev = {'0x140'}, next = {'0x36c'}
----------------------------------
Block 0x156
0x158: v158(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x16e: v16e = CALLDATALOAD v144(0x4)
0x16f: v16f = AND v16e v158(0xffffffffffffffffffffffffffffffffffffffff)
0x171: v171(0x20) = CONST 
0x173: v173 = ADD v171(0x20) v144(0x4)
0x174: v174 = CALLDATALOAD v173
0x175: v175(0x36c) = CONST 
0x178: JUMP v175(0x36c)
----------------------------------

Begin block 0x1790x140
prev = {'0x4090x140'}, next = {}
----------------------------------
Block 0x1790x140
0x17a0x140: v14017a(0x40) = CONST 
0x17d0x140: v14017d = MLOAD v14017a(0x40)
0x17f0x140: v14017f = ISZERO v14040b(0x1)
0x1800x140: v140180 = ISZERO v14017f
0x1820x140: MSTORE v14017d v140180
0x1830x140: v140183 = MLOAD v14017a(0x40)
0x1870x140: v140187 = SUB v14017d v140183
0x1880x140: v140188(0x20) = CONST 
0x18a0x140: v14018a = ADD v140188(0x20) v140187
0x18c0x140: RETURN v140183 v14018a
----------------------------------

Begin block 0x1790x1a7
prev = {'0x481'}, next = {}
----------------------------------
Block 0x1790x1a7
0x17a0x1a7: v1a717a(0x40) = CONST 
0x17d0x1a7: v1a717d = MLOAD v1a717a(0x40)
0x17f0x1a7: v1a717f = ISZERO v483(0x1)
0x1800x1a7: v1a7180 = ISZERO v1a717f
0x1820x1a7: MSTORE v1a717d v1a7180
0x1830x1a7: v1a7183 = MLOAD v1a717a(0x40)
0x1870x1a7: v1a7187 = SUB v1a717d v1a7183
0x1880x1a7: v1a7188(0x20) = CONST 
0x18a0x1a7: v1a718a = ADD v1a7188(0x20) v1a7187
0x18c0x1a7: RETURN v1a7183 v1a718a
----------------------------------

Begin block 0x1790x262
prev = {'0x4090x262'}, next = {}
----------------------------------
Block 0x1790x262
0x17a0x262: v26217a(0x40) = CONST 
0x17d0x262: v26217d = MLOAD v26217a(0x40)
0x17f0x262: v26217f = ISZERO v26240b(0x1)
0x1800x262: v262180 = ISZERO v26217f
0x1820x262: MSTORE v26217d v262180
0x1830x262: v262183 = MLOAD v26217a(0x40)
0x1870x262: v262187 = SUB v26217d v262183
0x1880x262: v262188(0x20) = CONST 
0x18a0x262: v26218a = ADD v262188(0x20) v262187
0x18c0x262: RETURN v262183 v26218a
----------------------------------

Begin block 0x18d
prev = {}, next = {'0x412'}
----------------------------------
function totalSupply()()
Block 0x18d
0x18e: v18e(0x195) = CONST 
0x191: v191(0x412) = CONST 
0x194: JUMP v191(0x412)
----------------------------------

Begin block 0x1950x18d
prev = {'0x412'}, next = {}
----------------------------------
Block 0x1950x18d
0x1960x18d: v18d196(0x40) = CONST 
0x1990x18d: v18d199 = MLOAD v18d196(0x40)
0x19c0x18d: MSTORE v18d199 v415
0x19d0x18d: v18d19d = MLOAD v18d196(0x40)
0x1a10x18d: v18d1a1 = SUB v18d199 v18d19d
0x1a20x18d: v18d1a2(0x20) = CONST 
0x1a40x18d: v18d1a4 = ADD v18d1a2(0x20) v18d1a1
0x1a60x18d: RETURN v18d19d v18d1a4
----------------------------------

Begin block 0x1950x227
prev = {'0x4a2'}, next = {}
----------------------------------
Block 0x1950x227
0x1960x227: v227196(0x40) = CONST 
0x1990x227: v227199 = MLOAD v227196(0x40)
0x19c0x227: MSTORE v227199 v4c7
0x19d0x227: v22719d = MLOAD v227196(0x40)
0x1a10x227: v2271a1 = SUB v227199 v22719d
0x1a20x227: v2271a2(0x20) = CONST 
0x1a40x227: v2271a4 = ADD v2271a2(0x20) v2271a1
0x1a60x227: RETURN v22719d v2271a4
----------------------------------

Begin block 0x1950x29b
prev = {'0x537'}, next = {}
----------------------------------
Block 0x1950x29b
0x1960x29b: v29b196(0x40) = CONST 
0x1990x29b: v29b199 = MLOAD v29b196(0x40)
0x19c0x29b: MSTORE v29b199 v56c
0x19d0x29b: v29b19d = MLOAD v29b196(0x40)
0x1a10x29b: v29b1a1 = SUB v29b199 v29b19d
0x1a20x29b: v29b1a2(0x20) = CONST 
0x1a40x29b: v29b1a4 = ADD v29b1a2(0x20) v29b1a1
0x1a60x29b: RETURN v29b19d v29b1a4
----------------------------------

Begin block 0x1a7
prev = {}, next = {'0x1b9', '0x1bd'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x1a7
0x1a8: v1a8(0x179) = CONST 
0x1ab: v1ab(0x4) = CONST 
0x1ae: v1ae = CALLDATASIZE 
0x1af: v1af = SUB v1ae v1ab(0x4)
0x1b0: v1b0(0x60) = CONST 
0x1b3: v1b3 = LT v1af v1b0(0x60)
0x1b4: v1b4 = ISZERO v1b3
0x1b5: v1b5(0x1bd) = CONST 
0x1b8: JUMPI v1b5(0x1bd) v1b4
----------------------------------

Begin block 0x1b9
prev = {'0x1a7'}, next = {}
----------------------------------
Block 0x1b9
0x1b9: v1b9(0x0) = CONST 
0x1bc: REVERT v1b9(0x0) v1b9(0x0)
----------------------------------

Begin block 0x1bd
prev = {'0x1a7'}, next = {'0x418'}
----------------------------------
Block 0x1bd
0x1bf: v1bf(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x1d5: v1d5 = CALLDATALOAD v1ab(0x4)
0x1d7: v1d7 = AND v1bf(0xffffffffffffffffffffffffffffffffffffffff) v1d5
0x1d9: v1d9(0x20) = CONST 
0x1dc: v1dc = ADD v1ab(0x4) v1d9(0x20)
0x1dd: v1dd = CALLDATALOAD v1dc
0x1e0: v1e0 = AND v1bf(0xffffffffffffffffffffffffffffffffffffffff) v1dd
0x1e2: v1e2(0x40) = CONST 
0x1e4: v1e4 = ADD v1e2(0x40) v1ab(0x4)
0x1e5: v1e5 = CALLDATALOAD v1e4
0x1e6: v1e6(0x418) = CONST 
0x1e9: JUMP v1e6(0x418)
----------------------------------

Begin block 0x1ea
prev = {}, next = {'0x48c'}
----------------------------------
function decimals()()
Block 0x1ea
0x1eb: v1eb(0x1f2) = CONST 
0x1ee: v1ee(0x48c) = CONST 
0x1f1: JUMP v1ee(0x48c)
----------------------------------

Begin block 0x1f2
prev = {'0x48c'}, next = {}
----------------------------------
Block 0x1f2
0x1f3: v1f3(0x40) = CONST 
0x1f6: v1f6 = MLOAD v1f3(0x40)
0x1f7: v1f7(0xff) = CONST 
0x1fb: v1fb = AND v492 v1f7(0xff)
0x1fd: MSTORE v1f6 v1fb
0x1fe: v1fe = MLOAD v1f3(0x40)
0x202: v202 = SUB v1f6 v1fe
0x203: v203(0x20) = CONST 
0x205: v205 = ADD v203(0x20) v202
0x207: RETURN v1fe v205
----------------------------------

Begin block 0x208
prev = {}, next = {'0x21a', '0x21e'}
----------------------------------
function burn(uint256)()
Block 0x208
0x209: v209(0x225) = CONST 
0x20c: v20c(0x4) = CONST 
0x20f: v20f = CALLDATASIZE 
0x210: v210 = SUB v20f v20c(0x4)
0x211: v211(0x20) = CONST 
0x214: v214 = LT v210 v211(0x20)
0x215: v215 = ISZERO v214
0x216: v216(0x21e) = CONST 
0x219: JUMPI v216(0x21e) v215
----------------------------------

Begin block 0x21a
prev = {'0x208'}, next = {}
----------------------------------
Block 0x21a
0x21a: v21a(0x0) = CONST 
0x21d: REVERT v21a(0x0) v21a(0x0)
----------------------------------

Begin block 0x21e
prev = {'0x208'}, next = {'0x495'}
----------------------------------
Block 0x21e
0x220: v220 = CALLDATALOAD v20c(0x4)
0x221: v221(0x495) = CONST 
0x224: JUMP v221(0x495)
----------------------------------

Begin block 0x225
prev = {'0x49f'}, next = {}
----------------------------------
Block 0x225
0x226: STOP 
----------------------------------

Begin block 0x227
prev = {}, next = {'0x239', '0x23d'}
----------------------------------
function balanceOf(address)()
Block 0x227
0x228: v228(0x195) = CONST 
0x22b: v22b(0x4) = CONST 
0x22e: v22e = CALLDATASIZE 
0x22f: v22f = SUB v22e v22b(0x4)
0x230: v230(0x20) = CONST 
0x233: v233 = LT v22f v230(0x20)
0x234: v234 = ISZERO v233
0x235: v235(0x23d) = CONST 
0x238: JUMPI v235(0x23d) v234
----------------------------------

Begin block 0x239
prev = {'0x227'}, next = {}
----------------------------------
Block 0x239
0x239: v239(0x0) = CONST 
0x23c: REVERT v239(0x0) v239(0x0)
----------------------------------

Begin block 0x23d
prev = {'0x227'}, next = {'0x4a2'}
----------------------------------
Block 0x23d
0x23f: v23f = CALLDATALOAD v22b(0x4)
0x240: v240(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x255: v255 = AND v240(0xffffffffffffffffffffffffffffffffffffffff) v23f
0x256: v256(0x4a2) = CONST 
0x259: JUMP v256(0x4a2)
----------------------------------

Begin block 0x25a
prev = {}, next = {'0xcb0x25a'}
----------------------------------
function symbol()()
Block 0x25a
0x25b: v25b(0xcb) = CONST 
0x25e: v25e(0x4ca) = CONST 
0x261: v261_0 = CALLPRIVATE v25e(0x4ca) v25b(0xcb)
----------------------------------

Begin block 0x262
prev = {}, next = {'0x278', '0x274'}
----------------------------------
function transfer(address,uint256)()
Block 0x262
0x263: v263(0x179) = CONST 
0x266: v266(0x4) = CONST 
0x269: v269 = CALLDATASIZE 
0x26a: v26a = SUB v269 v266(0x4)
0x26b: v26b(0x40) = CONST 
0x26e: v26e = LT v26a v26b(0x40)
0x26f: v26f = ISZERO v26e
0x270: v270(0x278) = CONST 
0x273: JUMPI v270(0x278) v26f
----------------------------------

Begin block 0x274
prev = {'0x262'}, next = {}
----------------------------------
Block 0x274
0x274: v274(0x0) = CONST 
0x277: REVERT v274(0x0) v274(0x0)
----------------------------------

Begin block 0x278
prev = {'0x262'}, next = {'0x52a'}
----------------------------------
Block 0x278
0x27a: v27a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x290: v290 = CALLDATALOAD v266(0x4)
0x291: v291 = AND v290 v27a(0xffffffffffffffffffffffffffffffffffffffff)
0x293: v293(0x20) = CONST 
0x295: v295 = ADD v293(0x20) v266(0x4)
0x296: v296 = CALLDATALOAD v295
0x297: v297(0x52a) = CONST 
0x29a: JUMP v297(0x52a)
----------------------------------

Begin block 0x29b
prev = {}, next = {'0x2b1', '0x2ad'}
----------------------------------
function allowance(address,address)()
Block 0x29b
0x29c: v29c(0x195) = CONST 
0x29f: v29f(0x4) = CONST 
0x2a2: v2a2 = CALLDATASIZE 
0x2a3: v2a3 = SUB v2a2 v29f(0x4)
0x2a4: v2a4(0x40) = CONST 
0x2a7: v2a7 = LT v2a3 v2a4(0x40)
0x2a8: v2a8 = ISZERO v2a7
0x2a9: v2a9(0x2b1) = CONST 
0x2ac: JUMPI v2a9(0x2b1) v2a8
----------------------------------

Begin block 0x2ad
prev = {'0x29b'}, next = {}
----------------------------------
Block 0x2ad
0x2ad: v2ad(0x0) = CONST 
0x2b0: REVERT v2ad(0x0) v2ad(0x0)
----------------------------------

Begin block 0x2b1
prev = {'0x29b'}, next = {'0x537'}
----------------------------------
Block 0x2b1
0x2b3: v2b3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x2c9: v2c9 = CALLDATALOAD v29f(0x4)
0x2cb: v2cb = AND v2b3(0xffffffffffffffffffffffffffffffffffffffff) v2c9
0x2cd: v2cd(0x20) = CONST 
0x2cf: v2cf = ADD v2cd(0x20) v29f(0x4)
0x2d0: v2d0 = CALLDATALOAD v2cf
0x2d1: v2d1 = AND v2d0 v2b3(0xffffffffffffffffffffffffffffffffffffffff)
0x2d2: v2d2(0x537) = CONST 
0x2d5: JUMP v2d2(0x537)
----------------------------------

Begin block 0x2d6
prev = {}, next = {'0x3620x2d6', '0x31c'}
----------------------------------
function 0x2d6(v2d6arg0)
Block 0x2d6
0x2d7: v2d7(0x0) = CONST 
0x2da: v2da = SLOAD v2d7(0x0)
0x2db: v2db(0x40) = CONST 
0x2de: v2de = MLOAD v2db(0x40)
0x2df: v2df(0x20) = CONST 
0x2e1: v2e1(0x1f) = CONST 
0x2e3: v2e3(0x2) = CONST 
0x2e5: v2e5(0x0) = CONST 
0x2e7: v2e7(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v2e5(0x0)
0x2e8: v2e8(0x100) = CONST 
0x2eb: v2eb(0x1) = CONST 
0x2ee: v2ee = AND v2da v2eb(0x1)
0x2ef: v2ef = ISZERO v2ee
0x2f0: v2f0 = MUL v2ef v2e8(0x100)
0x2f1: v2f1 = ADD v2f0 v2e7(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x2f4: v2f4 = AND v2da v2f1
0x2f8: v2f8 = DIV v2f4 v2e3(0x2)
0x2fb: v2fb = ADD v2f8 v2e1(0x1f)
0x2fe: v2fe = DIV v2fb v2df(0x20)
0x300: v300 = MUL v2df(0x20) v2fe
0x302: v302 = ADD v2de v300
0x304: v304 = ADD v2df(0x20) v302
0x307: MSTORE v2db(0x40) v304
0x30a: MSTORE v2de v2f8
0x30b: v30b(0x60) = CONST 
0x313: v313 = ADD v2de v2df(0x20)
0x317: v317 = ISZERO v2f8
0x318: v318(0x362) = CONST 
0x31b: JUMPI v318(0x362) v317
----------------------------------

Begin block 0x31c
prev = {'0x2d6'}, next = {'0x3370x2d6', '0x324'}
----------------------------------
Block 0x31c
0x31d: v31d(0x1f) = CONST 
0x31f: v31f = LT v31d(0x1f) v2f8
0x320: v320(0x337) = CONST 
0x323: JUMPI v320(0x337) v31f
----------------------------------

Begin block 0x324
prev = {'0x31c'}, next = {'0x3620x2d6'}
----------------------------------
Block 0x324
0x324: v324(0x100) = CONST 
0x329: v329 = SLOAD v2d7(0x0)
0x32a: v32a = DIV v329 v324(0x100)
0x32b: v32b = MUL v32a v324(0x100)
0x32d: MSTORE v313 v32b
0x32f: v32f(0x20) = CONST 
0x331: v331 = ADD v32f(0x20) v313
0x333: v333(0x362) = CONST 
0x336: JUMP v333(0x362)
----------------------------------

Begin block 0x3370x2d6
prev = {'0x31c'}, next = {'0x3450x2d6'}
----------------------------------
Block 0x3370x2d6
0x3390x2d6: v2d6339 = ADD v313 v2f8
0x33c0x2d6: v2d633c(0x0) = CONST 
0x33e0x2d6: MSTORE v2d633c(0x0) v2d7(0x0)
0x33f0x2d6: v2d633f(0x20) = CONST 
0x3410x2d6: v2d6341(0x0) = CONST 
0x3430x2d6: v2d6343 = SHA3 v2d6341(0x0) v2d633f(0x20)
----------------------------------

Begin block 0x3370x4ca
prev = {'0x50f'}, next = {'0x3450x4ca'}
----------------------------------
Block 0x3370x4ca
0x3390x4ca: v4ca339 = ADD v506 v4eb
0x33c0x4ca: v4ca33c(0x0) = CONST 
0x33e0x4ca: MSTORE v4ca33c(0x0) v4cb(0x1)
0x33f0x4ca: v4ca33f(0x20) = CONST 
0x3410x4ca: v4ca341(0x0) = CONST 
0x3430x4ca: v4ca343 = SHA3 v4ca341(0x0) v4ca33f(0x20)
----------------------------------

Begin block 0x3450x2d6
prev = {'0x3450x2d6', '0x3370x2d6'}, next = {'0x3450x2d6', '0x3590x2d6'}
----------------------------------
Block 0x3450x2d6
0x3450x2d6_0x0: v3452d6_0 = PHI v313 v2d6351
0x3450x2d6_0x1: v3452d6_1 = PHI v2d634d v2d6343
0x3470x2d6: v2d6347 = SLOAD v3452d6_1
0x3490x2d6: MSTORE v3452d6_0 v2d6347
0x34b0x2d6: v2d634b(0x1) = CONST 
0x34d0x2d6: v2d634d = ADD v2d634b(0x1) v3452d6_1
0x34f0x2d6: v2d634f(0x20) = CONST 
0x3510x2d6: v2d6351 = ADD v2d634f(0x20) v3452d6_0
0x3540x2d6: v2d6354 = GT v2d6339 v2d6351
0x3550x2d6: v2d6355(0x345) = CONST 
0x3580x2d6: JUMPI v2d6355(0x345) v2d6354
----------------------------------

Begin block 0x3450x4ca
prev = {'0x3370x4ca', '0x3450x4ca'}, next = {'0x3450x4ca', '0x3590x4ca'}
----------------------------------
Block 0x3450x4ca
0x3450x4ca_0x0: v3454ca_0 = PHI v506 v4ca351
0x3450x4ca_0x1: v3454ca_1 = PHI v4ca34d v4ca343
0x3470x4ca: v4ca347 = SLOAD v3454ca_1
0x3490x4ca: MSTORE v3454ca_0 v4ca347
0x34b0x4ca: v4ca34b(0x1) = CONST 
0x34d0x4ca: v4ca34d = ADD v4ca34b(0x1) v3454ca_1
0x34f0x4ca: v4ca34f(0x20) = CONST 
0x3510x4ca: v4ca351 = ADD v4ca34f(0x20) v3454ca_0
0x3540x4ca: v4ca354 = GT v4ca339 v4ca351
0x3550x4ca: v4ca355(0x345) = CONST 
0x3580x4ca: JUMPI v4ca355(0x345) v4ca354
----------------------------------

Begin block 0x3590x2d6
prev = {'0x3450x2d6'}, next = {'0x3620x2d6'}
----------------------------------
Block 0x3590x2d6
0x35b0x2d6: v2d635b = SUB v2d6351 v2d6339
0x35c0x2d6: v2d635c(0x1f) = CONST 
0x35e0x2d6: v2d635e = AND v2d635c(0x1f) v2d635b
0x3600x2d6: v2d6360 = ADD v2d6339 v2d635e
----------------------------------

Begin block 0x3590x4ca
prev = {'0x3450x4ca'}, next = {'0x3620x4ca'}
----------------------------------
Block 0x3590x4ca
0x35b0x4ca: v4ca35b = SUB v4ca351 v4ca339
0x35c0x4ca: v4ca35c(0x1f) = CONST 
0x35e0x4ca: v4ca35e = AND v4ca35c(0x1f) v4ca35b
0x3600x4ca: v4ca360 = ADD v4ca339 v4ca35e
----------------------------------

Begin block 0x3620x2d6
prev = {'0x2d6', '0x3590x2d6', '0x324'}, next = {}
----------------------------------
Block 0x3620x2d6
0x36b0x2d6: RETURNPRIVATE v2d6arg0 v2de
----------------------------------

Begin block 0x3620x4ca
prev = {'0x517', '0x4ca', '0x3590x4ca'}, next = {}
----------------------------------
Block 0x3620x4ca
0x36b0x4ca: RETURNPRIVATE v4caarg0 v4d2
----------------------------------

Begin block 0x36c
prev = {'0x156'}, next = {'0x3a9', '0x376'}
----------------------------------
Block 0x36c
0x36d: v36d(0x0) = CONST 
0x370: v370 = ISZERO v174
0x372: v372(0x3a9) = CONST 
0x375: JUMPI v372(0x3a9) v370
----------------------------------

Begin block 0x376
prev = {'0x36c'}, next = {'0x3a9'}
----------------------------------
Block 0x376
0x377: v377 = CALLER 
0x378: v378(0x0) = CONST 
0x37c: MSTORE v378(0x0) v377
0x37d: v37d(0x5) = CONST 
0x37f: v37f(0x20) = CONST 
0x383: MSTORE v37f(0x20) v37d(0x5)
0x384: v384(0x40) = CONST 
0x388: v388 = SHA3 v378(0x0) v384(0x40)
0x389: v389(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x39f: v39f = AND v16f v389(0xffffffffffffffffffffffffffffffffffffffff)
0x3a1: MSTORE v378(0x0) v39f
0x3a4: MSTORE v37f(0x20) v388
0x3a6: v3a6 = SHA3 v378(0x0) v384(0x40)
0x3a7: v3a7 = SLOAD v3a6
0x3a8: v3a8 = ISZERO v3a7
----------------------------------

Begin block 0x3a9
prev = {'0x36c', '0x376'}, next = {'0x3ae', '0x3fe'}
----------------------------------
Block 0x3a9
0x3a9_0x0: v3a9_0 = PHI v370 v3a8
0x3aa: v3aa(0x3fe) = CONST 
0x3ad: JUMPI v3aa(0x3fe) v3a9_0
----------------------------------

Begin block 0x3ae
prev = {'0x3a9'}, next = {}
----------------------------------
Block 0x3ae
0x3ae: v3ae(0x40) = CONST 
0x3b0: v3b0 = MLOAD v3ae(0x40)
0x3b1: v3b1(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x3d3: MSTORE v3b0 v3b1(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x3d4: v3d4(0x4) = CONST 
0x3d6: v3d6 = ADD v3d4(0x4) v3b0
0x3d9: v3d9(0x20) = CONST 
0x3db: v3db = ADD v3d9(0x20) v3d6
0x3de: v3de = SUB v3db v3d6
0x3e0: MSTORE v3d6 v3de
0x3e1: v3e1(0x26) = CONST 
0x3e4: MSTORE v3db v3e1(0x26)
0x3e5: v3e5(0x20) = CONST 
0x3e7: v3e7 = ADD v3e5(0x20) v3db
0x3e9: v3e9(0xac3) = CONST 
0x3ec: v3ec(0x26) = CONST 
0x3ef: CODECOPY v3e7 v3e9(0xac3) v3ec(0x26)
0x3f0: v3f0(0x40) = CONST 
0x3f2: v3f2 = ADD v3f0(0x40) v3e7
0x3f6: v3f6(0x40) = CONST 
0x3f8: v3f8 = MLOAD v3f6(0x40)
0x3fb: v3fb = SUB v3f2 v3f8
0x3fd: REVERT v3f8 v3fb
----------------------------------

Begin block 0x3fe
prev = {'0x3a9'}, next = {'0x4090x140'}
----------------------------------
Block 0x3fe
0x3ff: v3ff(0x409) = CONST 
0x402: v402 = CALLER 
0x405: v405(0x56f) = CONST 
0x408: CALLPRIVATE v405(0x56f) v174 v16f v402 v3ff(0x409)
----------------------------------

Begin block 0x4090x140
prev = {'0x3fe'}, next = {'0x1790x140'}
----------------------------------
Block 0x4090x140
0x40b0x140: v14040b(0x1) = CONST 
0x4110x140: JUMP v141(0x179)
----------------------------------

Begin block 0x4090x262
prev = {'0x52a'}, next = {'0x1790x262'}
----------------------------------
Block 0x4090x262
0x40b0x262: v26240b(0x1) = CONST 
0x4110x262: JUMP v263(0x179)
----------------------------------

Begin block 0x412
prev = {'0x18d'}, next = {'0x1950x18d'}
----------------------------------
Block 0x412
0x413: v413(0x3) = CONST 
0x415: v415 = SLOAD v413(0x3)
0x417: JUMP v18e(0x195)
----------------------------------

Begin block 0x418
prev = {'0x1bd'}, next = {'0x425'}
----------------------------------
Block 0x418
0x419: v419(0x0) = CONST 
0x41b: v41b(0x425) = CONST 
0x421: v421(0x6b6) = CONST 
0x424: CALLPRIVATE v421(0x6b6) v1e5 v1e0 v1d7 v41b(0x425)
----------------------------------

Begin block 0x425
prev = {'0x418'}, next = {'0x481', '0x461'}
----------------------------------
Block 0x425
0x426: v426(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x43c: v43c = AND v1d7 v426(0xffffffffffffffffffffffffffffffffffffffff)
0x43d: v43d(0x0) = CONST 
0x441: MSTORE v43d(0x0) v43c
0x442: v442(0x5) = CONST 
0x444: v444(0x20) = CONST 
0x448: MSTORE v444(0x20) v442(0x5)
0x449: v449(0x40) = CONST 
0x44d: v44d = SHA3 v43d(0x0) v449(0x40)
0x44e: v44e = CALLER 
0x450: MSTORE v43d(0x0) v44e
0x453: MSTORE v444(0x20) v44d
0x455: v455 = SHA3 v43d(0x0) v449(0x40)
0x456: v456 = SLOAD v455
0x457: v457(0x0) = CONST 
0x459: v459(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v457(0x0)
0x45b: v45b = LT v456 v459(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x45c: v45c = ISZERO v45b
0x45d: v45d(0x481) = CONST 
0x460: JUMPI v45d(0x481) v45c
----------------------------------

Begin block 0x461
prev = {'0x425'}, next = {'0x472'}
----------------------------------
Block 0x461
0x461: v461(0x0) = CONST 
0x463: v463(0x472) = CONST 
0x468: v468(0xffffffff) = CONST 
0x46d: v46d(0x86f) = CONST 
0x470: v470(0x86f) = AND v46d(0x86f) v468(0xffffffff)
0x471: v471_0 = CALLPRIVATE v470(0x86f) v1e5 v456 v463(0x472)
----------------------------------

Begin block 0x472
prev = {'0x461'}, next = {'0x47f'}
----------------------------------
Block 0x472
0x475: v475(0x47f) = CONST 
0x479: v479 = CALLER 
0x47b: v47b(0x56f) = CONST 
0x47e: CALLPRIVATE v47b(0x56f) v471_0 v479 v1d7 v475(0x47f)
----------------------------------

Begin block 0x47f
prev = {'0x472'}, next = {'0x481'}
----------------------------------
Block 0x47f
----------------------------------

Begin block 0x481
prev = {'0x425', '0x47f'}, next = {'0x1790x1a7'}
----------------------------------
Block 0x481
0x483: v483(0x1) = CONST 
0x48b: JUMP v1a8(0x179)
----------------------------------

Begin block 0x48c
prev = {'0x1ea'}, next = {'0x1f2'}
----------------------------------
Block 0x48c
0x48d: v48d(0x2) = CONST 
0x48f: v48f = SLOAD v48d(0x2)
0x490: v490(0xff) = CONST 
0x492: v492 = AND v490(0xff) v48f
0x494: JUMP v1eb(0x1f2)
----------------------------------

Begin block 0x495
prev = {'0x21e'}, next = {'0x8e6'}
----------------------------------
Block 0x495
0x496: v496(0x49f) = CONST 
0x499: v499 = CALLER 
0x49b: v49b(0x8e6) = CONST 
0x49e: JUMP v49b(0x8e6)
----------------------------------

Begin block 0x49f
prev = {'0x99e'}, next = {'0x225'}
----------------------------------
Block 0x49f
0x4a1: JUMP v209(0x225)
----------------------------------

Begin block 0x4a2
prev = {'0x23d'}, next = {'0x1950x227'}
----------------------------------
Block 0x4a2
0x4a3: v4a3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x4b8: v4b8 = AND v4a3(0xffffffffffffffffffffffffffffffffffffffff) v255
0x4b9: v4b9(0x0) = CONST 
0x4bd: MSTORE v4b9(0x0) v4b8
0x4be: v4be(0x4) = CONST 
0x4c0: v4c0(0x20) = CONST 
0x4c2: MSTORE v4c0(0x20) v4be(0x4)
0x4c3: v4c3(0x40) = CONST 
0x4c6: v4c6 = SHA3 v4b9(0x0) v4c3(0x40)
0x4c7: v4c7 = SLOAD v4c6
0x4c9: JUMP v228(0x195)
----------------------------------

Begin block 0x4ca
prev = {}, next = {'0x50f', '0x3620x4ca'}
----------------------------------
function 0x4ca(v4caarg0)
Block 0x4ca
0x4cb: v4cb(0x1) = CONST 
0x4ce: v4ce = SLOAD v4cb(0x1)
0x4cf: v4cf(0x40) = CONST 
0x4d2: v4d2 = MLOAD v4cf(0x40)
0x4d3: v4d3(0x20) = CONST 
0x4d5: v4d5(0x1f) = CONST 
0x4d7: v4d7(0x2) = CONST 
0x4d9: v4d9(0x0) = CONST 
0x4db: v4db(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v4d9(0x0)
0x4dc: v4dc(0x100) = CONST 
0x4e1: v4e1 = AND v4cb(0x1) v4ce
0x4e2: v4e2 = ISZERO v4e1
0x4e3: v4e3 = MUL v4e2 v4dc(0x100)
0x4e4: v4e4 = ADD v4e3 v4db(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x4e7: v4e7 = AND v4ce v4e4
0x4eb: v4eb = DIV v4e7 v4d7(0x2)
0x4ee: v4ee = ADD v4eb v4d5(0x1f)
0x4f1: v4f1 = DIV v4ee v4d3(0x20)
0x4f3: v4f3 = MUL v4d3(0x20) v4f1
0x4f5: v4f5 = ADD v4d2 v4f3
0x4f7: v4f7 = ADD v4d3(0x20) v4f5
0x4fa: MSTORE v4cf(0x40) v4f7
0x4fd: MSTORE v4d2 v4eb
0x4fe: v4fe(0x60) = CONST 
0x506: v506 = ADD v4d2 v4d3(0x20)
0x50a: v50a = ISZERO v4eb
0x50b: v50b(0x362) = CONST 
0x50e: JUMPI v50b(0x362) v50a
----------------------------------

Begin block 0x50f
prev = {'0x4ca'}, next = {'0x3370x4ca', '0x517'}
----------------------------------
Block 0x50f
0x510: v510(0x1f) = CONST 
0x512: v512 = LT v510(0x1f) v4eb
0x513: v513(0x337) = CONST 
0x516: JUMPI v513(0x337) v512
----------------------------------

Begin block 0x517
prev = {'0x50f'}, next = {'0x3620x4ca'}
----------------------------------
Block 0x517
0x517: v517(0x100) = CONST 
0x51c: v51c = SLOAD v4cb(0x1)
0x51d: v51d = DIV v51c v517(0x100)
0x51e: v51e = MUL v51d v517(0x100)
0x520: MSTORE v506 v51e
0x522: v522(0x20) = CONST 
0x524: v524 = ADD v522(0x20) v506
0x526: v526(0x362) = CONST 
0x529: JUMP v526(0x362)
----------------------------------

Begin block 0x52a
prev = {'0x278'}, next = {'0x4090x262'}
----------------------------------
Block 0x52a
0x52b: v52b(0x0) = CONST 
0x52d: v52d(0x409) = CONST 
0x530: v530 = CALLER 
0x533: v533(0x6b6) = CONST 
0x536: CALLPRIVATE v533(0x6b6) v296 v291 v530 v52d(0x409)
----------------------------------

Begin block 0x537
prev = {'0x2b1'}, next = {'0x1950x29b'}
----------------------------------
Block 0x537
0x538: v538(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x54f: v54f = AND v538(0xffffffffffffffffffffffffffffffffffffffff) v2cb
0x550: v550(0x0) = CONST 
0x554: MSTORE v550(0x0) v54f
0x555: v555(0x5) = CONST 
0x557: v557(0x20) = CONST 
0x55b: MSTORE v557(0x20) v555(0x5)
0x55c: v55c(0x40) = CONST 
0x560: v560 = SHA3 v550(0x0) v55c(0x40)
0x564: v564 = AND v538(0xffffffffffffffffffffffffffffffffffffffff) v2d1
0x566: MSTORE v550(0x0) v564
0x56a: MSTORE v557(0x20) v560
0x56b: v56b = SHA3 v550(0x0) v55c(0x40)
0x56c: v56c = SLOAD v56b
0x56e: JUMP v29c(0x195)
----------------------------------

Begin block 0x56f
prev = {}, next = {'0x5db', '0x58b'}
----------------------------------
function 0x56f(v56farg0, v56farg1, v56farg2, v56farg3)
Block 0x56f
0x570: v570(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x586: v586 = AND v56farg2 v570(0xffffffffffffffffffffffffffffffffffffffff)
0x587: v587(0x5db) = CONST 
0x58a: JUMPI v587(0x5db) v586
----------------------------------

Begin block 0x58b
prev = {'0x56f'}, next = {}
----------------------------------
Block 0x58b
0x58b: v58b(0x40) = CONST 
0x58d: v58d = MLOAD v58b(0x40)
0x58e: v58e(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x5b0: MSTORE v58d v58e(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x5b1: v5b1(0x4) = CONST 
0x5b3: v5b3 = ADD v5b1(0x4) v58d
0x5b6: v5b6(0x20) = CONST 
0x5b8: v5b8 = ADD v5b6(0x20) v5b3
0x5bb: v5bb = SUB v5b8 v5b3
0x5bd: MSTORE v5b3 v5bb
0x5be: v5be(0x24) = CONST 
0x5c1: MSTORE v5b8 v5be(0x24)
0x5c2: v5c2(0x20) = CONST 
0x5c4: v5c4 = ADD v5c2(0x20) v5b8
0x5c6: v5c6(0xb2f) = CONST 
0x5c9: v5c9(0x24) = CONST 
0x5cc: CODECOPY v5c4 v5c6(0xb2f) v5c9(0x24)
0x5cd: v5cd(0x40) = CONST 
0x5cf: v5cf = ADD v5cd(0x40) v5c4
0x5d3: v5d3(0x40) = CONST 
0x5d5: v5d5 = MLOAD v5d3(0x40)
0x5d8: v5d8 = SUB v5cf v5d5
0x5da: REVERT v5d5 v5d8
----------------------------------

Begin block 0x5db
prev = {'0x56f'}, next = {'0x647', '0x5f7'}
----------------------------------
Block 0x5db
0x5dc: v5dc(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x5f2: v5f2 = AND v56farg1 v5dc(0xffffffffffffffffffffffffffffffffffffffff)
0x5f3: v5f3(0x647) = CONST 
0x5f6: JUMPI v5f3(0x647) v5f2
----------------------------------

Begin block 0x5f7
prev = {'0x5db'}, next = {}
----------------------------------
Block 0x5f7
0x5f7: v5f7(0x40) = CONST 
0x5f9: v5f9 = MLOAD v5f7(0x40)
0x5fa: v5fa(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x61c: MSTORE v5f9 v5fa(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x61d: v61d(0x4) = CONST 
0x61f: v61f = ADD v61d(0x4) v5f9
0x622: v622(0x20) = CONST 
0x624: v624 = ADD v622(0x20) v61f
0x627: v627 = SUB v624 v61f
0x629: MSTORE v61f v627
0x62a: v62a(0x22) = CONST 
0x62d: MSTORE v624 v62a(0x22)
0x62e: v62e(0x20) = CONST 
0x630: v630 = ADD v62e(0x20) v624
0x632: v632(0xaa1) = CONST 
0x635: v635(0x22) = CONST 
0x638: CODECOPY v630 v632(0xaa1) v635(0x22)
0x639: v639(0x40) = CONST 
0x63b: v63b = ADD v639(0x40) v630
0x63f: v63f(0x40) = CONST 
0x641: v641 = MLOAD v63f(0x40)
0x644: v644 = SUB v63b v641
0x646: REVERT v641 v644
----------------------------------

Begin block 0x647
prev = {'0x5db'}, next = {}
----------------------------------
Block 0x647
0x648: v648(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x65f: v65f = AND v56farg2 v648(0xffffffffffffffffffffffffffffffffffffffff)
0x660: v660(0x0) = CONST 
0x664: MSTORE v660(0x0) v65f
0x665: v665(0x5) = CONST 
0x667: v667(0x20) = CONST 
0x66b: MSTORE v667(0x20) v665(0x5)
0x66c: v66c(0x40) = CONST 
0x670: v670 = SHA3 v660(0x0) v66c(0x40)
0x673: v673 = AND v56farg1 v648(0xffffffffffffffffffffffffffffffffffffffff)
0x676: MSTORE v660(0x0) v673
0x679: MSTORE v667(0x20) v670
0x67d: v67d = SHA3 v660(0x0) v66c(0x40)
0x680: SSTORE v67d v56farg0
0x682: v682 = MLOAD v66c(0x40)
0x685: MSTORE v682 v56farg0
0x687: v687 = MLOAD v66c(0x40)
0x688: v688(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0x6ac: v6ac = SUB v682 v687
0x6af: v6af = ADD v667(0x20) v6ac
0x6b1: LOG3 v687 v6af v688(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) v65f v673
0x6b5: RETURNPRIVATE v56farg3
----------------------------------

Begin block 0x6b6
prev = {}, next = {'0x722', '0x6d2'}
----------------------------------
function 0x6b6(v6b6arg0, v6b6arg1, v6b6arg2, v6b6arg3)
Block 0x6b6
0x6b7: v6b7(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x6cd: v6cd = AND v6b6arg2 v6b7(0xffffffffffffffffffffffffffffffffffffffff)
0x6ce: v6ce(0x722) = CONST 
0x6d1: JUMPI v6ce(0x722) v6cd
----------------------------------

Begin block 0x6d2
prev = {'0x6b6'}, next = {}
----------------------------------
Block 0x6d2
0x6d2: v6d2(0x40) = CONST 
0x6d4: v6d4 = MLOAD v6d2(0x40)
0x6d5: v6d5(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x6f7: MSTORE v6d4 v6d5(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x6f8: v6f8(0x4) = CONST 
0x6fa: v6fa = ADD v6f8(0x4) v6d4
0x6fd: v6fd(0x20) = CONST 
0x6ff: v6ff = ADD v6fd(0x20) v6fa
0x702: v702 = SUB v6ff v6fa
0x704: MSTORE v6fa v702
0x705: v705(0x25) = CONST 
0x708: MSTORE v6ff v705(0x25)
0x709: v709(0x20) = CONST 
0x70b: v70b = ADD v709(0x20) v6ff
0x70d: v70d(0xb0a) = CONST 
0x710: v710(0x25) = CONST 
0x713: CODECOPY v70b v70d(0xb0a) v710(0x25)
0x714: v714(0x40) = CONST 
0x716: v716 = ADD v714(0x40) v70b
0x71a: v71a(0x40) = CONST 
0x71c: v71c = MLOAD v71a(0x40)
0x71f: v71f = SUB v716 v71c
0x721: REVERT v71c v71f
----------------------------------

Begin block 0x722
prev = {'0x6b6'}, next = {'0x78e', '0x73e'}
----------------------------------
Block 0x722
0x723: v723(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x739: v739 = AND v6b6arg1 v723(0xffffffffffffffffffffffffffffffffffffffff)
0x73a: v73a(0x78e) = CONST 
0x73d: JUMPI v73a(0x78e) v739
----------------------------------

Begin block 0x73e
prev = {'0x722'}, next = {}
----------------------------------
Block 0x73e
0x73e: v73e(0x40) = CONST 
0x740: v740 = MLOAD v73e(0x40)
0x741: v741(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x763: MSTORE v740 v741(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x764: v764(0x4) = CONST 
0x766: v766 = ADD v764(0x4) v740
0x769: v769(0x20) = CONST 
0x76b: v76b = ADD v769(0x20) v766
0x76e: v76e = SUB v76b v766
0x770: MSTORE v766 v76e
0x771: v771(0x23) = CONST 
0x774: MSTORE v76b v771(0x23)
0x775: v775(0x20) = CONST 
0x777: v777 = ADD v775(0x20) v76b
0x779: v779(0xa7e) = CONST 
0x77c: v77c(0x23) = CONST 
0x77f: CODECOPY v777 v779(0xa7e) v77c(0x23)
0x780: v780(0x40) = CONST 
0x782: v782 = ADD v780(0x40) v777
0x786: v786(0x40) = CONST 
0x788: v788 = MLOAD v786(0x40)
0x78b: v78b = SUB v782 v788
0x78d: REVERT v788 v78b
----------------------------------

Begin block 0x78e
prev = {'0x722'}, next = {'0x7c4'}
----------------------------------
Block 0x78e
0x78f: v78f(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x7a5: v7a5 = AND v6b6arg2 v78f(0xffffffffffffffffffffffffffffffffffffffff)
0x7a6: v7a6(0x0) = CONST 
0x7aa: MSTORE v7a6(0x0) v7a5
0x7ab: v7ab(0x4) = CONST 
0x7ad: v7ad(0x20) = CONST 
0x7af: MSTORE v7ad(0x20) v7ab(0x4)
0x7b0: v7b0(0x40) = CONST 
0x7b3: v7b3 = SHA3 v7a6(0x0) v7b0(0x40)
0x7b4: v7b4 = SLOAD v7b3
0x7b5: v7b5(0x7c4) = CONST 
0x7ba: v7ba(0xffffffff) = CONST 
0x7bf: v7bf(0x86f) = CONST 
0x7c2: v7c2(0x86f) = AND v7bf(0x86f) v7ba(0xffffffff)
0x7c3: v7c3_0 = CALLPRIVATE v7c2(0x86f) v6b6arg0 v7b4 v7b5(0x7c4)
----------------------------------

Begin block 0x7c4
prev = {'0x78e'}, next = {'0xa02'}
----------------------------------
Block 0x7c4
0x7c5: v7c5(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x7dc: v7dc = AND v6b6arg2 v7c5(0xffffffffffffffffffffffffffffffffffffffff)
0x7dd: v7dd(0x0) = CONST 
0x7e1: MSTORE v7dd(0x0) v7dc
0x7e2: v7e2(0x4) = CONST 
0x7e4: v7e4(0x20) = CONST 
0x7e6: MSTORE v7e4(0x20) v7e2(0x4)
0x7e7: v7e7(0x40) = CONST 
0x7eb: v7eb = SHA3 v7dd(0x0) v7e7(0x40)
0x7ef: SSTORE v7eb v7c3_0
0x7f2: v7f2 = AND v6b6arg1 v7c5(0xffffffffffffffffffffffffffffffffffffffff)
0x7f4: MSTORE v7dd(0x0) v7f2
0x7f5: v7f5 = SHA3 v7dd(0x0) v7e7(0x40)
0x7f6: v7f6 = SLOAD v7f5
0x7f7: v7f7(0x806) = CONST 
0x7fc: v7fc(0xffffffff) = CONST 
0x801: v801(0xa02) = CONST 
0x804: v804(0xa02) = AND v801(0xa02) v7fc(0xffffffff)
0x805: JUMP v804(0xa02)
----------------------------------

Begin block 0x806
prev = {'0xa76'}, next = {}
----------------------------------
Block 0x806
0x807: v807(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x81e: v81e = AND v6b6arg1 v807(0xffffffffffffffffffffffffffffffffffffffff)
0x81f: v81f(0x0) = CONST 
0x823: MSTORE v81f(0x0) v81e
0x824: v824(0x4) = CONST 
0x826: v826(0x20) = CONST 
0x82a: MSTORE v826(0x20) v824(0x4)
0x82b: v82b(0x40) = CONST 
0x830: v830 = SHA3 v81f(0x0) v82b(0x40)
0x834: SSTORE v830 va07
0x836: v836 = MLOAD v82b(0x40)
0x839: MSTORE v836 v6b6arg0
0x83b: v83b = MLOAD v82b(0x40)
0x840: v840 = AND v6b6arg2 v807(0xffffffffffffffffffffffffffffffffffffffff)
0x842: v842(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x867: v867 = SUB v836 v83b
0x868: v868 = ADD v867 v826(0x20)
0x86a: LOG3 v83b v868 v842(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v840 v81e
0x86e: RETURNPRIVATE v6b6arg3
----------------------------------

Begin block 0x86f
prev = {}, next = {'0x87a', '0x8e0'}
----------------------------------
function 0x86f(v86farg0, v86farg1, v86farg2)
Block 0x86f
0x870: v870(0x0) = CONST 
0x874: v874 = GT v86farg0 v86farg1
0x875: v875 = ISZERO v874
0x876: v876(0x8e0) = CONST 
0x879: JUMPI v876(0x8e0) v875
----------------------------------

Begin block 0x87a
prev = {'0x86f'}, next = {}
----------------------------------
Block 0x87a
0x87a: v87a(0x40) = CONST 
0x87d: v87d = MLOAD v87a(0x40)
0x87e: v87e(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x8a0: MSTORE v87d v87e(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x8a1: v8a1(0x20) = CONST 
0x8a3: v8a3(0x4) = CONST 
0x8a6: v8a6 = ADD v87d v8a3(0x4)
0x8a7: MSTORE v8a6 v8a1(0x20)
0x8a8: v8a8(0x1e) = CONST 
0x8aa: v8aa(0x24) = CONST 
0x8ad: v8ad = ADD v87d v8aa(0x24)
0x8ae: MSTORE v8ad v8a8(0x1e)
0x8af: v8af(0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000) = CONST 
0x8d0: v8d0(0x44) = CONST 
0x8d3: v8d3 = ADD v87d v8d0(0x44)
0x8d4: MSTORE v8d3 v8af(0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000)
0x8d6: v8d6 = MLOAD v87a(0x40)
0x8da: v8da = SUB v87d v8d6
0x8db: v8db(0x64) = CONST 
0x8dd: v8dd = ADD v8db(0x64) v8da
0x8df: REVERT v8d6 v8dd
----------------------------------

Begin block 0x8e0
prev = {'0x86f'}, next = {}
----------------------------------
Block 0x8e0
0x8e3: v8e3 = SUB v86farg1 v86farg0
0x8e5: RETURNPRIVATE v86farg2 v8e3
----------------------------------

Begin block 0x8e6
prev = {'0x495'}, next = {'0x902', '0x952'}
----------------------------------
Block 0x8e6
0x8e7: v8e7(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x8fd: v8fd = AND v499 v8e7(0xffffffffffffffffffffffffffffffffffffffff)
0x8fe: v8fe(0x952) = CONST 
0x901: JUMPI v8fe(0x952) v8fd
----------------------------------

Begin block 0x902
prev = {'0x8e6'}, next = {}
----------------------------------
Block 0x902
0x902: v902(0x40) = CONST 
0x904: v904 = MLOAD v902(0x40)
0x905: v905(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x927: MSTORE v904 v905(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x928: v928(0x4) = CONST 
0x92a: v92a = ADD v928(0x4) v904
0x92d: v92d(0x20) = CONST 
0x92f: v92f = ADD v92d(0x20) v92a
0x932: v932 = SUB v92f v92a
0x934: MSTORE v92a v932
0x935: v935(0x21) = CONST 
0x938: MSTORE v92f v935(0x21)
0x939: v939(0x20) = CONST 
0x93b: v93b = ADD v939(0x20) v92f
0x93d: v93d(0xae9) = CONST 
0x940: v940(0x21) = CONST 
0x943: CODECOPY v93b v93d(0xae9) v940(0x21)
0x944: v944(0x40) = CONST 
0x946: v946 = ADD v944(0x40) v93b
0x94a: v94a(0x40) = CONST 
0x94c: v94c = MLOAD v94a(0x40)
0x94f: v94f = SUB v946 v94c
0x951: REVERT v94c v94f
----------------------------------

Begin block 0x952
prev = {'0x8e6'}, next = {'0x965'}
----------------------------------
Block 0x952
0x953: v953(0x3) = CONST 
0x955: v955 = SLOAD v953(0x3)
0x956: v956(0x965) = CONST 
0x95b: v95b(0xffffffff) = CONST 
0x960: v960(0x86f) = CONST 
0x963: v963(0x86f) = AND v960(0x86f) v95b(0xffffffff)
0x964: v964_0 = CALLPRIVATE v963(0x86f) v220 v955 v956(0x965)
----------------------------------

Begin block 0x965
prev = {'0x952'}, next = {'0x99e'}
----------------------------------
Block 0x965
0x966: v966(0x3) = CONST 
0x968: SSTORE v966(0x3) v964_0
0x969: v969(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x97f: v97f = AND v499 v969(0xffffffffffffffffffffffffffffffffffffffff)
0x980: v980(0x0) = CONST 
0x984: MSTORE v980(0x0) v97f
0x985: v985(0x4) = CONST 
0x987: v987(0x20) = CONST 
0x989: MSTORE v987(0x20) v985(0x4)
0x98a: v98a(0x40) = CONST 
0x98d: v98d = SHA3 v980(0x0) v98a(0x40)
0x98e: v98e = SLOAD v98d
0x98f: v98f(0x99e) = CONST 
0x994: v994(0xffffffff) = CONST 
0x999: v999(0x86f) = CONST 
0x99c: v99c(0x86f) = AND v999(0x86f) v994(0xffffffff)
0x99d: v99d_0 = CALLPRIVATE v99c(0x86f) v220 v98e v98f(0x99e)
----------------------------------

Begin block 0x99e
prev = {'0x965'}, next = {'0x49f'}
----------------------------------
Block 0x99e
0x99f: v99f(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x9b5: v9b5 = AND v499 v99f(0xffffffffffffffffffffffffffffffffffffffff)
0x9b6: v9b6(0x0) = CONST 
0x9ba: MSTORE v9b6(0x0) v9b5
0x9bb: v9bb(0x4) = CONST 
0x9bd: v9bd(0x20) = CONST 
0x9c1: MSTORE v9bd(0x20) v9bb(0x4)
0x9c2: v9c2(0x40) = CONST 
0x9c6: v9c6 = SHA3 v9b6(0x0) v9c2(0x40)
0x9ca: SSTORE v9c6 v99d_0
0x9cc: v9cc = MLOAD v9c2(0x40)
0x9cf: MSTORE v9cc v220
0x9d1: v9d1 = MLOAD v9c2(0x40)
0x9d4: v9d4(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x9f9: v9f9 = SUB v9cc v9d1
0x9fc: v9fc = ADD v9bd(0x20) v9f9
0x9fe: LOG3 v9d1 v9fc v9d4(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v9b5 v9b6(0x0)
0xa01: JUMP v496(0x49f)
----------------------------------

Begin block 0xa02
prev = {'0x7c4'}, next = {'0xa10', '0xa76'}
----------------------------------
Block 0xa02
0xa03: va03(0x0) = CONST 
0xa07: va07 = ADD v6b6arg0 v7f6
0xa0a: va0a = LT va07 v7f6
0xa0b: va0b = ISZERO va0a
0xa0c: va0c(0xa76) = CONST 
0xa0f: JUMPI va0c(0xa76) va0b
----------------------------------

Begin block 0xa10
prev = {'0xa02'}, next = {}
----------------------------------
Block 0xa10
0xa10: va10(0x40) = CONST 
0xa13: va13 = MLOAD va10(0x40)
0xa14: va14(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xa36: MSTORE va13 va14(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xa37: va37(0x20) = CONST 
0xa39: va39(0x4) = CONST 
0xa3c: va3c = ADD va13 va39(0x4)
0xa3d: MSTORE va3c va37(0x20)
0xa3e: va3e(0x1b) = CONST 
0xa40: va40(0x24) = CONST 
0xa43: va43 = ADD va13 va40(0x24)
0xa44: MSTORE va43 va3e(0x1b)
0xa45: va45(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000) = CONST 
0xa66: va66(0x44) = CONST 
0xa69: va69 = ADD va13 va66(0x44)
0xa6a: MSTORE va69 va45(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000)
0xa6c: va6c = MLOAD va10(0x40)
0xa70: va70 = SUB va13 va6c
0xa71: va71(0x64) = CONST 
0xa73: va73 = ADD va71(0x64) va70
0xa75: REVERT va6c va73
----------------------------------

Begin block 0xa76
prev = {'0xa02'}, next = {'0x806'}
----------------------------------
Block 0xa76
0xa7c: JUMP v7f7(0x806)
----------------------------------

Begin block 0xb8a
prev = {'0xb3', '0x10'}, next = {'0xbe0x0'}
----------------------------------
Block 0xb8a
0xb8b: vb8b(0xbe) = CONST 
0xb8c: CALLPRIVATE vb8b(0xbe)
----------------------------------

Begin block 0xb8d
prev = {'0xa7'}, next = {}
----------------------------------
Block 0xb8d
0xb8e: vb8e(0xc3) = CONST 
0xb8f: CALLPRIVATE vb8e(0xc3)
----------------------------------

Begin block 0xb90
prev = {'0xb3'}, next = {}
----------------------------------
Block 0xb90
0xb91: vb91(0x140) = CONST 
0xb92: CALLPRIVATE vb91(0x140)
----------------------------------

Begin block 0xb93
prev = {'0x82'}, next = {}
----------------------------------
Block 0xb93
0xb94: vb94(0x18d) = CONST 
0xb95: CALLPRIVATE vb94(0x18d)
----------------------------------

Begin block 0xb96
prev = {'0x8d'}, next = {}
----------------------------------
Block 0xb96
0xb97: vb97(0x1a7) = CONST 
0xb98: CALLPRIVATE vb97(0x1a7)
----------------------------------

Begin block 0xb99
prev = {'0x98'}, next = {}
----------------------------------
Block 0xb99
0xb9a: vb9a(0x1ea) = CONST 
0xb9b: CALLPRIVATE vb9a(0x1ea)
----------------------------------

Begin block 0xb9c
prev = {'0x5b'}, next = {}
----------------------------------
Block 0xb9c
0xb9d: vb9d(0x208) = CONST 
0xb9e: CALLPRIVATE vb9d(0x208)
----------------------------------

Begin block 0xb9f
prev = {'0x67'}, next = {}
----------------------------------
Block 0xb9f
0xba0: vba0(0x227) = CONST 
0xba1: CALLPRIVATE vba0(0x227)
----------------------------------

Begin block 0xba2
prev = {'0x36'}, next = {}
----------------------------------
Block 0xba2
0xba3: vba3(0x25a) = CONST 
0xba4: CALLPRIVATE vba3(0x25a)
----------------------------------

Begin block 0xba5
prev = {'0x41'}, next = {}
----------------------------------
Block 0xba5
0xba6: vba6(0x262) = CONST 
0xba7: CALLPRIVATE vba6(0x262)
----------------------------------

Begin block 0xba8
prev = {'0x4c'}, next = {}
----------------------------------
Block 0xba8
0xba9: vba9(0x29b) = CONST 
0xbaa: CALLPRIVATE vba9(0x29b)
----------------------------------
