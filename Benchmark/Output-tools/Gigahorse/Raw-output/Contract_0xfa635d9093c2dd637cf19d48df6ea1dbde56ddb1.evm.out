
Begin block 0x0
prev = {}, next = {'0x10', '0xc'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x1a', '0x304'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x2f8: v2f8(0x304) = CONST 
0x2f9: JUMPI v2f8(0x304) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x2b', '0x307'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x86a4f6ee) = CONST 
0x26: v26 = EQ v21(0x86a4f6ee) v1f
0x2fa: v2fa(0x307) = CONST 
0x2fb: JUMPI v2fa(0x307) v26
----------------------------------

Begin block 0x2b
prev = {'0x1a'}, next = {'0x36', '0x30a'}
----------------------------------
Block 0x2b
0x2c: v2c(0x96d373e5) = CONST 
0x31: v31 = EQ v2c(0x96d373e5) v1f
0x2fc: v2fc(0x30a) = CONST 
0x2fd: JUMPI v2fc(0x30a) v31
----------------------------------

Begin block 0x36
prev = {'0x2b'}, next = {'0x41', '0x30d'}
----------------------------------
Block 0x36
0x37: v37(0xae8421e1) = CONST 
0x3c: v3c = EQ v37(0xae8421e1) v1f
0x2fe: v2fe(0x30d) = CONST 
0x2ff: JUMPI v2fe(0x30d) v3c
----------------------------------

Begin block 0x41
prev = {'0x36'}, next = {'0x4c', '0x310'}
----------------------------------
Block 0x41
0x42: v42(0xc57981b5) = CONST 
0x47: v47 = EQ v42(0xc57981b5) v1f
0x300: v300(0x310) = CONST 
0x301: JUMPI v300(0x310) v47
----------------------------------

Begin block 0x4c
prev = {'0x41'}, next = {'0x304', '0x313'}
----------------------------------
Block 0x4c
0x4d: v4d(0xec81b483) = CONST 
0x52: v52 = EQ v4d(0xec81b483) v1f
0x302: v302(0x313) = CONST 
0x303: JUMPI v302(0x313) v52
----------------------------------

Begin block 0x57
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x57
0x58: v58(0x0) = CONST 
0x5b: REVERT v58(0x0) v58(0x0)
----------------------------------

Begin block 0x5c
prev = {}, next = {'0xc8'}
----------------------------------
function MOM()()
Block 0x5c
0x5d: v5d(0x64) = CONST 
0x60: v60(0xc8) = CONST 
0x63: JUMP v60(0xc8)
----------------------------------

Begin block 0x64
prev = {'0xc8'}, next = {}
----------------------------------
Block 0x64
0x65: v65(0x40) = CONST 
0x68: v68 = MLOAD v65(0x40)
0x69: v69(0x1) = CONST 
0x6b: v6b(0x1) = CONST 
0x6d: v6d(0xa0) = CONST 
0x6f: v6f(0x10000000000000000000000000000000000000000) = SHL v6d(0xa0) v6b(0x1)
0x70: v70(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6f(0x10000000000000000000000000000000000000000) v69(0x1)
0x73: v73 = AND vc9(0xf2c5369cffb8ea6284452b0326e326dbfdcb867c) v70(0xffffffffffffffffffffffffffffffffffffffff)
0x75: MSTORE v68 v73
0x76: v76 = MLOAD v65(0x40)
0x7a: v7a = SUB v68 v76
0x7b: v7b(0x20) = CONST 
0x7d: v7d = ADD v7b(0x20) v7a
0x7f: RETURN v76 v7d
----------------------------------

Begin block 0x80
prev = {}, next = {'0x88'}
----------------------------------
function cast()()
Block 0x80
0x81: v81(0x88) = CONST 
0x84: v84(0xe0) = CONST 
0x87: CALLPRIVATE v84(0xe0) v81(0x88)
----------------------------------

Begin block 0x88
prev = {'0x80'}, next = {}
----------------------------------
Block 0x88
0x89: STOP 
----------------------------------

Begin block 0x8a
prev = {}, next = {'0x232'}
----------------------------------
function done()()
Block 0x8a
0x8b: v8b(0x92) = CONST 
0x8e: v8e(0x232) = CONST 
0x91: JUMP v8e(0x232)
----------------------------------

Begin block 0x92
prev = {'0x232'}, next = {}
----------------------------------
Block 0x92
0x93: v93(0x40) = CONST 
0x96: v96 = MLOAD v93(0x40)
0x98: v98 = ISZERO v238
0x99: v99 = ISZERO v98
0x9b: MSTORE v96 v99
0x9c: v9c = MLOAD v93(0x40)
0xa0: va0 = SUB v96 v9c
0xa1: va1(0x20) = CONST 
0xa3: va3 = ADD va1(0x20) va0
0xa5: RETURN v9c va3
----------------------------------

Begin block 0xa6
prev = {}, next = {'0x23b'}
----------------------------------
function FEE()()
Block 0xa6
0xa7: va7(0xae) = CONST 
0xaa: vaa(0x23b) = CONST 
0xad: JUMP vaa(0x23b)
----------------------------------

Begin block 0xae0xa6
prev = {'0x23b'}, next = {}
----------------------------------
Block 0xae0xa6
0xaf0xa6: va6af(0x40) = CONST 
0xb20xa6: va6b2 = MLOAD va6af(0x40)
0xb50xa6: MSTORE va6b2 v23c(0x33b2e3cb548ff197d3905a0)
0xb60xa6: va6b6 = MLOAD va6af(0x40)
0xba0xa6: va6ba = SUB va6b2 va6b6
0xbb0xa6: va6bb(0x20) = CONST 
0xbd0xa6: va6bd = ADD va6bb(0x20) va6ba
0xbf0xa6: RETURN va6b6 va6bd
----------------------------------

Begin block 0xae0xc0
prev = {'0x24b'}, next = {}
----------------------------------
Block 0xae0xc0
0xaf0xc0: vc0af(0x40) = CONST 
0xb20xc0: vc0b2 = MLOAD vc0af(0x40)
0xb50xc0: MSTORE vc0b2 v24c(0x6342fd08f00f6378000000)
0xb60xc0: vc0b6 = MLOAD vc0af(0x40)
0xba0xc0: vc0ba = SUB vc0b2 vc0b6
0xbb0xc0: vc0bb(0x20) = CONST 
0xbd0xc0: vc0bd = ADD vc0bb(0x20) vc0ba
0xbf0xc0: RETURN vc0b6 vc0bd
----------------------------------

Begin block 0xc0
prev = {}, next = {'0x24b'}
----------------------------------
function CAP()()
Block 0xc0
0xc1: vc1(0xae) = CONST 
0xc4: vc4(0x24b) = CONST 
0xc7: JUMP vc4(0x24b)
----------------------------------

Begin block 0xc8
prev = {'0x5c'}, next = {'0x64'}
----------------------------------
Block 0xc8
0xc9: vc9(0xf2c5369cffb8ea6284452b0326e326dbfdcb867c) = CONST 
0xdf: JUMP v5d(0x64)
----------------------------------

Begin block 0xe0
prev = {}, next = {'0x150', '0x154'}
----------------------------------
function 0xe0(ve0arg0)
Block 0xe0
0xe1: ve1(0x40) = CONST 
0xe4: ve4 = MLOAD ve1(0x40)
0xe5: ve5 = CALLVALUE 
0xe8: MSTORE ve4 ve5
0xe9: ve9(0x20) = CONST 
0xec: vec = ADD ve4 ve9(0x20)
0xef: MSTORE vec ve1(0x40)
0xf0: vf0 = CALLDATASIZE 
0xf3: vf3 = ADD ve4 ve1(0x40)
0xf6: MSTORE vf3 vf0
0xf7: vf7(0x4) = CONST 
0xf9: vf9 = CALLDATALOAD vf7(0x4)
0xfb: vfb(0x24) = CONST 
0xfd: vfd = CALLDATALOAD vfb(0x24)
0x103: v103 = CALLER 
0x105: v105(0x0) = CONST 
0x108: v108 = CALLDATALOAD v105(0x0)
0x109: v109(0x1) = CONST 
0x10b: v10b(0x1) = CONST 
0x10d: v10d(0xe0) = CONST 
0x10f: v10f(0x100000000000000000000000000000000000000000000000000000000) = SHL v10d(0xe0) v10b(0x1)
0x110: v110(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v10f(0x100000000000000000000000000000000000000000000000000000000) v109(0x1)
0x111: v111(0xffffffff00000000000000000000000000000000000000000000000000000000) = NOT v110(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x112: v112 = AND v111(0xffffffff00000000000000000000000000000000000000000000000000000000) v108
0x119: v119(0x60) = CONST 
0x11c: v11c = ADD ve4 v119(0x60)
0x122: CALLDATACOPY v11c v105(0x0) vf0
0x123: v123(0x0) = CONST 
0x127: v127 = ADD vf0 v11c
0x128: MSTORE v127 v123(0x0)
0x129: v129(0x40) = CONST 
0x12b: v12b = MLOAD v129(0x40)
0x12c: v12c(0x1f) = CONST 
0x130: v130 = ADD vf0 v12c(0x1f)
0x131: v131(0x1f) = CONST 
0x133: v133(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v131(0x1f)
0x134: v134 = AND v133(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) v130
0x137: v137 = ADD v11c v134
0x13a: v13a = SUB v137 v12b
0x144: LOG4 v12b v13a v112 v103 vf9 vfd
0x145: v145(0x0) = CONST 
0x147: v147 = SLOAD v145(0x0)
0x148: v148(0xff) = CONST 
0x14a: v14a = AND v148(0xff) v147
0x14b: v14b = ISZERO v14a
0x14c: v14c(0x154) = CONST 
0x14f: JUMPI v14c(0x154) v14b
----------------------------------

Begin block 0x150
prev = {'0xe0'}, next = {}
----------------------------------
Block 0x150
0x150: v150(0x0) = CONST 
0x153: REVERT v150(0x0) v150(0x0)
----------------------------------

Begin block 0x154
prev = {'0xe0'}, next = {'0x1c6'}
----------------------------------
Block 0x154
0x155: v155(0x0) = CONST 
0x158: v158 = SLOAD v155(0x0)
0x159: v159(0xff) = CONST 
0x15b: v15b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v159(0xff)
0x15c: v15c = AND v15b(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) v158
0x15d: v15d(0x1) = CONST 
0x15f: v15f = OR v15d(0x1) v15c
0x161: SSTORE v155(0x0) v15f
0x162: v162(0x40) = CONST 
0x165: v165 = MLOAD v162(0x40)
0x166: v166(0x6342fd08f00f6378000000) = CONST 
0x172: v172(0x24) = CONST 
0x176: v176 = ADD v165 v172(0x24)
0x17a: MSTORE v176 v166(0x6342fd08f00f6378000000)
0x17c: v17c = MLOAD v162(0x40)
0x17f: v17f = SUB v165 v17c
0x182: v182 = ADD v172(0x24) v17f
0x184: MSTORE v17c v182
0x185: v185(0x44) = CONST 
0x189: v189 = ADD v165 v185(0x44)
0x18c: MSTORE v162(0x40) v189
0x18d: v18d(0x20) = CONST 
0x190: v190 = ADD v17c v18d(0x20)
0x192: v192 = MLOAD v190
0x193: v193(0x1) = CONST 
0x195: v195(0x1) = CONST 
0x197: v197(0xe0) = CONST 
0x199: v199(0x100000000000000000000000000000000000000000000000000000000) = SHL v197(0xe0) v195(0x1)
0x19a: v19a(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v199(0x100000000000000000000000000000000000000000000000000000000) v193(0x1)
0x19b: v19b = AND v19a(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v192
0x19c: v19c(0x47786d37) = CONST 
0x1a1: v1a1(0xe0) = CONST 
0x1a3: v1a3(0x47786d3700000000000000000000000000000000000000000000000000000000) = SHL v1a1(0xe0) v19c(0x47786d37)
0x1a4: v1a4 = OR v1a3(0x47786d3700000000000000000000000000000000000000000000000000000000) v19b
0x1a6: MSTORE v190 v1a4
0x1a7: v1a7(0x1c6) = CONST 
0x1ab: v1ab(0xf2c5369cffb8ea6284452b0326e326dbfdcb867c) = CONST 
0x1c2: v1c2(0x25a) = CONST 
0x1c5: CALLPRIVATE v1c2(0x25a) v155(0x0) v17c v1ab(0xf2c5369cffb8ea6284452b0326e326dbfdcb867c) v1a7(0x1c6)
----------------------------------

Begin block 0x1c6
prev = {'0x154'}, next = {'0x22d0xe0'}
----------------------------------
Block 0x1c6
0x1c7: v1c7(0x40) = CONST 
0x1ca: v1ca = MLOAD v1c7(0x40)
0x1cb: v1cb(0x33b2e3cb548ff197d3905a0) = CONST 
0x1d8: v1d8(0x24) = CONST 
0x1dc: v1dc = ADD v1ca v1d8(0x24)
0x1e0: MSTORE v1dc v1cb(0x33b2e3cb548ff197d3905a0)
0x1e2: v1e2 = MLOAD v1c7(0x40)
0x1e5: v1e5 = SUB v1ca v1e2
0x1e8: v1e8 = ADD v1d8(0x24) v1e5
0x1ea: MSTORE v1e2 v1e8
0x1eb: v1eb(0x44) = CONST 
0x1ef: v1ef = ADD v1ca v1eb(0x44)
0x1f2: MSTORE v1c7(0x40) v1ef
0x1f3: v1f3(0x20) = CONST 
0x1f6: v1f6 = ADD v1e2 v1f3(0x20)
0x1f8: v1f8 = MLOAD v1f6
0x1f9: v1f9(0x1) = CONST 
0x1fb: v1fb(0x1) = CONST 
0x1fd: v1fd(0xe0) = CONST 
0x1ff: v1ff(0x100000000000000000000000000000000000000000000000000000000) = SHL v1fd(0xe0) v1fb(0x1)
0x200: v200(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = SUB v1ff(0x100000000000000000000000000000000000000000000000000000000) v1f9(0x1)
0x201: v201 = AND v200(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v1f8
0x202: v202(0x69fe0e2d) = CONST 
0x207: v207(0xe0) = CONST 
0x209: v209(0x69fe0e2d00000000000000000000000000000000000000000000000000000000) = SHL v207(0xe0) v202(0x69fe0e2d)
0x20a: v20a = OR v209(0x69fe0e2d00000000000000000000000000000000000000000000000000000000) v201
0x20c: MSTORE v1f6 v20a
0x20d: v20d(0x22d) = CONST 
0x211: v211(0xf2c5369cffb8ea6284452b0326e326dbfdcb867c) = CONST 
0x227: v227(0x0) = CONST 
0x229: v229(0x25a) = CONST 
0x22c: CALLPRIVATE v229(0x25a) v227(0x0) v1e2 v211(0xf2c5369cffb8ea6284452b0326e326dbfdcb867c) v20d(0x22d)
----------------------------------

Begin block 0x22d0xe0
prev = {'0x1c6'}, next = {}
----------------------------------
Block 0x22d0xe0
0x2310xe0: RETURNPRIVATE ve0arg0
----------------------------------

Begin block 0x22d0x25a
prev = {'0x265'}, next = {}
----------------------------------
Block 0x22d0x25a
0x2310x25a: RETURNPRIVATE v25aarg3
----------------------------------

Begin block 0x232
prev = {'0x8a'}, next = {'0x92'}
----------------------------------
Block 0x232
0x233: v233(0x0) = CONST 
0x235: v235 = SLOAD v233(0x0)
0x236: v236(0xff) = CONST 
0x238: v238 = AND v236(0xff) v235
0x23a: JUMP v8b(0x92)
----------------------------------

Begin block 0x23b
prev = {'0xa6'}, next = {'0xae0xa6'}
----------------------------------
Block 0x23b
0x23c: v23c(0x33b2e3cb548ff197d3905a0) = CONST 
0x24a: JUMP va7(0xae)
----------------------------------

Begin block 0x24b
prev = {'0xc0'}, next = {'0xae0xc0'}
----------------------------------
Block 0x24b
0x24c: v24c(0x6342fd08f00f6378000000) = CONST 
0x259: JUMP vc1(0xae)
----------------------------------

Begin block 0x25a
prev = {}, next = {'0x2ac'}
----------------------------------
function 0x25a(v25aarg0, v25aarg1, v25aarg2, v25aarg3)
Block 0x25a
0x25b: v25b(0x265) = CONST 
0x261: v261(0x2ac) = CONST 
0x264: JUMP v261(0x2ac)
----------------------------------

Begin block 0x265
prev = {'0x2ac'}, next = {'0x22d0x25a', '0x26a'}
----------------------------------
Block 0x265
0x266: v266(0x22d) = CONST 
0x269: JUMPI v266(0x22d) v2bb
----------------------------------

Begin block 0x26a
prev = {'0x265'}, next = {}
----------------------------------
Block 0x26a
0x26a: v26a(0x40) = CONST 
0x26d: v26d = MLOAD v26a(0x40)
0x26e: v26e(0x461bcd) = CONST 
0x272: v272(0xe5) = CONST 
0x274: v274(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v272(0xe5) v26e(0x461bcd)
0x276: MSTORE v26d v274(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x277: v277(0x20) = CONST 
0x279: v279(0x4) = CONST 
0x27c: v27c = ADD v26d v279(0x4)
0x27d: MSTORE v27c v277(0x20)
0x27e: v27e(0x13) = CONST 
0x280: v280(0x24) = CONST 
0x283: v283 = ADD v26d v280(0x24)
0x284: MSTORE v283 v27e(0x13)
0x285: v285(0x191ccb595e1958cb58d85b1b0b59985a5b1959) = CONST 
0x299: v299(0x6a) = CONST 
0x29b: v29b(0x64732d657865632d63616c6c2d6661696c656400000000000000000000000000) = SHL v299(0x6a) v285(0x191ccb595e1958cb58d85b1b0b59985a5b1959)
0x29c: v29c(0x44) = CONST 
0x29f: v29f = ADD v26d v29c(0x44)
0x2a0: MSTORE v29f v29b(0x64732d657865632d63616c6c2d6661696c656400000000000000000000000000)
0x2a2: v2a2 = MLOAD v26a(0x40)
0x2a6: v2a6 = SUB v26d v2a2
0x2a7: v2a7(0x64) = CONST 
0x2a9: v2a9 = ADD v2a7(0x64) v2a6
0x2ab: REVERT v2a2 v2a9
----------------------------------

Begin block 0x2ac
prev = {'0x25a'}, next = {'0x265'}
----------------------------------
Block 0x2ac
0x2ad: v2ad(0x0) = CONST 
0x2b0: v2b0(0x0) = CONST 
0x2b3: v2b3 = MLOAD v25aarg1
0x2b4: v2b4(0x20) = CONST 
0x2b7: v2b7 = ADD v25aarg1 v2b4(0x20)
0x2ba: v2ba = GAS 
0x2bb: v2bb = CALL v2ba v25aarg2 v25aarg0 v2b7 v2b3 v2b0(0x0) v2ad(0x0)
0x2c2: JUMP v25b(0x265)
----------------------------------

Begin block 0x304
prev = {'0x4c', '0x10'}, next = {}
----------------------------------
Block 0x304
0x305: v305(0x57) = CONST 
0x306: CALLPRIVATE v305(0x57)
----------------------------------

Begin block 0x307
prev = {'0x1a'}, next = {}
----------------------------------
Block 0x307
0x308: v308(0x5c) = CONST 
0x309: CALLPRIVATE v308(0x5c)
----------------------------------

Begin block 0x30a
prev = {'0x2b'}, next = {}
----------------------------------
Block 0x30a
0x30b: v30b(0x80) = CONST 
0x30c: CALLPRIVATE v30b(0x80)
----------------------------------

Begin block 0x30d
prev = {'0x36'}, next = {}
----------------------------------
Block 0x30d
0x30e: v30e(0x8a) = CONST 
0x30f: CALLPRIVATE v30e(0x8a)
----------------------------------

Begin block 0x310
prev = {'0x41'}, next = {}
----------------------------------
Block 0x310
0x311: v311(0xa6) = CONST 
0x312: CALLPRIVATE v311(0xa6)
----------------------------------

Begin block 0x313
prev = {'0x4c'}, next = {}
----------------------------------
Block 0x313
0x314: v314(0xc0) = CONST 
0x315: CALLPRIVATE v314(0xc0)
----------------------------------
