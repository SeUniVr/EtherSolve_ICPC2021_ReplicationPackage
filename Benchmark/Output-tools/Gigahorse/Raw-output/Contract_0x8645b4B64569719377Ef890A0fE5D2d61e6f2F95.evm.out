
Begin block 0x0
prev = {}, next = {'0xd', '0x426'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x420: v420(0x426) = CONST 
0x421: JUMPI v420(0x426) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x41', '0x429'}
----------------------------------
Block 0xd
0xd: vd(0x0) = CONST 
0xf: vf = CALLDATALOAD vd(0x0)
0x10: v10(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x2f: v2f = DIV vf v10(0x100000000000000000000000000000000000000000000000000000000)
0x30: v30(0xffffffff) = CONST 
0x35: v35 = AND v30(0xffffffff) v2f
0x37: v37(0xaf294a36) = CONST 
0x3c: v3c = EQ v37(0xaf294a36) v35
0x422: v422(0x429) = CONST 
0x423: JUMPI v422(0x429) v3c
----------------------------------

Begin block 0x41
prev = {'0xd'}, next = {'0x42c', '0x426'}
----------------------------------
Block 0x41
0x42: v42(0xf121e5e7) = CONST 
0x47: v47 = EQ v42(0xf121e5e7) v35
0x424: v424(0x42c) = CONST 
0x425: JUMPI v424(0x42c) v47
----------------------------------

Begin block 0x4c
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x4c
0x4d: v4d(0x0) = CONST 
0x50: REVERT v4d(0x0) v4d(0x0)
----------------------------------

Begin block 0x51
prev = {}, next = {'0x59', '0x5d'}
----------------------------------
function 0xaf294a36()
Block 0x51
0x52: v52 = CALLVALUE 
0x54: v54 = ISZERO v52
0x55: v55(0x5d) = CONST 
0x58: JUMPI v55(0x5d) v54
----------------------------------

Begin block 0x59
prev = {'0x51'}, next = {}
----------------------------------
Block 0x59
0x59: v59(0x0) = CONST 
0x5c: REVERT v59(0x0) v59(0x0)
----------------------------------

Begin block 0x5d
prev = {'0x51'}, next = {'0x9a'}
----------------------------------
Block 0x5d
0x5f: v5f(0x66) = CONST 
0x62: v62(0x9a) = CONST 
0x65: JUMP v62(0x9a)
----------------------------------

Begin block 0x66
prev = {'0x1fe'}, next = {}
----------------------------------
Block 0x66
0x67: v67(0x40) = CONST 
0x69: v69 = MLOAD v67(0x40)
0x6d: MSTORE v69 v204
0x6e: v6e(0x20) = CONST 
0x70: v70 = ADD v6e(0x20) v69
0x74: v74(0x40) = CONST 
0x76: v76 = MLOAD v74(0x40)
0x79: v79 = SUB v70 v76
0x7b: RETURN v76 v79
----------------------------------

Begin block 0x7c
prev = {}, next = {'0x219'}
----------------------------------
function 0xf121e5e7()
Block 0x7c
0x7d: v7d(0x84) = CONST 
0x80: v80(0x219) = CONST 
0x83: JUMP v80(0x219)
----------------------------------

Begin block 0x84
prev = {'0x3d9'}, next = {}
----------------------------------
Block 0x84
0x85: v85(0x40) = CONST 
0x87: v87 = MLOAD v85(0x40)
0x8b: MSTORE v87 v2e8
0x8c: v8c(0x20) = CONST 
0x8e: v8e = ADD v8c(0x20) v87
0x92: v92(0x40) = CONST 
0x94: v94 = MLOAD v92(0x40)
0x97: v97 = SUB v8e v94
0x99: RETURN v94 v97
----------------------------------

Begin block 0x9a
prev = {'0x5d'}, next = {'0x1d0', '0x1d4'}
----------------------------------
Block 0x9a
0x9b: v9b(0x0) = CONST 
0x9e: v9e(0x0) = CONST 
0xa0: va0(0x8316b082621cfedab95bf4a44a1d4b64a6ffc336) = CONST 
0xb8: vb8(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xcd: vcd(0x8316b082621cfedab95bf4a44a1d4b64a6ffc336) = AND vb8(0xffffffffffffffffffffffffffffffffffffffff) va0(0x8316b082621cfedab95bf4a44a1d4b64a6ffc336)
0xce: vce(0x667e9394) = CONST 
0xd3: vd3(0x5f5e100) = CONST 
0xd8: vd8(0x40) = CONST 
0xda: vda = MLOAD vd8(0x40)
0xdc: vdc(0xffffffff) = CONST 
0xe1: ve1(0x667e9394) = AND vdc(0xffffffff) vce(0x667e9394)
0xe2: ve2(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x100: v100(0x667e939400000000000000000000000000000000000000000000000000000000) = MUL ve2(0x100000000000000000000000000000000000000000000000000000000) ve1(0x667e9394)
0x102: MSTORE vda v100(0x667e939400000000000000000000000000000000000000000000000000000000)
0x103: v103(0x4) = CONST 
0x105: v105 = ADD v103(0x4) vda
0x108: v108(0x20) = CONST 
0x10a: v10a = ADD v108(0x20) v105
0x10c: v10c(0x20) = CONST 
0x10e: v10e = ADD v10c(0x20) v10a
0x110: v110(0x20) = CONST 
0x112: v112 = ADD v110(0x20) v10e
0x115: MSTORE v112 vd3(0x5f5e100)
0x116: v116(0x20) = CONST 
0x118: v118 = ADD v116(0x20) v112
0x11b: v11b = SUB v118 v105
0x11d: MSTORE v105 v11b
0x11e: v11e(0x3) = CONST 
0x121: MSTORE v118 v11e(0x3)
0x122: v122(0x20) = CONST 
0x124: v124 = ADD v122(0x20) v118
0x126: v126(0x4554480000000000000000000000000000000000000000000000000000000000) = CONST 
0x148: MSTORE v124 v126(0x4554480000000000000000000000000000000000000000000000000000000000)
0x14a: v14a(0x20) = CONST 
0x14c: v14c = ADD v14a(0x20) v124
0x14f: v14f = SUB v14c v105
0x151: MSTORE v10a v14f
0x152: v152(0x3) = CONST 
0x155: MSTORE v14c v152(0x3)
0x156: v156(0x20) = CONST 
0x158: v158 = ADD v156(0x20) v14c
0x15a: v15a(0x4441490000000000000000000000000000000000000000000000000000000000) = CONST 
0x17c: MSTORE v158 v15a(0x4441490000000000000000000000000000000000000000000000000000000000)
0x17e: v17e(0x20) = CONST 
0x180: v180 = ADD v17e(0x20) v158
0x183: v183 = SUB v180 v105
0x185: MSTORE v10e v183
0x186: v186(0x7) = CONST 
0x189: MSTORE v180 v186(0x7)
0x18a: v18a(0x20) = CONST 
0x18c: v18c = ADD v18a(0x20) v180
0x18e: v18e(0x44454641554c5400000000000000000000000000000000000000000000000000) = CONST 
0x1b0: MSTORE v18c v18e(0x44454641554c5400000000000000000000000000000000000000000000000000)
0x1b2: v1b2(0x20) = CONST 
0x1b4: v1b4 = ADD v1b2(0x20) v18c
0x1bb: v1bb(0x20) = CONST 
0x1bd: v1bd(0x40) = CONST 
0x1bf: v1bf = MLOAD v1bd(0x40)
0x1c2: v1c2 = SUB v1b4 v1bf
0x1c4: v1c4(0x0) = CONST 
0x1c8: v1c8 = EXTCODESIZE vcd(0x8316b082621cfedab95bf4a44a1d4b64a6ffc336)
0x1c9: v1c9 = ISZERO v1c8
0x1cb: v1cb = ISZERO v1c9
0x1cc: v1cc(0x1d4) = CONST 
0x1cf: JUMPI v1cc(0x1d4) v1cb
----------------------------------

Begin block 0x1d0
prev = {'0x9a'}, next = {}
----------------------------------
Block 0x1d0
0x1d0: v1d0(0x0) = CONST 
0x1d3: REVERT v1d0(0x0) v1d0(0x0)
----------------------------------

Begin block 0x1d4
prev = {'0x9a'}, next = {'0x1e8', '0x1df'}
----------------------------------
Block 0x1d4
0x1d6: v1d6 = GAS 
0x1d7: v1d7 = CALL v1d6 vcd(0x8316b082621cfedab95bf4a44a1d4b64a6ffc336) v1c4(0x0) v1bf v1c2 v1bf v1bb(0x20)
0x1d8: v1d8 = ISZERO v1d7
0x1da: v1da = ISZERO v1d8
0x1db: v1db(0x1e8) = CONST 
0x1de: JUMPI v1db(0x1e8) v1da
----------------------------------

Begin block 0x1df
prev = {'0x1d4'}, next = {}
----------------------------------
Block 0x1df
0x1df: v1df = RETURNDATASIZE 
0x1e0: v1e0(0x0) = CONST 
0x1e3: RETURNDATACOPY v1e0(0x0) v1e0(0x0) v1df
0x1e4: v1e4 = RETURNDATASIZE 
0x1e5: v1e5(0x0) = CONST 
0x1e7: REVERT v1e5(0x0) v1e4
----------------------------------

Begin block 0x1e8
prev = {'0x1d4'}, next = {'0x1fe', '0x1fa'}
----------------------------------
Block 0x1e8
0x1ed: v1ed(0x40) = CONST 
0x1ef: v1ef = MLOAD v1ed(0x40)
0x1f0: v1f0 = RETURNDATASIZE 
0x1f1: v1f1(0x20) = CONST 
0x1f4: v1f4 = LT v1f0 v1f1(0x20)
0x1f5: v1f5 = ISZERO v1f4
0x1f6: v1f6(0x1fe) = CONST 
0x1f9: JUMPI v1f6(0x1fe) v1f5
----------------------------------

Begin block 0x1fa
prev = {'0x1e8'}, next = {}
----------------------------------
Block 0x1fa
0x1fa: v1fa(0x0) = CONST 
0x1fd: REVERT v1fa(0x0) v1fa(0x0)
----------------------------------

Begin block 0x1fe
prev = {'0x1e8'}, next = {'0x66'}
----------------------------------
Block 0x1fe
0x200: v200 = ADD v1ef v1f0
0x204: v204 = MLOAD v1ef
0x206: v206(0x20) = CONST 
0x208: v208 = ADD v206(0x20) v1ef
0x218: JUMP v5f(0x66)
----------------------------------

Begin block 0x219
prev = {'0x7c'}, next = {'0x2b7', '0x2b3'}
----------------------------------
Block 0x219
0x21a: v21a(0x0) = CONST 
0x21d: v21d(0x0) = CONST 
0x220: v220(0x0) = CONST 
0x223: v223(0x2a1530c4c41db0b0b2bb646cb5eb1a67b7158667) = CONST 
0x23d: v23d = CALLVALUE 
0x241: v241(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x256: v256(0x2a1530c4c41db0b0b2bb646cb5eb1a67b7158667) = AND v241(0xffffffffffffffffffffffffffffffffffffffff) v223(0x2a1530c4c41db0b0b2bb646cb5eb1a67b7158667)
0x257: v257(0xf39b5b9b) = CONST 
0x25d: v25d(0x1) = CONST 
0x25f: v25f = TIMESTAMP 
0x260: v260(0x40) = CONST 
0x262: v262 = MLOAD v260(0x40)
0x264: v264(0xffffffff) = CONST 
0x269: v269(0xf39b5b9b) = AND v264(0xffffffff) v257(0xf39b5b9b)
0x26a: v26a(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x288: v288(0xf39b5b9b00000000000000000000000000000000000000000000000000000000) = MUL v26a(0x100000000000000000000000000000000000000000000000000000000) v269(0xf39b5b9b)
0x28a: MSTORE v262 v288(0xf39b5b9b00000000000000000000000000000000000000000000000000000000)
0x28b: v28b(0x4) = CONST 
0x28d: v28d = ADD v28b(0x4) v262
0x291: MSTORE v28d v25d(0x1)
0x292: v292(0x20) = CONST 
0x294: v294 = ADD v292(0x20) v28d
0x297: MSTORE v294 v25f
0x298: v298(0x20) = CONST 
0x29a: v29a = ADD v298(0x20) v294
0x29f: v29f(0x20) = CONST 
0x2a1: v2a1(0x40) = CONST 
0x2a3: v2a3 = MLOAD v2a1(0x40)
0x2a6: v2a6 = SUB v29a v2a3
0x2ab: v2ab = EXTCODESIZE v256(0x2a1530c4c41db0b0b2bb646cb5eb1a67b7158667)
0x2ac: v2ac = ISZERO v2ab
0x2ae: v2ae = ISZERO v2ac
0x2af: v2af(0x2b7) = CONST 
0x2b2: JUMPI v2af(0x2b7) v2ae
----------------------------------

Begin block 0x2b3
prev = {'0x219'}, next = {}
----------------------------------
Block 0x2b3
0x2b3: v2b3(0x0) = CONST 
0x2b6: REVERT v2b3(0x0) v2b3(0x0)
----------------------------------

Begin block 0x2b7
prev = {'0x219'}, next = {'0x2cb', '0x2c2'}
----------------------------------
Block 0x2b7
0x2b9: v2b9 = GAS 
0x2ba: v2ba = CALL v2b9 v256(0x2a1530c4c41db0b0b2bb646cb5eb1a67b7158667) v23d v2a3 v2a6 v2a3 v29f(0x20)
0x2bb: v2bb = ISZERO v2ba
0x2bd: v2bd = ISZERO v2bb
0x2be: v2be(0x2cb) = CONST 
0x2c1: JUMPI v2be(0x2cb) v2bd
----------------------------------

Begin block 0x2c2
prev = {'0x2b7'}, next = {}
----------------------------------
Block 0x2c2
0x2c2: v2c2 = RETURNDATASIZE 
0x2c3: v2c3(0x0) = CONST 
0x2c6: RETURNDATACOPY v2c3(0x0) v2c3(0x0) v2c2
0x2c7: v2c7 = RETURNDATASIZE 
0x2c8: v2c8(0x0) = CONST 
0x2ca: REVERT v2c8(0x0) v2c7
----------------------------------

Begin block 0x2cb
prev = {'0x2b7'}, next = {'0x2e2', '0x2de'}
----------------------------------
Block 0x2cb
0x2d1: v2d1(0x40) = CONST 
0x2d3: v2d3 = MLOAD v2d1(0x40)
0x2d4: v2d4 = RETURNDATASIZE 
0x2d5: v2d5(0x20) = CONST 
0x2d8: v2d8 = LT v2d4 v2d5(0x20)
0x2d9: v2d9 = ISZERO v2d8
0x2da: v2da(0x2e2) = CONST 
0x2dd: JUMPI v2da(0x2e2) v2d9
----------------------------------

Begin block 0x2de
prev = {'0x2cb'}, next = {}
----------------------------------
Block 0x2de
0x2de: v2de(0x0) = CONST 
0x2e1: REVERT v2de(0x0) v2de(0x0)
----------------------------------

Begin block 0x2e2
prev = {'0x2cb'}, next = {'0x3ab', '0x3af'}
----------------------------------
Block 0x2e2
0x2e4: v2e4 = ADD v2d3 v2d4
0x2e8: v2e8 = MLOAD v2d3
0x2ea: v2ea(0x20) = CONST 
0x2ec: v2ec = ADD v2ea(0x20) v2d3
0x2f6: v2f6(0x6b175474e89094c44da98b954eedeac495271d0f) = CONST 
0x30e: v30e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x323: v323(0x6b175474e89094c44da98b954eedeac495271d0f) = AND v30e(0xffffffffffffffffffffffffffffffffffffffff) v2f6(0x6b175474e89094c44da98b954eedeac495271d0f)
0x324: v324(0xa9059cbb) = CONST 
0x329: v329 = CALLER 
0x32b: v32b(0x40) = CONST 
0x32d: v32d = MLOAD v32b(0x40)
0x32f: v32f(0xffffffff) = CONST 
0x334: v334(0xa9059cbb) = AND v32f(0xffffffff) v324(0xa9059cbb)
0x335: v335(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x353: v353(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = MUL v335(0x100000000000000000000000000000000000000000000000000000000) v334(0xa9059cbb)
0x355: MSTORE v32d v353(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0x356: v356(0x4) = CONST 
0x358: v358 = ADD v356(0x4) v32d
0x35b: v35b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x370: v370 = AND v35b(0xffffffffffffffffffffffffffffffffffffffff) v329
0x371: v371(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x386: v386 = AND v371(0xffffffffffffffffffffffffffffffffffffffff) v370
0x388: MSTORE v358 v386
0x389: v389(0x20) = CONST 
0x38b: v38b = ADD v389(0x20) v358
0x38e: MSTORE v38b v2e8
0x38f: v38f(0x20) = CONST 
0x391: v391 = ADD v38f(0x20) v38b
0x396: v396(0x20) = CONST 
0x398: v398(0x40) = CONST 
0x39a: v39a = MLOAD v398(0x40)
0x39d: v39d = SUB v391 v39a
0x39f: v39f(0x0) = CONST 
0x3a3: v3a3 = EXTCODESIZE v323(0x6b175474e89094c44da98b954eedeac495271d0f)
0x3a4: v3a4 = ISZERO v3a3
0x3a6: v3a6 = ISZERO v3a4
0x3a7: v3a7(0x3af) = CONST 
0x3aa: JUMPI v3a7(0x3af) v3a6
----------------------------------

Begin block 0x3ab
prev = {'0x2e2'}, next = {}
----------------------------------
Block 0x3ab
0x3ab: v3ab(0x0) = CONST 
0x3ae: REVERT v3ab(0x0) v3ab(0x0)
----------------------------------

Begin block 0x3af
prev = {'0x2e2'}, next = {'0x3ba', '0x3c3'}
----------------------------------
Block 0x3af
0x3b1: v3b1 = GAS 
0x3b2: v3b2 = CALL v3b1 v323(0x6b175474e89094c44da98b954eedeac495271d0f) v39f(0x0) v39a v39d v39a v396(0x20)
0x3b3: v3b3 = ISZERO v3b2
0x3b5: v3b5 = ISZERO v3b3
0x3b6: v3b6(0x3c3) = CONST 
0x3b9: JUMPI v3b6(0x3c3) v3b5
----------------------------------

Begin block 0x3ba
prev = {'0x3af'}, next = {}
----------------------------------
Block 0x3ba
0x3ba: v3ba = RETURNDATASIZE 
0x3bb: v3bb(0x0) = CONST 
0x3be: RETURNDATACOPY v3bb(0x0) v3bb(0x0) v3ba
0x3bf: v3bf = RETURNDATASIZE 
0x3c0: v3c0(0x0) = CONST 
0x3c2: REVERT v3c0(0x0) v3bf
----------------------------------

Begin block 0x3c3
prev = {'0x3af'}, next = {'0x3d9', '0x3d5'}
----------------------------------
Block 0x3c3
0x3c8: v3c8(0x40) = CONST 
0x3ca: v3ca = MLOAD v3c8(0x40)
0x3cb: v3cb = RETURNDATASIZE 
0x3cc: v3cc(0x20) = CONST 
0x3cf: v3cf = LT v3cb v3cc(0x20)
0x3d0: v3d0 = ISZERO v3cf
0x3d1: v3d1(0x3d9) = CONST 
0x3d4: JUMPI v3d1(0x3d9) v3d0
----------------------------------

Begin block 0x3d5
prev = {'0x3c3'}, next = {}
----------------------------------
Block 0x3d5
0x3d5: v3d5(0x0) = CONST 
0x3d8: REVERT v3d5(0x0) v3d5(0x0)
----------------------------------

Begin block 0x3d9
prev = {'0x3c3'}, next = {'0x84'}
----------------------------------
Block 0x3d9
0x3db: v3db = ADD v3ca v3cb
0x3df: v3df = MLOAD v3ca
0x3e1: v3e1(0x20) = CONST 
0x3e3: v3e3 = ADD v3e1(0x20) v3ca
0x3f5: JUMP v7d(0x84)
----------------------------------

Begin block 0x426
prev = {'0x0', '0x41'}, next = {}
----------------------------------
Block 0x426
0x427: v427(0x4c) = CONST 
0x428: CALLPRIVATE v427(0x4c)
----------------------------------

Begin block 0x429
prev = {'0xd'}, next = {}
----------------------------------
Block 0x429
0x42a: v42a(0x51) = CONST 
0x42b: CALLPRIVATE v42a(0x51)
----------------------------------

Begin block 0x42c
prev = {'0x41'}, next = {}
----------------------------------
Block 0x42c
0x42d: v42d(0x7c) = CONST 
0x42e: CALLPRIVATE v42d(0x7c)
----------------------------------
