
Begin block 0x0
prev = {}, next = {'0xc', '0x10'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x1a', '0x1601'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x15cb: v15cb(0x1601) = CONST 
0x15cc: JUMPI v15cb(0x1601) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x2b', '0xde'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x8f32d59b) = CONST 
0x26: v26 = GT v21(0x8f32d59b) v1f
0x27: v27(0xde) = CONST 
0x2a: JUMPI v27(0xde) v26
----------------------------------

Begin block 0x2b
prev = {'0x1a'}, next = {'0x97', '0x36'}
----------------------------------
Block 0x2b
0x2c: v2c(0xbec3fa17) = CONST 
0x31: v31 = GT v2c(0xbec3fa17) v1f
0x32: v32(0x97) = CONST 
0x35: JUMPI v32(0x97) v31
----------------------------------

Begin block 0x36
prev = {'0x2b'}, next = {'0x71', '0x41'}
----------------------------------
Block 0x36
0x37: v37(0xdd62ed3e) = CONST 
0x3c: v3c = GT v37(0xdd62ed3e) v1f
0x3d: v3d(0x71) = CONST 
0x40: JUMPI v3d(0x71) v3c
----------------------------------

Begin block 0x41
prev = {'0x36'}, next = {'0x1646', '0x4c'}
----------------------------------
Block 0x41
0x42: v42(0xdd62ed3e) = CONST 
0x47: v47 = EQ v42(0xdd62ed3e) v1f
0x15cd: v15cd(0x1646) = CONST 
0x15ce: JUMPI v15cd(0x1646) v47
----------------------------------

Begin block 0x4c
prev = {'0x41'}, next = {'0x1649', '0x57'}
----------------------------------
Block 0x4c
0x4d: v4d(0xf2fde38b) = CONST 
0x52: v52 = EQ v4d(0xf2fde38b) v1f
0x15cf: v15cf(0x1649) = CONST 
0x15d0: JUMPI v15cf(0x1649) v52
----------------------------------

Begin block 0x57
prev = {'0x4c'}, next = {'0x164c', '0x62'}
----------------------------------
Block 0x57
0x58: v58(0xf3d9bc65) = CONST 
0x5d: v5d = EQ v58(0xf3d9bc65) v1f
0x15d1: v15d1(0x164c) = CONST 
0x15d2: JUMPI v15d1(0x164c) v5d
----------------------------------

Begin block 0x62
prev = {'0x57'}, next = {'0x164f', '0x6d'}
----------------------------------
Block 0x62
0x63: v63(0xf439d721) = CONST 
0x68: v68 = EQ v63(0xf439d721) v1f
0x15d3: v15d3(0x164f) = CONST 
0x15d4: JUMPI v15d3(0x164f) v68
----------------------------------

Begin block 0x6d
prev = {'0x62'}, next = {'0x18e0x0'}
----------------------------------
Block 0x6d
0x6d: v6d(0x18e) = CONST 
0x70: JUMP v6d(0x18e)
----------------------------------

Begin block 0x71
prev = {'0x36'}, next = {'0x163d', '0x7d'}
----------------------------------
Block 0x71
0x73: v73(0xbec3fa17) = CONST 
0x78: v78 = EQ v73(0xbec3fa17) v1f
0x15d5: v15d5(0x163d) = CONST 
0x15d6: JUMPI v15d5(0x163d) v78
----------------------------------

Begin block 0x7d
prev = {'0x71'}, next = {'0x88', '0x1640'}
----------------------------------
Block 0x7d
0x7e: v7e(0xccd331bf) = CONST 
0x83: v83 = EQ v7e(0xccd331bf) v1f
0x15d7: v15d7(0x1640) = CONST 
0x15d8: JUMPI v15d7(0x1640) v83
----------------------------------

Begin block 0x88
prev = {'0x7d'}, next = {'0x1643', '0x93'}
----------------------------------
Block 0x88
0x89: v89(0xd8b66ae1) = CONST 
0x8e: v8e = EQ v89(0xd8b66ae1) v1f
0x15d9: v15d9(0x1643) = CONST 
0x15da: JUMPI v15d9(0x1643) v8e
----------------------------------

Begin block 0x93
prev = {'0x88'}, next = {'0x18e0x0'}
----------------------------------
Block 0x93
0x93: v93(0x18e) = CONST 
0x96: JUMP v93(0x18e)
----------------------------------

Begin block 0x97
prev = {'0x2b'}, next = {'0x162b', '0xa3'}
----------------------------------
Block 0x97
0x99: v99(0x8f32d59b) = CONST 
0x9e: v9e = EQ v99(0x8f32d59b) v1f
0x15db: v15db(0x162b) = CONST 
0x15dc: JUMPI v15db(0x162b) v9e
----------------------------------

Begin block 0xa3
prev = {'0x97'}, next = {'0xae', '0x162e'}
----------------------------------
Block 0xa3
0xa4: va4(0x95d89b41) = CONST 
0xa9: va9 = EQ va4(0x95d89b41) v1f
0x15dd: v15dd(0x162e) = CONST 
0x15de: JUMPI v15dd(0x162e) va9
----------------------------------

Begin block 0xae
prev = {'0xa3'}, next = {'0xb9', '0x1631'}
----------------------------------
Block 0xae
0xaf: vaf(0xa457c2d7) = CONST 
0xb4: vb4 = EQ vaf(0xa457c2d7) v1f
0x15df: v15df(0x1631) = CONST 
0x15e0: JUMPI v15df(0x1631) vb4
----------------------------------

Begin block 0xb9
prev = {'0xae'}, next = {'0x1634', '0xc4'}
----------------------------------
Block 0xb9
0xba: vba(0xa45cbbf4) = CONST 
0xbf: vbf = EQ vba(0xa45cbbf4) v1f
0x15e1: v15e1(0x1634) = CONST 
0x15e2: JUMPI v15e1(0x1634) vbf
----------------------------------

Begin block 0xc4
prev = {'0xb9'}, next = {'0xcf', '0x1637'}
----------------------------------
Block 0xc4
0xc5: vc5(0xa9059cbb) = CONST 
0xca: vca = EQ vc5(0xa9059cbb) v1f
0x15e3: v15e3(0x1637) = CONST 
0x15e4: JUMPI v15e3(0x1637) vca
----------------------------------

Begin block 0xcf
prev = {'0xc4'}, next = {'0x163a', '0xda'}
----------------------------------
Block 0xcf
0xd0: vd0(0xab18af27) = CONST 
0xd5: vd5 = EQ vd0(0xab18af27) v1f
0x15e5: v15e5(0x163a) = CONST 
0x15e6: JUMPI v15e5(0x163a) vd5
----------------------------------

Begin block 0xda
prev = {'0xcf'}, next = {'0x18e0x0'}
----------------------------------
Block 0xda
0xda: vda(0x18e) = CONST 
0xdd: JUMP vda(0x18e)
----------------------------------

Begin block 0xde
prev = {'0x1a'}, next = {'0xea', '0x14b'}
----------------------------------
Block 0xde
0xe0: ve0(0x28f833b7) = CONST 
0xe5: ve5 = GT ve0(0x28f833b7) v1f
0xe6: ve6(0x14b) = CONST 
0xe9: JUMPI ve6(0x14b) ve5
----------------------------------

Begin block 0xea
prev = {'0xde'}, next = {'0x125', '0xf5'}
----------------------------------
Block 0xea
0xeb: veb(0x70439385) = CONST 
0xf0: vf0 = GT veb(0x70439385) v1f
0xf1: vf1(0x125) = CONST 
0xf4: JUMPI vf1(0x125) vf0
----------------------------------

Begin block 0xf5
prev = {'0xea'}, next = {'0x161f', '0x100'}
----------------------------------
Block 0xf5
0xf6: vf6(0x70439385) = CONST 
0xfb: vfb = EQ vf6(0x70439385) v1f
0x15e7: v15e7(0x161f) = CONST 
0x15e8: JUMPI v15e7(0x161f) vfb
----------------------------------

Begin block 0x100
prev = {'0xf5'}, next = {'0x10b', '0x1622'}
----------------------------------
Block 0x100
0x101: v101(0x70a08231) = CONST 
0x106: v106 = EQ v101(0x70a08231) v1f
0x15e9: v15e9(0x1622) = CONST 
0x15ea: JUMPI v15e9(0x1622) v106
----------------------------------

Begin block 0x10b
prev = {'0x100'}, next = {'0x1625', '0x116'}
----------------------------------
Block 0x10b
0x10c: v10c(0x715018a6) = CONST 
0x111: v111 = EQ v10c(0x715018a6) v1f
0x15eb: v15eb(0x1625) = CONST 
0x15ec: JUMPI v15eb(0x1625) v111
----------------------------------

Begin block 0x116
prev = {'0x10b'}, next = {'0x121', '0x1628'}
----------------------------------
Block 0x116
0x117: v117(0x8da5cb5b) = CONST 
0x11c: v11c = EQ v117(0x8da5cb5b) v1f
0x15ed: v15ed(0x1628) = CONST 
0x15ee: JUMPI v15ed(0x1628) v11c
----------------------------------

Begin block 0x121
prev = {'0x116'}, next = {'0x18e0x0'}
----------------------------------
Block 0x121
0x121: v121(0x18e) = CONST 
0x124: JUMP v121(0x18e)
----------------------------------

Begin block 0x125
prev = {'0xea'}, next = {'0x131', '0x1616'}
----------------------------------
Block 0x125
0x127: v127(0x28f833b7) = CONST 
0x12c: v12c = EQ v127(0x28f833b7) v1f
0x15ef: v15ef(0x1616) = CONST 
0x15f0: JUMPI v15ef(0x1616) v12c
----------------------------------

Begin block 0x131
prev = {'0x125'}, next = {'0x13c', '0x1619'}
----------------------------------
Block 0x131
0x132: v132(0x313ce567) = CONST 
0x137: v137 = EQ v132(0x313ce567) v1f
0x15f1: v15f1(0x1619) = CONST 
0x15f2: JUMPI v15f1(0x1619) v137
----------------------------------

Begin block 0x13c
prev = {'0x131'}, next = {'0x161c', '0x147'}
----------------------------------
Block 0x13c
0x13d: v13d(0x39509351) = CONST 
0x142: v142 = EQ v13d(0x39509351) v1f
0x15f3: v15f3(0x161c) = CONST 
0x15f4: JUMPI v15f3(0x161c) v142
----------------------------------

Begin block 0x147
prev = {'0x13c'}, next = {'0x18e0x0'}
----------------------------------
Block 0x147
0x147: v147(0x18e) = CONST 
0x14a: JUMP v147(0x18e)
----------------------------------

Begin block 0x14b
prev = {'0xde'}, next = {'0x157', '0x1604'}
----------------------------------
Block 0x14b
0x14d: v14d(0x6fdde03) = CONST 
0x152: v152 = EQ v14d(0x6fdde03) v1f
0x15f5: v15f5(0x1604) = CONST 
0x15f6: JUMPI v15f5(0x1604) v152
----------------------------------

Begin block 0x157
prev = {'0x14b'}, next = {'0x162', '0x1607'}
----------------------------------
Block 0x157
0x158: v158(0x95ea7b3) = CONST 
0x15d: v15d = EQ v158(0x95ea7b3) v1f
0x15f7: v15f7(0x1607) = CONST 
0x15f8: JUMPI v15f7(0x1607) v15d
----------------------------------

Begin block 0x162
prev = {'0x157'}, next = {'0x160a', '0x16d'}
----------------------------------
Block 0x162
0x163: v163(0x1196deda) = CONST 
0x168: v168 = EQ v163(0x1196deda) v1f
0x15f9: v15f9(0x160a) = CONST 
0x15fa: JUMPI v15f9(0x160a) v168
----------------------------------

Begin block 0x16d
prev = {'0x162'}, next = {'0x178', '0x160d'}
----------------------------------
Block 0x16d
0x16e: v16e(0x1764299f) = CONST 
0x173: v173 = EQ v16e(0x1764299f) v1f
0x15fb: v15fb(0x160d) = CONST 
0x15fc: JUMPI v15fb(0x160d) v173
----------------------------------

Begin block 0x178
prev = {'0x16d'}, next = {'0x183', '0x1610'}
----------------------------------
Block 0x178
0x179: v179(0x18160ddd) = CONST 
0x17e: v17e = EQ v179(0x18160ddd) v1f
0x15fd: v15fd(0x1610) = CONST 
0x15fe: JUMPI v15fd(0x1610) v17e
----------------------------------

Begin block 0x183
prev = {'0x178'}, next = {'0x1613', '0x1601'}
----------------------------------
Block 0x183
0x184: v184(0x23b872dd) = CONST 
0x189: v189 = EQ v184(0x23b872dd) v1f
0x15ff: v15ff(0x1613) = CONST 
0x1600: JUMPI v15ff(0x1613) v189
----------------------------------

Begin block 0x18e
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x18e
0x18f: v18f(0x0) = CONST 
0x192: REVERT v18f(0x0) v18f(0x0)
----------------------------------

Begin block 0x18e0x0
prev = {'0x121', '0x1601', '0x147', '0x6d', '0x93', '0xda'}, next = {}
----------------------------------
Block 0x18e0x0
0x18f0x0: v018f(0x0) = CONST 
0x1920x0: REVERT v018f(0x0) v018f(0x0)
----------------------------------

Begin block 0x193
prev = {}, next = {'0x6b5'}
----------------------------------
function name()()
Block 0x193
0x194: v194(0x19b) = CONST 
0x197: v197(0x6b5) = CONST 
0x19a: JUMP v197(0x6b5)
----------------------------------

Begin block 0x19b0x193
prev = {'0x6b5'}, next = {'0x1bd0x193'}
----------------------------------
Block 0x19b0x193
0x19c0x193: v19319c(0x40) = CONST 
0x19f0x193: v19319f = MLOAD v19319c(0x40)
0x1a00x193: v1931a0(0x20) = CONST 
0x1a40x193: MSTORE v19319f v1931a0(0x20)
0x1a60x193: v1931a6 = MLOAD v6b8
0x1a90x193: v1931a9 = ADD v19319f v1931a0(0x20)
0x1aa0x193: MSTORE v1931a9 v1931a6
0x1ac0x193: v1931ac = MLOAD v6b8
0x1b30x193: v1931b3 = ADD v19319f v19319c(0x40)
0x1b60x193: v1931b6 = ADD v6b8 v1931a0(0x20)
0x1bb0x193: v1931bb(0x0) = CONST 
----------------------------------

Begin block 0x19b0x420
prev = {'0xa9e'}, next = {'0x1bd0x420'}
----------------------------------
Block 0x19b0x420
0x19c0x420: v42019c(0x40) = CONST 
0x19f0x420: v42019f = MLOAD v42019c(0x40)
0x1a00x420: v4201a0(0x20) = CONST 
0x1a40x420: MSTORE v42019f v4201a0(0x20)
0x1a60x420: v4201a6 = MLOAD vaa1
0x1a90x420: v4201a9 = ADD v42019f v4201a0(0x20)
0x1aa0x420: MSTORE v4201a9 v4201a6
0x1ac0x420: v4201ac = MLOAD vaa1
0x1b30x420: v4201b3 = ADD v42019f v42019c(0x40)
0x1b60x420: v4201b6 = ADD vaa1 v4201a0(0x20)
0x1bb0x420: v4201bb(0x0) = CONST 
----------------------------------

Begin block 0x1bd0x193
prev = {'0x1c60x193', '0x19b0x193'}, next = {'0x1c60x193', '0x1d50x193'}
----------------------------------
Block 0x1bd0x193
0x1bd0x193_0x0: v1bd193_0 = PHI v1931bb(0x0) v1931d0
0x1c00x193: v1931c0 = LT v1bd193_0 v1931ac
0x1c10x193: v1931c1 = ISZERO v1931c0
0x1c20x193: v1931c2(0x1d5) = CONST 
0x1c50x193: JUMPI v1931c2(0x1d5) v1931c1
----------------------------------

Begin block 0x1bd0x420
prev = {'0x19b0x420', '0x1c60x420'}, next = {'0x1d50x420', '0x1c60x420'}
----------------------------------
Block 0x1bd0x420
0x1bd0x420_0x0: v1bd420_0 = PHI v4201bb(0x0) v4201d0
0x1c00x420: v4201c0 = LT v1bd420_0 v4201ac
0x1c10x420: v4201c1 = ISZERO v4201c0
0x1c20x420: v4201c2(0x1d5) = CONST 
0x1c50x420: JUMPI v4201c2(0x1d5) v4201c1
----------------------------------

Begin block 0x1c60x193
prev = {'0x1bd0x193'}, next = {'0x1bd0x193'}
----------------------------------
Block 0x1c60x193
0x1c60x193_0x0: v1c6193_0 = PHI v1931bb(0x0) v1931d0
0x1c80x193: v1931c8 = ADD v1c6193_0 v1931b6
0x1c90x193: v1931c9 = MLOAD v1931c8
0x1cc0x193: v1931cc = ADD v1c6193_0 v1931b3
0x1cd0x193: MSTORE v1931cc v1931c9
0x1ce0x193: v1931ce(0x20) = CONST 
0x1d00x193: v1931d0 = ADD v1931ce(0x20) v1c6193_0
0x1d10x193: v1931d1(0x1bd) = CONST 
0x1d40x193: JUMP v1931d1(0x1bd)
----------------------------------

Begin block 0x1c60x420
prev = {'0x1bd0x420'}, next = {'0x1bd0x420'}
----------------------------------
Block 0x1c60x420
0x1c60x420_0x0: v1c6420_0 = PHI v4201bb(0x0) v4201d0
0x1c80x420: v4201c8 = ADD v1c6420_0 v4201b6
0x1c90x420: v4201c9 = MLOAD v4201c8
0x1cc0x420: v4201cc = ADD v1c6420_0 v4201b3
0x1cd0x420: MSTORE v4201cc v4201c9
0x1ce0x420: v4201ce(0x20) = CONST 
0x1d00x420: v4201d0 = ADD v4201ce(0x20) v1c6420_0
0x1d10x420: v4201d1(0x1bd) = CONST 
0x1d40x420: JUMP v4201d1(0x1bd)
----------------------------------

Begin block 0x1d50x193
prev = {'0x1bd0x193'}, next = {'0x1e90x193', '0x2020x193'}
----------------------------------
Block 0x1d50x193
0x1de0x193: v1931de = ADD v1931ac v1931b3
0x1e00x193: v1931e0(0x1f) = CONST 
0x1e20x193: v1931e2 = AND v1931e0(0x1f) v1931ac
0x1e40x193: v1931e4 = ISZERO v1931e2
0x1e50x193: v1931e5(0x202) = CONST 
0x1e80x193: JUMPI v1931e5(0x202) v1931e4
----------------------------------

Begin block 0x1d50x420
prev = {'0x1bd0x420'}, next = {'0x1e90x420', '0x2020x420'}
----------------------------------
Block 0x1d50x420
0x1de0x420: v4201de = ADD v4201ac v4201b3
0x1e00x420: v4201e0(0x1f) = CONST 
0x1e20x420: v4201e2 = AND v4201e0(0x1f) v4201ac
0x1e40x420: v4201e4 = ISZERO v4201e2
0x1e50x420: v4201e5(0x202) = CONST 
0x1e80x420: JUMPI v4201e5(0x202) v4201e4
----------------------------------

Begin block 0x1e90x193
prev = {'0x1d50x193'}, next = {'0x2020x193'}
----------------------------------
Block 0x1e90x193
0x1eb0x193: v1931eb = SUB v1931de v1931e2
0x1ed0x193: v1931ed = MLOAD v1931eb
0x1ee0x193: v1931ee(0x1) = CONST 
0x1f10x193: v1931f1(0x20) = CONST 
0x1f30x193: v1931f3 = SUB v1931f1(0x20) v1931e2
0x1f40x193: v1931f4(0x100) = CONST 
0x1f70x193: v1931f7 = EXP v1931f4(0x100) v1931f3
0x1f80x193: v1931f8 = SUB v1931f7 v1931ee(0x1)
0x1f90x193: v1931f9 = NOT v1931f8
0x1fa0x193: v1931fa = AND v1931f9 v1931ed
0x1fc0x193: MSTORE v1931eb v1931fa
0x1fd0x193: v1931fd(0x20) = CONST 
0x1ff0x193: v1931ff = ADD v1931fd(0x20) v1931eb
----------------------------------

Begin block 0x1e90x420
prev = {'0x1d50x420'}, next = {'0x2020x420'}
----------------------------------
Block 0x1e90x420
0x1eb0x420: v4201eb = SUB v4201de v4201e2
0x1ed0x420: v4201ed = MLOAD v4201eb
0x1ee0x420: v4201ee(0x1) = CONST 
0x1f10x420: v4201f1(0x20) = CONST 
0x1f30x420: v4201f3 = SUB v4201f1(0x20) v4201e2
0x1f40x420: v4201f4(0x100) = CONST 
0x1f70x420: v4201f7 = EXP v4201f4(0x100) v4201f3
0x1f80x420: v4201f8 = SUB v4201f7 v4201ee(0x1)
0x1f90x420: v4201f9 = NOT v4201f8
0x1fa0x420: v4201fa = AND v4201f9 v4201ed
0x1fc0x420: MSTORE v4201eb v4201fa
0x1fd0x420: v4201fd(0x20) = CONST 
0x1ff0x420: v4201ff = ADD v4201fd(0x20) v4201eb
----------------------------------

Begin block 0x2020x193
prev = {'0x1d50x193', '0x1e90x193'}, next = {}
----------------------------------
Block 0x2020x193
0x2020x193_0x1: v202193_1 = PHI v1931de v1931ff
0x2080x193: v193208(0x40) = CONST 
0x20a0x193: v19320a = MLOAD v193208(0x40)
0x20d0x193: v19320d = SUB v202193_1 v19320a
0x20f0x193: RETURN v19320a v19320d
----------------------------------

Begin block 0x2020x420
prev = {'0x1e90x420', '0x1d50x420'}, next = {}
----------------------------------
Block 0x2020x420
0x2020x420_0x1: v202420_1 = PHI v4201de v4201ff
0x2080x420: v420208(0x40) = CONST 
0x20a0x420: v42020a = MLOAD v420208(0x40)
0x20d0x420: v42020d = SUB v202420_1 v42020a
0x20f0x420: RETURN v42020a v42020d
----------------------------------

Begin block 0x210
prev = {}, next = {'0x222', '0x226'}
----------------------------------
function approve(address,uint256)()
Block 0x210
0x211: v211(0x23c) = CONST 
0x214: v214(0x4) = CONST 
0x217: v217 = CALLDATASIZE 
0x218: v218 = SUB v217 v214(0x4)
0x219: v219(0x40) = CONST 
0x21c: v21c = LT v218 v219(0x40)
0x21d: v21d = ISZERO v21c
0x21e: v21e(0x226) = CONST 
0x221: JUMPI v21e(0x226) v21d
----------------------------------

Begin block 0x222
prev = {'0x210'}, next = {}
----------------------------------
Block 0x222
0x222: v222(0x0) = CONST 
0x225: REVERT v222(0x0) v222(0x0)
----------------------------------

Begin block 0x226
prev = {'0x210'}, next = {'0x6e0'}
----------------------------------
Block 0x226
0x228: v228(0x1) = CONST 
0x22a: v22a(0x1) = CONST 
0x22c: v22c(0xa0) = CONST 
0x22e: v22e(0x10000000000000000000000000000000000000000) = SHL v22c(0xa0) v22a(0x1)
0x22f: v22f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v22e(0x10000000000000000000000000000000000000000) v228(0x1)
0x231: v231 = CALLDATALOAD v214(0x4)
0x232: v232 = AND v231 v22f(0xffffffffffffffffffffffffffffffffffffffff)
0x234: v234(0x20) = CONST 
0x236: v236 = ADD v234(0x20) v214(0x4)
0x237: v237 = CALLDATALOAD v236
0x238: v238(0x6e0) = CONST 
0x23b: JUMP v238(0x6e0)
----------------------------------

Begin block 0x23c0x210
prev = {'0x6f10x210'}, next = {}
----------------------------------
Block 0x23c0x210
0x23d0x210: v21023d(0x40) = CONST 
0x2400x210: v210240 = MLOAD v21023d(0x40)
0x2420x210: v210242 = ISZERO v2106ef(0x1)
0x2430x210: v210243 = ISZERO v210242
0x2450x210: MSTORE v210240 v210243
0x2460x210: v210246 = MLOAD v21023d(0x40)
0x24a0x210: v21024a = SUB v210240 v210246
0x24b0x210: v21024b(0x20) = CONST 
0x24d0x210: v21024d = ADD v21024b(0x20) v21024a
0x24f0x210: RETURN v210246 v21024d
----------------------------------

Begin block 0x23c0x34c
prev = {'0x972'}, next = {}
----------------------------------
Block 0x23c0x34c
0x23d0x34c: v34c23d(0x40) = CONST 
0x2400x34c: v34c240 = MLOAD v34c23d(0x40)
0x2420x34c: v34c242 = ISZERO v974(0x1)
0x2430x34c: v34c243 = ISZERO v34c242
0x2450x34c: MSTORE v34c240 v34c243
0x2460x34c: v34c246 = MLOAD v34c23d(0x40)
0x24a0x34c: v34c24a = SUB v34c240 v34c246
0x24b0x34c: v34c24b(0x20) = CONST 
0x24d0x34c: v34c24d = ADD v34c24b(0x20) v34c24a
0x24f0x34c: RETURN v34c246 v34c24d
----------------------------------

Begin block 0x23c0x3ae
prev = {'0x6f10x3ae'}, next = {}
----------------------------------
Block 0x23c0x3ae
0x23d0x3ae: v3ae23d(0x40) = CONST 
0x2400x3ae: v3ae240 = MLOAD v3ae23d(0x40)
0x2420x3ae: v3ae242 = ISZERO v3ae6ef(0x1)
0x2430x3ae: v3ae243 = ISZERO v3ae242
0x2450x3ae: MSTORE v3ae240 v3ae243
0x2460x3ae: v3ae246 = MLOAD v3ae23d(0x40)
0x24a0x3ae: v3ae24a = SUB v3ae240 v3ae246
0x24b0x3ae: v3ae24b(0x20) = CONST 
0x24d0x3ae: v3ae24d = ADD v3ae24b(0x20) v3ae24a
0x24f0x3ae: RETURN v3ae246 v3ae24d
----------------------------------

Begin block 0x23c0x418
prev = {'0x418'}, next = {}
----------------------------------
Block 0x23c0x418
0x23d0x418: v41823d(0x40) = CONST 
0x2400x418: v418240 = MLOAD v41823d(0x40)
0x2420x418: v418242 = ISZERO v41f_0
0x2430x418: v418243 = ISZERO v418242
0x2450x418: MSTORE v418240 v418243
0x2460x418: v418246 = MLOAD v41823d(0x40)
0x24a0x418: v41824a = SUB v418240 v418246
0x24b0x418: v41824b(0x20) = CONST 
0x24d0x418: v41824d = ADD v41824b(0x20) v41824a
0x24f0x418: RETURN v418246 v41824d
----------------------------------

Begin block 0x23c0x428
prev = {'0x6f10x428'}, next = {}
----------------------------------
Block 0x23c0x428
0x23d0x428: v42823d(0x40) = CONST 
0x2400x428: v428240 = MLOAD v42823d(0x40)
0x2420x428: v428242 = ISZERO v4286ef(0x1)
0x2430x428: v428243 = ISZERO v428242
0x2450x428: MSTORE v428240 v428243
0x2460x428: v428246 = MLOAD v42823d(0x40)
0x24a0x428: v42824a = SUB v428240 v428246
0x24b0x428: v42824b(0x20) = CONST 
0x24d0x428: v42824d = ADD v42824b(0x20) v42824a
0x24f0x428: RETURN v428246 v42824d
----------------------------------

Begin block 0x23c0x480
prev = {'0x6f10x480'}, next = {}
----------------------------------
Block 0x23c0x480
0x23d0x480: v48023d(0x40) = CONST 
0x2400x480: v480240 = MLOAD v48023d(0x40)
0x2420x480: v480242 = ISZERO v4806ef(0x1)
0x2430x480: v480243 = ISZERO v480242
0x2450x480: MSTORE v480240 v480243
0x2460x480: v480246 = MLOAD v48023d(0x40)
0x24a0x480: v48024a = SUB v480240 v480246
0x24b0x480: v48024b(0x20) = CONST 
0x24d0x480: v48024d = ADD v48024b(0x20) v48024a
0x24f0x480: RETURN v480246 v48024d
----------------------------------

Begin block 0x250
prev = {}, next = {'0x266', '0x262'}
----------------------------------
function sendTeamTokens(address,uint256)()
Block 0x250
0x251: v251(0x27c) = CONST 
0x254: v254(0x4) = CONST 
0x257: v257 = CALLDATASIZE 
0x258: v258 = SUB v257 v254(0x4)
0x259: v259(0x40) = CONST 
0x25c: v25c = LT v258 v259(0x40)
0x25d: v25d = ISZERO v25c
0x25e: v25e(0x266) = CONST 
0x261: JUMPI v25e(0x266) v25d
----------------------------------

Begin block 0x262
prev = {'0x250'}, next = {}
----------------------------------
Block 0x262
0x262: v262(0x0) = CONST 
0x265: REVERT v262(0x0) v262(0x0)
----------------------------------

Begin block 0x266
prev = {'0x250'}, next = {'0x6f7'}
----------------------------------
Block 0x266
0x268: v268(0x1) = CONST 
0x26a: v26a(0x1) = CONST 
0x26c: v26c(0xa0) = CONST 
0x26e: v26e(0x10000000000000000000000000000000000000000) = SHL v26c(0xa0) v26a(0x1)
0x26f: v26f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v26e(0x10000000000000000000000000000000000000000) v268(0x1)
0x271: v271 = CALLDATALOAD v254(0x4)
0x272: v272 = AND v271 v26f(0xffffffffffffffffffffffffffffffffffffffff)
0x274: v274(0x20) = CONST 
0x276: v276 = ADD v274(0x20) v254(0x4)
0x277: v277 = CALLDATALOAD v276
0x278: v278(0x6f7) = CONST 
0x27b: JUMP v278(0x6f7)
----------------------------------

Begin block 0x27c0x250
prev = {'0x82f0x250'}, next = {}
----------------------------------
Block 0x27c0x250
0x27d0x250: STOP 
----------------------------------

Begin block 0x27c0x27e
prev = {'0x8c6'}, next = {}
----------------------------------
Block 0x27c0x27e
0x27d0x27e: STOP 
----------------------------------

Begin block 0x27c0x408
prev = {'0xa34'}, next = {}
----------------------------------
Block 0x27c0x408
0x27d0x408: STOP 
----------------------------------

Begin block 0x27c0x454
prev = {'0x82f0x454'}, next = {}
----------------------------------
Block 0x27c0x454
0x27d0x454: STOP 
----------------------------------

Begin block 0x27c0x4ac
prev = {'0xc84'}, next = {}
----------------------------------
Block 0x27c0x4ac
0x27d0x4ac: STOP 
----------------------------------

Begin block 0x27c0x4d2
prev = {'0x82f0x4d2'}, next = {}
----------------------------------
Block 0x27c0x4d2
0x27d0x4d2: STOP 
----------------------------------

Begin block 0x27c0x506
prev = {'0xdca'}, next = {}
----------------------------------
Block 0x27c0x506
0x27d0x506: STOP 
----------------------------------

Begin block 0x27c0x65b
prev = {'0xe4a'}, next = {}
----------------------------------
Block 0x27c0x65b
0x27d0x65b: STOP 
----------------------------------

Begin block 0x27c0x681
prev = {'0x82f0x681'}, next = {}
----------------------------------
Block 0x27c0x681
0x27d0x681: STOP 
----------------------------------

Begin block 0x27e
prev = {}, next = {'0x290', '0x294'}
----------------------------------
function 0x1764299f()
Block 0x27e
0x27f: v27f(0x27c) = CONST 
0x282: v282(0x4) = CONST 
0x285: v285 = CALLDATASIZE 
0x286: v286 = SUB v285 v282(0x4)
0x287: v287(0x60) = CONST 
0x28a: v28a = LT v286 v287(0x60)
0x28b: v28b = ISZERO v28a
0x28c: v28c(0x294) = CONST 
0x28f: JUMPI v28c(0x294) v28b
----------------------------------

Begin block 0x290
prev = {'0x27e'}, next = {}
----------------------------------
Block 0x290
0x290: v290(0x0) = CONST 
0x293: REVERT v290(0x0) v290(0x0)
----------------------------------

Begin block 0x294
prev = {'0x27e'}, next = {'0x2af', '0x2ab'}
----------------------------------
Block 0x294
0x296: v296 = ADD v282(0x4) v286
0x298: v298(0x20) = CONST 
0x29b: v29b = ADD v282(0x4) v298(0x20)
0x29d: v29d = CALLDATALOAD v282(0x4)
0x29e: v29e(0x100000000) = CONST 
0x2a5: v2a5 = GT v29d v29e(0x100000000)
0x2a6: v2a6 = ISZERO v2a5
0x2a7: v2a7(0x2af) = CONST 
0x2aa: JUMPI v2a7(0x2af) v2a6
----------------------------------

Begin block 0x2ab
prev = {'0x294'}, next = {}
----------------------------------
Block 0x2ab
0x2ab: v2ab(0x0) = CONST 
0x2ae: REVERT v2ab(0x0) v2ab(0x0)
----------------------------------

Begin block 0x2af
prev = {'0x294'}, next = {'0x2c1', '0x2bd'}
----------------------------------
Block 0x2af
0x2b1: v2b1 = ADD v282(0x4) v29d
0x2b3: v2b3(0x20) = CONST 
0x2b6: v2b6 = ADD v2b1 v2b3(0x20)
0x2b7: v2b7 = GT v2b6 v296
0x2b8: v2b8 = ISZERO v2b7
0x2b9: v2b9(0x2c1) = CONST 
0x2bc: JUMPI v2b9(0x2c1) v2b8
----------------------------------

Begin block 0x2bd
prev = {'0x2af'}, next = {}
----------------------------------
Block 0x2bd
0x2bd: v2bd(0x0) = CONST 
0x2c0: REVERT v2bd(0x0) v2bd(0x0)
----------------------------------

Begin block 0x2c1
prev = {'0x2af'}, next = {'0x2df', '0x2e3'}
----------------------------------
Block 0x2c1
0x2c3: v2c3 = CALLDATALOAD v2b1
0x2c5: v2c5(0x20) = CONST 
0x2c7: v2c7 = ADD v2c5(0x20) v2b1
0x2ca: v2ca(0x1) = CONST 
0x2cd: v2cd = MUL v2c3 v2ca(0x1)
0x2cf: v2cf = ADD v2c7 v2cd
0x2d0: v2d0 = GT v2cf v296
0x2d1: v2d1(0x100000000) = CONST 
0x2d8: v2d8 = GT v2c3 v2d1(0x100000000)
0x2d9: v2d9 = OR v2d8 v2d0
0x2da: v2da = ISZERO v2d9
0x2db: v2db(0x2e3) = CONST 
0x2de: JUMPI v2db(0x2e3) v2da
----------------------------------

Begin block 0x2df
prev = {'0x2c1'}, next = {}
----------------------------------
Block 0x2df
0x2df: v2df(0x0) = CONST 
0x2e2: REVERT v2df(0x0) v2df(0x0)
----------------------------------

Begin block 0x2e3
prev = {'0x2c1'}, next = {'0x833'}
----------------------------------
Block 0x2e3
0x2e8: v2e8(0x1f) = CONST 
0x2ea: v2ea = ADD v2e8(0x1f) v2c3
0x2eb: v2eb(0x20) = CONST 
0x2ef: v2ef = DIV v2ea v2eb(0x20)
0x2f0: v2f0 = MUL v2ef v2eb(0x20)
0x2f1: v2f1(0x20) = CONST 
0x2f3: v2f3 = ADD v2f1(0x20) v2f0
0x2f4: v2f4(0x40) = CONST 
0x2f6: v2f6 = MLOAD v2f4(0x40)
0x2f9: v2f9 = ADD v2f6 v2f3
0x2fa: v2fa(0x40) = CONST 
0x2fc: MSTORE v2fa(0x40) v2f9
0x304: MSTORE v2f6 v2c3
0x305: v305(0x20) = CONST 
0x307: v307 = ADD v305(0x20) v2f6
0x30d: CALLDATACOPY v307 v2c7 v2c3
0x30e: v30e(0x0) = CONST 
0x311: v311 = ADD v307 v2c3
0x315: MSTORE v311 v30e(0x0)
0x31b: v31b(0x1) = CONST 
0x31d: v31d(0x1) = CONST 
0x31f: v31f(0xa0) = CONST 
0x321: v321(0x10000000000000000000000000000000000000000) = SHL v31f(0xa0) v31d(0x1)
0x322: v322(0xffffffffffffffffffffffffffffffffffffffff) = SUB v321(0x10000000000000000000000000000000000000000) v31b(0x1)
0x324: v324 = CALLDATALOAD v29b
0x325: v325 = AND v324 v322(0xffffffffffffffffffffffffffffffffffffffff)
0x32a: v32a(0x20) = CONST 
0x32c: v32c = ADD v32a(0x20) v29b
0x32d: v32d = CALLDATALOAD v32c
0x32e: v32e(0x833) = CONST 
0x331: JUMP v32e(0x833)
----------------------------------

Begin block 0x332
prev = {}, next = {'0x91f'}
----------------------------------
function totalSupply()()
Block 0x332
0x333: v333(0x33a) = CONST 
0x336: v336(0x91f) = CONST 
0x339: JUMP v336(0x91f)
----------------------------------

Begin block 0x33a0x332
prev = {'0x91f'}, next = {}
----------------------------------
Block 0x33a0x332
0x33b0x332: v33233b(0x40) = CONST 
0x33e0x332: v33233e = MLOAD v33233b(0x40)
0x3410x332: MSTORE v33233e v922
0x3420x332: v332342 = MLOAD v33233b(0x40)
0x3460x332: v332346 = SUB v33233e v332342
0x3470x332: v332347(0x20) = CONST 
0x3490x332: v332349 = ADD v332347(0x20) v332346
0x34b0x332: RETURN v332342 v332349
----------------------------------

Begin block 0x33a0x3a6
prev = {'0x98b'}, next = {}
----------------------------------
Block 0x33a0x3a6
0x33b0x3a6: v3a633b(0x40) = CONST 
0x33e0x3a6: v3a633e = MLOAD v3a633b(0x40)
0x3410x3a6: MSTORE v3a633e v98c(0x12)
0x3420x3a6: v3a6342 = MLOAD v3a633b(0x40)
0x3460x3a6: v3a6346 = SUB v3a633e v3a6342
0x3470x3a6: v3a6347(0x20) = CONST 
0x3490x3a6: v3a6349 = ADD v3a6347(0x20) v3a6346
0x34b0x3a6: RETURN v3a6342 v3a6349
----------------------------------

Begin block 0x33a0x3da
prev = {'0x9cc'}, next = {}
----------------------------------
Block 0x33a0x3da
0x33b0x3da: v3da33b(0x40) = CONST 
0x33e0x3da: v3da33e = MLOAD v3da33b(0x40)
0x3410x3da: MSTORE v3da33e v9cf
0x3420x3da: v3da342 = MLOAD v3da33b(0x40)
0x3460x3da: v3da346 = SUB v3da33e v3da342
0x3470x3da: v3da347(0x20) = CONST 
0x3490x3da: v3da349 = ADD v3da347(0x20) v3da346
0x34b0x3da: RETURN v3da342 v3da349
----------------------------------

Begin block 0x33a0x3e2
prev = {'0x9d2'}, next = {}
----------------------------------
Block 0x33a0x3e2
0x33b0x3e2: v3e233b(0x40) = CONST 
0x33e0x3e2: v3e233e = MLOAD v3e233b(0x40)
0x3410x3e2: MSTORE v3e233e v9ea
0x3420x3e2: v3e2342 = MLOAD v3e233b(0x40)
0x3460x3e2: v3e2346 = SUB v3e233e v3e2342
0x3470x3e2: v3e2347(0x20) = CONST 
0x3490x3e2: v3e2349 = ADD v3e2347(0x20) v3e2346
0x34b0x3e2: RETURN v3e2342 v3e2349
----------------------------------

Begin block 0x33a0x4fe
prev = {'0xcf8'}, next = {}
----------------------------------
Block 0x33a0x4fe
0x33b0x4fe: v4fe33b(0x40) = CONST 
0x33e0x4fe: v4fe33e = MLOAD v4fe33b(0x40)
0x3410x4fe: MSTORE v4fe33e vcfb
0x3420x4fe: v4fe342 = MLOAD v4fe33b(0x40)
0x3460x4fe: v4fe346 = SUB v4fe33e v4fe342
0x3470x4fe: v4fe347(0x20) = CONST 
0x3490x4fe: v4fe349 = ADD v4fe347(0x20) v4fe346
0x34b0x4fe: RETURN v4fe342 v4fe349
----------------------------------

Begin block 0x33a0x62d
prev = {'0xdcf'}, next = {}
----------------------------------
Block 0x33a0x62d
0x33b0x62d: v62d33b(0x40) = CONST 
0x33e0x62d: v62d33e = MLOAD v62d33b(0x40)
0x3410x62d: MSTORE v62d33e vdf7
0x3420x62d: v62d342 = MLOAD v62d33b(0x40)
0x3460x62d: v62d346 = SUB v62d33e v62d342
0x3470x62d: v62d347(0x20) = CONST 
0x3490x62d: v62d349 = ADD v62d347(0x20) v62d346
0x34b0x62d: RETURN v62d342 v62d349
----------------------------------

Begin block 0x33a0x6ad
prev = {'0xf07'}, next = {}
----------------------------------
Block 0x33a0x6ad
0x33b0x6ad: v6ad33b(0x40) = CONST 
0x33e0x6ad: v6ad33e = MLOAD v6ad33b(0x40)
0x3410x6ad: MSTORE v6ad33e vf0a
0x3420x6ad: v6ad342 = MLOAD v6ad33b(0x40)
0x3460x6ad: v6ad346 = SUB v6ad33e v6ad342
0x3470x6ad: v6ad347(0x20) = CONST 
0x3490x6ad: v6ad349 = ADD v6ad347(0x20) v6ad346
0x34b0x6ad: RETURN v6ad342 v6ad349
----------------------------------

Begin block 0x34c
prev = {}, next = {'0x35e', '0x362'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x34c
0x34d: v34d(0x23c) = CONST 
0x350: v350(0x4) = CONST 
0x353: v353 = CALLDATASIZE 
0x354: v354 = SUB v353 v350(0x4)
0x355: v355(0x60) = CONST 
0x358: v358 = LT v354 v355(0x60)
0x359: v359 = ISZERO v358
0x35a: v35a(0x362) = CONST 
0x35d: JUMPI v35a(0x362) v359
----------------------------------

Begin block 0x35e
prev = {'0x34c'}, next = {}
----------------------------------
Block 0x35e
0x35e: v35e(0x0) = CONST 
0x361: REVERT v35e(0x0) v35e(0x0)
----------------------------------

Begin block 0x362
prev = {'0x34c'}, next = {'0x925'}
----------------------------------
Block 0x362
0x364: v364(0x1) = CONST 
0x366: v366(0x1) = CONST 
0x368: v368(0xa0) = CONST 
0x36a: v36a(0x10000000000000000000000000000000000000000) = SHL v368(0xa0) v366(0x1)
0x36b: v36b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v36a(0x10000000000000000000000000000000000000000) v364(0x1)
0x36d: v36d = CALLDATALOAD v350(0x4)
0x36f: v36f = AND v36b(0xffffffffffffffffffffffffffffffffffffffff) v36d
0x371: v371(0x20) = CONST 
0x374: v374 = ADD v350(0x4) v371(0x20)
0x375: v375 = CALLDATALOAD v374
0x378: v378 = AND v36b(0xffffffffffffffffffffffffffffffffffffffff) v375
0x37a: v37a(0x40) = CONST 
0x37c: v37c = ADD v37a(0x40) v350(0x4)
0x37d: v37d = CALLDATALOAD v37c
0x37e: v37e(0x925) = CONST 
0x381: JUMP v37e(0x925)
----------------------------------

Begin block 0x382
prev = {}, next = {'0x97c'}
----------------------------------
function depositAddress()()
Block 0x382
0x383: v383(0x38a) = CONST 
0x386: v386(0x97c) = CONST 
0x389: JUMP v386(0x97c)
----------------------------------

Begin block 0x38a0x382
prev = {'0x97c'}, next = {}
----------------------------------
Block 0x38a0x382
0x38b0x382: v38238b(0x40) = CONST 
0x38e0x382: v38238e = MLOAD v38238b(0x40)
0x38f0x382: v38238f(0x1) = CONST 
0x3910x382: v382391(0x1) = CONST 
0x3930x382: v382393(0xa0) = CONST 
0x3950x382: v382395(0x10000000000000000000000000000000000000000) = SHL v382393(0xa0) v382391(0x1)
0x3960x382: v382396(0xffffffffffffffffffffffffffffffffffffffff) = SUB v382395(0x10000000000000000000000000000000000000000) v38238f(0x1)
0x3990x382: v382399 = AND v988 v382396(0xffffffffffffffffffffffffffffffffffffffff)
0x39b0x382: MSTORE v38238e v382399
0x39c0x382: v38239c = MLOAD v38238b(0x40)
0x3a00x382: v3823a0 = SUB v38238e v38239c
0x3a10x382: v3823a1(0x20) = CONST 
0x3a30x382: v3823a3 = ADD v3823a1(0x20) v3823a0
0x3a50x382: RETURN v38239c v3823a3
----------------------------------

Begin block 0x38a0x410
prev = {'0xa7e'}, next = {}
----------------------------------
Block 0x38a0x410
0x38b0x410: v41038b(0x40) = CONST 
0x38e0x410: v41038e = MLOAD v41038b(0x40)
0x38f0x410: v41038f(0x1) = CONST 
0x3910x410: v410391(0x1) = CONST 
0x3930x410: v410393(0xa0) = CONST 
0x3950x410: v410395(0x10000000000000000000000000000000000000000) = SHL v410393(0xa0) v410391(0x1)
0x3960x410: v410396(0xffffffffffffffffffffffffffffffffffffffff) = SUB v410395(0x10000000000000000000000000000000000000000) v41038f(0x1)
0x3990x410: v410399 = AND va8a v410396(0xffffffffffffffffffffffffffffffffffffffff)
0x39b0x410: MSTORE v41038e v410399
0x39c0x410: v41039c = MLOAD v41038b(0x40)
0x3a00x410: v4103a0 = SUB v41038e v41039c
0x3a10x410: v4103a1(0x20) = CONST 
0x3a30x410: v4103a3 = ADD v4103a1(0x20) v4103a0
0x3a50x410: RETURN v41039c v4103a3
----------------------------------

Begin block 0x3a6
prev = {}, next = {'0x98b'}
----------------------------------
function decimals()()
Block 0x3a6
0x3a7: v3a7(0x33a) = CONST 
0x3aa: v3aa(0x98b) = CONST 
0x3ad: JUMP v3aa(0x98b)
----------------------------------

Begin block 0x3ae
prev = {}, next = {'0x3c4', '0x3c0'}
----------------------------------
function increaseAllowance(address,uint256)()
Block 0x3ae
0x3af: v3af(0x23c) = CONST 
0x3b2: v3b2(0x4) = CONST 
0x3b5: v3b5 = CALLDATASIZE 
0x3b6: v3b6 = SUB v3b5 v3b2(0x4)
0x3b7: v3b7(0x40) = CONST 
0x3ba: v3ba = LT v3b6 v3b7(0x40)
0x3bb: v3bb = ISZERO v3ba
0x3bc: v3bc(0x3c4) = CONST 
0x3bf: JUMPI v3bc(0x3c4) v3bb
----------------------------------

Begin block 0x3c0
prev = {'0x3ae'}, next = {}
----------------------------------
Block 0x3c0
0x3c0: v3c0(0x0) = CONST 
0x3c3: REVERT v3c0(0x0) v3c0(0x0)
----------------------------------

Begin block 0x3c4
prev = {'0x3ae'}, next = {'0x990'}
----------------------------------
Block 0x3c4
0x3c6: v3c6(0x1) = CONST 
0x3c8: v3c8(0x1) = CONST 
0x3ca: v3ca(0xa0) = CONST 
0x3cc: v3cc(0x10000000000000000000000000000000000000000) = SHL v3ca(0xa0) v3c8(0x1)
0x3cd: v3cd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3cc(0x10000000000000000000000000000000000000000) v3c6(0x1)
0x3cf: v3cf = CALLDATALOAD v3b2(0x4)
0x3d0: v3d0 = AND v3cf v3cd(0xffffffffffffffffffffffffffffffffffffffff)
0x3d2: v3d2(0x20) = CONST 
0x3d4: v3d4 = ADD v3d2(0x20) v3b2(0x4)
0x3d5: v3d5 = CALLDATALOAD v3d4
0x3d6: v3d6(0x990) = CONST 
0x3d9: JUMP v3d6(0x990)
----------------------------------

Begin block 0x3da
prev = {}, next = {'0x9cc'}
----------------------------------
function teamAmount()()
Block 0x3da
0x3db: v3db(0x33a) = CONST 
0x3de: v3de(0x9cc) = CONST 
0x3e1: JUMP v3de(0x9cc)
----------------------------------

Begin block 0x3e2
prev = {}, next = {'0x3f4', '0x3f8'}
----------------------------------
function balanceOf(address)()
Block 0x3e2
0x3e3: v3e3(0x33a) = CONST 
0x3e6: v3e6(0x4) = CONST 
0x3e9: v3e9 = CALLDATASIZE 
0x3ea: v3ea = SUB v3e9 v3e6(0x4)
0x3eb: v3eb(0x20) = CONST 
0x3ee: v3ee = LT v3ea v3eb(0x20)
0x3ef: v3ef = ISZERO v3ee
0x3f0: v3f0(0x3f8) = CONST 
0x3f3: JUMPI v3f0(0x3f8) v3ef
----------------------------------

Begin block 0x3f4
prev = {'0x3e2'}, next = {}
----------------------------------
Block 0x3f4
0x3f4: v3f4(0x0) = CONST 
0x3f7: REVERT v3f4(0x0) v3f4(0x0)
----------------------------------

Begin block 0x3f8
prev = {'0x3e2'}, next = {'0x9d2'}
----------------------------------
Block 0x3f8
0x3fa: v3fa = CALLDATALOAD v3e6(0x4)
0x3fb: v3fb(0x1) = CONST 
0x3fd: v3fd(0x1) = CONST 
0x3ff: v3ff(0xa0) = CONST 
0x401: v401(0x10000000000000000000000000000000000000000) = SHL v3ff(0xa0) v3fd(0x1)
0x402: v402(0xffffffffffffffffffffffffffffffffffffffff) = SUB v401(0x10000000000000000000000000000000000000000) v3fb(0x1)
0x403: v403 = AND v402(0xffffffffffffffffffffffffffffffffffffffff) v3fa
0x404: v404(0x9d2) = CONST 
0x407: JUMP v404(0x9d2)
----------------------------------

Begin block 0x408
prev = {}, next = {'0x9ed'}
----------------------------------
function renounceOwnership()()
Block 0x408
0x409: v409(0x27c) = CONST 
0x40c: v40c(0x9ed) = CONST 
0x40f: JUMP v40c(0x9ed)
----------------------------------

Begin block 0x410
prev = {}, next = {'0xa7e'}
----------------------------------
function owner()()
Block 0x410
0x411: v411(0x38a) = CONST 
0x414: v414(0xa7e) = CONST 
0x417: JUMP v414(0xa7e)
----------------------------------

Begin block 0x418
prev = {}, next = {'0x23c0x418'}
----------------------------------
function isOwner()()
Block 0x418
0x419: v419(0x23c) = CONST 
0x41c: v41c(0xa8d) = CONST 
0x41f: v41f_0 = CALLPRIVATE v41c(0xa8d) v419(0x23c)
----------------------------------

Begin block 0x420
prev = {}, next = {'0xa9e'}
----------------------------------
function symbol()()
Block 0x420
0x421: v421(0x19b) = CONST 
0x424: v424(0xa9e) = CONST 
0x427: JUMP v424(0xa9e)
----------------------------------

Begin block 0x428
prev = {}, next = {'0x43e', '0x43a'}
----------------------------------
function decreaseAllowance(address,uint256)()
Block 0x428
0x429: v429(0x23c) = CONST 
0x42c: v42c(0x4) = CONST 
0x42f: v42f = CALLDATASIZE 
0x430: v430 = SUB v42f v42c(0x4)
0x431: v431(0x40) = CONST 
0x434: v434 = LT v430 v431(0x40)
0x435: v435 = ISZERO v434
0x436: v436(0x43e) = CONST 
0x439: JUMPI v436(0x43e) v435
----------------------------------

Begin block 0x43a
prev = {'0x428'}, next = {}
----------------------------------
Block 0x43a
0x43a: v43a(0x0) = CONST 
0x43d: REVERT v43a(0x0) v43a(0x0)
----------------------------------

Begin block 0x43e
prev = {'0x428'}, next = {'0xabd'}
----------------------------------
Block 0x43e
0x440: v440(0x1) = CONST 
0x442: v442(0x1) = CONST 
0x444: v444(0xa0) = CONST 
0x446: v446(0x10000000000000000000000000000000000000000) = SHL v444(0xa0) v442(0x1)
0x447: v447(0xffffffffffffffffffffffffffffffffffffffff) = SUB v446(0x10000000000000000000000000000000000000000) v440(0x1)
0x449: v449 = CALLDATALOAD v42c(0x4)
0x44a: v44a = AND v449 v447(0xffffffffffffffffffffffffffffffffffffffff)
0x44c: v44c(0x20) = CONST 
0x44e: v44e = ADD v44c(0x20) v42c(0x4)
0x44f: v44f = CALLDATALOAD v44e
0x450: v450(0xabd) = CONST 
0x453: JUMP v450(0xabd)
----------------------------------

Begin block 0x454
prev = {}, next = {'0x46a', '0x466'}
----------------------------------
function sendAdvisorsTokens(address,uint256)()
Block 0x454
0x455: v455(0x27c) = CONST 
0x458: v458(0x4) = CONST 
0x45b: v45b = CALLDATASIZE 
0x45c: v45c = SUB v45b v458(0x4)
0x45d: v45d(0x40) = CONST 
0x460: v460 = LT v45c v45d(0x40)
0x461: v461 = ISZERO v460
0x462: v462(0x46a) = CONST 
0x465: JUMPI v462(0x46a) v461
----------------------------------

Begin block 0x466
prev = {'0x454'}, next = {}
----------------------------------
Block 0x466
0x466: v466(0x0) = CONST 
0x469: REVERT v466(0x0) v466(0x0)
----------------------------------

Begin block 0x46a
prev = {'0x454'}, next = {'0xaf9'}
----------------------------------
Block 0x46a
0x46c: v46c(0x1) = CONST 
0x46e: v46e(0x1) = CONST 
0x470: v470(0xa0) = CONST 
0x472: v472(0x10000000000000000000000000000000000000000) = SHL v470(0xa0) v46e(0x1)
0x473: v473(0xffffffffffffffffffffffffffffffffffffffff) = SUB v472(0x10000000000000000000000000000000000000000) v46c(0x1)
0x475: v475 = CALLDATALOAD v458(0x4)
0x476: v476 = AND v475 v473(0xffffffffffffffffffffffffffffffffffffffff)
0x478: v478(0x20) = CONST 
0x47a: v47a = ADD v478(0x20) v458(0x4)
0x47b: v47b = CALLDATALOAD v47a
0x47c: v47c(0xaf9) = CONST 
0x47f: JUMP v47c(0xaf9)
----------------------------------

Begin block 0x480
prev = {}, next = {'0x492', '0x496'}
----------------------------------
function transfer(address,uint256)()
Block 0x480
0x481: v481(0x23c) = CONST 
0x484: v484(0x4) = CONST 
0x487: v487 = CALLDATASIZE 
0x488: v488 = SUB v487 v484(0x4)
0x489: v489(0x40) = CONST 
0x48c: v48c = LT v488 v489(0x40)
0x48d: v48d = ISZERO v48c
0x48e: v48e(0x496) = CONST 
0x491: JUMPI v48e(0x496) v48d
----------------------------------

Begin block 0x492
prev = {'0x480'}, next = {}
----------------------------------
Block 0x492
0x492: v492(0x0) = CONST 
0x495: REVERT v492(0x0) v492(0x0)
----------------------------------

Begin block 0x496
prev = {'0x480'}, next = {'0xc300x480'}
----------------------------------
Block 0x496
0x498: v498(0x1) = CONST 
0x49a: v49a(0x1) = CONST 
0x49c: v49c(0xa0) = CONST 
0x49e: v49e(0x10000000000000000000000000000000000000000) = SHL v49c(0xa0) v49a(0x1)
0x49f: v49f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v49e(0x10000000000000000000000000000000000000000) v498(0x1)
0x4a1: v4a1 = CALLDATALOAD v484(0x4)
0x4a2: v4a2 = AND v4a1 v49f(0xffffffffffffffffffffffffffffffffffffffff)
0x4a4: v4a4(0x20) = CONST 
0x4a6: v4a6 = ADD v4a4(0x20) v484(0x4)
0x4a7: v4a7 = CALLDATALOAD v4a6
0x4a8: v4a8(0xc30) = CONST 
0x4ab: JUMP v4a8(0xc30)
----------------------------------

Begin block 0x4ac
prev = {}, next = {'0x4c2', '0x4be'}
----------------------------------
function setDepositAddress(address)()
Block 0x4ac
0x4ad: v4ad(0x27c) = CONST 
0x4b0: v4b0(0x4) = CONST 
0x4b3: v4b3 = CALLDATASIZE 
0x4b4: v4b4 = SUB v4b3 v4b0(0x4)
0x4b5: v4b5(0x20) = CONST 
0x4b8: v4b8 = LT v4b4 v4b5(0x20)
0x4b9: v4b9 = ISZERO v4b8
0x4ba: v4ba(0x4c2) = CONST 
0x4bd: JUMPI v4ba(0x4c2) v4b9
----------------------------------

Begin block 0x4be
prev = {'0x4ac'}, next = {}
----------------------------------
Block 0x4be
0x4be: v4be(0x0) = CONST 
0x4c1: REVERT v4be(0x0) v4be(0x0)
----------------------------------

Begin block 0x4c2
prev = {'0x4ac'}, next = {'0xc3d'}
----------------------------------
Block 0x4c2
0x4c4: v4c4 = CALLDATALOAD v4b0(0x4)
0x4c5: v4c5(0x1) = CONST 
0x4c7: v4c7(0x1) = CONST 
0x4c9: v4c9(0xa0) = CONST 
0x4cb: v4cb(0x10000000000000000000000000000000000000000) = SHL v4c9(0xa0) v4c7(0x1)
0x4cc: v4cc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4cb(0x10000000000000000000000000000000000000000) v4c5(0x1)
0x4cd: v4cd = AND v4cc(0xffffffffffffffffffffffffffffffffffffffff) v4c4
0x4ce: v4ce(0xc3d) = CONST 
0x4d1: JUMP v4ce(0xc3d)
----------------------------------

Begin block 0x4d2
prev = {}, next = {'0x4e8', '0x4e4'}
----------------------------------
function transferTokens(address,uint256)()
Block 0x4d2
0x4d3: v4d3(0x27c) = CONST 
0x4d6: v4d6(0x4) = CONST 
0x4d9: v4d9 = CALLDATASIZE 
0x4da: v4da = SUB v4d9 v4d6(0x4)
0x4db: v4db(0x40) = CONST 
0x4de: v4de = LT v4da v4db(0x40)
0x4df: v4df = ISZERO v4de
0x4e0: v4e0(0x4e8) = CONST 
0x4e3: JUMPI v4e0(0x4e8) v4df
----------------------------------

Begin block 0x4e4
prev = {'0x4d2'}, next = {}
----------------------------------
Block 0x4e4
0x4e4: v4e4(0x0) = CONST 
0x4e7: REVERT v4e4(0x0) v4e4(0x0)
----------------------------------

Begin block 0x4e8
prev = {'0x4d2'}, next = {'0xca6'}
----------------------------------
Block 0x4e8
0x4ea: v4ea(0x1) = CONST 
0x4ec: v4ec(0x1) = CONST 
0x4ee: v4ee(0xa0) = CONST 
0x4f0: v4f0(0x10000000000000000000000000000000000000000) = SHL v4ee(0xa0) v4ec(0x1)
0x4f1: v4f1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4f0(0x10000000000000000000000000000000000000000) v4ea(0x1)
0x4f3: v4f3 = CALLDATALOAD v4d6(0x4)
0x4f4: v4f4 = AND v4f3 v4f1(0xffffffffffffffffffffffffffffffffffffffff)
0x4f6: v4f6(0x20) = CONST 
0x4f8: v4f8 = ADD v4f6(0x20) v4d6(0x4)
0x4f9: v4f9 = CALLDATALOAD v4f8
0x4fa: v4fa(0xca6) = CONST 
0x4fd: JUMP v4fa(0xca6)
----------------------------------

Begin block 0x4fe
prev = {}, next = {'0xcf8'}
----------------------------------
function bountyAmount()()
Block 0x4fe
0x4ff: v4ff(0x33a) = CONST 
0x502: v502(0xcf8) = CONST 
0x505: JUMP v502(0xcf8)
----------------------------------

Begin block 0x506
prev = {}, next = {'0x51c', '0x518'}
----------------------------------
function sendTokens(address[],uint256[])()
Block 0x506
0x507: v507(0x27c) = CONST 
0x50a: v50a(0x4) = CONST 
0x50d: v50d = CALLDATASIZE 
0x50e: v50e = SUB v50d v50a(0x4)
0x50f: v50f(0x40) = CONST 
0x512: v512 = LT v50e v50f(0x40)
0x513: v513 = ISZERO v512
0x514: v514(0x51c) = CONST 
0x517: JUMPI v514(0x51c) v513
----------------------------------

Begin block 0x518
prev = {'0x506'}, next = {}
----------------------------------
Block 0x518
0x518: v518(0x0) = CONST 
0x51b: REVERT v518(0x0) v518(0x0)
----------------------------------

Begin block 0x51c
prev = {'0x506'}, next = {'0x533', '0x537'}
----------------------------------
Block 0x51c
0x51e: v51e = ADD v50a(0x4) v50e
0x520: v520(0x20) = CONST 
0x523: v523 = ADD v50a(0x4) v520(0x20)
0x525: v525 = CALLDATALOAD v50a(0x4)
0x526: v526(0x100000000) = CONST 
0x52d: v52d = GT v525 v526(0x100000000)
0x52e: v52e = ISZERO v52d
0x52f: v52f(0x537) = CONST 
0x532: JUMPI v52f(0x537) v52e
----------------------------------

Begin block 0x533
prev = {'0x51c'}, next = {}
----------------------------------
Block 0x533
0x533: v533(0x0) = CONST 
0x536: REVERT v533(0x0) v533(0x0)
----------------------------------

Begin block 0x537
prev = {'0x51c'}, next = {'0x549', '0x545'}
----------------------------------
Block 0x537
0x539: v539 = ADD v50a(0x4) v525
0x53b: v53b(0x20) = CONST 
0x53e: v53e = ADD v539 v53b(0x20)
0x53f: v53f = GT v53e v51e
0x540: v540 = ISZERO v53f
0x541: v541(0x549) = CONST 
0x544: JUMPI v541(0x549) v540
----------------------------------

Begin block 0x545
prev = {'0x537'}, next = {}
----------------------------------
Block 0x545
0x545: v545(0x0) = CONST 
0x548: REVERT v545(0x0) v545(0x0)
----------------------------------

Begin block 0x549
prev = {'0x537'}, next = {'0x567', '0x56b'}
----------------------------------
Block 0x549
0x54b: v54b = CALLDATALOAD v539
0x54d: v54d(0x20) = CONST 
0x54f: v54f = ADD v54d(0x20) v539
0x552: v552(0x20) = CONST 
0x555: v555 = MUL v54b v552(0x20)
0x557: v557 = ADD v54f v555
0x558: v558 = GT v557 v51e
0x559: v559(0x100000000) = CONST 
0x560: v560 = GT v54b v559(0x100000000)
0x561: v561 = OR v560 v558
0x562: v562 = ISZERO v561
0x563: v563(0x56b) = CONST 
0x566: JUMPI v563(0x56b) v562
----------------------------------

Begin block 0x567
prev = {'0x549'}, next = {}
----------------------------------
Block 0x567
0x567: v567(0x0) = CONST 
0x56a: REVERT v567(0x0) v567(0x0)
----------------------------------

Begin block 0x56b
prev = {'0x549'}, next = {'0x5bb', '0x5b7'}
----------------------------------
Block 0x56b
0x570: v570(0x20) = CONST 
0x572: v572 = MUL v570(0x20) v54b
0x573: v573(0x20) = CONST 
0x575: v575 = ADD v573(0x20) v572
0x576: v576(0x40) = CONST 
0x578: v578 = MLOAD v576(0x40)
0x57b: v57b = ADD v578 v575
0x57c: v57c(0x40) = CONST 
0x57e: MSTORE v57c(0x40) v57b
0x586: MSTORE v578 v54b
0x587: v587(0x20) = CONST 
0x589: v589 = ADD v587(0x20) v578
0x58c: v58c(0x20) = CONST 
0x58e: v58e = MUL v58c(0x20) v54b
0x592: CALLDATACOPY v589 v54f v58e
0x593: v593(0x0) = CONST 
0x596: v596 = ADD v589 v58e
0x59a: MSTORE v596 v593(0x0)
0x5a0: v5a0(0x20) = CONST 
0x5a3: v5a3 = ADD v523 v5a0(0x20)
0x5a6: v5a6 = CALLDATALOAD v523
0x5aa: v5aa(0x100000000) = CONST 
0x5b1: v5b1 = GT v5a6 v5aa(0x100000000)
0x5b2: v5b2 = ISZERO v5b1
0x5b3: v5b3(0x5bb) = CONST 
0x5b6: JUMPI v5b3(0x5bb) v5b2
----------------------------------

Begin block 0x5b7
prev = {'0x56b'}, next = {}
----------------------------------
Block 0x5b7
0x5b7: v5b7(0x0) = CONST 
0x5ba: REVERT v5b7(0x0) v5b7(0x0)
----------------------------------

Begin block 0x5bb
prev = {'0x56b'}, next = {'0x5c9', '0x5cd'}
----------------------------------
Block 0x5bb
0x5bd: v5bd = ADD v50a(0x4) v5a6
0x5bf: v5bf(0x20) = CONST 
0x5c2: v5c2 = ADD v5bd v5bf(0x20)
0x5c3: v5c3 = GT v5c2 v51e
0x5c4: v5c4 = ISZERO v5c3
0x5c5: v5c5(0x5cd) = CONST 
0x5c8: JUMPI v5c5(0x5cd) v5c4
----------------------------------

Begin block 0x5c9
prev = {'0x5bb'}, next = {}
----------------------------------
Block 0x5c9
0x5c9: v5c9(0x0) = CONST 
0x5cc: REVERT v5c9(0x0) v5c9(0x0)
----------------------------------

Begin block 0x5cd
prev = {'0x5bb'}, next = {'0x5ef', '0x5eb'}
----------------------------------
Block 0x5cd
0x5cf: v5cf = CALLDATALOAD v5bd
0x5d1: v5d1(0x20) = CONST 
0x5d3: v5d3 = ADD v5d1(0x20) v5bd
0x5d6: v5d6(0x20) = CONST 
0x5d9: v5d9 = MUL v5cf v5d6(0x20)
0x5db: v5db = ADD v5d3 v5d9
0x5dc: v5dc = GT v5db v51e
0x5dd: v5dd(0x100000000) = CONST 
0x5e4: v5e4 = GT v5cf v5dd(0x100000000)
0x5e5: v5e5 = OR v5e4 v5dc
0x5e6: v5e6 = ISZERO v5e5
0x5e7: v5e7(0x5ef) = CONST 
0x5ea: JUMPI v5e7(0x5ef) v5e6
----------------------------------

Begin block 0x5eb
prev = {'0x5cd'}, next = {}
----------------------------------
Block 0x5eb
0x5eb: v5eb(0x0) = CONST 
0x5ee: REVERT v5eb(0x0) v5eb(0x0)
----------------------------------

Begin block 0x5ef
prev = {'0x5cd'}, next = {'0xcfe'}
----------------------------------
Block 0x5ef
0x5f4: v5f4(0x20) = CONST 
0x5f6: v5f6 = MUL v5f4(0x20) v5cf
0x5f7: v5f7(0x20) = CONST 
0x5f9: v5f9 = ADD v5f7(0x20) v5f6
0x5fa: v5fa(0x40) = CONST 
0x5fc: v5fc = MLOAD v5fa(0x40)
0x5ff: v5ff = ADD v5fc v5f9
0x600: v600(0x40) = CONST 
0x602: MSTORE v600(0x40) v5ff
0x60a: MSTORE v5fc v5cf
0x60b: v60b(0x20) = CONST 
0x60d: v60d = ADD v60b(0x20) v5fc
0x610: v610(0x20) = CONST 
0x612: v612 = MUL v610(0x20) v5cf
0x616: CALLDATACOPY v60d v5d3 v612
0x617: v617(0x0) = CONST 
0x61a: v61a = ADD v60d v612
0x61e: MSTORE v61a v617(0x0)
0x623: v623(0xcfe) = CONST 
0x62c: JUMP v623(0xcfe)
----------------------------------

Begin block 0x62d
prev = {}, next = {'0x63f', '0x643'}
----------------------------------
function allowance(address,address)()
Block 0x62d
0x62e: v62e(0x33a) = CONST 
0x631: v631(0x4) = CONST 
0x634: v634 = CALLDATASIZE 
0x635: v635 = SUB v634 v631(0x4)
0x636: v636(0x40) = CONST 
0x639: v639 = LT v635 v636(0x40)
0x63a: v63a = ISZERO v639
0x63b: v63b(0x643) = CONST 
0x63e: JUMPI v63b(0x643) v63a
----------------------------------

Begin block 0x63f
prev = {'0x62d'}, next = {}
----------------------------------
Block 0x63f
0x63f: v63f(0x0) = CONST 
0x642: REVERT v63f(0x0) v63f(0x0)
----------------------------------

Begin block 0x643
prev = {'0x62d'}, next = {'0xdcf'}
----------------------------------
Block 0x643
0x645: v645(0x1) = CONST 
0x647: v647(0x1) = CONST 
0x649: v649(0xa0) = CONST 
0x64b: v64b(0x10000000000000000000000000000000000000000) = SHL v649(0xa0) v647(0x1)
0x64c: v64c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v64b(0x10000000000000000000000000000000000000000) v645(0x1)
0x64e: v64e = CALLDATALOAD v631(0x4)
0x650: v650 = AND v64c(0xffffffffffffffffffffffffffffffffffffffff) v64e
0x652: v652(0x20) = CONST 
0x654: v654 = ADD v652(0x20) v631(0x4)
0x655: v655 = CALLDATALOAD v654
0x656: v656 = AND v655 v64c(0xffffffffffffffffffffffffffffffffffffffff)
0x657: v657(0xdcf) = CONST 
0x65a: JUMP v657(0xdcf)
----------------------------------

Begin block 0x65b
prev = {}, next = {'0x671', '0x66d'}
----------------------------------
function transferOwnership(address)()
Block 0x65b
0x65c: v65c(0x27c) = CONST 
0x65f: v65f(0x4) = CONST 
0x662: v662 = CALLDATASIZE 
0x663: v663 = SUB v662 v65f(0x4)
0x664: v664(0x20) = CONST 
0x667: v667 = LT v663 v664(0x20)
0x668: v668 = ISZERO v667
0x669: v669(0x671) = CONST 
0x66c: JUMPI v669(0x671) v668
----------------------------------

Begin block 0x66d
prev = {'0x65b'}, next = {}
----------------------------------
Block 0x66d
0x66d: v66d(0x0) = CONST 
0x670: REVERT v66d(0x0) v66d(0x0)
----------------------------------

Begin block 0x671
prev = {'0x65b'}, next = {'0xdfa'}
----------------------------------
Block 0x671
0x673: v673 = CALLDATALOAD v65f(0x4)
0x674: v674(0x1) = CONST 
0x676: v676(0x1) = CONST 
0x678: v678(0xa0) = CONST 
0x67a: v67a(0x10000000000000000000000000000000000000000) = SHL v678(0xa0) v676(0x1)
0x67b: v67b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v67a(0x10000000000000000000000000000000000000000) v674(0x1)
0x67c: v67c = AND v67b(0xffffffffffffffffffffffffffffffffffffffff) v673
0x67d: v67d(0xdfa) = CONST 
0x680: JUMP v67d(0xdfa)
----------------------------------

Begin block 0x681
prev = {}, next = {'0x693', '0x697'}
----------------------------------
function sendBountyTokens(address,uint256)()
Block 0x681
0x682: v682(0x27c) = CONST 
0x685: v685(0x4) = CONST 
0x688: v688 = CALLDATASIZE 
0x689: v689 = SUB v688 v685(0x4)
0x68a: v68a(0x40) = CONST 
0x68d: v68d = LT v689 v68a(0x40)
0x68e: v68e = ISZERO v68d
0x68f: v68f(0x697) = CONST 
0x692: JUMPI v68f(0x697) v68e
----------------------------------

Begin block 0x693
prev = {'0x681'}, next = {}
----------------------------------
Block 0x693
0x693: v693(0x0) = CONST 
0x696: REVERT v693(0x0) v693(0x0)
----------------------------------

Begin block 0x697
prev = {'0x681'}, next = {'0xe4d'}
----------------------------------
Block 0x697
0x699: v699(0x1) = CONST 
0x69b: v69b(0x1) = CONST 
0x69d: v69d(0xa0) = CONST 
0x69f: v69f(0x10000000000000000000000000000000000000000) = SHL v69d(0xa0) v69b(0x1)
0x6a0: v6a0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v69f(0x10000000000000000000000000000000000000000) v699(0x1)
0x6a2: v6a2 = CALLDATALOAD v685(0x4)
0x6a3: v6a3 = AND v6a2 v6a0(0xffffffffffffffffffffffffffffffffffffffff)
0x6a5: v6a5(0x20) = CONST 
0x6a7: v6a7 = ADD v6a5(0x20) v685(0x4)
0x6a8: v6a8 = CALLDATALOAD v6a7
0x6a9: v6a9(0xe4d) = CONST 
0x6ac: JUMP v6a9(0xe4d)
----------------------------------

Begin block 0x6ad
prev = {}, next = {'0xf07'}
----------------------------------
function advisorsAmount()()
Block 0x6ad
0x6ae: v6ae(0x33a) = CONST 
0x6b1: v6b1(0xf07) = CONST 
0x6b4: JUMP v6b1(0xf07)
----------------------------------

Begin block 0x6b5
prev = {'0x193'}, next = {'0x19b0x193'}
----------------------------------
Block 0x6b5
0x6b6: v6b6(0x40) = CONST 
0x6b8: v6b8 = MLOAD v6b6(0x40)
0x6ba: v6ba(0x40) = CONST 
0x6bc: v6bc = ADD v6ba(0x40) v6b8
0x6bd: v6bd(0x40) = CONST 
0x6bf: MSTORE v6bd(0x40) v6bc
0x6c1: v6c1(0xf) = CONST 
0x6c4: MSTORE v6b8 v6c1(0xf)
0x6c5: v6c5(0x20) = CONST 
0x6c7: v6c7 = ADD v6c5(0x20) v6b8
0x6c8: v6c8(0x24b6363ab6b4b730ba103a37b5b2b7) = CONST 
0x6d8: v6d8(0x89) = CONST 
0x6da: v6da(0x496c6c756d696e617420746f6b656e0000000000000000000000000000000000) = SHL v6d8(0x89) v6c8(0x24b6363ab6b4b730ba103a37b5b2b7)
0x6dc: MSTORE v6c7 v6da(0x496c6c756d696e617420746f6b656e0000000000000000000000000000000000)
0x6df: JUMP v194(0x19b)
----------------------------------

Begin block 0x6e0
prev = {'0x226'}, next = {'0x6ed0x210'}
----------------------------------
Block 0x6e0
0x6e1: v6e1(0x0) = CONST 
0x6e3: v6e3(0x6ed) = CONST 
0x6e6: v6e6 = CALLER 
0x6e9: v6e9(0xf0d) = CONST 
0x6ec: CALLPRIVATE v6e9(0xf0d) v237 v232 v6e6 v6e3(0x6ed)
----------------------------------

Begin block 0x6ed0x210
prev = {'0x6e0'}, next = {'0x6f10x210'}
----------------------------------
Block 0x6ed0x210
0x6ef0x210: v2106ef(0x1) = CONST 
----------------------------------

Begin block 0x6ed0x3ae
prev = {'0x96d0x3ae'}, next = {'0x6f10x3ae'}
----------------------------------
Block 0x6ed0x3ae
0x6ef0x3ae: v3ae6ef(0x1) = CONST 
----------------------------------

Begin block 0x6ed0x428
prev = {'0x96d0x428'}, next = {'0x6f10x428'}
----------------------------------
Block 0x6ed0x428
0x6ef0x428: v4286ef(0x1) = CONST 
----------------------------------

Begin block 0x6ed0x480
prev = {'0xc300x480'}, next = {'0x6f10x480'}
----------------------------------
Block 0x6ed0x480
0x6ef0x480: v4806ef(0x1) = CONST 
----------------------------------

Begin block 0x6ed0xc30
prev = {'0xc30'}, next = {'0x6f10xc30'}
----------------------------------
Block 0x6ed0xc30
0x6ef0xc30: vc306ef(0x1) = CONST 
----------------------------------

Begin block 0x6f10x210
prev = {'0x6ed0x210'}, next = {'0x23c0x210'}
----------------------------------
Block 0x6f10x210
0x6f60x210: JUMP v211(0x23c)
----------------------------------

Begin block 0x6f10x3ae
prev = {'0x6ed0x3ae'}, next = {'0x23c0x3ae'}
----------------------------------
Block 0x6f10x3ae
0x6f60x3ae: JUMP v3af(0x23c)
----------------------------------

Begin block 0x6f10x428
prev = {'0x6ed0x428'}, next = {'0x23c0x428'}
----------------------------------
Block 0x6f10x428
0x6f60x428: JUMP v429(0x23c)
----------------------------------

Begin block 0x6f10x480
prev = {'0x6ed0x480'}, next = {'0x23c0x480'}
----------------------------------
Block 0x6f10x480
0x6f60x480: JUMP v481(0x23c)
----------------------------------

Begin block 0x6f10xc30
prev = {'0x6ed0xc30'}, next = {}
----------------------------------
Block 0x6f10xc30
0x6f60xc30: RETURNPRIVATE vc30arg2 vc306ef(0x1)
----------------------------------

Begin block 0x6f10x1340
prev = {'0x1348'}, next = {}
----------------------------------
Block 0x6f10x1340
0x6f60x1340: RETURNPRIVATE v1340arg2 v1349(0x0)
----------------------------------

Begin block 0x6f7
prev = {'0x266'}, next = {'0x6ff'}
----------------------------------
Block 0x6f7
0x6f8: v6f8(0x6ff) = CONST 
0x6fb: v6fb(0xa8d) = CONST 
0x6fe: v6fe_0 = CALLPRIVATE v6fb(0xa8d) v6f8(0x6ff)
----------------------------------

Begin block 0x6ff
prev = {'0x6f7'}, next = {'0x73e', '0x704'}
----------------------------------
Block 0x6ff
0x700: v700(0x73e) = CONST 
0x703: JUMPI v700(0x73e) v6fe_0
----------------------------------

Begin block 0x704
prev = {'0x6ff'}, next = {}
----------------------------------
Block 0x704
0x704: v704(0x40) = CONST 
0x707: v707 = MLOAD v704(0x40)
0x708: v708(0x461bcd) = CONST 
0x70c: v70c(0xe5) = CONST 
0x70e: v70e(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v70c(0xe5) v708(0x461bcd)
0x710: MSTORE v707 v70e(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x711: v711(0x20) = CONST 
0x713: v713(0x4) = CONST 
0x716: v716 = ADD v707 v713(0x4)
0x719: MSTORE v716 v711(0x20)
0x71a: v71a(0x24) = CONST 
0x71d: v71d = ADD v707 v71a(0x24)
0x71e: MSTORE v71d v711(0x20)
0x71f: v71f(0x0) = CONST 
0x722: v722 = MLOAD v71f(0x0)
0x723: v723(0x20) = CONST 
0x725: v725(0x150d) = CONST 
0x72d: MSTORE v71f(0x0) v722
0x72e: v72e(0x44) = CONST 
0x731: v731 = ADD v707 v72e(0x44)
0x732: MSTORE v731 v1656(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x734: v734 = MLOAD v704(0x40)
0x738: v738 = SUB v707 v734
0x739: v739(0x64) = CONST 
0x73b: v73b = ADD v739(0x64) v738
0x73d: REVERT v734 v73b
0x1656: v1656(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0x73e
prev = {'0x6ff'}, next = {'0x753'}
----------------------------------
Block 0x73e
0x73f: v73f(0x9) = CONST 
0x741: v741 = SLOAD v73f(0x9)
0x742: v742(0x8) = CONST 
0x744: v744 = SLOAD v742(0x8)
0x745: v745(0x753) = CONST 
0x749: v749(0xffffffff) = CONST 
0x74e: v74e(0xff9) = CONST 
0x751: v751(0xff9) = AND v74e(0xff9) v749(0xffffffff)
0x752: v752_0 = CALLPRIVATE v751(0xff9) v741 v744 v745(0x753)
----------------------------------

Begin block 0x753
prev = {'0x73e'}, next = {'0x7bc', '0x75b'}
----------------------------------
Block 0x753
0x754: v754 = TIMESTAMP 
0x755: v755 = LT v754 v752_0
0x756: v756 = ISZERO v755
0x757: v757(0x7bc) = CONST 
0x75a: JUMPI v757(0x7bc) v756
----------------------------------

Begin block 0x75b
prev = {'0x753'}, next = {'0x77a'}
----------------------------------
Block 0x75b
0x75b: v75b(0x6) = CONST 
0x75d: v75d = SLOAD v75b(0x6)
0x760: v760(0x77a) = CONST 
0x764: v764(0x84595161401484a000000) = CONST 
0x770: v770(0xffffffff) = CONST 
0x775: v775(0x105a) = CONST 
0x778: v778(0x105a) = AND v775(0x105a) v770(0xffffffff)
0x779: v779_0 = CALLPRIVATE v778(0x105a) v764(0x84595161401484a000000) v75d v760(0x77a)
----------------------------------

Begin block 0x77a
prev = {'0x75b'}, next = {'0x7b7', '0x781'}
----------------------------------
Block 0x77a
0x77b: v77b = LT v779_0 v277
0x77c: v77c = ISZERO v77b
0x77d: v77d(0x7b7) = CONST 
0x780: JUMPI v77d(0x7b7) v77c
----------------------------------

Begin block 0x781
prev = {'0x77a'}, next = {}
----------------------------------
Block 0x781
0x781: v781(0x40) = CONST 
0x783: v783 = MLOAD v781(0x40)
0x784: v784(0x461bcd) = CONST 
0x788: v788(0xe5) = CONST 
0x78a: v78a(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v788(0xe5) v784(0x461bcd)
0x78c: MSTORE v783 v78a(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x78d: v78d(0x4) = CONST 
0x78f: v78f = ADD v78d(0x4) v783
0x792: v792(0x20) = CONST 
0x794: v794 = ADD v792(0x20) v78f
0x797: v797 = SUB v794 v78f
0x799: MSTORE v78f v797
0x79a: v79a(0x21) = CONST 
0x79d: MSTORE v794 v79a(0x21)
0x79e: v79e(0x20) = CONST 
0x7a0: v7a0 = ADD v79e(0x20) v794
0x7a2: v7a2(0x145d) = CONST 
0x7a5: v7a5(0x21) = CONST 
0x7a8: CODECOPY v7a0 v7a2(0x145d) v7a5(0x21)
0x7a9: v7a9(0x40) = CONST 
0x7ab: v7ab = ADD v7a9(0x40) v7a0
0x7af: v7af(0x40) = CONST 
0x7b1: v7b1 = MLOAD v7af(0x40)
0x7b4: v7b4 = SUB v7ab v7b1
0x7b6: REVERT v7b1 v7b4
----------------------------------

Begin block 0x7b7
prev = {'0x77a'}, next = {'0x80e'}
----------------------------------
Block 0x7b7
0x7b8: v7b8(0x80e) = CONST 
0x7bb: JUMP v7b8(0x80e)
----------------------------------

Begin block 0x7bc
prev = {'0x753'}, next = {'0x80e', '0x7c7'}
----------------------------------
Block 0x7bc
0x7be: v7be(0x6) = CONST 
0x7c0: v7c0 = SLOAD v7be(0x6)
0x7c1: v7c1 = LT v7c0 v277
0x7c2: v7c2 = ISZERO v7c1
0x7c3: v7c3(0x80e) = CONST 
0x7c6: JUMPI v7c3(0x80e) v7c2
----------------------------------

Begin block 0x7c7
prev = {'0x7bc'}, next = {}
----------------------------------
Block 0x7c7
0x7c7: v7c7(0x40) = CONST 
0x7ca: v7ca = MLOAD v7c7(0x40)
0x7cb: v7cb(0x461bcd) = CONST 
0x7cf: v7cf(0xe5) = CONST 
0x7d1: v7d1(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v7cf(0xe5) v7cb(0x461bcd)
0x7d3: MSTORE v7ca v7d1(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x7d4: v7d4(0x20) = CONST 
0x7d6: v7d6(0x4) = CONST 
0x7d9: v7d9 = ADD v7ca v7d6(0x4)
0x7da: MSTORE v7d9 v7d4(0x20)
0x7db: v7db(0x18) = CONST 
0x7dd: v7dd(0x24) = CONST 
0x7e0: v7e0 = ADD v7ca v7dd(0x24)
0x7e1: MSTORE v7e0 v7db(0x18)
0x7e2: v7e2(0x139bdd08195b9bdd59da081d1bdad95b9cc8185b5bdd5b9d) = CONST 
0x7fb: v7fb(0x42) = CONST 
0x7fd: v7fd(0x4e6f7420656e6f75676820746f6b656e7320616d6f756e740000000000000000) = SHL v7fb(0x42) v7e2(0x139bdd08195b9bdd59da081d1bdad95b9cc8185b5bdd5b9d)
0x7fe: v7fe(0x44) = CONST 
0x801: v801 = ADD v7ca v7fe(0x44)
0x802: MSTORE v801 v7fd(0x4e6f7420656e6f75676820746f6b656e7320616d6f756e740000000000000000)
0x804: v804 = MLOAD v7c7(0x40)
0x808: v808 = SUB v7ca v804
0x809: v809(0x64) = CONST 
0x80b: v80b = ADD v809(0x64) v808
0x80d: REVERT v804 v80b
----------------------------------

Begin block 0x80e
prev = {'0x7bc', '0x7b7'}, next = {'0x821'}
----------------------------------
Block 0x80e
0x80f: v80f(0x6) = CONST 
0x811: v811 = SLOAD v80f(0x6)
0x812: v812(0x821) = CONST 
0x817: v817(0xffffffff) = CONST 
0x81c: v81c(0x105a) = CONST 
0x81f: v81f(0x105a) = AND v81c(0x105a) v817(0xffffffff)
0x820: v820_0 = CALLPRIVATE v81f(0x105a) v277 v811 v812(0x821)
----------------------------------

Begin block 0x821
prev = {'0x80e'}, next = {'0x82f0x250'}
----------------------------------
Block 0x821
0x822: v822(0x6) = CONST 
0x824: SSTORE v822(0x6) v820_0
0x825: v825(0x82f) = CONST 
0x828: v828 = ADDRESS 
0x82b: v82b(0x10b7) = CONST 
0x82e: CALLPRIVATE v82b(0x10b7) v277 v272 v828 v825(0x82f)
----------------------------------

Begin block 0x82f0x250
prev = {'0x821'}, next = {'0x27c0x250'}
----------------------------------
Block 0x82f0x250
0x8320x250: JUMP v251(0x27c)
----------------------------------

Begin block 0x82f0x454
prev = {'0xc22'}, next = {'0x27c0x454'}
----------------------------------
Block 0x82f0x454
0x8320x454: JUMP v455(0x27c)
----------------------------------

Begin block 0x82f0x4d2
prev = {'0xced'}, next = {'0x27c0x4d2'}
----------------------------------
Block 0x82f0x4d2
0x8320x4d2: JUMP v4d3(0x27c)
----------------------------------

Begin block 0x82f0x681
prev = {'0xef9'}, next = {'0x27c0x681'}
----------------------------------
Block 0x82f0x681
0x8320x681: JUMP v682(0x27c)
----------------------------------

Begin block 0x833
prev = {'0x2e3'}, next = {'0x11fb'}
----------------------------------
Block 0x833
0x834: v834(0x0) = CONST 
0x836: v836(0x846) = CONST 
0x83a: v83a(0xa) = CONST 
0x83c: v83c(0xffffffff) = CONST 
0x841: v841(0x11fb) = CONST 
0x844: v844(0x11fb) = AND v841(0x11fb) v83c(0xffffffff)
0x845: JUMP v844(0x11fb)
----------------------------------

Begin block 0x846
prev = {'0x125c'}, next = {'0x85f'}
----------------------------------
Block 0x846
0x847: v847(0x7) = CONST 
0x849: v849 = SLOAD v847(0x7)
0x84d: v84d(0x85f) = CONST 
0x851: v851(0x1) = CONST 
0x853: v853(0x1) = CONST 
0x855: v855(0xa0) = CONST 
0x857: v857(0x10000000000000000000000000000000000000000) = SHL v855(0xa0) v853(0x1)
0x858: v858(0xffffffffffffffffffffffffffffffffffffffff) = SUB v857(0x10000000000000000000000000000000000000000) v851(0x1)
0x859: v859 = AND v858(0xffffffffffffffffffffffffffffffffffffffff) v849
0x85b: v85b(0xc30) = CONST 
0x85e: v85e_0 = CALLPRIVATE v85b(0xc30) v125d v859 v84d(0x85f)
----------------------------------

Begin block 0x85f
prev = {'0x846'}, next = {'0x1265'}
----------------------------------
Block 0x85f
0x861: v861(0x86a) = CONST 
0x864: v864 = CALLER 
0x866: v866(0x1265) = CONST 
0x869: JUMP v866(0x1265)
----------------------------------

Begin block 0x86a
prev = {'0x12e9'}, next = {'0x882'}
----------------------------------
Block 0x86a
0x86b: v86b(0x894) = CONST 
0x86f: v86f(0x88f) = CONST 
0x872: v872(0x882) = CONST 
0x876: v876(0x2) = CONST 
0x878: v878(0xffffffff) = CONST 
0x87d: v87d(0x1340) = CONST 
0x880: v880(0x1340) = AND v87d(0x1340) v878(0xffffffff)
0x881: v881_0 = CALLPRIVATE v880(0x1340) v876(0x2) v125d v872(0x882)
----------------------------------

Begin block 0x882
prev = {'0x86a'}, next = {'0x88f'}
----------------------------------
Block 0x882
0x885: v885(0xffffffff) = CONST 
0x88a: v88a(0x105a) = CONST 
0x88d: v88d(0x105a) = AND v88a(0x105a) v885(0xffffffff)
0x88e: v88e_0 = CALLPRIVATE v88d(0x105a) v881_0 v32d v86f(0x88f)
----------------------------------

Begin block 0x88f
prev = {'0x882'}, next = {'0x894'}
----------------------------------
Block 0x88f
0x890: v890(0xc30) = CONST 
0x893: v893_0 = CALLPRIVATE v890(0xc30) v88e_0 v325 v86b(0x894)
----------------------------------

Begin block 0x894
prev = {'0x88f'}, next = {'0x8a7'}
----------------------------------
Block 0x894
0x898: v898(0x40) = CONST 
0x89a: v89a = MLOAD v898(0x40)
0x89e: v89e = MLOAD v2f6
0x8a0: v8a0(0x20) = CONST 
0x8a2: v8a2 = ADD v8a0(0x20) v2f6
----------------------------------

Begin block 0x8a7
prev = {'0x894', '0x8b0'}, next = {'0x8b0', '0x8c6'}
----------------------------------
Block 0x8a7
0x8a7_0x2: v8a7_2 = PHI v89e v8b9
0x8a8: v8a8(0x20) = CONST 
0x8ab: v8ab = LT v8a7_2 v8a8(0x20)
0x8ac: v8ac(0x8c6) = CONST 
0x8af: JUMPI v8ac(0x8c6) v8ab
----------------------------------

Begin block 0x8b0
prev = {'0x8a7'}, next = {'0x8a7'}
----------------------------------
Block 0x8b0
0x8b0_0x0: v8b0_0 = PHI v8a2 v8c1
0x8b0_0x1: v8b0_1 = PHI v89a v8bf
0x8b0_0x2: v8b0_2 = PHI v89e v8b9
0x8b1: v8b1 = MLOAD v8b0_0
0x8b3: MSTORE v8b0_1 v8b1
0x8b4: v8b4(0x1f) = CONST 
0x8b6: v8b6(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v8b4(0x1f)
0x8b9: v8b9 = ADD v8b0_2 v8b6(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
0x8bb: v8bb(0x20) = CONST 
0x8bf: v8bf = ADD v8bb(0x20) v8b0_1
0x8c1: v8c1 = ADD v8bb(0x20) v8b0_0
0x8c2: v8c2(0x8a7) = CONST 
0x8c5: JUMP v8c2(0x8a7)
----------------------------------

Begin block 0x8c6
prev = {'0x8a7'}, next = {'0x27c0x27e'}
----------------------------------
Block 0x8c6
0x8c6_0x0: v8c6_0 = PHI v8a2 v8c1
0x8c6_0x1: v8c6_1 = PHI v89a v8bf
0x8c6_0x2: v8c6_2 = PHI v89e v8b9
0x8c7: v8c7 = MLOAD v8c6_0
0x8c9: v8c9 = MLOAD v8c6_1
0x8ca: v8ca(0x20) = CONST 
0x8cf: v8cf = SUB v8ca(0x20) v8c6_2
0x8d0: v8d0(0x100) = CONST 
0x8d3: v8d3 = EXP v8d0(0x100) v8cf
0x8d4: v8d4(0x0) = CONST 
0x8d6: v8d6(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v8d4(0x0)
0x8d7: v8d7 = ADD v8d6(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v8d3
0x8d9: v8d9 = NOT v8d7
0x8dc: v8dc = AND v8c7 v8d9
0x8de: v8de = AND v8c9 v8d7
0x8e2: v8e2 = OR v8de v8dc
0x8e4: MSTORE v8c6_1 v8e2
0x8e5: v8e5(0x40) = CONST 
0x8e7: v8e7 = MLOAD v8e5(0x40)
0x8e9: v8e9 = ADD v89a v89e
0x8ec: v8ec = SUB v8e9 v8e7
0x8ee: v8ee = SHA3 v8e7 v8ec
0x8f1: v8f1(0x1e642ad75dd0774ed7ebdb77c5429379f3e288b8349441112247ce841ecaaca9) = CONST 
0x914: v914(0x0) = CONST 
0x919: LOG3 v8e7 v914(0x0) v8f1(0x1e642ad75dd0774ed7ebdb77c5429379f3e288b8349441112247ce841ecaaca9) v8ee v125d
0x91e: JUMP v27f(0x27c)
----------------------------------

Begin block 0x91f
prev = {'0x332'}, next = {'0x33a0x332'}
----------------------------------
Block 0x91f
0x920: v920(0x3) = CONST 
0x922: v922 = SLOAD v920(0x3)
0x924: JUMP v333(0x33a)
----------------------------------

Begin block 0x925
prev = {'0x362'}, next = {'0x932'}
----------------------------------
Block 0x925
0x926: v926(0x0) = CONST 
0x928: v928(0x932) = CONST 
0x92e: v92e(0x10b7) = CONST 
0x931: CALLPRIVATE v92e(0x10b7) v37d v378 v36f v928(0x932)
----------------------------------

Begin block 0x932
prev = {'0x925'}, next = {'0x96d0x34c'}
----------------------------------
Block 0x932
0x933: v933(0x1) = CONST 
0x935: v935(0x1) = CONST 
0x937: v937(0xa0) = CONST 
0x939: v939(0x10000000000000000000000000000000000000000) = SHL v937(0xa0) v935(0x1)
0x93a: v93a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v939(0x10000000000000000000000000000000000000000) v933(0x1)
0x93c: v93c = AND v36f v93a(0xffffffffffffffffffffffffffffffffffffffff)
0x93d: v93d(0x0) = CONST 
0x941: MSTORE v93d(0x0) v93c
0x942: v942(0x2) = CONST 
0x944: v944(0x20) = CONST 
0x948: MSTORE v944(0x20) v942(0x2)
0x949: v949(0x40) = CONST 
0x94d: v94d = SHA3 v93d(0x0) v949(0x40)
0x94e: v94e = CALLER 
0x951: MSTORE v93d(0x0) v94e
0x953: MSTORE v944(0x20) v94d
0x956: v956 = SHA3 v93d(0x0) v949(0x40)
0x957: v957 = SLOAD v956
0x958: v958(0x972) = CONST 
0x95e: v95e(0x96d) = CONST 
0x963: v963(0xffffffff) = CONST 
0x968: v968(0x105a) = CONST 
0x96b: v96b(0x105a) = AND v968(0x105a) v963(0xffffffff)
0x96c: v96c_0 = CALLPRIVATE v96b(0x105a) v37d v957 v95e(0x96d)
----------------------------------

Begin block 0x96d0x34c
prev = {'0x932'}, next = {'0x972'}
----------------------------------
Block 0x96d0x34c
0x96e0x34c: v34c96e(0xf0d) = CONST 
0x9710x34c: CALLPRIVATE v34c96e(0xf0d) v96c_0 v94e v36f v958(0x972)
----------------------------------

Begin block 0x96d0x3ae
prev = {'0x990'}, next = {'0x6ed0x3ae'}
----------------------------------
Block 0x96d0x3ae
0x96e0x3ae: v3ae96e(0xf0d) = CONST 
0x9710x3ae: CALLPRIVATE v3ae96e(0xf0d) v9cb_0 v3d0 v991 v9b7(0x6ed)
----------------------------------

Begin block 0x96d0x428
prev = {'0xabd'}, next = {'0x6ed0x428'}
----------------------------------
Block 0x96d0x428
0x96e0x428: v42896e(0xf0d) = CONST 
0x9710x428: CALLPRIVATE v42896e(0xf0d) vaf8_0 v44a vabe vae4(0x6ed)
----------------------------------

Begin block 0x972
prev = {'0x96d0x34c'}, next = {'0x23c0x34c'}
----------------------------------
Block 0x972
0x974: v974(0x1) = CONST 
0x97b: JUMP v34d(0x23c)
----------------------------------

Begin block 0x97c
prev = {'0x382'}, next = {'0x38a0x382'}
----------------------------------
Block 0x97c
0x97d: v97d(0x7) = CONST 
0x97f: v97f = SLOAD v97d(0x7)
0x980: v980(0x1) = CONST 
0x982: v982(0x1) = CONST 
0x984: v984(0xa0) = CONST 
0x986: v986(0x10000000000000000000000000000000000000000) = SHL v984(0xa0) v982(0x1)
0x987: v987(0xffffffffffffffffffffffffffffffffffffffff) = SUB v986(0x10000000000000000000000000000000000000000) v980(0x1)
0x988: v988 = AND v987(0xffffffffffffffffffffffffffffffffffffffff) v97f
0x98a: JUMP v383(0x38a)
----------------------------------

Begin block 0x98b
prev = {'0x3a6'}, next = {'0x33a0x3a6'}
----------------------------------
Block 0x98b
0x98c: v98c(0x12) = CONST 
0x98f: JUMP v3a7(0x33a)
----------------------------------

Begin block 0x990
prev = {'0x3c4'}, next = {'0x96d0x3ae'}
----------------------------------
Block 0x990
0x991: v991 = CALLER 
0x992: v992(0x0) = CONST 
0x996: MSTORE v992(0x0) v991
0x997: v997(0x2) = CONST 
0x999: v999(0x20) = CONST 
0x99d: MSTORE v999(0x20) v997(0x2)
0x99e: v99e(0x40) = CONST 
0x9a2: v9a2 = SHA3 v992(0x0) v99e(0x40)
0x9a3: v9a3(0x1) = CONST 
0x9a5: v9a5(0x1) = CONST 
0x9a7: v9a7(0xa0) = CONST 
0x9a9: v9a9(0x10000000000000000000000000000000000000000) = SHL v9a7(0xa0) v9a5(0x1)
0x9aa: v9aa(0xffffffffffffffffffffffffffffffffffffffff) = SUB v9a9(0x10000000000000000000000000000000000000000) v9a3(0x1)
0x9ac: v9ac = AND v3d0 v9aa(0xffffffffffffffffffffffffffffffffffffffff)
0x9ae: MSTORE v992(0x0) v9ac
0x9b1: MSTORE v999(0x20) v9a2
0x9b3: v9b3 = SHA3 v992(0x0) v99e(0x40)
0x9b4: v9b4 = SLOAD v9b3
0x9b7: v9b7(0x6ed) = CONST 
0x9bd: v9bd(0x96d) = CONST 
0x9c2: v9c2(0xffffffff) = CONST 
0x9c7: v9c7(0xff9) = CONST 
0x9ca: v9ca(0xff9) = AND v9c7(0xff9) v9c2(0xffffffff)
0x9cb: v9cb_0 = CALLPRIVATE v9ca(0xff9) v3d5 v9b4 v9bd(0x96d)
----------------------------------

Begin block 0x9cc
prev = {'0x3da'}, next = {'0x33a0x3da'}
----------------------------------
Block 0x9cc
0x9cd: v9cd(0x6) = CONST 
0x9cf: v9cf = SLOAD v9cd(0x6)
0x9d1: JUMP v3db(0x33a)
----------------------------------

Begin block 0x9d2
prev = {'0x3f8'}, next = {'0x33a0x3e2'}
----------------------------------
Block 0x9d2
0x9d3: v9d3(0x1) = CONST 
0x9d5: v9d5(0x1) = CONST 
0x9d7: v9d7(0xa0) = CONST 
0x9d9: v9d9(0x10000000000000000000000000000000000000000) = SHL v9d7(0xa0) v9d5(0x1)
0x9da: v9da(0xffffffffffffffffffffffffffffffffffffffff) = SUB v9d9(0x10000000000000000000000000000000000000000) v9d3(0x1)
0x9db: v9db = AND v9da(0xffffffffffffffffffffffffffffffffffffffff) v403
0x9dc: v9dc(0x0) = CONST 
0x9e0: MSTORE v9dc(0x0) v9db
0x9e1: v9e1(0x1) = CONST 
0x9e3: v9e3(0x20) = CONST 
0x9e5: MSTORE v9e3(0x20) v9e1(0x1)
0x9e6: v9e6(0x40) = CONST 
0x9e9: v9e9 = SHA3 v9dc(0x0) v9e6(0x40)
0x9ea: v9ea = SLOAD v9e9
0x9ec: JUMP v3e3(0x33a)
----------------------------------

Begin block 0x9ed
prev = {'0x408'}, next = {'0x9f5'}
----------------------------------
Block 0x9ed
0x9ee: v9ee(0x9f5) = CONST 
0x9f1: v9f1(0xa8d) = CONST 
0x9f4: v9f4_0 = CALLPRIVATE v9f1(0xa8d) v9ee(0x9f5)
----------------------------------

Begin block 0x9f5
prev = {'0x9ed'}, next = {'0x9fa', '0xa34'}
----------------------------------
Block 0x9f5
0x9f6: v9f6(0xa34) = CONST 
0x9f9: JUMPI v9f6(0xa34) v9f4_0
----------------------------------

Begin block 0x9fa
prev = {'0x9f5'}, next = {}
----------------------------------
Block 0x9fa
0x9fa: v9fa(0x40) = CONST 
0x9fd: v9fd = MLOAD v9fa(0x40)
0x9fe: v9fe(0x461bcd) = CONST 
0xa02: va02(0xe5) = CONST 
0xa04: va04(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL va02(0xe5) v9fe(0x461bcd)
0xa06: MSTORE v9fd va04(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xa07: va07(0x20) = CONST 
0xa09: va09(0x4) = CONST 
0xa0c: va0c = ADD v9fd va09(0x4)
0xa0f: MSTORE va0c va07(0x20)
0xa10: va10(0x24) = CONST 
0xa13: va13 = ADD v9fd va10(0x24)
0xa14: MSTORE va13 va07(0x20)
0xa15: va15(0x0) = CONST 
0xa18: va18 = MLOAD va15(0x0)
0xa19: va19(0x20) = CONST 
0xa1b: va1b(0x150d) = CONST 
0xa23: MSTORE va15(0x0) va18
0xa24: va24(0x44) = CONST 
0xa27: va27 = ADD v9fd va24(0x44)
0xa28: MSTORE va27 v165b(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xa2a: va2a = MLOAD v9fa(0x40)
0xa2e: va2e = SUB v9fd va2a
0xa2f: va2f(0x64) = CONST 
0xa31: va31 = ADD va2f(0x64) va2e
0xa33: REVERT va2a va31
0x165b: v165b(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0xa34
prev = {'0x9f5'}, next = {'0x27c0x408'}
----------------------------------
Block 0xa34
0xa35: va35(0x0) = CONST 
0xa38: va38 = SLOAD va35(0x0)
0xa39: va39(0x40) = CONST 
0xa3b: va3b = MLOAD va39(0x40)
0xa3c: va3c(0x1) = CONST 
0xa3e: va3e(0x1) = CONST 
0xa40: va40(0xa0) = CONST 
0xa42: va42(0x10000000000000000000000000000000000000000) = SHL va40(0xa0) va3e(0x1)
0xa43: va43(0xffffffffffffffffffffffffffffffffffffffff) = SUB va42(0x10000000000000000000000000000000000000000) va3c(0x1)
0xa46: va46 = AND va38 va43(0xffffffffffffffffffffffffffffffffffffffff)
0xa48: va48(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0xa6c: LOG3 va3b va35(0x0) va48(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) va46 va35(0x0)
0xa6d: va6d(0x0) = CONST 
0xa70: va70 = SLOAD va6d(0x0)
0xa71: va71(0x1) = CONST 
0xa73: va73(0x1) = CONST 
0xa75: va75(0xa0) = CONST 
0xa77: va77(0x10000000000000000000000000000000000000000) = SHL va75(0xa0) va73(0x1)
0xa78: va78(0xffffffffffffffffffffffffffffffffffffffff) = SUB va77(0x10000000000000000000000000000000000000000) va71(0x1)
0xa79: va79(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT va78(0xffffffffffffffffffffffffffffffffffffffff)
0xa7a: va7a = AND va79(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) va70
0xa7c: SSTORE va6d(0x0) va7a
0xa7d: JUMP v409(0x27c)
----------------------------------

Begin block 0xa7e
prev = {'0x410'}, next = {'0x38a0x410'}
----------------------------------
Block 0xa7e
0xa7f: va7f(0x0) = CONST 
0xa81: va81 = SLOAD va7f(0x0)
0xa82: va82(0x1) = CONST 
0xa84: va84(0x1) = CONST 
0xa86: va86(0xa0) = CONST 
0xa88: va88(0x10000000000000000000000000000000000000000) = SHL va86(0xa0) va84(0x1)
0xa89: va89(0xffffffffffffffffffffffffffffffffffffffff) = SUB va88(0x10000000000000000000000000000000000000000) va82(0x1)
0xa8a: va8a = AND va89(0xffffffffffffffffffffffffffffffffffffffff) va81
0xa8c: JUMP v411(0x38a)
----------------------------------

Begin block 0xa8d
prev = {}, next = {}
----------------------------------
function 0xa8d(va8darg0)
Block 0xa8d
0xa8e: va8e(0x0) = CONST 
0xa90: va90 = SLOAD va8e(0x0)
0xa91: va91(0x1) = CONST 
0xa93: va93(0x1) = CONST 
0xa95: va95(0xa0) = CONST 
0xa97: va97(0x10000000000000000000000000000000000000000) = SHL va95(0xa0) va93(0x1)
0xa98: va98(0xffffffffffffffffffffffffffffffffffffffff) = SUB va97(0x10000000000000000000000000000000000000000) va91(0x1)
0xa99: va99 = AND va98(0xffffffffffffffffffffffffffffffffffffffff) va90
0xa9a: va9a = CALLER 
0xa9b: va9b = EQ va9a va99
0xa9d: RETURNPRIVATE va8darg0 va9b
----------------------------------

Begin block 0xa9e
prev = {'0x420'}, next = {'0x19b0x420'}
----------------------------------
Block 0xa9e
0xa9f: va9f(0x40) = CONST 
0xaa1: vaa1 = MLOAD va9f(0x40)
0xaa3: vaa3(0x40) = CONST 
0xaa5: vaa5 = ADD vaa3(0x40) vaa1
0xaa6: vaa6(0x40) = CONST 
0xaa8: MSTORE vaa6(0x40) vaa5
0xaaa: vaaa(0x3) = CONST 
0xaad: MSTORE vaa1 vaaa(0x3)
0xaae: vaae(0x20) = CONST 
0xab0: vab0 = ADD vaae(0x20) vaa1
0xab1: vab1(0x4c554d) = CONST 
0xab5: vab5(0xe8) = CONST 
0xab7: vab7(0x4c554d0000000000000000000000000000000000000000000000000000000000) = SHL vab5(0xe8) vab1(0x4c554d)
0xab9: MSTORE vab0 vab7(0x4c554d0000000000000000000000000000000000000000000000000000000000)
0xabc: JUMP v421(0x19b)
----------------------------------

Begin block 0xabd
prev = {'0x43e'}, next = {'0x96d0x428'}
----------------------------------
Block 0xabd
0xabe: vabe = CALLER 
0xabf: vabf(0x0) = CONST 
0xac3: MSTORE vabf(0x0) vabe
0xac4: vac4(0x2) = CONST 
0xac6: vac6(0x20) = CONST 
0xaca: MSTORE vac6(0x20) vac4(0x2)
0xacb: vacb(0x40) = CONST 
0xacf: vacf = SHA3 vabf(0x0) vacb(0x40)
0xad0: vad0(0x1) = CONST 
0xad2: vad2(0x1) = CONST 
0xad4: vad4(0xa0) = CONST 
0xad6: vad6(0x10000000000000000000000000000000000000000) = SHL vad4(0xa0) vad2(0x1)
0xad7: vad7(0xffffffffffffffffffffffffffffffffffffffff) = SUB vad6(0x10000000000000000000000000000000000000000) vad0(0x1)
0xad9: vad9 = AND v44a vad7(0xffffffffffffffffffffffffffffffffffffffff)
0xadb: MSTORE vabf(0x0) vad9
0xade: MSTORE vac6(0x20) vacf
0xae0: vae0 = SHA3 vabf(0x0) vacb(0x40)
0xae1: vae1 = SLOAD vae0
0xae4: vae4(0x6ed) = CONST 
0xaea: vaea(0x96d) = CONST 
0xaef: vaef(0xffffffff) = CONST 
0xaf4: vaf4(0x105a) = CONST 
0xaf7: vaf7(0x105a) = AND vaf4(0x105a) vaef(0xffffffff)
0xaf8: vaf8_0 = CALLPRIVATE vaf7(0x105a) v44f vae1 vaea(0x96d)
----------------------------------

Begin block 0xaf9
prev = {'0x46a'}, next = {'0xb01'}
----------------------------------
Block 0xaf9
0xafa: vafa(0xb01) = CONST 
0xafd: vafd(0xa8d) = CONST 
0xb00: vb00_0 = CALLPRIVATE vafd(0xa8d) vafa(0xb01)
----------------------------------

Begin block 0xb01
prev = {'0xaf9'}, next = {'0xb40', '0xb06'}
----------------------------------
Block 0xb01
0xb02: vb02(0xb40) = CONST 
0xb05: JUMPI vb02(0xb40) vb00_0
----------------------------------

Begin block 0xb06
prev = {'0xb01'}, next = {}
----------------------------------
Block 0xb06
0xb06: vb06(0x40) = CONST 
0xb09: vb09 = MLOAD vb06(0x40)
0xb0a: vb0a(0x461bcd) = CONST 
0xb0e: vb0e(0xe5) = CONST 
0xb10: vb10(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vb0e(0xe5) vb0a(0x461bcd)
0xb12: MSTORE vb09 vb10(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xb13: vb13(0x20) = CONST 
0xb15: vb15(0x4) = CONST 
0xb18: vb18 = ADD vb09 vb15(0x4)
0xb1b: MSTORE vb18 vb13(0x20)
0xb1c: vb1c(0x24) = CONST 
0xb1f: vb1f = ADD vb09 vb1c(0x24)
0xb20: MSTORE vb1f vb13(0x20)
0xb21: vb21(0x0) = CONST 
0xb24: vb24 = MLOAD vb21(0x0)
0xb25: vb25(0x20) = CONST 
0xb27: vb27(0x150d) = CONST 
0xb2f: MSTORE vb21(0x0) vb24
0xb30: vb30(0x44) = CONST 
0xb33: vb33 = ADD vb09 vb30(0x44)
0xb34: MSTORE vb33 v1660(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xb36: vb36 = MLOAD vb06(0x40)
0xb3a: vb3a = SUB vb09 vb36
0xb3b: vb3b(0x64) = CONST 
0xb3d: vb3d = ADD vb3b(0x64) vb3a
0xb3f: REVERT vb36 vb3d
0x1660: v1660(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0xb40
prev = {'0xb01'}, next = {'0xb55'}
----------------------------------
Block 0xb40
0xb41: vb41(0x9) = CONST 
0xb43: vb43 = SLOAD vb41(0x9)
0xb44: vb44(0x8) = CONST 
0xb46: vb46 = SLOAD vb44(0x8)
0xb47: vb47(0xb55) = CONST 
0xb4b: vb4b(0xffffffff) = CONST 
0xb50: vb50(0xff9) = CONST 
0xb53: vb53(0xff9) = AND vb50(0xff9) vb4b(0xffffffff)
0xb54: vb54_0 = CALLPRIVATE vb53(0xff9) vb43 vb46 vb47(0xb55)
----------------------------------

Begin block 0xb55
prev = {'0xb40'}, next = {'0xbbd', '0xb5d'}
----------------------------------
Block 0xb55
0xb56: vb56 = TIMESTAMP 
0xb57: vb57 = LT vb56 vb54_0
0xb58: vb58 = ISZERO vb57
0xb59: vb59(0xbbd) = CONST 
0xb5c: JUMPI vb59(0xbbd) vb58
----------------------------------

Begin block 0xb5d
prev = {'0xb55'}, next = {'0xb7b'}
----------------------------------
Block 0xb5d
0xb5d: vb5d(0x4) = CONST 
0xb5f: vb5f = SLOAD vb5d(0x4)
0xb62: vb62(0xb7b) = CONST 
0xb66: vb66(0x89a49213386742400000) = CONST 
0xb71: vb71(0xffffffff) = CONST 
0xb76: vb76(0x105a) = CONST 
0xb79: vb79(0x105a) = AND vb76(0x105a) vb71(0xffffffff)
0xb7a: vb7a_0 = CALLPRIVATE vb79(0x105a) vb66(0x89a49213386742400000) vb5f vb62(0xb7b)
----------------------------------

Begin block 0xb7b
prev = {'0xb5d'}, next = {'0xbb8', '0xb82'}
----------------------------------
Block 0xb7b
0xb7c: vb7c = LT vb7a_0 v47b
0xb7d: vb7d = ISZERO vb7c
0xb7e: vb7e(0xbb8) = CONST 
0xb81: JUMPI vb7e(0xbb8) vb7d
----------------------------------

Begin block 0xb82
prev = {'0xb7b'}, next = {}
----------------------------------
Block 0xb82
0xb82: vb82(0x40) = CONST 
0xb84: vb84 = MLOAD vb82(0x40)
0xb85: vb85(0x461bcd) = CONST 
0xb89: vb89(0xe5) = CONST 
0xb8b: vb8b(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vb89(0xe5) vb85(0x461bcd)
0xb8d: MSTORE vb84 vb8b(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xb8e: vb8e(0x4) = CONST 
0xb90: vb90 = ADD vb8e(0x4) vb84
0xb93: vb93(0x20) = CONST 
0xb95: vb95 = ADD vb93(0x20) vb90
0xb98: vb98 = SUB vb95 vb90
0xb9a: MSTORE vb90 vb98
0xb9b: vb9b(0x21) = CONST 
0xb9e: MSTORE vb95 vb9b(0x21)
0xb9f: vb9f(0x20) = CONST 
0xba1: vba1 = ADD vb9f(0x20) vb95
0xba3: vba3(0x145d) = CONST 
0xba6: vba6(0x21) = CONST 
0xba9: CODECOPY vba1 vba3(0x145d) vba6(0x21)
0xbaa: vbaa(0x40) = CONST 
0xbac: vbac = ADD vbaa(0x40) vba1
0xbb0: vbb0(0x40) = CONST 
0xbb2: vbb2 = MLOAD vbb0(0x40)
0xbb5: vbb5 = SUB vbac vbb2
0xbb7: REVERT vbb2 vbb5
----------------------------------

Begin block 0xbb8
prev = {'0xb7b'}, next = {'0xc0f'}
----------------------------------
Block 0xbb8
0xbb9: vbb9(0xc0f) = CONST 
0xbbc: JUMP vbb9(0xc0f)
----------------------------------

Begin block 0xbbd
prev = {'0xb55'}, next = {'0xc0f', '0xbc8'}
----------------------------------
Block 0xbbd
0xbbf: vbbf(0x4) = CONST 
0xbc1: vbc1 = SLOAD vbbf(0x4)
0xbc2: vbc2 = LT vbc1 v47b
0xbc3: vbc3 = ISZERO vbc2
0xbc4: vbc4(0xc0f) = CONST 
0xbc7: JUMPI vbc4(0xc0f) vbc3
----------------------------------

Begin block 0xbc8
prev = {'0xbbd'}, next = {}
----------------------------------
Block 0xbc8
0xbc8: vbc8(0x40) = CONST 
0xbcb: vbcb = MLOAD vbc8(0x40)
0xbcc: vbcc(0x461bcd) = CONST 
0xbd0: vbd0(0xe5) = CONST 
0xbd2: vbd2(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vbd0(0xe5) vbcc(0x461bcd)
0xbd4: MSTORE vbcb vbd2(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xbd5: vbd5(0x20) = CONST 
0xbd7: vbd7(0x4) = CONST 
0xbda: vbda = ADD vbcb vbd7(0x4)
0xbdb: MSTORE vbda vbd5(0x20)
0xbdc: vbdc(0x18) = CONST 
0xbde: vbde(0x24) = CONST 
0xbe1: vbe1 = ADD vbcb vbde(0x24)
0xbe2: MSTORE vbe1 vbdc(0x18)
0xbe3: vbe3(0x139bdd08195b9bdd59da081d1bdad95b9cc8185b5bdd5b9d) = CONST 
0xbfc: vbfc(0x42) = CONST 
0xbfe: vbfe(0x4e6f7420656e6f75676820746f6b656e7320616d6f756e740000000000000000) = SHL vbfc(0x42) vbe3(0x139bdd08195b9bdd59da081d1bdad95b9cc8185b5bdd5b9d)
0xbff: vbff(0x44) = CONST 
0xc02: vc02 = ADD vbcb vbff(0x44)
0xc03: MSTORE vc02 vbfe(0x4e6f7420656e6f75676820746f6b656e7320616d6f756e740000000000000000)
0xc05: vc05 = MLOAD vbc8(0x40)
0xc09: vc09 = SUB vbcb vc05
0xc0a: vc0a(0x64) = CONST 
0xc0c: vc0c = ADD vc0a(0x64) vc09
0xc0e: REVERT vc05 vc0c
----------------------------------

Begin block 0xc0f
prev = {'0xbb8', '0xbbd'}, next = {'0xc22'}
----------------------------------
Block 0xc0f
0xc10: vc10(0x4) = CONST 
0xc12: vc12 = SLOAD vc10(0x4)
0xc13: vc13(0xc22) = CONST 
0xc18: vc18(0xffffffff) = CONST 
0xc1d: vc1d(0x105a) = CONST 
0xc20: vc20(0x105a) = AND vc1d(0x105a) vc18(0xffffffff)
0xc21: vc21_0 = CALLPRIVATE vc20(0x105a) v47b vc12 vc13(0xc22)
----------------------------------

Begin block 0xc22
prev = {'0xc0f'}, next = {'0x82f0x454'}
----------------------------------
Block 0xc22
0xc23: vc23(0x4) = CONST 
0xc25: SSTORE vc23(0x4) vc21_0
0xc26: vc26(0x82f) = CONST 
0xc29: vc29 = ADDRESS 
0xc2c: vc2c(0x10b7) = CONST 
0xc2f: CALLPRIVATE vc2c(0x10b7) v47b v476 vc29 vc26(0x82f)
----------------------------------

Begin block 0xc30
prev = {}, next = {'0x6ed0xc30'}
----------------------------------
function 0xc30(vc30arg0, vc30arg1, vc30arg2)
Block 0xc30
0xc31: vc31(0x0) = CONST 
0xc33: vc33(0x6ed) = CONST 
0xc36: vc36 = CALLER 
0xc39: vc39(0x10b7) = CONST 
0xc3c: CALLPRIVATE vc39(0x10b7) vc30arg0 vc30arg1 vc36 vc33(0x6ed)
----------------------------------

Begin block 0xc300x480
prev = {'0x496'}, next = {'0x6ed0x480'}
----------------------------------
Block 0xc300x480
0xc310x480: v480c31(0x0) = CONST 
0xc330x480: v480c33(0x6ed) = CONST 
0xc360x480: v480c36 = CALLER 
0xc390x480: v480c39(0x10b7) = CONST 
0xc3c0x480: CALLPRIVATE v480c39(0x10b7) v4a7 v4a2 v480c36 v480c33(0x6ed)
----------------------------------

Begin block 0xc3d
prev = {'0x4c2'}, next = {'0xc45'}
----------------------------------
Block 0xc3d
0xc3e: vc3e(0xc45) = CONST 
0xc41: vc41(0xa8d) = CONST 
0xc44: vc44_0 = CALLPRIVATE vc41(0xa8d) vc3e(0xc45)
----------------------------------

Begin block 0xc45
prev = {'0xc3d'}, next = {'0xc4a', '0xc84'}
----------------------------------
Block 0xc45
0xc46: vc46(0xc84) = CONST 
0xc49: JUMPI vc46(0xc84) vc44_0
----------------------------------

Begin block 0xc4a
prev = {'0xc45'}, next = {}
----------------------------------
Block 0xc4a
0xc4a: vc4a(0x40) = CONST 
0xc4d: vc4d = MLOAD vc4a(0x40)
0xc4e: vc4e(0x461bcd) = CONST 
0xc52: vc52(0xe5) = CONST 
0xc54: vc54(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vc52(0xe5) vc4e(0x461bcd)
0xc56: MSTORE vc4d vc54(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xc57: vc57(0x20) = CONST 
0xc59: vc59(0x4) = CONST 
0xc5c: vc5c = ADD vc4d vc59(0x4)
0xc5f: MSTORE vc5c vc57(0x20)
0xc60: vc60(0x24) = CONST 
0xc63: vc63 = ADD vc4d vc60(0x24)
0xc64: MSTORE vc63 vc57(0x20)
0xc65: vc65(0x0) = CONST 
0xc68: vc68 = MLOAD vc65(0x0)
0xc69: vc69(0x20) = CONST 
0xc6b: vc6b(0x150d) = CONST 
0xc73: MSTORE vc65(0x0) vc68
0xc74: vc74(0x44) = CONST 
0xc77: vc77 = ADD vc4d vc74(0x44)
0xc78: MSTORE vc77 v1665(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xc7a: vc7a = MLOAD vc4a(0x40)
0xc7e: vc7e = SUB vc4d vc7a
0xc7f: vc7f(0x64) = CONST 
0xc81: vc81 = ADD vc7f(0x64) vc7e
0xc83: REVERT vc7a vc81
0x1665: v1665(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0xc84
prev = {'0xc45'}, next = {'0x27c0x4ac'}
----------------------------------
Block 0xc84
0xc85: vc85(0x7) = CONST 
0xc88: vc88 = SLOAD vc85(0x7)
0xc89: vc89(0x1) = CONST 
0xc8b: vc8b(0x1) = CONST 
0xc8d: vc8d(0xa0) = CONST 
0xc8f: vc8f(0x10000000000000000000000000000000000000000) = SHL vc8d(0xa0) vc8b(0x1)
0xc90: vc90(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc8f(0x10000000000000000000000000000000000000000) vc89(0x1)
0xc91: vc91(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vc90(0xffffffffffffffffffffffffffffffffffffffff)
0xc92: vc92 = AND vc91(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) vc88
0xc93: vc93(0x1) = CONST 
0xc95: vc95(0x1) = CONST 
0xc97: vc97(0xa0) = CONST 
0xc99: vc99(0x10000000000000000000000000000000000000000) = SHL vc97(0xa0) vc95(0x1)
0xc9a: vc9a(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc99(0x10000000000000000000000000000000000000000) vc93(0x1)
0xc9e: vc9e = AND vc9a(0xffffffffffffffffffffffffffffffffffffffff) v4cd
0xca2: vca2 = OR vc9e vc92
0xca4: SSTORE vc85(0x7) vca2
0xca5: JUMP v4ad(0x27c)
----------------------------------

Begin block 0xca6
prev = {'0x4e8'}, next = {'0xcae'}
----------------------------------
Block 0xca6
0xca7: vca7(0xcae) = CONST 
0xcaa: vcaa(0xa8d) = CONST 
0xcad: vcad_0 = CALLPRIVATE vcaa(0xa8d) vca7(0xcae)
----------------------------------

Begin block 0xcae
prev = {'0xca6'}, next = {'0xced', '0xcb3'}
----------------------------------
Block 0xcae
0xcaf: vcaf(0xced) = CONST 
0xcb2: JUMPI vcaf(0xced) vcad_0
----------------------------------

Begin block 0xcb3
prev = {'0xcae'}, next = {}
----------------------------------
Block 0xcb3
0xcb3: vcb3(0x40) = CONST 
0xcb6: vcb6 = MLOAD vcb3(0x40)
0xcb7: vcb7(0x461bcd) = CONST 
0xcbb: vcbb(0xe5) = CONST 
0xcbd: vcbd(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vcbb(0xe5) vcb7(0x461bcd)
0xcbf: MSTORE vcb6 vcbd(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xcc0: vcc0(0x20) = CONST 
0xcc2: vcc2(0x4) = CONST 
0xcc5: vcc5 = ADD vcb6 vcc2(0x4)
0xcc8: MSTORE vcc5 vcc0(0x20)
0xcc9: vcc9(0x24) = CONST 
0xccc: vccc = ADD vcb6 vcc9(0x24)
0xccd: MSTORE vccc vcc0(0x20)
0xcce: vcce(0x0) = CONST 
0xcd1: vcd1 = MLOAD vcce(0x0)
0xcd2: vcd2(0x20) = CONST 
0xcd4: vcd4(0x150d) = CONST 
0xcdc: MSTORE vcce(0x0) vcd1
0xcdd: vcdd(0x44) = CONST 
0xce0: vce0 = ADD vcb6 vcdd(0x44)
0xce1: MSTORE vce0 v166a(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xce3: vce3 = MLOAD vcb3(0x40)
0xce7: vce7 = SUB vcb6 vce3
0xce8: vce8(0x64) = CONST 
0xcea: vcea = ADD vce8(0x64) vce7
0xcec: REVERT vce3 vcea
0x166a: v166a(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0xced
prev = {'0xcae'}, next = {'0x82f0x4d2'}
----------------------------------
Block 0xced
0xcee: vcee(0x82f) = CONST 
0xcf1: vcf1 = ADDRESS 
0xcf4: vcf4(0x10b7) = CONST 
0xcf7: CALLPRIVATE vcf4(0x10b7) v4f9 v4f4 vcf1 vcee(0x82f)
----------------------------------

Begin block 0xcf8
prev = {'0x4fe'}, next = {'0x33a0x4fe'}
----------------------------------
Block 0xcf8
0xcf9: vcf9(0x5) = CONST 
0xcfb: vcfb = SLOAD vcf9(0x5)
0xcfd: JUMP v4ff(0x33a)
----------------------------------

Begin block 0xcfe
prev = {'0x5ef'}, next = {'0xd06'}
----------------------------------
Block 0xcfe
0xcff: vcff(0xd06) = CONST 
0xd02: vd02(0xa8d) = CONST 
0xd05: vd05_0 = CALLPRIVATE vd02(0xa8d) vcff(0xd06)
----------------------------------

Begin block 0xd06
prev = {'0xcfe'}, next = {'0xd0b', '0xd45'}
----------------------------------
Block 0xd06
0xd07: vd07(0xd45) = CONST 
0xd0a: JUMPI vd07(0xd45) vd05_0
----------------------------------

Begin block 0xd0b
prev = {'0xd06'}, next = {}
----------------------------------
Block 0xd0b
0xd0b: vd0b(0x40) = CONST 
0xd0e: vd0e = MLOAD vd0b(0x40)
0xd0f: vd0f(0x461bcd) = CONST 
0xd13: vd13(0xe5) = CONST 
0xd15: vd15(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vd13(0xe5) vd0f(0x461bcd)
0xd17: MSTORE vd0e vd15(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xd18: vd18(0x20) = CONST 
0xd1a: vd1a(0x4) = CONST 
0xd1d: vd1d = ADD vd0e vd1a(0x4)
0xd20: MSTORE vd1d vd18(0x20)
0xd21: vd21(0x24) = CONST 
0xd24: vd24 = ADD vd0e vd21(0x24)
0xd25: MSTORE vd24 vd18(0x20)
0xd26: vd26(0x0) = CONST 
0xd29: vd29 = MLOAD vd26(0x0)
0xd2a: vd2a(0x20) = CONST 
0xd2c: vd2c(0x150d) = CONST 
0xd34: MSTORE vd26(0x0) vd29
0xd35: vd35(0x44) = CONST 
0xd38: vd38 = ADD vd0e vd35(0x44)
0xd39: MSTORE vd38 v166f(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xd3b: vd3b = MLOAD vd0b(0x40)
0xd3f: vd3f = SUB vd0e vd3b
0xd40: vd40(0x64) = CONST 
0xd42: vd42 = ADD vd40(0x64) vd3f
0xd44: REVERT vd3b vd42
0x166f: v166f(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0xd45
prev = {'0xd06'}, next = {'0xd85', '0xd4f'}
----------------------------------
Block 0xd45
0xd47: vd47 = MLOAD v5fc
0xd49: vd49 = MLOAD v578
0xd4a: vd4a = EQ vd49 vd47
0xd4b: vd4b(0xd85) = CONST 
0xd4e: JUMPI vd4b(0xd85) vd4a
----------------------------------

Begin block 0xd4f
prev = {'0xd45'}, next = {}
----------------------------------
Block 0xd4f
0xd4f: vd4f(0x40) = CONST 
0xd51: vd51 = MLOAD vd4f(0x40)
0xd52: vd52(0x461bcd) = CONST 
0xd56: vd56(0xe5) = CONST 
0xd58: vd58(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vd56(0xe5) vd52(0x461bcd)
0xd5a: MSTORE vd51 vd58(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xd5b: vd5b(0x4) = CONST 
0xd5d: vd5d = ADD vd5b(0x4) vd51
0xd60: vd60(0x20) = CONST 
0xd62: vd62 = ADD vd60(0x20) vd5d
0xd65: vd65 = SUB vd62 vd5d
0xd67: MSTORE vd5d vd65
0xd68: vd68(0x26) = CONST 
0xd6b: MSTORE vd62 vd68(0x26)
0xd6c: vd6c(0x20) = CONST 
0xd6e: vd6e = ADD vd6c(0x20) vd62
0xd70: vd70(0x14c6) = CONST 
0xd73: vd73(0x26) = CONST 
0xd76: CODECOPY vd6e vd70(0x14c6) vd73(0x26)
0xd77: vd77(0x40) = CONST 
0xd79: vd79 = ADD vd77(0x40) vd6e
0xd7d: vd7d(0x40) = CONST 
0xd7f: vd7f = MLOAD vd7d(0x40)
0xd82: vd82 = SUB vd79 vd7f
0xd84: REVERT vd7f vd82
----------------------------------

Begin block 0xd85
prev = {'0xd45'}, next = {'0xd88'}
----------------------------------
Block 0xd85
0xd86: vd86(0x0) = CONST 
----------------------------------

Begin block 0xd88
prev = {'0xdc2', '0xd85'}, next = {'0xdca', '0xd92'}
----------------------------------
Block 0xd88
0xd88_0x0: vd88_0 = PHI vd86(0x0) vdc5
0xd8a: vd8a = MLOAD v578
0xd8c: vd8c = LT vd88_0 vd8a
0xd8d: vd8d = ISZERO vd8c
0xd8e: vd8e(0xdca) = CONST 
0xd91: JUMPI vd8e(0xdca) vd8d
----------------------------------

Begin block 0xd92
prev = {'0xd88'}, next = {'0xda1', '0xda0'}
----------------------------------
Block 0xd92
0xd92_0x0: vd92_0 = PHI vd86(0x0) vdc5
0xd92: vd92(0xdc2) = CONST 
0xd95: vd95 = ADDRESS 
0xd99: vd99 = MLOAD v578
0xd9b: vd9b = LT vd92_0 vd99
0xd9c: vd9c(0xda1) = CONST 
0xd9f: JUMPI vd9c(0xda1) vd9b
----------------------------------

Begin block 0xda0
prev = {'0xd92'}, next = {}
----------------------------------
Block 0xda0
0xda0: THROW 
----------------------------------

Begin block 0xda1
prev = {'0xd92'}, next = {'0xdb4', '0xdb5'}
----------------------------------
Block 0xda1
0xda1_0x0: vda1_0 = PHI vd86(0x0) vdc5
0xda1_0x4: vda1_4 = PHI vd86(0x0) vdc5
0xda2: vda2(0x20) = CONST 
0xda4: vda4 = MUL vda2(0x20) vda1_0
0xda5: vda5(0x20) = CONST 
0xda7: vda7 = ADD vda5(0x20) vda4
0xda8: vda8 = ADD vda7 v578
0xda9: vda9 = MLOAD vda8
0xdad: vdad = MLOAD v5fc
0xdaf: vdaf = LT vda1_4 vdad
0xdb0: vdb0(0xdb5) = CONST 
0xdb3: JUMPI vdb0(0xdb5) vdaf
----------------------------------

Begin block 0xdb4
prev = {'0xda1'}, next = {}
----------------------------------
Block 0xdb4
0xdb4: THROW 
----------------------------------

Begin block 0xdb5
prev = {'0xda1'}, next = {'0x10b70x506'}
----------------------------------
Block 0xdb5
0xdb5_0x0: vdb5_0 = PHI vd86(0x0) vdc5
0xdb6: vdb6(0x20) = CONST 
0xdb8: vdb8 = MUL vdb6(0x20) vdb5_0
0xdb9: vdb9(0x20) = CONST 
0xdbb: vdbb = ADD vdb9(0x20) vdb8
0xdbc: vdbc = ADD vdbb v5fc
0xdbd: vdbd = MLOAD vdbc
0xdbe: vdbe(0x10b7) = CONST 
0xdc1: JUMP vdbe(0x10b7)
----------------------------------

Begin block 0xdc2
prev = {'0x119f0x506'}, next = {'0xd88'}
----------------------------------
Block 0xdc2
0xdc2_0x0: vdc2_0 = PHI vd86(0x0) vdc5
0xdc3: vdc3(0x1) = CONST 
0xdc5: vdc5 = ADD vdc3(0x1) vdc2_0
0xdc6: vdc6(0xd88) = CONST 
0xdc9: JUMP vdc6(0xd88)
----------------------------------

Begin block 0xdca
prev = {'0xd88'}, next = {'0x27c0x506'}
----------------------------------
Block 0xdca
0xdce: JUMP v507(0x27c)
----------------------------------

Begin block 0xdcf
prev = {'0x643'}, next = {'0x33a0x62d'}
----------------------------------
Block 0xdcf
0xdd0: vdd0(0x1) = CONST 
0xdd2: vdd2(0x1) = CONST 
0xdd4: vdd4(0xa0) = CONST 
0xdd6: vdd6(0x10000000000000000000000000000000000000000) = SHL vdd4(0xa0) vdd2(0x1)
0xdd7: vdd7(0xffffffffffffffffffffffffffffffffffffffff) = SUB vdd6(0x10000000000000000000000000000000000000000) vdd0(0x1)
0xdda: vdda = AND vdd7(0xffffffffffffffffffffffffffffffffffffffff) v650
0xddb: vddb(0x0) = CONST 
0xddf: MSTORE vddb(0x0) vdda
0xde0: vde0(0x2) = CONST 
0xde2: vde2(0x20) = CONST 
0xde6: MSTORE vde2(0x20) vde0(0x2)
0xde7: vde7(0x40) = CONST 
0xdeb: vdeb = SHA3 vddb(0x0) vde7(0x40)
0xdef: vdef = AND vdd7(0xffffffffffffffffffffffffffffffffffffffff) v656
0xdf1: MSTORE vddb(0x0) vdef
0xdf5: MSTORE vde2(0x20) vdeb
0xdf6: vdf6 = SHA3 vddb(0x0) vde7(0x40)
0xdf7: vdf7 = SLOAD vdf6
0xdf9: JUMP v62e(0x33a)
----------------------------------

Begin block 0xdfa
prev = {'0x671'}, next = {'0xe02'}
----------------------------------
Block 0xdfa
0xdfb: vdfb(0xe02) = CONST 
0xdfe: vdfe(0xa8d) = CONST 
0xe01: ve01_0 = CALLPRIVATE vdfe(0xa8d) vdfb(0xe02)
----------------------------------

Begin block 0xe02
prev = {'0xdfa'}, next = {'0xe41', '0xe07'}
----------------------------------
Block 0xe02
0xe03: ve03(0xe41) = CONST 
0xe06: JUMPI ve03(0xe41) ve01_0
----------------------------------

Begin block 0xe07
prev = {'0xe02'}, next = {}
----------------------------------
Block 0xe07
0xe07: ve07(0x40) = CONST 
0xe0a: ve0a = MLOAD ve07(0x40)
0xe0b: ve0b(0x461bcd) = CONST 
0xe0f: ve0f(0xe5) = CONST 
0xe11: ve11(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL ve0f(0xe5) ve0b(0x461bcd)
0xe13: MSTORE ve0a ve11(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xe14: ve14(0x20) = CONST 
0xe16: ve16(0x4) = CONST 
0xe19: ve19 = ADD ve0a ve16(0x4)
0xe1c: MSTORE ve19 ve14(0x20)
0xe1d: ve1d(0x24) = CONST 
0xe20: ve20 = ADD ve0a ve1d(0x24)
0xe21: MSTORE ve20 ve14(0x20)
0xe22: ve22(0x0) = CONST 
0xe25: ve25 = MLOAD ve22(0x0)
0xe26: ve26(0x20) = CONST 
0xe28: ve28(0x150d) = CONST 
0xe30: MSTORE ve22(0x0) ve25
0xe31: ve31(0x44) = CONST 
0xe34: ve34 = ADD ve0a ve31(0x44)
0xe35: MSTORE ve34 v1674(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xe37: ve37 = MLOAD ve07(0x40)
0xe3b: ve3b = SUB ve0a ve37
0xe3c: ve3c(0x64) = CONST 
0xe3e: ve3e = ADD ve3c(0x64) ve3b
0xe40: REVERT ve37 ve3e
0x1674: v1674(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0xe41
prev = {'0xe02'}, next = {'0x1399'}
----------------------------------
Block 0xe41
0xe42: ve42(0xe4a) = CONST 
0xe46: ve46(0x1399) = CONST 
0xe49: JUMP ve46(0x1399)
----------------------------------

Begin block 0xe4a
prev = {'0x13de'}, next = {'0x27c0x65b'}
----------------------------------
Block 0xe4a
0xe4c: JUMP v65c(0x27c)
----------------------------------

Begin block 0xe4d
prev = {'0x697'}, next = {'0xe55'}
----------------------------------
Block 0xe4d
0xe4e: ve4e(0xe55) = CONST 
0xe51: ve51(0xa8d) = CONST 
0xe54: ve54_0 = CALLPRIVATE ve51(0xa8d) ve4e(0xe55)
----------------------------------

Begin block 0xe55
prev = {'0xe4d'}, next = {'0xe94', '0xe5a'}
----------------------------------
Block 0xe55
0xe56: ve56(0xe94) = CONST 
0xe59: JUMPI ve56(0xe94) ve54_0
----------------------------------

Begin block 0xe5a
prev = {'0xe55'}, next = {}
----------------------------------
Block 0xe5a
0xe5a: ve5a(0x40) = CONST 
0xe5d: ve5d = MLOAD ve5a(0x40)
0xe5e: ve5e(0x461bcd) = CONST 
0xe62: ve62(0xe5) = CONST 
0xe64: ve64(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL ve62(0xe5) ve5e(0x461bcd)
0xe66: MSTORE ve5d ve64(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xe67: ve67(0x20) = CONST 
0xe69: ve69(0x4) = CONST 
0xe6c: ve6c = ADD ve5d ve69(0x4)
0xe6f: MSTORE ve6c ve67(0x20)
0xe70: ve70(0x24) = CONST 
0xe73: ve73 = ADD ve5d ve70(0x24)
0xe74: MSTORE ve73 ve67(0x20)
0xe75: ve75(0x0) = CONST 
0xe78: ve78 = MLOAD ve75(0x0)
0xe79: ve79(0x20) = CONST 
0xe7b: ve7b(0x150d) = CONST 
0xe83: MSTORE ve75(0x0) ve78
0xe84: ve84(0x44) = CONST 
0xe87: ve87 = ADD ve5d ve84(0x44)
0xe88: MSTORE ve87 v1679(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xe8a: ve8a = MLOAD ve5a(0x40)
0xe8e: ve8e = SUB ve5d ve8a
0xe8f: ve8f(0x64) = CONST 
0xe91: ve91 = ADD ve8f(0x64) ve8e
0xe93: REVERT ve8a ve91
0x1679: v1679(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
----------------------------------

Begin block 0xe94
prev = {'0xe55'}, next = {'0xe9f', '0xee6'}
----------------------------------
Block 0xe94
0xe96: ve96(0x5) = CONST 
0xe98: ve98 = SLOAD ve96(0x5)
0xe99: ve99 = LT ve98 v6a8
0xe9a: ve9a = ISZERO ve99
0xe9b: ve9b(0xee6) = CONST 
0xe9e: JUMPI ve9b(0xee6) ve9a
----------------------------------

Begin block 0xe9f
prev = {'0xe94'}, next = {}
----------------------------------
Block 0xe9f
0xe9f: ve9f(0x40) = CONST 
0xea2: vea2 = MLOAD ve9f(0x40)
0xea3: vea3(0x461bcd) = CONST 
0xea7: vea7(0xe5) = CONST 
0xea9: vea9(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vea7(0xe5) vea3(0x461bcd)
0xeab: MSTORE vea2 vea9(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xeac: veac(0x20) = CONST 
0xeae: veae(0x4) = CONST 
0xeb1: veb1 = ADD vea2 veae(0x4)
0xeb2: MSTORE veb1 veac(0x20)
0xeb3: veb3(0x18) = CONST 
0xeb5: veb5(0x24) = CONST 
0xeb8: veb8 = ADD vea2 veb5(0x24)
0xeb9: MSTORE veb8 veb3(0x18)
0xeba: veba(0x139bdd08195b9bdd59da081d1bdad95b9cc8185b5bdd5b9d) = CONST 
0xed3: ved3(0x42) = CONST 
0xed5: ved5(0x4e6f7420656e6f75676820746f6b656e7320616d6f756e740000000000000000) = SHL ved3(0x42) veba(0x139bdd08195b9bdd59da081d1bdad95b9cc8185b5bdd5b9d)
0xed6: ved6(0x44) = CONST 
0xed9: ved9 = ADD vea2 ved6(0x44)
0xeda: MSTORE ved9 ved5(0x4e6f7420656e6f75676820746f6b656e7320616d6f756e740000000000000000)
0xedc: vedc = MLOAD ve9f(0x40)
0xee0: vee0 = SUB vea2 vedc
0xee1: vee1(0x64) = CONST 
0xee3: vee3 = ADD vee1(0x64) vee0
0xee5: REVERT vedc vee3
----------------------------------

Begin block 0xee6
prev = {'0xe94'}, next = {'0xef9'}
----------------------------------
Block 0xee6
0xee7: vee7(0x5) = CONST 
0xee9: vee9 = SLOAD vee7(0x5)
0xeea: veea(0xef9) = CONST 
0xeef: veef(0xffffffff) = CONST 
0xef4: vef4(0x105a) = CONST 
0xef7: vef7(0x105a) = AND vef4(0x105a) veef(0xffffffff)
0xef8: vef8_0 = CALLPRIVATE vef7(0x105a) v6a8 vee9 veea(0xef9)
----------------------------------

Begin block 0xef9
prev = {'0xee6'}, next = {'0x82f0x681'}
----------------------------------
Block 0xef9
0xefa: vefa(0x5) = CONST 
0xefc: SSTORE vefa(0x5) vef8_0
0xefd: vefd(0x82f) = CONST 
0xf00: vf00 = ADDRESS 
0xf03: vf03(0x10b7) = CONST 
0xf06: CALLPRIVATE vf03(0x10b7) v6a8 v6a3 vf00 vefd(0x82f)
----------------------------------

Begin block 0xf07
prev = {'0x6ad'}, next = {'0x33a0x6ad'}
----------------------------------
Block 0xf07
0xf08: vf08(0x4) = CONST 
0xf0a: vf0a = SLOAD vf08(0x4)
0xf0c: JUMP v6ae(0x33a)
----------------------------------

Begin block 0xf0d
prev = {}, next = {'0xf1c', '0xf52'}
----------------------------------
function 0xf0d(vf0darg0, vf0darg1, vf0darg2, vf0darg3)
Block 0xf0d
0xf0e: vf0e(0x1) = CONST 
0xf10: vf10(0x1) = CONST 
0xf12: vf12(0xa0) = CONST 
0xf14: vf14(0x10000000000000000000000000000000000000000) = SHL vf12(0xa0) vf10(0x1)
0xf15: vf15(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf14(0x10000000000000000000000000000000000000000) vf0e(0x1)
0xf17: vf17 = AND vf0darg2 vf15(0xffffffffffffffffffffffffffffffffffffffff)
0xf18: vf18(0xf52) = CONST 
0xf1b: JUMPI vf18(0xf52) vf17
----------------------------------

Begin block 0xf1c
prev = {'0xf0d'}, next = {}
----------------------------------
Block 0xf1c
0xf1c: vf1c(0x40) = CONST 
0xf1e: vf1e = MLOAD vf1c(0x40)
0xf1f: vf1f(0x461bcd) = CONST 
0xf23: vf23(0xe5) = CONST 
0xf25: vf25(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vf23(0xe5) vf1f(0x461bcd)
0xf27: MSTORE vf1e vf25(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xf28: vf28(0x4) = CONST 
0xf2a: vf2a = ADD vf28(0x4) vf1e
0xf2d: vf2d(0x20) = CONST 
0xf2f: vf2f = ADD vf2d(0x20) vf2a
0xf32: vf32 = SUB vf2f vf2a
0xf34: MSTORE vf2a vf32
0xf35: vf35(0x24) = CONST 
0xf38: MSTORE vf2f vf35(0x24)
0xf39: vf39(0x20) = CONST 
0xf3b: vf3b = ADD vf39(0x20) vf2f
0xf3d: vf3d(0x1573) = CONST 
0xf40: vf40(0x24) = CONST 
0xf43: CODECOPY vf3b vf3d(0x1573) vf40(0x24)
0xf44: vf44(0x40) = CONST 
0xf46: vf46 = ADD vf44(0x40) vf3b
0xf4a: vf4a(0x40) = CONST 
0xf4c: vf4c = MLOAD vf4a(0x40)
0xf4f: vf4f = SUB vf46 vf4c
0xf51: REVERT vf4c vf4f
----------------------------------

Begin block 0xf52
prev = {'0xf0d'}, next = {'0xf61', '0xf97'}
----------------------------------
Block 0xf52
0xf53: vf53(0x1) = CONST 
0xf55: vf55(0x1) = CONST 
0xf57: vf57(0xa0) = CONST 
0xf59: vf59(0x10000000000000000000000000000000000000000) = SHL vf57(0xa0) vf55(0x1)
0xf5a: vf5a(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf59(0x10000000000000000000000000000000000000000) vf53(0x1)
0xf5c: vf5c = AND vf0darg1 vf5a(0xffffffffffffffffffffffffffffffffffffffff)
0xf5d: vf5d(0xf97) = CONST 
0xf60: JUMPI vf5d(0xf97) vf5c
----------------------------------

Begin block 0xf61
prev = {'0xf52'}, next = {}
----------------------------------
Block 0xf61
0xf61: vf61(0x40) = CONST 
0xf63: vf63 = MLOAD vf61(0x40)
0xf64: vf64(0x461bcd) = CONST 
0xf68: vf68(0xe5) = CONST 
0xf6a: vf6a(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL vf68(0xe5) vf64(0x461bcd)
0xf6c: MSTORE vf63 vf6a(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xf6d: vf6d(0x4) = CONST 
0xf6f: vf6f = ADD vf6d(0x4) vf63
0xf72: vf72(0x20) = CONST 
0xf74: vf74 = ADD vf72(0x20) vf6f
0xf77: vf77 = SUB vf74 vf6f
0xf79: MSTORE vf6f vf77
0xf7a: vf7a(0x22) = CONST 
0xf7d: MSTORE vf74 vf7a(0x22)
0xf7e: vf7e(0x20) = CONST 
0xf80: vf80 = ADD vf7e(0x20) vf74
0xf82: vf82(0x14a4) = CONST 
0xf85: vf85(0x22) = CONST 
0xf88: CODECOPY vf80 vf82(0x14a4) vf85(0x22)
0xf89: vf89(0x40) = CONST 
0xf8b: vf8b = ADD vf89(0x40) vf80
0xf8f: vf8f(0x40) = CONST 
0xf91: vf91 = MLOAD vf8f(0x40)
0xf94: vf94 = SUB vf8b vf91
0xf96: REVERT vf91 vf94
----------------------------------

Begin block 0xf97
prev = {'0xf52'}, next = {}
----------------------------------
Block 0xf97
0xf98: vf98(0x1) = CONST 
0xf9a: vf9a(0x1) = CONST 
0xf9c: vf9c(0xa0) = CONST 
0xf9e: vf9e(0x10000000000000000000000000000000000000000) = SHL vf9c(0xa0) vf9a(0x1)
0xf9f: vf9f(0xffffffffffffffffffffffffffffffffffffffff) = SUB vf9e(0x10000000000000000000000000000000000000000) vf98(0x1)
0xfa2: vfa2 = AND vf0darg2 vf9f(0xffffffffffffffffffffffffffffffffffffffff)
0xfa3: vfa3(0x0) = CONST 
0xfa7: MSTORE vfa3(0x0) vfa2
0xfa8: vfa8(0x2) = CONST 
0xfaa: vfaa(0x20) = CONST 
0xfae: MSTORE vfaa(0x20) vfa8(0x2)
0xfaf: vfaf(0x40) = CONST 
0xfb3: vfb3 = SHA3 vfa3(0x0) vfaf(0x40)
0xfb6: vfb6 = AND vf0darg1 vf9f(0xffffffffffffffffffffffffffffffffffffffff)
0xfb9: MSTORE vfa3(0x0) vfb6
0xfbc: MSTORE vfaa(0x20) vfb3
0xfc0: vfc0 = SHA3 vfa3(0x0) vfaf(0x40)
0xfc3: SSTORE vfc0 vf0darg0
0xfc5: vfc5 = MLOAD vfaf(0x40)
0xfc8: MSTORE vfc5 vf0darg0
0xfca: vfca = MLOAD vfaf(0x40)
0xfcb: vfcb(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0xfef: vfef = SUB vfc5 vfca
0xff2: vff2 = ADD vfaa(0x20) vfef
0xff4: LOG3 vfca vff2 vfcb(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) vfa2 vfb6
0xff8: RETURNPRIVATE vf0darg3
----------------------------------

Begin block 0xff9
prev = {}, next = {'0x1007', '0x10530xff9'}
----------------------------------
function 0xff9(vff9arg0, vff9arg1, vff9arg2)
Block 0xff9
0xffa: vffa(0x0) = CONST 
0xffe: vffe = ADD vff9arg0 vff9arg1
0x1001: v1001 = LT vffe vff9arg1
0x1002: v1002 = ISZERO v1001
0x1003: v1003(0x1053) = CONST 
0x1006: JUMPI v1003(0x1053) v1002
----------------------------------

Begin block 0x1007
prev = {'0xff9'}, next = {}
----------------------------------
Block 0x1007
0x1007: v1007(0x40) = CONST 
0x100a: v100a = MLOAD v1007(0x40)
0x100b: v100b(0x461bcd) = CONST 
0x100f: v100f(0xe5) = CONST 
0x1011: v1011(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v100f(0xe5) v100b(0x461bcd)
0x1013: MSTORE v100a v1011(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1014: v1014(0x20) = CONST 
0x1016: v1016(0x4) = CONST 
0x1019: v1019 = ADD v100a v1016(0x4)
0x101a: MSTORE v1019 v1014(0x20)
0x101b: v101b(0x1b) = CONST 
0x101d: v101d(0x24) = CONST 
0x1020: v1020 = ADD v100a v101d(0x24)
0x1021: MSTORE v1020 v101b(0x1b)
0x1022: v1022(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000) = CONST 
0x1043: v1043(0x44) = CONST 
0x1046: v1046 = ADD v100a v1043(0x44)
0x1047: MSTORE v1046 v1022(0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000)
0x1049: v1049 = MLOAD v1007(0x40)
0x104d: v104d = SUB v100a v1049
0x104e: v104e(0x64) = CONST 
0x1050: v1050 = ADD v104e(0x64) v104d
0x1052: REVERT v1049 v1050
----------------------------------

Begin block 0x10530xff9
prev = {'0xff9'}, next = {}
----------------------------------
Block 0x10530xff9
0x10590xff9: RETURNPRIVATE vff9arg2 vffe
----------------------------------

Begin block 0x10530x1340
prev = {'0x135c'}, next = {}
----------------------------------
Block 0x10530x1340
0x10590x1340: RETURNPRIVATE v1340arg2 v1352
----------------------------------

Begin block 0x105a
prev = {}, next = {'0x10b1', '0x1065'}
----------------------------------
function 0x105a(v105aarg0, v105aarg1, v105aarg2)
Block 0x105a
0x105b: v105b(0x0) = CONST 
0x105f: v105f = GT v105aarg0 v105aarg1
0x1060: v1060 = ISZERO v105f
0x1061: v1061(0x10b1) = CONST 
0x1064: JUMPI v1061(0x10b1) v1060
----------------------------------

Begin block 0x1065
prev = {'0x105a'}, next = {}
----------------------------------
Block 0x1065
0x1065: v1065(0x40) = CONST 
0x1068: v1068 = MLOAD v1065(0x40)
0x1069: v1069(0x461bcd) = CONST 
0x106d: v106d(0xe5) = CONST 
0x106f: v106f(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v106d(0xe5) v1069(0x461bcd)
0x1071: MSTORE v1068 v106f(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1072: v1072(0x20) = CONST 
0x1074: v1074(0x4) = CONST 
0x1077: v1077 = ADD v1068 v1074(0x4)
0x1078: MSTORE v1077 v1072(0x20)
0x1079: v1079(0x1e) = CONST 
0x107b: v107b(0x24) = CONST 
0x107e: v107e = ADD v1068 v107b(0x24)
0x107f: MSTORE v107e v1079(0x1e)
0x1080: v1080(0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000) = CONST 
0x10a1: v10a1(0x44) = CONST 
0x10a4: v10a4 = ADD v1068 v10a1(0x44)
0x10a5: MSTORE v10a4 v1080(0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000)
0x10a7: v10a7 = MLOAD v1065(0x40)
0x10ab: v10ab = SUB v1068 v10a7
0x10ac: v10ac(0x64) = CONST 
0x10ae: v10ae = ADD v10ac(0x64) v10ab
0x10b0: REVERT v10a7 v10ae
----------------------------------

Begin block 0x10b1
prev = {'0x105a'}, next = {}
----------------------------------
Block 0x10b1
0x10b4: v10b4 = SUB v105aarg1 v105aarg0
0x10b6: RETURNPRIVATE v105aarg2 v10b4
----------------------------------

Begin block 0x10b7
prev = {}, next = {'0x10c60x10b7', '0x10fc0x10b7'}
----------------------------------
function 0x10b7(v10b7arg0, v10b7arg1, v10b7arg2, v10b7arg3)
Block 0x10b7
0x10b8: v10b8(0x1) = CONST 
0x10ba: v10ba(0x1) = CONST 
0x10bc: v10bc(0xa0) = CONST 
0x10be: v10be(0x10000000000000000000000000000000000000000) = SHL v10bc(0xa0) v10ba(0x1)
0x10bf: v10bf(0xffffffffffffffffffffffffffffffffffffffff) = SUB v10be(0x10000000000000000000000000000000000000000) v10b8(0x1)
0x10c1: v10c1 = AND v10b7arg2 v10bf(0xffffffffffffffffffffffffffffffffffffffff)
0x10c2: v10c2(0x10fc) = CONST 
0x10c5: JUMPI v10c2(0x10fc) v10c1
----------------------------------

Begin block 0x10b70x506
prev = {'0xdb5'}, next = {'0x10c60x506', '0x10fc0x506'}
----------------------------------
Block 0x10b70x506
0x10b80x506: v50610b8(0x1) = CONST 
0x10ba0x506: v50610ba(0x1) = CONST 
0x10bc0x506: v50610bc(0xa0) = CONST 
0x10be0x506: v50610be(0x10000000000000000000000000000000000000000) = SHL v50610bc(0xa0) v50610ba(0x1)
0x10bf0x506: v50610bf(0xffffffffffffffffffffffffffffffffffffffff) = SUB v50610be(0x10000000000000000000000000000000000000000) v50610b8(0x1)
0x10c10x506: v50610c1 = AND vd95 v50610bf(0xffffffffffffffffffffffffffffffffffffffff)
0x10c20x506: v50610c2(0x10fc) = CONST 
0x10c50x506: JUMPI v50610c2(0x10fc) v50610c1
----------------------------------

Begin block 0x10c60x506
prev = {'0x10b70x506'}, next = {}
----------------------------------
Block 0x10c60x506
0x10c60x506: v50610c6(0x40) = CONST 
0x10c80x506: v50610c8 = MLOAD v50610c6(0x40)
0x10c90x506: v50610c9(0x461bcd) = CONST 
0x10cd0x506: v50610cd(0xe5) = CONST 
0x10cf0x506: v50610cf(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v50610cd(0xe5) v50610c9(0x461bcd)
0x10d10x506: MSTORE v50610c8 v50610cf(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x10d20x506: v50610d2(0x4) = CONST 
0x10d40x506: v50610d4 = ADD v50610d2(0x4) v50610c8
0x10d70x506: v50610d7(0x20) = CONST 
0x10d90x506: v50610d9 = ADD v50610d7(0x20) v50610d4
0x10dc0x506: v50610dc = SUB v50610d9 v50610d4
0x10de0x506: MSTORE v50610d4 v50610dc
0x10df0x506: v50610df(0x25) = CONST 
0x10e20x506: MSTORE v50610d9 v50610df(0x25)
0x10e30x506: v50610e3(0x20) = CONST 
0x10e50x506: v50610e5 = ADD v50610e3(0x20) v50610d9
0x10e70x506: v50610e7(0x154e) = CONST 
0x10ea0x506: v50610ea(0x25) = CONST 
0x10ed0x506: CODECOPY v50610e5 v50610e7(0x154e) v50610ea(0x25)
0x10ee0x506: v50610ee(0x40) = CONST 
0x10f00x506: v50610f0 = ADD v50610ee(0x40) v50610e5
0x10f40x506: v50610f4(0x40) = CONST 
0x10f60x506: v50610f6 = MLOAD v50610f4(0x40)
0x10f90x506: v50610f9 = SUB v50610f0 v50610f6
0x10fb0x506: REVERT v50610f6 v50610f9
----------------------------------

Begin block 0x10c60x10b7
prev = {'0x10b7'}, next = {}
----------------------------------
Block 0x10c60x10b7
0x10c60x10b7: v10b710c6(0x40) = CONST 
0x10c80x10b7: v10b710c8 = MLOAD v10b710c6(0x40)
0x10c90x10b7: v10b710c9(0x461bcd) = CONST 
0x10cd0x10b7: v10b710cd(0xe5) = CONST 
0x10cf0x10b7: v10b710cf(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v10b710cd(0xe5) v10b710c9(0x461bcd)
0x10d10x10b7: MSTORE v10b710c8 v10b710cf(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x10d20x10b7: v10b710d2(0x4) = CONST 
0x10d40x10b7: v10b710d4 = ADD v10b710d2(0x4) v10b710c8
0x10d70x10b7: v10b710d7(0x20) = CONST 
0x10d90x10b7: v10b710d9 = ADD v10b710d7(0x20) v10b710d4
0x10dc0x10b7: v10b710dc = SUB v10b710d9 v10b710d4
0x10de0x10b7: MSTORE v10b710d4 v10b710dc
0x10df0x10b7: v10b710df(0x25) = CONST 
0x10e20x10b7: MSTORE v10b710d9 v10b710df(0x25)
0x10e30x10b7: v10b710e3(0x20) = CONST 
0x10e50x10b7: v10b710e5 = ADD v10b710e3(0x20) v10b710d9
0x10e70x10b7: v10b710e7(0x154e) = CONST 
0x10ea0x10b7: v10b710ea(0x25) = CONST 
0x10ed0x10b7: CODECOPY v10b710e5 v10b710e7(0x154e) v10b710ea(0x25)
0x10ee0x10b7: v10b710ee(0x40) = CONST 
0x10f00x10b7: v10b710f0 = ADD v10b710ee(0x40) v10b710e5
0x10f40x10b7: v10b710f4(0x40) = CONST 
0x10f60x10b7: v10b710f6 = MLOAD v10b710f4(0x40)
0x10f90x10b7: v10b710f9 = SUB v10b710f0 v10b710f6
0x10fb0x10b7: REVERT v10b710f6 v10b710f9
----------------------------------

Begin block 0x10fc0x506
prev = {'0x10b70x506'}, next = {'0x11410x506', '0x110b0x506'}
----------------------------------
Block 0x10fc0x506
0x10fd0x506: v50610fd(0x1) = CONST 
0x10ff0x506: v50610ff(0x1) = CONST 
0x11010x506: v5061101(0xa0) = CONST 
0x11030x506: v5061103(0x10000000000000000000000000000000000000000) = SHL v5061101(0xa0) v50610ff(0x1)
0x11040x506: v5061104(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5061103(0x10000000000000000000000000000000000000000) v50610fd(0x1)
0x11060x506: v5061106 = AND vda9 v5061104(0xffffffffffffffffffffffffffffffffffffffff)
0x11070x506: v5061107(0x1141) = CONST 
0x110a0x506: JUMPI v5061107(0x1141) v5061106
----------------------------------

Begin block 0x10fc0x10b7
prev = {'0x10b7'}, next = {'0x11410x10b7', '0x110b0x10b7'}
----------------------------------
Block 0x10fc0x10b7
0x10fd0x10b7: v10b710fd(0x1) = CONST 
0x10ff0x10b7: v10b710ff(0x1) = CONST 
0x11010x10b7: v10b71101(0xa0) = CONST 
0x11030x10b7: v10b71103(0x10000000000000000000000000000000000000000) = SHL v10b71101(0xa0) v10b710ff(0x1)
0x11040x10b7: v10b71104(0xffffffffffffffffffffffffffffffffffffffff) = SUB v10b71103(0x10000000000000000000000000000000000000000) v10b710fd(0x1)
0x11060x10b7: v10b71106 = AND v10b7arg1 v10b71104(0xffffffffffffffffffffffffffffffffffffffff)
0x11070x10b7: v10b71107(0x1141) = CONST 
0x110a0x10b7: JUMPI v10b71107(0x1141) v10b71106
----------------------------------

Begin block 0x110b0x506
prev = {'0x10fc0x506'}, next = {}
----------------------------------
Block 0x110b0x506
0x110b0x506: v506110b(0x40) = CONST 
0x110d0x506: v506110d = MLOAD v506110b(0x40)
0x110e0x506: v506110e(0x461bcd) = CONST 
0x11120x506: v5061112(0xe5) = CONST 
0x11140x506: v5061114(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v5061112(0xe5) v506110e(0x461bcd)
0x11160x506: MSTORE v506110d v5061114(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x11170x506: v5061117(0x4) = CONST 
0x11190x506: v5061119 = ADD v5061117(0x4) v506110d
0x111c0x506: v506111c(0x20) = CONST 
0x111e0x506: v506111e = ADD v506111c(0x20) v5061119
0x11210x506: v5061121 = SUB v506111e v5061119
0x11230x506: MSTORE v5061119 v5061121
0x11240x506: v5061124(0x23) = CONST 
0x11270x506: MSTORE v506111e v5061124(0x23)
0x11280x506: v5061128(0x20) = CONST 
0x112a0x506: v506112a = ADD v5061128(0x20) v506111e
0x112c0x506: v506112c(0x143a) = CONST 
0x112f0x506: v506112f(0x23) = CONST 
0x11320x506: CODECOPY v506112a v506112c(0x143a) v506112f(0x23)
0x11330x506: v5061133(0x40) = CONST 
0x11350x506: v5061135 = ADD v5061133(0x40) v506112a
0x11390x506: v5061139(0x40) = CONST 
0x113b0x506: v506113b = MLOAD v5061139(0x40)
0x113e0x506: v506113e = SUB v5061135 v506113b
0x11400x506: REVERT v506113b v506113e
----------------------------------

Begin block 0x110b0x10b7
prev = {'0x10fc0x10b7'}, next = {}
----------------------------------
Block 0x110b0x10b7
0x110b0x10b7: v10b7110b(0x40) = CONST 
0x110d0x10b7: v10b7110d = MLOAD v10b7110b(0x40)
0x110e0x10b7: v10b7110e(0x461bcd) = CONST 
0x11120x10b7: v10b71112(0xe5) = CONST 
0x11140x10b7: v10b71114(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v10b71112(0xe5) v10b7110e(0x461bcd)
0x11160x10b7: MSTORE v10b7110d v10b71114(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x11170x10b7: v10b71117(0x4) = CONST 
0x11190x10b7: v10b71119 = ADD v10b71117(0x4) v10b7110d
0x111c0x10b7: v10b7111c(0x20) = CONST 
0x111e0x10b7: v10b7111e = ADD v10b7111c(0x20) v10b71119
0x11210x10b7: v10b71121 = SUB v10b7111e v10b71119
0x11230x10b7: MSTORE v10b71119 v10b71121
0x11240x10b7: v10b71124(0x23) = CONST 
0x11270x10b7: MSTORE v10b7111e v10b71124(0x23)
0x11280x10b7: v10b71128(0x20) = CONST 
0x112a0x10b7: v10b7112a = ADD v10b71128(0x20) v10b7111e
0x112c0x10b7: v10b7112c(0x143a) = CONST 
0x112f0x10b7: v10b7112f(0x23) = CONST 
0x11320x10b7: CODECOPY v10b7112a v10b7112c(0x143a) v10b7112f(0x23)
0x11330x10b7: v10b71133(0x40) = CONST 
0x11350x10b7: v10b71135 = ADD v10b71133(0x40) v10b7112a
0x11390x10b7: v10b71139(0x40) = CONST 
0x113b0x10b7: v10b7113b = MLOAD v10b71139(0x40)
0x113e0x10b7: v10b7113e = SUB v10b71135 v10b7113b
0x11400x10b7: REVERT v10b7113b v10b7113e
----------------------------------

Begin block 0x11410x506
prev = {'0x10fc0x506'}, next = {'0x116a0x506'}
----------------------------------
Block 0x11410x506
0x11420x506: v5061142(0x1) = CONST 
0x11440x506: v5061144(0x1) = CONST 
0x11460x506: v5061146(0xa0) = CONST 
0x11480x506: v5061148(0x10000000000000000000000000000000000000000) = SHL v5061146(0xa0) v5061144(0x1)
0x11490x506: v5061149(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5061148(0x10000000000000000000000000000000000000000) v5061142(0x1)
0x114b0x506: v506114b = AND vd95 v5061149(0xffffffffffffffffffffffffffffffffffffffff)
0x114c0x506: v506114c(0x0) = CONST 
0x11500x506: MSTORE v506114c(0x0) v506114b
0x11510x506: v5061151(0x1) = CONST 
0x11530x506: v5061153(0x20) = CONST 
0x11550x506: MSTORE v5061153(0x20) v5061151(0x1)
0x11560x506: v5061156(0x40) = CONST 
0x11590x506: v5061159 = SHA3 v506114c(0x0) v5061156(0x40)
0x115a0x506: v506115a = SLOAD v5061159
0x115b0x506: v506115b(0x116a) = CONST 
0x11600x506: v5061160(0xffffffff) = CONST 
0x11650x506: v5061165(0x105a) = CONST 
0x11680x506: v5061168(0x105a) = AND v5061165(0x105a) v5061160(0xffffffff)
0x11690x506: v5061169_0 = CALLPRIVATE v5061168(0x105a) vdbd v506115a v506115b(0x116a)
----------------------------------

Begin block 0x11410x10b7
prev = {'0x10fc0x10b7'}, next = {'0x116a0x10b7'}
----------------------------------
Block 0x11410x10b7
0x11420x10b7: v10b71142(0x1) = CONST 
0x11440x10b7: v10b71144(0x1) = CONST 
0x11460x10b7: v10b71146(0xa0) = CONST 
0x11480x10b7: v10b71148(0x10000000000000000000000000000000000000000) = SHL v10b71146(0xa0) v10b71144(0x1)
0x11490x10b7: v10b71149(0xffffffffffffffffffffffffffffffffffffffff) = SUB v10b71148(0x10000000000000000000000000000000000000000) v10b71142(0x1)
0x114b0x10b7: v10b7114b = AND v10b7arg2 v10b71149(0xffffffffffffffffffffffffffffffffffffffff)
0x114c0x10b7: v10b7114c(0x0) = CONST 
0x11500x10b7: MSTORE v10b7114c(0x0) v10b7114b
0x11510x10b7: v10b71151(0x1) = CONST 
0x11530x10b7: v10b71153(0x20) = CONST 
0x11550x10b7: MSTORE v10b71153(0x20) v10b71151(0x1)
0x11560x10b7: v10b71156(0x40) = CONST 
0x11590x10b7: v10b71159 = SHA3 v10b7114c(0x0) v10b71156(0x40)
0x115a0x10b7: v10b7115a = SLOAD v10b71159
0x115b0x10b7: v10b7115b(0x116a) = CONST 
0x11600x10b7: v10b71160(0xffffffff) = CONST 
0x11650x10b7: v10b71165(0x105a) = CONST 
0x11680x10b7: v10b71168(0x105a) = AND v10b71165(0x105a) v10b71160(0xffffffff)
0x11690x10b7: v10b71169_0 = CALLPRIVATE v10b71168(0x105a) v10b7arg0 v10b7115a v10b7115b(0x116a)
----------------------------------

Begin block 0x116a0x506
prev = {'0x11410x506'}, next = {'0x119f0x506'}
----------------------------------
Block 0x116a0x506
0x116b0x506: v506116b(0x1) = CONST 
0x116d0x506: v506116d(0x1) = CONST 
0x116f0x506: v506116f(0xa0) = CONST 
0x11710x506: v5061171(0x10000000000000000000000000000000000000000) = SHL v506116f(0xa0) v506116d(0x1)
0x11720x506: v5061172(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5061171(0x10000000000000000000000000000000000000000) v506116b(0x1)
0x11750x506: v5061175 = AND vd95 v5061172(0xffffffffffffffffffffffffffffffffffffffff)
0x11760x506: v5061176(0x0) = CONST 
0x117a0x506: MSTORE v5061176(0x0) v5061175
0x117b0x506: v506117b(0x1) = CONST 
0x117d0x506: v506117d(0x20) = CONST 
0x117f0x506: MSTORE v506117d(0x20) v506117b(0x1)
0x11800x506: v5061180(0x40) = CONST 
0x11840x506: v5061184 = SHA3 v5061176(0x0) v5061180(0x40)
0x11880x506: SSTORE v5061184 v5061169_0
0x118b0x506: v506118b = AND vda9 v5061172(0xffffffffffffffffffffffffffffffffffffffff)
0x118d0x506: MSTORE v5061176(0x0) v506118b
0x118e0x506: v506118e = SHA3 v5061176(0x0) v5061180(0x40)
0x118f0x506: v506118f = SLOAD v506118e
0x11900x506: v5061190(0x119f) = CONST 
0x11950x506: v5061195(0xffffffff) = CONST 
0x119a0x506: v506119a(0xff9) = CONST 
0x119d0x506: v506119d(0xff9) = AND v506119a(0xff9) v5061195(0xffffffff)
0x119e0x506: v506119e_0 = CALLPRIVATE v506119d(0xff9) vdbd v506118f v5061190(0x119f)
----------------------------------

Begin block 0x116a0x10b7
prev = {'0x11410x10b7'}, next = {'0x119f0x10b7'}
----------------------------------
Block 0x116a0x10b7
0x116b0x10b7: v10b7116b(0x1) = CONST 
0x116d0x10b7: v10b7116d(0x1) = CONST 
0x116f0x10b7: v10b7116f(0xa0) = CONST 
0x11710x10b7: v10b71171(0x10000000000000000000000000000000000000000) = SHL v10b7116f(0xa0) v10b7116d(0x1)
0x11720x10b7: v10b71172(0xffffffffffffffffffffffffffffffffffffffff) = SUB v10b71171(0x10000000000000000000000000000000000000000) v10b7116b(0x1)
0x11750x10b7: v10b71175 = AND v10b7arg2 v10b71172(0xffffffffffffffffffffffffffffffffffffffff)
0x11760x10b7: v10b71176(0x0) = CONST 
0x117a0x10b7: MSTORE v10b71176(0x0) v10b71175
0x117b0x10b7: v10b7117b(0x1) = CONST 
0x117d0x10b7: v10b7117d(0x20) = CONST 
0x117f0x10b7: MSTORE v10b7117d(0x20) v10b7117b(0x1)
0x11800x10b7: v10b71180(0x40) = CONST 
0x11840x10b7: v10b71184 = SHA3 v10b71176(0x0) v10b71180(0x40)
0x11880x10b7: SSTORE v10b71184 v10b71169_0
0x118b0x10b7: v10b7118b = AND v10b7arg1 v10b71172(0xffffffffffffffffffffffffffffffffffffffff)
0x118d0x10b7: MSTORE v10b71176(0x0) v10b7118b
0x118e0x10b7: v10b7118e = SHA3 v10b71176(0x0) v10b71180(0x40)
0x118f0x10b7: v10b7118f = SLOAD v10b7118e
0x11900x10b7: v10b71190(0x119f) = CONST 
0x11950x10b7: v10b71195(0xffffffff) = CONST 
0x119a0x10b7: v10b7119a(0xff9) = CONST 
0x119d0x10b7: v10b7119d(0xff9) = AND v10b7119a(0xff9) v10b71195(0xffffffff)
0x119e0x10b7: v10b7119e_0 = CALLPRIVATE v10b7119d(0xff9) v10b7arg0 v10b7118f v10b71190(0x119f)
----------------------------------

Begin block 0x119f0x506
prev = {'0x116a0x506'}, next = {'0xdc2'}
----------------------------------
Block 0x119f0x506
0x11a00x506: v50611a0(0x1) = CONST 
0x11a20x506: v50611a2(0x1) = CONST 
0x11a40x506: v50611a4(0xa0) = CONST 
0x11a60x506: v50611a6(0x10000000000000000000000000000000000000000) = SHL v50611a4(0xa0) v50611a2(0x1)
0x11a70x506: v50611a7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v50611a6(0x10000000000000000000000000000000000000000) v50611a0(0x1)
0x11aa0x506: v50611aa = AND vda9 v50611a7(0xffffffffffffffffffffffffffffffffffffffff)
0x11ab0x506: v50611ab(0x0) = CONST 
0x11af0x506: MSTORE v50611ab(0x0) v50611aa
0x11b00x506: v50611b0(0x1) = CONST 
0x11b20x506: v50611b2(0x20) = CONST 
0x11b60x506: MSTORE v50611b2(0x20) v50611b0(0x1)
0x11b70x506: v50611b7(0x40) = CONST 
0x11bc0x506: v50611bc = SHA3 v50611ab(0x0) v50611b7(0x40)
0x11c00x506: SSTORE v50611bc v506119e_0
0x11c20x506: v50611c2 = MLOAD v50611b7(0x40)
0x11c50x506: MSTORE v50611c2 vdbd
0x11c70x506: v50611c7 = MLOAD v50611b7(0x40)
0x11cc0x506: v50611cc = AND vd95 v50611a7(0xffffffffffffffffffffffffffffffffffffffff)
0x11ce0x506: v50611ce(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x11f30x506: v50611f3 = SUB v50611c2 v50611c7
0x11f40x506: v50611f4 = ADD v50611f3 v50611b2(0x20)
0x11f60x506: LOG3 v50611c7 v50611f4 v50611ce(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v50611cc v50611aa
0x11fa0x506: JUMP vd92(0xdc2)
----------------------------------

Begin block 0x119f0x10b7
prev = {'0x116a0x10b7'}, next = {}
----------------------------------
Block 0x119f0x10b7
0x11a00x10b7: v10b711a0(0x1) = CONST 
0x11a20x10b7: v10b711a2(0x1) = CONST 
0x11a40x10b7: v10b711a4(0xa0) = CONST 
0x11a60x10b7: v10b711a6(0x10000000000000000000000000000000000000000) = SHL v10b711a4(0xa0) v10b711a2(0x1)
0x11a70x10b7: v10b711a7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v10b711a6(0x10000000000000000000000000000000000000000) v10b711a0(0x1)
0x11aa0x10b7: v10b711aa = AND v10b7arg1 v10b711a7(0xffffffffffffffffffffffffffffffffffffffff)
0x11ab0x10b7: v10b711ab(0x0) = CONST 
0x11af0x10b7: MSTORE v10b711ab(0x0) v10b711aa
0x11b00x10b7: v10b711b0(0x1) = CONST 
0x11b20x10b7: v10b711b2(0x20) = CONST 
0x11b60x10b7: MSTORE v10b711b2(0x20) v10b711b0(0x1)
0x11b70x10b7: v10b711b7(0x40) = CONST 
0x11bc0x10b7: v10b711bc = SHA3 v10b711ab(0x0) v10b711b7(0x40)
0x11c00x10b7: SSTORE v10b711bc v10b7119e_0
0x11c20x10b7: v10b711c2 = MLOAD v10b711b7(0x40)
0x11c50x10b7: MSTORE v10b711c2 v10b7arg0
0x11c70x10b7: v10b711c7 = MLOAD v10b711b7(0x40)
0x11cc0x10b7: v10b711cc = AND v10b7arg2 v10b711a7(0xffffffffffffffffffffffffffffffffffffffff)
0x11ce0x10b7: v10b711ce(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x11f30x10b7: v10b711f3 = SUB v10b711c2 v10b711c7
0x11f40x10b7: v10b711f4 = ADD v10b711f3 v10b711b2(0x20)
0x11f60x10b7: LOG3 v10b711c7 v10b711f4 v10b711ce(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v10b711cc v10b711aa
0x11fa0x10b7: RETURNPRIVATE v10b7arg3
----------------------------------

Begin block 0x11fb
prev = {'0x833'}, next = {'0x1205', '0x1251'}
----------------------------------
Block 0x11fb
0x11fc: v11fc(0x0) = CONST 
0x1200: v1200 = GT v83a(0xa) v11fc(0x0)
0x1201: v1201(0x1251) = CONST 
0x1204: JUMPI v1201(0x1251) v1200
----------------------------------

Begin block 0x1205
prev = {'0x11fb'}, next = {}
----------------------------------
Block 0x1205
0x1205: v1205(0x40) = CONST 
0x1208: v1208 = MLOAD v1205(0x40)
0x1209: v1209(0x461bcd) = CONST 
0x120d: v120d(0xe5) = CONST 
0x120f: v120f(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v120d(0xe5) v1209(0x461bcd)
0x1211: MSTORE v1208 v120f(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1212: v1212(0x20) = CONST 
0x1214: v1214(0x4) = CONST 
0x1217: v1217 = ADD v1208 v1214(0x4)
0x1218: MSTORE v1217 v1212(0x20)
0x1219: v1219(0x1a) = CONST 
0x121b: v121b(0x24) = CONST 
0x121e: v121e = ADD v1208 v121b(0x24)
0x121f: MSTORE v121e v1219(0x1a)
0x1220: v1220(0x536166654d6174683a206469766973696f6e206279207a65726f000000000000) = CONST 
0x1241: v1241(0x44) = CONST 
0x1244: v1244 = ADD v1208 v1241(0x44)
0x1245: MSTORE v1244 v1220(0x536166654d6174683a206469766973696f6e206279207a65726f000000000000)
0x1247: v1247 = MLOAD v1205(0x40)
0x124b: v124b = SUB v1208 v1247
0x124c: v124c(0x64) = CONST 
0x124e: v124e = ADD v124c(0x64) v124b
0x1250: REVERT v1247 v124e
----------------------------------

Begin block 0x1251
prev = {'0x11fb'}, next = {'0x125c', '0x125b'}
----------------------------------
Block 0x1251
0x1252: v1252(0x0) = CONST 
0x1257: v1257(0x125c) = CONST 
0x125a: JUMPI v1257(0x125c) v83a(0xa)
----------------------------------

Begin block 0x125b
prev = {'0x1251'}, next = {}
----------------------------------
Block 0x125b
0x125b: THROW 
----------------------------------

Begin block 0x125c
prev = {'0x1251'}, next = {'0x846'}
----------------------------------
Block 0x125c
0x125d: v125d = DIV v32d v83a(0xa)
0x1264: JUMP v836(0x846)
----------------------------------

Begin block 0x1265
prev = {'0x85f'}, next = {'0x12aa', '0x1274'}
----------------------------------
Block 0x1265
0x1266: v1266(0x1) = CONST 
0x1268: v1268(0x1) = CONST 
0x126a: v126a(0xa0) = CONST 
0x126c: v126c(0x10000000000000000000000000000000000000000) = SHL v126a(0xa0) v1268(0x1)
0x126d: v126d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v126c(0x10000000000000000000000000000000000000000) v1266(0x1)
0x126f: v126f = AND v864 v126d(0xffffffffffffffffffffffffffffffffffffffff)
0x1270: v1270(0x12aa) = CONST 
0x1273: JUMPI v1270(0x12aa) v126f
----------------------------------

Begin block 0x1274
prev = {'0x1265'}, next = {}
----------------------------------
Block 0x1274
0x1274: v1274(0x40) = CONST 
0x1276: v1276 = MLOAD v1274(0x40)
0x1277: v1277(0x461bcd) = CONST 
0x127b: v127b(0xe5) = CONST 
0x127d: v127d(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v127b(0xe5) v1277(0x461bcd)
0x127f: MSTORE v1276 v127d(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1280: v1280(0x4) = CONST 
0x1282: v1282 = ADD v1280(0x4) v1276
0x1285: v1285(0x20) = CONST 
0x1287: v1287 = ADD v1285(0x20) v1282
0x128a: v128a = SUB v1287 v1282
0x128c: MSTORE v1282 v128a
0x128d: v128d(0x21) = CONST 
0x1290: MSTORE v1287 v128d(0x21)
0x1291: v1291(0x20) = CONST 
0x1293: v1293 = ADD v1291(0x20) v1287
0x1295: v1295(0x152d) = CONST 
0x1298: v1298(0x21) = CONST 
0x129b: CODECOPY v1293 v1295(0x152d) v1298(0x21)
0x129c: v129c(0x40) = CONST 
0x129e: v129e = ADD v129c(0x40) v1293
0x12a2: v12a2(0x40) = CONST 
0x12a4: v12a4 = MLOAD v12a2(0x40)
0x12a7: v12a7 = SUB v129e v12a4
0x12a9: REVERT v12a4 v12a7
----------------------------------

Begin block 0x12aa
prev = {'0x1265'}, next = {'0x12bd'}
----------------------------------
Block 0x12aa
0x12ab: v12ab(0x3) = CONST 
0x12ad: v12ad = SLOAD v12ab(0x3)
0x12ae: v12ae(0x12bd) = CONST 
0x12b3: v12b3(0xffffffff) = CONST 
0x12b8: v12b8(0x105a) = CONST 
0x12bb: v12bb(0x105a) = AND v12b8(0x105a) v12b3(0xffffffff)
0x12bc: v12bc_0 = CALLPRIVATE v12bb(0x105a) v125d v12ad v12ae(0x12bd)
----------------------------------

Begin block 0x12bd
prev = {'0x12aa'}, next = {'0x12e9'}
----------------------------------
Block 0x12bd
0x12be: v12be(0x3) = CONST 
0x12c0: SSTORE v12be(0x3) v12bc_0
0x12c1: v12c1(0x1) = CONST 
0x12c3: v12c3(0x1) = CONST 
0x12c5: v12c5(0xa0) = CONST 
0x12c7: v12c7(0x10000000000000000000000000000000000000000) = SHL v12c5(0xa0) v12c3(0x1)
0x12c8: v12c8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v12c7(0x10000000000000000000000000000000000000000) v12c1(0x1)
0x12ca: v12ca = AND v864 v12c8(0xffffffffffffffffffffffffffffffffffffffff)
0x12cb: v12cb(0x0) = CONST 
0x12cf: MSTORE v12cb(0x0) v12ca
0x12d0: v12d0(0x1) = CONST 
0x12d2: v12d2(0x20) = CONST 
0x12d4: MSTORE v12d2(0x20) v12d0(0x1)
0x12d5: v12d5(0x40) = CONST 
0x12d8: v12d8 = SHA3 v12cb(0x0) v12d5(0x40)
0x12d9: v12d9 = SLOAD v12d8
0x12da: v12da(0x12e9) = CONST 
0x12df: v12df(0xffffffff) = CONST 
0x12e4: v12e4(0x105a) = CONST 
0x12e7: v12e7(0x105a) = AND v12e4(0x105a) v12df(0xffffffff)
0x12e8: v12e8_0 = CALLPRIVATE v12e7(0x105a) v125d v12d9 v12da(0x12e9)
----------------------------------

Begin block 0x12e9
prev = {'0x12bd'}, next = {'0x86a'}
----------------------------------
Block 0x12e9
0x12ea: v12ea(0x1) = CONST 
0x12ec: v12ec(0x1) = CONST 
0x12ee: v12ee(0xa0) = CONST 
0x12f0: v12f0(0x10000000000000000000000000000000000000000) = SHL v12ee(0xa0) v12ec(0x1)
0x12f1: v12f1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v12f0(0x10000000000000000000000000000000000000000) v12ea(0x1)
0x12f3: v12f3 = AND v864 v12f1(0xffffffffffffffffffffffffffffffffffffffff)
0x12f4: v12f4(0x0) = CONST 
0x12f8: MSTORE v12f4(0x0) v12f3
0x12f9: v12f9(0x1) = CONST 
0x12fb: v12fb(0x20) = CONST 
0x12ff: MSTORE v12fb(0x20) v12f9(0x1)
0x1300: v1300(0x40) = CONST 
0x1304: v1304 = SHA3 v12f4(0x0) v1300(0x40)
0x1308: SSTORE v1304 v12e8_0
0x130a: v130a = MLOAD v1300(0x40)
0x130d: MSTORE v130a v125d
0x130f: v130f = MLOAD v1300(0x40)
0x1312: v1312(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x1337: v1337 = SUB v130a v130f
0x133a: v133a = ADD v12fb(0x20) v1337
0x133c: LOG3 v130f v133a v1312(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v12f3 v12f4(0x0)
0x133f: JUMP v861(0x86a)
----------------------------------

Begin block 0x1340
prev = {}, next = {'0x134f', '0x1348'}
----------------------------------
function 0x1340(v1340arg0, v1340arg1, v1340arg2)
Block 0x1340
0x1341: v1341(0x0) = CONST 
0x1344: v1344(0x134f) = CONST 
0x1347: JUMPI v1344(0x134f) v1340arg1
----------------------------------

Begin block 0x1348
prev = {'0x1340'}, next = {'0x6f10x1340'}
----------------------------------
Block 0x1348
0x1349: v1349(0x0) = CONST 
0x134b: v134b(0x6f1) = CONST 
0x134e: JUMP v134b(0x6f1)
----------------------------------

Begin block 0x134f
prev = {'0x1340'}, next = {'0x135b', '0x135c'}
----------------------------------
Block 0x134f
0x1352: v1352 = MUL v1340arg0 v1340arg1
0x1357: v1357(0x135c) = CONST 
0x135a: JUMPI v1357(0x135c) v1340arg1
----------------------------------

Begin block 0x135b
prev = {'0x134f'}, next = {}
----------------------------------
Block 0x135b
0x135b: THROW 
----------------------------------

Begin block 0x135c
prev = {'0x134f'}, next = {'0x10530x1340', '0x1363'}
----------------------------------
Block 0x135c
0x135d: v135d = DIV v1352 v1340arg1
0x135e: v135e = EQ v135d v1340arg0
0x135f: v135f(0x1053) = CONST 
0x1362: JUMPI v135f(0x1053) v135e
----------------------------------

Begin block 0x1363
prev = {'0x135c'}, next = {}
----------------------------------
Block 0x1363
0x1363: v1363(0x40) = CONST 
0x1365: v1365 = MLOAD v1363(0x40)
0x1366: v1366(0x461bcd) = CONST 
0x136a: v136a(0xe5) = CONST 
0x136c: v136c(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v136a(0xe5) v1366(0x461bcd)
0x136e: MSTORE v1365 v136c(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x136f: v136f(0x4) = CONST 
0x1371: v1371 = ADD v136f(0x4) v1365
0x1374: v1374(0x20) = CONST 
0x1376: v1376 = ADD v1374(0x20) v1371
0x1379: v1379 = SUB v1376 v1371
0x137b: MSTORE v1371 v1379
0x137c: v137c(0x21) = CONST 
0x137f: MSTORE v1376 v137c(0x21)
0x1380: v1380(0x20) = CONST 
0x1382: v1382 = ADD v1380(0x20) v1376
0x1384: v1384(0x14ec) = CONST 
0x1387: v1387(0x21) = CONST 
0x138a: CODECOPY v1382 v1384(0x14ec) v1387(0x21)
0x138b: v138b(0x40) = CONST 
0x138d: v138d = ADD v138b(0x40) v1382
0x1391: v1391(0x40) = CONST 
0x1393: v1393 = MLOAD v1391(0x40)
0x1396: v1396 = SUB v138d v1393
0x1398: REVERT v1393 v1396
----------------------------------

Begin block 0x1399
prev = {'0xe41'}, next = {'0x13de', '0x13a8'}
----------------------------------
Block 0x1399
0x139a: v139a(0x1) = CONST 
0x139c: v139c(0x1) = CONST 
0x139e: v139e(0xa0) = CONST 
0x13a0: v13a0(0x10000000000000000000000000000000000000000) = SHL v139e(0xa0) v139c(0x1)
0x13a1: v13a1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v13a0(0x10000000000000000000000000000000000000000) v139a(0x1)
0x13a3: v13a3 = AND v67c v13a1(0xffffffffffffffffffffffffffffffffffffffff)
0x13a4: v13a4(0x13de) = CONST 
0x13a7: JUMPI v13a4(0x13de) v13a3
----------------------------------

Begin block 0x13a8
prev = {'0x1399'}, next = {}
----------------------------------
Block 0x13a8
0x13a8: v13a8(0x40) = CONST 
0x13aa: v13aa = MLOAD v13a8(0x40)
0x13ab: v13ab(0x461bcd) = CONST 
0x13af: v13af(0xe5) = CONST 
0x13b1: v13b1(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v13af(0xe5) v13ab(0x461bcd)
0x13b3: MSTORE v13aa v13b1(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x13b4: v13b4(0x4) = CONST 
0x13b6: v13b6 = ADD v13b4(0x4) v13aa
0x13b9: v13b9(0x20) = CONST 
0x13bb: v13bb = ADD v13b9(0x20) v13b6
0x13be: v13be = SUB v13bb v13b6
0x13c0: MSTORE v13b6 v13be
0x13c1: v13c1(0x26) = CONST 
0x13c4: MSTORE v13bb v13c1(0x26)
0x13c5: v13c5(0x20) = CONST 
0x13c7: v13c7 = ADD v13c5(0x20) v13bb
0x13c9: v13c9(0x147e) = CONST 
0x13cc: v13cc(0x26) = CONST 
0x13cf: CODECOPY v13c7 v13c9(0x147e) v13cc(0x26)
0x13d0: v13d0(0x40) = CONST 
0x13d2: v13d2 = ADD v13d0(0x40) v13c7
0x13d6: v13d6(0x40) = CONST 
0x13d8: v13d8 = MLOAD v13d6(0x40)
0x13db: v13db = SUB v13d2 v13d8
0x13dd: REVERT v13d8 v13db
----------------------------------

Begin block 0x13de
prev = {'0x1399'}, next = {'0xe4a'}
----------------------------------
Block 0x13de
0x13df: v13df(0x0) = CONST 
0x13e2: v13e2 = SLOAD v13df(0x0)
0x13e3: v13e3(0x40) = CONST 
0x13e5: v13e5 = MLOAD v13e3(0x40)
0x13e6: v13e6(0x1) = CONST 
0x13e8: v13e8(0x1) = CONST 
0x13ea: v13ea(0xa0) = CONST 
0x13ec: v13ec(0x10000000000000000000000000000000000000000) = SHL v13ea(0xa0) v13e8(0x1)
0x13ed: v13ed(0xffffffffffffffffffffffffffffffffffffffff) = SUB v13ec(0x10000000000000000000000000000000000000000) v13e6(0x1)
0x13f0: v13f0 = AND v67c v13ed(0xffffffffffffffffffffffffffffffffffffffff)
0x13f3: v13f3 = AND v13e2 v13ed(0xffffffffffffffffffffffffffffffffffffffff)
0x13f5: v13f5(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x1417: LOG3 v13e5 v13df(0x0) v13f5(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v13f3 v13f0
0x1418: v1418(0x0) = CONST 
0x141b: v141b = SLOAD v1418(0x0)
0x141c: v141c(0x1) = CONST 
0x141e: v141e(0x1) = CONST 
0x1420: v1420(0xa0) = CONST 
0x1422: v1422(0x10000000000000000000000000000000000000000) = SHL v1420(0xa0) v141e(0x1)
0x1423: v1423(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1422(0x10000000000000000000000000000000000000000) v141c(0x1)
0x1424: v1424(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v1423(0xffffffffffffffffffffffffffffffffffffffff)
0x1425: v1425 = AND v1424(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v141b
0x1426: v1426(0x1) = CONST 
0x1428: v1428(0x1) = CONST 
0x142a: v142a(0xa0) = CONST 
0x142c: v142c(0x10000000000000000000000000000000000000000) = SHL v142a(0xa0) v1428(0x1)
0x142d: v142d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v142c(0x10000000000000000000000000000000000000000) v1426(0x1)
0x1431: v1431 = AND v142d(0xffffffffffffffffffffffffffffffffffffffff) v67c
0x1435: v1435 = OR v1431 v1425
0x1437: SSTORE v1418(0x0) v1435
0x1438: JUMP ve42(0xe4a)
----------------------------------

Begin block 0x1601
prev = {'0x183', '0x10'}, next = {'0x18e0x0'}
----------------------------------
Block 0x1601
0x1602: v1602(0x18e) = CONST 
0x1603: CALLPRIVATE v1602(0x18e)
----------------------------------

Begin block 0x1604
prev = {'0x14b'}, next = {}
----------------------------------
Block 0x1604
0x1605: v1605(0x193) = CONST 
0x1606: CALLPRIVATE v1605(0x193)
----------------------------------

Begin block 0x1607
prev = {'0x157'}, next = {}
----------------------------------
Block 0x1607
0x1608: v1608(0x210) = CONST 
0x1609: CALLPRIVATE v1608(0x210)
----------------------------------

Begin block 0x160a
prev = {'0x162'}, next = {}
----------------------------------
Block 0x160a
0x160b: v160b(0x250) = CONST 
0x160c: CALLPRIVATE v160b(0x250)
----------------------------------

Begin block 0x160d
prev = {'0x16d'}, next = {}
----------------------------------
Block 0x160d
0x160e: v160e(0x27e) = CONST 
0x160f: CALLPRIVATE v160e(0x27e)
----------------------------------

Begin block 0x1610
prev = {'0x178'}, next = {}
----------------------------------
Block 0x1610
0x1611: v1611(0x332) = CONST 
0x1612: CALLPRIVATE v1611(0x332)
----------------------------------

Begin block 0x1613
prev = {'0x183'}, next = {}
----------------------------------
Block 0x1613
0x1614: v1614(0x34c) = CONST 
0x1615: CALLPRIVATE v1614(0x34c)
----------------------------------

Begin block 0x1616
prev = {'0x125'}, next = {}
----------------------------------
Block 0x1616
0x1617: v1617(0x382) = CONST 
0x1618: CALLPRIVATE v1617(0x382)
----------------------------------

Begin block 0x1619
prev = {'0x131'}, next = {}
----------------------------------
Block 0x1619
0x161a: v161a(0x3a6) = CONST 
0x161b: CALLPRIVATE v161a(0x3a6)
----------------------------------

Begin block 0x161c
prev = {'0x13c'}, next = {}
----------------------------------
Block 0x161c
0x161d: v161d(0x3ae) = CONST 
0x161e: CALLPRIVATE v161d(0x3ae)
----------------------------------

Begin block 0x161f
prev = {'0xf5'}, next = {}
----------------------------------
Block 0x161f
0x1620: v1620(0x3da) = CONST 
0x1621: CALLPRIVATE v1620(0x3da)
----------------------------------

Begin block 0x1622
prev = {'0x100'}, next = {}
----------------------------------
Block 0x1622
0x1623: v1623(0x3e2) = CONST 
0x1624: CALLPRIVATE v1623(0x3e2)
----------------------------------

Begin block 0x1625
prev = {'0x10b'}, next = {}
----------------------------------
Block 0x1625
0x1626: v1626(0x408) = CONST 
0x1627: CALLPRIVATE v1626(0x408)
----------------------------------

Begin block 0x1628
prev = {'0x116'}, next = {}
----------------------------------
Block 0x1628
0x1629: v1629(0x410) = CONST 
0x162a: CALLPRIVATE v1629(0x410)
----------------------------------

Begin block 0x162b
prev = {'0x97'}, next = {}
----------------------------------
Block 0x162b
0x162c: v162c(0x418) = CONST 
0x162d: CALLPRIVATE v162c(0x418)
----------------------------------

Begin block 0x162e
prev = {'0xa3'}, next = {}
----------------------------------
Block 0x162e
0x162f: v162f(0x420) = CONST 
0x1630: CALLPRIVATE v162f(0x420)
----------------------------------

Begin block 0x1631
prev = {'0xae'}, next = {}
----------------------------------
Block 0x1631
0x1632: v1632(0x428) = CONST 
0x1633: CALLPRIVATE v1632(0x428)
----------------------------------

Begin block 0x1634
prev = {'0xb9'}, next = {}
----------------------------------
Block 0x1634
0x1635: v1635(0x454) = CONST 
0x1636: CALLPRIVATE v1635(0x454)
----------------------------------

Begin block 0x1637
prev = {'0xc4'}, next = {}
----------------------------------
Block 0x1637
0x1638: v1638(0x480) = CONST 
0x1639: CALLPRIVATE v1638(0x480)
----------------------------------

Begin block 0x163a
prev = {'0xcf'}, next = {}
----------------------------------
Block 0x163a
0x163b: v163b(0x4ac) = CONST 
0x163c: CALLPRIVATE v163b(0x4ac)
----------------------------------

Begin block 0x163d
prev = {'0x71'}, next = {}
----------------------------------
Block 0x163d
0x163e: v163e(0x4d2) = CONST 
0x163f: CALLPRIVATE v163e(0x4d2)
----------------------------------

Begin block 0x1640
prev = {'0x7d'}, next = {}
----------------------------------
Block 0x1640
0x1641: v1641(0x4fe) = CONST 
0x1642: CALLPRIVATE v1641(0x4fe)
----------------------------------

Begin block 0x1643
prev = {'0x88'}, next = {}
----------------------------------
Block 0x1643
0x1644: v1644(0x506) = CONST 
0x1645: CALLPRIVATE v1644(0x506)
----------------------------------

Begin block 0x1646
prev = {'0x41'}, next = {}
----------------------------------
Block 0x1646
0x1647: v1647(0x62d) = CONST 
0x1648: CALLPRIVATE v1647(0x62d)
----------------------------------

Begin block 0x1649
prev = {'0x4c'}, next = {}
----------------------------------
Block 0x1649
0x164a: v164a(0x65b) = CONST 
0x164b: CALLPRIVATE v164a(0x65b)
----------------------------------

Begin block 0x164c
prev = {'0x57'}, next = {}
----------------------------------
Block 0x164c
0x164d: v164d(0x681) = CONST 
0x164e: CALLPRIVATE v164d(0x681)
----------------------------------

Begin block 0x164f
prev = {'0x62'}, next = {}
----------------------------------
Block 0x164f
0x1650: v1650(0x6ad) = CONST 
0x1651: CALLPRIVATE v1650(0x6ad)
----------------------------------
