
Begin block 0x0
prev = {}, next = {'0xc', '0x10'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x2c1', '0x1a'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x2b7: v2b7(0x2c1) = CONST 
0x2b8: JUMPI v2b7(0x2c1) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x2b', '0x2c4'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x900f010) = CONST 
0x26: v26 = EQ v21(0x900f010) v1f
0x2b9: v2b9(0x2c4) = CONST 
0x2ba: JUMPI v2b9(0x2c4) v26
----------------------------------

Begin block 0x2b
prev = {'0x1a'}, next = {'0x2c7', '0x36'}
----------------------------------
Block 0x2b
0x2c: v2c(0x445df0ac) = CONST 
0x31: v31 = EQ v2c(0x445df0ac) v1f
0x2bb: v2bb(0x2c7) = CONST 
0x2bc: JUMPI v2bb(0x2c7) v31
----------------------------------

Begin block 0x36
prev = {'0x2b'}, next = {'0x2ca', '0x41'}
----------------------------------
Block 0x36
0x37: v37(0x8da5cb5b) = CONST 
0x3c: v3c = EQ v37(0x8da5cb5b) v1f
0x2bd: v2bd(0x2ca) = CONST 
0x2be: JUMPI v2bd(0x2ca) v3c
----------------------------------

Begin block 0x41
prev = {'0x36'}, next = {'0x2c1', '0x2cd'}
----------------------------------
Block 0x41
0x42: v42(0xfdacd576) = CONST 
0x47: v47 = EQ v42(0xfdacd576) v1f
0x2bf: v2bf(0x2cd) = CONST 
0x2c0: JUMPI v2bf(0x2cd) v47
----------------------------------

Begin block 0x4c
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x4c
0x4d: v4d(0x0) = CONST 
0x50: REVERT v4d(0x0) v4d(0x0)
----------------------------------

Begin block 0x51
prev = {}, next = {'0x67', '0x63'}
----------------------------------
function upgrade(address)()
Block 0x51
0x52: v52(0x93) = CONST 
0x55: v55(0x4) = CONST 
0x58: v58 = CALLDATASIZE 
0x59: v59 = SUB v58 v55(0x4)
0x5a: v5a(0x20) = CONST 
0x5d: v5d = LT v59 v5a(0x20)
0x5e: v5e = ISZERO v5d
0x5f: v5f(0x67) = CONST 
0x62: JUMPI v5f(0x67) v5e
----------------------------------

Begin block 0x63
prev = {'0x51'}, next = {}
----------------------------------
Block 0x63
0x63: v63(0x0) = CONST 
0x66: REVERT v63(0x0) v63(0x0)
----------------------------------

Begin block 0x67
prev = {'0x51'}, next = {'0x12b'}
----------------------------------
Block 0x67
0x69: v69 = ADD v55(0x4) v59
0x6d: v6d = CALLDATALOAD v55(0x4)
0x6e: v6e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x83: v83 = AND v6e(0xffffffffffffffffffffffffffffffffffffffff) v6d
0x85: v85(0x20) = CONST 
0x87: v87 = ADD v85(0x20) v55(0x4)
0x8f: v8f(0x12b) = CONST 
0x92: JUMP v8f(0x12b)
----------------------------------

Begin block 0x93
prev = {'0x1f4'}, next = {}
----------------------------------
Block 0x93
0x94: STOP 
----------------------------------

Begin block 0x95
prev = {}, next = {'0x1f7'}
----------------------------------
function last_completed_migration()()
Block 0x95
0x96: v96(0x9d) = CONST 
0x99: v99(0x1f7) = CONST 
0x9c: JUMP v99(0x1f7)
----------------------------------

Begin block 0x9d
prev = {'0x1f7'}, next = {}
----------------------------------
Block 0x9d
0x9e: v9e(0x40) = CONST 
0xa0: va0 = MLOAD v9e(0x40)
0xa4: MSTORE va0 v1fa
0xa5: va5(0x20) = CONST 
0xa7: va7 = ADD va5(0x20) va0
0xab: vab(0x40) = CONST 
0xad: vad = MLOAD vab(0x40)
0xb0: vb0 = SUB va7 vad
0xb2: RETURN vad vb0
----------------------------------

Begin block 0xb3
prev = {}, next = {'0x1fd'}
----------------------------------
function owner()()
Block 0xb3
0xb4: vb4(0xbb) = CONST 
0xb7: vb7(0x1fd) = CONST 
0xba: JUMP vb7(0x1fd)
----------------------------------

Begin block 0xbb
prev = {'0x1fd'}, next = {}
----------------------------------
Block 0xbb
0xbc: vbc(0x40) = CONST 
0xbe: vbe = MLOAD vbc(0x40)
0xc1: vc1(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xd6: vd6 = AND vc1(0xffffffffffffffffffffffffffffffffffffffff) v21f
0xd7: vd7(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xec: vec = AND vd7(0xffffffffffffffffffffffffffffffffffffffff) vd6
0xee: MSTORE vbe vec
0xef: vef(0x20) = CONST 
0xf1: vf1 = ADD vef(0x20) vbe
0xf5: vf5(0x40) = CONST 
0xf7: vf7 = MLOAD vf5(0x40)
0xfa: vfa = SUB vf1 vf7
0xfc: RETURN vf7 vfa
----------------------------------

Begin block 0xfd
prev = {}, next = {'0x10f', '0x113'}
----------------------------------
function setCompleted(uint256)()
Block 0xfd
0xfe: vfe(0x129) = CONST 
0x101: v101(0x4) = CONST 
0x104: v104 = CALLDATASIZE 
0x105: v105 = SUB v104 v101(0x4)
0x106: v106(0x20) = CONST 
0x109: v109 = LT v105 v106(0x20)
0x10a: v10a = ISZERO v109
0x10b: v10b(0x113) = CONST 
0x10e: JUMPI v10b(0x113) v10a
----------------------------------

Begin block 0x10f
prev = {'0xfd'}, next = {}
----------------------------------
Block 0x10f
0x10f: v10f(0x0) = CONST 
0x112: REVERT v10f(0x0) v10f(0x0)
----------------------------------

Begin block 0x113
prev = {'0xfd'}, next = {'0x222'}
----------------------------------
Block 0x113
0x115: v115 = ADD v101(0x4) v105
0x119: v119 = CALLDATALOAD v101(0x4)
0x11b: v11b(0x20) = CONST 
0x11d: v11d = ADD v11b(0x20) v101(0x4)
0x125: v125(0x222) = CONST 
0x128: JUMP v125(0x222)
----------------------------------

Begin block 0x129
prev = {'0x27f'}, next = {}
----------------------------------
Block 0x129
0x12a: STOP 
----------------------------------

Begin block 0x12b
prev = {'0x67'}, next = {'0x1f4', '0x181'}
----------------------------------
Block 0x12b
0x12c: v12c(0x0) = CONST 
0x130: v130 = SLOAD v12c(0x0)
0x132: v132(0x100) = CONST 
0x135: v135(0x1) = EXP v132(0x100) v12c(0x0)
0x137: v137 = DIV v130 v135(0x1)
0x138: v138(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x14d: v14d = AND v138(0xffffffffffffffffffffffffffffffffffffffff) v137
0x14e: v14e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x163: v163 = AND v14e(0xffffffffffffffffffffffffffffffffffffffff) v14d
0x164: v164 = CALLER 
0x165: v165(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x17a: v17a = AND v165(0xffffffffffffffffffffffffffffffffffffffff) v164
0x17b: v17b = EQ v17a v163
0x17c: v17c = ISZERO v17b
0x17d: v17d(0x1f4) = CONST 
0x180: JUMPI v17d(0x1f4) v17c
----------------------------------

Begin block 0x181
prev = {'0x12b'}, next = {'0x1da', '0x1d6'}
----------------------------------
Block 0x181
0x181: v181(0x0) = CONST 
0x187: v187(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x19c: v19c = AND v187(0xffffffffffffffffffffffffffffffffffffffff) v83
0x19d: v19d(0xfdacd576) = CONST 
0x1a2: v1a2(0x1) = CONST 
0x1a4: v1a4 = SLOAD v1a2(0x1)
0x1a5: v1a5(0x40) = CONST 
0x1a7: v1a7 = MLOAD v1a5(0x40)
0x1a9: v1a9(0xffffffff) = CONST 
0x1ae: v1ae(0xfdacd576) = AND v1a9(0xffffffff) v19d(0xfdacd576)
0x1af: v1af(0xe0) = CONST 
0x1b1: v1b1(0xfdacd57600000000000000000000000000000000000000000000000000000000) = SHL v1af(0xe0) v1ae(0xfdacd576)
0x1b3: MSTORE v1a7 v1b1(0xfdacd57600000000000000000000000000000000000000000000000000000000)
0x1b4: v1b4(0x4) = CONST 
0x1b6: v1b6 = ADD v1b4(0x4) v1a7
0x1ba: MSTORE v1b6 v1a4
0x1bb: v1bb(0x20) = CONST 
0x1bd: v1bd = ADD v1bb(0x20) v1b6
0x1c1: v1c1(0x0) = CONST 
0x1c3: v1c3(0x40) = CONST 
0x1c5: v1c5 = MLOAD v1c3(0x40)
0x1c8: v1c8 = SUB v1bd v1c5
0x1ca: v1ca(0x0) = CONST 
0x1ce: v1ce = EXTCODESIZE v19c
0x1cf: v1cf = ISZERO v1ce
0x1d1: v1d1 = ISZERO v1cf
0x1d2: v1d2(0x1da) = CONST 
0x1d5: JUMPI v1d2(0x1da) v1d1
----------------------------------

Begin block 0x1d6
prev = {'0x181'}, next = {}
----------------------------------
Block 0x1d6
0x1d6: v1d6(0x0) = CONST 
0x1d9: REVERT v1d6(0x0) v1d6(0x0)
----------------------------------

Begin block 0x1da
prev = {'0x181'}, next = {'0x1ee', '0x1e5'}
----------------------------------
Block 0x1da
0x1dc: v1dc = GAS 
0x1dd: v1dd = CALL v1dc v19c v1ca(0x0) v1c5 v1c8 v1c5 v1c1(0x0)
0x1de: v1de = ISZERO v1dd
0x1e0: v1e0 = ISZERO v1de
0x1e1: v1e1(0x1ee) = CONST 
0x1e4: JUMPI v1e1(0x1ee) v1e0
----------------------------------

Begin block 0x1e5
prev = {'0x1da'}, next = {}
----------------------------------
Block 0x1e5
0x1e5: v1e5 = RETURNDATASIZE 
0x1e6: v1e6(0x0) = CONST 
0x1e9: RETURNDATACOPY v1e6(0x0) v1e6(0x0) v1e5
0x1ea: v1ea = RETURNDATASIZE 
0x1eb: v1eb(0x0) = CONST 
0x1ed: REVERT v1eb(0x0) v1ea
----------------------------------

Begin block 0x1ee
prev = {'0x1da'}, next = {'0x1f4'}
----------------------------------
Block 0x1ee
----------------------------------

Begin block 0x1f4
prev = {'0x1ee', '0x12b'}, next = {'0x93'}
----------------------------------
Block 0x1f4
0x1f6: JUMP v52(0x93)
----------------------------------

Begin block 0x1f7
prev = {'0x95'}, next = {'0x9d'}
----------------------------------
Block 0x1f7
0x1f8: v1f8(0x1) = CONST 
0x1fa: v1fa = SLOAD v1f8(0x1)
0x1fc: JUMP v96(0x9d)
----------------------------------

Begin block 0x1fd
prev = {'0xb3'}, next = {'0xbb'}
----------------------------------
Block 0x1fd
0x1fe: v1fe(0x0) = CONST 
0x202: v202 = SLOAD v1fe(0x0)
0x204: v204(0x100) = CONST 
0x207: v207(0x1) = EXP v204(0x100) v1fe(0x0)
0x209: v209 = DIV v202 v207(0x1)
0x20a: v20a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x21f: v21f = AND v20a(0xffffffffffffffffffffffffffffffffffffffff) v209
0x221: JUMP vb4(0xbb)
----------------------------------

Begin block 0x222
prev = {'0x113'}, next = {'0x278', '0x27f'}
----------------------------------
Block 0x222
0x223: v223(0x0) = CONST 
0x227: v227 = SLOAD v223(0x0)
0x229: v229(0x100) = CONST 
0x22c: v22c(0x1) = EXP v229(0x100) v223(0x0)
0x22e: v22e = DIV v227 v22c(0x1)
0x22f: v22f(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x244: v244 = AND v22f(0xffffffffffffffffffffffffffffffffffffffff) v22e
0x245: v245(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x25a: v25a = AND v245(0xffffffffffffffffffffffffffffffffffffffff) v244
0x25b: v25b = CALLER 
0x25c: v25c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x271: v271 = AND v25c(0xffffffffffffffffffffffffffffffffffffffff) v25b
0x272: v272 = EQ v271 v25a
0x273: v273 = ISZERO v272
0x274: v274(0x27f) = CONST 
0x277: JUMPI v274(0x27f) v273
----------------------------------

Begin block 0x278
prev = {'0x222'}, next = {'0x27f'}
----------------------------------
Block 0x278
0x279: v279(0x1) = CONST 
0x27d: SSTORE v279(0x1) v119
----------------------------------

Begin block 0x27f
prev = {'0x278', '0x222'}, next = {'0x129'}
----------------------------------
Block 0x27f
0x281: JUMP vfe(0x129)
----------------------------------

Begin block 0x2c1
prev = {'0x41', '0x10'}, next = {}
----------------------------------
Block 0x2c1
0x2c2: v2c2(0x4c) = CONST 
0x2c3: CALLPRIVATE v2c2(0x4c)
----------------------------------

Begin block 0x2c4
prev = {'0x1a'}, next = {}
----------------------------------
Block 0x2c4
0x2c5: v2c5(0x51) = CONST 
0x2c6: CALLPRIVATE v2c5(0x51)
----------------------------------

Begin block 0x2c7
prev = {'0x2b'}, next = {}
----------------------------------
Block 0x2c7
0x2c8: v2c8(0x95) = CONST 
0x2c9: CALLPRIVATE v2c8(0x95)
----------------------------------

Begin block 0x2ca
prev = {'0x36'}, next = {}
----------------------------------
Block 0x2ca
0x2cb: v2cb(0xb3) = CONST 
0x2cc: CALLPRIVATE v2cb(0xb3)
----------------------------------

Begin block 0x2cd
prev = {'0x41'}, next = {}
----------------------------------
Block 0x2cd
0x2ce: v2ce(0xfd) = CONST 
0x2cf: CALLPRIVATE v2ce(0xfd)
----------------------------------
