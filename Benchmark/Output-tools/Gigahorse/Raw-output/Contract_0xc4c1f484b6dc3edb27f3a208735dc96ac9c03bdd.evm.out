
Begin block 0x0
prev = {}, next = {'0xb', '0x15c'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x60) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x60)
0x5: v5 = CALLDATASIZE 
0x6: v6 = ISZERO v5
0x7: v7(0x15c) = CONST 
0xa: JUMPI v7(0x15c) v6
----------------------------------

Begin block 0xb
prev = {'0x0'}, next = {'0x3e', '0xf41'}
----------------------------------
Block 0xb
0xb: vb(0xffffffff) = CONST 
0x10: v10(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x2e: v2e(0x0) = CONST 
0x30: v30 = CALLDATALOAD v2e(0x0)
0x31: v31 = DIV v30 v10(0x100000000000000000000000000000000000000000000000000000000)
0x32: v32 = AND v31 vb(0xffffffff)
0x33: v33(0x6fdde03) = CONST 
0x39: v39 = EQ v32 v33(0x6fdde03)
0xf0b: vf0b(0xf41) = CONST 
0xf0c: JUMPI vf0b(0xf41) v39
----------------------------------

Begin block 0x3e
prev = {'0xb'}, next = {'0x49', '0xf44'}
----------------------------------
Block 0x3e
0x3f: v3f(0x95ea7b3) = CONST 
0x44: v44 = EQ v3f(0x95ea7b3) v32
0xf0d: vf0d(0xf44) = CONST 
0xf0e: JUMPI vf0d(0xf44) v44
----------------------------------

Begin block 0x49
prev = {'0x3e'}, next = {'0xf47', '0x54'}
----------------------------------
Block 0x49
0x4a: v4a(0xb97bc86) = CONST 
0x4f: v4f = EQ v4a(0xb97bc86) v32
0xf0f: vf0f(0xf47) = CONST 
0xf10: JUMPI vf0f(0xf47) v4f
----------------------------------

Begin block 0x54
prev = {'0x49'}, next = {'0xf4a', '0x5f'}
----------------------------------
Block 0x54
0x55: v55(0x10549874) = CONST 
0x5a: v5a = EQ v55(0x10549874) v32
0xf11: vf11(0xf4a) = CONST 
0xf12: JUMPI vf11(0xf4a) v5a
----------------------------------

Begin block 0x5f
prev = {'0x54'}, next = {'0xf4d', '0x6a'}
----------------------------------
Block 0x5f
0x60: v60(0x18160ddd) = CONST 
0x65: v65 = EQ v60(0x18160ddd) v32
0xf13: vf13(0xf4d) = CONST 
0xf14: JUMPI vf13(0xf4d) v65
----------------------------------

Begin block 0x6a
prev = {'0x5f'}, next = {'0xf50', '0x75'}
----------------------------------
Block 0x6a
0x6b: v6b(0x23b872dd) = CONST 
0x70: v70 = EQ v6b(0x23b872dd) v32
0xf15: vf15(0xf50) = CONST 
0xf16: JUMPI vf15(0xf50) v70
----------------------------------

Begin block 0x75
prev = {'0x6a'}, next = {'0xf53', '0x80'}
----------------------------------
Block 0x75
0x76: v76(0x24497829) = CONST 
0x7b: v7b = EQ v76(0x24497829) v32
0xf17: vf17(0xf53) = CONST 
0xf18: JUMPI vf17(0xf53) v7b
----------------------------------

Begin block 0x80
prev = {'0x75'}, next = {'0xf56', '0x8b'}
----------------------------------
Block 0x80
0x81: v81(0x250b1154) = CONST 
0x86: v86 = EQ v81(0x250b1154) v32
0xf19: vf19(0xf56) = CONST 
0xf1a: JUMPI vf19(0xf56) v86
----------------------------------

Begin block 0x8b
prev = {'0x80'}, next = {'0xf59', '0x96'}
----------------------------------
Block 0x8b
0x8c: v8c(0x313ce567) = CONST 
0x91: v91 = EQ v8c(0x313ce567) v32
0xf1b: vf1b(0xf59) = CONST 
0xf1c: JUMPI vf1b(0xf59) v91
----------------------------------

Begin block 0x96
prev = {'0x8b'}, next = {'0xf5c', '0xa1'}
----------------------------------
Block 0x96
0x97: v97(0x3970f698) = CONST 
0x9c: v9c = EQ v97(0x3970f698) v32
0xf1d: vf1d(0xf5c) = CONST 
0xf1e: JUMPI vf1d(0xf5c) v9c
----------------------------------

Begin block 0xa1
prev = {'0x96'}, next = {'0xac', '0xf5f'}
----------------------------------
Block 0xa1
0xa2: va2(0x4bb278f3) = CONST 
0xa7: va7 = EQ va2(0x4bb278f3) v32
0xf1f: vf1f(0xf5f) = CONST 
0xf20: JUMPI vf1f(0xf5f) va7
----------------------------------

Begin block 0xac
prev = {'0xa1'}, next = {'0xb7', '0xf62'}
----------------------------------
Block 0xac
0xad: vad(0x4c4a9761) = CONST 
0xb2: vb2 = EQ vad(0x4c4a9761) v32
0xf21: vf21(0xf62) = CONST 
0xf22: JUMPI vf21(0xf62) vb2
----------------------------------

Begin block 0xb7
prev = {'0xac'}, next = {'0xc2', '0xf65'}
----------------------------------
Block 0xb7
0xb8: vb8(0x4cc09eac) = CONST 
0xbd: vbd = EQ vb8(0x4cc09eac) v32
0xf23: vf23(0xf65) = CONST 
0xf24: JUMPI vf23(0xf65) vbd
----------------------------------

Begin block 0xc2
prev = {'0xb7'}, next = {'0xcd', '0xf68'}
----------------------------------
Block 0xc2
0xc3: vc3(0x66188463) = CONST 
0xc8: vc8 = EQ vc3(0x66188463) v32
0xf25: vf25(0xf68) = CONST 
0xf26: JUMPI vf25(0xf68) vc8
----------------------------------

Begin block 0xcd
prev = {'0xc2'}, next = {'0xf6b', '0xd8'}
----------------------------------
Block 0xcd
0xce: vce(0x70a08231) = CONST 
0xd3: vd3 = EQ vce(0x70a08231) v32
0xf27: vf27(0xf6b) = CONST 
0xf28: JUMPI vf27(0xf6b) vd3
----------------------------------

Begin block 0xd8
prev = {'0xcd'}, next = {'0xe3', '0xf6e'}
----------------------------------
Block 0xd8
0xd9: vd9(0x89311e6f) = CONST 
0xde: vde = EQ vd9(0x89311e6f) v32
0xf29: vf29(0xf6e) = CONST 
0xf2a: JUMPI vf29(0xf6e) vde
----------------------------------

Begin block 0xe3
prev = {'0xd8'}, next = {'0xf71', '0xee'}
----------------------------------
Block 0xe3
0xe4: ve4(0x8d4e4083) = CONST 
0xe9: ve9 = EQ ve4(0x8d4e4083) v32
0xf2b: vf2b(0xf71) = CONST 
0xf2c: JUMPI vf2b(0xf71) ve9
----------------------------------

Begin block 0xee
prev = {'0xe3'}, next = {'0xf74', '0xf9'}
----------------------------------
Block 0xee
0xef: vef(0x8da5cb5b) = CONST 
0xf4: vf4 = EQ vef(0x8da5cb5b) v32
0xf2d: vf2d(0xf74) = CONST 
0xf2e: JUMPI vf2d(0xf74) vf4
----------------------------------

Begin block 0xf9
prev = {'0xee'}, next = {'0x104', '0xf77'}
----------------------------------
Block 0xf9
0xfa: vfa(0x95d89b41) = CONST 
0xff: vff = EQ vfa(0x95d89b41) v32
0xf2f: vf2f(0xf77) = CONST 
0xf30: JUMPI vf2f(0xf77) vff
----------------------------------

Begin block 0x104
prev = {'0xf9'}, next = {'0x10f', '0xf7a'}
----------------------------------
Block 0x104
0x105: v105(0xa9059cbb) = CONST 
0x10a: v10a = EQ v105(0xa9059cbb) v32
0xf31: vf31(0xf7a) = CONST 
0xf32: JUMPI vf31(0xf7a) v10a
----------------------------------

Begin block 0x10f
prev = {'0x104'}, next = {'0xf53', '0x11a'}
----------------------------------
Block 0x10f
0x110: v110(0xc516358f) = CONST 
0x115: v115 = EQ v110(0xc516358f) v32
0xf33: vf33(0xf53) = CONST 
0xf34: JUMPI vf33(0xf53) v115
----------------------------------

Begin block 0x11a
prev = {'0x10f'}, next = {'0x125', '0xf7d'}
----------------------------------
Block 0x11a
0x11b: v11b(0xd73dd623) = CONST 
0x120: v120 = EQ v11b(0xd73dd623) v32
0xf35: vf35(0xf7d) = CONST 
0xf36: JUMPI vf35(0xf7d) v120
----------------------------------

Begin block 0x125
prev = {'0x11a'}, next = {'0xf80', '0x130'}
----------------------------------
Block 0x125
0x126: v126(0xdd62ed3e) = CONST 
0x12b: v12b = EQ v126(0xdd62ed3e) v32
0xf37: vf37(0xf80) = CONST 
0xf38: JUMPI vf37(0xf80) v12b
----------------------------------

Begin block 0x130
prev = {'0x125'}, next = {'0xf83', '0x13b'}
----------------------------------
Block 0x130
0x131: v131(0xe1e46f24) = CONST 
0x136: v136 = EQ v131(0xe1e46f24) v32
0xf39: vf39(0xf83) = CONST 
0xf3a: JUMPI vf39(0xf83) v136
----------------------------------

Begin block 0x13b
prev = {'0x130'}, next = {'0xf86', '0x146'}
----------------------------------
Block 0x13b
0x13c: v13c(0xea4ce239) = CONST 
0x141: v141 = EQ v13c(0xea4ce239) v32
0xf3b: vf3b(0xf86) = CONST 
0xf3c: JUMPI vf3b(0xf86) v141
----------------------------------

Begin block 0x146
prev = {'0x13b'}, next = {'0x151', '0xf89'}
----------------------------------
Block 0x146
0x147: v147(0xea98fcf9) = CONST 
0x14c: v14c = EQ v147(0xea98fcf9) v32
0xf3d: vf3d(0xf89) = CONST 
0xf3e: JUMPI vf3d(0xf89) v14c
----------------------------------

Begin block 0x151
prev = {'0x146'}, next = {'0xf8c', '0x15c'}
----------------------------------
Block 0x151
0x152: v152(0xf2fde38b) = CONST 
0x157: v157 = EQ v152(0xf2fde38b) v32
0xf3f: vf3f(0xf8c) = CONST 
0xf40: JUMPI vf3f(0xf8c) v157
----------------------------------

Begin block 0x15c
prev = {'0x0', '0x151'}, next = {'0x15d'}
----------------------------------
Block 0x15c
----------------------------------

Begin block 0x15d
prev = {'0x15c'}, next = {'0x6a2'}
----------------------------------
Block 0x15d
0x15e: v15e(0x167) = CONST 
0x161: v161 = CALLER 
0x162: v162 = CALLVALUE 
0x163: v163(0x6a2) = CONST 
0x166: JUMP v163(0x6a2)
----------------------------------

Begin block 0x1670x0
prev = {'0x762'}, next = {'0x1680x0'}
----------------------------------
Block 0x1670x0
----------------------------------

Begin block 0x1670x374
prev = {'0xa5e'}, next = {'0x1680x374'}
----------------------------------
Block 0x1670x374
----------------------------------

Begin block 0x1670x681
prev = {'0xe50'}, next = {'0x1680x681'}
----------------------------------
Block 0x1670x681
----------------------------------

Begin block 0x1680x0
prev = {'0x1670x0'}, next = {}
----------------------------------
Block 0x1680x0
0x1690x0: STOP 
----------------------------------

Begin block 0x1680x374
prev = {'0x1670x374'}, next = {}
----------------------------------
Block 0x1680x374
0x1690x374: STOP 
----------------------------------

Begin block 0x1680x681
prev = {'0x1670x681'}, next = {}
----------------------------------
Block 0x1680x681
0x1690x681: STOP 
----------------------------------

Begin block 0x16a
prev = {}, next = {'0x171', '0x175'}
----------------------------------
function name()()
Block 0x16a
0x16b: v16b = CALLVALUE 
0x16c: v16c = ISZERO v16b
0x16d: v16d(0x175) = CONST 
0x170: JUMPI v16d(0x175) v16c
----------------------------------

Begin block 0x171
prev = {'0x16a'}, next = {}
----------------------------------
Block 0x171
0x171: v171(0x0) = CONST 
0x174: REVERT v171(0x0) v171(0x0)
----------------------------------

Begin block 0x175
prev = {'0x16a'}, next = {'0x769'}
----------------------------------
Block 0x175
0x176: v176(0x17d) = CONST 
0x179: v179(0x769) = CONST 
0x17c: JUMP v179(0x769)
----------------------------------

Begin block 0x17d0x16a
prev = {'0x769'}, next = {'0x1a10x16a'}
----------------------------------
Block 0x17d0x16a
0x17e0x16a: v16a17e(0x40) = CONST 
0x1800x16a: v16a180 = MLOAD v16a17e(0x40)
0x1810x16a: v16a181(0x20) = CONST 
0x1850x16a: MSTORE v16a180 v16a181(0x20)
0x1890x16a: v16a189 = ADD v16a180 v16a181(0x20)
0x18d0x16a: v16a18d = MLOAD v76d
0x18f0x16a: MSTORE v16a189 v16a18d
0x1900x16a: v16a190(0x20) = CONST 
0x1920x16a: v16a192 = ADD v16a190(0x20) v16a189
0x1960x16a: v16a196 = MLOAD v76d
0x1980x16a: v16a198(0x20) = CONST 
0x19a0x16a: v16a19a = ADD v16a198(0x20) v76d
0x19f0x16a: v16a19f(0x0) = CONST 
----------------------------------

Begin block 0x17d0x4b5
prev = {'0xba6'}, next = {'0x1a10x4b5'}
----------------------------------
Block 0x17d0x4b5
0x17e0x4b5: v4b517e(0x40) = CONST 
0x1800x4b5: v4b5180 = MLOAD v4b517e(0x40)
0x1810x4b5: v4b5181(0x20) = CONST 
0x1850x4b5: MSTORE v4b5180 v4b5181(0x20)
0x1890x4b5: v4b5189 = ADD v4b5180 v4b5181(0x20)
0x18d0x4b5: v4b518d = MLOAD vbaa
0x18f0x4b5: MSTORE v4b5189 v4b518d
0x1900x4b5: v4b5190(0x20) = CONST 
0x1920x4b5: v4b5192 = ADD v4b5190(0x20) v4b5189
0x1960x4b5: v4b5196 = MLOAD vbaa
0x1980x4b5: v4b5198(0x20) = CONST 
0x19a0x4b5: v4b519a = ADD v4b5198(0x20) vbaa
0x19f0x4b5: v4b519f(0x0) = CONST 
----------------------------------

Begin block 0x1a10x16a
prev = {'0x1b20x16a', '0x17d0x16a'}, next = {'0x1ba0x16a', '0x1aa0x16a'}
----------------------------------
Block 0x1a10x16a
0x1a10x16a_0x0: v1a116a_0 = PHI v16a19f(0x0) v16a1b5
0x1a40x16a: v16a1a4 = LT v1a116a_0 v16a196
0x1a50x16a: v16a1a5 = ISZERO v16a1a4
0x1a60x16a: v16a1a6(0x1ba) = CONST 
0x1a90x16a: JUMPI v16a1a6(0x1ba) v16a1a5
----------------------------------

Begin block 0x1a10x4b5
prev = {'0x17d0x4b5', '0x1b20x4b5'}, next = {'0x1ba0x4b5', '0x1aa0x4b5'}
----------------------------------
Block 0x1a10x4b5
0x1a10x4b5_0x0: v1a14b5_0 = PHI v4b519f(0x0) v4b51b5
0x1a40x4b5: v4b51a4 = LT v1a14b5_0 v4b5196
0x1a50x4b5: v4b51a5 = ISZERO v4b51a4
0x1a60x4b5: v4b51a6(0x1ba) = CONST 
0x1a90x4b5: JUMPI v4b51a6(0x1ba) v4b51a5
----------------------------------

Begin block 0x1aa0x16a
prev = {'0x1a10x16a'}, next = {'0x1b20x16a'}
----------------------------------
Block 0x1aa0x16a
0x1aa0x16a_0x0: v1aa16a_0 = PHI v16a19f(0x0) v16a1b5
0x1ac0x16a: v16a1ac = ADD v16a19a v1aa16a_0
0x1ad0x16a: v16a1ad = MLOAD v16a1ac
0x1b00x16a: v16a1b0 = ADD v16a192 v1aa16a_0
0x1b10x16a: MSTORE v16a1b0 v16a1ad
----------------------------------

Begin block 0x1aa0x4b5
prev = {'0x1a10x4b5'}, next = {'0x1b20x4b5'}
----------------------------------
Block 0x1aa0x4b5
0x1aa0x4b5_0x0: v1aa4b5_0 = PHI v4b519f(0x0) v4b51b5
0x1ac0x4b5: v4b51ac = ADD v4b519a v1aa4b5_0
0x1ad0x4b5: v4b51ad = MLOAD v4b51ac
0x1b00x4b5: v4b51b0 = ADD v4b5192 v1aa4b5_0
0x1b10x4b5: MSTORE v4b51b0 v4b51ad
----------------------------------

Begin block 0x1b20x16a
prev = {'0x1aa0x16a'}, next = {'0x1a10x16a'}
----------------------------------
Block 0x1b20x16a
0x1b20x16a_0x0: v1b216a_0 = PHI v16a19f(0x0) v16a1b5
0x1b30x16a: v16a1b3(0x20) = CONST 
0x1b50x16a: v16a1b5 = ADD v16a1b3(0x20) v1b216a_0
0x1b60x16a: v16a1b6(0x1a1) = CONST 
0x1b90x16a: JUMP v16a1b6(0x1a1)
----------------------------------

Begin block 0x1b20x4b5
prev = {'0x1aa0x4b5'}, next = {'0x1a10x4b5'}
----------------------------------
Block 0x1b20x4b5
0x1b20x4b5_0x0: v1b24b5_0 = PHI v4b519f(0x0) v4b51b5
0x1b30x4b5: v4b51b3(0x20) = CONST 
0x1b50x4b5: v4b51b5 = ADD v4b51b3(0x20) v1b24b5_0
0x1b60x4b5: v4b51b6(0x1a1) = CONST 
0x1b90x4b5: JUMP v4b51b6(0x1a1)
----------------------------------

Begin block 0x1ba0x16a
prev = {'0x1a10x16a'}, next = {'0x1ce0x16a', '0x1e70x16a'}
----------------------------------
Block 0x1ba0x16a
0x1c30x16a: v16a1c3 = ADD v16a196 v16a192
0x1c50x16a: v16a1c5(0x1f) = CONST 
0x1c70x16a: v16a1c7 = AND v16a1c5(0x1f) v16a196
0x1c90x16a: v16a1c9 = ISZERO v16a1c7
0x1ca0x16a: v16a1ca(0x1e7) = CONST 
0x1cd0x16a: JUMPI v16a1ca(0x1e7) v16a1c9
----------------------------------

Begin block 0x1ba0x4b5
prev = {'0x1a10x4b5'}, next = {'0x1ce0x4b5', '0x1e70x4b5'}
----------------------------------
Block 0x1ba0x4b5
0x1c30x4b5: v4b51c3 = ADD v4b5196 v4b5192
0x1c50x4b5: v4b51c5(0x1f) = CONST 
0x1c70x4b5: v4b51c7 = AND v4b51c5(0x1f) v4b5196
0x1c90x4b5: v4b51c9 = ISZERO v4b51c7
0x1ca0x4b5: v4b51ca(0x1e7) = CONST 
0x1cd0x4b5: JUMPI v4b51ca(0x1e7) v4b51c9
----------------------------------

Begin block 0x1ce0x16a
prev = {'0x1ba0x16a'}, next = {'0x1e70x16a'}
----------------------------------
Block 0x1ce0x16a
0x1d00x16a: v16a1d0 = SUB v16a1c3 v16a1c7
0x1d20x16a: v16a1d2 = MLOAD v16a1d0
0x1d30x16a: v16a1d3(0x1) = CONST 
0x1d60x16a: v16a1d6(0x20) = CONST 
0x1d80x16a: v16a1d8 = SUB v16a1d6(0x20) v16a1c7
0x1d90x16a: v16a1d9(0x100) = CONST 
0x1dc0x16a: v16a1dc = EXP v16a1d9(0x100) v16a1d8
0x1dd0x16a: v16a1dd = SUB v16a1dc v16a1d3(0x1)
0x1de0x16a: v16a1de = NOT v16a1dd
0x1df0x16a: v16a1df = AND v16a1de v16a1d2
0x1e10x16a: MSTORE v16a1d0 v16a1df
0x1e20x16a: v16a1e2(0x20) = CONST 
0x1e40x16a: v16a1e4 = ADD v16a1e2(0x20) v16a1d0
----------------------------------

Begin block 0x1ce0x4b5
prev = {'0x1ba0x4b5'}, next = {'0x1e70x4b5'}
----------------------------------
Block 0x1ce0x4b5
0x1d00x4b5: v4b51d0 = SUB v4b51c3 v4b51c7
0x1d20x4b5: v4b51d2 = MLOAD v4b51d0
0x1d30x4b5: v4b51d3(0x1) = CONST 
0x1d60x4b5: v4b51d6(0x20) = CONST 
0x1d80x4b5: v4b51d8 = SUB v4b51d6(0x20) v4b51c7
0x1d90x4b5: v4b51d9(0x100) = CONST 
0x1dc0x4b5: v4b51dc = EXP v4b51d9(0x100) v4b51d8
0x1dd0x4b5: v4b51dd = SUB v4b51dc v4b51d3(0x1)
0x1de0x4b5: v4b51de = NOT v4b51dd
0x1df0x4b5: v4b51df = AND v4b51de v4b51d2
0x1e10x4b5: MSTORE v4b51d0 v4b51df
0x1e20x4b5: v4b51e2(0x20) = CONST 
0x1e40x4b5: v4b51e4 = ADD v4b51e2(0x20) v4b51d0
----------------------------------

Begin block 0x1e70x16a
prev = {'0x1ba0x16a', '0x1ce0x16a'}, next = {}
----------------------------------
Block 0x1e70x16a
0x1e70x16a_0x1: v1e716a_1 = PHI v16a1c3 v16a1e4
0x1ed0x16a: v16a1ed(0x40) = CONST 
0x1ef0x16a: v16a1ef = MLOAD v16a1ed(0x40)
0x1f20x16a: v16a1f2 = SUB v1e716a_1 v16a1ef
0x1f40x16a: RETURN v16a1ef v16a1f2
----------------------------------

Begin block 0x1e70x4b5
prev = {'0x1ba0x4b5', '0x1ce0x4b5'}, next = {}
----------------------------------
Block 0x1e70x4b5
0x1e70x4b5_0x1: v1e74b5_1 = PHI v4b51c3 v4b51e4
0x1ed0x4b5: v4b51ed(0x40) = CONST 
0x1ef0x4b5: v4b51ef = MLOAD v4b51ed(0x40)
0x1f20x4b5: v4b51f2 = SUB v1e74b5_1 v4b51ef
0x1f40x4b5: RETURN v4b51ef v4b51f2
----------------------------------

Begin block 0x1f5
prev = {}, next = {'0x200', '0x1fc'}
----------------------------------
function approve(address,uint256)()
Block 0x1f5
0x1f6: v1f6 = CALLVALUE 
0x1f7: v1f7 = ISZERO v1f6
0x1f8: v1f8(0x200) = CONST 
0x1fb: JUMPI v1f8(0x200) v1f7
----------------------------------

Begin block 0x1fc
prev = {'0x1f5'}, next = {}
----------------------------------
Block 0x1fc
0x1fc: v1fc(0x0) = CONST 
0x1ff: REVERT v1fc(0x0) v1fc(0x0)
----------------------------------

Begin block 0x200
prev = {'0x1f5'}, next = {'0x7a0'}
----------------------------------
Block 0x200
0x201: v201(0x217) = CONST 
0x204: v204(0x1) = CONST 
0x206: v206(0xa0) = CONST 
0x208: v208(0x2) = CONST 
0x20a: v20a(0x10000000000000000000000000000000000000000) = EXP v208(0x2) v206(0xa0)
0x20b: v20b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v20a(0x10000000000000000000000000000000000000000) v204(0x1)
0x20c: v20c(0x4) = CONST 
0x20e: v20e = CALLDATALOAD v20c(0x4)
0x20f: v20f = AND v20e v20b(0xffffffffffffffffffffffffffffffffffffffff)
0x210: v210(0x24) = CONST 
0x212: v212 = CALLDATALOAD v210(0x24)
0x213: v213(0x7a0) = CONST 
0x216: JUMP v213(0x7a0)
----------------------------------

Begin block 0x2170x1f5
prev = {'0x807'}, next = {}
----------------------------------
Block 0x2170x1f5
0x2180x1f5: v1f5218(0x40) = CONST 
0x21a0x1f5: v1f521a = MLOAD v1f5218(0x40)
0x21c0x1f5: v1f521c = ISZERO v805(0x1)
0x21d0x1f5: v1f521d = ISZERO v1f521c
0x21f0x1f5: MSTORE v1f521a v1f521d
0x2200x1f5: v1f5220(0x20) = CONST 
0x2220x1f5: v1f5222 = ADD v1f5220(0x20) v1f521a
0x2230x1f5: v1f5223(0x40) = CONST 
0x2250x1f5: v1f5225 = MLOAD v1f5223(0x40)
0x2280x1f5: v1f5228 = SUB v1f5222 v1f5225
0x22a0x1f5: RETURN v1f5225 v1f5228
----------------------------------

Begin block 0x2170x29a
prev = {'0x94d'}, next = {}
----------------------------------
Block 0x2170x29a
0x2180x29a: v29a218(0x40) = CONST 
0x21a0x29a: v29a21a = MLOAD v29a218(0x40)
0x21c0x29a: v29a21c = ISZERO v949(0x1)
0x21d0x29a: v29a21d = ISZERO v29a21c
0x21f0x29a: MSTORE v29a21a v29a21d
0x2200x29a: v29a220(0x20) = CONST 
0x2220x29a: v29a222 = ADD v29a220(0x20) v29a21a
0x2230x29a: v29a223(0x40) = CONST 
0x2250x29a: v29a225 = MLOAD v29a223(0x40)
0x2280x29a: v29a228 = SUB v29a222 v29a225
0x22a0x29a: RETURN v29a225 v29a228
----------------------------------

Begin block 0x2170x3d3
prev = {'0xb60'}, next = {}
----------------------------------
Block 0x2170x3d3
0x2180x3d3: v3d3218(0x40) = CONST 
0x21a0x3d3: v3d321a = MLOAD v3d3218(0x40)
0x21c0x3d3: v3d321c = ISZERO vb5c(0x1)
0x21d0x3d3: v3d321d = ISZERO v3d321c
0x21f0x3d3: MSTORE v3d321a v3d321d
0x2200x3d3: v3d3220(0x20) = CONST 
0x2220x3d3: v3d3222 = ADD v3d3220(0x20) v3d321a
0x2230x3d3: v3d3223(0x40) = CONST 
0x2250x3d3: v3d3225 = MLOAD v3d3223(0x40)
0x2280x3d3: v3d3228 = SUB v3d3222 v3d3225
0x22a0x3d3: RETURN v3d3225 v3d3228
----------------------------------

Begin block 0x2170x45f
prev = {'0xb8e'}, next = {}
----------------------------------
Block 0x2170x45f
0x2180x45f: v45f218(0x40) = CONST 
0x21a0x45f: v45f21a = MLOAD v45f218(0x40)
0x21c0x45f: v45f21c = ISZERO vb94
0x21d0x45f: v45f21d = ISZERO v45f21c
0x21f0x45f: MSTORE v45f21a v45f21d
0x2200x45f: v45f220(0x20) = CONST 
0x2220x45f: v45f222 = ADD v45f220(0x20) v45f21a
0x2230x45f: v45f223(0x40) = CONST 
0x2250x45f: v45f225 = MLOAD v45f223(0x40)
0x2280x45f: v45f228 = SUB v45f222 v45f225
0x22a0x45f: RETURN v45f225 v45f228
----------------------------------

Begin block 0x2170x540
prev = {'0xcae'}, next = {}
----------------------------------
Block 0x2170x540
0x2180x540: v540218(0x40) = CONST 
0x21a0x540: v54021a = MLOAD v540218(0x40)
0x21c0x540: v54021c = ISZERO vcac(0x1)
0x21d0x540: v54021d = ISZERO v54021c
0x21f0x540: MSTORE v54021a v54021d
0x2200x540: v540220(0x20) = CONST 
0x2220x540: v540222 = ADD v540220(0x20) v54021a
0x2230x540: v540223(0x40) = CONST 
0x2250x540: v540225 = MLOAD v540223(0x40)
0x2280x540: v540228 = SUB v540222 v540225
0x22a0x540: RETURN v540225 v540228
----------------------------------

Begin block 0x2170x5a5
prev = {'0xd6b'}, next = {}
----------------------------------
Block 0x2170x5a5
0x2180x5a5: v5a5218(0x40) = CONST 
0x21a0x5a5: v5a521a = MLOAD v5a5218(0x40)
0x21c0x5a5: v5a521c = ISZERO vd69(0x1)
0x21d0x5a5: v5a521d = ISZERO v5a521c
0x21f0x5a5: MSTORE v5a521a v5a521d
0x2200x5a5: v5a5220(0x20) = CONST 
0x2220x5a5: v5a5222 = ADD v5a5220(0x20) v5a521a
0x2230x5a5: v5a5223(0x40) = CONST 
0x2250x5a5: v5a5225 = MLOAD v5a5223(0x40)
0x2280x5a5: v5a5228 = SUB v5a5222 v5a5225
0x22a0x5a5: RETURN v5a5225 v5a5228
----------------------------------

Begin block 0x22b
prev = {}, next = {'0x232', '0x236'}
----------------------------------
function startDate()()
Block 0x22b
0x22c: v22c = CALLVALUE 
0x22d: v22d = ISZERO v22c
0x22e: v22e(0x236) = CONST 
0x231: JUMPI v22e(0x236) v22d
----------------------------------

Begin block 0x232
prev = {'0x22b'}, next = {}
----------------------------------
Block 0x232
0x232: v232(0x0) = CONST 
0x235: REVERT v232(0x0) v232(0x0)
----------------------------------

Begin block 0x236
prev = {'0x22b'}, next = {'0x80d'}
----------------------------------
Block 0x236
0x237: v237(0x23e) = CONST 
0x23a: v23a(0x80d) = CONST 
0x23d: JUMP v23a(0x80d)
----------------------------------

Begin block 0x23e0x22b
prev = {'0x80d'}, next = {}
----------------------------------
Block 0x23e0x22b
0x23f0x22b: v22b23f(0x40) = CONST 
0x2410x22b: v22b241 = MLOAD v22b23f(0x40)
0x2440x22b: MSTORE v22b241 v810
0x2450x22b: v22b245(0x20) = CONST 
0x2470x22b: v22b247 = ADD v22b245(0x20) v22b241
0x2480x22b: v22b248(0x40) = CONST 
0x24a0x22b: v22b24a = MLOAD v22b248(0x40)
0x24d0x22b: v22b24d = SUB v22b247 v22b24a
0x24f0x22b: RETURN v22b24a v22b24d
----------------------------------

Begin block 0x23e0x250
prev = {'0x813'}, next = {}
----------------------------------
Block 0x23e0x250
0x23f0x250: v25023f(0x40) = CONST 
0x2410x250: v250241 = MLOAD v25023f(0x40)
0x2440x250: MSTORE v250241 v814(0x2bc)
0x2450x250: v250245(0x20) = CONST 
0x2470x250: v250247 = ADD v250245(0x20) v250241
0x2480x250: v250248(0x40) = CONST 
0x24a0x250: v25024a = MLOAD v250248(0x40)
0x24d0x250: v25024d = SUB v250247 v25024a
0x24f0x250: RETURN v25024a v25024d
----------------------------------

Begin block 0x23e0x275
prev = {'0x819'}, next = {}
----------------------------------
Block 0x23e0x275
0x23f0x275: v27523f(0x40) = CONST 
0x2410x275: v275241 = MLOAD v27523f(0x40)
0x2440x275: MSTORE v275241 v81a(0x33b2e3c9fd0803ce8000000)
0x2450x275: v275245(0x20) = CONST 
0x2470x275: v275247 = ADD v275245(0x20) v275241
0x2480x275: v275248(0x40) = CONST 
0x24a0x275: v27524a = MLOAD v275248(0x40)
0x24d0x275: v27524d = SUB v275247 v27524a
0x24f0x275: RETURN v27524a v27524d
----------------------------------

Begin block 0x23e0x305
prev = {'0x96d'}, next = {}
----------------------------------
Block 0x23e0x305
0x23f0x305: v30523f(0x40) = CONST 
0x2410x305: v305241 = MLOAD v30523f(0x40)
0x2440x305: MSTORE v305241 v96e(0x12c)
0x2450x305: v305245(0x20) = CONST 
0x2470x305: v305247 = ADD v305245(0x20) v305241
0x2480x305: v305248(0x40) = CONST 
0x24a0x305: v30524a = MLOAD v305248(0x40)
0x24d0x305: v30524d = SUB v305247 v30524a
0x24f0x305: RETURN v30524a v30524d
----------------------------------

Begin block 0x23e0x32a
prev = {'0x973'}, next = {}
----------------------------------
Block 0x23e0x32a
0x23f0x32a: v32a23f(0x40) = CONST 
0x2410x32a: v32a241 = MLOAD v32a23f(0x40)
0x2440x32a: MSTORE v32a241 v974(0x12)
0x2450x32a: v32a245(0x20) = CONST 
0x2470x32a: v32a247 = ADD v32a245(0x20) v32a241
0x2480x32a: v32a248(0x40) = CONST 
0x24a0x32a: v32a24a = MLOAD v32a248(0x40)
0x24d0x32a: v32a24d = SUB v32a247 v32a24a
0x24f0x32a: RETURN v32a24a v32a24d
----------------------------------

Begin block 0x23e0x34f
prev = {'0x978'}, next = {}
----------------------------------
Block 0x23e0x34f
0x23f0x34f: v34f23f(0x40) = CONST 
0x2410x34f: v34f241 = MLOAD v34f23f(0x40)
0x2440x34f: MSTORE v34f241 v979(0x1c6f307be4c4687e6000000)
0x2450x34f: v34f245(0x20) = CONST 
0x2470x34f: v34f247 = ADD v34f245(0x20) v34f241
0x2480x34f: v34f248(0x40) = CONST 
0x24a0x34f: v34f24a = MLOAD v34f248(0x40)
0x24d0x34f: v34f24d = SUB v34f247 v34f24a
0x24f0x34f: RETURN v34f24a v34f24d
----------------------------------

Begin block 0x23e0x389
prev = {'0xa60'}, next = {}
----------------------------------
Block 0x23e0x389
0x23f0x389: v38923f(0x40) = CONST 
0x2410x389: v389241 = MLOAD v38923f(0x40)
0x2440x389: MSTORE v389241 va61(0xc8)
0x2450x389: v389245(0x20) = CONST 
0x2470x389: v389247 = ADD v389245(0x20) v389241
0x2480x389: v389248(0x40) = CONST 
0x24a0x389: v38924a = MLOAD v389248(0x40)
0x24d0x389: v38924d = SUB v389247 v38924a
0x24f0x389: RETURN v38924a v38924d
----------------------------------

Begin block 0x23e0x3ae
prev = {'0xa65'}, next = {}
----------------------------------
Block 0x23e0x3ae
0x23f0x3ae: v3ae23f(0x40) = CONST 
0x2410x3ae: v3ae241 = MLOAD v3ae23f(0x40)
0x2440x3ae: MSTORE v3ae241 va66(0x3e8)
0x2450x3ae: v3ae245(0x20) = CONST 
0x2470x3ae: v3ae247 = ADD v3ae245(0x20) v3ae241
0x2480x3ae: v3ae248(0x40) = CONST 
0x24a0x3ae: v3ae24a = MLOAD v3ae248(0x40)
0x24d0x3ae: v3ae24d = SUB v3ae247 v3ae24a
0x24f0x3ae: RETURN v3ae24a v3ae24d
----------------------------------

Begin block 0x23e0x409
prev = {'0x414'}, next = {}
----------------------------------
Block 0x23e0x409
0x23f0x409: v40923f(0x40) = CONST 
0x2410x409: v409241 = MLOAD v40923f(0x40)
0x2440x409: MSTORE v409241 v427_0
0x2450x409: v409245(0x20) = CONST 
0x2470x409: v409247 = ADD v409245(0x20) v409241
0x2480x409: v409248(0x40) = CONST 
0x24a0x409: v40924a = MLOAD v409248(0x40)
0x24d0x409: v40924d = SUB v409247 v40924a
0x24f0x409: RETURN v40924a v40924d
----------------------------------

Begin block 0x23e0x43a
prev = {'0xb86'}, next = {}
----------------------------------
Block 0x23e0x43a
0x23f0x43a: v43a23f(0x40) = CONST 
0x2410x43a: v43a241 = MLOAD v43a23f(0x40)
0x2440x43a: MSTORE v43a241 vb87(0x5ebe9250)
0x2450x43a: v43a245(0x20) = CONST 
0x2470x43a: v43a247 = ADD v43a245(0x20) v43a241
0x2480x43a: v43a248(0x40) = CONST 
0x24a0x43a: v43a24a = MLOAD v43a248(0x40)
0x24d0x43a: v43a24d = SUB v43a247 v43a24a
0x24f0x43a: RETURN v43a24a v43a24d
----------------------------------

Begin block 0x23e0x5db
prev = {'0xd98'}, next = {}
----------------------------------
Block 0x23e0x5db
0x23f0x5db: v5db23f(0x40) = CONST 
0x2410x5db: v5db241 = MLOAD v5db23f(0x40)
0x2440x5db: MSTORE v5db241 vd97
0x2450x5db: v5db245(0x20) = CONST 
0x2470x5db: v5db247 = ADD v5db245(0x20) v5db241
0x2480x5db: v5db248(0x40) = CONST 
0x24a0x5db: v5db24a = MLOAD v5db248(0x40)
0x24d0x5db: v5db24d = SUB v5db247 v5db24a
0x24f0x5db: RETURN v5db24a v5db24d
----------------------------------

Begin block 0x23e0x612
prev = {'0xd9e'}, next = {}
----------------------------------
Block 0x23e0x612
0x23f0x612: v61223f(0x40) = CONST 
0x2410x612: v612241 = MLOAD v61223f(0x40)
0x2440x612: MSTORE v612241 vd9f(0x1f4)
0x2450x612: v612245(0x20) = CONST 
0x2470x612: v612247 = ADD v612245(0x20) v612241
0x2480x612: v612248(0x40) = CONST 
0x24a0x612: v61224a = MLOAD v612248(0x40)
0x24d0x612: v61224d = SUB v612247 v61224a
0x24f0x612: RETURN v61224a v61224d
----------------------------------

Begin block 0x23e0x637
prev = {'0xda4'}, next = {}
----------------------------------
Block 0x23e0x637
0x23f0x637: v63723f(0x40) = CONST 
0x2410x637: v637241 = MLOAD v63723f(0x40)
0x2440x637: MSTORE v637241 vda7
0x2450x637: v637245(0x20) = CONST 
0x2470x637: v637247 = ADD v637245(0x20) v637241
0x2480x637: v637248(0x40) = CONST 
0x24a0x637: v63724a = MLOAD v637248(0x40)
0x24d0x637: v63724d = SUB v637247 v63724a
0x24f0x637: RETURN v63724a v63724d
----------------------------------

Begin block 0x23e0x65c
prev = {'0xdaa'}, next = {}
----------------------------------
Block 0x23e0x65c
0x23f0x65c: v65c23f(0x40) = CONST 
0x2410x65c: v65c241 = MLOAD v65c23f(0x40)
0x2440x65c: MSTORE v65c241 vdab(0x1743b34e18439b502000000)
0x2450x65c: v65c245(0x20) = CONST 
0x2470x65c: v65c247 = ADD v65c245(0x20) v65c241
0x2480x65c: v65c248(0x40) = CONST 
0x24a0x65c: v65c24a = MLOAD v65c248(0x40)
0x24d0x65c: v65c24d = SUB v65c247 v65c24a
0x24f0x65c: RETURN v65c24a v65c24d
----------------------------------

Begin block 0x250
prev = {}, next = {'0x25b', '0x257'}
----------------------------------
function tokenRate1()()
Block 0x250
0x251: v251 = CALLVALUE 
0x252: v252 = ISZERO v251
0x253: v253(0x25b) = CONST 
0x256: JUMPI v253(0x25b) v252
----------------------------------

Begin block 0x257
prev = {'0x250'}, next = {}
----------------------------------
Block 0x257
0x257: v257(0x0) = CONST 
0x25a: REVERT v257(0x0) v257(0x0)
----------------------------------

Begin block 0x25b
prev = {'0x250'}, next = {'0x813'}
----------------------------------
Block 0x25b
0x25c: v25c(0x23e) = CONST 
0x25f: v25f(0x813) = CONST 
0x262: JUMP v25f(0x813)
----------------------------------

Begin block 0x275
prev = {}, next = {'0x27c', '0x280'}
----------------------------------
function totalSupply()()
Block 0x275
0x276: v276 = CALLVALUE 
0x277: v277 = ISZERO v276
0x278: v278(0x280) = CONST 
0x27b: JUMPI v278(0x280) v277
----------------------------------

Begin block 0x27c
prev = {'0x275'}, next = {}
----------------------------------
Block 0x27c
0x27c: v27c(0x0) = CONST 
0x27f: REVERT v27c(0x0) v27c(0x0)
----------------------------------

Begin block 0x280
prev = {'0x275'}, next = {'0x819'}
----------------------------------
Block 0x280
0x281: v281(0x23e) = CONST 
0x284: v284(0x819) = CONST 
0x287: JUMP v284(0x819)
----------------------------------

Begin block 0x29a
prev = {}, next = {'0x2a5', '0x2a1'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x29a
0x29b: v29b = CALLVALUE 
0x29c: v29c = ISZERO v29b
0x29d: v29d(0x2a5) = CONST 
0x2a0: JUMPI v29d(0x2a5) v29c
----------------------------------

Begin block 0x2a1
prev = {'0x29a'}, next = {}
----------------------------------
Block 0x2a1
0x2a1: v2a1(0x0) = CONST 
0x2a4: REVERT v2a1(0x0) v2a1(0x0)
----------------------------------

Begin block 0x2a5
prev = {'0x29a'}, next = {'0x829'}
----------------------------------
Block 0x2a5
0x2a6: v2a6(0x217) = CONST 
0x2a9: v2a9(0x1) = CONST 
0x2ab: v2ab(0xa0) = CONST 
0x2ad: v2ad(0x2) = CONST 
0x2af: v2af(0x10000000000000000000000000000000000000000) = EXP v2ad(0x2) v2ab(0xa0)
0x2b0: v2b0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2af(0x10000000000000000000000000000000000000000) v2a9(0x1)
0x2b1: v2b1(0x4) = CONST 
0x2b3: v2b3 = CALLDATALOAD v2b1(0x4)
0x2b5: v2b5 = AND v2b0(0xffffffffffffffffffffffffffffffffffffffff) v2b3
0x2b7: v2b7(0x24) = CONST 
0x2b9: v2b9 = CALLDATALOAD v2b7(0x24)
0x2ba: v2ba = AND v2b9 v2b0(0xffffffffffffffffffffffffffffffffffffffff)
0x2bb: v2bb(0x44) = CONST 
0x2bd: v2bd = CALLDATALOAD v2bb(0x44)
0x2be: v2be(0x829) = CONST 
0x2c1: JUMP v2be(0x829)
----------------------------------

Begin block 0x2d6
prev = {}, next = {'0x2e1', '0x2dd'}
----------------------------------
function bountyAddress()()
Block 0x2d6
0x2d7: v2d7 = CALLVALUE 
0x2d8: v2d8 = ISZERO v2d7
0x2d9: v2d9(0x2e1) = CONST 
0x2dc: JUMPI v2d9(0x2e1) v2d8
----------------------------------

Begin block 0x2dd
prev = {'0x2d6'}, next = {}
----------------------------------
Block 0x2dd
0x2dd: v2dd(0x0) = CONST 
0x2e0: REVERT v2dd(0x0) v2dd(0x0)
----------------------------------

Begin block 0x2e1
prev = {'0x2d6'}, next = {'0x955'}
----------------------------------
Block 0x2e1
0x2e2: v2e2(0x2e9) = CONST 
0x2e5: v2e5(0x955) = CONST 
0x2e8: JUMP v2e5(0x955)
----------------------------------

Begin block 0x2e90x2d6
prev = {'0x955'}, next = {}
----------------------------------
Block 0x2e90x2d6
0x2ea0x2d6: v2d62ea(0x40) = CONST 
0x2ec0x2d6: v2d62ec = MLOAD v2d62ea(0x40)
0x2ed0x2d6: v2d62ed(0x1) = CONST 
0x2ef0x2d6: v2d62ef(0xa0) = CONST 
0x2f10x2d6: v2d62f1(0x2) = CONST 
0x2f30x2d6: v2d62f3(0x10000000000000000000000000000000000000000) = EXP v2d62f1(0x2) v2d62ef(0xa0)
0x2f40x2d6: v2d62f4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2d62f3(0x10000000000000000000000000000000000000000) v2d62ed(0x1)
0x2f70x2d6: v2d62f7 = AND v956(0x29ea5bb7da8f412d472808d2577d13f82507039d) v2d62f4(0xffffffffffffffffffffffffffffffffffffffff)
0x2f90x2d6: MSTORE v2d62ec v2d62f7
0x2fa0x2d6: v2d62fa(0x20) = CONST 
0x2fc0x2d6: v2d62fc = ADD v2d62fa(0x20) v2d62ec
0x2fd0x2d6: v2d62fd(0x40) = CONST 
0x2ff0x2d6: v2d62ff = MLOAD v2d62fd(0x40)
0x3020x2d6: v2d6302 = SUB v2d62fc v2d62ff
0x3040x2d6: RETURN v2d62ff v2d6302
----------------------------------

Begin block 0x2e90x486
prev = {'0xb97'}, next = {}
----------------------------------
Block 0x2e90x486
0x2ea0x486: v4862ea(0x40) = CONST 
0x2ec0x486: v4862ec = MLOAD v4862ea(0x40)
0x2ed0x486: v4862ed(0x1) = CONST 
0x2ef0x486: v4862ef(0xa0) = CONST 
0x2f10x486: v4862f1(0x2) = CONST 
0x2f30x486: v4862f3(0x10000000000000000000000000000000000000000) = EXP v4862f1(0x2) v4862ef(0xa0)
0x2f40x486: v4862f4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4862f3(0x10000000000000000000000000000000000000000) v4862ed(0x1)
0x2f70x486: v4862f7 = AND vba3 v4862f4(0xffffffffffffffffffffffffffffffffffffffff)
0x2f90x486: MSTORE v4862ec v4862f7
0x2fa0x486: v4862fa(0x20) = CONST 
0x2fc0x486: v4862fc = ADD v4862fa(0x20) v4862ec
0x2fd0x486: v4862fd(0x40) = CONST 
0x2ff0x486: v4862ff = MLOAD v4862fd(0x40)
0x3020x486: v486302 = SUB v4862fc v4862ff
0x3040x486: RETURN v4862ff v486302
----------------------------------

Begin block 0x305
prev = {}, next = {'0x30c', '0x310'}
----------------------------------
function tokenRate3()()
Block 0x305
0x306: v306 = CALLVALUE 
0x307: v307 = ISZERO v306
0x308: v308(0x310) = CONST 
0x30b: JUMPI v308(0x310) v307
----------------------------------

Begin block 0x30c
prev = {'0x305'}, next = {}
----------------------------------
Block 0x30c
0x30c: v30c(0x0) = CONST 
0x30f: REVERT v30c(0x0) v30c(0x0)
----------------------------------

Begin block 0x310
prev = {'0x305'}, next = {'0x96d'}
----------------------------------
Block 0x310
0x311: v311(0x23e) = CONST 
0x314: v314(0x96d) = CONST 
0x317: JUMP v314(0x96d)
----------------------------------

Begin block 0x32a
prev = {}, next = {'0x331', '0x335'}
----------------------------------
function decimals()()
Block 0x32a
0x32b: v32b = CALLVALUE 
0x32c: v32c = ISZERO v32b
0x32d: v32d(0x335) = CONST 
0x330: JUMPI v32d(0x335) v32c
----------------------------------

Begin block 0x331
prev = {'0x32a'}, next = {}
----------------------------------
Block 0x331
0x331: v331(0x0) = CONST 
0x334: REVERT v331(0x0) v331(0x0)
----------------------------------

Begin block 0x335
prev = {'0x32a'}, next = {'0x973'}
----------------------------------
Block 0x335
0x336: v336(0x23e) = CONST 
0x339: v339(0x973) = CONST 
0x33c: JUMP v339(0x973)
----------------------------------

Begin block 0x34f
prev = {}, next = {'0x356', '0x35a'}
----------------------------------
function tokenForSale()()
Block 0x34f
0x350: v350 = CALLVALUE 
0x351: v351 = ISZERO v350
0x352: v352(0x35a) = CONST 
0x355: JUMPI v352(0x35a) v351
----------------------------------

Begin block 0x356
prev = {'0x34f'}, next = {}
----------------------------------
Block 0x356
0x356: v356(0x0) = CONST 
0x359: REVERT v356(0x0) v356(0x0)
----------------------------------

Begin block 0x35a
prev = {'0x34f'}, next = {'0x978'}
----------------------------------
Block 0x35a
0x35b: v35b(0x23e) = CONST 
0x35e: v35e(0x978) = CONST 
0x361: JUMP v35e(0x978)
----------------------------------

Begin block 0x374
prev = {}, next = {'0x37b', '0x37f'}
----------------------------------
function finalize()()
Block 0x374
0x375: v375 = CALLVALUE 
0x376: v376 = ISZERO v375
0x377: v377(0x37f) = CONST 
0x37a: JUMPI v377(0x37f) v376
----------------------------------

Begin block 0x37b
prev = {'0x374'}, next = {}
----------------------------------
Block 0x37b
0x37b: v37b(0x0) = CONST 
0x37e: REVERT v37b(0x0) v37b(0x0)
----------------------------------

Begin block 0x37f
prev = {'0x374'}, next = {'0x988'}
----------------------------------
Block 0x37f
0x380: v380(0x167) = CONST 
0x383: v383(0x988) = CONST 
0x386: JUMP v383(0x988)
----------------------------------

Begin block 0x389
prev = {}, next = {'0x390', '0x394'}
----------------------------------
function tokenRate4()()
Block 0x389
0x38a: v38a = CALLVALUE 
0x38b: v38b = ISZERO v38a
0x38c: v38c(0x394) = CONST 
0x38f: JUMPI v38c(0x394) v38b
----------------------------------

Begin block 0x390
prev = {'0x389'}, next = {}
----------------------------------
Block 0x390
0x390: v390(0x0) = CONST 
0x393: REVERT v390(0x0) v390(0x0)
----------------------------------

Begin block 0x394
prev = {'0x389'}, next = {'0xa60'}
----------------------------------
Block 0x394
0x395: v395(0x23e) = CONST 
0x398: v398(0xa60) = CONST 
0x39b: JUMP v398(0xa60)
----------------------------------

Begin block 0x3ae
prev = {}, next = {'0x3b9', '0x3b5'}
----------------------------------
function tokenRatePre()()
Block 0x3ae
0x3af: v3af = CALLVALUE 
0x3b0: v3b0 = ISZERO v3af
0x3b1: v3b1(0x3b9) = CONST 
0x3b4: JUMPI v3b1(0x3b9) v3b0
----------------------------------

Begin block 0x3b5
prev = {'0x3ae'}, next = {}
----------------------------------
Block 0x3b5
0x3b5: v3b5(0x0) = CONST 
0x3b8: REVERT v3b5(0x0) v3b5(0x0)
----------------------------------

Begin block 0x3b9
prev = {'0x3ae'}, next = {'0xa65'}
----------------------------------
Block 0x3b9
0x3ba: v3ba(0x23e) = CONST 
0x3bd: v3bd(0xa65) = CONST 
0x3c0: JUMP v3bd(0xa65)
----------------------------------

Begin block 0x3d3
prev = {}, next = {'0x3da', '0x3de'}
----------------------------------
function decreaseApproval(address,uint256)()
Block 0x3d3
0x3d4: v3d4 = CALLVALUE 
0x3d5: v3d5 = ISZERO v3d4
0x3d6: v3d6(0x3de) = CONST 
0x3d9: JUMPI v3d6(0x3de) v3d5
----------------------------------

Begin block 0x3da
prev = {'0x3d3'}, next = {}
----------------------------------
Block 0x3da
0x3da: v3da(0x0) = CONST 
0x3dd: REVERT v3da(0x0) v3da(0x0)
----------------------------------

Begin block 0x3de
prev = {'0x3d3'}, next = {'0xa6b'}
----------------------------------
Block 0x3de
0x3df: v3df(0x217) = CONST 
0x3e2: v3e2(0x1) = CONST 
0x3e4: v3e4(0xa0) = CONST 
0x3e6: v3e6(0x2) = CONST 
0x3e8: v3e8(0x10000000000000000000000000000000000000000) = EXP v3e6(0x2) v3e4(0xa0)
0x3e9: v3e9(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3e8(0x10000000000000000000000000000000000000000) v3e2(0x1)
0x3ea: v3ea(0x4) = CONST 
0x3ec: v3ec = CALLDATALOAD v3ea(0x4)
0x3ed: v3ed = AND v3ec v3e9(0xffffffffffffffffffffffffffffffffffffffff)
0x3ee: v3ee(0x24) = CONST 
0x3f0: v3f0 = CALLDATALOAD v3ee(0x24)
0x3f1: v3f1(0xa6b) = CONST 
0x3f4: JUMP v3f1(0xa6b)
----------------------------------

Begin block 0x409
prev = {}, next = {'0x414', '0x410'}
----------------------------------
function balanceOf(address)()
Block 0x409
0x40a: v40a = CALLVALUE 
0x40b: v40b = ISZERO v40a
0x40c: v40c(0x414) = CONST 
0x40f: JUMPI v40c(0x414) v40b
----------------------------------

Begin block 0x410
prev = {'0x409'}, next = {}
----------------------------------
Block 0x410
0x410: v410(0x0) = CONST 
0x413: REVERT v410(0x0) v410(0x0)
----------------------------------

Begin block 0x414
prev = {'0x409'}, next = {'0x23e0x409'}
----------------------------------
Block 0x414
0x415: v415(0x23e) = CONST 
0x418: v418(0x1) = CONST 
0x41a: v41a(0xa0) = CONST 
0x41c: v41c(0x2) = CONST 
0x41e: v41e(0x10000000000000000000000000000000000000000) = EXP v41c(0x2) v41a(0xa0)
0x41f: v41f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v41e(0x10000000000000000000000000000000000000000) v418(0x1)
0x420: v420(0x4) = CONST 
0x422: v422 = CALLDATALOAD v420(0x4)
0x423: v423 = AND v422 v41f(0xffffffffffffffffffffffffffffffffffffffff)
0x424: v424(0xb67) = CONST 
0x427: v427_0 = CALLPRIVATE v424(0xb67) v423 v415(0x23e)
----------------------------------

Begin block 0x43a
prev = {}, next = {'0x445', '0x441'}
----------------------------------
function startIco()()
Block 0x43a
0x43b: v43b = CALLVALUE 
0x43c: v43c = ISZERO v43b
0x43d: v43d(0x445) = CONST 
0x440: JUMPI v43d(0x445) v43c
----------------------------------

Begin block 0x441
prev = {'0x43a'}, next = {}
----------------------------------
Block 0x441
0x441: v441(0x0) = CONST 
0x444: REVERT v441(0x0) v441(0x0)
----------------------------------

Begin block 0x445
prev = {'0x43a'}, next = {'0xb86'}
----------------------------------
Block 0x445
0x446: v446(0x23e) = CONST 
0x449: v449(0xb86) = CONST 
0x44c: JUMP v449(0xb86)
----------------------------------

Begin block 0x45f
prev = {}, next = {'0x46a', '0x466'}
----------------------------------
function isFinalized()()
Block 0x45f
0x460: v460 = CALLVALUE 
0x461: v461 = ISZERO v460
0x462: v462(0x46a) = CONST 
0x465: JUMPI v462(0x46a) v461
----------------------------------

Begin block 0x466
prev = {'0x45f'}, next = {}
----------------------------------
Block 0x466
0x466: v466(0x0) = CONST 
0x469: REVERT v466(0x0) v466(0x0)
----------------------------------

Begin block 0x46a
prev = {'0x45f'}, next = {'0xb8e'}
----------------------------------
Block 0x46a
0x46b: v46b(0x217) = CONST 
0x46e: v46e(0xb8e) = CONST 
0x471: JUMP v46e(0xb8e)
----------------------------------

Begin block 0x486
prev = {}, next = {'0x48d', '0x491'}
----------------------------------
function owner()()
Block 0x486
0x487: v487 = CALLVALUE 
0x488: v488 = ISZERO v487
0x489: v489(0x491) = CONST 
0x48c: JUMPI v489(0x491) v488
----------------------------------

Begin block 0x48d
prev = {'0x486'}, next = {}
----------------------------------
Block 0x48d
0x48d: v48d(0x0) = CONST 
0x490: REVERT v48d(0x0) v48d(0x0)
----------------------------------

Begin block 0x491
prev = {'0x486'}, next = {'0xb97'}
----------------------------------
Block 0x491
0x492: v492(0x2e9) = CONST 
0x495: v495(0xb97) = CONST 
0x498: JUMP v495(0xb97)
----------------------------------

Begin block 0x4b5
prev = {}, next = {'0x4c0', '0x4bc'}
----------------------------------
function symbol()()
Block 0x4b5
0x4b6: v4b6 = CALLVALUE 
0x4b7: v4b7 = ISZERO v4b6
0x4b8: v4b8(0x4c0) = CONST 
0x4bb: JUMPI v4b8(0x4c0) v4b7
----------------------------------

Begin block 0x4bc
prev = {'0x4b5'}, next = {}
----------------------------------
Block 0x4bc
0x4bc: v4bc(0x0) = CONST 
0x4bf: REVERT v4bc(0x0) v4bc(0x0)
----------------------------------

Begin block 0x4c0
prev = {'0x4b5'}, next = {'0xba6'}
----------------------------------
Block 0x4c0
0x4c1: v4c1(0x17d) = CONST 
0x4c4: v4c4(0xba6) = CONST 
0x4c7: JUMP v4c4(0xba6)
----------------------------------

Begin block 0x540
prev = {}, next = {'0x54b', '0x547'}
----------------------------------
function transfer(address,uint256)()
Block 0x540
0x541: v541 = CALLVALUE 
0x542: v542 = ISZERO v541
0x543: v543(0x54b) = CONST 
0x546: JUMPI v543(0x54b) v542
----------------------------------

Begin block 0x547
prev = {'0x540'}, next = {}
----------------------------------
Block 0x547
0x547: v547(0x0) = CONST 
0x54a: REVERT v547(0x0) v547(0x0)
----------------------------------

Begin block 0x54b
prev = {'0x540'}, next = {'0xbdd'}
----------------------------------
Block 0x54b
0x54c: v54c(0x217) = CONST 
0x54f: v54f(0x1) = CONST 
0x551: v551(0xa0) = CONST 
0x553: v553(0x2) = CONST 
0x555: v555(0x10000000000000000000000000000000000000000) = EXP v553(0x2) v551(0xa0)
0x556: v556(0xffffffffffffffffffffffffffffffffffffffff) = SUB v555(0x10000000000000000000000000000000000000000) v54f(0x1)
0x557: v557(0x4) = CONST 
0x559: v559 = CALLDATALOAD v557(0x4)
0x55a: v55a = AND v559 v556(0xffffffffffffffffffffffffffffffffffffffff)
0x55b: v55b(0x24) = CONST 
0x55d: v55d = CALLDATALOAD v55b(0x24)
0x55e: v55e(0xbdd) = CONST 
0x561: JUMP v55e(0xbdd)
----------------------------------

Begin block 0x5a5
prev = {}, next = {'0x5b0', '0x5ac'}
----------------------------------
function increaseApproval(address,uint256)()
Block 0x5a5
0x5a6: v5a6 = CALLVALUE 
0x5a7: v5a7 = ISZERO v5a6
0x5a8: v5a8(0x5b0) = CONST 
0x5ab: JUMPI v5a8(0x5b0) v5a7
----------------------------------

Begin block 0x5ac
prev = {'0x5a5'}, next = {}
----------------------------------
Block 0x5ac
0x5ac: v5ac(0x0) = CONST 
0x5af: REVERT v5ac(0x0) v5ac(0x0)
----------------------------------

Begin block 0x5b0
prev = {'0x5a5'}, next = {'0xccc'}
----------------------------------
Block 0x5b0
0x5b1: v5b1(0x217) = CONST 
0x5b4: v5b4(0x1) = CONST 
0x5b6: v5b6(0xa0) = CONST 
0x5b8: v5b8(0x2) = CONST 
0x5ba: v5ba(0x10000000000000000000000000000000000000000) = EXP v5b8(0x2) v5b6(0xa0)
0x5bb: v5bb(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5ba(0x10000000000000000000000000000000000000000) v5b4(0x1)
0x5bc: v5bc(0x4) = CONST 
0x5be: v5be = CALLDATALOAD v5bc(0x4)
0x5bf: v5bf = AND v5be v5bb(0xffffffffffffffffffffffffffffffffffffffff)
0x5c0: v5c0(0x24) = CONST 
0x5c2: v5c2 = CALLDATALOAD v5c0(0x24)
0x5c3: v5c3(0xccc) = CONST 
0x5c6: JUMP v5c3(0xccc)
----------------------------------

Begin block 0x5db
prev = {}, next = {'0x5e6', '0x5e2'}
----------------------------------
function allowance(address,address)()
Block 0x5db
0x5dc: v5dc = CALLVALUE 
0x5dd: v5dd = ISZERO v5dc
0x5de: v5de(0x5e6) = CONST 
0x5e1: JUMPI v5de(0x5e6) v5dd
----------------------------------

Begin block 0x5e2
prev = {'0x5db'}, next = {}
----------------------------------
Block 0x5e2
0x5e2: v5e2(0x0) = CONST 
0x5e5: REVERT v5e2(0x0) v5e2(0x0)
----------------------------------

Begin block 0x5e6
prev = {'0x5db'}, next = {'0xd71'}
----------------------------------
Block 0x5e6
0x5e7: v5e7(0x23e) = CONST 
0x5ea: v5ea(0x1) = CONST 
0x5ec: v5ec(0xa0) = CONST 
0x5ee: v5ee(0x2) = CONST 
0x5f0: v5f0(0x10000000000000000000000000000000000000000) = EXP v5ee(0x2) v5ec(0xa0)
0x5f1: v5f1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5f0(0x10000000000000000000000000000000000000000) v5ea(0x1)
0x5f2: v5f2(0x4) = CONST 
0x5f4: v5f4 = CALLDATALOAD v5f2(0x4)
0x5f6: v5f6 = AND v5f1(0xffffffffffffffffffffffffffffffffffffffff) v5f4
0x5f8: v5f8(0x24) = CONST 
0x5fa: v5fa = CALLDATALOAD v5f8(0x24)
0x5fb: v5fb = AND v5fa v5f1(0xffffffffffffffffffffffffffffffffffffffff)
0x5fc: v5fc(0xd71) = CONST 
0x5ff: JUMP v5fc(0xd71)
----------------------------------

Begin block 0x612
prev = {}, next = {'0x61d', '0x619'}
----------------------------------
function tokenRate2()()
Block 0x612
0x613: v613 = CALLVALUE 
0x614: v614 = ISZERO v613
0x615: v615(0x61d) = CONST 
0x618: JUMPI v615(0x61d) v614
----------------------------------

Begin block 0x619
prev = {'0x612'}, next = {}
----------------------------------
Block 0x619
0x619: v619(0x0) = CONST 
0x61c: REVERT v619(0x0) v619(0x0)
----------------------------------

Begin block 0x61d
prev = {'0x612'}, next = {'0xd9e'}
----------------------------------
Block 0x61d
0x61e: v61e(0x23e) = CONST 
0x621: v621(0xd9e) = CONST 
0x624: JUMP v621(0xd9e)
----------------------------------

Begin block 0x637
prev = {}, next = {'0x642', '0x63e'}
----------------------------------
function totalSale()()
Block 0x637
0x638: v638 = CALLVALUE 
0x639: v639 = ISZERO v638
0x63a: v63a(0x642) = CONST 
0x63d: JUMPI v63a(0x642) v639
----------------------------------

Begin block 0x63e
prev = {'0x637'}, next = {}
----------------------------------
Block 0x63e
0x63e: v63e(0x0) = CONST 
0x641: REVERT v63e(0x0) v63e(0x0)
----------------------------------

Begin block 0x642
prev = {'0x637'}, next = {'0xda4'}
----------------------------------
Block 0x642
0x643: v643(0x23e) = CONST 
0x646: v646(0xda4) = CONST 
0x649: JUMP v646(0xda4)
----------------------------------

Begin block 0x65c
prev = {}, next = {'0x663', '0x667'}
----------------------------------
function tokenForBounty()()
Block 0x65c
0x65d: v65d = CALLVALUE 
0x65e: v65e = ISZERO v65d
0x65f: v65f(0x667) = CONST 
0x662: JUMPI v65f(0x667) v65e
----------------------------------

Begin block 0x663
prev = {'0x65c'}, next = {}
----------------------------------
Block 0x663
0x663: v663(0x0) = CONST 
0x666: REVERT v663(0x0) v663(0x0)
----------------------------------

Begin block 0x667
prev = {'0x65c'}, next = {'0xdaa'}
----------------------------------
Block 0x667
0x668: v668(0x23e) = CONST 
0x66b: v66b(0xdaa) = CONST 
0x66e: JUMP v66b(0xdaa)
----------------------------------

Begin block 0x681
prev = {}, next = {'0x68c', '0x688'}
----------------------------------
function transferOwnership(address)()
Block 0x681
0x682: v682 = CALLVALUE 
0x683: v683 = ISZERO v682
0x684: v684(0x68c) = CONST 
0x687: JUMPI v684(0x68c) v683
----------------------------------

Begin block 0x688
prev = {'0x681'}, next = {}
----------------------------------
Block 0x688
0x688: v688(0x0) = CONST 
0x68b: REVERT v688(0x0) v688(0x0)
----------------------------------

Begin block 0x68c
prev = {'0x681'}, next = {'0xdba'}
----------------------------------
Block 0x68c
0x68d: v68d(0x167) = CONST 
0x690: v690(0x1) = CONST 
0x692: v692(0xa0) = CONST 
0x694: v694(0x2) = CONST 
0x696: v696(0x10000000000000000000000000000000000000000) = EXP v694(0x2) v692(0xa0)
0x697: v697(0xffffffffffffffffffffffffffffffffffffffff) = SUB v696(0x10000000000000000000000000000000000000000) v690(0x1)
0x698: v698(0x4) = CONST 
0x69a: v69a = CALLDATALOAD v698(0x4)
0x69b: v69b = AND v69a v697(0xffffffffffffffffffffffffffffffffffffffff)
0x69c: v69c(0xdba) = CONST 
0x69f: JUMP v69c(0xdba)
----------------------------------

Begin block 0x6a2
prev = {'0x15d'}, next = {'0x6b5', '0x6b9'}
----------------------------------
Block 0x6a2
0x6a3: v6a3(0x5) = CONST 
0x6a5: v6a5 = SLOAD v6a3(0x5)
0x6a6: v6a6(0x0) = CONST 
0x6ad: v6ad(0xff) = CONST 
0x6af: v6af = AND v6ad(0xff) v6a5
0x6b0: v6b0 = ISZERO v6af
0x6b1: v6b1(0x6b9) = CONST 
0x6b4: JUMPI v6b1(0x6b9) v6b0
----------------------------------

Begin block 0x6b5
prev = {'0x6a2'}, next = {}
----------------------------------
Block 0x6b5
0x6b5: v6b5(0x0) = CONST 
0x6b8: REVERT v6b5(0x0) v6b5(0x0)
----------------------------------

Begin block 0x6b9
prev = {'0x6a2'}, next = {'0x6c6', '0x6c2'}
----------------------------------
Block 0x6b9
0x6ba: v6ba(0x0) = CONST 
0x6bd: v6bd = GT v162 v6ba(0x0)
0x6be: v6be(0x6c6) = CONST 
0x6c1: JUMPI v6be(0x6c6) v6bd
----------------------------------

Begin block 0x6c2
prev = {'0x6b9'}, next = {}
----------------------------------
Block 0x6c2
0x6c2: v6c2(0x0) = CONST 
0x6c5: REVERT v6c2(0x0) v6c2(0x0)
----------------------------------

Begin block 0x6c6
prev = {'0x6b9'}, next = {'0xe53'}
----------------------------------
Block 0x6c6
0x6c7: v6c7(0x6d6) = CONST 
0x6ca: v6ca(0x6d1) = CONST 
0x6cd: v6cd(0xe53) = CONST 
0x6d0: JUMP v6cd(0xe53)
----------------------------------

Begin block 0x6d1
prev = {'0xe55'}, next = {'0x6d6'}
----------------------------------
Block 0x6d1
0x6d2: v6d2(0xe58) = CONST 
0x6d5: v6d5_0 = CALLPRIVATE v6d2(0xe58) ve54 v6c7(0x6d6)
----------------------------------

Begin block 0x6d6
prev = {'0x6d1'}, next = {'0x6fb', '0x6ff'}
----------------------------------
Block 0x6d6
0x6d7: v6d7(0x4) = CONST 
0x6d9: v6d9 = SLOAD v6d7(0x4)
0x6df: v6df = MUL v6d5_0 v162
0x6e3: v6e3 = ADD v6df v6d9
0x6e6: v6e6(0x1c6f307be4c4687e6000000) = CONST 
0x6f5: v6f5 = LT v6e6(0x1c6f307be4c4687e6000000) v6e3
0x6f6: v6f6 = ISZERO v6f5
0x6f7: v6f7(0x6ff) = CONST 
0x6fa: JUMPI v6f7(0x6ff) v6f6
----------------------------------

Begin block 0x6fb
prev = {'0x6d6'}, next = {}
----------------------------------
Block 0x6fb
0x6fb: v6fb(0x0) = CONST 
0x6fe: REVERT v6fb(0x0) v6fb(0x0)
----------------------------------

Begin block 0x6ff
prev = {'0x6d6'}, next = {'0x761', '0x75d'}
----------------------------------
Block 0x6ff
0x700: v700(0x1) = CONST 
0x702: v702(0xa0) = CONST 
0x704: v704(0x2) = CONST 
0x706: v706(0x10000000000000000000000000000000000000000) = EXP v704(0x2) v702(0xa0)
0x707: v707(0xffffffffffffffffffffffffffffffffffffffff) = SUB v706(0x10000000000000000000000000000000000000000) v700(0x1)
0x709: v709 = AND v161 v707(0xffffffffffffffffffffffffffffffffffffffff)
0x70a: v70a(0x0) = CONST 
0x70e: MSTORE v70a(0x0) v709
0x70f: v70f(0x2) = CONST 
0x711: v711(0x20) = CONST 
0x713: MSTORE v711(0x20) v70f(0x2)
0x714: v714(0x40) = CONST 
0x719: v719 = SHA3 v70a(0x0) v714(0x40)
0x71b: v71b = SLOAD v719
0x71d: v71d = ADD v6df v71b
0x71f: SSTORE v719 v71d
0x720: v720(0x4) = CONST 
0x724: SSTORE v720(0x4) v6e3
0x725: v725(0x29ea5bb7da8f412d472808d2577d13f82507039d) = CONST 
0x73c: v73c = ISZERO v162
0x73d: v73d(0x8fc) = CONST 
0x740: v740 = MUL v73d(0x8fc) v73c
0x744: v744 = MLOAD v714(0x40)
0x745: v745(0x0) = CONST 
0x747: v747(0x40) = CONST 
0x749: v749 = MLOAD v747(0x40)
0x74c: v74c = SUB v744 v749
0x751: v751 = CALL v740 v725(0x29ea5bb7da8f412d472808d2577d13f82507039d) v162 v749 v74c v749 v745(0x0)
0x757: v757 = ISZERO v751
0x758: v758 = ISZERO v757
0x759: v759(0x761) = CONST 
0x75c: JUMPI v759(0x761) v758
----------------------------------

Begin block 0x75d
prev = {'0x6ff'}, next = {}
----------------------------------
Block 0x75d
0x75d: v75d(0x0) = CONST 
0x760: REVERT v75d(0x0) v75d(0x0)
----------------------------------

Begin block 0x761
prev = {'0x6ff'}, next = {'0x762'}
----------------------------------
Block 0x761
----------------------------------

Begin block 0x762
prev = {'0x761'}, next = {'0x1670x0'}
----------------------------------
Block 0x762
0x768: JUMP v15e(0x167)
----------------------------------

Begin block 0x769
prev = {'0x175'}, next = {'0x17d0x16a'}
----------------------------------
Block 0x769
0x76a: v76a(0x40) = CONST 
0x76d: v76d = MLOAD v76a(0x40)
0x770: v770 = ADD v76d v76a(0x40)
0x771: v771(0x40) = CONST 
0x773: MSTORE v771(0x40) v770
0x774: v774(0xc) = CONST 
0x777: MSTORE v76d v774(0xc)
0x778: v778(0x5472616e736665726575696d0000000000000000000000000000000000000000) = CONST 
0x799: v799(0x20) = CONST 
0x79c: v79c = ADD v76d v799(0x20)
0x79d: MSTORE v79c v778(0x5472616e736665726575696d0000000000000000000000000000000000000000)
0x79f: JUMP v176(0x17d)
----------------------------------

Begin block 0x7a0
prev = {'0x200'}, next = {'0x807'}
----------------------------------
Block 0x7a0
0x7a1: v7a1(0x1) = CONST 
0x7a3: v7a3(0xa0) = CONST 
0x7a5: v7a5(0x2) = CONST 
0x7a7: v7a7(0x10000000000000000000000000000000000000000) = EXP v7a5(0x2) v7a3(0xa0)
0x7a8: v7a8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7a7(0x10000000000000000000000000000000000000000) v7a1(0x1)
0x7a9: v7a9 = CALLER 
0x7ab: v7ab = AND v7a8(0xffffffffffffffffffffffffffffffffffffffff) v7a9
0x7ac: v7ac(0x0) = CONST 
0x7b0: MSTORE v7ac(0x0) v7ab
0x7b1: v7b1(0x3) = CONST 
0x7b3: v7b3(0x20) = CONST 
0x7b7: MSTORE v7b3(0x20) v7b1(0x3)
0x7b8: v7b8(0x40) = CONST 
0x7bc: v7bc = SHA3 v7ac(0x0) v7b8(0x40)
0x7bf: v7bf = AND v20f v7a8(0xffffffffffffffffffffffffffffffffffffffff)
0x7c2: MSTORE v7ac(0x0) v7bf
0x7c6: MSTORE v7b3(0x20) v7bc
0x7c9: v7c9 = SHA3 v7ac(0x0) v7b8(0x40)
0x7cc: SSTORE v7c9 v212
0x7d1: v7d1(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0x7f5: v7f5 = MLOAD v7b8(0x40)
0x7f8: MSTORE v7f5 v212
0x7f9: v7f9(0x20) = CONST 
0x7fb: v7fb = ADD v7f9(0x20) v7f5
0x7fc: v7fc(0x40) = CONST 
0x7fe: v7fe = MLOAD v7fc(0x40)
0x801: v801 = SUB v7fb v7fe
0x803: LOG3 v7fe v801 v7d1(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) v7ab v7bf
0x805: v805(0x1) = CONST 
----------------------------------

Begin block 0x807
prev = {'0x7a0'}, next = {'0x2170x1f5'}
----------------------------------
Block 0x807
0x80c: JUMP v201(0x217)
----------------------------------

Begin block 0x80d
prev = {'0x236'}, next = {'0x23e0x22b'}
----------------------------------
Block 0x80d
0x80e: v80e(0x6) = CONST 
0x810: v810 = SLOAD v80e(0x6)
0x812: JUMP v237(0x23e)
----------------------------------

Begin block 0x813
prev = {'0x25b'}, next = {'0x23e0x250'}
----------------------------------
Block 0x813
0x814: v814(0x2bc) = CONST 
0x818: JUMP v25c(0x23e)
----------------------------------

Begin block 0x819
prev = {'0x280'}, next = {'0x23e0x275'}
----------------------------------
Block 0x819
0x81a: v81a(0x33b2e3c9fd0803ce8000000) = CONST 
0x828: JUMP v281(0x23e)
----------------------------------

Begin block 0x829
prev = {'0x2a5'}, next = {'0x83d', '0x841'}
----------------------------------
Block 0x829
0x82a: v82a(0x0) = CONST 
0x82d: v82d(0x1) = CONST 
0x82f: v82f(0xa0) = CONST 
0x831: v831(0x2) = CONST 
0x833: v833(0x10000000000000000000000000000000000000000) = EXP v831(0x2) v82f(0xa0)
0x834: v834(0xffffffffffffffffffffffffffffffffffffffff) = SUB v833(0x10000000000000000000000000000000000000000) v82d(0x1)
0x836: v836 = AND v2ba v834(0xffffffffffffffffffffffffffffffffffffffff)
0x837: v837 = ISZERO v836
0x838: v838 = ISZERO v837
0x839: v839(0x841) = CONST 
0x83c: JUMPI v839(0x841) v838
----------------------------------

Begin block 0x83d
prev = {'0x829'}, next = {}
----------------------------------
Block 0x83d
0x83d: v83d(0x0) = CONST 
0x840: REVERT v83d(0x0) v83d(0x0)
----------------------------------

Begin block 0x841
prev = {'0x829'}, next = {'0x887'}
----------------------------------
Block 0x841
0x843: v843(0x1) = CONST 
0x845: v845(0xa0) = CONST 
0x847: v847(0x2) = CONST 
0x849: v849(0x10000000000000000000000000000000000000000) = EXP v847(0x2) v845(0xa0)
0x84a: v84a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v849(0x10000000000000000000000000000000000000000) v843(0x1)
0x84d: v84d = AND v2b5 v84a(0xffffffffffffffffffffffffffffffffffffffff)
0x84e: v84e(0x0) = CONST 
0x852: MSTORE v84e(0x0) v84d
0x853: v853(0x3) = CONST 
0x855: v855(0x20) = CONST 
0x859: MSTORE v855(0x20) v853(0x3)
0x85a: v85a(0x40) = CONST 
0x85e: v85e = SHA3 v84e(0x0) v85a(0x40)
0x85f: v85f = CALLER 
0x862: v862 = AND v84a(0xffffffffffffffffffffffffffffffffffffffff) v85f
0x864: MSTORE v84e(0x0) v862
0x867: MSTORE v855(0x20) v85e
0x86a: v86a = SHA3 v84e(0x0) v85a(0x40)
0x86b: v86b = SLOAD v86a
0x86e: MSTORE v84e(0x0) v84d
0x86f: v86f(0x2) = CONST 
0x872: MSTORE v855(0x20) v86f(0x2)
0x876: v876 = SHA3 v84e(0x0) v85a(0x40)
0x877: v877 = SLOAD v876
0x878: v878(0x887) = CONST 
0x87d: v87d(0xffffffff) = CONST 
0x882: v882(0xeba) = CONST 
0x885: v885(0xeba) = AND v882(0xeba) v87d(0xffffffff)
0x886: v886_0 = CALLPRIVATE v885(0xeba) v2bd v877 v878(0x887)
----------------------------------

Begin block 0x887
prev = {'0x841'}, next = {'0x8bc'}
----------------------------------
Block 0x887
0x888: v888(0x1) = CONST 
0x88a: v88a(0xa0) = CONST 
0x88c: v88c(0x2) = CONST 
0x88e: v88e(0x10000000000000000000000000000000000000000) = EXP v88c(0x2) v88a(0xa0)
0x88f: v88f(0xffffffffffffffffffffffffffffffffffffffff) = SUB v88e(0x10000000000000000000000000000000000000000) v888(0x1)
0x892: v892 = AND v2b5 v88f(0xffffffffffffffffffffffffffffffffffffffff)
0x893: v893(0x0) = CONST 
0x897: MSTORE v893(0x0) v892
0x898: v898(0x2) = CONST 
0x89a: v89a(0x20) = CONST 
0x89c: MSTORE v89a(0x20) v898(0x2)
0x89d: v89d(0x40) = CONST 
0x8a1: v8a1 = SHA3 v893(0x0) v89d(0x40)
0x8a5: SSTORE v8a1 v886_0
0x8a8: v8a8 = AND v2ba v88f(0xffffffffffffffffffffffffffffffffffffffff)
0x8aa: MSTORE v893(0x0) v8a8
0x8ab: v8ab = SHA3 v893(0x0) v89d(0x40)
0x8ac: v8ac = SLOAD v8ab
0x8ad: v8ad(0x8bc) = CONST 
0x8b2: v8b2(0xffffffff) = CONST 
0x8b7: v8b7(0xed1) = CONST 
0x8ba: v8ba(0xed1) = AND v8b7(0xed1) v8b2(0xffffffff)
0x8bb: v8bb_0 = CALLPRIVATE v8ba(0xed1) v2bd v8ac v8ad(0x8bc)
----------------------------------

Begin block 0x8bc
prev = {'0x887'}, next = {'0x8e5'}
----------------------------------
Block 0x8bc
0x8bd: v8bd(0x1) = CONST 
0x8bf: v8bf(0xa0) = CONST 
0x8c1: v8c1(0x2) = CONST 
0x8c3: v8c3(0x10000000000000000000000000000000000000000) = EXP v8c1(0x2) v8bf(0xa0)
0x8c4: v8c4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8c3(0x10000000000000000000000000000000000000000) v8bd(0x1)
0x8c6: v8c6 = AND v2ba v8c4(0xffffffffffffffffffffffffffffffffffffffff)
0x8c7: v8c7(0x0) = CONST 
0x8cb: MSTORE v8c7(0x0) v8c6
0x8cc: v8cc(0x2) = CONST 
0x8ce: v8ce(0x20) = CONST 
0x8d0: MSTORE v8ce(0x20) v8cc(0x2)
0x8d1: v8d1(0x40) = CONST 
0x8d4: v8d4 = SHA3 v8c7(0x0) v8d1(0x40)
0x8d5: SSTORE v8d4 v8bb_0
0x8d6: v8d6(0x8e5) = CONST 
0x8db: v8db(0xffffffff) = CONST 
0x8e0: v8e0(0xeba) = CONST 
0x8e3: v8e3(0xeba) = AND v8e0(0xeba) v8db(0xffffffff)
0x8e4: v8e4_0 = CALLPRIVATE v8e3(0xeba) v2bd v86b v8d6(0x8e5)
----------------------------------

Begin block 0x8e5
prev = {'0x8bc'}, next = {'0x94d'}
----------------------------------
Block 0x8e5
0x8e6: v8e6(0x1) = CONST 
0x8e8: v8e8(0xa0) = CONST 
0x8ea: v8ea(0x2) = CONST 
0x8ec: v8ec(0x10000000000000000000000000000000000000000) = EXP v8ea(0x2) v8e8(0xa0)
0x8ed: v8ed(0xffffffffffffffffffffffffffffffffffffffff) = SUB v8ec(0x10000000000000000000000000000000000000000) v8e6(0x1)
0x8f0: v8f0 = AND v2b5 v8ed(0xffffffffffffffffffffffffffffffffffffffff)
0x8f1: v8f1(0x0) = CONST 
0x8f5: MSTORE v8f1(0x0) v8f0
0x8f6: v8f6(0x3) = CONST 
0x8f8: v8f8(0x20) = CONST 
0x8fc: MSTORE v8f8(0x20) v8f6(0x3)
0x8fd: v8fd(0x40) = CONST 
0x901: v901 = SHA3 v8f1(0x0) v8fd(0x40)
0x902: v902 = CALLER 
0x904: v904 = AND v8ed(0xffffffffffffffffffffffffffffffffffffffff) v902
0x906: MSTORE v8f1(0x0) v904
0x909: MSTORE v8f8(0x20) v901
0x90d: v90d = SHA3 v8f1(0x0) v8fd(0x40)
0x911: SSTORE v90d v8e4_0
0x914: v914 = AND v2ba v8ed(0xffffffffffffffffffffffffffffffffffffffff)
0x916: v916(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x93a: v93a = MLOAD v8fd(0x40)
0x93d: MSTORE v93a v2bd
0x93e: v93e(0x20) = CONST 
0x940: v940 = ADD v93e(0x20) v93a
0x941: v941(0x40) = CONST 
0x943: v943 = MLOAD v941(0x40)
0x946: v946 = SUB v940 v943
0x948: LOG3 v943 v946 v916(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v8f0 v914
0x949: v949(0x1) = CONST 
----------------------------------

Begin block 0x94d
prev = {'0x8e5'}, next = {'0x2170x29a'}
----------------------------------
Block 0x94d
0x954: JUMP v2a6(0x217)
----------------------------------

Begin block 0x955
prev = {'0x2e1'}, next = {'0x2e90x2d6'}
----------------------------------
Block 0x955
0x956: v956(0x29ea5bb7da8f412d472808d2577d13f82507039d) = CONST 
0x96c: JUMP v2e2(0x2e9)
----------------------------------

Begin block 0x96d
prev = {'0x310'}, next = {'0x23e0x305'}
----------------------------------
Block 0x96d
0x96e: v96e(0x12c) = CONST 
0x972: JUMP v311(0x23e)
----------------------------------

Begin block 0x973
prev = {'0x335'}, next = {'0x23e0x32a'}
----------------------------------
Block 0x973
0x974: v974(0x12) = CONST 
0x977: JUMP v336(0x23e)
----------------------------------

Begin block 0x978
prev = {'0x35a'}, next = {'0x23e0x34f'}
----------------------------------
Block 0x978
0x979: v979(0x1c6f307be4c4687e6000000) = CONST 
0x987: JUMP v35b(0x23e)
----------------------------------

Begin block 0x988
prev = {'0x37f'}, next = {'0x9a3', '0x99f'}
----------------------------------
Block 0x988
0x989: v989(0x0) = CONST 
0x98b: v98b = SLOAD v989(0x0)
0x98c: v98c = CALLER 
0x98d: v98d(0x1) = CONST 
0x98f: v98f(0xa0) = CONST 
0x991: v991(0x2) = CONST 
0x993: v993(0x10000000000000000000000000000000000000000) = EXP v991(0x2) v98f(0xa0)
0x994: v994(0xffffffffffffffffffffffffffffffffffffffff) = SUB v993(0x10000000000000000000000000000000000000000) v98d(0x1)
0x997: v997 = AND v994(0xffffffffffffffffffffffffffffffffffffffff) v98c
0x999: v999 = AND v98b v994(0xffffffffffffffffffffffffffffffffffffffff)
0x99a: v99a = EQ v999 v997
0x99b: v99b(0x9a3) = CONST 
0x99e: JUMPI v99b(0x9a3) v99a
----------------------------------

Begin block 0x99f
prev = {'0x988'}, next = {}
----------------------------------
Block 0x99f
0x99f: v99f(0x0) = CONST 
0x9a2: REVERT v99f(0x0) v99f(0x0)
----------------------------------

Begin block 0x9a3
prev = {'0x988'}, next = {'0x9b3', '0x9af'}
----------------------------------
Block 0x9a3
0x9a4: v9a4(0x5) = CONST 
0x9a6: v9a6 = SLOAD v9a4(0x5)
0x9a7: v9a7(0xff) = CONST 
0x9a9: v9a9 = AND v9a7(0xff) v9a6
0x9aa: v9aa = ISZERO v9a9
0x9ab: v9ab(0x9b3) = CONST 
0x9ae: JUMPI v9ab(0x9b3) v9aa
----------------------------------

Begin block 0x9af
prev = {'0x9a3'}, next = {}
----------------------------------
Block 0x9af
0x9af: v9af(0x0) = CONST 
0x9b2: REVERT v9af(0x0) v9af(0x0)
----------------------------------

Begin block 0x9b3
prev = {'0x9a3'}, next = {'0x9d8', '0x9dc'}
----------------------------------
Block 0x9b3
0x9b4: v9b4 = CALLER 
0x9b5: v9b5(0x1) = CONST 
0x9b7: v9b7(0xa0) = CONST 
0x9b9: v9b9(0x2) = CONST 
0x9bb: v9bb(0x10000000000000000000000000000000000000000) = EXP v9b9(0x2) v9b7(0xa0)
0x9bc: v9bc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v9bb(0x10000000000000000000000000000000000000000) v9b5(0x1)
0x9bd: v9bd = AND v9bc(0xffffffffffffffffffffffffffffffffffffffff) v9b4
0x9be: v9be(0x29ea5bb7da8f412d472808d2577d13f82507039d) = CONST 
0x9d3: v9d3 = EQ v9be(0x29ea5bb7da8f412d472808d2577d13f82507039d) v9bd
0x9d4: v9d4(0x9dc) = CONST 
0x9d7: JUMPI v9d4(0x9dc) v9d3
----------------------------------

Begin block 0x9d8
prev = {'0x9b3'}, next = {}
----------------------------------
Block 0x9d8
0x9d8: v9d8(0x0) = CONST 
0x9db: REVERT v9d8(0x0) v9d8(0x0)
----------------------------------

Begin block 0x9dc
prev = {'0x9b3'}, next = {'0x9f6', '0x9f2'}
----------------------------------
Block 0x9dc
0x9dd: v9dd(0x4) = CONST 
0x9df: v9df = SLOAD v9dd(0x4)
0x9e0: v9e0(0x1c6f307be4c4687e6000000) = CONST 
0x9ed: v9ed = GT v9e0(0x1c6f307be4c4687e6000000) v9df
0x9ee: v9ee(0x9f6) = CONST 
0x9f1: JUMPI v9ee(0x9f6) v9ed
----------------------------------

Begin block 0x9f2
prev = {'0x9dc'}, next = {}
----------------------------------
Block 0x9f2
0x9f2: v9f2(0x0) = CONST 
0x9f5: REVERT v9f2(0x0) v9f2(0x0)
----------------------------------

Begin block 0x9f6
prev = {'0x9dc'}, next = {'0xa5d'}
----------------------------------
Block 0x9f6
0x9f7: v9f7(0x4) = CONST 
0x9f9: v9f9 = SLOAD v9f7(0x4)
0x9fa: v9fa(0x29ea5bb7da8f412d472808d2577d13f82507039d) = CONST 
0xa0f: va0f(0x0) = CONST 
0xa11: MSTORE va0f(0x0) v9fa(0x29ea5bb7da8f412d472808d2577d13f82507039d)
0xa12: va12(0x2) = CONST 
0xa14: va14(0x20) = CONST 
0xa16: MSTORE va14(0x20) va12(0x2)
0xa17: va17(0xfc49f2b4cbf6784f42e0d68b14569a333ae2630ee04626c15d7376d4da7c201f) = CONST 
0xa39: va39 = SLOAD va17(0xfc49f2b4cbf6784f42e0d68b14569a333ae2630ee04626c15d7376d4da7c201f)
0xa3a: va3a(0x1c6f307be4c4687e6000000) = CONST 
0xa4a: va4a = SUB va3a(0x1c6f307be4c4687e6000000) v9f9
0xa4d: va4d = ADD va39 va4a
0xa4f: SSTORE va17(0xfc49f2b4cbf6784f42e0d68b14569a333ae2630ee04626c15d7376d4da7c201f) va4d
0xa50: va50(0x5) = CONST 
0xa53: va53 = SLOAD va50(0x5)
0xa54: va54(0xff) = CONST 
0xa56: va56(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT va54(0xff)
0xa57: va57 = AND va56(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) va53
0xa58: va58(0x1) = CONST 
0xa5a: va5a = OR va58(0x1) va57
0xa5c: SSTORE va50(0x5) va5a
----------------------------------

Begin block 0xa5d
prev = {'0x9f6'}, next = {'0xa5e'}
----------------------------------
Block 0xa5d
----------------------------------

Begin block 0xa5e
prev = {'0xa5d'}, next = {'0x1670x374'}
----------------------------------
Block 0xa5e
0xa5f: JUMP v380(0x167)
----------------------------------

Begin block 0xa60
prev = {'0x394'}, next = {'0x23e0x389'}
----------------------------------
Block 0xa60
0xa61: va61(0xc8) = CONST 
0xa64: JUMP v395(0x23e)
----------------------------------

Begin block 0xa65
prev = {'0x3b9'}, next = {'0x23e0x3ae'}
----------------------------------
Block 0xa65
0xa66: va66(0x3e8) = CONST 
0xa6a: JUMP v3ba(0x23e)
----------------------------------

Begin block 0xa6b
prev = {'0x3de'}, next = {'0xa9c', '0xac8'}
----------------------------------
Block 0xa6b
0xa6c: va6c(0x1) = CONST 
0xa6e: va6e(0xa0) = CONST 
0xa70: va70(0x2) = CONST 
0xa72: va72(0x10000000000000000000000000000000000000000) = EXP va70(0x2) va6e(0xa0)
0xa73: va73(0xffffffffffffffffffffffffffffffffffffffff) = SUB va72(0x10000000000000000000000000000000000000000) va6c(0x1)
0xa74: va74 = CALLER 
0xa76: va76 = AND va73(0xffffffffffffffffffffffffffffffffffffffff) va74
0xa77: va77(0x0) = CONST 
0xa7b: MSTORE va77(0x0) va76
0xa7c: va7c(0x3) = CONST 
0xa7e: va7e(0x20) = CONST 
0xa82: MSTORE va7e(0x20) va7c(0x3)
0xa83: va83(0x40) = CONST 
0xa87: va87 = SHA3 va77(0x0) va83(0x40)
0xa8a: va8a = AND v3ed va73(0xffffffffffffffffffffffffffffffffffffffff)
0xa8c: MSTORE va77(0x0) va8a
0xa8f: MSTORE va7e(0x20) va87
0xa92: va92 = SHA3 va77(0x0) va83(0x40)
0xa93: va93 = SLOAD va92
0xa96: va96 = GT v3f0 va93
0xa97: va97 = ISZERO va96
0xa98: va98(0xac8) = CONST 
0xa9b: JUMPI va98(0xac8) va97
----------------------------------

Begin block 0xa9c
prev = {'0xa6b'}, next = {'0xaff'}
----------------------------------
Block 0xa9c
0xa9c: va9c(0x1) = CONST 
0xa9e: va9e(0xa0) = CONST 
0xaa0: vaa0(0x2) = CONST 
0xaa2: vaa2(0x10000000000000000000000000000000000000000) = EXP vaa0(0x2) va9e(0xa0)
0xaa3: vaa3(0xffffffffffffffffffffffffffffffffffffffff) = SUB vaa2(0x10000000000000000000000000000000000000000) va9c(0x1)
0xaa4: vaa4 = CALLER 
0xaa6: vaa6 = AND vaa3(0xffffffffffffffffffffffffffffffffffffffff) vaa4
0xaa7: vaa7(0x0) = CONST 
0xaab: MSTORE vaa7(0x0) vaa6
0xaac: vaac(0x3) = CONST 
0xaae: vaae(0x20) = CONST 
0xab2: MSTORE vaae(0x20) vaac(0x3)
0xab3: vab3(0x40) = CONST 
0xab7: vab7 = SHA3 vaa7(0x0) vab3(0x40)
0xaba: vaba = AND v3ed vaa3(0xffffffffffffffffffffffffffffffffffffffff)
0xabc: MSTORE vaa7(0x0) vaba
0xabf: MSTORE vaae(0x20) vab7
0xac2: vac2 = SHA3 vaa7(0x0) vab3(0x40)
0xac3: SSTORE vac2 vaa7(0x0)
0xac4: vac4(0xaff) = CONST 
0xac7: JUMP vac4(0xaff)
----------------------------------

Begin block 0xac8
prev = {'0xa6b'}, next = {'0xad8'}
----------------------------------
Block 0xac8
0xac9: vac9(0xad8) = CONST 
0xace: vace(0xffffffff) = CONST 
0xad3: vad3(0xeba) = CONST 
0xad6: vad6(0xeba) = AND vad3(0xeba) vace(0xffffffff)
0xad7: vad7_0 = CALLPRIVATE vad6(0xeba) v3f0 va93 vac9(0xad8)
----------------------------------

Begin block 0xad8
prev = {'0xac8'}, next = {'0xaff'}
----------------------------------
Block 0xad8
0xad9: vad9(0x1) = CONST 
0xadb: vadb(0xa0) = CONST 
0xadd: vadd(0x2) = CONST 
0xadf: vadf(0x10000000000000000000000000000000000000000) = EXP vadd(0x2) vadb(0xa0)
0xae0: vae0(0xffffffffffffffffffffffffffffffffffffffff) = SUB vadf(0x10000000000000000000000000000000000000000) vad9(0x1)
0xae1: vae1 = CALLER 
0xae3: vae3 = AND vae0(0xffffffffffffffffffffffffffffffffffffffff) vae1
0xae4: vae4(0x0) = CONST 
0xae8: MSTORE vae4(0x0) vae3
0xae9: vae9(0x3) = CONST 
0xaeb: vaeb(0x20) = CONST 
0xaef: MSTORE vaeb(0x20) vae9(0x3)
0xaf0: vaf0(0x40) = CONST 
0xaf4: vaf4 = SHA3 vae4(0x0) vaf0(0x40)
0xaf7: vaf7 = AND v3ed vae0(0xffffffffffffffffffffffffffffffffffffffff)
0xaf9: MSTORE vae4(0x0) vaf7
0xafc: MSTORE vaeb(0x20) vaf4
0xafd: vafd = SHA3 vae4(0x0) vaf0(0x40)
0xafe: SSTORE vafd vad7_0
----------------------------------

Begin block 0xaff
prev = {'0xa9c', '0xad8'}, next = {'0xb60'}
----------------------------------
Block 0xaff
0xb00: vb00(0x1) = CONST 
0xb02: vb02(0xa0) = CONST 
0xb04: vb04(0x2) = CONST 
0xb06: vb06(0x10000000000000000000000000000000000000000) = EXP vb04(0x2) vb02(0xa0)
0xb07: vb07(0xffffffffffffffffffffffffffffffffffffffff) = SUB vb06(0x10000000000000000000000000000000000000000) vb00(0x1)
0xb08: vb08 = CALLER 
0xb0a: vb0a = AND vb07(0xffffffffffffffffffffffffffffffffffffffff) vb08
0xb0b: vb0b(0x0) = CONST 
0xb0f: MSTORE vb0b(0x0) vb0a
0xb10: vb10(0x3) = CONST 
0xb12: vb12(0x20) = CONST 
0xb16: MSTORE vb12(0x20) vb10(0x3)
0xb17: vb17(0x40) = CONST 
0xb1b: vb1b = SHA3 vb0b(0x0) vb17(0x40)
0xb1e: vb1e = AND v3ed vb07(0xffffffffffffffffffffffffffffffffffffffff)
0xb21: MSTORE vb0b(0x0) vb1e
0xb25: MSTORE vb12(0x20) vb1b
0xb29: vb29 = SHA3 vb0b(0x0) vb17(0x40)
0xb2a: vb2a = SLOAD vb29
0xb2b: vb2b(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0xb4d: vb4d = MLOAD vb17(0x40)
0xb50: MSTORE vb4d vb2a
0xb51: vb51(0x20) = CONST 
0xb53: vb53 = ADD vb51(0x20) vb4d
0xb54: vb54(0x40) = CONST 
0xb56: vb56 = MLOAD vb54(0x40)
0xb59: vb59 = SUB vb53 vb56
0xb5b: LOG3 vb56 vb59 vb2b(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) vb0a vb1e
0xb5c: vb5c(0x1) = CONST 
----------------------------------

Begin block 0xb60
prev = {'0xaff'}, next = {'0x2170x3d3'}
----------------------------------
Block 0xb60
0xb66: JUMP v3df(0x217)
----------------------------------

Begin block 0xb67
prev = {}, next = {'0xb810xb67'}
----------------------------------
function 0xb67(vb67arg0, vb67arg1)
Block 0xb67
0xb68: vb68(0x1) = CONST 
0xb6a: vb6a(0xa0) = CONST 
0xb6c: vb6c(0x2) = CONST 
0xb6e: vb6e(0x10000000000000000000000000000000000000000) = EXP vb6c(0x2) vb6a(0xa0)
0xb6f: vb6f(0xffffffffffffffffffffffffffffffffffffffff) = SUB vb6e(0x10000000000000000000000000000000000000000) vb68(0x1)
0xb71: vb71 = AND vb67arg0 vb6f(0xffffffffffffffffffffffffffffffffffffffff)
0xb72: vb72(0x0) = CONST 
0xb76: MSTORE vb72(0x0) vb71
0xb77: vb77(0x2) = CONST 
0xb79: vb79(0x20) = CONST 
0xb7b: MSTORE vb79(0x20) vb77(0x2)
0xb7c: vb7c(0x40) = CONST 
0xb7f: vb7f = SHA3 vb72(0x0) vb7c(0x40)
0xb80: vb80 = SLOAD vb7f
----------------------------------

Begin block 0xb810xb67
prev = {'0xb67'}, next = {}
----------------------------------
Block 0xb810xb67
0xb850xb67: RETURNPRIVATE vb67arg1 vb80
----------------------------------

Begin block 0xb810xe58
prev = {'0xe91', '0xea6', '0xe7c', '0xe67'}, next = {}
----------------------------------
Block 0xb810xe58
0xb810xe58_0x0: vb81e58_0 = PHI ve68(0x3e8) ve7d(0x2bc) ve92(0x1f4) vea7(0x12c)
0xb850xe58: RETURNPRIVATE ve58arg1 vb81e58_0
----------------------------------

Begin block 0xb86
prev = {'0x445'}, next = {'0x23e0x43a'}
----------------------------------
Block 0xb86
0xb87: vb87(0x5ebe9250) = CONST 
0xb8d: JUMP v446(0x23e)
----------------------------------

Begin block 0xb8e
prev = {'0x46a'}, next = {'0x2170x45f'}
----------------------------------
Block 0xb8e
0xb8f: vb8f(0x5) = CONST 
0xb91: vb91 = SLOAD vb8f(0x5)
0xb92: vb92(0xff) = CONST 
0xb94: vb94 = AND vb92(0xff) vb91
0xb96: JUMP v46b(0x217)
----------------------------------

Begin block 0xb97
prev = {'0x491'}, next = {'0x2e90x486'}
----------------------------------
Block 0xb97
0xb98: vb98(0x0) = CONST 
0xb9a: vb9a = SLOAD vb98(0x0)
0xb9b: vb9b(0x1) = CONST 
0xb9d: vb9d(0xa0) = CONST 
0xb9f: vb9f(0x2) = CONST 
0xba1: vba1(0x10000000000000000000000000000000000000000) = EXP vb9f(0x2) vb9d(0xa0)
0xba2: vba2(0xffffffffffffffffffffffffffffffffffffffff) = SUB vba1(0x10000000000000000000000000000000000000000) vb9b(0x1)
0xba3: vba3 = AND vba2(0xffffffffffffffffffffffffffffffffffffffff) vb9a
0xba5: JUMP v492(0x2e9)
----------------------------------

Begin block 0xba6
prev = {'0x4c0'}, next = {'0x17d0x4b5'}
----------------------------------
Block 0xba6
0xba7: vba7(0x40) = CONST 
0xbaa: vbaa = MLOAD vba7(0x40)
0xbad: vbad = ADD vbaa vba7(0x40)
0xbae: vbae(0x40) = CONST 
0xbb0: MSTORE vbae(0x40) vbad
0xbb1: vbb1(0x3) = CONST 
0xbb4: MSTORE vbaa vbb1(0x3)
0xbb5: vbb5(0x54524e0000000000000000000000000000000000000000000000000000000000) = CONST 
0xbd6: vbd6(0x20) = CONST 
0xbd9: vbd9 = ADD vbaa vbd6(0x20)
0xbda: MSTORE vbd9 vbb5(0x54524e0000000000000000000000000000000000000000000000000000000000)
0xbdc: JUMP v4c1(0x17d)
----------------------------------

Begin block 0xbdd
prev = {'0x54b'}, next = {'0xbf4', '0xbf0'}
----------------------------------
Block 0xbdd
0xbde: vbde(0x0) = CONST 
0xbe0: vbe0(0x1) = CONST 
0xbe2: vbe2(0xa0) = CONST 
0xbe4: vbe4(0x2) = CONST 
0xbe6: vbe6(0x10000000000000000000000000000000000000000) = EXP vbe4(0x2) vbe2(0xa0)
0xbe7: vbe7(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbe6(0x10000000000000000000000000000000000000000) vbe0(0x1)
0xbe9: vbe9 = AND v55a vbe7(0xffffffffffffffffffffffffffffffffffffffff)
0xbea: vbea = ISZERO vbe9
0xbeb: vbeb = ISZERO vbea
0xbec: vbec(0xbf4) = CONST 
0xbef: JUMPI vbec(0xbf4) vbeb
----------------------------------

Begin block 0xbf0
prev = {'0xbdd'}, next = {}
----------------------------------
Block 0xbf0
0xbf0: vbf0(0x0) = CONST 
0xbf3: REVERT vbf0(0x0) vbf0(0x0)
----------------------------------

Begin block 0xbf4
prev = {'0xbdd'}, next = {'0xc1d'}
----------------------------------
Block 0xbf4
0xbf5: vbf5(0x1) = CONST 
0xbf7: vbf7(0xa0) = CONST 
0xbf9: vbf9(0x2) = CONST 
0xbfb: vbfb(0x10000000000000000000000000000000000000000) = EXP vbf9(0x2) vbf7(0xa0)
0xbfc: vbfc(0xffffffffffffffffffffffffffffffffffffffff) = SUB vbfb(0x10000000000000000000000000000000000000000) vbf5(0x1)
0xbfd: vbfd = CALLER 
0xbfe: vbfe = AND vbfd vbfc(0xffffffffffffffffffffffffffffffffffffffff)
0xbff: vbff(0x0) = CONST 
0xc03: MSTORE vbff(0x0) vbfe
0xc04: vc04(0x2) = CONST 
0xc06: vc06(0x20) = CONST 
0xc08: MSTORE vc06(0x20) vc04(0x2)
0xc09: vc09(0x40) = CONST 
0xc0c: vc0c = SHA3 vbff(0x0) vc09(0x40)
0xc0d: vc0d = SLOAD vc0c
0xc0e: vc0e(0xc1d) = CONST 
0xc13: vc13(0xffffffff) = CONST 
0xc18: vc18(0xeba) = CONST 
0xc1b: vc1b(0xeba) = AND vc18(0xeba) vc13(0xffffffff)
0xc1c: vc1c_0 = CALLPRIVATE vc1b(0xeba) v55d vc0d vc0e(0xc1d)
----------------------------------

Begin block 0xc1d
prev = {'0xbf4'}, next = {'0xc52'}
----------------------------------
Block 0xc1d
0xc1e: vc1e(0x1) = CONST 
0xc20: vc20(0xa0) = CONST 
0xc22: vc22(0x2) = CONST 
0xc24: vc24(0x10000000000000000000000000000000000000000) = EXP vc22(0x2) vc20(0xa0)
0xc25: vc25(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc24(0x10000000000000000000000000000000000000000) vc1e(0x1)
0xc26: vc26 = CALLER 
0xc28: vc28 = AND vc25(0xffffffffffffffffffffffffffffffffffffffff) vc26
0xc29: vc29(0x0) = CONST 
0xc2d: MSTORE vc29(0x0) vc28
0xc2e: vc2e(0x2) = CONST 
0xc30: vc30(0x20) = CONST 
0xc32: MSTORE vc30(0x20) vc2e(0x2)
0xc33: vc33(0x40) = CONST 
0xc37: vc37 = SHA3 vc29(0x0) vc33(0x40)
0xc3b: SSTORE vc37 vc1c_0
0xc3e: vc3e = AND v55a vc25(0xffffffffffffffffffffffffffffffffffffffff)
0xc40: MSTORE vc29(0x0) vc3e
0xc41: vc41 = SHA3 vc29(0x0) vc33(0x40)
0xc42: vc42 = SLOAD vc41
0xc43: vc43(0xc52) = CONST 
0xc48: vc48(0xffffffff) = CONST 
0xc4d: vc4d(0xed1) = CONST 
0xc50: vc50(0xed1) = AND vc4d(0xed1) vc48(0xffffffff)
0xc51: vc51_0 = CALLPRIVATE vc50(0xed1) v55d vc42 vc43(0xc52)
----------------------------------

Begin block 0xc52
prev = {'0xc1d'}, next = {'0xcae'}
----------------------------------
Block 0xc52
0xc53: vc53(0x1) = CONST 
0xc55: vc55(0xa0) = CONST 
0xc57: vc57(0x2) = CONST 
0xc59: vc59(0x10000000000000000000000000000000000000000) = EXP vc57(0x2) vc55(0xa0)
0xc5a: vc5a(0xffffffffffffffffffffffffffffffffffffffff) = SUB vc59(0x10000000000000000000000000000000000000000) vc53(0x1)
0xc5d: vc5d = AND v55a vc5a(0xffffffffffffffffffffffffffffffffffffffff)
0xc5e: vc5e(0x0) = CONST 
0xc62: MSTORE vc5e(0x0) vc5d
0xc63: vc63(0x2) = CONST 
0xc65: vc65(0x20) = CONST 
0xc67: MSTORE vc65(0x20) vc63(0x2)
0xc68: vc68(0x40) = CONST 
0xc6d: vc6d = SHA3 vc5e(0x0) vc68(0x40)
0xc71: SSTORE vc6d vc51_0
0xc73: vc73 = CALLER 
0xc76: vc76 = AND vc5a(0xffffffffffffffffffffffffffffffffffffffff) vc73
0xc78: vc78(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0xc9c: vc9c = MLOAD vc68(0x40)
0xc9f: MSTORE vc9c v55d
0xca0: vca0(0x20) = CONST 
0xca2: vca2 = ADD vca0(0x20) vc9c
0xca3: vca3(0x40) = CONST 
0xca5: vca5 = MLOAD vca3(0x40)
0xca8: vca8 = SUB vca2 vca5
0xcaa: LOG3 vca5 vca8 vc78(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) vc76 vc5d
0xcac: vcac(0x1) = CONST 
----------------------------------

Begin block 0xcae
prev = {'0xc52'}, next = {'0x2170x540'}
----------------------------------
Block 0xcae
0xcb3: JUMP v54c(0x217)
----------------------------------

Begin block 0xccc
prev = {'0x5b0'}, next = {'0xd04'}
----------------------------------
Block 0xccc
0xccd: vccd(0x1) = CONST 
0xccf: vccf(0xa0) = CONST 
0xcd1: vcd1(0x2) = CONST 
0xcd3: vcd3(0x10000000000000000000000000000000000000000) = EXP vcd1(0x2) vccf(0xa0)
0xcd4: vcd4(0xffffffffffffffffffffffffffffffffffffffff) = SUB vcd3(0x10000000000000000000000000000000000000000) vccd(0x1)
0xcd5: vcd5 = CALLER 
0xcd7: vcd7 = AND vcd4(0xffffffffffffffffffffffffffffffffffffffff) vcd5
0xcd8: vcd8(0x0) = CONST 
0xcdc: MSTORE vcd8(0x0) vcd7
0xcdd: vcdd(0x3) = CONST 
0xcdf: vcdf(0x20) = CONST 
0xce3: MSTORE vcdf(0x20) vcdd(0x3)
0xce4: vce4(0x40) = CONST 
0xce8: vce8 = SHA3 vcd8(0x0) vce4(0x40)
0xceb: vceb = AND v5bf vcd4(0xffffffffffffffffffffffffffffffffffffffff)
0xced: MSTORE vcd8(0x0) vceb
0xcf0: MSTORE vcdf(0x20) vce8
0xcf3: vcf3 = SHA3 vcd8(0x0) vce4(0x40)
0xcf4: vcf4 = SLOAD vcf3
0xcf5: vcf5(0xd04) = CONST 
0xcfa: vcfa(0xffffffff) = CONST 
0xcff: vcff(0xed1) = CONST 
0xd02: vd02(0xed1) = AND vcff(0xed1) vcfa(0xffffffff)
0xd03: vd03_0 = CALLPRIVATE vd02(0xed1) v5c2 vcf4 vcf5(0xd04)
----------------------------------

Begin block 0xd04
prev = {'0xccc'}, next = {'0xd6b'}
----------------------------------
Block 0xd04
0xd05: vd05(0x1) = CONST 
0xd07: vd07(0xa0) = CONST 
0xd09: vd09(0x2) = CONST 
0xd0b: vd0b(0x10000000000000000000000000000000000000000) = EXP vd09(0x2) vd07(0xa0)
0xd0c: vd0c(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd0b(0x10000000000000000000000000000000000000000) vd05(0x1)
0xd0d: vd0d = CALLER 
0xd0f: vd0f = AND vd0c(0xffffffffffffffffffffffffffffffffffffffff) vd0d
0xd10: vd10(0x0) = CONST 
0xd14: MSTORE vd10(0x0) vd0f
0xd15: vd15(0x3) = CONST 
0xd17: vd17(0x20) = CONST 
0xd1b: MSTORE vd17(0x20) vd15(0x3)
0xd1c: vd1c(0x40) = CONST 
0xd20: vd20 = SHA3 vd10(0x0) vd1c(0x40)
0xd23: vd23 = AND v5bf vd0c(0xffffffffffffffffffffffffffffffffffffffff)
0xd26: MSTORE vd10(0x0) vd23
0xd2a: MSTORE vd17(0x20) vd20
0xd2e: vd2e = SHA3 vd10(0x0) vd1c(0x40)
0xd31: SSTORE vd2e vd03_0
0xd36: vd36(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0xd59: vd59 = MLOAD vd1c(0x40)
0xd5c: MSTORE vd59 vd03_0
0xd5d: vd5d(0x20) = CONST 
0xd5f: vd5f = ADD vd5d(0x20) vd59
0xd60: vd60(0x40) = CONST 
0xd62: vd62 = MLOAD vd60(0x40)
0xd65: vd65 = SUB vd5f vd62
0xd67: LOG3 vd62 vd65 vd36(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) vd0f vd23
0xd69: vd69(0x1) = CONST 
----------------------------------

Begin block 0xd6b
prev = {'0xd04'}, next = {'0x2170x5a5'}
----------------------------------
Block 0xd6b
0xd70: JUMP v5b1(0x217)
----------------------------------

Begin block 0xd71
prev = {'0x5e6'}, next = {'0xd98'}
----------------------------------
Block 0xd71
0xd72: vd72(0x1) = CONST 
0xd74: vd74(0xa0) = CONST 
0xd76: vd76(0x2) = CONST 
0xd78: vd78(0x10000000000000000000000000000000000000000) = EXP vd76(0x2) vd74(0xa0)
0xd79: vd79(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd78(0x10000000000000000000000000000000000000000) vd72(0x1)
0xd7c: vd7c = AND v5f6 vd79(0xffffffffffffffffffffffffffffffffffffffff)
0xd7d: vd7d(0x0) = CONST 
0xd81: MSTORE vd7d(0x0) vd7c
0xd82: vd82(0x3) = CONST 
0xd84: vd84(0x20) = CONST 
0xd88: MSTORE vd84(0x20) vd82(0x3)
0xd89: vd89(0x40) = CONST 
0xd8d: vd8d = SHA3 vd7d(0x0) vd89(0x40)
0xd90: vd90 = AND v5fb vd79(0xffffffffffffffffffffffffffffffffffffffff)
0xd92: MSTORE vd7d(0x0) vd90
0xd95: MSTORE vd84(0x20) vd8d
0xd96: vd96 = SHA3 vd7d(0x0) vd89(0x40)
0xd97: vd97 = SLOAD vd96
----------------------------------

Begin block 0xd98
prev = {'0xd71'}, next = {'0x23e0x5db'}
----------------------------------
Block 0xd98
0xd9d: JUMP v5e7(0x23e)
----------------------------------

Begin block 0xd9e
prev = {'0x61d'}, next = {'0x23e0x612'}
----------------------------------
Block 0xd9e
0xd9f: vd9f(0x1f4) = CONST 
0xda3: JUMP v61e(0x23e)
----------------------------------

Begin block 0xda4
prev = {'0x642'}, next = {'0x23e0x637'}
----------------------------------
Block 0xda4
0xda5: vda5(0x4) = CONST 
0xda7: vda7 = SLOAD vda5(0x4)
0xda9: JUMP v643(0x23e)
----------------------------------

Begin block 0xdaa
prev = {'0x667'}, next = {'0x23e0x65c'}
----------------------------------
Block 0xdaa
0xdab: vdab(0x1743b34e18439b502000000) = CONST 
0xdb9: JUMP v668(0x23e)
----------------------------------

Begin block 0xdba
prev = {'0x68c'}, next = {'0xdd5', '0xdd1'}
----------------------------------
Block 0xdba
0xdbb: vdbb(0x0) = CONST 
0xdbd: vdbd = SLOAD vdbb(0x0)
0xdbe: vdbe = CALLER 
0xdbf: vdbf(0x1) = CONST 
0xdc1: vdc1(0xa0) = CONST 
0xdc3: vdc3(0x2) = CONST 
0xdc5: vdc5(0x10000000000000000000000000000000000000000) = EXP vdc3(0x2) vdc1(0xa0)
0xdc6: vdc6(0xffffffffffffffffffffffffffffffffffffffff) = SUB vdc5(0x10000000000000000000000000000000000000000) vdbf(0x1)
0xdc9: vdc9 = AND vdc6(0xffffffffffffffffffffffffffffffffffffffff) vdbe
0xdcb: vdcb = AND vdbd vdc6(0xffffffffffffffffffffffffffffffffffffffff)
0xdcc: vdcc = EQ vdcb vdc9
0xdcd: vdcd(0xdd5) = CONST 
0xdd0: JUMPI vdcd(0xdd5) vdcc
----------------------------------

Begin block 0xdd1
prev = {'0xdba'}, next = {}
----------------------------------
Block 0xdd1
0xdd1: vdd1(0x0) = CONST 
0xdd4: REVERT vdd1(0x0) vdd1(0x0)
----------------------------------

Begin block 0xdd5
prev = {'0xdba'}, next = {'0xdea', '0xde6'}
----------------------------------
Block 0xdd5
0xdd6: vdd6(0x1) = CONST 
0xdd8: vdd8(0xa0) = CONST 
0xdda: vdda(0x2) = CONST 
0xddc: vddc(0x10000000000000000000000000000000000000000) = EXP vdda(0x2) vdd8(0xa0)
0xddd: vddd(0xffffffffffffffffffffffffffffffffffffffff) = SUB vddc(0x10000000000000000000000000000000000000000) vdd6(0x1)
0xddf: vddf = AND v69b vddd(0xffffffffffffffffffffffffffffffffffffffff)
0xde0: vde0 = ISZERO vddf
0xde1: vde1 = ISZERO vde0
0xde2: vde2(0xdea) = CONST 
0xde5: JUMPI vde2(0xdea) vde1
----------------------------------

Begin block 0xde6
prev = {'0xdd5'}, next = {}
----------------------------------
Block 0xde6
0xde6: vde6(0x0) = CONST 
0xde9: REVERT vde6(0x0) vde6(0x0)
----------------------------------

Begin block 0xdea
prev = {'0xdd5'}, next = {'0xe4f'}
----------------------------------
Block 0xdea
0xdeb: vdeb(0x0) = CONST 
0xded: vded = SLOAD vdeb(0x0)
0xdee: vdee(0x1) = CONST 
0xdf0: vdf0(0xa0) = CONST 
0xdf2: vdf2(0x2) = CONST 
0xdf4: vdf4(0x10000000000000000000000000000000000000000) = EXP vdf2(0x2) vdf0(0xa0)
0xdf5: vdf5(0xffffffffffffffffffffffffffffffffffffffff) = SUB vdf4(0x10000000000000000000000000000000000000000) vdee(0x1)
0xdf8: vdf8 = AND v69b vdf5(0xffffffffffffffffffffffffffffffffffffffff)
0xdfa: vdfa = AND vded vdf5(0xffffffffffffffffffffffffffffffffffffffff)
0xdfb: vdfb(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0xe1c: ve1c(0x40) = CONST 
0xe1e: ve1e = MLOAD ve1c(0x40)
0xe1f: ve1f(0x40) = CONST 
0xe21: ve21 = MLOAD ve1f(0x40)
0xe24: ve24 = SUB ve1e ve21
0xe26: LOG3 ve21 ve24 vdfb(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) vdfa vdf8
0xe27: ve27(0x0) = CONST 
0xe2a: ve2a = SLOAD ve27(0x0)
0xe2b: ve2b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xe40: ve40(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT ve2b(0xffffffffffffffffffffffffffffffffffffffff)
0xe41: ve41 = AND ve40(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) ve2a
0xe42: ve42(0x1) = CONST 
0xe44: ve44(0xa0) = CONST 
0xe46: ve46(0x2) = CONST 
0xe48: ve48(0x10000000000000000000000000000000000000000) = EXP ve46(0x2) ve44(0xa0)
0xe49: ve49(0xffffffffffffffffffffffffffffffffffffffff) = SUB ve48(0x10000000000000000000000000000000000000000) ve42(0x1)
0xe4b: ve4b = AND v69b ve49(0xffffffffffffffffffffffffffffffffffffffff)
0xe4c: ve4c = OR ve4b ve41
0xe4e: SSTORE ve27(0x0) ve4c
----------------------------------

Begin block 0xe4f
prev = {'0xdea'}, next = {'0xe50'}
----------------------------------
Block 0xe4f
----------------------------------

Begin block 0xe50
prev = {'0xe4f'}, next = {'0x1670x681'}
----------------------------------
Block 0xe50
0xe52: JUMP v68d(0x167)
----------------------------------

Begin block 0xe53
prev = {'0x6c6'}, next = {'0xe55'}
----------------------------------
Block 0xe53
0xe54: ve54 = TIMESTAMP 
----------------------------------

Begin block 0xe55
prev = {'0xe53'}, next = {'0x6d1'}
----------------------------------
Block 0xe55
0xe57: JUMP v6ca(0x6d1)
----------------------------------

Begin block 0xe58
prev = {}, next = {'0xe6f', '0xe67'}
----------------------------------
function 0xe58(ve58arg0, ve58arg1)
Block 0xe58
0xe59: ve59(0x0) = CONST 
0xe5b: ve5b(0x5ebe9250) = CONST 
0xe61: ve61 = LT ve58arg0 ve5b(0x5ebe9250)
0xe62: ve62 = ISZERO ve61
0xe63: ve63(0xe6f) = CONST 
0xe66: JUMPI ve63(0xe6f) ve62
----------------------------------

Begin block 0xe67
prev = {'0xe58'}, next = {'0xb810xe58'}
----------------------------------
Block 0xe67
0xe68: ve68(0x3e8) = CONST 
0xe6b: ve6b(0xb81) = CONST 
0xe6e: JUMP ve6b(0xb81)
----------------------------------

Begin block 0xe6f
prev = {'0xe58'}, next = {'0xe84', '0xe7c'}
----------------------------------
Block 0xe6f
0xe70: ve70(0x5ee0d950) = CONST 
0xe76: ve76 = LT ve58arg0 ve70(0x5ee0d950)
0xe77: ve77 = ISZERO ve76
0xe78: ve78(0xe84) = CONST 
0xe7b: JUMPI ve78(0xe84) ve77
----------------------------------

Begin block 0xe7c
prev = {'0xe6f'}, next = {'0xb810xe58'}
----------------------------------
Block 0xe7c
0xe7d: ve7d(0x2bc) = CONST 
0xe80: ve80(0xb81) = CONST 
0xe83: JUMP ve80(0xb81)
----------------------------------

Begin block 0xe84
prev = {'0xe6f'}, next = {'0xe99', '0xe91'}
----------------------------------
Block 0xe84
0xe85: ve85(0x5f0dac50) = CONST 
0xe8b: ve8b = LT ve58arg0 ve85(0x5f0dac50)
0xe8c: ve8c = ISZERO ve8b
0xe8d: ve8d(0xe99) = CONST 
0xe90: JUMPI ve8d(0xe99) ve8c
----------------------------------

Begin block 0xe91
prev = {'0xe84'}, next = {'0xb810xe58'}
----------------------------------
Block 0xe91
0xe92: ve92(0x1f4) = CONST 
0xe95: ve95(0xb81) = CONST 
0xe98: JUMP ve95(0xb81)
----------------------------------

Begin block 0xe99
prev = {'0xe84'}, next = {'0xeae', '0xea6'}
----------------------------------
Block 0xe99
0xe9a: ve9a(0x5f353950) = CONST 
0xea0: vea0 = LT ve58arg0 ve9a(0x5f353950)
0xea1: vea1 = ISZERO vea0
0xea2: vea2(0xeae) = CONST 
0xea5: JUMPI vea2(0xeae) vea1
----------------------------------

Begin block 0xea6
prev = {'0xe99'}, next = {'0xb810xe58'}
----------------------------------
Block 0xea6
0xea7: vea7(0x12c) = CONST 
0xeaa: veaa(0xb81) = CONST 
0xead: JUMP veaa(0xb81)
----------------------------------

Begin block 0xeae
prev = {'0xe99'}, next = {'0xeaf'}
----------------------------------
Block 0xeae
----------------------------------

Begin block 0xeaf
prev = {'0xeae'}, next = {'0xeb0'}
----------------------------------
Block 0xeaf
----------------------------------

Begin block 0xeb0
prev = {'0xeaf'}, next = {'0xeb1'}
----------------------------------
Block 0xeb0
----------------------------------

Begin block 0xeb1
prev = {'0xeb0'}, next = {'0xeb5'}
----------------------------------
Block 0xeb1
0xeb3: veb3(0xc8) = CONST 
----------------------------------

Begin block 0xeb5
prev = {'0xeb1'}, next = {}
----------------------------------
Block 0xeb5
0xeb9: RETURNPRIVATE ve58arg1 veb3(0xc8)
----------------------------------

Begin block 0xeba
prev = {}, next = {'0xec5', '0xec6'}
----------------------------------
function 0xeba(vebaarg0, vebaarg1, vebaarg2)
Block 0xeba
0xebb: vebb(0x0) = CONST 
0xebf: vebf = GT vebaarg0 vebaarg1
0xec0: vec0 = ISZERO vebf
0xec1: vec1(0xec6) = CONST 
0xec4: JUMPI vec1(0xec6) vec0
----------------------------------

Begin block 0xec5
prev = {'0xeba'}, next = {}
----------------------------------
Block 0xec5
0xec5: THROW 
----------------------------------

Begin block 0xec6
prev = {'0xeba'}, next = {'0xecb'}
----------------------------------
Block 0xec6
0xeca: veca = SUB vebaarg1 vebaarg0
----------------------------------

Begin block 0xecb
prev = {'0xec6'}, next = {}
----------------------------------
Block 0xecb
0xed0: RETURNPRIVATE vebaarg2 veca
----------------------------------

Begin block 0xed1
prev = {}, next = {'0xee0', '0xedf'}
----------------------------------
function 0xed1(ved1arg0, ved1arg1, ved1arg2)
Block 0xed1
0xed2: ved2(0x0) = CONST 
0xed6: ved6 = ADD ved1arg0 ved1arg1
0xed9: ved9 = LT ved6 ved1arg1
0xeda: veda = ISZERO ved9
0xedb: vedb(0xee0) = CONST 
0xede: JUMPI vedb(0xee0) veda
----------------------------------

Begin block 0xedf
prev = {'0xed1'}, next = {}
----------------------------------
Block 0xedf
0xedf: THROW 
----------------------------------

Begin block 0xee0
prev = {'0xed1'}, next = {'0xee4'}
----------------------------------
Block 0xee0
----------------------------------

Begin block 0xee4
prev = {'0xee0'}, next = {}
----------------------------------
Block 0xee4
0xeea: RETURNPRIVATE ved1arg2 ved6
----------------------------------

Begin block 0xf41
prev = {'0xb'}, next = {}
----------------------------------
Block 0xf41
0xf42: vf42(0x16a) = CONST 
0xf43: CALLPRIVATE vf42(0x16a)
----------------------------------

Begin block 0xf44
prev = {'0x3e'}, next = {}
----------------------------------
Block 0xf44
0xf45: vf45(0x1f5) = CONST 
0xf46: CALLPRIVATE vf45(0x1f5)
----------------------------------

Begin block 0xf47
prev = {'0x49'}, next = {}
----------------------------------
Block 0xf47
0xf48: vf48(0x22b) = CONST 
0xf49: CALLPRIVATE vf48(0x22b)
----------------------------------

Begin block 0xf4a
prev = {'0x54'}, next = {}
----------------------------------
Block 0xf4a
0xf4b: vf4b(0x250) = CONST 
0xf4c: CALLPRIVATE vf4b(0x250)
----------------------------------

Begin block 0xf4d
prev = {'0x5f'}, next = {}
----------------------------------
Block 0xf4d
0xf4e: vf4e(0x275) = CONST 
0xf4f: CALLPRIVATE vf4e(0x275)
----------------------------------

Begin block 0xf50
prev = {'0x6a'}, next = {}
----------------------------------
Block 0xf50
0xf51: vf51(0x29a) = CONST 
0xf52: CALLPRIVATE vf51(0x29a)
----------------------------------

Begin block 0xf53
prev = {'0x10f', '0x75'}, next = {}
----------------------------------
Block 0xf53
0xf54: vf54(0x2d6) = CONST 
0xf55: CALLPRIVATE vf54(0x2d6)
----------------------------------

Begin block 0xf56
prev = {'0x80'}, next = {}
----------------------------------
Block 0xf56
0xf57: vf57(0x305) = CONST 
0xf58: CALLPRIVATE vf57(0x305)
----------------------------------

Begin block 0xf59
prev = {'0x8b'}, next = {}
----------------------------------
Block 0xf59
0xf5a: vf5a(0x32a) = CONST 
0xf5b: CALLPRIVATE vf5a(0x32a)
----------------------------------

Begin block 0xf5c
prev = {'0x96'}, next = {}
----------------------------------
Block 0xf5c
0xf5d: vf5d(0x34f) = CONST 
0xf5e: CALLPRIVATE vf5d(0x34f)
----------------------------------

Begin block 0xf5f
prev = {'0xa1'}, next = {}
----------------------------------
Block 0xf5f
0xf60: vf60(0x374) = CONST 
0xf61: CALLPRIVATE vf60(0x374)
----------------------------------

Begin block 0xf62
prev = {'0xac'}, next = {}
----------------------------------
Block 0xf62
0xf63: vf63(0x389) = CONST 
0xf64: CALLPRIVATE vf63(0x389)
----------------------------------

Begin block 0xf65
prev = {'0xb7'}, next = {}
----------------------------------
Block 0xf65
0xf66: vf66(0x3ae) = CONST 
0xf67: CALLPRIVATE vf66(0x3ae)
----------------------------------

Begin block 0xf68
prev = {'0xc2'}, next = {}
----------------------------------
Block 0xf68
0xf69: vf69(0x3d3) = CONST 
0xf6a: CALLPRIVATE vf69(0x3d3)
----------------------------------

Begin block 0xf6b
prev = {'0xcd'}, next = {}
----------------------------------
Block 0xf6b
0xf6c: vf6c(0x409) = CONST 
0xf6d: CALLPRIVATE vf6c(0x409)
----------------------------------

Begin block 0xf6e
prev = {'0xd8'}, next = {}
----------------------------------
Block 0xf6e
0xf6f: vf6f(0x43a) = CONST 
0xf70: CALLPRIVATE vf6f(0x43a)
----------------------------------

Begin block 0xf71
prev = {'0xe3'}, next = {}
----------------------------------
Block 0xf71
0xf72: vf72(0x45f) = CONST 
0xf73: CALLPRIVATE vf72(0x45f)
----------------------------------

Begin block 0xf74
prev = {'0xee'}, next = {}
----------------------------------
Block 0xf74
0xf75: vf75(0x486) = CONST 
0xf76: CALLPRIVATE vf75(0x486)
----------------------------------

Begin block 0xf77
prev = {'0xf9'}, next = {}
----------------------------------
Block 0xf77
0xf78: vf78(0x4b5) = CONST 
0xf79: CALLPRIVATE vf78(0x4b5)
----------------------------------

Begin block 0xf7a
prev = {'0x104'}, next = {}
----------------------------------
Block 0xf7a
0xf7b: vf7b(0x540) = CONST 
0xf7c: CALLPRIVATE vf7b(0x540)
----------------------------------

Begin block 0xf7d
prev = {'0x11a'}, next = {}
----------------------------------
Block 0xf7d
0xf7e: vf7e(0x5a5) = CONST 
0xf7f: CALLPRIVATE vf7e(0x5a5)
----------------------------------

Begin block 0xf80
prev = {'0x125'}, next = {}
----------------------------------
Block 0xf80
0xf81: vf81(0x5db) = CONST 
0xf82: CALLPRIVATE vf81(0x5db)
----------------------------------

Begin block 0xf83
prev = {'0x130'}, next = {}
----------------------------------
Block 0xf83
0xf84: vf84(0x612) = CONST 
0xf85: CALLPRIVATE vf84(0x612)
----------------------------------

Begin block 0xf86
prev = {'0x13b'}, next = {}
----------------------------------
Block 0xf86
0xf87: vf87(0x637) = CONST 
0xf88: CALLPRIVATE vf87(0x637)
----------------------------------

Begin block 0xf89
prev = {'0x146'}, next = {}
----------------------------------
Block 0xf89
0xf8a: vf8a(0x65c) = CONST 
0xf8b: CALLPRIVATE vf8a(0x65c)
----------------------------------

Begin block 0xf8c
prev = {'0x151'}, next = {}
----------------------------------
Block 0xf8c
0xf8d: vf8d(0x681) = CONST 
0xf8e: CALLPRIVATE vf8d(0x681)
----------------------------------
