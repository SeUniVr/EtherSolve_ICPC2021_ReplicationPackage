
Begin block 0x0
prev = {}, next = {'0x10', '0xc'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x1a', '0x5e5'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x5d1: v5d1(0x5e5) = CONST 
0x5d2: JUMPI v5d1(0x5e5) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x66', '0x2b'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x313ce567) = CONST 
0x26: v26 = GT v21(0x313ce567) v1f
0x27: v27(0x66) = CONST 
0x2a: JUMPI v27(0x66) v26
----------------------------------

Begin block 0x2b
prev = {'0x1a'}, next = {'0x5f4', '0x36'}
----------------------------------
Block 0x2b
0x2c: v2c(0x313ce567) = CONST 
0x31: v31 = EQ v2c(0x313ce567) v1f
0x5d3: v5d3(0x5f4) = CONST 
0x5d4: JUMPI v5d3(0x5f4) v31
----------------------------------

Begin block 0x36
prev = {'0x2b'}, next = {'0x41', '0x5f7'}
----------------------------------
Block 0x36
0x37: v37(0x70a08231) = CONST 
0x3c: v3c = EQ v37(0x70a08231) v1f
0x5d5: v5d5(0x5f7) = CONST 
0x5d6: JUMPI v5d5(0x5f7) v3c
----------------------------------

Begin block 0x41
prev = {'0x36'}, next = {'0x5fa', '0x4c'}
----------------------------------
Block 0x41
0x42: v42(0x95d89b41) = CONST 
0x47: v47 = EQ v42(0x95d89b41) v1f
0x5d7: v5d7(0x5fa) = CONST 
0x5d8: JUMPI v5d7(0x5fa) v47
----------------------------------

Begin block 0x4c
prev = {'0x41'}, next = {'0x57', '0x5fd'}
----------------------------------
Block 0x4c
0x4d: v4d(0xa9059cbb) = CONST 
0x52: v52 = EQ v4d(0xa9059cbb) v1f
0x5d9: v5d9(0x5fd) = CONST 
0x5da: JUMPI v5d9(0x5fd) v52
----------------------------------

Begin block 0x57
prev = {'0x4c'}, next = {'0x600', '0x62'}
----------------------------------
Block 0x57
0x58: v58(0xdd62ed3e) = CONST 
0x5d: v5d = EQ v58(0xdd62ed3e) v1f
0x5db: v5db(0x600) = CONST 
0x5dc: JUMPI v5db(0x600) v5d
----------------------------------

Begin block 0x62
prev = {'0x57'}, next = {'0x930x0'}
----------------------------------
Block 0x62
0x62: v62(0x93) = CONST 
0x65: JUMP v62(0x93)
----------------------------------

Begin block 0x66
prev = {'0x1a'}, next = {'0x72', '0x5e8'}
----------------------------------
Block 0x66
0x68: v68(0x6fdde03) = CONST 
0x6d: v6d = EQ v68(0x6fdde03) v1f
0x5dd: v5dd(0x5e8) = CONST 
0x5de: JUMPI v5dd(0x5e8) v6d
----------------------------------

Begin block 0x72
prev = {'0x66'}, next = {'0x7d', '0x5eb'}
----------------------------------
Block 0x72
0x73: v73(0x95ea7b3) = CONST 
0x78: v78 = EQ v73(0x95ea7b3) v1f
0x5df: v5df(0x5eb) = CONST 
0x5e0: JUMPI v5df(0x5eb) v78
----------------------------------

Begin block 0x7d
prev = {'0x72'}, next = {'0x88', '0x5ee'}
----------------------------------
Block 0x7d
0x7e: v7e(0x18160ddd) = CONST 
0x83: v83 = EQ v7e(0x18160ddd) v1f
0x5e1: v5e1(0x5ee) = CONST 
0x5e2: JUMPI v5e1(0x5ee) v83
----------------------------------

Begin block 0x88
prev = {'0x7d'}, next = {'0x5f1', '0x5e5'}
----------------------------------
Block 0x88
0x89: v89(0x23b872dd) = CONST 
0x8e: v8e = EQ v89(0x23b872dd) v1f
0x5e3: v5e3(0x5f1) = CONST 
0x5e4: JUMPI v5e3(0x5f1) v8e
----------------------------------

Begin block 0x93
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x93
0x94: v94(0x0) = CONST 
0x97: REVERT v94(0x0) v94(0x0)
----------------------------------

Begin block 0x930x0
prev = {'0x5e5', '0x62'}, next = {}
----------------------------------
Block 0x930x0
0x940x0: v094(0x0) = CONST 
0x970x0: REVERT v094(0x0) v094(0x0)
----------------------------------

Begin block 0x98
prev = {}, next = {'0x24b'}
----------------------------------
function name()()
Block 0x98
0x99: v99(0xa0) = CONST 
0x9c: v9c(0x24b) = CONST 
0x9f: JUMP v9c(0x24b)
----------------------------------

Begin block 0xa00x98
prev = {'0x24b'}, next = {'0xc20x98'}
----------------------------------
Block 0xa00x98
0xa10x98: v98a1(0x40) = CONST 
0xa40x98: v98a4 = MLOAD v98a1(0x40)
0xa50x98: v98a5(0x20) = CONST 
0xa90x98: MSTORE v98a4 v98a5(0x20)
0xab0x98: v98ab = MLOAD v24e
0xae0x98: v98ae = ADD v98a4 v98a5(0x20)
0xaf0x98: MSTORE v98ae v98ab
0xb10x98: v98b1 = MLOAD v24e
0xb80x98: v98b8 = ADD v98a4 v98a1(0x40)
0xbb0x98: v98bb = ADD v24e v98a5(0x20)
0xc00x98: v98c0(0x0) = CONST 
----------------------------------

Begin block 0xa00x1e9
prev = {'0x45d'}, next = {'0xc20x1e9'}
----------------------------------
Block 0xa00x1e9
0xa10x1e9: v1e9a1(0x40) = CONST 
0xa40x1e9: v1e9a4 = MLOAD v1e9a1(0x40)
0xa50x1e9: v1e9a5(0x20) = CONST 
0xa90x1e9: MSTORE v1e9a4 v1e9a5(0x20)
0xab0x1e9: v1e9ab = MLOAD v460
0xae0x1e9: v1e9ae = ADD v1e9a4 v1e9a5(0x20)
0xaf0x1e9: MSTORE v1e9ae v1e9ab
0xb10x1e9: v1e9b1 = MLOAD v460
0xb80x1e9: v1e9b8 = ADD v1e9a4 v1e9a1(0x40)
0xbb0x1e9: v1e9bb = ADD v460 v1e9a5(0x20)
0xc00x1e9: v1e9c0(0x0) = CONST 
----------------------------------

Begin block 0xc20x98
prev = {'0xa00x98', '0xcb0x98'}, next = {'0xda0x98', '0xcb0x98'}
----------------------------------
Block 0xc20x98
0xc20x98_0x0: vc298_0 = PHI v98c0(0x0) v98d5
0xc50x98: v98c5 = LT vc298_0 v98b1
0xc60x98: v98c6 = ISZERO v98c5
0xc70x98: v98c7(0xda) = CONST 
0xca0x98: JUMPI v98c7(0xda) v98c6
----------------------------------

Begin block 0xc20x1e9
prev = {'0xcb0x1e9', '0xa00x1e9'}, next = {'0xcb0x1e9', '0xda0x1e9'}
----------------------------------
Block 0xc20x1e9
0xc20x1e9_0x0: vc21e9_0 = PHI v1e9c0(0x0) v1e9d5
0xc50x1e9: v1e9c5 = LT vc21e9_0 v1e9b1
0xc60x1e9: v1e9c6 = ISZERO v1e9c5
0xc70x1e9: v1e9c7(0xda) = CONST 
0xca0x1e9: JUMPI v1e9c7(0xda) v1e9c6
----------------------------------

Begin block 0xcb0x98
prev = {'0xc20x98'}, next = {'0xc20x98'}
----------------------------------
Block 0xcb0x98
0xcb0x98_0x0: vcb98_0 = PHI v98c0(0x0) v98d5
0xcd0x98: v98cd = ADD vcb98_0 v98bb
0xce0x98: v98ce = MLOAD v98cd
0xd10x98: v98d1 = ADD vcb98_0 v98b8
0xd20x98: MSTORE v98d1 v98ce
0xd30x98: v98d3(0x20) = CONST 
0xd50x98: v98d5 = ADD v98d3(0x20) vcb98_0
0xd60x98: v98d6(0xc2) = CONST 
0xd90x98: JUMP v98d6(0xc2)
----------------------------------

Begin block 0xcb0x1e9
prev = {'0xc20x1e9'}, next = {'0xc20x1e9'}
----------------------------------
Block 0xcb0x1e9
0xcb0x1e9_0x0: vcb1e9_0 = PHI v1e9c0(0x0) v1e9d5
0xcd0x1e9: v1e9cd = ADD vcb1e9_0 v1e9bb
0xce0x1e9: v1e9ce = MLOAD v1e9cd
0xd10x1e9: v1e9d1 = ADD vcb1e9_0 v1e9b8
0xd20x1e9: MSTORE v1e9d1 v1e9ce
0xd30x1e9: v1e9d3(0x20) = CONST 
0xd50x1e9: v1e9d5 = ADD v1e9d3(0x20) vcb1e9_0
0xd60x1e9: v1e9d6(0xc2) = CONST 
0xd90x1e9: JUMP v1e9d6(0xc2)
----------------------------------

Begin block 0xda0x98
prev = {'0xc20x98'}, next = {'0xee0x98', '0x1070x98'}
----------------------------------
Block 0xda0x98
0xe30x98: v98e3 = ADD v98b1 v98b8
0xe50x98: v98e5(0x1f) = CONST 
0xe70x98: v98e7 = AND v98e5(0x1f) v98b1
0xe90x98: v98e9 = ISZERO v98e7
0xea0x98: v98ea(0x107) = CONST 
0xed0x98: JUMPI v98ea(0x107) v98e9
----------------------------------

Begin block 0xda0x1e9
prev = {'0xc20x1e9'}, next = {'0xee0x1e9', '0x1070x1e9'}
----------------------------------
Block 0xda0x1e9
0xe30x1e9: v1e9e3 = ADD v1e9b1 v1e9b8
0xe50x1e9: v1e9e5(0x1f) = CONST 
0xe70x1e9: v1e9e7 = AND v1e9e5(0x1f) v1e9b1
0xe90x1e9: v1e9e9 = ISZERO v1e9e7
0xea0x1e9: v1e9ea(0x107) = CONST 
0xed0x1e9: JUMPI v1e9ea(0x107) v1e9e9
----------------------------------

Begin block 0xee0x98
prev = {'0xda0x98'}, next = {'0x1070x98'}
----------------------------------
Block 0xee0x98
0xf00x98: v98f0 = SUB v98e3 v98e7
0xf20x98: v98f2 = MLOAD v98f0
0xf30x98: v98f3(0x1) = CONST 
0xf60x98: v98f6(0x20) = CONST 
0xf80x98: v98f8 = SUB v98f6(0x20) v98e7
0xf90x98: v98f9(0x100) = CONST 
0xfc0x98: v98fc = EXP v98f9(0x100) v98f8
0xfd0x98: v98fd = SUB v98fc v98f3(0x1)
0xfe0x98: v98fe = NOT v98fd
0xff0x98: v98ff = AND v98fe v98f2
0x1010x98: MSTORE v98f0 v98ff
0x1020x98: v98102(0x20) = CONST 
0x1040x98: v98104 = ADD v98102(0x20) v98f0
----------------------------------

Begin block 0xee0x1e9
prev = {'0xda0x1e9'}, next = {'0x1070x1e9'}
----------------------------------
Block 0xee0x1e9
0xf00x1e9: v1e9f0 = SUB v1e9e3 v1e9e7
0xf20x1e9: v1e9f2 = MLOAD v1e9f0
0xf30x1e9: v1e9f3(0x1) = CONST 
0xf60x1e9: v1e9f6(0x20) = CONST 
0xf80x1e9: v1e9f8 = SUB v1e9f6(0x20) v1e9e7
0xf90x1e9: v1e9f9(0x100) = CONST 
0xfc0x1e9: v1e9fc = EXP v1e9f9(0x100) v1e9f8
0xfd0x1e9: v1e9fd = SUB v1e9fc v1e9f3(0x1)
0xfe0x1e9: v1e9fe = NOT v1e9fd
0xff0x1e9: v1e9ff = AND v1e9fe v1e9f2
0x1010x1e9: MSTORE v1e9f0 v1e9ff
0x1020x1e9: v1e9102(0x20) = CONST 
0x1040x1e9: v1e9104 = ADD v1e9102(0x20) v1e9f0
----------------------------------

Begin block 0x1070x98
prev = {'0xee0x98', '0xda0x98'}, next = {}
----------------------------------
Block 0x1070x98
0x1070x98_0x1: v10798_1 = PHI v98e3 v98104
0x10d0x98: v9810d(0x40) = CONST 
0x10f0x98: v9810f = MLOAD v9810d(0x40)
0x1120x98: v98112 = SUB v10798_1 v9810f
0x1140x98: RETURN v9810f v98112
----------------------------------

Begin block 0x1070x1e9
prev = {'0xee0x1e9', '0xda0x1e9'}, next = {}
----------------------------------
Block 0x1070x1e9
0x1070x1e9_0x1: v1071e9_1 = PHI v1e9e3 v1e9104
0x10d0x1e9: v1e910d(0x40) = CONST 
0x10f0x1e9: v1e910f = MLOAD v1e910d(0x40)
0x1120x1e9: v1e9112 = SUB v1071e9_1 v1e910f
0x1140x1e9: RETURN v1e910f v1e9112
----------------------------------

Begin block 0x115
prev = {}, next = {'0x12b', '0x127'}
----------------------------------
function approve(address,uint256)()
Block 0x115
0x116: v116(0x141) = CONST 
0x119: v119(0x4) = CONST 
0x11c: v11c = CALLDATASIZE 
0x11d: v11d = SUB v11c v119(0x4)
0x11e: v11e(0x40) = CONST 
0x121: v121 = LT v11d v11e(0x40)
0x122: v122 = ISZERO v121
0x123: v123(0x12b) = CONST 
0x126: JUMPI v123(0x12b) v122
----------------------------------

Begin block 0x127
prev = {'0x115'}, next = {}
----------------------------------
Block 0x127
0x127: v127(0x0) = CONST 
0x12a: REVERT v127(0x0) v127(0x0)
----------------------------------

Begin block 0x12b
prev = {'0x115'}, next = {'0x271'}
----------------------------------
Block 0x12b
0x12d: v12d(0x1) = CONST 
0x12f: v12f(0x1) = CONST 
0x131: v131(0xa0) = CONST 
0x133: v133(0x10000000000000000000000000000000000000000) = SHL v131(0xa0) v12f(0x1)
0x134: v134(0xffffffffffffffffffffffffffffffffffffffff) = SUB v133(0x10000000000000000000000000000000000000000) v12d(0x1)
0x136: v136 = CALLDATALOAD v119(0x4)
0x137: v137 = AND v136 v134(0xffffffffffffffffffffffffffffffffffffffff)
0x139: v139(0x20) = CONST 
0x13b: v13b = ADD v139(0x20) v119(0x4)
0x13c: v13c = CALLDATALOAD v13b
0x13d: v13d(0x271) = CONST 
0x140: JUMP v13d(0x271)
----------------------------------

Begin block 0x1410x115
prev = {'0x271'}, next = {}
----------------------------------
Block 0x1410x115
0x1420x115: v115142(0x40) = CONST 
0x1450x115: v115145 = MLOAD v115142(0x40)
0x1470x115: v115147 = ISZERO v2d0(0x1)
0x1480x115: v115148 = ISZERO v115147
0x14a0x115: MSTORE v115145 v115148
0x14b0x115: v11514b = MLOAD v115142(0x40)
0x14f0x115: v11514f = SUB v115145 v11514b
0x1500x115: v115150(0x20) = CONST 
0x1520x115: v115152 = ADD v115150(0x20) v11514f
0x1540x115: RETURN v11514b v115152
----------------------------------

Begin block 0x1410x16f
prev = {'0x3dc'}, next = {}
----------------------------------
Block 0x1410x16f
0x1420x16f: v16f142(0x40) = CONST 
0x1450x16f: v16f145 = MLOAD v16f142(0x40)
0x1470x16f: v16f147 = ISZERO v435(0x1)
0x1480x16f: v16f148 = ISZERO v16f147
0x14a0x16f: MSTORE v16f145 v16f148
0x14b0x16f: v16f14b = MLOAD v16f142(0x40)
0x14f0x16f: v16f14f = SUB v16f145 v16f14b
0x1500x16f: v16f150(0x20) = CONST 
0x1520x16f: v16f152 = ADD v16f150(0x20) v16f14f
0x1540x16f: RETURN v16f14b v16f152
----------------------------------

Begin block 0x1410x1f1
prev = {'0x4eb'}, next = {}
----------------------------------
Block 0x1410x1f1
0x1420x1f1: v1f1142(0x40) = CONST 
0x1450x1f1: v1f1145 = MLOAD v1f1142(0x40)
0x1470x1f1: v1f1147 = ISZERO v542(0x1)
0x1480x1f1: v1f1148 = ISZERO v1f1147
0x14a0x1f1: MSTORE v1f1145 v1f1148
0x14b0x1f1: v1f114b = MLOAD v1f1142(0x40)
0x14f0x1f1: v1f114f = SUB v1f1145 v1f114b
0x1500x1f1: v1f1150(0x20) = CONST 
0x1520x1f1: v1f1152 = ADD v1f1150(0x20) v1f114f
0x1540x1f1: RETURN v1f114b v1f1152
----------------------------------

Begin block 0x155
prev = {}, next = {'0x2d7'}
----------------------------------
function totalSupply()()
Block 0x155
0x156: v156(0x15d) = CONST 
0x159: v159(0x2d7) = CONST 
0x15c: JUMP v159(0x2d7)
----------------------------------

Begin block 0x15d0x155
prev = {'0x2d7'}, next = {}
----------------------------------
Block 0x15d0x155
0x15e0x155: v15515e(0x40) = CONST 
0x1610x155: v155161 = MLOAD v15515e(0x40)
0x1640x155: MSTORE v155161 v2da
0x1650x155: v155165 = MLOAD v15515e(0x40)
0x1690x155: v155169 = SUB v155161 v155165
0x16a0x155: v15516a(0x20) = CONST 
0x16c0x155: v15516c = ADD v15516a(0x20) v155169
0x16e0x155: RETURN v155165 v15516c
----------------------------------

Begin block 0x15d0x1c3
prev = {'0x442'}, next = {}
----------------------------------
Block 0x15d0x1c3
0x15e0x1c3: v1c315e(0x40) = CONST 
0x1610x1c3: v1c3161 = MLOAD v1c315e(0x40)
0x1640x1c3: MSTORE v1c3161 v45a
0x1650x1c3: v1c3165 = MLOAD v1c315e(0x40)
0x1690x1c3: v1c3169 = SUB v1c3161 v1c3165
0x16a0x1c3: v1c316a(0x20) = CONST 
0x16c0x1c3: v1c316c = ADD v1c316a(0x20) v1c3169
0x16e0x1c3: RETURN v1c3165 v1c316c
----------------------------------

Begin block 0x15d0x21d
prev = {'0x549'}, next = {}
----------------------------------
Block 0x15d0x21d
0x15e0x21d: v21d15e(0x40) = CONST 
0x1610x21d: v21d161 = MLOAD v21d15e(0x40)
0x1640x21d: MSTORE v21d161 v571
0x1650x21d: v21d165 = MLOAD v21d15e(0x40)
0x1690x21d: v21d169 = SUB v21d161 v21d165
0x16a0x21d: v21d16a(0x20) = CONST 
0x16c0x21d: v21d16c = ADD v21d16a(0x20) v21d169
0x16e0x21d: RETURN v21d165 v21d16c
----------------------------------

Begin block 0x16f
prev = {}, next = {'0x181', '0x185'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x16f
0x170: v170(0x141) = CONST 
0x173: v173(0x4) = CONST 
0x176: v176 = CALLDATASIZE 
0x177: v177 = SUB v176 v173(0x4)
0x178: v178(0x60) = CONST 
0x17b: v17b = LT v177 v178(0x60)
0x17c: v17c = ISZERO v17b
0x17d: v17d(0x185) = CONST 
0x180: JUMPI v17d(0x185) v17c
----------------------------------

Begin block 0x181
prev = {'0x16f'}, next = {}
----------------------------------
Block 0x181
0x181: v181(0x0) = CONST 
0x184: REVERT v181(0x0) v181(0x0)
----------------------------------

Begin block 0x185
prev = {'0x16f'}, next = {'0x2dd'}
----------------------------------
Block 0x185
0x187: v187(0x1) = CONST 
0x189: v189(0x1) = CONST 
0x18b: v18b(0xa0) = CONST 
0x18d: v18d(0x10000000000000000000000000000000000000000) = SHL v18b(0xa0) v189(0x1)
0x18e: v18e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v18d(0x10000000000000000000000000000000000000000) v187(0x1)
0x190: v190 = CALLDATALOAD v173(0x4)
0x192: v192 = AND v18e(0xffffffffffffffffffffffffffffffffffffffff) v190
0x194: v194(0x20) = CONST 
0x197: v197 = ADD v173(0x4) v194(0x20)
0x198: v198 = CALLDATALOAD v197
0x19b: v19b = AND v18e(0xffffffffffffffffffffffffffffffffffffffff) v198
0x19d: v19d(0x40) = CONST 
0x19f: v19f = ADD v19d(0x40) v173(0x4)
0x1a0: v1a0 = CALLDATALOAD v19f
0x1a1: v1a1(0x2dd) = CONST 
0x1a4: JUMP v1a1(0x2dd)
----------------------------------

Begin block 0x1a5
prev = {}, next = {'0x43d'}
----------------------------------
function decimals()()
Block 0x1a5
0x1a6: v1a6(0x1ad) = CONST 
0x1a9: v1a9(0x43d) = CONST 
0x1ac: JUMP v1a9(0x43d)
----------------------------------

Begin block 0x1ad
prev = {'0x43d'}, next = {}
----------------------------------
Block 0x1ad
0x1ae: v1ae(0x40) = CONST 
0x1b1: v1b1 = MLOAD v1ae(0x40)
0x1b2: v1b2(0xff) = CONST 
0x1b6: v1b6 = AND v43e(0x12) v1b2(0xff)
0x1b8: MSTORE v1b1 v1b6
0x1b9: v1b9 = MLOAD v1ae(0x40)
0x1bd: v1bd = SUB v1b1 v1b9
0x1be: v1be(0x20) = CONST 
0x1c0: v1c0 = ADD v1be(0x20) v1bd
0x1c2: RETURN v1b9 v1c0
----------------------------------

Begin block 0x1c3
prev = {}, next = {'0x1d5', '0x1d9'}
----------------------------------
function balanceOf(address)()
Block 0x1c3
0x1c4: v1c4(0x15d) = CONST 
0x1c7: v1c7(0x4) = CONST 
0x1ca: v1ca = CALLDATASIZE 
0x1cb: v1cb = SUB v1ca v1c7(0x4)
0x1cc: v1cc(0x20) = CONST 
0x1cf: v1cf = LT v1cb v1cc(0x20)
0x1d0: v1d0 = ISZERO v1cf
0x1d1: v1d1(0x1d9) = CONST 
0x1d4: JUMPI v1d1(0x1d9) v1d0
----------------------------------

Begin block 0x1d5
prev = {'0x1c3'}, next = {}
----------------------------------
Block 0x1d5
0x1d5: v1d5(0x0) = CONST 
0x1d8: REVERT v1d5(0x0) v1d5(0x0)
----------------------------------

Begin block 0x1d9
prev = {'0x1c3'}, next = {'0x442'}
----------------------------------
Block 0x1d9
0x1db: v1db = CALLDATALOAD v1c7(0x4)
0x1dc: v1dc(0x1) = CONST 
0x1de: v1de(0x1) = CONST 
0x1e0: v1e0(0xa0) = CONST 
0x1e2: v1e2(0x10000000000000000000000000000000000000000) = SHL v1e0(0xa0) v1de(0x1)
0x1e3: v1e3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1e2(0x10000000000000000000000000000000000000000) v1dc(0x1)
0x1e4: v1e4 = AND v1e3(0xffffffffffffffffffffffffffffffffffffffff) v1db
0x1e5: v1e5(0x442) = CONST 
0x1e8: JUMP v1e5(0x442)
----------------------------------

Begin block 0x1e9
prev = {}, next = {'0x45d'}
----------------------------------
function symbol()()
Block 0x1e9
0x1ea: v1ea(0xa0) = CONST 
0x1ed: v1ed(0x45d) = CONST 
0x1f0: JUMP v1ed(0x45d)
----------------------------------

Begin block 0x1f1
prev = {}, next = {'0x203', '0x207'}
----------------------------------
function transfer(address,uint256)()
Block 0x1f1
0x1f2: v1f2(0x141) = CONST 
0x1f5: v1f5(0x4) = CONST 
0x1f8: v1f8 = CALLDATASIZE 
0x1f9: v1f9 = SUB v1f8 v1f5(0x4)
0x1fa: v1fa(0x40) = CONST 
0x1fd: v1fd = LT v1f9 v1fa(0x40)
0x1fe: v1fe = ISZERO v1fd
0x1ff: v1ff(0x207) = CONST 
0x202: JUMPI v1ff(0x207) v1fe
----------------------------------

Begin block 0x203
prev = {'0x1f1'}, next = {}
----------------------------------
Block 0x203
0x203: v203(0x0) = CONST 
0x206: REVERT v203(0x0) v203(0x0)
----------------------------------

Begin block 0x207
prev = {'0x1f1'}, next = {'0x47d'}
----------------------------------
Block 0x207
0x209: v209(0x1) = CONST 
0x20b: v20b(0x1) = CONST 
0x20d: v20d(0xa0) = CONST 
0x20f: v20f(0x10000000000000000000000000000000000000000) = SHL v20d(0xa0) v20b(0x1)
0x210: v210(0xffffffffffffffffffffffffffffffffffffffff) = SUB v20f(0x10000000000000000000000000000000000000000) v209(0x1)
0x212: v212 = CALLDATALOAD v1f5(0x4)
0x213: v213 = AND v212 v210(0xffffffffffffffffffffffffffffffffffffffff)
0x215: v215(0x20) = CONST 
0x217: v217 = ADD v215(0x20) v1f5(0x4)
0x218: v218 = CALLDATALOAD v217
0x219: v219(0x47d) = CONST 
0x21c: JUMP v219(0x47d)
----------------------------------

Begin block 0x21d
prev = {}, next = {'0x22f', '0x233'}
----------------------------------
function allowance(address,address)()
Block 0x21d
0x21e: v21e(0x15d) = CONST 
0x221: v221(0x4) = CONST 
0x224: v224 = CALLDATASIZE 
0x225: v225 = SUB v224 v221(0x4)
0x226: v226(0x40) = CONST 
0x229: v229 = LT v225 v226(0x40)
0x22a: v22a = ISZERO v229
0x22b: v22b(0x233) = CONST 
0x22e: JUMPI v22b(0x233) v22a
----------------------------------

Begin block 0x22f
prev = {'0x21d'}, next = {}
----------------------------------
Block 0x22f
0x22f: v22f(0x0) = CONST 
0x232: REVERT v22f(0x0) v22f(0x0)
----------------------------------

Begin block 0x233
prev = {'0x21d'}, next = {'0x549'}
----------------------------------
Block 0x233
0x235: v235(0x1) = CONST 
0x237: v237(0x1) = CONST 
0x239: v239(0xa0) = CONST 
0x23b: v23b(0x10000000000000000000000000000000000000000) = SHL v239(0xa0) v237(0x1)
0x23c: v23c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v23b(0x10000000000000000000000000000000000000000) v235(0x1)
0x23e: v23e = CALLDATALOAD v221(0x4)
0x240: v240 = AND v23c(0xffffffffffffffffffffffffffffffffffffffff) v23e
0x242: v242(0x20) = CONST 
0x244: v244 = ADD v242(0x20) v221(0x4)
0x245: v245 = CALLDATALOAD v244
0x246: v246 = AND v245 v23c(0xffffffffffffffffffffffffffffffffffffffff)
0x247: v247(0x549) = CONST 
0x24a: JUMP v247(0x549)
----------------------------------

Begin block 0x24b
prev = {'0x98'}, next = {'0xa00x98'}
----------------------------------
Block 0x24b
0x24c: v24c(0x40) = CONST 
0x24e: v24e = MLOAD v24c(0x40)
0x250: v250(0x40) = CONST 
0x252: v252 = ADD v250(0x40) v24e
0x253: v253(0x40) = CONST 
0x255: MSTORE v253(0x40) v252
0x257: v257(0xa) = CONST 
0x25a: MSTORE v24e v257(0xa)
0x25b: v25b(0x20) = CONST 
0x25d: v25d = ADD v25b(0x20) v24e
0x25e: v25e(0x457468657265756d4a53) = CONST 
0x269: v269(0xb0) = CONST 
0x26b: v26b(0x457468657265756d4a5300000000000000000000000000000000000000000000) = SHL v269(0xb0) v25e(0x457468657265756d4a53)
0x26d: MSTORE v25d v26b(0x457468657265756d4a5300000000000000000000000000000000000000000000)
0x270: JUMP v99(0xa0)
----------------------------------

Begin block 0x271
prev = {'0x12b'}, next = {'0x1410x115'}
----------------------------------
Block 0x271
0x272: v272 = CALLER 
0x273: v273(0x0) = CONST 
0x277: MSTORE v273(0x0) v272
0x278: v278(0x2) = CONST 
0x27a: v27a(0x20) = CONST 
0x27e: MSTORE v27a(0x20) v278(0x2)
0x27f: v27f(0x40) = CONST 
0x283: v283 = SHA3 v273(0x0) v27f(0x40)
0x284: v284(0x1) = CONST 
0x286: v286(0x1) = CONST 
0x288: v288(0xa0) = CONST 
0x28a: v28a(0x10000000000000000000000000000000000000000) = SHL v288(0xa0) v286(0x1)
0x28b: v28b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v28a(0x10000000000000000000000000000000000000000) v284(0x1)
0x28d: v28d = AND v137 v28b(0xffffffffffffffffffffffffffffffffffffffff)
0x290: MSTORE v273(0x0) v28d
0x293: MSTORE v27a(0x20) v283
0x296: v296 = SHA3 v273(0x0) v27f(0x40)
0x299: SSTORE v296 v13c
0x29b: v29b = MLOAD v27f(0x40)
0x29e: MSTORE v29b v13c
0x2a0: v2a0 = MLOAD v27f(0x40)
0x2a7: v2a7(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0x2cb: v2cb = SUB v29b v2a0
0x2cc: v2cc = ADD v2cb v27a(0x20)
0x2ce: LOG3 v2a0 v2cc v2a7(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) v272 v28d
0x2d0: v2d0(0x1) = CONST 
0x2d6: JUMP v116(0x141)
----------------------------------

Begin block 0x2d7
prev = {'0x155'}, next = {'0x15d0x155'}
----------------------------------
Block 0x2d7
0x2d8: v2d8(0x0) = CONST 
0x2da: v2da = SLOAD v2d8(0x0)
0x2dc: JUMP v156(0x15d)
----------------------------------

Begin block 0x2dd
prev = {'0x185'}, next = {'0x2fe', '0x302'}
----------------------------------
Block 0x2dd
0x2de: v2de(0x1) = CONST 
0x2e0: v2e0(0x1) = CONST 
0x2e2: v2e2(0xa0) = CONST 
0x2e4: v2e4(0x10000000000000000000000000000000000000000) = SHL v2e2(0xa0) v2e0(0x1)
0x2e5: v2e5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2e4(0x10000000000000000000000000000000000000000) v2de(0x1)
0x2e7: v2e7 = AND v192 v2e5(0xffffffffffffffffffffffffffffffffffffffff)
0x2e8: v2e8(0x0) = CONST 
0x2ec: MSTORE v2e8(0x0) v2e7
0x2ed: v2ed(0x1) = CONST 
0x2ef: v2ef(0x20) = CONST 
0x2f1: MSTORE v2ef(0x20) v2ed(0x1)
0x2f2: v2f2(0x40) = CONST 
0x2f5: v2f5 = SHA3 v2e8(0x0) v2f2(0x40)
0x2f6: v2f6 = SLOAD v2f5
0x2f8: v2f8 = GT v1a0 v2f6
0x2f9: v2f9 = ISZERO v2f8
0x2fa: v2fa(0x302) = CONST 
0x2fd: JUMPI v2fa(0x302) v2f9
----------------------------------

Begin block 0x2fe
prev = {'0x2dd'}, next = {}
----------------------------------
Block 0x2fe
0x2fe: v2fe(0x0) = CONST 
0x301: REVERT v2fe(0x0) v2fe(0x0)
----------------------------------

Begin block 0x302
prev = {'0x2dd'}, next = {'0x332', '0x32e'}
----------------------------------
Block 0x302
0x303: v303(0x1) = CONST 
0x305: v305(0x1) = CONST 
0x307: v307(0xa0) = CONST 
0x309: v309(0x10000000000000000000000000000000000000000) = SHL v307(0xa0) v305(0x1)
0x30a: v30a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v309(0x10000000000000000000000000000000000000000) v303(0x1)
0x30c: v30c = AND v192 v30a(0xffffffffffffffffffffffffffffffffffffffff)
0x30d: v30d(0x0) = CONST 
0x311: MSTORE v30d(0x0) v30c
0x312: v312(0x2) = CONST 
0x314: v314(0x20) = CONST 
0x318: MSTORE v314(0x20) v312(0x2)
0x319: v319(0x40) = CONST 
0x31d: v31d = SHA3 v30d(0x0) v319(0x40)
0x31e: v31e = CALLER 
0x320: MSTORE v30d(0x0) v31e
0x323: MSTORE v314(0x20) v31d
0x325: v325 = SHA3 v30d(0x0) v319(0x40)
0x326: v326 = SLOAD v325
0x328: v328 = GT v1a0 v326
0x329: v329 = ISZERO v328
0x32a: v32a(0x332) = CONST 
0x32d: JUMPI v32a(0x332) v329
----------------------------------

Begin block 0x32e
prev = {'0x302'}, next = {}
----------------------------------
Block 0x32e
0x32e: v32e(0x0) = CONST 
0x331: REVERT v32e(0x0) v32e(0x0)
----------------------------------

Begin block 0x332
prev = {'0x302'}, next = {'0x35b'}
----------------------------------
Block 0x332
0x333: v333(0x1) = CONST 
0x335: v335(0x1) = CONST 
0x337: v337(0xa0) = CONST 
0x339: v339(0x10000000000000000000000000000000000000000) = SHL v337(0xa0) v335(0x1)
0x33a: v33a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v339(0x10000000000000000000000000000000000000000) v333(0x1)
0x33c: v33c = AND v192 v33a(0xffffffffffffffffffffffffffffffffffffffff)
0x33d: v33d(0x0) = CONST 
0x341: MSTORE v33d(0x0) v33c
0x342: v342(0x1) = CONST 
0x344: v344(0x20) = CONST 
0x346: MSTORE v344(0x20) v342(0x1)
0x347: v347(0x40) = CONST 
0x34a: v34a = SHA3 v33d(0x0) v347(0x40)
0x34b: v34b = SLOAD v34a
0x34c: v34c(0x35b) = CONST 
0x351: v351(0xffffffff) = CONST 
0x356: v356(0x574) = CONST 
0x359: v359(0x574) = AND v356(0x574) v351(0xffffffff)
0x35a: v35a_0 = CALLPRIVATE v359(0x574) v1a0 v34b v34c(0x35b)
----------------------------------

Begin block 0x35b
prev = {'0x332'}, next = {'0x398'}
----------------------------------
Block 0x35b
0x35c: v35c(0x1) = CONST 
0x35e: v35e(0x1) = CONST 
0x360: v360(0xa0) = CONST 
0x362: v362(0x10000000000000000000000000000000000000000) = SHL v360(0xa0) v35e(0x1)
0x363: v363(0xffffffffffffffffffffffffffffffffffffffff) = SUB v362(0x10000000000000000000000000000000000000000) v35c(0x1)
0x365: v365 = AND v192 v363(0xffffffffffffffffffffffffffffffffffffffff)
0x366: v366(0x0) = CONST 
0x36a: MSTORE v366(0x0) v365
0x36b: v36b(0x1) = CONST 
0x36d: v36d(0x20) = CONST 
0x371: MSTORE v36d(0x20) v36b(0x1)
0x372: v372(0x40) = CONST 
0x376: v376 = SHA3 v366(0x0) v372(0x40)
0x37a: SSTORE v376 v35a_0
0x37b: v37b(0x2) = CONST 
0x37e: MSTORE v36d(0x20) v37b(0x2)
0x381: v381 = SHA3 v366(0x0) v372(0x40)
0x382: v382 = CALLER 
0x384: MSTORE v366(0x0) v382
0x386: MSTORE v36d(0x20) v381
0x387: v387 = SHA3 v366(0x0) v372(0x40)
0x388: v388 = SLOAD v387
0x389: v389(0x398) = CONST 
0x38e: v38e(0xffffffff) = CONST 
0x393: v393(0x574) = CONST 
0x396: v396(0x574) = AND v393(0x574) v38e(0xffffffff)
0x397: v397_0 = CALLPRIVATE v396(0x574) v1a0 v388 v389(0x398)
----------------------------------

Begin block 0x398
prev = {'0x35b'}, next = {'0x3dc'}
----------------------------------
Block 0x398
0x399: v399(0x1) = CONST 
0x39b: v39b(0x1) = CONST 
0x39d: v39d(0xa0) = CONST 
0x39f: v39f(0x10000000000000000000000000000000000000000) = SHL v39d(0xa0) v39b(0x1)
0x3a0: v3a0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v39f(0x10000000000000000000000000000000000000000) v399(0x1)
0x3a3: v3a3 = AND v192 v3a0(0xffffffffffffffffffffffffffffffffffffffff)
0x3a4: v3a4(0x0) = CONST 
0x3a8: MSTORE v3a4(0x0) v3a3
0x3a9: v3a9(0x2) = CONST 
0x3ab: v3ab(0x20) = CONST 
0x3af: MSTORE v3ab(0x20) v3a9(0x2)
0x3b0: v3b0(0x40) = CONST 
0x3b4: v3b4 = SHA3 v3a4(0x0) v3b0(0x40)
0x3b5: v3b5 = CALLER 
0x3b7: MSTORE v3a4(0x0) v3b5
0x3b9: MSTORE v3ab(0x20) v3b4
0x3bc: v3bc = SHA3 v3a4(0x0) v3b0(0x40)
0x3c0: SSTORE v3bc v397_0
0x3c3: v3c3 = AND v19b v3a0(0xffffffffffffffffffffffffffffffffffffffff)
0x3c5: MSTORE v3a4(0x0) v3c3
0x3c6: v3c6(0x1) = CONST 
0x3ca: MSTORE v3ab(0x20) v3c6(0x1)
0x3cb: v3cb = SHA3 v3a4(0x0) v3b0(0x40)
0x3cc: v3cc = SLOAD v3cb
0x3cd: v3cd(0x3dc) = CONST 
0x3d2: v3d2(0xffffffff) = CONST 
0x3d7: v3d7(0x586) = CONST 
0x3da: v3da(0x586) = AND v3d7(0x586) v3d2(0xffffffff)
0x3db: v3db_0 = CALLPRIVATE v3da(0x586) v1a0 v3cc v3cd(0x3dc)
----------------------------------

Begin block 0x3dc
prev = {'0x398'}, next = {'0x1410x16f'}
----------------------------------
Block 0x3dc
0x3dd: v3dd(0x1) = CONST 
0x3df: v3df(0x1) = CONST 
0x3e1: v3e1(0xa0) = CONST 
0x3e3: v3e3(0x10000000000000000000000000000000000000000) = SHL v3e1(0xa0) v3df(0x1)
0x3e4: v3e4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3e3(0x10000000000000000000000000000000000000000) v3dd(0x1)
0x3e7: v3e7 = AND v19b v3e4(0xffffffffffffffffffffffffffffffffffffffff)
0x3e8: v3e8(0x0) = CONST 
0x3ec: MSTORE v3e8(0x0) v3e7
0x3ed: v3ed(0x1) = CONST 
0x3ef: v3ef(0x20) = CONST 
0x3f3: MSTORE v3ef(0x20) v3ed(0x1)
0x3f4: v3f4(0x40) = CONST 
0x3f9: v3f9 = SHA3 v3e8(0x0) v3f4(0x40)
0x3fd: SSTORE v3f9 v3db_0
0x3ff: v3ff = MLOAD v3f4(0x40)
0x402: MSTORE v3ff v1a0
0x404: v404 = MLOAD v3f4(0x40)
0x409: v409 = AND v192 v3e4(0xffffffffffffffffffffffffffffffffffffffff)
0x40b: v40b(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x430: v430 = SUB v3ff v404
0x431: v431 = ADD v430 v3ef(0x20)
0x433: LOG3 v404 v431 v40b(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v409 v3e7
0x435: v435(0x1) = CONST 
0x43c: JUMP v170(0x141)
----------------------------------

Begin block 0x43d
prev = {'0x1a5'}, next = {'0x1ad'}
----------------------------------
Block 0x43d
0x43e: v43e(0x12) = CONST 
0x441: JUMP v1a6(0x1ad)
----------------------------------

Begin block 0x442
prev = {'0x1d9'}, next = {'0x15d0x1c3'}
----------------------------------
Block 0x442
0x443: v443(0x1) = CONST 
0x445: v445(0x1) = CONST 
0x447: v447(0xa0) = CONST 
0x449: v449(0x10000000000000000000000000000000000000000) = SHL v447(0xa0) v445(0x1)
0x44a: v44a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v449(0x10000000000000000000000000000000000000000) v443(0x1)
0x44b: v44b = AND v44a(0xffffffffffffffffffffffffffffffffffffffff) v1e4
0x44c: v44c(0x0) = CONST 
0x450: MSTORE v44c(0x0) v44b
0x451: v451(0x1) = CONST 
0x453: v453(0x20) = CONST 
0x455: MSTORE v453(0x20) v451(0x1)
0x456: v456(0x40) = CONST 
0x459: v459 = SHA3 v44c(0x0) v456(0x40)
0x45a: v45a = SLOAD v459
0x45c: JUMP v1c4(0x15d)
----------------------------------

Begin block 0x45d
prev = {'0x1e9'}, next = {'0xa00x1e9'}
----------------------------------
Block 0x45d
0x45e: v45e(0x40) = CONST 
0x460: v460 = MLOAD v45e(0x40)
0x462: v462(0x40) = CONST 
0x464: v464 = ADD v462(0x40) v460
0x465: v465(0x40) = CONST 
0x467: MSTORE v465(0x40) v464
0x469: v469(0x4) = CONST 
0x46c: MSTORE v460 v469(0x4)
0x46d: v46d(0x20) = CONST 
0x46f: v46f = ADD v46d(0x20) v460
0x470: v470(0x45544a53) = CONST 
0x475: v475(0xe0) = CONST 
0x477: v477(0x45544a5300000000000000000000000000000000000000000000000000000000) = SHL v475(0xe0) v470(0x45544a53)
0x479: MSTORE v46f v477(0x45544a5300000000000000000000000000000000000000000000000000000000)
0x47c: JUMP v1ea(0xa0)
----------------------------------

Begin block 0x47d
prev = {'0x207'}, next = {'0x495', '0x499'}
----------------------------------
Block 0x47d
0x47e: v47e = CALLER 
0x47f: v47f(0x0) = CONST 
0x483: MSTORE v47f(0x0) v47e
0x484: v484(0x1) = CONST 
0x486: v486(0x20) = CONST 
0x488: MSTORE v486(0x20) v484(0x1)
0x489: v489(0x40) = CONST 
0x48c: v48c = SHA3 v47f(0x0) v489(0x40)
0x48d: v48d = SLOAD v48c
0x48f: v48f = GT v218 v48d
0x490: v490 = ISZERO v48f
0x491: v491(0x499) = CONST 
0x494: JUMPI v491(0x499) v490
----------------------------------

Begin block 0x495
prev = {'0x47d'}, next = {}
----------------------------------
Block 0x495
0x495: v495(0x0) = CONST 
0x498: REVERT v495(0x0) v495(0x0)
----------------------------------

Begin block 0x499
prev = {'0x47d'}, next = {'0x4b9'}
----------------------------------
Block 0x499
0x49a: v49a = CALLER 
0x49b: v49b(0x0) = CONST 
0x49f: MSTORE v49b(0x0) v49a
0x4a0: v4a0(0x1) = CONST 
0x4a2: v4a2(0x20) = CONST 
0x4a4: MSTORE v4a2(0x20) v4a0(0x1)
0x4a5: v4a5(0x40) = CONST 
0x4a8: v4a8 = SHA3 v49b(0x0) v4a5(0x40)
0x4a9: v4a9 = SLOAD v4a8
0x4aa: v4aa(0x4b9) = CONST 
0x4af: v4af(0xffffffff) = CONST 
0x4b4: v4b4(0x574) = CONST 
0x4b7: v4b7(0x574) = AND v4b4(0x574) v4af(0xffffffff)
0x4b8: v4b8_0 = CALLPRIVATE v4b7(0x574) v218 v4a9 v4aa(0x4b9)
----------------------------------

Begin block 0x4b9
prev = {'0x499'}, next = {'0x4eb'}
----------------------------------
Block 0x4b9
0x4ba: v4ba = CALLER 
0x4bb: v4bb(0x0) = CONST 
0x4bf: MSTORE v4bb(0x0) v4ba
0x4c0: v4c0(0x1) = CONST 
0x4c2: v4c2(0x20) = CONST 
0x4c4: MSTORE v4c2(0x20) v4c0(0x1)
0x4c5: v4c5(0x40) = CONST 
0x4c9: v4c9 = SHA3 v4bb(0x0) v4c5(0x40)
0x4cd: SSTORE v4c9 v4b8_0
0x4ce: v4ce(0x1) = CONST 
0x4d0: v4d0(0x1) = CONST 
0x4d2: v4d2(0xa0) = CONST 
0x4d4: v4d4(0x10000000000000000000000000000000000000000) = SHL v4d2(0xa0) v4d0(0x1)
0x4d5: v4d5(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4d4(0x10000000000000000000000000000000000000000) v4ce(0x1)
0x4d7: v4d7 = AND v213 v4d5(0xffffffffffffffffffffffffffffffffffffffff)
0x4d9: MSTORE v4bb(0x0) v4d7
0x4da: v4da = SHA3 v4bb(0x0) v4c5(0x40)
0x4db: v4db = SLOAD v4da
0x4dc: v4dc(0x4eb) = CONST 
0x4e1: v4e1(0xffffffff) = CONST 
0x4e6: v4e6(0x586) = CONST 
0x4e9: v4e9(0x586) = AND v4e6(0x586) v4e1(0xffffffff)
0x4ea: v4ea_0 = CALLPRIVATE v4e9(0x586) v218 v4db v4dc(0x4eb)
----------------------------------

Begin block 0x4eb
prev = {'0x4b9'}, next = {'0x1410x1f1'}
----------------------------------
Block 0x4eb
0x4ec: v4ec(0x1) = CONST 
0x4ee: v4ee(0x1) = CONST 
0x4f0: v4f0(0xa0) = CONST 
0x4f2: v4f2(0x10000000000000000000000000000000000000000) = SHL v4f0(0xa0) v4ee(0x1)
0x4f3: v4f3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4f2(0x10000000000000000000000000000000000000000) v4ec(0x1)
0x4f5: v4f5 = AND v213 v4f3(0xffffffffffffffffffffffffffffffffffffffff)
0x4f6: v4f6(0x0) = CONST 
0x4fa: MSTORE v4f6(0x0) v4f5
0x4fb: v4fb(0x1) = CONST 
0x4fd: v4fd(0x20) = CONST 
0x501: MSTORE v4fd(0x20) v4fb(0x1)
0x502: v502(0x40) = CONST 
0x507: v507 = SHA3 v4f6(0x0) v502(0x40)
0x50b: SSTORE v507 v4ea_0
0x50d: v50d = MLOAD v502(0x40)
0x510: MSTORE v50d v218
0x512: v512 = MLOAD v502(0x40)
0x515: v515 = CALLER 
0x517: v517(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x53b: v53b = SUB v50d v512
0x53e: v53e = ADD v4fd(0x20) v53b
0x540: LOG3 v512 v53e v517(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v515 v4f5
0x542: v542(0x1) = CONST 
0x548: JUMP v1f2(0x141)
----------------------------------

Begin block 0x549
prev = {'0x233'}, next = {'0x15d0x21d'}
----------------------------------
Block 0x549
0x54a: v54a(0x1) = CONST 
0x54c: v54c(0x1) = CONST 
0x54e: v54e(0xa0) = CONST 
0x550: v550(0x10000000000000000000000000000000000000000) = SHL v54e(0xa0) v54c(0x1)
0x551: v551(0xffffffffffffffffffffffffffffffffffffffff) = SUB v550(0x10000000000000000000000000000000000000000) v54a(0x1)
0x554: v554 = AND v551(0xffffffffffffffffffffffffffffffffffffffff) v240
0x555: v555(0x0) = CONST 
0x559: MSTORE v555(0x0) v554
0x55a: v55a(0x2) = CONST 
0x55c: v55c(0x20) = CONST 
0x560: MSTORE v55c(0x20) v55a(0x2)
0x561: v561(0x40) = CONST 
0x565: v565 = SHA3 v555(0x0) v561(0x40)
0x569: v569 = AND v551(0xffffffffffffffffffffffffffffffffffffffff) v246
0x56b: MSTORE v555(0x0) v569
0x56f: MSTORE v55c(0x20) v565
0x570: v570 = SHA3 v555(0x0) v561(0x40)
0x571: v571 = SLOAD v570
0x573: JUMP v21e(0x15d)
----------------------------------

Begin block 0x574
prev = {}, next = {'0x57f', '0x580'}
----------------------------------
function 0x574(v574arg0, v574arg1, v574arg2)
Block 0x574
0x575: v575(0x0) = CONST 
0x579: v579 = GT v574arg0 v574arg1
0x57a: v57a = ISZERO v579
0x57b: v57b(0x580) = CONST 
0x57e: JUMPI v57b(0x580) v57a
----------------------------------

Begin block 0x57f
prev = {'0x574'}, next = {}
----------------------------------
Block 0x57f
0x57f: THROW 
----------------------------------

Begin block 0x580
prev = {'0x574'}, next = {}
----------------------------------
Block 0x580
0x583: v583 = SUB v574arg1 v574arg0
0x585: RETURNPRIVATE v574arg2 v583
----------------------------------

Begin block 0x586
prev = {}, next = {'0x594', '0x595'}
----------------------------------
function 0x586(v586arg0, v586arg1, v586arg2)
Block 0x586
0x587: v587(0x0) = CONST 
0x58b: v58b = ADD v586arg0 v586arg1
0x58e: v58e = LT v58b v586arg1
0x58f: v58f = ISZERO v58e
0x590: v590(0x595) = CONST 
0x593: JUMPI v590(0x595) v58f
----------------------------------

Begin block 0x594
prev = {'0x586'}, next = {}
----------------------------------
Block 0x594
0x594: THROW 
----------------------------------

Begin block 0x595
prev = {'0x586'}, next = {}
----------------------------------
Block 0x595
0x59b: RETURNPRIVATE v586arg2 v58b
----------------------------------

Begin block 0x5e5
prev = {'0x10', '0x88'}, next = {'0x930x0'}
----------------------------------
Block 0x5e5
0x5e6: v5e6(0x93) = CONST 
0x5e7: CALLPRIVATE v5e6(0x93)
----------------------------------

Begin block 0x5e8
prev = {'0x66'}, next = {}
----------------------------------
Block 0x5e8
0x5e9: v5e9(0x98) = CONST 
0x5ea: CALLPRIVATE v5e9(0x98)
----------------------------------

Begin block 0x5eb
prev = {'0x72'}, next = {}
----------------------------------
Block 0x5eb
0x5ec: v5ec(0x115) = CONST 
0x5ed: CALLPRIVATE v5ec(0x115)
----------------------------------

Begin block 0x5ee
prev = {'0x7d'}, next = {}
----------------------------------
Block 0x5ee
0x5ef: v5ef(0x155) = CONST 
0x5f0: CALLPRIVATE v5ef(0x155)
----------------------------------

Begin block 0x5f1
prev = {'0x88'}, next = {}
----------------------------------
Block 0x5f1
0x5f2: v5f2(0x16f) = CONST 
0x5f3: CALLPRIVATE v5f2(0x16f)
----------------------------------

Begin block 0x5f4
prev = {'0x2b'}, next = {}
----------------------------------
Block 0x5f4
0x5f5: v5f5(0x1a5) = CONST 
0x5f6: CALLPRIVATE v5f5(0x1a5)
----------------------------------

Begin block 0x5f7
prev = {'0x36'}, next = {}
----------------------------------
Block 0x5f7
0x5f8: v5f8(0x1c3) = CONST 
0x5f9: CALLPRIVATE v5f8(0x1c3)
----------------------------------

Begin block 0x5fa
prev = {'0x41'}, next = {}
----------------------------------
Block 0x5fa
0x5fb: v5fb(0x1e9) = CONST 
0x5fc: CALLPRIVATE v5fb(0x1e9)
----------------------------------

Begin block 0x5fd
prev = {'0x4c'}, next = {}
----------------------------------
Block 0x5fd
0x5fe: v5fe(0x1f1) = CONST 
0x5ff: CALLPRIVATE v5fe(0x1f1)
----------------------------------

Begin block 0x600
prev = {'0x57'}, next = {}
----------------------------------
Block 0x600
0x601: v601(0x21d) = CONST 
0x602: CALLPRIVATE v601(0x21d)
----------------------------------
