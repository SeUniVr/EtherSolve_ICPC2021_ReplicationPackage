
Begin block 0x0
prev = {}, next = {'0x7f1', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x7d3: v7d3(0x7f1) = CONST 
0x7d4: JUMPI v7d3(0x7f1) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x40', '0x7f4'}
----------------------------------
Block 0xd
0xd: vd(0xffffffff) = CONST 
0x12: v12(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x30: v30(0x0) = CONST 
0x32: v32 = CALLDATALOAD v30(0x0)
0x33: v33 = DIV v32 v12(0x100000000000000000000000000000000000000000000000000000000)
0x34: v34 = AND v33 vd(0xffffffff)
0x35: v35(0x6fdde03) = CONST 
0x3b: v3b = EQ v34 v35(0x6fdde03)
0x7d5: v7d5(0x7f4) = CONST 
0x7d6: JUMPI v7d5(0x7f4) v3b
----------------------------------

Begin block 0x40
prev = {'0xd'}, next = {'0x7f7', '0x4b'}
----------------------------------
Block 0x40
0x41: v41(0x95ea7b3) = CONST 
0x46: v46 = EQ v41(0x95ea7b3) v34
0x7d7: v7d7(0x7f7) = CONST 
0x7d8: JUMPI v7d7(0x7f7) v46
----------------------------------

Begin block 0x4b
prev = {'0x40'}, next = {'0x7fa', '0x56'}
----------------------------------
Block 0x4b
0x4c: v4c(0x18160ddd) = CONST 
0x51: v51 = EQ v4c(0x18160ddd) v34
0x7d9: v7d9(0x7fa) = CONST 
0x7da: JUMPI v7d9(0x7fa) v51
----------------------------------

Begin block 0x56
prev = {'0x4b'}, next = {'0x7fd', '0x61'}
----------------------------------
Block 0x56
0x57: v57(0x23b872dd) = CONST 
0x5c: v5c = EQ v57(0x23b872dd) v34
0x7db: v7db(0x7fd) = CONST 
0x7dc: JUMPI v7db(0x7fd) v5c
----------------------------------

Begin block 0x61
prev = {'0x56'}, next = {'0x6c', '0x800'}
----------------------------------
Block 0x61
0x62: v62(0x313ce567) = CONST 
0x67: v67 = EQ v62(0x313ce567) v34
0x7dd: v7dd(0x800) = CONST 
0x7de: JUMPI v7dd(0x800) v67
----------------------------------

Begin block 0x6c
prev = {'0x61'}, next = {'0x803', '0x77'}
----------------------------------
Block 0x6c
0x6d: v6d(0x3eaaf86b) = CONST 
0x72: v72 = EQ v6d(0x3eaaf86b) v34
0x7df: v7df(0x803) = CONST 
0x7e0: JUMPI v7df(0x803) v72
----------------------------------

Begin block 0x77
prev = {'0x6c'}, next = {'0x806', '0x82'}
----------------------------------
Block 0x77
0x78: v78(0x70a08231) = CONST 
0x7d: v7d = EQ v78(0x70a08231) v34
0x7e1: v7e1(0x806) = CONST 
0x7e2: JUMPI v7e1(0x806) v7d
----------------------------------

Begin block 0x82
prev = {'0x77'}, next = {'0x8d', '0x809'}
----------------------------------
Block 0x82
0x83: v83(0x95d89b41) = CONST 
0x88: v88 = EQ v83(0x95d89b41) v34
0x7e3: v7e3(0x809) = CONST 
0x7e4: JUMPI v7e3(0x809) v88
----------------------------------

Begin block 0x8d
prev = {'0x82'}, next = {'0x80c', '0x98'}
----------------------------------
Block 0x8d
0x8e: v8e(0xa293d1e8) = CONST 
0x93: v93 = EQ v8e(0xa293d1e8) v34
0x7e5: v7e5(0x80c) = CONST 
0x7e6: JUMPI v7e5(0x80c) v93
----------------------------------

Begin block 0x98
prev = {'0x8d'}, next = {'0xa3', '0x80f'}
----------------------------------
Block 0x98
0x99: v99(0xa9059cbb) = CONST 
0x9e: v9e = EQ v99(0xa9059cbb) v34
0x7e7: v7e7(0x80f) = CONST 
0x7e8: JUMPI v7e7(0x80f) v9e
----------------------------------

Begin block 0xa3
prev = {'0x98'}, next = {'0xae', '0x812'}
----------------------------------
Block 0xa3
0xa4: va4(0xb5931f7c) = CONST 
0xa9: va9 = EQ va4(0xb5931f7c) v34
0x7e9: v7e9(0x812) = CONST 
0x7ea: JUMPI v7e9(0x812) va9
----------------------------------

Begin block 0xae
prev = {'0xa3'}, next = {'0xb9', '0x815'}
----------------------------------
Block 0xae
0xaf: vaf(0xd05c78da) = CONST 
0xb4: vb4 = EQ vaf(0xd05c78da) v34
0x7eb: v7eb(0x815) = CONST 
0x7ec: JUMPI v7eb(0x815) vb4
----------------------------------

Begin block 0xb9
prev = {'0xae'}, next = {'0xc4', '0x818'}
----------------------------------
Block 0xb9
0xba: vba(0xdd62ed3e) = CONST 
0xbf: vbf = EQ vba(0xdd62ed3e) v34
0x7ed: v7ed(0x818) = CONST 
0x7ee: JUMPI v7ed(0x818) vbf
----------------------------------

Begin block 0xc4
prev = {'0xb9'}, next = {'0x7f1', '0x81b'}
----------------------------------
Block 0xc4
0xc5: vc5(0xe6cb9013) = CONST 
0xca: vca = EQ vc5(0xe6cb9013) v34
0x7ef: v7ef(0x81b) = CONST 
0x7f0: JUMPI v7ef(0x81b) vca
----------------------------------

Begin block 0xcf
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0xcf
0xd0: vd0(0x0) = CONST 
0xd3: REVERT vd0(0x0) vd0(0x0)
----------------------------------

Begin block 0xd4
prev = {}, next = {'0xdc', '0xe0'}
----------------------------------
function name()()
Block 0xd4
0xd5: vd5 = CALLVALUE 
0xd7: vd7 = ISZERO vd5
0xd8: vd8(0xe0) = CONST 
0xdb: JUMPI vd8(0xe0) vd7
----------------------------------

Begin block 0xdc
prev = {'0xd4'}, next = {}
----------------------------------
Block 0xdc
0xdc: vdc(0x0) = CONST 
0xdf: REVERT vdc(0x0) vdc(0x0)
----------------------------------

Begin block 0xe0
prev = {'0xd4'}, next = {'0xe90xd4'}
----------------------------------
Block 0xe0
0xe2: ve2(0xe9) = CONST 
0xe5: ve5(0x3d1) = CONST 
0xe8: ve8_0, ve8_1 = CALLPRIVATE ve5(0x3d1) ve2(0xe9)
----------------------------------

Begin block 0xe90xd4
prev = {'0xe0'}, next = {'0x10b0xd4'}
----------------------------------
Block 0xe90xd4
0xea0xd4: vd4ea(0x40) = CONST 
0xed0xd4: vd4ed = MLOAD vd4ea(0x40)
0xee0xd4: vd4ee(0x20) = CONST 
0xf20xd4: MSTORE vd4ed vd4ee(0x20)
0xf40xd4: vd4f4 = MLOAD ve8_0
0xf70xd4: vd4f7 = ADD vd4ed vd4ee(0x20)
0xf80xd4: MSTORE vd4f7 vd4f4
0xfa0xd4: vd4fa = MLOAD ve8_0
0x1010xd4: vd4101 = ADD vd4ed vd4ea(0x40)
0x1040xd4: vd4104 = ADD ve8_0 vd4ee(0x20)
0x1090xd4: vd4109(0x0) = CONST 
----------------------------------

Begin block 0xe90x288
prev = {'0x294'}, next = {'0x10b0x288'}
----------------------------------
Block 0xe90x288
0xea0x288: v288ea(0x40) = CONST 
0xed0x288: v288ed = MLOAD v288ea(0x40)
0xee0x288: v288ee(0x20) = CONST 
0xf20x288: MSTORE v288ed v288ee(0x20)
0xf40x288: v288f4 = MLOAD v29c_0
0xf70x288: v288f7 = ADD v288ed v288ee(0x20)
0xf80x288: MSTORE v288f7 v288f4
0xfa0x288: v288fa = MLOAD v29c_0
0x1010x288: v288101 = ADD v288ed v288ea(0x40)
0x1040x288: v288104 = ADD v29c_0 v288ee(0x20)
0x1090x288: v288109(0x0) = CONST 
----------------------------------

Begin block 0x10b0xd4
prev = {'0x1140xd4', '0xe90xd4'}, next = {'0x1230xd4', '0x1140xd4'}
----------------------------------
Block 0x10b0xd4
0x10b0xd4_0x0: v10bd4_0 = PHI vd4109(0x0) vd411e
0x10e0xd4: vd410e = LT v10bd4_0 vd4fa
0x10f0xd4: vd410f = ISZERO vd410e
0x1100xd4: vd4110(0x123) = CONST 
0x1130xd4: JUMPI vd4110(0x123) vd410f
----------------------------------

Begin block 0x10b0x288
prev = {'0x1140x288', '0xe90x288'}, next = {'0x1140x288', '0x1230x288'}
----------------------------------
Block 0x10b0x288
0x10b0x288_0x0: v10b288_0 = PHI v288109(0x0) v28811e
0x10e0x288: v28810e = LT v10b288_0 v288fa
0x10f0x288: v28810f = ISZERO v28810e
0x1100x288: v288110(0x123) = CONST 
0x1130x288: JUMPI v288110(0x123) v28810f
----------------------------------

Begin block 0x1140xd4
prev = {'0x10b0xd4'}, next = {'0x10b0xd4'}
----------------------------------
Block 0x1140xd4
0x1140xd4_0x0: v114d4_0 = PHI vd4109(0x0) vd411e
0x1160xd4: vd4116 = ADD v114d4_0 vd4104
0x1170xd4: vd4117 = MLOAD vd4116
0x11a0xd4: vd411a = ADD v114d4_0 vd4101
0x11b0xd4: MSTORE vd411a vd4117
0x11c0xd4: vd411c(0x20) = CONST 
0x11e0xd4: vd411e = ADD vd411c(0x20) v114d4_0
0x11f0xd4: vd411f(0x10b) = CONST 
0x1220xd4: JUMP vd411f(0x10b)
----------------------------------

Begin block 0x1140x288
prev = {'0x10b0x288'}, next = {'0x10b0x288'}
----------------------------------
Block 0x1140x288
0x1140x288_0x0: v114288_0 = PHI v288109(0x0) v28811e
0x1160x288: v288116 = ADD v114288_0 v288104
0x1170x288: v288117 = MLOAD v288116
0x11a0x288: v28811a = ADD v114288_0 v288101
0x11b0x288: MSTORE v28811a v288117
0x11c0x288: v28811c(0x20) = CONST 
0x11e0x288: v28811e = ADD v28811c(0x20) v114288_0
0x11f0x288: v28811f(0x10b) = CONST 
0x1220x288: JUMP v28811f(0x10b)
----------------------------------

Begin block 0x1230xd4
prev = {'0x10b0xd4'}, next = {'0x1500xd4', '0x1370xd4'}
----------------------------------
Block 0x1230xd4
0x12c0xd4: vd412c = ADD vd4fa vd4101
0x12e0xd4: vd412e(0x1f) = CONST 
0x1300xd4: vd4130 = AND vd412e(0x1f) vd4fa
0x1320xd4: vd4132 = ISZERO vd4130
0x1330xd4: vd4133(0x150) = CONST 
0x1360xd4: JUMPI vd4133(0x150) vd4132
----------------------------------

Begin block 0x1230x288
prev = {'0x10b0x288'}, next = {'0x1370x288', '0x1500x288'}
----------------------------------
Block 0x1230x288
0x12c0x288: v28812c = ADD v288fa v288101
0x12e0x288: v28812e(0x1f) = CONST 
0x1300x288: v288130 = AND v28812e(0x1f) v288fa
0x1320x288: v288132 = ISZERO v288130
0x1330x288: v288133(0x150) = CONST 
0x1360x288: JUMPI v288133(0x150) v288132
----------------------------------

Begin block 0x1370xd4
prev = {'0x1230xd4'}, next = {'0x1500xd4'}
----------------------------------
Block 0x1370xd4
0x1390xd4: vd4139 = SUB vd412c vd4130
0x13b0xd4: vd413b = MLOAD vd4139
0x13c0xd4: vd413c(0x1) = CONST 
0x13f0xd4: vd413f(0x20) = CONST 
0x1410xd4: vd4141 = SUB vd413f(0x20) vd4130
0x1420xd4: vd4142(0x100) = CONST 
0x1450xd4: vd4145 = EXP vd4142(0x100) vd4141
0x1460xd4: vd4146 = SUB vd4145 vd413c(0x1)
0x1470xd4: vd4147 = NOT vd4146
0x1480xd4: vd4148 = AND vd4147 vd413b
0x14a0xd4: MSTORE vd4139 vd4148
0x14b0xd4: vd414b(0x20) = CONST 
0x14d0xd4: vd414d = ADD vd414b(0x20) vd4139
----------------------------------

Begin block 0x1370x288
prev = {'0x1230x288'}, next = {'0x1500x288'}
----------------------------------
Block 0x1370x288
0x1390x288: v288139 = SUB v28812c v288130
0x13b0x288: v28813b = MLOAD v288139
0x13c0x288: v28813c(0x1) = CONST 
0x13f0x288: v28813f(0x20) = CONST 
0x1410x288: v288141 = SUB v28813f(0x20) v288130
0x1420x288: v288142(0x100) = CONST 
0x1450x288: v288145 = EXP v288142(0x100) v288141
0x1460x288: v288146 = SUB v288145 v28813c(0x1)
0x1470x288: v288147 = NOT v288146
0x1480x288: v288148 = AND v288147 v28813b
0x14a0x288: MSTORE v288139 v288148
0x14b0x288: v28814b(0x20) = CONST 
0x14d0x288: v28814d = ADD v28814b(0x20) v288139
----------------------------------

Begin block 0x1500xd4
prev = {'0x1230xd4', '0x1370xd4'}, next = {}
----------------------------------
Block 0x1500xd4
0x1500xd4_0x1: v150d4_1 = PHI vd412c vd414d
0x1560xd4: vd4156(0x40) = CONST 
0x1580xd4: vd4158 = MLOAD vd4156(0x40)
0x15b0xd4: vd415b = SUB v150d4_1 vd4158
0x15d0xd4: RETURN vd4158 vd415b
----------------------------------

Begin block 0x1500x288
prev = {'0x1230x288', '0x1370x288'}, next = {}
----------------------------------
Block 0x1500x288
0x1500x288_0x1: v150288_1 = PHI v28812c v28814d
0x1560x288: v288156(0x40) = CONST 
0x1580x288: v288158 = MLOAD v288156(0x40)
0x15b0x288: v28815b = SUB v150288_1 v288158
0x15d0x288: RETURN v288158 v28815b
----------------------------------

Begin block 0x15e
prev = {}, next = {'0x166', '0x16a'}
----------------------------------
function approve(address,uint256)()
Block 0x15e
0x15f: v15f = CALLVALUE 
0x161: v161 = ISZERO v15f
0x162: v162(0x16a) = CONST 
0x165: JUMPI v162(0x16a) v161
----------------------------------

Begin block 0x166
prev = {'0x15e'}, next = {}
----------------------------------
Block 0x166
0x166: v166(0x0) = CONST 
0x169: REVERT v166(0x0) v166(0x0)
----------------------------------

Begin block 0x16a
prev = {'0x15e'}, next = {'0x17d', '0x181'}
----------------------------------
Block 0x16a
0x16c: v16c(0x197) = CONST 
0x16f: v16f(0x4) = CONST 
0x172: v172 = CALLDATASIZE 
0x173: v173 = SUB v172 v16f(0x4)
0x174: v174(0x40) = CONST 
0x177: v177 = LT v173 v174(0x40)
0x178: v178 = ISZERO v177
0x179: v179(0x181) = CONST 
0x17c: JUMPI v179(0x181) v178
----------------------------------

Begin block 0x17d
prev = {'0x16a'}, next = {}
----------------------------------
Block 0x17d
0x17d: v17d(0x0) = CONST 
0x180: REVERT v17d(0x0) v17d(0x0)
----------------------------------

Begin block 0x181
prev = {'0x16a'}, next = {'0x45f'}
----------------------------------
Block 0x181
0x183: v183(0x1) = CONST 
0x185: v185(0xa0) = CONST 
0x187: v187(0x2) = CONST 
0x189: v189(0x10000000000000000000000000000000000000000) = EXP v187(0x2) v185(0xa0)
0x18a: v18a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v189(0x10000000000000000000000000000000000000000) v183(0x1)
0x18c: v18c = CALLDATALOAD v16f(0x4)
0x18d: v18d = AND v18c v18a(0xffffffffffffffffffffffffffffffffffffffff)
0x18f: v18f(0x20) = CONST 
0x191: v191 = ADD v18f(0x20) v16f(0x4)
0x192: v192 = CALLDATALOAD v191
0x193: v193(0x45f) = CONST 
0x196: JUMP v193(0x45f)
----------------------------------

Begin block 0x1970x15e
prev = {'0x4c00x15e'}, next = {}
----------------------------------
Block 0x1970x15e
0x1980x15e: v15e198(0x40) = CONST 
0x19b0x15e: v15e19b = MLOAD v15e198(0x40)
0x19d0x15e: v15e19d = ISZERO v4be(0x1)
0x19e0x15e: v15e19e = ISZERO v15e19d
0x1a00x15e: MSTORE v15e19b v15e19e
0x1a10x15e: v15e1a1 = MLOAD v15e198(0x40)
0x1a50x15e: v15e1a5 = SUB v15e19b v15e1a1
0x1a60x15e: v15e1a6(0x20) = CONST 
0x1a80x15e: v15e1a8 = ADD v15e1a6(0x20) v15e1a5
0x1aa0x15e: RETURN v15e1a1 v15e1a8
----------------------------------

Begin block 0x1970x1d2
prev = {'0x590'}, next = {}
----------------------------------
Block 0x1970x1d2
0x1980x1d2: v1d2198(0x40) = CONST 
0x19b0x1d2: v1d219b = MLOAD v1d2198(0x40)
0x19d0x1d2: v1d219d = ISZERO v5e9(0x1)
0x19e0x1d2: v1d219e = ISZERO v1d219d
0x1a00x1d2: MSTORE v1d219b v1d219e
0x1a10x1d2: v1d21a1 = MLOAD v1d2198(0x40)
0x1a50x1d2: v1d21a5 = SUB v1d219b v1d21a1
0x1a60x1d2: v1d21a6(0x20) = CONST 
0x1a80x1d2: v1d21a8 = ADD v1d21a6(0x20) v1d21a5
0x1aa0x1d2: RETURN v1d21a1 v1d21a8
----------------------------------

Begin block 0x1970x2cd
prev = {'0x6d0'}, next = {}
----------------------------------
Block 0x1970x2cd
0x1980x2cd: v2cd198(0x40) = CONST 
0x19b0x2cd: v2cd19b = MLOAD v2cd198(0x40)
0x19d0x2cd: v2cd19d = ISZERO v727(0x1)
0x19e0x2cd: v2cd19e = ISZERO v2cd19d
0x1a00x2cd: MSTORE v2cd19b v2cd19e
0x1a10x2cd: v2cd1a1 = MLOAD v2cd198(0x40)
0x1a50x2cd: v2cd1a5 = SUB v2cd19b v2cd1a1
0x1a60x2cd: v2cd1a6(0x20) = CONST 
0x1a80x2cd: v2cd1a8 = ADD v2cd1a6(0x20) v2cd1a5
0x1aa0x2cd: RETURN v2cd1a1 v2cd1a8
----------------------------------

Begin block 0x1ab
prev = {}, next = {'0x1b3', '0x1b7'}
----------------------------------
function totalSupply()()
Block 0x1ab
0x1ac: v1ac = CALLVALUE 
0x1ae: v1ae = ISZERO v1ac
0x1af: v1af(0x1b7) = CONST 
0x1b2: JUMPI v1af(0x1b7) v1ae
----------------------------------

Begin block 0x1b3
prev = {'0x1ab'}, next = {}
----------------------------------
Block 0x1b3
0x1b3: v1b3(0x0) = CONST 
0x1b6: REVERT v1b3(0x0) v1b3(0x0)
----------------------------------

Begin block 0x1b7
prev = {'0x1ab'}, next = {'0x4c6'}
----------------------------------
Block 0x1b7
0x1b9: v1b9(0x1c0) = CONST 
0x1bc: v1bc(0x4c6) = CONST 
0x1bf: JUMP v1bc(0x4c6)
----------------------------------

Begin block 0x1c00x1ab
prev = {'0x4c6'}, next = {}
----------------------------------
Block 0x1c00x1ab
0x1c10x1ab: v1ab1c1(0x40) = CONST 
0x1c40x1ab: v1ab1c4 = MLOAD v1ab1c1(0x40)
0x1c70x1ab: MSTORE v1ab1c4 v4f5
0x1c80x1ab: v1ab1c8 = MLOAD v1ab1c1(0x40)
0x1cc0x1ab: v1ab1cc = SUB v1ab1c4 v1ab1c8
0x1cd0x1ab: v1ab1cd(0x20) = CONST 
0x1cf0x1ab: v1ab1cf = ADD v1ab1cd(0x20) v1ab1cc
0x1d10x1ab: RETURN v1ab1c8 v1ab1cf
----------------------------------

Begin block 0x1c00x240
prev = {'0x5fa'}, next = {}
----------------------------------
Block 0x1c00x240
0x1c10x240: v2401c1(0x40) = CONST 
0x1c40x240: v2401c4 = MLOAD v2401c1(0x40)
0x1c70x240: MSTORE v2401c4 v5fd
0x1c80x240: v2401c8 = MLOAD v2401c1(0x40)
0x1cc0x240: v2401cc = SUB v2401c4 v2401c8
0x1cd0x240: v2401cd(0x20) = CONST 
0x1cf0x240: v2401cf = ADD v2401cd(0x20) v2401cc
0x1d10x240: RETURN v2401c8 v2401cf
----------------------------------

Begin block 0x1c00x255
prev = {'0x600'}, next = {}
----------------------------------
Block 0x1c00x255
0x1c10x255: v2551c1(0x40) = CONST 
0x1c40x255: v2551c4 = MLOAD v2551c1(0x40)
0x1c70x255: MSTORE v2551c4 v618
0x1c80x255: v2551c8 = MLOAD v2551c1(0x40)
0x1cc0x255: v2551cc = SUB v2551c4 v2551c8
0x1cd0x255: v2551cd(0x20) = CONST 
0x1cf0x255: v2551cf = ADD v2551cd(0x20) v2551cc
0x1d10x255: RETURN v2551c8 v2551cf
----------------------------------

Begin block 0x1c00x29d
prev = {'0x6840x29d'}, next = {}
----------------------------------
Block 0x1c00x29d
0x1c10x29d: v29d1c1(0x40) = CONST 
0x1c40x29d: v29d1c4 = MLOAD v29d1c1(0x40)
0x1c70x29d: MSTORE v29d1c4 v29d687
0x1c80x29d: v29d1c8 = MLOAD v29d1c1(0x40)
0x1cc0x29d: v29d1cc = SUB v29d1c4 v29d1c8
0x1cd0x29d: v29d1cd(0x20) = CONST 
0x1cf0x29d: v29d1cf = ADD v29d1cd(0x20) v29d1cc
0x1d10x29d: RETURN v29d1c8 v29d1cf
----------------------------------

Begin block 0x1c00x306
prev = {'0x747'}, next = {}
----------------------------------
Block 0x1c00x306
0x1c10x306: v3061c1(0x40) = CONST 
0x1c40x306: v3061c4 = MLOAD v3061c1(0x40)
0x1c70x306: MSTORE v3061c4 v748
0x1c80x306: v3061c8 = MLOAD v3061c1(0x40)
0x1cc0x306: v3061cc = SUB v3061c4 v3061c8
0x1cd0x306: v3061cd(0x20) = CONST 
0x1cf0x306: v3061cf = ADD v3061cd(0x20) v3061cc
0x1d10x306: RETURN v3061c8 v3061cf
----------------------------------

Begin block 0x1c00x336
prev = {'0x4c00x336'}, next = {}
----------------------------------
Block 0x1c00x336
0x1c10x336: v3361c1(0x40) = CONST 
0x1c40x336: v3361c4 = MLOAD v3361c1(0x40)
0x1c70x336: MSTORE v3361c4 v752
0x1c80x336: v3361c8 = MLOAD v3361c1(0x40)
0x1cc0x336: v3361cc = SUB v3361c4 v3361c8
0x1cd0x336: v3361cd(0x20) = CONST 
0x1cf0x336: v3361cf = ADD v3361cd(0x20) v3361cc
0x1d10x336: RETURN v3361c8 v3361cf
----------------------------------

Begin block 0x1c00x366
prev = {'0x774'}, next = {}
----------------------------------
Block 0x1c00x366
0x1c10x366: v3661c1(0x40) = CONST 
0x1c40x366: v3661c4 = MLOAD v3661c1(0x40)
0x1c70x366: MSTORE v3661c4 v79c
0x1c80x366: v3661c8 = MLOAD v3661c1(0x40)
0x1cc0x366: v3661cc = SUB v3661c4 v3661c8
0x1cd0x366: v3661cd(0x20) = CONST 
0x1cf0x366: v3661cf = ADD v3661cd(0x20) v3661cc
0x1d10x366: RETURN v3661c8 v3661cf
----------------------------------

Begin block 0x1c00x3a1
prev = {'0x4c00x3a1'}, next = {}
----------------------------------
Block 0x1c00x3a1
0x1c10x3a1: v3a11c1(0x40) = CONST 
0x1c40x3a1: v3a11c4 = MLOAD v3a11c1(0x40)
0x1c70x3a1: MSTORE v3a11c4 v3a17a2
0x1c80x3a1: v3a11c8 = MLOAD v3a11c1(0x40)
0x1cc0x3a1: v3a11cc = SUB v3a11c4 v3a11c8
0x1cd0x3a1: v3a11cd(0x20) = CONST 
0x1cf0x3a1: v3a11cf = ADD v3a11cd(0x20) v3a11cc
0x1d10x3a1: RETURN v3a11c8 v3a11cf
----------------------------------

Begin block 0x1d2
prev = {}, next = {'0x1da', '0x1de'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x1d2
0x1d3: v1d3 = CALLVALUE 
0x1d5: v1d5 = ISZERO v1d3
0x1d6: v1d6(0x1de) = CONST 
0x1d9: JUMPI v1d6(0x1de) v1d5
----------------------------------

Begin block 0x1da
prev = {'0x1d2'}, next = {}
----------------------------------
Block 0x1da
0x1da: v1da(0x0) = CONST 
0x1dd: REVERT v1da(0x0) v1da(0x0)
----------------------------------

Begin block 0x1de
prev = {'0x1d2'}, next = {'0x1f1', '0x1f5'}
----------------------------------
Block 0x1de
0x1e0: v1e0(0x197) = CONST 
0x1e3: v1e3(0x4) = CONST 
0x1e6: v1e6 = CALLDATASIZE 
0x1e7: v1e7 = SUB v1e6 v1e3(0x4)
0x1e8: v1e8(0x60) = CONST 
0x1eb: v1eb = LT v1e7 v1e8(0x60)
0x1ec: v1ec = ISZERO v1eb
0x1ed: v1ed(0x1f5) = CONST 
0x1f0: JUMPI v1ed(0x1f5) v1ec
----------------------------------

Begin block 0x1f1
prev = {'0x1de'}, next = {}
----------------------------------
Block 0x1f1
0x1f1: v1f1(0x0) = CONST 
0x1f4: REVERT v1f1(0x0) v1f1(0x0)
----------------------------------

Begin block 0x1f5
prev = {'0x1de'}, next = {'0x4f8'}
----------------------------------
Block 0x1f5
0x1f7: v1f7(0x1) = CONST 
0x1f9: v1f9(0xa0) = CONST 
0x1fb: v1fb(0x2) = CONST 
0x1fd: v1fd(0x10000000000000000000000000000000000000000) = EXP v1fb(0x2) v1f9(0xa0)
0x1fe: v1fe(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1fd(0x10000000000000000000000000000000000000000) v1f7(0x1)
0x200: v200 = CALLDATALOAD v1e3(0x4)
0x202: v202 = AND v1fe(0xffffffffffffffffffffffffffffffffffffffff) v200
0x204: v204(0x20) = CONST 
0x207: v207 = ADD v1e3(0x4) v204(0x20)
0x208: v208 = CALLDATALOAD v207
0x20b: v20b = AND v1fe(0xffffffffffffffffffffffffffffffffffffffff) v208
0x20d: v20d(0x40) = CONST 
0x20f: v20f = ADD v20d(0x40) v1e3(0x4)
0x210: v210 = CALLDATALOAD v20f
0x211: v211(0x4f8) = CONST 
0x214: JUMP v211(0x4f8)
----------------------------------

Begin block 0x215
prev = {}, next = {'0x21d', '0x221'}
----------------------------------
function decimals()()
Block 0x215
0x216: v216 = CALLVALUE 
0x218: v218 = ISZERO v216
0x219: v219(0x221) = CONST 
0x21c: JUMPI v219(0x221) v218
----------------------------------

Begin block 0x21d
prev = {'0x215'}, next = {}
----------------------------------
Block 0x21d
0x21d: v21d(0x0) = CONST 
0x220: REVERT v21d(0x0) v21d(0x0)
----------------------------------

Begin block 0x221
prev = {'0x215'}, next = {'0x5f1'}
----------------------------------
Block 0x221
0x223: v223(0x22a) = CONST 
0x226: v226(0x5f1) = CONST 
0x229: JUMP v226(0x5f1)
----------------------------------

Begin block 0x22a
prev = {'0x5f1'}, next = {}
----------------------------------
Block 0x22a
0x22b: v22b(0x40) = CONST 
0x22e: v22e = MLOAD v22b(0x40)
0x22f: v22f(0xff) = CONST 
0x233: v233 = AND v5f7 v22f(0xff)
0x235: MSTORE v22e v233
0x236: v236 = MLOAD v22b(0x40)
0x23a: v23a = SUB v22e v236
0x23b: v23b(0x20) = CONST 
0x23d: v23d = ADD v23b(0x20) v23a
0x23f: RETURN v236 v23d
----------------------------------

Begin block 0x240
prev = {}, next = {'0x24c', '0x248'}
----------------------------------
function _totalSupply()()
Block 0x240
0x241: v241 = CALLVALUE 
0x243: v243 = ISZERO v241
0x244: v244(0x24c) = CONST 
0x247: JUMPI v244(0x24c) v243
----------------------------------

Begin block 0x248
prev = {'0x240'}, next = {}
----------------------------------
Block 0x248
0x248: v248(0x0) = CONST 
0x24b: REVERT v248(0x0) v248(0x0)
----------------------------------

Begin block 0x24c
prev = {'0x240'}, next = {'0x5fa'}
----------------------------------
Block 0x24c
0x24e: v24e(0x1c0) = CONST 
0x251: v251(0x5fa) = CONST 
0x254: JUMP v251(0x5fa)
----------------------------------

Begin block 0x255
prev = {}, next = {'0x25d', '0x261'}
----------------------------------
function balanceOf(address)()
Block 0x255
0x256: v256 = CALLVALUE 
0x258: v258 = ISZERO v256
0x259: v259(0x261) = CONST 
0x25c: JUMPI v259(0x261) v258
----------------------------------

Begin block 0x25d
prev = {'0x255'}, next = {}
----------------------------------
Block 0x25d
0x25d: v25d(0x0) = CONST 
0x260: REVERT v25d(0x0) v25d(0x0)
----------------------------------

Begin block 0x261
prev = {'0x255'}, next = {'0x274', '0x278'}
----------------------------------
Block 0x261
0x263: v263(0x1c0) = CONST 
0x266: v266(0x4) = CONST 
0x269: v269 = CALLDATASIZE 
0x26a: v26a = SUB v269 v266(0x4)
0x26b: v26b(0x20) = CONST 
0x26e: v26e = LT v26a v26b(0x20)
0x26f: v26f = ISZERO v26e
0x270: v270(0x278) = CONST 
0x273: JUMPI v270(0x278) v26f
----------------------------------

Begin block 0x274
prev = {'0x261'}, next = {}
----------------------------------
Block 0x274
0x274: v274(0x0) = CONST 
0x277: REVERT v274(0x0) v274(0x0)
----------------------------------

Begin block 0x278
prev = {'0x261'}, next = {'0x600'}
----------------------------------
Block 0x278
0x27a: v27a = CALLDATALOAD v266(0x4)
0x27b: v27b(0x1) = CONST 
0x27d: v27d(0xa0) = CONST 
0x27f: v27f(0x2) = CONST 
0x281: v281(0x10000000000000000000000000000000000000000) = EXP v27f(0x2) v27d(0xa0)
0x282: v282(0xffffffffffffffffffffffffffffffffffffffff) = SUB v281(0x10000000000000000000000000000000000000000) v27b(0x1)
0x283: v283 = AND v282(0xffffffffffffffffffffffffffffffffffffffff) v27a
0x284: v284(0x600) = CONST 
0x287: JUMP v284(0x600)
----------------------------------

Begin block 0x288
prev = {}, next = {'0x294', '0x290'}
----------------------------------
function symbol()()
Block 0x288
0x289: v289 = CALLVALUE 
0x28b: v28b = ISZERO v289
0x28c: v28c(0x294) = CONST 
0x28f: JUMPI v28c(0x294) v28b
----------------------------------

Begin block 0x290
prev = {'0x288'}, next = {}
----------------------------------
Block 0x290
0x290: v290(0x0) = CONST 
0x293: REVERT v290(0x0) v290(0x0)
----------------------------------

Begin block 0x294
prev = {'0x288'}, next = {'0xe90x288'}
----------------------------------
Block 0x294
0x296: v296(0xe9) = CONST 
0x299: v299(0x61b) = CONST 
0x29c: v29c_0, v29c_1 = CALLPRIVATE v299(0x61b) v296(0xe9)
----------------------------------

Begin block 0x29d
prev = {}, next = {'0x2a9', '0x2a5'}
----------------------------------
function safeSub(uint256,uint256)()
Block 0x29d
0x29e: v29e = CALLVALUE 
0x2a0: v2a0 = ISZERO v29e
0x2a1: v2a1(0x2a9) = CONST 
0x2a4: JUMPI v2a1(0x2a9) v2a0
----------------------------------

Begin block 0x2a5
prev = {'0x29d'}, next = {}
----------------------------------
Block 0x2a5
0x2a5: v2a5(0x0) = CONST 
0x2a8: REVERT v2a5(0x0) v2a5(0x0)
----------------------------------

Begin block 0x2a9
prev = {'0x29d'}, next = {'0x2bc', '0x2c0'}
----------------------------------
Block 0x2a9
0x2ab: v2ab(0x1c0) = CONST 
0x2ae: v2ae(0x4) = CONST 
0x2b1: v2b1 = CALLDATASIZE 
0x2b2: v2b2 = SUB v2b1 v2ae(0x4)
0x2b3: v2b3(0x40) = CONST 
0x2b6: v2b6 = LT v2b2 v2b3(0x40)
0x2b7: v2b7 = ISZERO v2b6
0x2b8: v2b8(0x2c0) = CONST 
0x2bb: JUMPI v2b8(0x2c0) v2b7
----------------------------------

Begin block 0x2bc
prev = {'0x2a9'}, next = {}
----------------------------------
Block 0x2bc
0x2bc: v2bc(0x0) = CONST 
0x2bf: REVERT v2bc(0x0) v2bc(0x0)
----------------------------------

Begin block 0x2c0
prev = {'0x2a9'}, next = {'0x6750x29d'}
----------------------------------
Block 0x2c0
0x2c3: v2c3 = CALLDATALOAD v2ae(0x4)
0x2c5: v2c5(0x20) = CONST 
0x2c7: v2c7 = ADD v2c5(0x20) v2ae(0x4)
0x2c8: v2c8 = CALLDATALOAD v2c7
0x2c9: v2c9(0x675) = CONST 
0x2cc: JUMP v2c9(0x675)
----------------------------------

Begin block 0x2cd
prev = {}, next = {'0x2d5', '0x2d9'}
----------------------------------
function transfer(address,uint256)()
Block 0x2cd
0x2ce: v2ce = CALLVALUE 
0x2d0: v2d0 = ISZERO v2ce
0x2d1: v2d1(0x2d9) = CONST 
0x2d4: JUMPI v2d1(0x2d9) v2d0
----------------------------------

Begin block 0x2d5
prev = {'0x2cd'}, next = {}
----------------------------------
Block 0x2d5
0x2d5: v2d5(0x0) = CONST 
0x2d8: REVERT v2d5(0x0) v2d5(0x0)
----------------------------------

Begin block 0x2d9
prev = {'0x2cd'}, next = {'0x2f0', '0x2ec'}
----------------------------------
Block 0x2d9
0x2db: v2db(0x197) = CONST 
0x2de: v2de(0x4) = CONST 
0x2e1: v2e1 = CALLDATASIZE 
0x2e2: v2e2 = SUB v2e1 v2de(0x4)
0x2e3: v2e3(0x40) = CONST 
0x2e6: v2e6 = LT v2e2 v2e3(0x40)
0x2e7: v2e7 = ISZERO v2e6
0x2e8: v2e8(0x2f0) = CONST 
0x2eb: JUMPI v2e8(0x2f0) v2e7
----------------------------------

Begin block 0x2ec
prev = {'0x2d9'}, next = {}
----------------------------------
Block 0x2ec
0x2ec: v2ec(0x0) = CONST 
0x2ef: REVERT v2ec(0x0) v2ec(0x0)
----------------------------------

Begin block 0x2f0
prev = {'0x2d9'}, next = {'0x68a'}
----------------------------------
Block 0x2f0
0x2f2: v2f2(0x1) = CONST 
0x2f4: v2f4(0xa0) = CONST 
0x2f6: v2f6(0x2) = CONST 
0x2f8: v2f8(0x10000000000000000000000000000000000000000) = EXP v2f6(0x2) v2f4(0xa0)
0x2f9: v2f9(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2f8(0x10000000000000000000000000000000000000000) v2f2(0x1)
0x2fb: v2fb = CALLDATALOAD v2de(0x4)
0x2fc: v2fc = AND v2fb v2f9(0xffffffffffffffffffffffffffffffffffffffff)
0x2fe: v2fe(0x20) = CONST 
0x300: v300 = ADD v2fe(0x20) v2de(0x4)
0x301: v301 = CALLDATALOAD v300
0x302: v302(0x68a) = CONST 
0x305: JUMP v302(0x68a)
----------------------------------

Begin block 0x306
prev = {}, next = {'0x30e', '0x312'}
----------------------------------
function safeDiv(uint256,uint256)()
Block 0x306
0x307: v307 = CALLVALUE 
0x309: v309 = ISZERO v307
0x30a: v30a(0x312) = CONST 
0x30d: JUMPI v30a(0x312) v309
----------------------------------

Begin block 0x30e
prev = {'0x306'}, next = {}
----------------------------------
Block 0x30e
0x30e: v30e(0x0) = CONST 
0x311: REVERT v30e(0x0) v30e(0x0)
----------------------------------

Begin block 0x312
prev = {'0x306'}, next = {'0x325', '0x329'}
----------------------------------
Block 0x312
0x314: v314(0x1c0) = CONST 
0x317: v317(0x4) = CONST 
0x31a: v31a = CALLDATASIZE 
0x31b: v31b = SUB v31a v317(0x4)
0x31c: v31c(0x40) = CONST 
0x31f: v31f = LT v31b v31c(0x40)
0x320: v320 = ISZERO v31f
0x321: v321(0x329) = CONST 
0x324: JUMPI v321(0x329) v320
----------------------------------

Begin block 0x325
prev = {'0x312'}, next = {}
----------------------------------
Block 0x325
0x325: v325(0x0) = CONST 
0x328: REVERT v325(0x0) v325(0x0)
----------------------------------

Begin block 0x329
prev = {'0x312'}, next = {'0x72e'}
----------------------------------
Block 0x329
0x32c: v32c = CALLDATALOAD v317(0x4)
0x32e: v32e(0x20) = CONST 
0x330: v330 = ADD v32e(0x20) v317(0x4)
0x331: v331 = CALLDATALOAD v330
0x332: v332(0x72e) = CONST 
0x335: JUMP v332(0x72e)
----------------------------------

Begin block 0x336
prev = {}, next = {'0x342', '0x33e'}
----------------------------------
function safeMul(uint256,uint256)()
Block 0x336
0x337: v337 = CALLVALUE 
0x339: v339 = ISZERO v337
0x33a: v33a(0x342) = CONST 
0x33d: JUMPI v33a(0x342) v339
----------------------------------

Begin block 0x33e
prev = {'0x336'}, next = {}
----------------------------------
Block 0x33e
0x33e: v33e(0x0) = CONST 
0x341: REVERT v33e(0x0) v33e(0x0)
----------------------------------

Begin block 0x342
prev = {'0x336'}, next = {'0x359', '0x355'}
----------------------------------
Block 0x342
0x344: v344(0x1c0) = CONST 
0x347: v347(0x4) = CONST 
0x34a: v34a = CALLDATASIZE 
0x34b: v34b = SUB v34a v347(0x4)
0x34c: v34c(0x40) = CONST 
0x34f: v34f = LT v34b v34c(0x40)
0x350: v350 = ISZERO v34f
0x351: v351(0x359) = CONST 
0x354: JUMPI v351(0x359) v350
----------------------------------

Begin block 0x355
prev = {'0x342'}, next = {}
----------------------------------
Block 0x355
0x355: v355(0x0) = CONST 
0x358: REVERT v355(0x0) v355(0x0)
----------------------------------

Begin block 0x359
prev = {'0x342'}, next = {'0x74f'}
----------------------------------
Block 0x359
0x35c: v35c = CALLDATALOAD v347(0x4)
0x35e: v35e(0x20) = CONST 
0x360: v360 = ADD v35e(0x20) v347(0x4)
0x361: v361 = CALLDATALOAD v360
0x362: v362(0x74f) = CONST 
0x365: JUMP v362(0x74f)
----------------------------------

Begin block 0x366
prev = {}, next = {'0x372', '0x36e'}
----------------------------------
function allowance(address,address)()
Block 0x366
0x367: v367 = CALLVALUE 
0x369: v369 = ISZERO v367
0x36a: v36a(0x372) = CONST 
0x36d: JUMPI v36a(0x372) v369
----------------------------------

Begin block 0x36e
prev = {'0x366'}, next = {}
----------------------------------
Block 0x36e
0x36e: v36e(0x0) = CONST 
0x371: REVERT v36e(0x0) v36e(0x0)
----------------------------------

Begin block 0x372
prev = {'0x366'}, next = {'0x385', '0x389'}
----------------------------------
Block 0x372
0x374: v374(0x1c0) = CONST 
0x377: v377(0x4) = CONST 
0x37a: v37a = CALLDATASIZE 
0x37b: v37b = SUB v37a v377(0x4)
0x37c: v37c(0x40) = CONST 
0x37f: v37f = LT v37b v37c(0x40)
0x380: v380 = ISZERO v37f
0x381: v381(0x389) = CONST 
0x384: JUMPI v381(0x389) v380
----------------------------------

Begin block 0x385
prev = {'0x372'}, next = {}
----------------------------------
Block 0x385
0x385: v385(0x0) = CONST 
0x388: REVERT v385(0x0) v385(0x0)
----------------------------------

Begin block 0x389
prev = {'0x372'}, next = {'0x774'}
----------------------------------
Block 0x389
0x38b: v38b(0x1) = CONST 
0x38d: v38d(0xa0) = CONST 
0x38f: v38f(0x2) = CONST 
0x391: v391(0x10000000000000000000000000000000000000000) = EXP v38f(0x2) v38d(0xa0)
0x392: v392(0xffffffffffffffffffffffffffffffffffffffff) = SUB v391(0x10000000000000000000000000000000000000000) v38b(0x1)
0x394: v394 = CALLDATALOAD v377(0x4)
0x396: v396 = AND v392(0xffffffffffffffffffffffffffffffffffffffff) v394
0x398: v398(0x20) = CONST 
0x39a: v39a = ADD v398(0x20) v377(0x4)
0x39b: v39b = CALLDATALOAD v39a
0x39c: v39c = AND v39b v392(0xffffffffffffffffffffffffffffffffffffffff)
0x39d: v39d(0x774) = CONST 
0x3a0: JUMP v39d(0x774)
----------------------------------

Begin block 0x3a1
prev = {}, next = {'0x3a9', '0x3ad'}
----------------------------------
function safeAdd(uint256,uint256)()
Block 0x3a1
0x3a2: v3a2 = CALLVALUE 
0x3a4: v3a4 = ISZERO v3a2
0x3a5: v3a5(0x3ad) = CONST 
0x3a8: JUMPI v3a5(0x3ad) v3a4
----------------------------------

Begin block 0x3a9
prev = {'0x3a1'}, next = {}
----------------------------------
Block 0x3a9
0x3a9: v3a9(0x0) = CONST 
0x3ac: REVERT v3a9(0x0) v3a9(0x0)
----------------------------------

Begin block 0x3ad
prev = {'0x3a1'}, next = {'0x3c0', '0x3c4'}
----------------------------------
Block 0x3ad
0x3af: v3af(0x1c0) = CONST 
0x3b2: v3b2(0x4) = CONST 
0x3b5: v3b5 = CALLDATASIZE 
0x3b6: v3b6 = SUB v3b5 v3b2(0x4)
0x3b7: v3b7(0x40) = CONST 
0x3ba: v3ba = LT v3b6 v3b7(0x40)
0x3bb: v3bb = ISZERO v3ba
0x3bc: v3bc(0x3c4) = CONST 
0x3bf: JUMPI v3bc(0x3c4) v3bb
----------------------------------

Begin block 0x3c0
prev = {'0x3ad'}, next = {}
----------------------------------
Block 0x3c0
0x3c0: v3c0(0x0) = CONST 
0x3c3: REVERT v3c0(0x0) v3c0(0x0)
----------------------------------

Begin block 0x3c4
prev = {'0x3ad'}, next = {'0x79f0x3a1'}
----------------------------------
Block 0x3c4
0x3c7: v3c7 = CALLDATALOAD v3b2(0x4)
0x3c9: v3c9(0x20) = CONST 
0x3cb: v3cb = ADD v3c9(0x20) v3b2(0x4)
0x3cc: v3cc = CALLDATALOAD v3cb
0x3cd: v3cd(0x79f) = CONST 
0x3d0: JUMP v3cd(0x79f)
----------------------------------

Begin block 0x3d1
prev = {}, next = {'0x411', '0x4570x3d1'}
----------------------------------
function 0x3d1(v3d1arg0)
Block 0x3d1
0x3d2: v3d2(0x0) = CONST 
0x3d5: v3d5 = SLOAD v3d2(0x0)
0x3d6: v3d6(0x40) = CONST 
0x3d9: v3d9 = MLOAD v3d6(0x40)
0x3da: v3da(0x20) = CONST 
0x3dc: v3dc(0x2) = CONST 
0x3de: v3de(0x1) = CONST 
0x3e1: v3e1 = AND v3d5 v3de(0x1)
0x3e2: v3e2 = ISZERO v3e1
0x3e3: v3e3(0x100) = CONST 
0x3e6: v3e6 = MUL v3e3(0x100) v3e2
0x3e7: v3e7(0x0) = CONST 
0x3e9: v3e9(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v3e7(0x0)
0x3ea: v3ea = ADD v3e9(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v3e6
0x3ed: v3ed = AND v3d5 v3ea
0x3f1: v3f1 = DIV v3ed v3dc(0x2)
0x3f2: v3f2(0x1f) = CONST 
0x3f5: v3f5 = ADD v3f1 v3f2(0x1f)
0x3f8: v3f8 = DIV v3f5 v3da(0x20)
0x3fa: v3fa = MUL v3da(0x20) v3f8
0x3fc: v3fc = ADD v3d9 v3fa
0x3fe: v3fe = ADD v3da(0x20) v3fc
0x401: MSTORE v3d6(0x40) v3fe
0x404: MSTORE v3d9 v3f1
0x408: v408 = ADD v3d9 v3da(0x20)
0x40c: v40c = ISZERO v3f1
0x40d: v40d(0x457) = CONST 
0x410: JUMPI v40d(0x457) v40c
----------------------------------

Begin block 0x411
prev = {'0x3d1'}, next = {'0x42c0x3d1', '0x419'}
----------------------------------
Block 0x411
0x412: v412(0x1f) = CONST 
0x414: v414 = LT v412(0x1f) v3f1
0x415: v415(0x42c) = CONST 
0x418: JUMPI v415(0x42c) v414
----------------------------------

Begin block 0x419
prev = {'0x411'}, next = {'0x4570x3d1'}
----------------------------------
Block 0x419
0x419: v419(0x100) = CONST 
0x41e: v41e = SLOAD v3d2(0x0)
0x41f: v41f = DIV v41e v419(0x100)
0x420: v420 = MUL v41f v419(0x100)
0x422: MSTORE v408 v420
0x424: v424(0x20) = CONST 
0x426: v426 = ADD v424(0x20) v408
0x428: v428(0x457) = CONST 
0x42b: JUMP v428(0x457)
----------------------------------

Begin block 0x42c0x3d1
prev = {'0x411'}, next = {'0x43a0x3d1'}
----------------------------------
Block 0x42c0x3d1
0x42e0x3d1: v3d142e = ADD v408 v3f1
0x4310x3d1: v3d1431(0x0) = CONST 
0x4330x3d1: MSTORE v3d1431(0x0) v3d2(0x0)
0x4340x3d1: v3d1434(0x20) = CONST 
0x4360x3d1: v3d1436(0x0) = CONST 
0x4380x3d1: v3d1438 = SHA3 v3d1436(0x0) v3d1434(0x20)
----------------------------------

Begin block 0x42c0x61b
prev = {'0x65a'}, next = {'0x43a0x61b'}
----------------------------------
Block 0x42c0x61b
0x42e0x61b: v61b42e = ADD v651 v63a
0x4310x61b: v61b431(0x0) = CONST 
0x4330x61b: MSTORE v61b431(0x0) v61c(0x1)
0x4340x61b: v61b434(0x20) = CONST 
0x4360x61b: v61b436(0x0) = CONST 
0x4380x61b: v61b438 = SHA3 v61b436(0x0) v61b434(0x20)
----------------------------------

Begin block 0x43a0x3d1
prev = {'0x42c0x3d1', '0x43a0x3d1'}, next = {'0x43a0x3d1', '0x44e0x3d1'}
----------------------------------
Block 0x43a0x3d1
0x43a0x3d1_0x0: v43a3d1_0 = PHI v408 v3d1446
0x43a0x3d1_0x1: v43a3d1_1 = PHI v3d1442 v3d1438
0x43c0x3d1: v3d143c = SLOAD v43a3d1_1
0x43e0x3d1: MSTORE v43a3d1_0 v3d143c
0x4400x3d1: v3d1440(0x1) = CONST 
0x4420x3d1: v3d1442 = ADD v3d1440(0x1) v43a3d1_1
0x4440x3d1: v3d1444(0x20) = CONST 
0x4460x3d1: v3d1446 = ADD v3d1444(0x20) v43a3d1_0
0x4490x3d1: v3d1449 = GT v3d142e v3d1446
0x44a0x3d1: v3d144a(0x43a) = CONST 
0x44d0x3d1: JUMPI v3d144a(0x43a) v3d1449
----------------------------------

Begin block 0x43a0x61b
prev = {'0x42c0x61b', '0x43a0x61b'}, next = {'0x44e0x61b', '0x43a0x61b'}
----------------------------------
Block 0x43a0x61b
0x43a0x61b_0x0: v43a61b_0 = PHI v651 v61b446
0x43a0x61b_0x1: v43a61b_1 = PHI v61b442 v61b438
0x43c0x61b: v61b43c = SLOAD v43a61b_1
0x43e0x61b: MSTORE v43a61b_0 v61b43c
0x4400x61b: v61b440(0x1) = CONST 
0x4420x61b: v61b442 = ADD v61b440(0x1) v43a61b_1
0x4440x61b: v61b444(0x20) = CONST 
0x4460x61b: v61b446 = ADD v61b444(0x20) v43a61b_0
0x4490x61b: v61b449 = GT v61b42e v61b446
0x44a0x61b: v61b44a(0x43a) = CONST 
0x44d0x61b: JUMPI v61b44a(0x43a) v61b449
----------------------------------

Begin block 0x44e0x3d1
prev = {'0x43a0x3d1'}, next = {'0x4570x3d1'}
----------------------------------
Block 0x44e0x3d1
0x4500x3d1: v3d1450 = SUB v3d1446 v3d142e
0x4510x3d1: v3d1451(0x1f) = CONST 
0x4530x3d1: v3d1453 = AND v3d1451(0x1f) v3d1450
0x4550x3d1: v3d1455 = ADD v3d142e v3d1453
----------------------------------

Begin block 0x44e0x61b
prev = {'0x43a0x61b'}, next = {'0x4570x61b'}
----------------------------------
Block 0x44e0x61b
0x4500x61b: v61b450 = SUB v61b446 v61b42e
0x4510x61b: v61b451(0x1f) = CONST 
0x4530x61b: v61b453 = AND v61b451(0x1f) v61b450
0x4550x61b: v61b455 = ADD v61b42e v61b453
----------------------------------

Begin block 0x4570x3d1
prev = {'0x3d1', '0x419', '0x44e0x3d1'}, next = {}
----------------------------------
Block 0x4570x3d1
0x45e0x3d1: RETURNPRIVATE v3d1arg0 v3d9 v3d1arg0
----------------------------------

Begin block 0x4570x61b
prev = {'0x44e0x61b', '0x662', '0x61b'}, next = {}
----------------------------------
Block 0x4570x61b
0x45e0x61b: RETURNPRIVATE v61barg0 v623 v61barg0
----------------------------------

Begin block 0x45f
prev = {'0x181'}, next = {'0x4c00x15e'}
----------------------------------
Block 0x45f
0x460: v460 = CALLER 
0x461: v461(0x0) = CONST 
0x465: MSTORE v461(0x0) v460
0x466: v466(0x5) = CONST 
0x468: v468(0x20) = CONST 
0x46c: MSTORE v468(0x20) v466(0x5)
0x46d: v46d(0x40) = CONST 
0x471: v471 = SHA3 v461(0x0) v46d(0x40)
0x472: v472(0x1) = CONST 
0x474: v474(0xa0) = CONST 
0x476: v476(0x2) = CONST 
0x478: v478(0x10000000000000000000000000000000000000000) = EXP v476(0x2) v474(0xa0)
0x479: v479(0xffffffffffffffffffffffffffffffffffffffff) = SUB v478(0x10000000000000000000000000000000000000000) v472(0x1)
0x47b: v47b = AND v18d v479(0xffffffffffffffffffffffffffffffffffffffff)
0x47e: MSTORE v461(0x0) v47b
0x481: MSTORE v468(0x20) v471
0x484: v484 = SHA3 v461(0x0) v46d(0x40)
0x487: SSTORE v484 v192
0x489: v489 = MLOAD v46d(0x40)
0x48c: MSTORE v489 v192
0x48e: v48e = MLOAD v46d(0x40)
0x495: v495(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0x4b9: v4b9 = SUB v489 v48e
0x4ba: v4ba = ADD v4b9 v468(0x20)
0x4bc: LOG3 v48e v4ba v495(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) v460 v47b
0x4be: v4be(0x1) = CONST 
----------------------------------

Begin block 0x4c00x15e
prev = {'0x45f'}, next = {'0x1970x15e'}
----------------------------------
Block 0x4c00x15e
0x4c50x15e: JUMP v16c(0x197)
----------------------------------

Begin block 0x4c00x336
prev = {'0x769'}, next = {'0x1c00x336'}
----------------------------------
Block 0x4c00x336
0x4c50x336: JUMP v344(0x1c0)
----------------------------------

Begin block 0x4c00x3a1
prev = {'0x79f0x3a1'}, next = {'0x1c00x3a1'}
----------------------------------
Block 0x4c00x3a1
0x4c50x3a1: JUMP v3af(0x1c0)
----------------------------------

Begin block 0x4c00x79f
prev = {'0x79f'}, next = {}
----------------------------------
Block 0x4c00x79f
0x4c50x79f: RETURNPRIVATE v79farg2 v7a2
----------------------------------

Begin block 0x4c6
prev = {'0x1b7'}, next = {'0x1c00x1ab'}
----------------------------------
Block 0x4c6
0x4c7: v4c7(0x0) = CONST 
0x4ca: MSTORE v4c7(0x0) v4c7(0x0)
0x4cb: v4cb(0x4) = CONST 
0x4cd: v4cd(0x20) = CONST 
0x4cf: MSTORE v4cd(0x20) v4cb(0x4)
0x4d0: v4d0(0x17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec) = CONST 
0x4f1: v4f1 = SLOAD v4d0(0x17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec)
0x4f2: v4f2(0x3) = CONST 
0x4f4: v4f4 = SLOAD v4f2(0x3)
0x4f5: v4f5 = SUB v4f4 v4f1
0x4f7: JUMP v1b9(0x1c0)
----------------------------------

Begin block 0x4f8
prev = {'0x1f5'}, next = {'0x51b'}
----------------------------------
Block 0x4f8
0x4f9: v4f9(0x1) = CONST 
0x4fb: v4fb(0xa0) = CONST 
0x4fd: v4fd(0x2) = CONST 
0x4ff: v4ff(0x10000000000000000000000000000000000000000) = EXP v4fd(0x2) v4fb(0xa0)
0x500: v500(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4ff(0x10000000000000000000000000000000000000000) v4f9(0x1)
0x502: v502 = AND v202 v500(0xffffffffffffffffffffffffffffffffffffffff)
0x503: v503(0x0) = CONST 
0x507: MSTORE v503(0x0) v502
0x508: v508(0x4) = CONST 
0x50a: v50a(0x20) = CONST 
0x50c: MSTORE v50a(0x20) v508(0x4)
0x50d: v50d(0x40) = CONST 
0x510: v510 = SHA3 v503(0x0) v50d(0x40)
0x511: v511 = SLOAD v510
0x512: v512(0x51b) = CONST 
0x517: v517(0x675) = CONST 
0x51a: v51a_0 = CALLPRIVATE v517(0x675) v210 v511 v512(0x51b)
----------------------------------

Begin block 0x51b
prev = {'0x4f8'}, next = {'0x552'}
----------------------------------
Block 0x51b
0x51c: v51c(0x1) = CONST 
0x51e: v51e(0xa0) = CONST 
0x520: v520(0x2) = CONST 
0x522: v522(0x10000000000000000000000000000000000000000) = EXP v520(0x2) v51e(0xa0)
0x523: v523(0xffffffffffffffffffffffffffffffffffffffff) = SUB v522(0x10000000000000000000000000000000000000000) v51c(0x1)
0x525: v525 = AND v202 v523(0xffffffffffffffffffffffffffffffffffffffff)
0x526: v526(0x0) = CONST 
0x52a: MSTORE v526(0x0) v525
0x52b: v52b(0x4) = CONST 
0x52d: v52d(0x20) = CONST 
0x531: MSTORE v52d(0x20) v52b(0x4)
0x532: v532(0x40) = CONST 
0x536: v536 = SHA3 v526(0x0) v532(0x40)
0x53a: SSTORE v536 v51a_0
0x53b: v53b(0x5) = CONST 
0x53e: MSTORE v52d(0x20) v53b(0x5)
0x541: v541 = SHA3 v526(0x0) v532(0x40)
0x542: v542 = CALLER 
0x544: MSTORE v526(0x0) v542
0x546: MSTORE v52d(0x20) v541
0x547: v547 = SHA3 v526(0x0) v532(0x40)
0x548: v548 = SLOAD v547
0x549: v549(0x552) = CONST 
0x54e: v54e(0x675) = CONST 
0x551: v551_0 = CALLPRIVATE v54e(0x675) v210 v548 v549(0x552)
----------------------------------

Begin block 0x552
prev = {'0x51b'}, next = {'0x590'}
----------------------------------
Block 0x552
0x553: v553(0x1) = CONST 
0x555: v555(0xa0) = CONST 
0x557: v557(0x2) = CONST 
0x559: v559(0x10000000000000000000000000000000000000000) = EXP v557(0x2) v555(0xa0)
0x55a: v55a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v559(0x10000000000000000000000000000000000000000) v553(0x1)
0x55d: v55d = AND v202 v55a(0xffffffffffffffffffffffffffffffffffffffff)
0x55e: v55e(0x0) = CONST 
0x562: MSTORE v55e(0x0) v55d
0x563: v563(0x5) = CONST 
0x565: v565(0x20) = CONST 
0x569: MSTORE v565(0x20) v563(0x5)
0x56a: v56a(0x40) = CONST 
0x56e: v56e = SHA3 v55e(0x0) v56a(0x40)
0x56f: v56f = CALLER 
0x571: MSTORE v55e(0x0) v56f
0x573: MSTORE v565(0x20) v56e
0x576: v576 = SHA3 v55e(0x0) v56a(0x40)
0x57a: SSTORE v576 v551_0
0x57d: v57d = AND v20b v55a(0xffffffffffffffffffffffffffffffffffffffff)
0x57f: MSTORE v55e(0x0) v57d
0x580: v580(0x4) = CONST 
0x584: MSTORE v565(0x20) v580(0x4)
0x585: v585 = SHA3 v55e(0x0) v56a(0x40)
0x586: v586 = SLOAD v585
0x587: v587(0x590) = CONST 
0x58c: v58c(0x79f) = CONST 
0x58f: v58f_0 = CALLPRIVATE v58c(0x79f) v210 v586 v587(0x590)
----------------------------------

Begin block 0x590
prev = {'0x552'}, next = {'0x1970x1d2'}
----------------------------------
Block 0x590
0x591: v591(0x1) = CONST 
0x593: v593(0xa0) = CONST 
0x595: v595(0x2) = CONST 
0x597: v597(0x10000000000000000000000000000000000000000) = EXP v595(0x2) v593(0xa0)
0x598: v598(0xffffffffffffffffffffffffffffffffffffffff) = SUB v597(0x10000000000000000000000000000000000000000) v591(0x1)
0x59b: v59b = AND v20b v598(0xffffffffffffffffffffffffffffffffffffffff)
0x59c: v59c(0x0) = CONST 
0x5a0: MSTORE v59c(0x0) v59b
0x5a1: v5a1(0x4) = CONST 
0x5a3: v5a3(0x20) = CONST 
0x5a7: MSTORE v5a3(0x20) v5a1(0x4)
0x5a8: v5a8(0x40) = CONST 
0x5ad: v5ad = SHA3 v59c(0x0) v5a8(0x40)
0x5b1: SSTORE v5ad v58f_0
0x5b3: v5b3 = MLOAD v5a8(0x40)
0x5b6: MSTORE v5b3 v210
0x5b8: v5b8 = MLOAD v5a8(0x40)
0x5bd: v5bd = AND v202 v598(0xffffffffffffffffffffffffffffffffffffffff)
0x5bf: v5bf(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x5e4: v5e4 = SUB v5b3 v5b8
0x5e5: v5e5 = ADD v5e4 v5a3(0x20)
0x5e7: LOG3 v5b8 v5e5 v5bf(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v5bd v59b
0x5e9: v5e9(0x1) = CONST 
0x5f0: JUMP v1e0(0x197)
----------------------------------

Begin block 0x5f1
prev = {'0x221'}, next = {'0x22a'}
----------------------------------
Block 0x5f1
0x5f2: v5f2(0x2) = CONST 
0x5f4: v5f4 = SLOAD v5f2(0x2)
0x5f5: v5f5(0xff) = CONST 
0x5f7: v5f7 = AND v5f5(0xff) v5f4
0x5f9: JUMP v223(0x22a)
----------------------------------

Begin block 0x5fa
prev = {'0x24c'}, next = {'0x1c00x240'}
----------------------------------
Block 0x5fa
0x5fb: v5fb(0x3) = CONST 
0x5fd: v5fd = SLOAD v5fb(0x3)
0x5ff: JUMP v24e(0x1c0)
----------------------------------

Begin block 0x600
prev = {'0x278'}, next = {'0x1c00x255'}
----------------------------------
Block 0x600
0x601: v601(0x1) = CONST 
0x603: v603(0xa0) = CONST 
0x605: v605(0x2) = CONST 
0x607: v607(0x10000000000000000000000000000000000000000) = EXP v605(0x2) v603(0xa0)
0x608: v608(0xffffffffffffffffffffffffffffffffffffffff) = SUB v607(0x10000000000000000000000000000000000000000) v601(0x1)
0x609: v609 = AND v608(0xffffffffffffffffffffffffffffffffffffffff) v283
0x60a: v60a(0x0) = CONST 
0x60e: MSTORE v60a(0x0) v609
0x60f: v60f(0x4) = CONST 
0x611: v611(0x20) = CONST 
0x613: MSTORE v611(0x20) v60f(0x4)
0x614: v614(0x40) = CONST 
0x617: v617 = SHA3 v60a(0x0) v614(0x40)
0x618: v618 = SLOAD v617
0x61a: JUMP v263(0x1c0)
----------------------------------

Begin block 0x61b
prev = {}, next = {'0x65a', '0x4570x61b'}
----------------------------------
function 0x61b(v61barg0)
Block 0x61b
0x61c: v61c(0x1) = CONST 
0x61f: v61f = SLOAD v61c(0x1)
0x620: v620(0x40) = CONST 
0x623: v623 = MLOAD v620(0x40)
0x624: v624(0x20) = CONST 
0x626: v626(0x2) = CONST 
0x62a: v62a = AND v61c(0x1) v61f
0x62b: v62b = ISZERO v62a
0x62c: v62c(0x100) = CONST 
0x62f: v62f = MUL v62c(0x100) v62b
0x630: v630(0x0) = CONST 
0x632: v632(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v630(0x0)
0x633: v633 = ADD v632(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v62f
0x636: v636 = AND v61f v633
0x63a: v63a = DIV v636 v626(0x2)
0x63b: v63b(0x1f) = CONST 
0x63e: v63e = ADD v63a v63b(0x1f)
0x641: v641 = DIV v63e v624(0x20)
0x643: v643 = MUL v624(0x20) v641
0x645: v645 = ADD v623 v643
0x647: v647 = ADD v624(0x20) v645
0x64a: MSTORE v620(0x40) v647
0x64d: MSTORE v623 v63a
0x651: v651 = ADD v623 v624(0x20)
0x655: v655 = ISZERO v63a
0x656: v656(0x457) = CONST 
0x659: JUMPI v656(0x457) v655
----------------------------------

Begin block 0x65a
prev = {'0x61b'}, next = {'0x42c0x61b', '0x662'}
----------------------------------
Block 0x65a
0x65b: v65b(0x1f) = CONST 
0x65d: v65d = LT v65b(0x1f) v63a
0x65e: v65e(0x42c) = CONST 
0x661: JUMPI v65e(0x42c) v65d
----------------------------------

Begin block 0x662
prev = {'0x65a'}, next = {'0x4570x61b'}
----------------------------------
Block 0x662
0x662: v662(0x100) = CONST 
0x667: v667 = SLOAD v61c(0x1)
0x668: v668 = DIV v667 v662(0x100)
0x669: v669 = MUL v668 v662(0x100)
0x66b: MSTORE v651 v669
0x66d: v66d(0x20) = CONST 
0x66f: v66f = ADD v66d(0x20) v651
0x671: v671(0x457) = CONST 
0x674: JUMP v671(0x457)
----------------------------------

Begin block 0x675
prev = {}, next = {'0x6800x675', '0x6840x675'}
----------------------------------
function 0x675(v675arg0, v675arg1, v675arg2)
Block 0x675
0x676: v676(0x0) = CONST 
0x67a: v67a = GT v675arg0 v675arg1
0x67b: v67b = ISZERO v67a
0x67c: v67c(0x684) = CONST 
0x67f: JUMPI v67c(0x684) v67b
----------------------------------

Begin block 0x6750x29d
prev = {'0x2c0'}, next = {'0x6840x29d', '0x6800x29d'}
----------------------------------
Block 0x6750x29d
0x6760x29d: v29d676(0x0) = CONST 
0x67a0x29d: v29d67a = GT v2c8 v2c3
0x67b0x29d: v29d67b = ISZERO v29d67a
0x67c0x29d: v29d67c(0x684) = CONST 
0x67f0x29d: JUMPI v29d67c(0x684) v29d67b
----------------------------------

Begin block 0x6800x29d
prev = {'0x6750x29d'}, next = {}
----------------------------------
Block 0x6800x29d
0x6800x29d: v29d680(0x0) = CONST 
0x6830x29d: REVERT v29d680(0x0) v29d680(0x0)
----------------------------------

Begin block 0x6800x675
prev = {'0x675'}, next = {}
----------------------------------
Block 0x6800x675
0x6800x675: v675680(0x0) = CONST 
0x6830x675: REVERT v675680(0x0) v675680(0x0)
----------------------------------

Begin block 0x6840x29d
prev = {'0x6750x29d'}, next = {'0x1c00x29d'}
----------------------------------
Block 0x6840x29d
0x6870x29d: v29d687 = SUB v2c3 v2c8
0x6890x29d: JUMP v2ab(0x1c0)
----------------------------------

Begin block 0x6840x675
prev = {'0x675'}, next = {}
----------------------------------
Block 0x6840x675
0x6870x675: v675687 = SUB v675arg1 v675arg0
0x6890x675: RETURNPRIVATE v675arg2 v675687
----------------------------------

Begin block 0x68a
prev = {'0x2f0'}, next = {'0x6a4'}
----------------------------------
Block 0x68a
0x68b: v68b = CALLER 
0x68c: v68c(0x0) = CONST 
0x690: MSTORE v68c(0x0) v68b
0x691: v691(0x4) = CONST 
0x693: v693(0x20) = CONST 
0x695: MSTORE v693(0x20) v691(0x4)
0x696: v696(0x40) = CONST 
0x699: v699 = SHA3 v68c(0x0) v696(0x40)
0x69a: v69a = SLOAD v699
0x69b: v69b(0x6a4) = CONST 
0x6a0: v6a0(0x675) = CONST 
0x6a3: v6a3_0 = CALLPRIVATE v6a0(0x675) v301 v69a v69b(0x6a4)
----------------------------------

Begin block 0x6a4
prev = {'0x68a'}, next = {'0x6d0'}
----------------------------------
Block 0x6a4
0x6a5: v6a5 = CALLER 
0x6a6: v6a6(0x0) = CONST 
0x6aa: MSTORE v6a6(0x0) v6a5
0x6ab: v6ab(0x4) = CONST 
0x6ad: v6ad(0x20) = CONST 
0x6af: MSTORE v6ad(0x20) v6ab(0x4)
0x6b0: v6b0(0x40) = CONST 
0x6b4: v6b4 = SHA3 v6a6(0x0) v6b0(0x40)
0x6b8: SSTORE v6b4 v6a3_0
0x6b9: v6b9(0x1) = CONST 
0x6bb: v6bb(0xa0) = CONST 
0x6bd: v6bd(0x2) = CONST 
0x6bf: v6bf(0x10000000000000000000000000000000000000000) = EXP v6bd(0x2) v6bb(0xa0)
0x6c0: v6c0(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6bf(0x10000000000000000000000000000000000000000) v6b9(0x1)
0x6c2: v6c2 = AND v2fc v6c0(0xffffffffffffffffffffffffffffffffffffffff)
0x6c4: MSTORE v6a6(0x0) v6c2
0x6c5: v6c5 = SHA3 v6a6(0x0) v6b0(0x40)
0x6c6: v6c6 = SLOAD v6c5
0x6c7: v6c7(0x6d0) = CONST 
0x6cc: v6cc(0x79f) = CONST 
0x6cf: v6cf_0 = CALLPRIVATE v6cc(0x79f) v301 v6c6 v6c7(0x6d0)
----------------------------------

Begin block 0x6d0
prev = {'0x6a4'}, next = {'0x1970x2cd'}
----------------------------------
Block 0x6d0
0x6d1: v6d1(0x1) = CONST 
0x6d3: v6d3(0xa0) = CONST 
0x6d5: v6d5(0x2) = CONST 
0x6d7: v6d7(0x10000000000000000000000000000000000000000) = EXP v6d5(0x2) v6d3(0xa0)
0x6d8: v6d8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v6d7(0x10000000000000000000000000000000000000000) v6d1(0x1)
0x6da: v6da = AND v2fc v6d8(0xffffffffffffffffffffffffffffffffffffffff)
0x6db: v6db(0x0) = CONST 
0x6df: MSTORE v6db(0x0) v6da
0x6e0: v6e0(0x4) = CONST 
0x6e2: v6e2(0x20) = CONST 
0x6e6: MSTORE v6e2(0x20) v6e0(0x4)
0x6e7: v6e7(0x40) = CONST 
0x6ec: v6ec = SHA3 v6db(0x0) v6e7(0x40)
0x6f0: SSTORE v6ec v6cf_0
0x6f2: v6f2 = MLOAD v6e7(0x40)
0x6f5: MSTORE v6f2 v301
0x6f7: v6f7 = MLOAD v6e7(0x40)
0x6fa: v6fa = CALLER 
0x6fc: v6fc(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x720: v720 = SUB v6f2 v6f7
0x723: v723 = ADD v6e2(0x20) v720
0x725: LOG3 v6f7 v723 v6fc(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v6fa v6da
0x727: v727(0x1) = CONST 
0x72d: JUMP v2db(0x197)
----------------------------------

Begin block 0x72e
prev = {'0x329'}, next = {'0x73c', '0x738'}
----------------------------------
Block 0x72e
0x72f: v72f(0x0) = CONST 
0x733: v733 = GT v331 v72f(0x0)
0x734: v734(0x73c) = CONST 
0x737: JUMPI v734(0x73c) v733
----------------------------------

Begin block 0x738
prev = {'0x72e'}, next = {}
----------------------------------
Block 0x738
0x738: v738(0x0) = CONST 
0x73b: REVERT v738(0x0) v738(0x0)
----------------------------------

Begin block 0x73c
prev = {'0x72e'}, next = {'0x747', '0x746'}
----------------------------------
Block 0x73c
0x740: v740 = ISZERO v331
0x741: v741 = ISZERO v740
0x742: v742(0x747) = CONST 
0x745: JUMPI v742(0x747) v741
----------------------------------

Begin block 0x746
prev = {'0x73c'}, next = {}
----------------------------------
Block 0x746
0x746: THROW 
----------------------------------

Begin block 0x747
prev = {'0x73c'}, next = {'0x1c00x306'}
----------------------------------
Block 0x747
0x748: v748 = DIV v32c v331
0x74e: JUMP v314(0x1c0)
----------------------------------

Begin block 0x74f
prev = {'0x359'}, next = {'0x769', '0x75a'}
----------------------------------
Block 0x74f
0x752: v752 = MUL v361 v35c
0x754: v754 = ISZERO v35c
0x756: v756(0x769) = CONST 
0x759: JUMPI v756(0x769) v754
----------------------------------

Begin block 0x75a
prev = {'0x74f'}, next = {'0x765', '0x766'}
----------------------------------
Block 0x75a
0x75f: v75f = ISZERO v35c
0x760: v760 = ISZERO v75f
0x761: v761(0x766) = CONST 
0x764: JUMPI v761(0x766) v760
----------------------------------

Begin block 0x765
prev = {'0x75a'}, next = {}
----------------------------------
Block 0x765
0x765: THROW 
----------------------------------

Begin block 0x766
prev = {'0x75a'}, next = {'0x769'}
----------------------------------
Block 0x766
0x767: v767 = DIV v752 v35c
0x768: v768 = EQ v767 v361
----------------------------------

Begin block 0x769
prev = {'0x74f', '0x766'}, next = {'0x770', '0x4c00x336'}
----------------------------------
Block 0x769
0x769_0x0: v769_0 = PHI v754 v768
0x76a: v76a = ISZERO v769_0
0x76b: v76b = ISZERO v76a
0x76c: v76c(0x4c0) = CONST 
0x76f: JUMPI v76c(0x4c0) v76b
----------------------------------

Begin block 0x770
prev = {'0x769'}, next = {}
----------------------------------
Block 0x770
0x770: v770(0x0) = CONST 
0x773: REVERT v770(0x0) v770(0x0)
----------------------------------

Begin block 0x774
prev = {'0x389'}, next = {'0x1c00x366'}
----------------------------------
Block 0x774
0x775: v775(0x1) = CONST 
0x777: v777(0xa0) = CONST 
0x779: v779(0x2) = CONST 
0x77b: v77b(0x10000000000000000000000000000000000000000) = EXP v779(0x2) v777(0xa0)
0x77c: v77c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v77b(0x10000000000000000000000000000000000000000) v775(0x1)
0x77f: v77f = AND v77c(0xffffffffffffffffffffffffffffffffffffffff) v396
0x780: v780(0x0) = CONST 
0x784: MSTORE v780(0x0) v77f
0x785: v785(0x5) = CONST 
0x787: v787(0x20) = CONST 
0x78b: MSTORE v787(0x20) v785(0x5)
0x78c: v78c(0x40) = CONST 
0x790: v790 = SHA3 v780(0x0) v78c(0x40)
0x794: v794 = AND v77c(0xffffffffffffffffffffffffffffffffffffffff) v39c
0x796: MSTORE v780(0x0) v794
0x79a: MSTORE v787(0x20) v790
0x79b: v79b = SHA3 v780(0x0) v78c(0x40)
0x79c: v79c = SLOAD v79b
0x79e: JUMP v374(0x1c0)
----------------------------------

Begin block 0x79f
prev = {}, next = {'0x4c00x79f', '0x7ab0x79f'}
----------------------------------
function 0x79f(v79farg0, v79farg1, v79farg2)
Block 0x79f
0x7a2: v7a2 = ADD v79farg0 v79farg1
0x7a5: v7a5 = LT v7a2 v79farg1
0x7a6: v7a6 = ISZERO v7a5
0x7a7: v7a7(0x4c0) = CONST 
0x7aa: JUMPI v7a7(0x4c0) v7a6
----------------------------------

Begin block 0x79f0x3a1
prev = {'0x3c4'}, next = {'0x4c00x3a1', '0x7ab0x3a1'}
----------------------------------
Block 0x79f0x3a1
0x7a20x3a1: v3a17a2 = ADD v3cc v3c7
0x7a50x3a1: v3a17a5 = LT v3a17a2 v3c7
0x7a60x3a1: v3a17a6 = ISZERO v3a17a5
0x7a70x3a1: v3a17a7(0x4c0) = CONST 
0x7aa0x3a1: JUMPI v3a17a7(0x4c0) v3a17a6
----------------------------------

Begin block 0x7ab0x3a1
prev = {'0x79f0x3a1'}, next = {}
----------------------------------
Block 0x7ab0x3a1
0x7ab0x3a1: v3a17ab(0x0) = CONST 
0x7ae0x3a1: REVERT v3a17ab(0x0) v3a17ab(0x0)
----------------------------------

Begin block 0x7ab0x79f
prev = {'0x79f'}, next = {}
----------------------------------
Block 0x7ab0x79f
0x7ab0x79f: v79f7ab(0x0) = CONST 
0x7ae0x79f: REVERT v79f7ab(0x0) v79f7ab(0x0)
----------------------------------

Begin block 0x7f1
prev = {'0x0', '0xc4'}, next = {}
----------------------------------
Block 0x7f1
0x7f2: v7f2(0xcf) = CONST 
0x7f3: CALLPRIVATE v7f2(0xcf)
----------------------------------

Begin block 0x7f4
prev = {'0xd'}, next = {}
----------------------------------
Block 0x7f4
0x7f5: v7f5(0xd4) = CONST 
0x7f6: CALLPRIVATE v7f5(0xd4)
----------------------------------

Begin block 0x7f7
prev = {'0x40'}, next = {}
----------------------------------
Block 0x7f7
0x7f8: v7f8(0x15e) = CONST 
0x7f9: CALLPRIVATE v7f8(0x15e)
----------------------------------

Begin block 0x7fa
prev = {'0x4b'}, next = {}
----------------------------------
Block 0x7fa
0x7fb: v7fb(0x1ab) = CONST 
0x7fc: CALLPRIVATE v7fb(0x1ab)
----------------------------------

Begin block 0x7fd
prev = {'0x56'}, next = {}
----------------------------------
Block 0x7fd
0x7fe: v7fe(0x1d2) = CONST 
0x7ff: CALLPRIVATE v7fe(0x1d2)
----------------------------------

Begin block 0x800
prev = {'0x61'}, next = {}
----------------------------------
Block 0x800
0x801: v801(0x215) = CONST 
0x802: CALLPRIVATE v801(0x215)
----------------------------------

Begin block 0x803
prev = {'0x6c'}, next = {}
----------------------------------
Block 0x803
0x804: v804(0x240) = CONST 
0x805: CALLPRIVATE v804(0x240)
----------------------------------

Begin block 0x806
prev = {'0x77'}, next = {}
----------------------------------
Block 0x806
0x807: v807(0x255) = CONST 
0x808: CALLPRIVATE v807(0x255)
----------------------------------

Begin block 0x809
prev = {'0x82'}, next = {}
----------------------------------
Block 0x809
0x80a: v80a(0x288) = CONST 
0x80b: CALLPRIVATE v80a(0x288)
----------------------------------

Begin block 0x80c
prev = {'0x8d'}, next = {}
----------------------------------
Block 0x80c
0x80d: v80d(0x29d) = CONST 
0x80e: CALLPRIVATE v80d(0x29d)
----------------------------------

Begin block 0x80f
prev = {'0x98'}, next = {}
----------------------------------
Block 0x80f
0x810: v810(0x2cd) = CONST 
0x811: CALLPRIVATE v810(0x2cd)
----------------------------------

Begin block 0x812
prev = {'0xa3'}, next = {}
----------------------------------
Block 0x812
0x813: v813(0x306) = CONST 
0x814: CALLPRIVATE v813(0x306)
----------------------------------

Begin block 0x815
prev = {'0xae'}, next = {}
----------------------------------
Block 0x815
0x816: v816(0x336) = CONST 
0x817: CALLPRIVATE v816(0x336)
----------------------------------

Begin block 0x818
prev = {'0xb9'}, next = {}
----------------------------------
Block 0x818
0x819: v819(0x366) = CONST 
0x81a: CALLPRIVATE v819(0x366)
----------------------------------

Begin block 0x81b
prev = {'0xc4'}, next = {}
----------------------------------
Block 0x81b
0x81c: v81c(0x3a1) = CONST 
0x81d: CALLPRIVATE v81c(0x3a1)
----------------------------------
