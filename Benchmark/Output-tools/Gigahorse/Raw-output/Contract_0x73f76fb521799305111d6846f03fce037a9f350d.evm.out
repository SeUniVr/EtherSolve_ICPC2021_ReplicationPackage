
Begin block 0x0
prev = {}, next = {'0x890', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x876: v876(0x890) = CONST 
0x877: JUMPI v876(0x890) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x893', '0x40'}
----------------------------------
Block 0xd
0xd: vd(0xffffffff) = CONST 
0x12: v12(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x30: v30(0x0) = CONST 
0x32: v32 = CALLDATALOAD v30(0x0)
0x33: v33 = DIV v32 v12(0x100000000000000000000000000000000000000000000000000000000)
0x34: v34 = AND v33 vd(0xffffffff)
0x35: v35(0x6fdde03) = CONST 
0x3b: v3b = EQ v34 v35(0x6fdde03)
0x878: v878(0x893) = CONST 
0x879: JUMPI v878(0x893) v3b
----------------------------------

Begin block 0x40
prev = {'0xd'}, next = {'0x896', '0x4b'}
----------------------------------
Block 0x40
0x41: v41(0x95ea7b3) = CONST 
0x46: v46 = EQ v41(0x95ea7b3) v34
0x87a: v87a(0x896) = CONST 
0x87b: JUMPI v87a(0x896) v46
----------------------------------

Begin block 0x4b
prev = {'0x40'}, next = {'0x56', '0x899'}
----------------------------------
Block 0x4b
0x4c: v4c(0x18160ddd) = CONST 
0x51: v51 = EQ v4c(0x18160ddd) v34
0x87c: v87c(0x899) = CONST 
0x87d: JUMPI v87c(0x899) v51
----------------------------------

Begin block 0x56
prev = {'0x4b'}, next = {'0x61', '0x89c'}
----------------------------------
Block 0x56
0x57: v57(0x23b872dd) = CONST 
0x5c: v5c = EQ v57(0x23b872dd) v34
0x87e: v87e(0x89c) = CONST 
0x87f: JUMPI v87e(0x89c) v5c
----------------------------------

Begin block 0x61
prev = {'0x56'}, next = {'0x6c', '0x89f'}
----------------------------------
Block 0x61
0x62: v62(0x313ce567) = CONST 
0x67: v67 = EQ v62(0x313ce567) v34
0x880: v880(0x89f) = CONST 
0x881: JUMPI v880(0x89f) v67
----------------------------------

Begin block 0x6c
prev = {'0x61'}, next = {'0x8a2', '0x77'}
----------------------------------
Block 0x6c
0x6d: v6d(0x42966c68) = CONST 
0x72: v72 = EQ v6d(0x42966c68) v34
0x882: v882(0x8a2) = CONST 
0x883: JUMPI v882(0x8a2) v72
----------------------------------

Begin block 0x77
prev = {'0x6c'}, next = {'0x8a5', '0x82'}
----------------------------------
Block 0x77
0x78: v78(0x70a08231) = CONST 
0x7d: v7d = EQ v78(0x70a08231) v34
0x884: v884(0x8a5) = CONST 
0x885: JUMPI v884(0x8a5) v7d
----------------------------------

Begin block 0x82
prev = {'0x77'}, next = {'0x8d', '0x8a8'}
----------------------------------
Block 0x82
0x83: v83(0x79cc6790) = CONST 
0x88: v88 = EQ v83(0x79cc6790) v34
0x886: v886(0x8a8) = CONST 
0x887: JUMPI v886(0x8a8) v88
----------------------------------

Begin block 0x8d
prev = {'0x82'}, next = {'0x8ab', '0x98'}
----------------------------------
Block 0x8d
0x8e: v8e(0x95d89b41) = CONST 
0x93: v93 = EQ v8e(0x95d89b41) v34
0x888: v888(0x8ab) = CONST 
0x889: JUMPI v888(0x8ab) v93
----------------------------------

Begin block 0x98
prev = {'0x8d'}, next = {'0xa3', '0x8ae'}
----------------------------------
Block 0x98
0x99: v99(0xa9059cbb) = CONST 
0x9e: v9e = EQ v99(0xa9059cbb) v34
0x88a: v88a(0x8ae) = CONST 
0x88b: JUMPI v88a(0x8ae) v9e
----------------------------------

Begin block 0xa3
prev = {'0x98'}, next = {'0x8b1', '0xae'}
----------------------------------
Block 0xa3
0xa4: va4(0xcae9ca51) = CONST 
0xa9: va9 = EQ va4(0xcae9ca51) v34
0x88c: v88c(0x8b1) = CONST 
0x88d: JUMPI v88c(0x8b1) va9
----------------------------------

Begin block 0xae
prev = {'0xa3'}, next = {'0x890', '0x8b4'}
----------------------------------
Block 0xae
0xaf: vaf(0xdd62ed3e) = CONST 
0xb4: vb4 = EQ vaf(0xdd62ed3e) v34
0x88e: v88e(0x8b4) = CONST 
0x88f: JUMPI v88e(0x8b4) vb4
----------------------------------

Begin block 0xb9
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0xb9
0xba: vba(0x0) = CONST 
0xbd: REVERT vba(0x0) vba(0x0)
----------------------------------

Begin block 0xbe
prev = {}, next = {'0xca', '0xc6'}
----------------------------------
function name()()
Block 0xbe
0xbf: vbf = CALLVALUE 
0xc1: vc1 = ISZERO vbf
0xc2: vc2(0xca) = CONST 
0xc5: JUMPI vc2(0xca) vc1
----------------------------------

Begin block 0xc6
prev = {'0xbe'}, next = {}
----------------------------------
Block 0xc6
0xc6: vc6(0x0) = CONST 
0xc9: REVERT vc6(0x0) vc6(0x0)
----------------------------------

Begin block 0xca
prev = {'0xbe'}, next = {'0xd30xbe'}
----------------------------------
Block 0xca
0xcc: vcc(0xd3) = CONST 
0xcf: vcf(0x324) = CONST 
0xd2: vd2_0, vd2_1 = CALLPRIVATE vcf(0x324) vcc(0xd3)
----------------------------------

Begin block 0xd30xbe
prev = {'0xca'}, next = {'0xf50xbe'}
----------------------------------
Block 0xd30xbe
0xd40xbe: vbed4(0x40) = CONST 
0xd70xbe: vbed7 = MLOAD vbed4(0x40)
0xd80xbe: vbed8(0x20) = CONST 
0xdc0xbe: MSTORE vbed7 vbed8(0x20)
0xde0xbe: vbede = MLOAD vd2_0
0xe10xbe: vbee1 = ADD vbed7 vbed8(0x20)
0xe20xbe: MSTORE vbee1 vbede
0xe40xbe: vbee4 = MLOAD vd2_0
0xeb0xbe: vbeeb = ADD vbed7 vbed4(0x40)
0xee0xbe: vbeee = ADD vd2_0 vbed8(0x20)
0xf30xbe: vbef3(0x0) = CONST 
----------------------------------

Begin block 0xd30x259
prev = {'0x265'}, next = {'0xf50x259'}
----------------------------------
Block 0xd30x259
0xd40x259: v259d4(0x40) = CONST 
0xd70x259: v259d7 = MLOAD v259d4(0x40)
0xd80x259: v259d8(0x20) = CONST 
0xdc0x259: MSTORE v259d7 v259d8(0x20)
0xde0x259: v259de = MLOAD v26d_0
0xe10x259: v259e1 = ADD v259d7 v259d8(0x20)
0xe20x259: MSTORE v259e1 v259de
0xe40x259: v259e4 = MLOAD v26d_0
0xeb0x259: v259eb = ADD v259d7 v259d4(0x40)
0xee0x259: v259ee = ADD v26d_0 v259d8(0x20)
0xf30x259: v259f3(0x0) = CONST 
----------------------------------

Begin block 0xf50xbe
prev = {'0xd30xbe', '0xfe0xbe'}, next = {'0x10d0xbe', '0xfe0xbe'}
----------------------------------
Block 0xf50xbe
0xf50xbe_0x0: vf5be_0 = PHI vbef3(0x0) vbe108
0xf80xbe: vbef8 = LT vf5be_0 vbee4
0xf90xbe: vbef9 = ISZERO vbef8
0xfa0xbe: vbefa(0x10d) = CONST 
0xfd0xbe: JUMPI vbefa(0x10d) vbef9
----------------------------------

Begin block 0xf50x259
prev = {'0xfe0x259', '0xd30x259'}, next = {'0xfe0x259', '0x10d0x259'}
----------------------------------
Block 0xf50x259
0xf50x259_0x0: vf5259_0 = PHI v259f3(0x0) v259108
0xf80x259: v259f8 = LT vf5259_0 v259e4
0xf90x259: v259f9 = ISZERO v259f8
0xfa0x259: v259fa(0x10d) = CONST 
0xfd0x259: JUMPI v259fa(0x10d) v259f9
----------------------------------

Begin block 0xfe0xbe
prev = {'0xf50xbe'}, next = {'0xf50xbe'}
----------------------------------
Block 0xfe0xbe
0xfe0xbe_0x0: vfebe_0 = PHI vbef3(0x0) vbe108
0x1000xbe: vbe100 = ADD vfebe_0 vbeee
0x1010xbe: vbe101 = MLOAD vbe100
0x1040xbe: vbe104 = ADD vfebe_0 vbeeb
0x1050xbe: MSTORE vbe104 vbe101
0x1060xbe: vbe106(0x20) = CONST 
0x1080xbe: vbe108 = ADD vbe106(0x20) vfebe_0
0x1090xbe: vbe109(0xf5) = CONST 
0x10c0xbe: JUMP vbe109(0xf5)
----------------------------------

Begin block 0xfe0x259
prev = {'0xf50x259'}, next = {'0xf50x259'}
----------------------------------
Block 0xfe0x259
0xfe0x259_0x0: vfe259_0 = PHI v259f3(0x0) v259108
0x1000x259: v259100 = ADD vfe259_0 v259ee
0x1010x259: v259101 = MLOAD v259100
0x1040x259: v259104 = ADD vfe259_0 v259eb
0x1050x259: MSTORE v259104 v259101
0x1060x259: v259106(0x20) = CONST 
0x1080x259: v259108 = ADD v259106(0x20) vfe259_0
0x1090x259: v259109(0xf5) = CONST 
0x10c0x259: JUMP v259109(0xf5)
----------------------------------

Begin block 0x10d0xbe
prev = {'0xf50xbe'}, next = {'0x1210xbe', '0x13a0xbe'}
----------------------------------
Block 0x10d0xbe
0x1160xbe: vbe116 = ADD vbee4 vbeeb
0x1180xbe: vbe118(0x1f) = CONST 
0x11a0xbe: vbe11a = AND vbe118(0x1f) vbee4
0x11c0xbe: vbe11c = ISZERO vbe11a
0x11d0xbe: vbe11d(0x13a) = CONST 
0x1200xbe: JUMPI vbe11d(0x13a) vbe11c
----------------------------------

Begin block 0x10d0x259
prev = {'0xf50x259'}, next = {'0x13a0x259', '0x1210x259'}
----------------------------------
Block 0x10d0x259
0x1160x259: v259116 = ADD v259e4 v259eb
0x1180x259: v259118(0x1f) = CONST 
0x11a0x259: v25911a = AND v259118(0x1f) v259e4
0x11c0x259: v25911c = ISZERO v25911a
0x11d0x259: v25911d(0x13a) = CONST 
0x1200x259: JUMPI v25911d(0x13a) v25911c
----------------------------------

Begin block 0x1210xbe
prev = {'0x10d0xbe'}, next = {'0x13a0xbe'}
----------------------------------
Block 0x1210xbe
0x1230xbe: vbe123 = SUB vbe116 vbe11a
0x1250xbe: vbe125 = MLOAD vbe123
0x1260xbe: vbe126(0x1) = CONST 
0x1290xbe: vbe129(0x20) = CONST 
0x12b0xbe: vbe12b = SUB vbe129(0x20) vbe11a
0x12c0xbe: vbe12c(0x100) = CONST 
0x12f0xbe: vbe12f = EXP vbe12c(0x100) vbe12b
0x1300xbe: vbe130 = SUB vbe12f vbe126(0x1)
0x1310xbe: vbe131 = NOT vbe130
0x1320xbe: vbe132 = AND vbe131 vbe125
0x1340xbe: MSTORE vbe123 vbe132
0x1350xbe: vbe135(0x20) = CONST 
0x1370xbe: vbe137 = ADD vbe135(0x20) vbe123
----------------------------------

Begin block 0x1210x259
prev = {'0x10d0x259'}, next = {'0x13a0x259'}
----------------------------------
Block 0x1210x259
0x1230x259: v259123 = SUB v259116 v25911a
0x1250x259: v259125 = MLOAD v259123
0x1260x259: v259126(0x1) = CONST 
0x1290x259: v259129(0x20) = CONST 
0x12b0x259: v25912b = SUB v259129(0x20) v25911a
0x12c0x259: v25912c(0x100) = CONST 
0x12f0x259: v25912f = EXP v25912c(0x100) v25912b
0x1300x259: v259130 = SUB v25912f v259126(0x1)
0x1310x259: v259131 = NOT v259130
0x1320x259: v259132 = AND v259131 v259125
0x1340x259: MSTORE v259123 v259132
0x1350x259: v259135(0x20) = CONST 
0x1370x259: v259137 = ADD v259135(0x20) v259123
----------------------------------

Begin block 0x13a0xbe
prev = {'0x1210xbe', '0x10d0xbe'}, next = {}
----------------------------------
Block 0x13a0xbe
0x13a0xbe_0x1: v13abe_1 = PHI vbe116 vbe137
0x1400xbe: vbe140(0x40) = CONST 
0x1420xbe: vbe142 = MLOAD vbe140(0x40)
0x1450xbe: vbe145 = SUB v13abe_1 vbe142
0x1470xbe: RETURN vbe142 vbe145
----------------------------------

Begin block 0x13a0x259
prev = {'0x1210x259', '0x10d0x259'}, next = {}
----------------------------------
Block 0x13a0x259
0x13a0x259_0x1: v13a259_1 = PHI v259116 v259137
0x1400x259: v259140(0x40) = CONST 
0x1420x259: v259142 = MLOAD v259140(0x40)
0x1450x259: v259145 = SUB v13a259_1 v259142
0x1470x259: RETURN v259142 v259145
----------------------------------

Begin block 0x148
prev = {}, next = {'0x154', '0x150'}
----------------------------------
function approve(address,uint256)()
Block 0x148
0x149: v149 = CALLVALUE 
0x14b: v14b = ISZERO v149
0x14c: v14c(0x154) = CONST 
0x14f: JUMPI v14c(0x154) v14b
----------------------------------

Begin block 0x150
prev = {'0x148'}, next = {}
----------------------------------
Block 0x150
0x150: v150(0x0) = CONST 
0x153: REVERT v150(0x0) v150(0x0)
----------------------------------

Begin block 0x154
prev = {'0x148'}, next = {'0x16c0x148'}
----------------------------------
Block 0x154
0x156: v156(0x16c) = CONST 
0x159: v159(0x1) = CONST 
0x15b: v15b(0xa0) = CONST 
0x15d: v15d(0x2) = CONST 
0x15f: v15f(0x10000000000000000000000000000000000000000) = EXP v15d(0x2) v15b(0xa0)
0x160: v160(0xffffffffffffffffffffffffffffffffffffffff) = SUB v15f(0x10000000000000000000000000000000000000000) v159(0x1)
0x161: v161(0x4) = CONST 
0x163: v163 = CALLDATALOAD v161(0x4)
0x164: v164 = AND v163 v160(0xffffffffffffffffffffffffffffffffffffffff)
0x165: v165(0x24) = CONST 
0x167: v167 = CALLDATALOAD v165(0x24)
0x168: v168(0x3b2) = CONST 
0x16b: v16b_0 = CALLPRIVATE v168(0x3b2) v167 v164 v156(0x16c)
----------------------------------

Begin block 0x16c0x148
prev = {'0x154'}, next = {}
----------------------------------
Block 0x16c0x148
0x16d0x148: v14816d(0x40) = CONST 
0x1700x148: v148170 = MLOAD v14816d(0x40)
0x1720x148: v148172 = ISZERO v16b_0
0x1730x148: v148173 = ISZERO v148172
0x1750x148: MSTORE v148170 v148173
0x1760x148: v148176 = MLOAD v14816d(0x40)
0x17a0x148: v14817a = SUB v148170 v148176
0x17b0x148: v14817b(0x20) = CONST 
0x17d0x148: v14817d = ADD v14817b(0x20) v14817a
0x17f0x148: RETURN v148176 v14817d
----------------------------------

Begin block 0x16c0x1a7
prev = {'0x44a'}, next = {}
----------------------------------
Block 0x16c0x1a7
0x16d0x1a7: v1a716d(0x40) = CONST 
0x1700x1a7: v1a7170 = MLOAD v1a716d(0x40)
0x1720x1a7: v1a7172 = ISZERO v44c(0x1)
0x1730x1a7: v1a7173 = ISZERO v1a7172
0x1750x1a7: MSTORE v1a7170 v1a7173
0x1760x1a7: v1a7176 = MLOAD v1a716d(0x40)
0x17a0x1a7: v1a717a = SUB v1a7170 v1a7176
0x17b0x1a7: v1a717b(0x20) = CONST 
0x17d0x1a7: v1a717d = ADD v1a717b(0x20) v1a717a
0x17f0x1a7: RETURN v1a7176 v1a717d
----------------------------------

Begin block 0x16c0x1fc
prev = {'0x479'}, next = {}
----------------------------------
Block 0x16c0x1fc
0x16d0x1fc: v1fc16d(0x40) = CONST 
0x1700x1fc: v1fc170 = MLOAD v1fc16d(0x40)
0x1720x1fc: v1fc172 = ISZERO v4cf(0x1)
0x1730x1fc: v1fc173 = ISZERO v1fc172
0x1750x1fc: MSTORE v1fc170 v1fc173
0x1760x1fc: v1fc176 = MLOAD v1fc16d(0x40)
0x17a0x1fc: v1fc17a = SUB v1fc170 v1fc176
0x17b0x1fc: v1fc17b(0x20) = CONST 
0x17d0x1fc: v1fc17d = ADD v1fc17b(0x20) v1fc17a
0x17f0x1fc: RETURN v1fc176 v1fc17d
----------------------------------

Begin block 0x16c0x235
prev = {'0x53c'}, next = {}
----------------------------------
Block 0x16c0x235
0x16d0x235: v23516d(0x40) = CONST 
0x1700x235: v235170 = MLOAD v23516d(0x40)
0x1720x235: v235172 = ISZERO v5b1(0x1)
0x1730x235: v235173 = ISZERO v235172
0x1750x235: MSTORE v235170 v235173
0x1760x235: v235176 = MLOAD v23516d(0x40)
0x17a0x235: v23517a = SUB v235170 v235176
0x17b0x235: v23517b(0x20) = CONST 
0x17d0x235: v23517d = ADD v23517b(0x20) v23517a
0x17f0x235: RETURN v235176 v23517d
----------------------------------

Begin block 0x16c0x294
prev = {'0x732'}, next = {}
----------------------------------
Block 0x16c0x294
0x16c0x294_0x0: v16c294_0 = PHI v622(0x0) v72e(0x1)
0x16d0x294: v29416d(0x40) = CONST 
0x1700x294: v294170 = MLOAD v29416d(0x40)
0x1720x294: v294172 = ISZERO v16c294_0
0x1730x294: v294173 = ISZERO v294172
0x1750x294: MSTORE v294170 v294173
0x1760x294: v294176 = MLOAD v29416d(0x40)
0x17a0x294: v29417a = SUB v294170 v294176
0x17b0x294: v29417b(0x20) = CONST 
0x17d0x294: v29417d = ADD v29417b(0x20) v29417a
0x17f0x294: RETURN v294176 v29417d
----------------------------------

Begin block 0x180
prev = {}, next = {'0x18c', '0x188'}
----------------------------------
function totalSupply()()
Block 0x180
0x181: v181 = CALLVALUE 
0x183: v183 = ISZERO v181
0x184: v184(0x18c) = CONST 
0x187: JUMPI v184(0x18c) v183
----------------------------------

Begin block 0x188
prev = {'0x180'}, next = {}
----------------------------------
Block 0x188
0x188: v188(0x0) = CONST 
0x18b: REVERT v188(0x0) v188(0x0)
----------------------------------

Begin block 0x18c
prev = {'0x180'}, next = {'0x3df'}
----------------------------------
Block 0x18c
0x18e: v18e(0x195) = CONST 
0x191: v191(0x3df) = CONST 
0x194: JUMP v191(0x3df)
----------------------------------

Begin block 0x1950x180
prev = {'0x3df'}, next = {}
----------------------------------
Block 0x1950x180
0x1960x180: v180196(0x40) = CONST 
0x1990x180: v180199 = MLOAD v180196(0x40)
0x19c0x180: MSTORE v180199 v3e2
0x19d0x180: v18019d = MLOAD v180196(0x40)
0x1a10x180: v1801a1 = SUB v180199 v18019d
0x1a20x180: v1801a2(0x20) = CONST 
0x1a40x180: v1801a4 = ADD v1801a2(0x20) v1801a1
0x1a60x180: RETURN v18019d v1801a4
----------------------------------

Begin block 0x1950x214
prev = {'0x4d5'}, next = {}
----------------------------------
Block 0x1950x214
0x1960x214: v214196(0x40) = CONST 
0x1990x214: v214199 = MLOAD v214196(0x40)
0x19c0x214: MSTORE v214199 v4e4
0x19d0x214: v21419d = MLOAD v214196(0x40)
0x1a10x214: v2141a1 = SUB v214199 v21419d
0x1a20x214: v2141a2(0x20) = CONST 
0x1a40x214: v2141a4 = ADD v2141a2(0x20) v2141a1
0x1a60x214: RETURN v21419d v2141a4
----------------------------------

Begin block 0x1950x2fd
prev = {'0x73a'}, next = {}
----------------------------------
Block 0x1950x2fd
0x1960x2fd: v2fd196(0x40) = CONST 
0x1990x2fd: v2fd199 = MLOAD v2fd196(0x40)
0x19c0x2fd: MSTORE v2fd199 v754
0x19d0x2fd: v2fd19d = MLOAD v2fd196(0x40)
0x1a10x2fd: v2fd1a1 = SUB v2fd199 v2fd19d
0x1a20x2fd: v2fd1a2(0x20) = CONST 
0x1a40x2fd: v2fd1a4 = ADD v2fd1a2(0x20) v2fd1a1
0x1a60x2fd: RETURN v2fd19d v2fd1a4
----------------------------------

Begin block 0x1a7
prev = {}, next = {'0x1b3', '0x1af'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x1a7
0x1a8: v1a8 = CALLVALUE 
0x1aa: v1aa = ISZERO v1a8
0x1ab: v1ab(0x1b3) = CONST 
0x1ae: JUMPI v1ab(0x1b3) v1aa
----------------------------------

Begin block 0x1af
prev = {'0x1a7'}, next = {}
----------------------------------
Block 0x1af
0x1af: v1af(0x0) = CONST 
0x1b2: REVERT v1af(0x0) v1af(0x0)
----------------------------------

Begin block 0x1b3
prev = {'0x1a7'}, next = {'0x3e5'}
----------------------------------
Block 0x1b3
0x1b5: v1b5(0x16c) = CONST 
0x1b8: v1b8(0x1) = CONST 
0x1ba: v1ba(0xa0) = CONST 
0x1bc: v1bc(0x2) = CONST 
0x1be: v1be(0x10000000000000000000000000000000000000000) = EXP v1bc(0x2) v1ba(0xa0)
0x1bf: v1bf(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1be(0x10000000000000000000000000000000000000000) v1b8(0x1)
0x1c0: v1c0(0x4) = CONST 
0x1c2: v1c2 = CALLDATALOAD v1c0(0x4)
0x1c4: v1c4 = AND v1bf(0xffffffffffffffffffffffffffffffffffffffff) v1c2
0x1c6: v1c6(0x24) = CONST 
0x1c8: v1c8 = CALLDATALOAD v1c6(0x24)
0x1c9: v1c9 = AND v1c8 v1bf(0xffffffffffffffffffffffffffffffffffffffff)
0x1ca: v1ca(0x44) = CONST 
0x1cc: v1cc = CALLDATALOAD v1ca(0x44)
0x1cd: v1cd(0x3e5) = CONST 
0x1d0: JUMP v1cd(0x3e5)
----------------------------------

Begin block 0x1d1
prev = {}, next = {'0x1dd', '0x1d9'}
----------------------------------
function decimals()()
Block 0x1d1
0x1d2: v1d2 = CALLVALUE 
0x1d4: v1d4 = ISZERO v1d2
0x1d5: v1d5(0x1dd) = CONST 
0x1d8: JUMPI v1d5(0x1dd) v1d4
----------------------------------

Begin block 0x1d9
prev = {'0x1d1'}, next = {}
----------------------------------
Block 0x1d9
0x1d9: v1d9(0x0) = CONST 
0x1dc: REVERT v1d9(0x0) v1d9(0x0)
----------------------------------

Begin block 0x1dd
prev = {'0x1d1'}, next = {'0x454'}
----------------------------------
Block 0x1dd
0x1df: v1df(0x1e6) = CONST 
0x1e2: v1e2(0x454) = CONST 
0x1e5: JUMP v1e2(0x454)
----------------------------------

Begin block 0x1e6
prev = {'0x454'}, next = {}
----------------------------------
Block 0x1e6
0x1e7: v1e7(0x40) = CONST 
0x1ea: v1ea = MLOAD v1e7(0x40)
0x1eb: v1eb(0xff) = CONST 
0x1ef: v1ef = AND v45a v1eb(0xff)
0x1f1: MSTORE v1ea v1ef
0x1f2: v1f2 = MLOAD v1e7(0x40)
0x1f6: v1f6 = SUB v1ea v1f2
0x1f7: v1f7(0x20) = CONST 
0x1f9: v1f9 = ADD v1f7(0x20) v1f6
0x1fb: RETURN v1f2 v1f9
----------------------------------

Begin block 0x1fc
prev = {}, next = {'0x208', '0x204'}
----------------------------------
function burn(uint256)()
Block 0x1fc
0x1fd: v1fd = CALLVALUE 
0x1ff: v1ff = ISZERO v1fd
0x200: v200(0x208) = CONST 
0x203: JUMPI v200(0x208) v1ff
----------------------------------

Begin block 0x204
prev = {'0x1fc'}, next = {}
----------------------------------
Block 0x204
0x204: v204(0x0) = CONST 
0x207: REVERT v204(0x0) v204(0x0)
----------------------------------

Begin block 0x208
prev = {'0x1fc'}, next = {'0x45d'}
----------------------------------
Block 0x208
0x20a: v20a(0x16c) = CONST 
0x20d: v20d(0x4) = CONST 
0x20f: v20f = CALLDATALOAD v20d(0x4)
0x210: v210(0x45d) = CONST 
0x213: JUMP v210(0x45d)
----------------------------------

Begin block 0x214
prev = {}, next = {'0x21c', '0x220'}
----------------------------------
function balanceOf(address)()
Block 0x214
0x215: v215 = CALLVALUE 
0x217: v217 = ISZERO v215
0x218: v218(0x220) = CONST 
0x21b: JUMPI v218(0x220) v217
----------------------------------

Begin block 0x21c
prev = {'0x214'}, next = {}
----------------------------------
Block 0x21c
0x21c: v21c(0x0) = CONST 
0x21f: REVERT v21c(0x0) v21c(0x0)
----------------------------------

Begin block 0x220
prev = {'0x214'}, next = {'0x4d5'}
----------------------------------
Block 0x220
0x222: v222(0x195) = CONST 
0x225: v225(0x1) = CONST 
0x227: v227(0xa0) = CONST 
0x229: v229(0x2) = CONST 
0x22b: v22b(0x10000000000000000000000000000000000000000) = EXP v229(0x2) v227(0xa0)
0x22c: v22c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v22b(0x10000000000000000000000000000000000000000) v225(0x1)
0x22d: v22d(0x4) = CONST 
0x22f: v22f = CALLDATALOAD v22d(0x4)
0x230: v230 = AND v22f v22c(0xffffffffffffffffffffffffffffffffffffffff)
0x231: v231(0x4d5) = CONST 
0x234: JUMP v231(0x4d5)
----------------------------------

Begin block 0x235
prev = {}, next = {'0x241', '0x23d'}
----------------------------------
function burnFrom(address,uint256)()
Block 0x235
0x236: v236 = CALLVALUE 
0x238: v238 = ISZERO v236
0x239: v239(0x241) = CONST 
0x23c: JUMPI v239(0x241) v238
----------------------------------

Begin block 0x23d
prev = {'0x235'}, next = {}
----------------------------------
Block 0x23d
0x23d: v23d(0x0) = CONST 
0x240: REVERT v23d(0x0) v23d(0x0)
----------------------------------

Begin block 0x241
prev = {'0x235'}, next = {'0x4e7'}
----------------------------------
Block 0x241
0x243: v243(0x16c) = CONST 
0x246: v246(0x1) = CONST 
0x248: v248(0xa0) = CONST 
0x24a: v24a(0x2) = CONST 
0x24c: v24c(0x10000000000000000000000000000000000000000) = EXP v24a(0x2) v248(0xa0)
0x24d: v24d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v24c(0x10000000000000000000000000000000000000000) v246(0x1)
0x24e: v24e(0x4) = CONST 
0x250: v250 = CALLDATALOAD v24e(0x4)
0x251: v251 = AND v250 v24d(0xffffffffffffffffffffffffffffffffffffffff)
0x252: v252(0x24) = CONST 
0x254: v254 = CALLDATALOAD v252(0x24)
0x255: v255(0x4e7) = CONST 
0x258: JUMP v255(0x4e7)
----------------------------------

Begin block 0x259
prev = {}, next = {'0x265', '0x261'}
----------------------------------
function symbol()()
Block 0x259
0x25a: v25a = CALLVALUE 
0x25c: v25c = ISZERO v25a
0x25d: v25d(0x265) = CONST 
0x260: JUMPI v25d(0x265) v25c
----------------------------------

Begin block 0x261
prev = {'0x259'}, next = {}
----------------------------------
Block 0x261
0x261: v261(0x0) = CONST 
0x264: REVERT v261(0x0) v261(0x0)
----------------------------------

Begin block 0x265
prev = {'0x259'}, next = {'0xd30x259'}
----------------------------------
Block 0x265
0x267: v267(0xd3) = CONST 
0x26a: v26a(0x5b8) = CONST 
0x26d: v26d_0, v26d_1 = CALLPRIVATE v26a(0x5b8) v267(0xd3)
----------------------------------

Begin block 0x26e
prev = {}, next = {'0x27a', '0x276'}
----------------------------------
function transfer(address,uint256)()
Block 0x26e
0x26f: v26f = CALLVALUE 
0x271: v271 = ISZERO v26f
0x272: v272(0x27a) = CONST 
0x275: JUMPI v272(0x27a) v271
----------------------------------

Begin block 0x276
prev = {'0x26e'}, next = {}
----------------------------------
Block 0x276
0x276: v276(0x0) = CONST 
0x279: REVERT v276(0x0) v276(0x0)
----------------------------------

Begin block 0x27a
prev = {'0x26e'}, next = {'0x612'}
----------------------------------
Block 0x27a
0x27c: v27c(0x292) = CONST 
0x27f: v27f(0x1) = CONST 
0x281: v281(0xa0) = CONST 
0x283: v283(0x2) = CONST 
0x285: v285(0x10000000000000000000000000000000000000000) = EXP v283(0x2) v281(0xa0)
0x286: v286(0xffffffffffffffffffffffffffffffffffffffff) = SUB v285(0x10000000000000000000000000000000000000000) v27f(0x1)
0x287: v287(0x4) = CONST 
0x289: v289 = CALLDATALOAD v287(0x4)
0x28a: v28a = AND v289 v286(0xffffffffffffffffffffffffffffffffffffffff)
0x28b: v28b(0x24) = CONST 
0x28d: v28d = CALLDATALOAD v28b(0x24)
0x28e: v28e(0x612) = CONST 
0x291: JUMP v28e(0x612)
----------------------------------

Begin block 0x292
prev = {'0x61d'}, next = {}
----------------------------------
Block 0x292
0x293: STOP 
----------------------------------

Begin block 0x294
prev = {}, next = {'0x2a0', '0x29c'}
----------------------------------
function approveAndCall(address,uint256,bytes)()
Block 0x294
0x295: v295 = CALLVALUE 
0x297: v297 = ISZERO v295
0x298: v298(0x2a0) = CONST 
0x29b: JUMPI v298(0x2a0) v297
----------------------------------

Begin block 0x29c
prev = {'0x294'}, next = {}
----------------------------------
Block 0x29c
0x29c: v29c(0x0) = CONST 
0x29f: REVERT v29c(0x0) v29c(0x0)
----------------------------------

Begin block 0x2a0
prev = {'0x294'}, next = {'0x621'}
----------------------------------
Block 0x2a0
0x2a2: v2a2(0x40) = CONST 
0x2a5: v2a5 = MLOAD v2a2(0x40)
0x2a6: v2a6(0x20) = CONST 
0x2a8: v2a8(0x4) = CONST 
0x2aa: v2aa(0x44) = CONST 
0x2ac: v2ac = CALLDATALOAD v2aa(0x44)
0x2af: v2af = ADD v2ac v2a8(0x4)
0x2b0: v2b0 = CALLDATALOAD v2af
0x2b1: v2b1(0x1f) = CONST 
0x2b4: v2b4 = ADD v2b0 v2b1(0x1f)
0x2b7: v2b7 = DIV v2b4 v2a6(0x20)
0x2b9: v2b9 = MUL v2a6(0x20) v2b7
0x2bb: v2bb = ADD v2a5 v2b9
0x2bd: v2bd = ADD v2a6(0x20) v2bb
0x2c0: MSTORE v2a2(0x40) v2bd
0x2c3: MSTORE v2a5 v2b0
0x2c4: v2c4(0x16c) = CONST 
0x2c9: v2c9 = CALLDATALOAD v2a8(0x4)
0x2ca: v2ca(0x1) = CONST 
0x2cc: v2cc(0xa0) = CONST 
0x2ce: v2ce(0x2) = CONST 
0x2d0: v2d0(0x10000000000000000000000000000000000000000) = EXP v2ce(0x2) v2cc(0xa0)
0x2d1: v2d1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2d0(0x10000000000000000000000000000000000000000) v2ca(0x1)
0x2d2: v2d2 = AND v2d1(0xffffffffffffffffffffffffffffffffffffffff) v2c9
0x2d4: v2d4(0x24) = CONST 
0x2d7: v2d7 = CALLDATALOAD v2d4(0x24)
0x2d9: v2d9 = CALLDATASIZE 
0x2dc: v2dc(0x64) = CONST 
0x2e0: v2e0 = ADD v2d4(0x24) v2ac
0x2e6: v2e6 = ADD v2a5 v2a6(0x20)
0x2ec: CALLDATACOPY v2e6 v2e0 v2b0
0x2f1: v2f1(0x621) = CONST 
0x2fc: JUMP v2f1(0x621)
----------------------------------

Begin block 0x2fd
prev = {}, next = {'0x309', '0x305'}
----------------------------------
function allowance(address,address)()
Block 0x2fd
0x2fe: v2fe = CALLVALUE 
0x300: v300 = ISZERO v2fe
0x301: v301(0x309) = CONST 
0x304: JUMPI v301(0x309) v300
----------------------------------

Begin block 0x305
prev = {'0x2fd'}, next = {}
----------------------------------
Block 0x305
0x305: v305(0x0) = CONST 
0x308: REVERT v305(0x0) v305(0x0)
----------------------------------

Begin block 0x309
prev = {'0x2fd'}, next = {'0x73a'}
----------------------------------
Block 0x309
0x30b: v30b(0x195) = CONST 
0x30e: v30e(0x1) = CONST 
0x310: v310(0xa0) = CONST 
0x312: v312(0x2) = CONST 
0x314: v314(0x10000000000000000000000000000000000000000) = EXP v312(0x2) v310(0xa0)
0x315: v315(0xffffffffffffffffffffffffffffffffffffffff) = SUB v314(0x10000000000000000000000000000000000000000) v30e(0x1)
0x316: v316(0x4) = CONST 
0x318: v318 = CALLDATALOAD v316(0x4)
0x31a: v31a = AND v315(0xffffffffffffffffffffffffffffffffffffffff) v318
0x31c: v31c(0x24) = CONST 
0x31e: v31e = CALLDATALOAD v31c(0x24)
0x31f: v31f = AND v31e v315(0xffffffffffffffffffffffffffffffffffffffff)
0x320: v320(0x73a) = CONST 
0x323: JUMP v320(0x73a)
----------------------------------

Begin block 0x324
prev = {}, next = {'0x364', '0x3aa0x324'}
----------------------------------
function 0x324(v324arg0)
Block 0x324
0x325: v325(0x0) = CONST 
0x328: v328 = SLOAD v325(0x0)
0x329: v329(0x40) = CONST 
0x32c: v32c = MLOAD v329(0x40)
0x32d: v32d(0x20) = CONST 
0x32f: v32f(0x2) = CONST 
0x331: v331(0x1) = CONST 
0x334: v334 = AND v328 v331(0x1)
0x335: v335 = ISZERO v334
0x336: v336(0x100) = CONST 
0x339: v339 = MUL v336(0x100) v335
0x33a: v33a(0x0) = CONST 
0x33c: v33c(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v33a(0x0)
0x33d: v33d = ADD v33c(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v339
0x340: v340 = AND v328 v33d
0x344: v344 = DIV v340 v32f(0x2)
0x345: v345(0x1f) = CONST 
0x348: v348 = ADD v344 v345(0x1f)
0x34b: v34b = DIV v348 v32d(0x20)
0x34d: v34d = MUL v32d(0x20) v34b
0x34f: v34f = ADD v32c v34d
0x351: v351 = ADD v32d(0x20) v34f
0x354: MSTORE v329(0x40) v351
0x357: MSTORE v32c v344
0x35b: v35b = ADD v32c v32d(0x20)
0x35f: v35f = ISZERO v344
0x360: v360(0x3aa) = CONST 
0x363: JUMPI v360(0x3aa) v35f
----------------------------------

Begin block 0x364
prev = {'0x324'}, next = {'0x37f0x324', '0x36c'}
----------------------------------
Block 0x364
0x365: v365(0x1f) = CONST 
0x367: v367 = LT v365(0x1f) v344
0x368: v368(0x37f) = CONST 
0x36b: JUMPI v368(0x37f) v367
----------------------------------

Begin block 0x36c
prev = {'0x364'}, next = {'0x3aa0x324'}
----------------------------------
Block 0x36c
0x36c: v36c(0x100) = CONST 
0x371: v371 = SLOAD v325(0x0)
0x372: v372 = DIV v371 v36c(0x100)
0x373: v373 = MUL v372 v36c(0x100)
0x375: MSTORE v35b v373
0x377: v377(0x20) = CONST 
0x379: v379 = ADD v377(0x20) v35b
0x37b: v37b(0x3aa) = CONST 
0x37e: JUMP v37b(0x3aa)
----------------------------------

Begin block 0x37f0x324
prev = {'0x364'}, next = {'0x38d0x324'}
----------------------------------
Block 0x37f0x324
0x3810x324: v324381 = ADD v35b v344
0x3840x324: v324384(0x0) = CONST 
0x3860x324: MSTORE v324384(0x0) v325(0x0)
0x3870x324: v324387(0x20) = CONST 
0x3890x324: v324389(0x0) = CONST 
0x38b0x324: v32438b = SHA3 v324389(0x0) v324387(0x20)
----------------------------------

Begin block 0x37f0x5b8
prev = {'0x5f7'}, next = {'0x38d0x5b8'}
----------------------------------
Block 0x37f0x5b8
0x3810x5b8: v5b8381 = ADD v5ee v5d7
0x3840x5b8: v5b8384(0x0) = CONST 
0x3860x5b8: MSTORE v5b8384(0x0) v5b9(0x1)
0x3870x5b8: v5b8387(0x20) = CONST 
0x3890x5b8: v5b8389(0x0) = CONST 
0x38b0x5b8: v5b838b = SHA3 v5b8389(0x0) v5b8387(0x20)
----------------------------------

Begin block 0x38d0x324
prev = {'0x37f0x324', '0x38d0x324'}, next = {'0x38d0x324', '0x3a10x324'}
----------------------------------
Block 0x38d0x324
0x38d0x324_0x0: v38d324_0 = PHI v35b v324399
0x38d0x324_0x1: v38d324_1 = PHI v324395 v32438b
0x38f0x324: v32438f = SLOAD v38d324_1
0x3910x324: MSTORE v38d324_0 v32438f
0x3930x324: v324393(0x1) = CONST 
0x3950x324: v324395 = ADD v324393(0x1) v38d324_1
0x3970x324: v324397(0x20) = CONST 
0x3990x324: v324399 = ADD v324397(0x20) v38d324_0
0x39c0x324: v32439c = GT v324381 v324399
0x39d0x324: v32439d(0x38d) = CONST 
0x3a00x324: JUMPI v32439d(0x38d) v32439c
----------------------------------

Begin block 0x38d0x5b8
prev = {'0x37f0x5b8', '0x38d0x5b8'}, next = {'0x3a10x5b8', '0x38d0x5b8'}
----------------------------------
Block 0x38d0x5b8
0x38d0x5b8_0x0: v38d5b8_0 = PHI v5ee v5b8399
0x38d0x5b8_0x1: v38d5b8_1 = PHI v5b8395 v5b838b
0x38f0x5b8: v5b838f = SLOAD v38d5b8_1
0x3910x5b8: MSTORE v38d5b8_0 v5b838f
0x3930x5b8: v5b8393(0x1) = CONST 
0x3950x5b8: v5b8395 = ADD v5b8393(0x1) v38d5b8_1
0x3970x5b8: v5b8397(0x20) = CONST 
0x3990x5b8: v5b8399 = ADD v5b8397(0x20) v38d5b8_0
0x39c0x5b8: v5b839c = GT v5b8381 v5b8399
0x39d0x5b8: v5b839d(0x38d) = CONST 
0x3a00x5b8: JUMPI v5b839d(0x38d) v5b839c
----------------------------------

Begin block 0x3a10x324
prev = {'0x38d0x324'}, next = {'0x3aa0x324'}
----------------------------------
Block 0x3a10x324
0x3a30x324: v3243a3 = SUB v324399 v324381
0x3a40x324: v3243a4(0x1f) = CONST 
0x3a60x324: v3243a6 = AND v3243a4(0x1f) v3243a3
0x3a80x324: v3243a8 = ADD v324381 v3243a6
----------------------------------

Begin block 0x3a10x5b8
prev = {'0x38d0x5b8'}, next = {'0x3aa0x5b8'}
----------------------------------
Block 0x3a10x5b8
0x3a30x5b8: v5b83a3 = SUB v5b8399 v5b8381
0x3a40x5b8: v5b83a4(0x1f) = CONST 
0x3a60x5b8: v5b83a6 = AND v5b83a4(0x1f) v5b83a3
0x3a80x5b8: v5b83a8 = ADD v5b8381 v5b83a6
----------------------------------

Begin block 0x3aa0x324
prev = {'0x324', '0x36c', '0x3a10x324'}, next = {}
----------------------------------
Block 0x3aa0x324
0x3b10x324: RETURNPRIVATE v324arg0 v32c v324arg0
----------------------------------

Begin block 0x3aa0x5b8
prev = {'0x5b8', '0x3a10x5b8', '0x5ff'}, next = {}
----------------------------------
Block 0x3aa0x5b8
0x3b10x5b8: RETURNPRIVATE v5b8arg0 v5c0 v5b8arg0
----------------------------------

Begin block 0x3b2
prev = {}, next = {}
----------------------------------
function 0x3b2(v3b2arg0, v3b2arg1, v3b2arg2)
Block 0x3b2
0x3b3: v3b3 = CALLER 
0x3b4: v3b4(0x0) = CONST 
0x3b8: MSTORE v3b4(0x0) v3b3
0x3b9: v3b9(0x5) = CONST 
0x3bb: v3bb(0x20) = CONST 
0x3bf: MSTORE v3bb(0x20) v3b9(0x5)
0x3c0: v3c0(0x40) = CONST 
0x3c4: v3c4 = SHA3 v3b4(0x0) v3c0(0x40)
0x3c5: v3c5(0x1) = CONST 
0x3c7: v3c7(0xa0) = CONST 
0x3c9: v3c9(0x2) = CONST 
0x3cb: v3cb(0x10000000000000000000000000000000000000000) = EXP v3c9(0x2) v3c7(0xa0)
0x3cc: v3cc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3cb(0x10000000000000000000000000000000000000000) v3c5(0x1)
0x3d0: v3d0 = AND v3cc(0xffffffffffffffffffffffffffffffffffffffff) v3b2arg1
0x3d2: MSTORE v3b4(0x0) v3d0
0x3d5: MSTORE v3bb(0x20) v3c4
0x3d9: v3d9 = SHA3 v3b4(0x0) v3c0(0x40)
0x3da: SSTORE v3d9 v3b2arg0
0x3db: v3db(0x1) = CONST 
0x3de: RETURNPRIVATE v3b2arg2 v3db(0x1)
----------------------------------

Begin block 0x3df
prev = {'0x18c'}, next = {'0x1950x180'}
----------------------------------
Block 0x3df
0x3e0: v3e0(0x3) = CONST 
0x3e2: v3e2 = SLOAD v3e0(0x3)
0x3e4: JUMP v18e(0x195)
----------------------------------

Begin block 0x3e5
prev = {'0x1b3'}, next = {'0x415', '0x411'}
----------------------------------
Block 0x3e5
0x3e6: v3e6(0x1) = CONST 
0x3e8: v3e8(0xa0) = CONST 
0x3ea: v3ea(0x2) = CONST 
0x3ec: v3ec(0x10000000000000000000000000000000000000000) = EXP v3ea(0x2) v3e8(0xa0)
0x3ed: v3ed(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3ec(0x10000000000000000000000000000000000000000) v3e6(0x1)
0x3ef: v3ef = AND v1c4 v3ed(0xffffffffffffffffffffffffffffffffffffffff)
0x3f0: v3f0(0x0) = CONST 
0x3f4: MSTORE v3f0(0x0) v3ef
0x3f5: v3f5(0x5) = CONST 
0x3f7: v3f7(0x20) = CONST 
0x3fb: MSTORE v3f7(0x20) v3f5(0x5)
0x3fc: v3fc(0x40) = CONST 
0x400: v400 = SHA3 v3f0(0x0) v3fc(0x40)
0x401: v401 = CALLER 
0x403: MSTORE v3f0(0x0) v401
0x406: MSTORE v3f7(0x20) v400
0x408: v408 = SHA3 v3f0(0x0) v3fc(0x40)
0x409: v409 = SLOAD v408
0x40b: v40b = GT v1cc v409
0x40c: v40c = ISZERO v40b
0x40d: v40d(0x415) = CONST 
0x410: JUMPI v40d(0x415) v40c
----------------------------------

Begin block 0x411
prev = {'0x3e5'}, next = {}
----------------------------------
Block 0x411
0x411: v411(0x0) = CONST 
0x414: REVERT v411(0x0) v411(0x0)
----------------------------------

Begin block 0x415
prev = {'0x3e5'}, next = {'0x44a'}
----------------------------------
Block 0x415
0x416: v416(0x1) = CONST 
0x418: v418(0xa0) = CONST 
0x41a: v41a(0x2) = CONST 
0x41c: v41c(0x10000000000000000000000000000000000000000) = EXP v41a(0x2) v418(0xa0)
0x41d: v41d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v41c(0x10000000000000000000000000000000000000000) v416(0x1)
0x41f: v41f = AND v1c4 v41d(0xffffffffffffffffffffffffffffffffffffffff)
0x420: v420(0x0) = CONST 
0x424: MSTORE v420(0x0) v41f
0x425: v425(0x5) = CONST 
0x427: v427(0x20) = CONST 
0x42b: MSTORE v427(0x20) v425(0x5)
0x42c: v42c(0x40) = CONST 
0x430: v430 = SHA3 v420(0x0) v42c(0x40)
0x431: v431 = CALLER 
0x433: MSTORE v420(0x0) v431
0x436: MSTORE v427(0x20) v430
0x438: v438 = SHA3 v420(0x0) v42c(0x40)
0x43a: v43a = SLOAD v438
0x43d: v43d = SUB v43a v1cc
0x43f: SSTORE v438 v43d
0x440: v440(0x44a) = CONST 
0x446: v446(0x757) = CONST 
0x449: CALLPRIVATE v446(0x757) v1cc v1c9 v1c4 v440(0x44a)
----------------------------------

Begin block 0x44a
prev = {'0x415'}, next = {'0x16c0x1a7'}
----------------------------------
Block 0x44a
0x44c: v44c(0x1) = CONST 
0x453: JUMP v1b5(0x16c)
----------------------------------

Begin block 0x454
prev = {'0x1dd'}, next = {'0x1e6'}
----------------------------------
Block 0x454
0x455: v455(0x2) = CONST 
0x457: v457 = SLOAD v455(0x2)
0x458: v458(0xff) = CONST 
0x45a: v45a = AND v458(0xff) v457
0x45c: JUMP v1df(0x1e6)
----------------------------------

Begin block 0x45d
prev = {'0x208'}, next = {'0x479', '0x475'}
----------------------------------
Block 0x45d
0x45e: v45e = CALLER 
0x45f: v45f(0x0) = CONST 
0x463: MSTORE v45f(0x0) v45e
0x464: v464(0x4) = CONST 
0x466: v466(0x20) = CONST 
0x468: MSTORE v466(0x20) v464(0x4)
0x469: v469(0x40) = CONST 
0x46c: v46c = SHA3 v45f(0x0) v469(0x40)
0x46d: v46d = SLOAD v46c
0x46f: v46f = GT v20f v46d
0x470: v470 = ISZERO v46f
0x471: v471(0x479) = CONST 
0x474: JUMPI v471(0x479) v470
----------------------------------

Begin block 0x475
prev = {'0x45d'}, next = {}
----------------------------------
Block 0x475
0x475: v475(0x0) = CONST 
0x478: REVERT v475(0x0) v475(0x0)
----------------------------------

Begin block 0x479
prev = {'0x45d'}, next = {'0x16c0x1fc'}
----------------------------------
Block 0x479
0x47a: v47a = CALLER 
0x47b: v47b(0x0) = CONST 
0x47f: MSTORE v47b(0x0) v47a
0x480: v480(0x4) = CONST 
0x482: v482(0x20) = CONST 
0x486: MSTORE v482(0x20) v480(0x4)
0x487: v487(0x40) = CONST 
0x48c: v48c = SHA3 v47b(0x0) v487(0x40)
0x48e: v48e = SLOAD v48c
0x491: v491 = SUB v48e v20f
0x493: SSTORE v48c v491
0x494: v494(0x3) = CONST 
0x497: v497 = SLOAD v494(0x3)
0x49a: v49a = SUB v497 v20f
0x49c: SSTORE v494(0x3) v49a
0x49e: v49e = MLOAD v487(0x40)
0x4a1: MSTORE v49e v20f
0x4a3: v4a3 = MLOAD v487(0x40)
0x4a4: v4a4(0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5) = CONST 
0x4c8: v4c8 = SUB v49e v4a3
0x4cb: v4cb = ADD v482(0x20) v4c8
0x4cd: LOG2 v4a3 v4cb v4a4(0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5) v47a
0x4cf: v4cf(0x1) = CONST 
0x4d4: JUMP v20a(0x16c)
----------------------------------

Begin block 0x4d5
prev = {'0x220'}, next = {'0x1950x214'}
----------------------------------
Block 0x4d5
0x4d6: v4d6(0x4) = CONST 
0x4d8: v4d8(0x20) = CONST 
0x4da: MSTORE v4d8(0x20) v4d6(0x4)
0x4db: v4db(0x0) = CONST 
0x4df: MSTORE v4db(0x0) v230
0x4e0: v4e0(0x40) = CONST 
0x4e3: v4e3 = SHA3 v4db(0x0) v4e0(0x40)
0x4e4: v4e4 = SLOAD v4e3
0x4e6: JUMP v222(0x195)
----------------------------------

Begin block 0x4e7
prev = {'0x241'}, next = {'0x508', '0x50c'}
----------------------------------
Block 0x4e7
0x4e8: v4e8(0x1) = CONST 
0x4ea: v4ea(0xa0) = CONST 
0x4ec: v4ec(0x2) = CONST 
0x4ee: v4ee(0x10000000000000000000000000000000000000000) = EXP v4ec(0x2) v4ea(0xa0)
0x4ef: v4ef(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4ee(0x10000000000000000000000000000000000000000) v4e8(0x1)
0x4f1: v4f1 = AND v251 v4ef(0xffffffffffffffffffffffffffffffffffffffff)
0x4f2: v4f2(0x0) = CONST 
0x4f6: MSTORE v4f2(0x0) v4f1
0x4f7: v4f7(0x4) = CONST 
0x4f9: v4f9(0x20) = CONST 
0x4fb: MSTORE v4f9(0x20) v4f7(0x4)
0x4fc: v4fc(0x40) = CONST 
0x4ff: v4ff = SHA3 v4f2(0x0) v4fc(0x40)
0x500: v500 = SLOAD v4ff
0x502: v502 = GT v254 v500
0x503: v503 = ISZERO v502
0x504: v504(0x50c) = CONST 
0x507: JUMPI v504(0x50c) v503
----------------------------------

Begin block 0x508
prev = {'0x4e7'}, next = {}
----------------------------------
Block 0x508
0x508: v508(0x0) = CONST 
0x50b: REVERT v508(0x0) v508(0x0)
----------------------------------

Begin block 0x50c
prev = {'0x4e7'}, next = {'0x53c', '0x538'}
----------------------------------
Block 0x50c
0x50d: v50d(0x1) = CONST 
0x50f: v50f(0xa0) = CONST 
0x511: v511(0x2) = CONST 
0x513: v513(0x10000000000000000000000000000000000000000) = EXP v511(0x2) v50f(0xa0)
0x514: v514(0xffffffffffffffffffffffffffffffffffffffff) = SUB v513(0x10000000000000000000000000000000000000000) v50d(0x1)
0x516: v516 = AND v251 v514(0xffffffffffffffffffffffffffffffffffffffff)
0x517: v517(0x0) = CONST 
0x51b: MSTORE v517(0x0) v516
0x51c: v51c(0x5) = CONST 
0x51e: v51e(0x20) = CONST 
0x522: MSTORE v51e(0x20) v51c(0x5)
0x523: v523(0x40) = CONST 
0x527: v527 = SHA3 v517(0x0) v523(0x40)
0x528: v528 = CALLER 
0x52a: MSTORE v517(0x0) v528
0x52d: MSTORE v51e(0x20) v527
0x52f: v52f = SHA3 v517(0x0) v523(0x40)
0x530: v530 = SLOAD v52f
0x532: v532 = GT v254 v530
0x533: v533 = ISZERO v532
0x534: v534(0x53c) = CONST 
0x537: JUMPI v534(0x53c) v533
----------------------------------

Begin block 0x538
prev = {'0x50c'}, next = {}
----------------------------------
Block 0x538
0x538: v538(0x0) = CONST 
0x53b: REVERT v538(0x0) v538(0x0)
----------------------------------

Begin block 0x53c
prev = {'0x50c'}, next = {'0x16c0x235'}
----------------------------------
Block 0x53c
0x53d: v53d(0x1) = CONST 
0x53f: v53f(0xa0) = CONST 
0x541: v541(0x2) = CONST 
0x543: v543(0x10000000000000000000000000000000000000000) = EXP v541(0x2) v53f(0xa0)
0x544: v544(0xffffffffffffffffffffffffffffffffffffffff) = SUB v543(0x10000000000000000000000000000000000000000) v53d(0x1)
0x546: v546 = AND v251 v544(0xffffffffffffffffffffffffffffffffffffffff)
0x547: v547(0x0) = CONST 
0x54b: MSTORE v547(0x0) v546
0x54c: v54c(0x4) = CONST 
0x54e: v54e(0x20) = CONST 
0x552: MSTORE v54e(0x20) v54c(0x4)
0x553: v553(0x40) = CONST 
0x557: v557 = SHA3 v547(0x0) v553(0x40)
0x559: v559 = SLOAD v557
0x55c: v55c = SUB v559 v254
0x55e: SSTORE v557 v55c
0x55f: v55f(0x5) = CONST 
0x562: MSTORE v54e(0x20) v55f(0x5)
0x565: v565 = SHA3 v547(0x0) v553(0x40)
0x566: v566 = CALLER 
0x568: MSTORE v547(0x0) v566
0x56a: MSTORE v54e(0x20) v565
0x56e: v56e = SHA3 v547(0x0) v553(0x40)
0x570: v570 = SLOAD v56e
0x573: v573 = SUB v570 v254
0x575: SSTORE v56e v573
0x576: v576(0x3) = CONST 
0x579: v579 = SLOAD v576(0x3)
0x57c: v57c = SUB v579 v254
0x57e: SSTORE v576(0x3) v57c
0x580: v580 = MLOAD v553(0x40)
0x583: MSTORE v580 v254
0x585: v585 = MLOAD v553(0x40)
0x586: v586(0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5) = CONST 
0x5aa: v5aa = SUB v580 v585
0x5ad: v5ad = ADD v54e(0x20) v5aa
0x5af: LOG2 v585 v5ad v586(0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5) v546
0x5b1: v5b1(0x1) = CONST 
0x5b7: JUMP v243(0x16c)
----------------------------------

Begin block 0x5b8
prev = {}, next = {'0x3aa0x5b8', '0x5f7'}
----------------------------------
function 0x5b8(v5b8arg0)
Block 0x5b8
0x5b9: v5b9(0x1) = CONST 
0x5bc: v5bc = SLOAD v5b9(0x1)
0x5bd: v5bd(0x40) = CONST 
0x5c0: v5c0 = MLOAD v5bd(0x40)
0x5c1: v5c1(0x20) = CONST 
0x5c3: v5c3(0x2) = CONST 
0x5c7: v5c7 = AND v5b9(0x1) v5bc
0x5c8: v5c8 = ISZERO v5c7
0x5c9: v5c9(0x100) = CONST 
0x5cc: v5cc = MUL v5c9(0x100) v5c8
0x5cd: v5cd(0x0) = CONST 
0x5cf: v5cf(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v5cd(0x0)
0x5d0: v5d0 = ADD v5cf(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v5cc
0x5d3: v5d3 = AND v5bc v5d0
0x5d7: v5d7 = DIV v5d3 v5c3(0x2)
0x5d8: v5d8(0x1f) = CONST 
0x5db: v5db = ADD v5d7 v5d8(0x1f)
0x5de: v5de = DIV v5db v5c1(0x20)
0x5e0: v5e0 = MUL v5c1(0x20) v5de
0x5e2: v5e2 = ADD v5c0 v5e0
0x5e4: v5e4 = ADD v5c1(0x20) v5e2
0x5e7: MSTORE v5bd(0x40) v5e4
0x5ea: MSTORE v5c0 v5d7
0x5ee: v5ee = ADD v5c0 v5c1(0x20)
0x5f2: v5f2 = ISZERO v5d7
0x5f3: v5f3(0x3aa) = CONST 
0x5f6: JUMPI v5f3(0x3aa) v5f2
----------------------------------

Begin block 0x5f7
prev = {'0x5b8'}, next = {'0x5ff', '0x37f0x5b8'}
----------------------------------
Block 0x5f7
0x5f8: v5f8(0x1f) = CONST 
0x5fa: v5fa = LT v5f8(0x1f) v5d7
0x5fb: v5fb(0x37f) = CONST 
0x5fe: JUMPI v5fb(0x37f) v5fa
----------------------------------

Begin block 0x5ff
prev = {'0x5f7'}, next = {'0x3aa0x5b8'}
----------------------------------
Block 0x5ff
0x5ff: v5ff(0x100) = CONST 
0x604: v604 = SLOAD v5b9(0x1)
0x605: v605 = DIV v604 v5ff(0x100)
0x606: v606 = MUL v605 v5ff(0x100)
0x608: MSTORE v5ee v606
0x60a: v60a(0x20) = CONST 
0x60c: v60c = ADD v60a(0x20) v5ee
0x60e: v60e(0x3aa) = CONST 
0x611: JUMP v60e(0x3aa)
----------------------------------

Begin block 0x612
prev = {'0x27a'}, next = {'0x61d'}
----------------------------------
Block 0x612
0x613: v613(0x61d) = CONST 
0x616: v616 = CALLER 
0x619: v619(0x757) = CONST 
0x61c: CALLPRIVATE v619(0x757) v28d v28a v616 v613(0x61d)
----------------------------------

Begin block 0x61d
prev = {'0x612'}, next = {'0x292'}
----------------------------------
Block 0x61d
0x620: JUMP v27c(0x292)
----------------------------------

Begin block 0x621
prev = {'0x2a0'}, next = {'0x62e'}
----------------------------------
Block 0x621
0x622: v622(0x0) = CONST 
0x625: v625(0x62e) = CONST 
0x62a: v62a(0x3b2) = CONST 
0x62d: v62d_0 = CALLPRIVATE v62a(0x3b2) v2d7 v2d2 v625(0x62e)
----------------------------------

Begin block 0x62e
prev = {'0x621'}, next = {'0x634', '0x732'}
----------------------------------
Block 0x62e
0x62f: v62f = ISZERO v62d_0
0x630: v630(0x732) = CONST 
0x633: JUMPI v630(0x732) v62f
----------------------------------

Begin block 0x634
prev = {'0x62e'}, next = {'0x6ae'}
----------------------------------
Block 0x634
0x634: v634(0x40) = CONST 
0x636: v636 = MLOAD v634(0x40)
0x637: v637(0x8f4ffcb100000000000000000000000000000000000000000000000000000000) = CONST 
0x659: MSTORE v636 v637(0x8f4ffcb100000000000000000000000000000000000000000000000000000000)
0x65a: v65a = CALLER 
0x65b: v65b(0x4) = CONST 
0x65e: v65e = ADD v636 v65b(0x4)
0x661: MSTORE v65e v65a
0x662: v662(0x24) = CONST 
0x665: v665 = ADD v636 v662(0x24)
0x668: MSTORE v665 v2d7
0x669: v669 = ADDRESS 
0x66a: v66a(0x44) = CONST 
0x66d: v66d = ADD v636 v66a(0x44)
0x670: MSTORE v66d v669
0x671: v671(0x80) = CONST 
0x673: v673(0x64) = CONST 
0x676: v676 = ADD v636 v673(0x64)
0x679: MSTORE v676 v671(0x80)
0x67b: v67b = MLOAD v2a5
0x67c: v67c(0x84) = CONST 
0x67f: v67f = ADD v636 v67c(0x84)
0x680: MSTORE v67f v67b
0x682: v682 = MLOAD v2a5
0x683: v683(0x1) = CONST 
0x685: v685(0xa0) = CONST 
0x687: v687(0x2) = CONST 
0x689: v689(0x10000000000000000000000000000000000000000) = EXP v687(0x2) v685(0xa0)
0x68a: v68a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v689(0x10000000000000000000000000000000000000000) v683(0x1)
0x68c: v68c = AND v2d2 v68a(0xffffffffffffffffffffffffffffffffffffffff)
0x68e: v68e(0x8f4ffcb1) = CONST 
0x69e: v69e(0xa4) = CONST 
0x6a2: v6a2 = ADD v636 v69e(0xa4)
0x6a4: v6a4(0x20) = CONST 
0x6a7: v6a7 = ADD v2a5 v6a4(0x20)
0x6ac: v6ac(0x0) = CONST 
----------------------------------

Begin block 0x6ae
prev = {'0x6b7', '0x634'}, next = {'0x6b7', '0x6c6'}
----------------------------------
Block 0x6ae
0x6ae_0x0: v6ae_0 = PHI v6ac(0x0) v6c1
0x6b1: v6b1 = LT v6ae_0 v682
0x6b2: v6b2 = ISZERO v6b1
0x6b3: v6b3(0x6c6) = CONST 
0x6b6: JUMPI v6b3(0x6c6) v6b2
----------------------------------

Begin block 0x6b7
prev = {'0x6ae'}, next = {'0x6ae'}
----------------------------------
Block 0x6b7
0x6b7_0x0: v6b7_0 = PHI v6ac(0x0) v6c1
0x6b9: v6b9 = ADD v6b7_0 v6a7
0x6ba: v6ba = MLOAD v6b9
0x6bd: v6bd = ADD v6b7_0 v6a2
0x6be: MSTORE v6bd v6ba
0x6bf: v6bf(0x20) = CONST 
0x6c1: v6c1 = ADD v6bf(0x20) v6b7_0
0x6c2: v6c2(0x6ae) = CONST 
0x6c5: JUMP v6c2(0x6ae)
----------------------------------

Begin block 0x6c6
prev = {'0x6ae'}, next = {'0x6f3', '0x6da'}
----------------------------------
Block 0x6c6
0x6cf: v6cf = ADD v682 v6a2
0x6d1: v6d1(0x1f) = CONST 
0x6d3: v6d3 = AND v6d1(0x1f) v682
0x6d5: v6d5 = ISZERO v6d3
0x6d6: v6d6(0x6f3) = CONST 
0x6d9: JUMPI v6d6(0x6f3) v6d5
----------------------------------

Begin block 0x6da
prev = {'0x6c6'}, next = {'0x6f3'}
----------------------------------
Block 0x6da
0x6dc: v6dc = SUB v6cf v6d3
0x6de: v6de = MLOAD v6dc
0x6df: v6df(0x1) = CONST 
0x6e2: v6e2(0x20) = CONST 
0x6e4: v6e4 = SUB v6e2(0x20) v6d3
0x6e5: v6e5(0x100) = CONST 
0x6e8: v6e8 = EXP v6e5(0x100) v6e4
0x6e9: v6e9 = SUB v6e8 v6df(0x1)
0x6ea: v6ea = NOT v6e9
0x6eb: v6eb = AND v6ea v6de
0x6ed: MSTORE v6dc v6eb
0x6ee: v6ee(0x20) = CONST 
0x6f0: v6f0 = ADD v6ee(0x20) v6dc
----------------------------------

Begin block 0x6f3
prev = {'0x6c6', '0x6da'}, next = {'0x711', '0x715'}
----------------------------------
Block 0x6f3
0x6f3_0x1: v6f3_1 = PHI v6cf v6f0
0x6fc: v6fc(0x0) = CONST 
0x6fe: v6fe(0x40) = CONST 
0x700: v700 = MLOAD v6fe(0x40)
0x703: v703 = SUB v6f3_1 v700
0x705: v705(0x0) = CONST 
0x709: v709 = EXTCODESIZE v68c
0x70a: v70a = ISZERO v709
0x70c: v70c = ISZERO v70a
0x70d: v70d(0x715) = CONST 
0x710: JUMPI v70d(0x715) v70c
----------------------------------

Begin block 0x711
prev = {'0x6f3'}, next = {}
----------------------------------
Block 0x711
0x711: v711(0x0) = CONST 
0x714: REVERT v711(0x0) v711(0x0)
----------------------------------

Begin block 0x715
prev = {'0x6f3'}, next = {'0x720', '0x729'}
----------------------------------
Block 0x715
0x717: v717 = GAS 
0x718: v718 = CALL v717 v68c v705(0x0) v700 v703 v700 v6fc(0x0)
0x719: v719 = ISZERO v718
0x71b: v71b = ISZERO v719
0x71c: v71c(0x729) = CONST 
0x71f: JUMPI v71c(0x729) v71b
----------------------------------

Begin block 0x720
prev = {'0x715'}, next = {}
----------------------------------
Block 0x720
0x720: v720 = RETURNDATASIZE 
0x721: v721(0x0) = CONST 
0x724: RETURNDATACOPY v721(0x0) v721(0x0) v720
0x725: v725 = RETURNDATASIZE 
0x726: v726(0x0) = CONST 
0x728: REVERT v726(0x0) v725
----------------------------------

Begin block 0x729
prev = {'0x715'}, next = {'0x732'}
----------------------------------
Block 0x729
0x72e: v72e(0x1) = CONST 
----------------------------------

Begin block 0x732
prev = {'0x729', '0x62e'}, next = {'0x16c0x294'}
----------------------------------
Block 0x732
0x739: JUMP v2c4(0x16c)
----------------------------------

Begin block 0x73a
prev = {'0x309'}, next = {'0x1950x2fd'}
----------------------------------
Block 0x73a
0x73b: v73b(0x5) = CONST 
0x73d: v73d(0x20) = CONST 
0x741: MSTORE v73d(0x20) v73b(0x5)
0x742: v742(0x0) = CONST 
0x746: MSTORE v742(0x0) v31a
0x747: v747(0x40) = CONST 
0x74b: v74b = SHA3 v742(0x0) v747(0x40)
0x74e: MSTORE v73d(0x20) v74b
0x751: MSTORE v742(0x0) v31f
0x753: v753 = SHA3 v742(0x0) v747(0x40)
0x754: v754 = SLOAD v753
0x756: JUMP v30b(0x195)
----------------------------------

Begin block 0x757
prev = {}, next = {'0x76e', '0x76a'}
----------------------------------
function 0x757(v757arg0, v757arg1, v757arg2, v757arg3)
Block 0x757
0x758: v758(0x0) = CONST 
0x75a: v75a(0x1) = CONST 
0x75c: v75c(0xa0) = CONST 
0x75e: v75e(0x2) = CONST 
0x760: v760(0x10000000000000000000000000000000000000000) = EXP v75e(0x2) v75c(0xa0)
0x761: v761(0xffffffffffffffffffffffffffffffffffffffff) = SUB v760(0x10000000000000000000000000000000000000000) v75a(0x1)
0x763: v763 = AND v757arg1 v761(0xffffffffffffffffffffffffffffffffffffffff)
0x764: v764 = ISZERO v763
0x765: v765 = ISZERO v764
0x766: v766(0x76e) = CONST 
0x769: JUMPI v766(0x76e) v765
----------------------------------

Begin block 0x76a
prev = {'0x757'}, next = {}
----------------------------------
Block 0x76a
0x76a: v76a(0x0) = CONST 
0x76d: REVERT v76a(0x0) v76a(0x0)
----------------------------------

Begin block 0x76e
prev = {'0x757'}, next = {'0x793', '0x78f'}
----------------------------------
Block 0x76e
0x76f: v76f(0x1) = CONST 
0x771: v771(0xa0) = CONST 
0x773: v773(0x2) = CONST 
0x775: v775(0x10000000000000000000000000000000000000000) = EXP v773(0x2) v771(0xa0)
0x776: v776(0xffffffffffffffffffffffffffffffffffffffff) = SUB v775(0x10000000000000000000000000000000000000000) v76f(0x1)
0x778: v778 = AND v757arg2 v776(0xffffffffffffffffffffffffffffffffffffffff)
0x779: v779(0x0) = CONST 
0x77d: MSTORE v779(0x0) v778
0x77e: v77e(0x4) = CONST 
0x780: v780(0x20) = CONST 
0x782: MSTORE v780(0x20) v77e(0x4)
0x783: v783(0x40) = CONST 
0x786: v786 = SHA3 v779(0x0) v783(0x40)
0x787: v787 = SLOAD v786
0x789: v789 = GT v757arg0 v787
0x78a: v78a = ISZERO v789
0x78b: v78b(0x793) = CONST 
0x78e: JUMPI v78b(0x793) v78a
----------------------------------

Begin block 0x78f
prev = {'0x76e'}, next = {}
----------------------------------
Block 0x78f
0x78f: v78f(0x0) = CONST 
0x792: REVERT v78f(0x0) v78f(0x0)
----------------------------------

Begin block 0x793
prev = {'0x76e'}, next = {'0x7b5', '0x7b9'}
----------------------------------
Block 0x793
0x794: v794(0x1) = CONST 
0x796: v796(0xa0) = CONST 
0x798: v798(0x2) = CONST 
0x79a: v79a(0x10000000000000000000000000000000000000000) = EXP v798(0x2) v796(0xa0)
0x79b: v79b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v79a(0x10000000000000000000000000000000000000000) v794(0x1)
0x79d: v79d = AND v757arg1 v79b(0xffffffffffffffffffffffffffffffffffffffff)
0x79e: v79e(0x0) = CONST 
0x7a2: MSTORE v79e(0x0) v79d
0x7a3: v7a3(0x4) = CONST 
0x7a5: v7a5(0x20) = CONST 
0x7a7: MSTORE v7a5(0x20) v7a3(0x4)
0x7a8: v7a8(0x40) = CONST 
0x7ab: v7ab = SHA3 v79e(0x0) v7a8(0x40)
0x7ac: v7ac = SLOAD v7ab
0x7af: v7af = ADD v7ac v757arg0
0x7b0: v7b0 = GT v7af v7ac
0x7b1: v7b1(0x7b9) = CONST 
0x7b4: JUMPI v7b1(0x7b9) v7b0
----------------------------------

Begin block 0x7b5
prev = {'0x793'}, next = {}
----------------------------------
Block 0x7b5
0x7b5: v7b5(0x0) = CONST 
0x7b8: REVERT v7b5(0x0) v7b5(0x0)
----------------------------------

Begin block 0x7b9
prev = {'0x793'}, next = {'0x858', '0x857'}
----------------------------------
Block 0x7b9
0x7bb: v7bb(0x1) = CONST 
0x7bd: v7bd(0xa0) = CONST 
0x7bf: v7bf(0x2) = CONST 
0x7c1: v7c1(0x10000000000000000000000000000000000000000) = EXP v7bf(0x2) v7bd(0xa0)
0x7c2: v7c2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7c1(0x10000000000000000000000000000000000000000) v7bb(0x1)
0x7c5: v7c5 = AND v757arg1 v7c2(0xffffffffffffffffffffffffffffffffffffffff)
0x7c6: v7c6(0x0) = CONST 
0x7ca: MSTORE v7c6(0x0) v7c5
0x7cb: v7cb(0x4) = CONST 
0x7cd: v7cd(0x20) = CONST 
0x7d1: MSTORE v7cd(0x20) v7cb(0x4)
0x7d2: v7d2(0x40) = CONST 
0x7d6: v7d6 = SHA3 v7c6(0x0) v7d2(0x40)
0x7d8: v7d8 = SLOAD v7d6
0x7db: v7db = AND v757arg2 v7c2(0xffffffffffffffffffffffffffffffffffffffff)
0x7de: MSTORE v7c6(0x0) v7db
0x7e1: v7e1 = SHA3 v7c6(0x0) v7d2(0x40)
0x7e3: v7e3 = SLOAD v7e1
0x7e6: v7e6 = SUB v7e3 v757arg0
0x7e9: SSTORE v7e1 v7e6
0x7ed: MSTORE v7c6(0x0) v7c5
0x7ef: v7ef = SLOAD v7d6
0x7f1: v7f1 = ADD v757arg0 v7ef
0x7f4: SSTORE v7d6 v7f1
0x7f6: v7f6 = MLOAD v7d2(0x40)
0x7f9: MSTORE v7f6 v757arg0
0x7fb: v7fb = MLOAD v7d2(0x40)
0x7ff: v7ff = ADD v7d8 v7e3
0x802: v802(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x827: v827 = SUB v7f6 v7fb
0x82a: v82a = ADD v7cd(0x20) v827
0x82c: LOG3 v7fb v82a v802(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v7db v7c5
0x82d: v82d(0x1) = CONST 
0x82f: v82f(0xa0) = CONST 
0x831: v831(0x2) = CONST 
0x833: v833(0x10000000000000000000000000000000000000000) = EXP v831(0x2) v82f(0xa0)
0x834: v834(0xffffffffffffffffffffffffffffffffffffffff) = SUB v833(0x10000000000000000000000000000000000000000) v82d(0x1)
0x837: v837 = AND v757arg1 v834(0xffffffffffffffffffffffffffffffffffffffff)
0x838: v838(0x0) = CONST 
0x83c: MSTORE v838(0x0) v837
0x83d: v83d(0x4) = CONST 
0x83f: v83f(0x20) = CONST 
0x841: MSTORE v83f(0x20) v83d(0x4)
0x842: v842(0x40) = CONST 
0x846: v846 = SHA3 v838(0x0) v842(0x40)
0x847: v847 = SLOAD v846
0x84a: v84a = AND v757arg2 v834(0xffffffffffffffffffffffffffffffffffffffff)
0x84c: MSTORE v838(0x0) v84a
0x84e: v84e = SHA3 v838(0x0) v842(0x40)
0x84f: v84f = SLOAD v84e
0x850: v850 = ADD v84f v847
0x852: v852 = EQ v7ff v850
0x853: v853(0x858) = CONST 
0x856: JUMPI v853(0x858) v852
----------------------------------

Begin block 0x857
prev = {'0x7b9'}, next = {}
----------------------------------
Block 0x857
0x857: THROW 
----------------------------------

Begin block 0x858
prev = {'0x7b9'}, next = {}
----------------------------------
Block 0x858
0x85d: RETURNPRIVATE v757arg3
----------------------------------

Begin block 0x890
prev = {'0x0', '0xae'}, next = {}
----------------------------------
Block 0x890
0x891: v891(0xb9) = CONST 
0x892: CALLPRIVATE v891(0xb9)
----------------------------------

Begin block 0x893
prev = {'0xd'}, next = {}
----------------------------------
Block 0x893
0x894: v894(0xbe) = CONST 
0x895: CALLPRIVATE v894(0xbe)
----------------------------------

Begin block 0x896
prev = {'0x40'}, next = {}
----------------------------------
Block 0x896
0x897: v897(0x148) = CONST 
0x898: CALLPRIVATE v897(0x148)
----------------------------------

Begin block 0x899
prev = {'0x4b'}, next = {}
----------------------------------
Block 0x899
0x89a: v89a(0x180) = CONST 
0x89b: CALLPRIVATE v89a(0x180)
----------------------------------

Begin block 0x89c
prev = {'0x56'}, next = {}
----------------------------------
Block 0x89c
0x89d: v89d(0x1a7) = CONST 
0x89e: CALLPRIVATE v89d(0x1a7)
----------------------------------

Begin block 0x89f
prev = {'0x61'}, next = {}
----------------------------------
Block 0x89f
0x8a0: v8a0(0x1d1) = CONST 
0x8a1: CALLPRIVATE v8a0(0x1d1)
----------------------------------

Begin block 0x8a2
prev = {'0x6c'}, next = {}
----------------------------------
Block 0x8a2
0x8a3: v8a3(0x1fc) = CONST 
0x8a4: CALLPRIVATE v8a3(0x1fc)
----------------------------------

Begin block 0x8a5
prev = {'0x77'}, next = {}
----------------------------------
Block 0x8a5
0x8a6: v8a6(0x214) = CONST 
0x8a7: CALLPRIVATE v8a6(0x214)
----------------------------------

Begin block 0x8a8
prev = {'0x82'}, next = {}
----------------------------------
Block 0x8a8
0x8a9: v8a9(0x235) = CONST 
0x8aa: CALLPRIVATE v8a9(0x235)
----------------------------------

Begin block 0x8ab
prev = {'0x8d'}, next = {}
----------------------------------
Block 0x8ab
0x8ac: v8ac(0x259) = CONST 
0x8ad: CALLPRIVATE v8ac(0x259)
----------------------------------

Begin block 0x8ae
prev = {'0x98'}, next = {}
----------------------------------
Block 0x8ae
0x8af: v8af(0x26e) = CONST 
0x8b0: CALLPRIVATE v8af(0x26e)
----------------------------------

Begin block 0x8b1
prev = {'0xa3'}, next = {}
----------------------------------
Block 0x8b1
0x8b2: v8b2(0x294) = CONST 
0x8b3: CALLPRIVATE v8b2(0x294)
----------------------------------

Begin block 0x8b4
prev = {'0xae'}, next = {}
----------------------------------
Block 0x8b4
0x8b5: v8b5(0x2fd) = CONST 
0x8b6: CALLPRIVATE v8b5(0x2fd)
----------------------------------
