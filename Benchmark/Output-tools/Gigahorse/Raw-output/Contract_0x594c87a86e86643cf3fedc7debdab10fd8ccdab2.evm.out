
Begin block 0x0
prev = {}, next = {'0xd', '0x7e8'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x7d8: v7d8(0x7e8) = CONST 
0x7d9: JUMPI v7d8(0x7e8) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x7eb', '0x40'}
----------------------------------
Block 0xd
0xd: vd(0xffffffff) = CONST 
0x12: v12(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x30: v30(0x0) = CONST 
0x32: v32 = CALLDATALOAD v30(0x0)
0x33: v33 = DIV v32 v12(0x100000000000000000000000000000000000000000000000000000000)
0x34: v34 = AND v33 vd(0xffffffff)
0x35: v35(0x3610724e) = CONST 
0x3b: v3b = EQ v34 v35(0x3610724e)
0x7da: v7da(0x7eb) = CONST 
0x7db: JUMPI v7da(0x7eb) v3b
----------------------------------

Begin block 0x40
prev = {'0xd'}, next = {'0x4b', '0x7ee'}
----------------------------------
Block 0x40
0x41: v41(0x380d831b) = CONST 
0x46: v46 = EQ v41(0x380d831b) v34
0x7dc: v7dc(0x7ee) = CONST 
0x7dd: JUMPI v7dc(0x7ee) v46
----------------------------------

Begin block 0x4b
prev = {'0x40'}, next = {'0x56', '0x7f1'}
----------------------------------
Block 0x4b
0x4c: v4c(0x518ab2a8) = CONST 
0x51: v51 = EQ v4c(0x518ab2a8) v34
0x7de: v7de(0x7f1) = CONST 
0x7df: JUMPI v7de(0x7f1) v51
----------------------------------

Begin block 0x56
prev = {'0x4b'}, next = {'0x7f4', '0x61'}
----------------------------------
Block 0x56
0x57: v57(0x55a373d6) = CONST 
0x5c: v5c = EQ v57(0x55a373d6) v34
0x7e0: v7e0(0x7f4) = CONST 
0x7e1: JUMPI v7e0(0x7f4) v5c
----------------------------------

Begin block 0x61
prev = {'0x56'}, next = {'0x7f7', '0x6c'}
----------------------------------
Block 0x61
0x62: v62(0x676c0d77) = CONST 
0x67: v67 = EQ v62(0x676c0d77) v34
0x7e2: v7e2(0x7f7) = CONST 
0x7e3: JUMPI v7e2(0x7f7) v67
----------------------------------

Begin block 0x6c
prev = {'0x61'}, next = {'0x7fa', '0x77'}
----------------------------------
Block 0x6c
0x6d: v6d(0x7ff9b596) = CONST 
0x72: v72 = EQ v6d(0x7ff9b596) v34
0x7e4: v7e4(0x7fa) = CONST 
0x7e5: JUMPI v7e4(0x7fa) v72
----------------------------------

Begin block 0x77
prev = {'0x6c'}, next = {'0x7fd', '0x7e8'}
----------------------------------
Block 0x77
0x78: v78(0xf851a440) = CONST 
0x7d: v7d = EQ v78(0xf851a440) v34
0x7e6: v7e6(0x7fd) = CONST 
0x7e7: JUMPI v7e6(0x7fd) v7d
----------------------------------

Begin block 0x82
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x82
0x83: v83(0x0) = CONST 
0x86: REVERT v83(0x0) v83(0x0)
----------------------------------

Begin block 0x87
prev = {}, next = {'0x9d', '0x99'}
----------------------------------
function buyTokens(uint256)()
Block 0x87
0x88: v88(0xa4) = CONST 
0x8b: v8b(0x4) = CONST 
0x8e: v8e = CALLDATASIZE 
0x8f: v8f = SUB v8e v8b(0x4)
0x90: v90(0x20) = CONST 
0x93: v93 = LT v8f v90(0x20)
0x94: v94 = ISZERO v93
0x95: v95(0x9d) = CONST 
0x98: JUMPI v95(0x9d) v94
----------------------------------

Begin block 0x99
prev = {'0x87'}, next = {}
----------------------------------
Block 0x99
0x99: v99(0x0) = CONST 
0x9c: REVERT v99(0x0) v99(0x0)
----------------------------------

Begin block 0x9d
prev = {'0x87'}, next = {'0x167'}
----------------------------------
Block 0x9d
0x9f: v9f = CALLDATALOAD v8b(0x4)
0xa0: va0(0x167) = CONST 
0xa3: JUMP va0(0x167)
----------------------------------

Begin block 0xa40x87
prev = {'0x3bc'}, next = {}
----------------------------------
Block 0xa40x87
0xa50x87: STOP 
----------------------------------

Begin block 0xa40xa6
prev = {'0x651'}, next = {}
----------------------------------
Block 0xa40xa6
0xa50xa6: STOP 
----------------------------------

Begin block 0xa40x113
prev = {'0x759'}, next = {}
----------------------------------
Block 0xa40x113
0xa50x113: STOP 
----------------------------------

Begin block 0xa6
prev = {}, next = {'0xb2', '0xae'}
----------------------------------
function endSale()()
Block 0xa6
0xa7: va7 = CALLVALUE 
0xa9: va9 = ISZERO va7
0xaa: vaa(0xb2) = CONST 
0xad: JUMPI vaa(0xb2) va9
----------------------------------

Begin block 0xae
prev = {'0xa6'}, next = {}
----------------------------------
Block 0xae
0xae: vae(0x0) = CONST 
0xb1: REVERT vae(0x0) vae(0x0)
----------------------------------

Begin block 0xb2
prev = {'0xa6'}, next = {'0x409'}
----------------------------------
Block 0xb2
0xb4: vb4(0xa4) = CONST 
0xb7: vb7(0x409) = CONST 
0xba: JUMP vb7(0x409)
----------------------------------

Begin block 0xbb
prev = {}, next = {'0xc7', '0xc3'}
----------------------------------
function tokensSold()()
Block 0xbb
0xbc: vbc = CALLVALUE 
0xbe: vbe = ISZERO vbc
0xbf: vbf(0xc7) = CONST 
0xc2: JUMPI vbf(0xc7) vbe
----------------------------------

Begin block 0xc3
prev = {'0xbb'}, next = {}
----------------------------------
Block 0xc3
0xc3: vc3(0x0) = CONST 
0xc6: REVERT vc3(0x0) vc3(0x0)
----------------------------------

Begin block 0xc7
prev = {'0xbb'}, next = {'0x654'}
----------------------------------
Block 0xc7
0xc9: vc9(0xd0) = CONST 
0xcc: vcc(0x654) = CONST 
0xcf: JUMP vcc(0x654)
----------------------------------

Begin block 0xd00xbb
prev = {'0x654'}, next = {}
----------------------------------
Block 0xd00xbb
0xd10xbb: vbbd1(0x40) = CONST 
0xd40xbb: vbbd4 = MLOAD vbbd1(0x40)
0xd70xbb: MSTORE vbbd4 v657
0xd80xbb: vbbd8 = MLOAD vbbd1(0x40)
0xdc0xbb: vbbdc = SUB vbbd4 vbbd8
0xdd0xbb: vbbdd(0x20) = CONST 
0xdf0xbb: vbbdf = ADD vbbdd(0x20) vbbdc
0xe10xbb: RETURN vbbd8 vbbdf
----------------------------------

Begin block 0xd00x13d
prev = {'0x7a8'}, next = {}
----------------------------------
Block 0xd00x13d
0xd10x13d: v13dd1(0x40) = CONST 
0xd40x13d: v13dd4 = MLOAD v13dd1(0x40)
0xd70x13d: MSTORE v13dd4 v7ab
0xd80x13d: v13dd8 = MLOAD v13dd1(0x40)
0xdc0x13d: v13ddc = SUB v13dd4 v13dd8
0xdd0x13d: v13ddd(0x20) = CONST 
0xdf0x13d: v13ddf = ADD v13ddd(0x20) v13ddc
0xe10x13d: RETURN v13dd8 v13ddf
----------------------------------

Begin block 0xe2
prev = {}, next = {'0xea', '0xee'}
----------------------------------
function tokenContract()()
Block 0xe2
0xe3: ve3 = CALLVALUE 
0xe5: ve5 = ISZERO ve3
0xe6: ve6(0xee) = CONST 
0xe9: JUMPI ve6(0xee) ve5
----------------------------------

Begin block 0xea
prev = {'0xe2'}, next = {}
----------------------------------
Block 0xea
0xea: vea(0x0) = CONST 
0xed: REVERT vea(0x0) vea(0x0)
----------------------------------

Begin block 0xee
prev = {'0xe2'}, next = {'0x65a'}
----------------------------------
Block 0xee
0xf0: vf0(0xf7) = CONST 
0xf3: vf3(0x65a) = CONST 
0xf6: JUMP vf3(0x65a)
----------------------------------

Begin block 0xf70xe2
prev = {'0x65a'}, next = {}
----------------------------------
Block 0xf70xe2
0xf80xe2: ve2f8(0x40) = CONST 
0xfb0xe2: ve2fb = MLOAD ve2f8(0x40)
0xfc0xe2: ve2fc(0x1) = CONST 
0xfe0xe2: ve2fe(0xa0) = CONST 
0x1000xe2: ve2100(0x2) = CONST 
0x1020xe2: ve2102(0x10000000000000000000000000000000000000000) = EXP ve2100(0x2) ve2fe(0xa0)
0x1030xe2: ve2103(0xffffffffffffffffffffffffffffffffffffffff) = SUB ve2102(0x10000000000000000000000000000000000000000) ve2fc(0x1)
0x1060xe2: ve2106 = AND v666 ve2103(0xffffffffffffffffffffffffffffffffffffffff)
0x1080xe2: MSTORE ve2fb ve2106
0x1090xe2: ve2109 = MLOAD ve2f8(0x40)
0x10d0xe2: ve210d = SUB ve2fb ve2109
0x10e0xe2: ve210e(0x20) = CONST 
0x1100xe2: ve2110 = ADD ve210e(0x20) ve210d
0x1120xe2: RETURN ve2109 ve2110
----------------------------------

Begin block 0xf70x152
prev = {'0x7ae'}, next = {}
----------------------------------
Block 0xf70x152
0xf80x152: v152f8(0x40) = CONST 
0xfb0x152: v152fb = MLOAD v152f8(0x40)
0xfc0x152: v152fc(0x1) = CONST 
0xfe0x152: v152fe(0xa0) = CONST 
0x1000x152: v152100(0x2) = CONST 
0x1020x152: v152102(0x10000000000000000000000000000000000000000) = EXP v152100(0x2) v152fe(0xa0)
0x1030x152: v152103(0xffffffffffffffffffffffffffffffffffffffff) = SUB v152102(0x10000000000000000000000000000000000000000) v152fc(0x1)
0x1060x152: v152106 = AND v7ba v152103(0xffffffffffffffffffffffffffffffffffffffff)
0x1080x152: MSTORE v152fb v152106
0x1090x152: v152109 = MLOAD v152f8(0x40)
0x10d0x152: v15210d = SUB v152fb v152109
0x10e0x152: v15210e(0x20) = CONST 
0x1100x152: v152110 = ADD v15210e(0x20) v15210d
0x1120x152: RETURN v152109 v152110
----------------------------------

Begin block 0x113
prev = {}, next = {'0x11f', '0x11b'}
----------------------------------
function updateTokenPrice(uint256)()
Block 0x113
0x114: v114 = CALLVALUE 
0x116: v116 = ISZERO v114
0x117: v117(0x11f) = CONST 
0x11a: JUMPI v117(0x11f) v116
----------------------------------

Begin block 0x11b
prev = {'0x113'}, next = {}
----------------------------------
Block 0x11b
0x11b: v11b(0x0) = CONST 
0x11e: REVERT v11b(0x0) v11b(0x0)
----------------------------------

Begin block 0x11f
prev = {'0x113'}, next = {'0x132', '0x136'}
----------------------------------
Block 0x11f
0x121: v121(0xa4) = CONST 
0x124: v124(0x4) = CONST 
0x127: v127 = CALLDATASIZE 
0x128: v128 = SUB v127 v124(0x4)
0x129: v129(0x20) = CONST 
0x12c: v12c = LT v128 v129(0x20)
0x12d: v12d = ISZERO v12c
0x12e: v12e(0x136) = CONST 
0x131: JUMPI v12e(0x136) v12d
----------------------------------

Begin block 0x132
prev = {'0x11f'}, next = {}
----------------------------------
Block 0x132
0x132: v132(0x0) = CONST 
0x135: REVERT v132(0x0) v132(0x0)
----------------------------------

Begin block 0x136
prev = {'0x11f'}, next = {'0x669'}
----------------------------------
Block 0x136
0x138: v138 = CALLDATALOAD v124(0x4)
0x139: v139(0x669) = CONST 
0x13c: JUMP v139(0x669)
----------------------------------

Begin block 0x13d
prev = {}, next = {'0x149', '0x145'}
----------------------------------
function tokenPrice()()
Block 0x13d
0x13e: v13e = CALLVALUE 
0x140: v140 = ISZERO v13e
0x141: v141(0x149) = CONST 
0x144: JUMPI v141(0x149) v140
----------------------------------

Begin block 0x145
prev = {'0x13d'}, next = {}
----------------------------------
Block 0x145
0x145: v145(0x0) = CONST 
0x148: REVERT v145(0x0) v145(0x0)
----------------------------------

Begin block 0x149
prev = {'0x13d'}, next = {'0x7a8'}
----------------------------------
Block 0x149
0x14b: v14b(0xd0) = CONST 
0x14e: v14e(0x7a8) = CONST 
0x151: JUMP v14e(0x7a8)
----------------------------------

Begin block 0x152
prev = {}, next = {'0x15a', '0x15e'}
----------------------------------
function admin()()
Block 0x152
0x153: v153 = CALLVALUE 
0x155: v155 = ISZERO v153
0x156: v156(0x15e) = CONST 
0x159: JUMPI v156(0x15e) v155
----------------------------------

Begin block 0x15a
prev = {'0x152'}, next = {}
----------------------------------
Block 0x15a
0x15a: v15a(0x0) = CONST 
0x15d: REVERT v15a(0x0) v15a(0x0)
----------------------------------

Begin block 0x15e
prev = {'0x152'}, next = {'0x7ae'}
----------------------------------
Block 0x15e
0x160: v160(0xf7) = CONST 
0x163: v163(0x7ae) = CONST 
0x166: JUMP v163(0x7ae)
----------------------------------

Begin block 0x167
prev = {'0x9d'}, next = {'0x1c2', '0x173'}
----------------------------------
Block 0x167
0x168: v168(0x2) = CONST 
0x16a: v16a = SLOAD v168(0x2)
0x16c: v16c = MUL v9f v16a
0x16d: v16d = CALLVALUE 
0x16e: v16e = EQ v16d v16c
0x16f: v16f(0x1c2) = CONST 
0x172: JUMPI v16f(0x1c2) v16e
----------------------------------

Begin block 0x173
prev = {'0x167'}, next = {}
----------------------------------
Block 0x173
0x173: v173(0x40) = CONST 
0x176: v176 = MLOAD v173(0x40)
0x177: v177(0xe5) = CONST 
0x179: v179(0x2) = CONST 
0x17b: v17b(0x2000000000000000000000000000000000000000000000000000000000) = EXP v179(0x2) v177(0xe5)
0x17c: v17c(0x461bcd) = CONST 
0x180: v180(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v17c(0x461bcd) v17b(0x2000000000000000000000000000000000000000000000000000000000)
0x182: MSTORE v176 v180(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x183: v183(0x20) = CONST 
0x185: v185(0x4) = CONST 
0x188: v188 = ADD v176 v185(0x4)
0x189: MSTORE v188 v183(0x20)
0x18a: v18a(0x1a) = CONST 
0x18c: v18c(0x24) = CONST 
0x18f: v18f = ADD v176 v18c(0x24)
0x190: MSTORE v18f v18a(0x1a)
0x191: v191(0x496e636f7272656374206e756d626572206f6620746f6b656e73000000000000) = CONST 
0x1b2: v1b2(0x44) = CONST 
0x1b5: v1b5 = ADD v176 v1b2(0x44)
0x1b6: MSTORE v1b5 v191(0x496e636f7272656374206e756d626572206f6620746f6b656e73000000000000)
0x1b8: v1b8 = MLOAD v173(0x40)
0x1bc: v1bc = SUB v176 v1b8
0x1bd: v1bd(0x64) = CONST 
0x1bf: v1bf = ADD v1bd(0x64) v1bc
0x1c1: REVERT v1b8 v1bf
----------------------------------

Begin block 0x1c2
prev = {'0x167'}, next = {'0x225', '0x221'}
----------------------------------
Block 0x1c2
0x1c3: v1c3(0x1) = CONST 
0x1c5: v1c5 = SLOAD v1c3(0x1)
0x1c6: v1c6(0x40) = CONST 
0x1c9: v1c9 = MLOAD v1c6(0x40)
0x1ca: v1ca(0x70a0823100000000000000000000000000000000000000000000000000000000) = CONST 
0x1ec: MSTORE v1c9 v1ca(0x70a0823100000000000000000000000000000000000000000000000000000000)
0x1ed: v1ed = ADDRESS 
0x1ee: v1ee(0x4) = CONST 
0x1f1: v1f1 = ADD v1c9 v1ee(0x4)
0x1f2: MSTORE v1f1 v1ed
0x1f4: v1f4 = MLOAD v1c6(0x40)
0x1f7: v1f7(0x1) = CONST 
0x1f9: v1f9(0xa0) = CONST 
0x1fb: v1fb(0x2) = CONST 
0x1fd: v1fd(0x10000000000000000000000000000000000000000) = EXP v1fb(0x2) v1f9(0xa0)
0x1fe: v1fe(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1fd(0x10000000000000000000000000000000000000000) v1f7(0x1)
0x1ff: v1ff = AND v1fe(0xffffffffffffffffffffffffffffffffffffffff) v1c5
0x201: v201(0x70a08231) = CONST 
0x207: v207(0x24) = CONST 
0x20b: v20b = ADD v1c9 v207(0x24)
0x20d: v20d(0x20) = CONST 
0x214: v214 = SUB v1c9 v1f4
0x215: v215 = ADD v214 v207(0x24)
0x219: v219 = EXTCODESIZE v1ff
0x21a: v21a = ISZERO v219
0x21c: v21c = ISZERO v21a
0x21d: v21d(0x225) = CONST 
0x220: JUMPI v21d(0x225) v21c
----------------------------------

Begin block 0x221
prev = {'0x1c2'}, next = {}
----------------------------------
Block 0x221
0x221: v221(0x0) = CONST 
0x224: REVERT v221(0x0) v221(0x0)
----------------------------------

Begin block 0x225
prev = {'0x1c2'}, next = {'0x230', '0x239'}
----------------------------------
Block 0x225
0x227: v227 = GAS 
0x228: v228 = STATICCALL v227 v1ff v1f4 v215 v1f4 v20d(0x20)
0x229: v229 = ISZERO v228
0x22b: v22b = ISZERO v229
0x22c: v22c(0x239) = CONST 
0x22f: JUMPI v22c(0x239) v22b
----------------------------------

Begin block 0x230
prev = {'0x225'}, next = {}
----------------------------------
Block 0x230
0x230: v230 = RETURNDATASIZE 
0x231: v231(0x0) = CONST 
0x234: RETURNDATACOPY v231(0x0) v231(0x0) v230
0x235: v235 = RETURNDATASIZE 
0x236: v236(0x0) = CONST 
0x238: REVERT v236(0x0) v235
----------------------------------

Begin block 0x239
prev = {'0x225'}, next = {'0x24f', '0x24b'}
----------------------------------
Block 0x239
0x23e: v23e(0x40) = CONST 
0x240: v240 = MLOAD v23e(0x40)
0x241: v241 = RETURNDATASIZE 
0x242: v242(0x20) = CONST 
0x245: v245 = LT v241 v242(0x20)
0x246: v246 = ISZERO v245
0x247: v247(0x24f) = CONST 
0x24a: JUMPI v247(0x24f) v246
----------------------------------

Begin block 0x24b
prev = {'0x239'}, next = {}
----------------------------------
Block 0x24b
0x24b: v24b(0x0) = CONST 
0x24e: REVERT v24b(0x0) v24b(0x0)
----------------------------------

Begin block 0x24f
prev = {'0x239'}, next = {'0x2cd', '0x258'}
----------------------------------
Block 0x24f
0x251: v251 = MLOAD v240
0x252: v252 = LT v251 v9f
0x253: v253 = ISZERO v252
0x254: v254(0x2cd) = CONST 
0x257: JUMPI v254(0x2cd) v253
----------------------------------

Begin block 0x258
prev = {'0x24f'}, next = {}
----------------------------------
Block 0x258
0x258: v258(0x40) = CONST 
0x25b: v25b = MLOAD v258(0x40)
0x25c: v25c(0xe5) = CONST 
0x25e: v25e(0x2) = CONST 
0x260: v260(0x2000000000000000000000000000000000000000000000000000000000) = EXP v25e(0x2) v25c(0xe5)
0x261: v261(0x461bcd) = CONST 
0x265: v265(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v261(0x461bcd) v260(0x2000000000000000000000000000000000000000000000000000000000)
0x267: MSTORE v25b v265(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x268: v268(0x20) = CONST 
0x26a: v26a(0x4) = CONST 
0x26d: v26d = ADD v25b v26a(0x4)
0x26e: MSTORE v26d v268(0x20)
0x26f: v26f(0x2a) = CONST 
0x271: v271(0x24) = CONST 
0x274: v274 = ADD v25b v271(0x24)
0x275: MSTORE v274 v26f(0x2a)
0x276: v276(0x696e73756666696369656e7420746f6b656e73206f6e20746f6b656e2d73616c) = CONST 
0x297: v297(0x44) = CONST 
0x29a: v29a = ADD v25b v297(0x44)
0x29b: MSTORE v29a v276(0x696e73756666696369656e7420746f6b656e73206f6e20746f6b656e2d73616c)
0x29c: v29c(0x6520636f6e747261637400000000000000000000000000000000000000000000) = CONST 
0x2bd: v2bd(0x64) = CONST 
0x2c0: v2c0 = ADD v25b v2bd(0x64)
0x2c1: MSTORE v2c0 v29c(0x6520636f6e747261637400000000000000000000000000000000000000000000)
0x2c3: v2c3 = MLOAD v258(0x40)
0x2c7: v2c7 = SUB v25b v2c3
0x2c8: v2c8(0x84) = CONST 
0x2ca: v2ca = ADD v2c8(0x84) v2c7
0x2cc: REVERT v2c3 v2ca
----------------------------------

Begin block 0x2cd
prev = {'0x24f'}, next = {'0x336', '0x33a'}
----------------------------------
Block 0x2cd
0x2ce: v2ce(0x1) = CONST 
0x2d0: v2d0 = SLOAD v2ce(0x1)
0x2d1: v2d1(0x40) = CONST 
0x2d4: v2d4 = MLOAD v2d1(0x40)
0x2d5: v2d5(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = CONST 
0x2f7: MSTORE v2d4 v2d5(0xa9059cbb00000000000000000000000000000000000000000000000000000000)
0x2f8: v2f8 = CALLER 
0x2f9: v2f9(0x4) = CONST 
0x2fc: v2fc = ADD v2d4 v2f9(0x4)
0x2fd: MSTORE v2fc v2f8
0x2fe: v2fe(0x24) = CONST 
0x301: v301 = ADD v2d4 v2fe(0x24)
0x304: MSTORE v301 v9f
0x306: v306 = MLOAD v2d1(0x40)
0x307: v307(0x1) = CONST 
0x309: v309(0xa0) = CONST 
0x30b: v30b(0x2) = CONST 
0x30d: v30d(0x10000000000000000000000000000000000000000) = EXP v30b(0x2) v309(0xa0)
0x30e: v30e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v30d(0x10000000000000000000000000000000000000000) v307(0x1)
0x311: v311 = AND v2d0 v30e(0xffffffffffffffffffffffffffffffffffffffff)
0x313: v313(0xa9059cbb) = CONST 
0x319: v319(0x44) = CONST 
0x31d: v31d = ADD v2d4 v319(0x44)
0x31f: v31f(0x20) = CONST 
0x327: v327 = SUB v2d4 v306
0x328: v328 = ADD v327 v319(0x44)
0x32a: v32a(0x0) = CONST 
0x32e: v32e = EXTCODESIZE v311
0x32f: v32f = ISZERO v32e
0x331: v331 = ISZERO v32f
0x332: v332(0x33a) = CONST 
0x335: JUMPI v332(0x33a) v331
----------------------------------

Begin block 0x336
prev = {'0x2cd'}, next = {}
----------------------------------
Block 0x336
0x336: v336(0x0) = CONST 
0x339: REVERT v336(0x0) v336(0x0)
----------------------------------

Begin block 0x33a
prev = {'0x2cd'}, next = {'0x345', '0x34e'}
----------------------------------
Block 0x33a
0x33c: v33c = GAS 
0x33d: v33d = CALL v33c v311 v32a(0x0) v306 v328 v306 v31f(0x20)
0x33e: v33e = ISZERO v33d
0x340: v340 = ISZERO v33e
0x341: v341(0x34e) = CONST 
0x344: JUMPI v341(0x34e) v340
----------------------------------

Begin block 0x345
prev = {'0x33a'}, next = {}
----------------------------------
Block 0x345
0x345: v345 = RETURNDATASIZE 
0x346: v346(0x0) = CONST 
0x349: RETURNDATACOPY v346(0x0) v346(0x0) v345
0x34a: v34a = RETURNDATASIZE 
0x34b: v34b(0x0) = CONST 
0x34d: REVERT v34b(0x0) v34a
----------------------------------

Begin block 0x34e
prev = {'0x33a'}, next = {'0x364', '0x360'}
----------------------------------
Block 0x34e
0x353: v353(0x40) = CONST 
0x355: v355 = MLOAD v353(0x40)
0x356: v356 = RETURNDATASIZE 
0x357: v357(0x20) = CONST 
0x35a: v35a = LT v356 v357(0x20)
0x35b: v35b = ISZERO v35a
0x35c: v35c(0x364) = CONST 
0x35f: JUMPI v35c(0x364) v35b
----------------------------------

Begin block 0x360
prev = {'0x34e'}, next = {}
----------------------------------
Block 0x360
0x360: v360(0x0) = CONST 
0x363: REVERT v360(0x0) v360(0x0)
----------------------------------

Begin block 0x364
prev = {'0x34e'}, next = {'0x3bc', '0x36d'}
----------------------------------
Block 0x364
0x366: v366 = MLOAD v355
0x367: v367 = ISZERO v366
0x368: v368 = ISZERO v367
0x369: v369(0x3bc) = CONST 
0x36c: JUMPI v369(0x3bc) v368
----------------------------------

Begin block 0x36d
prev = {'0x364'}, next = {}
----------------------------------
Block 0x36d
0x36d: v36d(0x40) = CONST 
0x370: v370 = MLOAD v36d(0x40)
0x371: v371(0xe5) = CONST 
0x373: v373(0x2) = CONST 
0x375: v375(0x2000000000000000000000000000000000000000000000000000000000) = EXP v373(0x2) v371(0xe5)
0x376: v376(0x461bcd) = CONST 
0x37a: v37a(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v376(0x461bcd) v375(0x2000000000000000000000000000000000000000000000000000000000)
0x37c: MSTORE v370 v37a(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x37d: v37d(0x20) = CONST 
0x37f: v37f(0x4) = CONST 
0x382: v382 = ADD v370 v37f(0x4)
0x383: MSTORE v382 v37d(0x20)
0x384: v384(0x1f) = CONST 
0x386: v386(0x24) = CONST 
0x389: v389 = ADD v370 v386(0x24)
0x38a: MSTORE v389 v384(0x1f)
0x38b: v38b(0x5472616e7366657220746f6b656e7320746f206275796572206661696c656400) = CONST 
0x3ac: v3ac(0x44) = CONST 
0x3af: v3af = ADD v370 v3ac(0x44)
0x3b0: MSTORE v3af v38b(0x5472616e7366657220746f6b656e7320746f206275796572206661696c656400)
0x3b2: v3b2 = MLOAD v36d(0x40)
0x3b6: v3b6 = SUB v370 v3b2
0x3b7: v3b7(0x64) = CONST 
0x3b9: v3b9 = ADD v3b7(0x64) v3b6
0x3bb: REVERT v3b2 v3b9
----------------------------------

Begin block 0x3bc
prev = {'0x364'}, next = {'0xa40x87'}
----------------------------------
Block 0x3bc
0x3bd: v3bd(0x3) = CONST 
0x3c0: v3c0 = SLOAD v3bd(0x3)
0x3c2: v3c2 = ADD v9f v3c0
0x3c6: SSTORE v3bd(0x3) v3c2
0x3c7: v3c7(0x40) = CONST 
0x3ca: v3ca = MLOAD v3c7(0x40)
0x3cb: v3cb = CALLER 
0x3cd: MSTORE v3ca v3cb
0x3ce: v3ce(0x20) = CONST 
0x3d1: v3d1 = ADD v3ca v3ce(0x20)
0x3d4: MSTORE v3d1 v9f
0x3d7: v3d7 = ADD v3c7(0x40) v3ca
0x3db: MSTORE v3d7 v3c2
0x3dc: v3dc = MLOAD v3c7(0x40)
0x3dd: v3dd(0xed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a) = CONST 
0x401: v401 = SUB v3ca v3dc
0x402: v402(0x60) = CONST 
0x404: v404 = ADD v402(0x60) v401
0x406: LOG1 v3dc v404 v3dd(0xed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a)
0x408: JUMP v88(0xa4)
----------------------------------

Begin block 0x409
prev = {'0xb2'}, next = {'0x41c', '0x46b'}
----------------------------------
Block 0x409
0x40a: v40a(0x0) = CONST 
0x40c: v40c = SLOAD v40a(0x0)
0x40d: v40d(0x1) = CONST 
0x40f: v40f(0xa0) = CONST 
0x411: v411(0x2) = CONST 
0x413: v413(0x10000000000000000000000000000000000000000) = EXP v411(0x2) v40f(0xa0)
0x414: v414(0xffffffffffffffffffffffffffffffffffffffff) = SUB v413(0x10000000000000000000000000000000000000000) v40d(0x1)
0x415: v415 = AND v414(0xffffffffffffffffffffffffffffffffffffffff) v40c
0x416: v416 = CALLER 
0x417: v417 = EQ v416 v415
0x418: v418(0x46b) = CONST 
0x41b: JUMPI v418(0x46b) v417
----------------------------------

Begin block 0x41c
prev = {'0x409'}, next = {}
----------------------------------
Block 0x41c
0x41c: v41c(0x40) = CONST 
0x41f: v41f = MLOAD v41c(0x40)
0x420: v420(0xe5) = CONST 
0x422: v422(0x2) = CONST 
0x424: v424(0x2000000000000000000000000000000000000000000000000000000000) = EXP v422(0x2) v420(0xe5)
0x425: v425(0x461bcd) = CONST 
0x429: v429(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v425(0x461bcd) v424(0x2000000000000000000000000000000000000000000000000000000000)
0x42b: MSTORE v41f v429(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x42c: v42c(0x20) = CONST 
0x42e: v42e(0x4) = CONST 
0x431: v431 = ADD v41f v42e(0x4)
0x432: MSTORE v431 v42c(0x20)
0x433: v433(0xe) = CONST 
0x435: v435(0x24) = CONST 
0x438: v438 = ADD v41f v435(0x24)
0x439: MSTORE v438 v433(0xe)
0x43a: v43a(0x41646d696e207265717569726564000000000000000000000000000000000000) = CONST 
0x45b: v45b(0x44) = CONST 
0x45e: v45e = ADD v41f v45b(0x44)
0x45f: MSTORE v45e v43a(0x41646d696e207265717569726564000000000000000000000000000000000000)
0x461: v461 = MLOAD v41c(0x40)
0x465: v465 = SUB v41f v461
0x466: v466(0x64) = CONST 
0x468: v468 = ADD v466(0x64) v465
0x46a: REVERT v461 v468
----------------------------------

Begin block 0x46b
prev = {'0x409'}, next = {'0x4dc', '0x4d8'}
----------------------------------
Block 0x46b
0x46c: v46c(0x1) = CONST 
0x46e: v46e = SLOAD v46c(0x1)
0x46f: v46f(0x0) = CONST 
0x471: v471 = SLOAD v46f(0x0)
0x472: v472(0x40) = CONST 
0x475: v475 = MLOAD v472(0x40)
0x476: v476(0x70a0823100000000000000000000000000000000000000000000000000000000) = CONST 
0x498: MSTORE v475 v476(0x70a0823100000000000000000000000000000000000000000000000000000000)
0x499: v499 = ADDRESS 
0x49a: v49a(0x4) = CONST 
0x49d: v49d = ADD v475 v49a(0x4)
0x49e: MSTORE v49d v499
0x4a0: v4a0 = MLOAD v472(0x40)
0x4a1: v4a1(0x1) = CONST 
0x4a3: v4a3(0xa0) = CONST 
0x4a5: v4a5(0x2) = CONST 
0x4a7: v4a7(0x10000000000000000000000000000000000000000) = EXP v4a5(0x2) v4a3(0xa0)
0x4a8: v4a8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4a7(0x10000000000000000000000000000000000000000) v4a1(0x1)
0x4ab: v4ab = AND v4a8(0xffffffffffffffffffffffffffffffffffffffff) v46e
0x4ad: v4ad(0xa9059cbb) = CONST 
0x4b3: v4b3 = AND v471 v4a8(0xffffffffffffffffffffffffffffffffffffffff)
0x4b7: v4b7(0x70a08231) = CONST 
0x4bd: v4bd(0x24) = CONST 
0x4c1: v4c1 = ADD v475 v4bd(0x24)
0x4c3: v4c3(0x20) = CONST 
0x4cb: v4cb = SUB v475 v4a0
0x4cc: v4cc = ADD v4cb v4bd(0x24)
0x4d0: v4d0 = EXTCODESIZE v4ab
0x4d1: v4d1 = ISZERO v4d0
0x4d3: v4d3 = ISZERO v4d1
0x4d4: v4d4(0x4dc) = CONST 
0x4d7: JUMPI v4d4(0x4dc) v4d3
----------------------------------

Begin block 0x4d8
prev = {'0x46b'}, next = {}
----------------------------------
Block 0x4d8
0x4d8: v4d8(0x0) = CONST 
0x4db: REVERT v4d8(0x0) v4d8(0x0)
----------------------------------

Begin block 0x4dc
prev = {'0x46b'}, next = {'0x4f0', '0x4e7'}
----------------------------------
Block 0x4dc
0x4de: v4de = GAS 
0x4df: v4df = STATICCALL v4de v4ab v4a0 v4cc v4a0 v4c3(0x20)
0x4e0: v4e0 = ISZERO v4df
0x4e2: v4e2 = ISZERO v4e0
0x4e3: v4e3(0x4f0) = CONST 
0x4e6: JUMPI v4e3(0x4f0) v4e2
----------------------------------

Begin block 0x4e7
prev = {'0x4dc'}, next = {}
----------------------------------
Block 0x4e7
0x4e7: v4e7 = RETURNDATASIZE 
0x4e8: v4e8(0x0) = CONST 
0x4eb: RETURNDATACOPY v4e8(0x0) v4e8(0x0) v4e7
0x4ec: v4ec = RETURNDATASIZE 
0x4ed: v4ed(0x0) = CONST 
0x4ef: REVERT v4ed(0x0) v4ec
----------------------------------

Begin block 0x4f0
prev = {'0x4dc'}, next = {'0x506', '0x502'}
----------------------------------
Block 0x4f0
0x4f5: v4f5(0x40) = CONST 
0x4f7: v4f7 = MLOAD v4f5(0x40)
0x4f8: v4f8 = RETURNDATASIZE 
0x4f9: v4f9(0x20) = CONST 
0x4fc: v4fc = LT v4f8 v4f9(0x20)
0x4fd: v4fd = ISZERO v4fc
0x4fe: v4fe(0x506) = CONST 
0x501: JUMPI v4fe(0x506) v4fd
----------------------------------

Begin block 0x502
prev = {'0x4f0'}, next = {}
----------------------------------
Block 0x502
0x502: v502(0x0) = CONST 
0x505: REVERT v502(0x0) v502(0x0)
----------------------------------

Begin block 0x506
prev = {'0x4f0'}, next = {'0x56e', '0x56a'}
----------------------------------
Block 0x506
0x508: v508 = MLOAD v4f7
0x509: v509(0x40) = CONST 
0x50c: v50c = MLOAD v509(0x40)
0x50d: v50d(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x52b: v52b(0xffffffff) = CONST 
0x531: v531 = AND v4ad(0xa9059cbb) v52b(0xffffffff)
0x532: v532 = MUL v531 v50d(0x100000000000000000000000000000000000000000000000000000000)
0x534: MSTORE v50c v532
0x535: v535(0x1) = CONST 
0x537: v537(0xa0) = CONST 
0x539: v539(0x2) = CONST 
0x53b: v53b(0x10000000000000000000000000000000000000000) = EXP v539(0x2) v537(0xa0)
0x53c: v53c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v53b(0x10000000000000000000000000000000000000000) v535(0x1)
0x53f: v53f = AND v4b3 v53c(0xffffffffffffffffffffffffffffffffffffffff)
0x540: v540(0x4) = CONST 
0x543: v543 = ADD v50c v540(0x4)
0x544: MSTORE v543 v53f
0x545: v545(0x24) = CONST 
0x548: v548 = ADD v50c v545(0x24)
0x54c: MSTORE v548 v508
0x54d: v54d = MLOAD v509(0x40)
0x54e: v54e(0x44) = CONST 
0x552: v552 = ADD v50c v54e(0x44)
0x554: v554(0x20) = CONST 
0x55b: v55b = SUB v50c v54d
0x55c: v55c = ADD v55b v54e(0x44)
0x55e: v55e(0x0) = CONST 
0x562: v562 = EXTCODESIZE v4ab
0x563: v563 = ISZERO v562
0x565: v565 = ISZERO v563
0x566: v566(0x56e) = CONST 
0x569: JUMPI v566(0x56e) v565
----------------------------------

Begin block 0x56a
prev = {'0x506'}, next = {}
----------------------------------
Block 0x56a
0x56a: v56a(0x0) = CONST 
0x56d: REVERT v56a(0x0) v56a(0x0)
----------------------------------

Begin block 0x56e
prev = {'0x506'}, next = {'0x579', '0x582'}
----------------------------------
Block 0x56e
0x570: v570 = GAS 
0x571: v571 = CALL v570 v4ab v55e(0x0) v54d v55c v54d v554(0x20)
0x572: v572 = ISZERO v571
0x574: v574 = ISZERO v572
0x575: v575(0x582) = CONST 
0x578: JUMPI v575(0x582) v574
----------------------------------

Begin block 0x579
prev = {'0x56e'}, next = {}
----------------------------------
Block 0x579
0x579: v579 = RETURNDATASIZE 
0x57a: v57a(0x0) = CONST 
0x57d: RETURNDATACOPY v57a(0x0) v57a(0x0) v579
0x57e: v57e = RETURNDATASIZE 
0x57f: v57f(0x0) = CONST 
0x581: REVERT v57f(0x0) v57e
----------------------------------

Begin block 0x582
prev = {'0x56e'}, next = {'0x594', '0x598'}
----------------------------------
Block 0x582
0x587: v587(0x40) = CONST 
0x589: v589 = MLOAD v587(0x40)
0x58a: v58a = RETURNDATASIZE 
0x58b: v58b(0x20) = CONST 
0x58e: v58e = LT v58a v58b(0x20)
0x58f: v58f = ISZERO v58e
0x590: v590(0x598) = CONST 
0x593: JUMPI v590(0x598) v58f
----------------------------------

Begin block 0x594
prev = {'0x582'}, next = {}
----------------------------------
Block 0x594
0x594: v594(0x0) = CONST 
0x597: REVERT v594(0x0) v594(0x0)
----------------------------------

Begin block 0x598
prev = {'0x582'}, next = {'0x5a1', '0x616'}
----------------------------------
Block 0x598
0x59a: v59a = MLOAD v589
0x59b: v59b = ISZERO v59a
0x59c: v59c = ISZERO v59b
0x59d: v59d(0x616) = CONST 
0x5a0: JUMPI v59d(0x616) v59c
----------------------------------

Begin block 0x5a1
prev = {'0x598'}, next = {}
----------------------------------
Block 0x5a1
0x5a1: v5a1(0x40) = CONST 
0x5a4: v5a4 = MLOAD v5a1(0x40)
0x5a5: v5a5(0xe5) = CONST 
0x5a7: v5a7(0x2) = CONST 
0x5a9: v5a9(0x2000000000000000000000000000000000000000000000000000000000) = EXP v5a7(0x2) v5a5(0xe5)
0x5aa: v5aa(0x461bcd) = CONST 
0x5ae: v5ae(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v5aa(0x461bcd) v5a9(0x2000000000000000000000000000000000000000000000000000000000)
0x5b0: MSTORE v5a4 v5ae(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x5b1: v5b1(0x20) = CONST 
0x5b3: v5b3(0x4) = CONST 
0x5b6: v5b6 = ADD v5a4 v5b3(0x4)
0x5b7: MSTORE v5b6 v5b1(0x20)
0x5b8: v5b8(0x31) = CONST 
0x5ba: v5ba(0x24) = CONST 
0x5bd: v5bd = ADD v5a4 v5ba(0x24)
0x5be: MSTORE v5bd v5b8(0x31)
0x5bf: v5bf(0x5472616e7366657220746f6b656e2d73616c6520746f6b656e2062616c616e63) = CONST 
0x5e0: v5e0(0x44) = CONST 
0x5e3: v5e3 = ADD v5a4 v5e0(0x44)
0x5e4: MSTORE v5e3 v5bf(0x5472616e7366657220746f6b656e2d73616c6520746f6b656e2062616c616e63)
0x5e5: v5e5(0x6520746f2061646d696e206661696c6564000000000000000000000000000000) = CONST 
0x606: v606(0x64) = CONST 
0x609: v609 = ADD v5a4 v606(0x64)
0x60a: MSTORE v609 v5e5(0x6520746f2061646d696e206661696c6564000000000000000000000000000000)
0x60c: v60c = MLOAD v5a1(0x40)
0x610: v610 = SUB v5a4 v60c
0x611: v611(0x84) = CONST 
0x613: v613 = ADD v611(0x84) v610
0x615: REVERT v60c v613
----------------------------------

Begin block 0x616
prev = {'0x598'}, next = {'0x651', '0x648'}
----------------------------------
Block 0x616
0x617: v617(0x0) = CONST 
0x61a: v61a = SLOAD v617(0x0)
0x61b: v61b(0x40) = CONST 
0x61d: v61d = MLOAD v61b(0x40)
0x61e: v61e(0x1) = CONST 
0x620: v620(0xa0) = CONST 
0x622: v622(0x2) = CONST 
0x624: v624(0x10000000000000000000000000000000000000000) = EXP v622(0x2) v620(0xa0)
0x625: v625(0xffffffffffffffffffffffffffffffffffffffff) = SUB v624(0x10000000000000000000000000000000000000000) v61e(0x1)
0x628: v628 = AND v61a v625(0xffffffffffffffffffffffffffffffffffffffff)
0x62a: v62a = ADDRESS 
0x62b: v62b = BALANCE v62a
0x62d: v62d = ISZERO v62b
0x62e: v62e(0x8fc) = CONST 
0x631: v631 = MUL v62e(0x8fc) v62d
0x63b: v63b = CALL v631 v628 v62b v61d v617(0x0) v61d v617(0x0)
0x641: v641 = ISZERO v63b
0x643: v643 = ISZERO v641
0x644: v644(0x651) = CONST 
0x647: JUMPI v644(0x651) v643
----------------------------------

Begin block 0x648
prev = {'0x616'}, next = {}
----------------------------------
Block 0x648
0x648: v648 = RETURNDATASIZE 
0x649: v649(0x0) = CONST 
0x64c: RETURNDATACOPY v649(0x0) v649(0x0) v648
0x64d: v64d = RETURNDATASIZE 
0x64e: v64e(0x0) = CONST 
0x650: REVERT v64e(0x0) v64d
----------------------------------

Begin block 0x651
prev = {'0x616'}, next = {'0xa40xa6'}
----------------------------------
Block 0x651
0x653: JUMP vb4(0xa4)
----------------------------------

Begin block 0x654
prev = {'0xc7'}, next = {'0xd00xbb'}
----------------------------------
Block 0x654
0x655: v655(0x3) = CONST 
0x657: v657 = SLOAD v655(0x3)
0x659: JUMP vc9(0xd0)
----------------------------------

Begin block 0x65a
prev = {'0xee'}, next = {'0xf70xe2'}
----------------------------------
Block 0x65a
0x65b: v65b(0x1) = CONST 
0x65d: v65d = SLOAD v65b(0x1)
0x65e: v65e(0x1) = CONST 
0x660: v660(0xa0) = CONST 
0x662: v662(0x2) = CONST 
0x664: v664(0x10000000000000000000000000000000000000000) = EXP v662(0x2) v660(0xa0)
0x665: v665(0xffffffffffffffffffffffffffffffffffffffff) = SUB v664(0x10000000000000000000000000000000000000000) v65e(0x1)
0x666: v666 = AND v665(0xffffffffffffffffffffffffffffffffffffffff) v65d
0x668: JUMP vf0(0xf7)
----------------------------------

Begin block 0x669
prev = {'0x136'}, next = {'0x6cb', '0x67c'}
----------------------------------
Block 0x669
0x66a: v66a(0x0) = CONST 
0x66c: v66c = SLOAD v66a(0x0)
0x66d: v66d(0x1) = CONST 
0x66f: v66f(0xa0) = CONST 
0x671: v671(0x2) = CONST 
0x673: v673(0x10000000000000000000000000000000000000000) = EXP v671(0x2) v66f(0xa0)
0x674: v674(0xffffffffffffffffffffffffffffffffffffffff) = SUB v673(0x10000000000000000000000000000000000000000) v66d(0x1)
0x675: v675 = AND v674(0xffffffffffffffffffffffffffffffffffffffff) v66c
0x676: v676 = CALLER 
0x677: v677 = EQ v676 v675
0x678: v678(0x6cb) = CONST 
0x67b: JUMPI v678(0x6cb) v677
----------------------------------

Begin block 0x67c
prev = {'0x669'}, next = {}
----------------------------------
Block 0x67c
0x67c: v67c(0x40) = CONST 
0x67f: v67f = MLOAD v67c(0x40)
0x680: v680(0xe5) = CONST 
0x682: v682(0x2) = CONST 
0x684: v684(0x2000000000000000000000000000000000000000000000000000000000) = EXP v682(0x2) v680(0xe5)
0x685: v685(0x461bcd) = CONST 
0x689: v689(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v685(0x461bcd) v684(0x2000000000000000000000000000000000000000000000000000000000)
0x68b: MSTORE v67f v689(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x68c: v68c(0x20) = CONST 
0x68e: v68e(0x4) = CONST 
0x691: v691 = ADD v67f v68e(0x4)
0x692: MSTORE v691 v68c(0x20)
0x693: v693(0xe) = CONST 
0x695: v695(0x24) = CONST 
0x698: v698 = ADD v67f v695(0x24)
0x699: MSTORE v698 v693(0xe)
0x69a: v69a(0x41646d696e207265717569726564000000000000000000000000000000000000) = CONST 
0x6bb: v6bb(0x44) = CONST 
0x6be: v6be = ADD v67f v6bb(0x44)
0x6bf: MSTORE v6be v69a(0x41646d696e207265717569726564000000000000000000000000000000000000)
0x6c1: v6c1 = MLOAD v67c(0x40)
0x6c5: v6c5 = SUB v67f v6c1
0x6c6: v6c6(0x64) = CONST 
0x6c8: v6c8 = ADD v6c6(0x64) v6c5
0x6ca: REVERT v6c1 v6c8
----------------------------------

Begin block 0x6cb
prev = {'0x669'}, next = {'0x6dd', '0x6d6'}
----------------------------------
Block 0x6cb
0x6cc: v6cc(0x0) = CONST 
0x6cf: v6cf = GT v138 v6cc(0x0)
0x6d1: v6d1 = ISZERO v6cf
0x6d2: v6d2(0x6dd) = CONST 
0x6d5: JUMPI v6d2(0x6dd) v6d1
----------------------------------

Begin block 0x6d6
prev = {'0x6cb'}, next = {'0x6dd'}
----------------------------------
Block 0x6d6
0x6d7: v6d7(0x2) = CONST 
0x6d9: v6d9 = SLOAD v6d7(0x2)
0x6db: v6db = EQ v138 v6d9
0x6dc: v6dc = ISZERO v6db
----------------------------------

Begin block 0x6dd
prev = {'0x6cb', '0x6d6'}, next = {'0x759', '0x6e4'}
----------------------------------
Block 0x6dd
0x6dd_0x0: v6dd_0 = PHI v6cf v6dc
0x6de: v6de = ISZERO v6dd_0
0x6df: v6df = ISZERO v6de
0x6e0: v6e0(0x759) = CONST 
0x6e3: JUMPI v6e0(0x759) v6df
----------------------------------

Begin block 0x6e4
prev = {'0x6dd'}, next = {}
----------------------------------
Block 0x6e4
0x6e4: v6e4(0x40) = CONST 
0x6e7: v6e7 = MLOAD v6e4(0x40)
0x6e8: v6e8(0xe5) = CONST 
0x6ea: v6ea(0x2) = CONST 
0x6ec: v6ec(0x2000000000000000000000000000000000000000000000000000000000) = EXP v6ea(0x2) v6e8(0xe5)
0x6ed: v6ed(0x461bcd) = CONST 
0x6f1: v6f1(0x8c379a000000000000000000000000000000000000000000000000000000000) = MUL v6ed(0x461bcd) v6ec(0x2000000000000000000000000000000000000000000000000000000000)
0x6f3: MSTORE v6e7 v6f1(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x6f4: v6f4(0x20) = CONST 
0x6f6: v6f6(0x4) = CONST 
0x6f9: v6f9 = ADD v6e7 v6f6(0x4)
0x6fa: MSTORE v6f9 v6f4(0x20)
0x6fb: v6fb(0x24) = CONST 
0x6fe: v6fe = ADD v6e7 v6fb(0x24)
0x701: MSTORE v6fe v6e4(0x40)
0x702: v702(0x546f6b656e207072696365206d7573742062652067726561746572207468616e) = CONST 
0x723: v723(0x44) = CONST 
0x726: v726 = ADD v6e7 v723(0x44)
0x727: MSTORE v726 v702(0x546f6b656e207072696365206d7573742062652067726561746572207468616e)
0x728: v728(0x207a65726f20616e6420646966666572656e74207468616e2063757272656e74) = CONST 
0x749: v749(0x64) = CONST 
0x74c: v74c = ADD v6e7 v749(0x64)
0x74d: MSTORE v74c v728(0x207a65726f20616e6420646966666572656e74207468616e2063757272656e74)
0x74f: v74f = MLOAD v6e4(0x40)
0x753: v753 = SUB v6e7 v74f
0x754: v754(0x84) = CONST 
0x756: v756 = ADD v754(0x84) v753
0x758: REVERT v74f v756
----------------------------------

Begin block 0x759
prev = {'0x6dd'}, next = {'0xa40x113'}
----------------------------------
Block 0x759
0x75a: v75a(0x2) = CONST 
0x75e: SSTORE v75a(0x2) v138
0x75f: v75f(0x0) = CONST 
0x761: v761 = SLOAD v75f(0x0)
0x762: v762(0x40) = CONST 
0x765: v765 = MLOAD v762(0x40)
0x766: v766(0x1) = CONST 
0x768: v768(0xa0) = CONST 
0x76a: v76a(0x2) = CONST 
0x76c: v76c(0x10000000000000000000000000000000000000000) = EXP v76a(0x2) v768(0xa0)
0x76d: v76d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v76c(0x10000000000000000000000000000000000000000) v766(0x1)
0x770: v770 = AND v761 v76d(0xffffffffffffffffffffffffffffffffffffffff)
0x772: MSTORE v765 v770
0x773: v773(0x20) = CONST 
0x776: v776 = ADD v765 v773(0x20)
0x779: MSTORE v776 v138
0x77b: v77b = MLOAD v762(0x40)
0x77c: v77c(0xfd676231a7567664039111533b8f8d5e95e67c3ee0168864ceb04c90077741e) = CONST 
0x7a0: v7a0 = SUB v765 v77b
0x7a3: v7a3 = ADD v762(0x40) v7a0
0x7a5: LOG1 v77b v7a3 v77c(0xfd676231a7567664039111533b8f8d5e95e67c3ee0168864ceb04c90077741e)
0x7a7: JUMP v121(0xa4)
----------------------------------

Begin block 0x7a8
prev = {'0x149'}, next = {'0xd00x13d'}
----------------------------------
Block 0x7a8
0x7a9: v7a9(0x2) = CONST 
0x7ab: v7ab = SLOAD v7a9(0x2)
0x7ad: JUMP v14b(0xd0)
----------------------------------

Begin block 0x7ae
prev = {'0x15e'}, next = {'0xf70x152'}
----------------------------------
Block 0x7ae
0x7af: v7af(0x0) = CONST 
0x7b1: v7b1 = SLOAD v7af(0x0)
0x7b2: v7b2(0x1) = CONST 
0x7b4: v7b4(0xa0) = CONST 
0x7b6: v7b6(0x2) = CONST 
0x7b8: v7b8(0x10000000000000000000000000000000000000000) = EXP v7b6(0x2) v7b4(0xa0)
0x7b9: v7b9(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7b8(0x10000000000000000000000000000000000000000) v7b2(0x1)
0x7ba: v7ba = AND v7b9(0xffffffffffffffffffffffffffffffffffffffff) v7b1
0x7bc: JUMP v160(0xf7)
----------------------------------

Begin block 0x7e8
prev = {'0x77', '0x0'}, next = {}
----------------------------------
Block 0x7e8
0x7e9: v7e9(0x82) = CONST 
0x7ea: CALLPRIVATE v7e9(0x82)
----------------------------------

Begin block 0x7eb
prev = {'0xd'}, next = {}
----------------------------------
Block 0x7eb
0x7ec: v7ec(0x87) = CONST 
0x7ed: CALLPRIVATE v7ec(0x87)
----------------------------------

Begin block 0x7ee
prev = {'0x40'}, next = {}
----------------------------------
Block 0x7ee
0x7ef: v7ef(0xa6) = CONST 
0x7f0: CALLPRIVATE v7ef(0xa6)
----------------------------------

Begin block 0x7f1
prev = {'0x4b'}, next = {}
----------------------------------
Block 0x7f1
0x7f2: v7f2(0xbb) = CONST 
0x7f3: CALLPRIVATE v7f2(0xbb)
----------------------------------

Begin block 0x7f4
prev = {'0x56'}, next = {}
----------------------------------
Block 0x7f4
0x7f5: v7f5(0xe2) = CONST 
0x7f6: CALLPRIVATE v7f5(0xe2)
----------------------------------

Begin block 0x7f7
prev = {'0x61'}, next = {}
----------------------------------
Block 0x7f7
0x7f8: v7f8(0x113) = CONST 
0x7f9: CALLPRIVATE v7f8(0x113)
----------------------------------

Begin block 0x7fa
prev = {'0x6c'}, next = {}
----------------------------------
Block 0x7fa
0x7fb: v7fb(0x13d) = CONST 
0x7fc: CALLPRIVATE v7fb(0x13d)
----------------------------------

Begin block 0x7fd
prev = {'0x77'}, next = {}
----------------------------------
Block 0x7fd
0x7fe: v7fe(0x152) = CONST 
0x7ff: CALLPRIVATE v7fe(0x152)
----------------------------------
