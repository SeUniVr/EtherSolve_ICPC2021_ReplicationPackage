
Begin block 0x0
prev = {}, next = {'0xc', '0x10'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x1a', '0x18f9'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x18f5: v18f5(0x18f9) = CONST 
0x18f6: JUMPI v18f5(0x18f9) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x18fc', '0x18f9'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x16256a7f) = CONST 
0x26: v26 = EQ v21(0x16256a7f) v1f
0x18f7: v18f7(0x18fc) = CONST 
0x18f8: JUMPI v18f7(0x18fc) v26
----------------------------------

Begin block 0x2b
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x2b
0x2c: v2c(0x0) = CONST 
0x2f: REVERT v2c(0x0) v2c(0x0)
----------------------------------

Begin block 0x30
prev = {}, next = {'0x42', '0x46'}
----------------------------------
function createTrustList(address[],address)()
Block 0x30
0x31: v31(0xde) = CONST 
0x34: v34(0x4) = CONST 
0x37: v37 = CALLDATASIZE 
0x38: v38 = SUB v37 v34(0x4)
0x39: v39(0x40) = CONST 
0x3c: v3c = LT v38 v39(0x40)
0x3d: v3d = ISZERO v3c
0x3e: v3e(0x46) = CONST 
0x41: JUMPI v3e(0x46) v3d
----------------------------------

Begin block 0x42
prev = {'0x30'}, next = {}
----------------------------------
Block 0x42
0x42: v42(0x0) = CONST 
0x45: REVERT v42(0x0) v42(0x0)
----------------------------------

Begin block 0x46
prev = {'0x30'}, next = {'0x5d', '0x61'}
----------------------------------
Block 0x46
0x48: v48 = ADD v34(0x4) v38
0x4a: v4a(0x20) = CONST 
0x4d: v4d = ADD v34(0x4) v4a(0x20)
0x4f: v4f = CALLDATALOAD v34(0x4)
0x50: v50(0x100000000) = CONST 
0x57: v57 = GT v4f v50(0x100000000)
0x58: v58 = ISZERO v57
0x59: v59(0x61) = CONST 
0x5c: JUMPI v59(0x61) v58
----------------------------------

Begin block 0x5d
prev = {'0x46'}, next = {}
----------------------------------
Block 0x5d
0x5d: v5d(0x0) = CONST 
0x60: REVERT v5d(0x0) v5d(0x0)
----------------------------------

Begin block 0x61
prev = {'0x46'}, next = {'0x6f', '0x73'}
----------------------------------
Block 0x61
0x63: v63 = ADD v34(0x4) v4f
0x65: v65(0x20) = CONST 
0x68: v68 = ADD v63 v65(0x20)
0x69: v69 = GT v68 v48
0x6a: v6a = ISZERO v69
0x6b: v6b(0x73) = CONST 
0x6e: JUMPI v6b(0x73) v6a
----------------------------------

Begin block 0x6f
prev = {'0x61'}, next = {}
----------------------------------
Block 0x6f
0x6f: v6f(0x0) = CONST 
0x72: REVERT v6f(0x0) v6f(0x0)
----------------------------------

Begin block 0x73
prev = {'0x61'}, next = {'0x95', '0x91'}
----------------------------------
Block 0x73
0x75: v75 = CALLDATALOAD v63
0x77: v77(0x20) = CONST 
0x79: v79 = ADD v77(0x20) v63
0x7c: v7c(0x20) = CONST 
0x7f: v7f = MUL v75 v7c(0x20)
0x81: v81 = ADD v79 v7f
0x82: v82 = GT v81 v48
0x83: v83(0x100000000) = CONST 
0x8a: v8a = GT v75 v83(0x100000000)
0x8b: v8b = OR v8a v82
0x8c: v8c = ISZERO v8b
0x8d: v8d(0x95) = CONST 
0x90: JUMPI v8d(0x95) v8c
----------------------------------

Begin block 0x91
prev = {'0x73'}, next = {}
----------------------------------
Block 0x91
0x91: v91(0x0) = CONST 
0x94: REVERT v91(0x0) v91(0x0)
----------------------------------

Begin block 0x95
prev = {'0x73'}, next = {'0xfa'}
----------------------------------
Block 0x95
0x9a: v9a(0x20) = CONST 
0x9c: v9c = MUL v9a(0x20) v75
0x9d: v9d(0x20) = CONST 
0x9f: v9f = ADD v9d(0x20) v9c
0xa0: va0(0x40) = CONST 
0xa2: va2 = MLOAD va0(0x40)
0xa5: va5 = ADD va2 v9f
0xa6: va6(0x40) = CONST 
0xa8: MSTORE va6(0x40) va5
0xb0: MSTORE va2 v75
0xb1: vb1(0x20) = CONST 
0xb3: vb3 = ADD vb1(0x20) va2
0xb6: vb6(0x20) = CONST 
0xb8: vb8 = MUL vb6(0x20) v75
0xbc: CALLDATACOPY vb3 v79 vb8
0xbd: vbd(0x0) = CONST 
0xc0: vc0 = ADD vb3 vb8
0xc4: MSTORE vc0 vbd(0x0)
0xcc: vcc = CALLDATALOAD v4d
0xcd: vcd(0x1) = CONST 
0xcf: vcf(0x1) = CONST 
0xd1: vd1(0xa0) = CONST 
0xd3: vd3(0x10000000000000000000000000000000000000000) = SHL vd1(0xa0) vcf(0x1)
0xd4: vd4(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd3(0x10000000000000000000000000000000000000000) vcd(0x1)
0xd5: vd5 = AND vd4(0xffffffffffffffffffffffffffffffffffffffff) vcc
0xd8: vd8(0xfa) = CONST 
0xdd: JUMP vd8(0xfa)
----------------------------------

Begin block 0xde
prev = {'0x214'}, next = {}
----------------------------------
Block 0xde
0xdf: vdf(0x40) = CONST 
0xe2: ve2 = MLOAD vdf(0x40)
0xe3: ve3(0x1) = CONST 
0xe5: ve5(0x1) = CONST 
0xe7: ve7(0xa0) = CONST 
0xe9: ve9(0x10000000000000000000000000000000000000000) = SHL ve7(0xa0) ve5(0x1)
0xea: vea(0xffffffffffffffffffffffffffffffffffffffff) = SUB ve9(0x10000000000000000000000000000000000000000) ve3(0x1)
0xed: ved = AND v16b vea(0xffffffffffffffffffffffffffffffffffffffff)
0xef: MSTORE ve2 ved
0xf0: vf0 = MLOAD vdf(0x40)
0xf4: vf4 = SUB ve2 vf0
0xf5: vf5(0x20) = CONST 
0xf7: vf7 = ADD vf5(0x20) vf4
0xf9: RETURN vf0 vf7
----------------------------------

Begin block 0xfa
prev = {'0x95'}, next = {'0x230'}
----------------------------------
Block 0xfa
0xfb: vfb(0x0) = CONST 
0x100: v100(0x40) = CONST 
0x102: v102 = MLOAD v100(0x40)
0x103: v103(0x10b) = CONST 
0x107: v107(0x230) = CONST 
0x10a: JUMP v107(0x230)
----------------------------------

Begin block 0x10b
prev = {'0x230'}, next = {'0x13d'}
----------------------------------
Block 0x10b
0x10c: v10c(0x1) = CONST 
0x10e: v10e(0x1) = CONST 
0x110: v110(0xa0) = CONST 
0x112: v112(0x10000000000000000000000000000000000000000) = SHL v110(0xa0) v10e(0x1)
0x113: v113(0xffffffffffffffffffffffffffffffffffffffff) = SUB v112(0x10000000000000000000000000000000000000000) v10c(0x1)
0x115: v115 = AND vd5 v113(0xffffffffffffffffffffffffffffffffffffffff)
0x116: v116(0x20) = CONST 
0x11a: v11a = ADD v23a v116(0x20)
0x11e: MSTORE v11a v115
0x11f: v11f(0x40) = CONST 
0x123: MSTORE v23a v11f(0x40)
0x125: v125 = MLOAD va2
0x128: v128 = ADD v23a v11f(0x40)
0x129: MSTORE v128 v125
0x12b: v12b = MLOAD va2
0x12e: v12e(0x60) = CONST 
0x131: v131 = ADD v23a v12e(0x60)
0x135: v135 = ADD v116(0x20) va2
0x137: v137 = MUL v116(0x20) v12b
0x13b: v13b(0x0) = CONST 
----------------------------------

Begin block 0x13d
prev = {'0x146', '0x10b'}, next = {'0x155', '0x146'}
----------------------------------
Block 0x13d
0x13d_0x0: v13d_0 = PHI v13b(0x0) v150
0x140: v140 = LT v13d_0 v137
0x141: v141 = ISZERO v140
0x142: v142(0x155) = CONST 
0x145: JUMPI v142(0x155) v141
----------------------------------

Begin block 0x146
prev = {'0x13d'}, next = {'0x13d'}
----------------------------------
Block 0x146
0x146_0x0: v146_0 = PHI v13b(0x0) v150
0x148: v148 = ADD v146_0 v135
0x149: v149 = MLOAD v148
0x14c: v14c = ADD v146_0 v131
0x14d: MSTORE v14c v149
0x14e: v14e(0x20) = CONST 
0x150: v150 = ADD v14e(0x20) v146_0
0x151: v151(0x13d) = CONST 
0x154: JUMP v151(0x13d)
----------------------------------

Begin block 0x155
prev = {'0x13d'}, next = {'0x17d', '0x174'}
----------------------------------
Block 0x155
0x15c: v15c = ADD v137 v131
0x162: v162(0x40) = CONST 
0x164: v164 = MLOAD v162(0x40)
0x167: v167 = SUB v15c v164
0x169: v169(0x0) = CONST 
0x16b: v16b = CREATE v169(0x0) v164 v167
0x16d: v16d = ISZERO v16b
0x16f: v16f = ISZERO v16d
0x170: v170(0x17d) = CONST 
0x173: JUMPI v170(0x17d) v16f
----------------------------------

Begin block 0x174
prev = {'0x155'}, next = {}
----------------------------------
Block 0x174
0x174: v174 = RETURNDATASIZE 
0x175: v175(0x0) = CONST 
0x178: RETURNDATACOPY v175(0x0) v175(0x0) v174
0x179: v179 = RETURNDATASIZE 
0x17a: v17a(0x0) = CONST 
0x17c: REVERT v17a(0x0) v179
----------------------------------

Begin block 0x17d
prev = {'0x155'}, next = {'0x1fc'}
----------------------------------
Block 0x17d
0x181: v181(0x7312b6417ce56b28481806a80bb0c17f5ef3ab138be3bbb7466c223e2685f163) = CONST 
0x1a5: v1a5(0x40) = CONST 
0x1a7: v1a7 = MLOAD v1a5(0x40)
0x1aa: v1aa(0x1) = CONST 
0x1ac: v1ac(0x1) = CONST 
0x1ae: v1ae(0xa0) = CONST 
0x1b0: v1b0(0x10000000000000000000000000000000000000000) = SHL v1ae(0xa0) v1ac(0x1)
0x1b1: v1b1(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1b0(0x10000000000000000000000000000000000000000) v1aa(0x1)
0x1b2: v1b2 = AND v1b1(0xffffffffffffffffffffffffffffffffffffffff) v16b
0x1b3: v1b3(0x1) = CONST 
0x1b5: v1b5(0x1) = CONST 
0x1b7: v1b7(0xa0) = CONST 
0x1b9: v1b9(0x10000000000000000000000000000000000000000) = SHL v1b7(0xa0) v1b5(0x1)
0x1ba: v1ba(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1b9(0x10000000000000000000000000000000000000000) v1b3(0x1)
0x1bb: v1bb = AND v1ba(0xffffffffffffffffffffffffffffffffffffffff) v1b2
0x1bd: MSTORE v1a7 v1bb
0x1be: v1be(0x20) = CONST 
0x1c0: v1c0 = ADD v1be(0x20) v1a7
0x1c2: v1c2(0x20) = CONST 
0x1c4: v1c4 = ADD v1c2(0x20) v1c0
0x1c6: v1c6(0x1) = CONST 
0x1c8: v1c8(0x1) = CONST 
0x1ca: v1ca(0xa0) = CONST 
0x1cc: v1cc(0x10000000000000000000000000000000000000000) = SHL v1ca(0xa0) v1c8(0x1)
0x1cd: v1cd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1cc(0x10000000000000000000000000000000000000000) v1c6(0x1)
0x1ce: v1ce = AND v1cd(0xffffffffffffffffffffffffffffffffffffffff) vd5
0x1cf: v1cf(0x1) = CONST 
0x1d1: v1d1(0x1) = CONST 
0x1d3: v1d3(0xa0) = CONST 
0x1d5: v1d5(0x10000000000000000000000000000000000000000) = SHL v1d3(0xa0) v1d1(0x1)
0x1d6: v1d6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1d5(0x10000000000000000000000000000000000000000) v1cf(0x1)
0x1d7: v1d7 = AND v1d6(0xffffffffffffffffffffffffffffffffffffffff) v1ce
0x1d9: MSTORE v1c4 v1d7
0x1da: v1da(0x20) = CONST 
0x1dc: v1dc = ADD v1da(0x20) v1c4
0x1df: v1df = SUB v1dc v1a7
0x1e1: MSTORE v1c0 v1df
0x1e5: v1e5 = MLOAD va2
0x1e7: MSTORE v1dc v1e5
0x1e8: v1e8(0x20) = CONST 
0x1ea: v1ea = ADD v1e8(0x20) v1dc
0x1ee: v1ee = MLOAD va2
0x1f0: v1f0(0x20) = CONST 
0x1f2: v1f2 = ADD v1f0(0x20) va2
0x1f4: v1f4(0x20) = CONST 
0x1f6: v1f6 = MUL v1f4(0x20) v1ee
0x1fa: v1fa(0x0) = CONST 
----------------------------------

Begin block 0x1fc
prev = {'0x17d', '0x205'}, next = {'0x205', '0x214'}
----------------------------------
Block 0x1fc
0x1fc_0x0: v1fc_0 = PHI v1fa(0x0) v20f
0x1ff: v1ff = LT v1fc_0 v1f6
0x200: v200 = ISZERO v1ff
0x201: v201(0x214) = CONST 
0x204: JUMPI v201(0x214) v200
----------------------------------

Begin block 0x205
prev = {'0x1fc'}, next = {'0x1fc'}
----------------------------------
Block 0x205
0x205_0x0: v205_0 = PHI v1fa(0x0) v20f
0x207: v207 = ADD v205_0 v1f2
0x208: v208 = MLOAD v207
0x20b: v20b = ADD v205_0 v1ea
0x20c: MSTORE v20b v208
0x20d: v20d(0x20) = CONST 
0x20f: v20f = ADD v20d(0x20) v205_0
0x210: v210(0x1fc) = CONST 
0x213: JUMP v210(0x1fc)
----------------------------------

Begin block 0x214
prev = {'0x1fc'}, next = {'0xde'}
----------------------------------
Block 0x214
0x21b: v21b = ADD v1f6 v1ea
0x222: v222(0x40) = CONST 
0x224: v224 = MLOAD v222(0x40)
0x227: v227 = SUB v21b v224
0x229: LOG1 v224 v227 v181(0x7312b6417ce56b28481806a80bb0c17f5ef3ab138be3bbb7466c223e2685f163)
0x22f: JUMP v31(0xde)
----------------------------------

Begin block 0x230
prev = {'0xfa'}, next = {'0x10b'}
----------------------------------
Block 0x230
0x231: v231(0x1683) = CONST 
0x235: v235(0x23e) = CONST 
0x239: CODECOPY v102 v235(0x23e) v231(0x1683)
0x23a: v23a = ADD v231(0x1683) v102
0x23c: JUMP v103(0x10b)
----------------------------------

Begin block 0x18f9
prev = {'0x1a', '0x10'}, next = {}
----------------------------------
Block 0x18f9
0x18fa: v18fa(0x2b) = CONST 
0x18fb: CALLPRIVATE v18fa(0x2b)
----------------------------------

Begin block 0x18fc
prev = {'0x1a'}, next = {}
----------------------------------
Block 0x18fc
0x18fd: v18fd(0x30) = CONST 
0x18fe: CALLPRIVATE v18fd(0x30)
----------------------------------
