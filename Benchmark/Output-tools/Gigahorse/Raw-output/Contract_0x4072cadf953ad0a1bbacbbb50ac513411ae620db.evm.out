
Begin block 0x0
prev = {}, next = {'0x1aca', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x1aa2: v1aa2(0x1aca) = CONST 
0x1aa3: JUMPI v1aa2(0x1aca) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x1e', '0xa0'}
----------------------------------
Block 0xd
0xd: vd(0x0) = CONST 
0xf: vf = CALLDATALOAD vd(0x0)
0x10: v10(0xe0) = CONST 
0x12: v12 = SHR v10(0xe0) vf
0x14: v14(0x8f32d59b) = CONST 
0x19: v19 = GT v14(0x8f32d59b) v12
0x1a: v1a(0xa0) = CONST 
0x1d: JUMPI v1a(0xa0) v19
----------------------------------

Begin block 0x1e
prev = {'0xd'}, next = {'0x29', '0x64'}
----------------------------------
Block 0x1e
0x1f: v1f(0xbc8802a2) = CONST 
0x24: v24 = GT v1f(0xbc8802a2) v12
0x25: v25(0x64) = CONST 
0x28: JUMPI v25(0x64) v24
----------------------------------

Begin block 0x29
prev = {'0x1e'}, next = {'0x34', '0x1af7'}
----------------------------------
Block 0x29
0x2a: v2a(0xbc8802a2) = CONST 
0x2f: v2f = EQ v2a(0xbc8802a2) v12
0x1aa4: v1aa4(0x1af7) = CONST 
0x1aa5: JUMPI v1aa4(0x1af7) v2f
----------------------------------

Begin block 0x34
prev = {'0x29'}, next = {'0x3f', '0x1afa'}
----------------------------------
Block 0x34
0x35: v35(0xd821f81a) = CONST 
0x3a: v3a = EQ v35(0xd821f81a) v12
0x1aa6: v1aa6(0x1afa) = CONST 
0x1aa7: JUMPI v1aa6(0x1afa) v3a
----------------------------------

Begin block 0x3f
prev = {'0x34'}, next = {'0x1afd', '0x4a'}
----------------------------------
Block 0x3f
0x40: v40(0xdad901be) = CONST 
0x45: v45 = EQ v40(0xdad901be) v12
0x1aa8: v1aa8(0x1afd) = CONST 
0x1aa9: JUMPI v1aa8(0x1afd) v45
----------------------------------

Begin block 0x4a
prev = {'0x3f'}, next = {'0x1b00', '0x55'}
----------------------------------
Block 0x4a
0x4b: v4b(0xf2fde38b) = CONST 
0x50: v50 = EQ v4b(0xf2fde38b) v12
0x1aaa: v1aaa(0x1b00) = CONST 
0x1aab: JUMPI v1aaa(0x1b00) v50
----------------------------------

Begin block 0x55
prev = {'0x4a'}, next = {'0x1b03', '0x60'}
----------------------------------
Block 0x55
0x56: v56(0xfe92049d) = CONST 
0x5b: v5b = EQ v56(0xfe92049d) v12
0x1aac: v1aac(0x1b03) = CONST 
0x1aad: JUMPI v1aac(0x1b03) v5b
----------------------------------

Begin block 0x60
prev = {'0x55'}, next = {'0x1140x0'}
----------------------------------
Block 0x60
0x60: v60(0x114) = CONST 
0x63: JUMP v60(0x114)
----------------------------------

Begin block 0x64
prev = {'0x1e'}, next = {'0x70', '0x1ae8'}
----------------------------------
Block 0x64
0x66: v66(0x8f32d59b) = CONST 
0x6b: v6b = EQ v66(0x8f32d59b) v12
0x1aae: v1aae(0x1ae8) = CONST 
0x1aaf: JUMPI v1aae(0x1ae8) v6b
----------------------------------

Begin block 0x70
prev = {'0x64'}, next = {'0x7b', '0x1aeb'}
----------------------------------
Block 0x70
0x71: v71(0x9456fbcc) = CONST 
0x76: v76 = EQ v71(0x9456fbcc) v12
0x1ab0: v1ab0(0x1aeb) = CONST 
0x1ab1: JUMPI v1ab0(0x1aeb) v76
----------------------------------

Begin block 0x7b
prev = {'0x70'}, next = {'0x1aee', '0x86'}
----------------------------------
Block 0x7b
0x7c: v7c(0xa20dd43b) = CONST 
0x81: v81 = EQ v7c(0xa20dd43b) v12
0x1ab2: v1ab2(0x1aee) = CONST 
0x1ab3: JUMPI v1ab2(0x1aee) v81
----------------------------------

Begin block 0x86
prev = {'0x7b'}, next = {'0x91', '0x1af1'}
----------------------------------
Block 0x86
0x87: v87(0xa22352e2) = CONST 
0x8c: v8c = EQ v87(0xa22352e2) v12
0x1ab4: v1ab4(0x1af1) = CONST 
0x1ab5: JUMPI v1ab4(0x1af1) v8c
----------------------------------

Begin block 0x91
prev = {'0x86'}, next = {'0x9c', '0x1af4'}
----------------------------------
Block 0x91
0x92: v92(0xa829c3d1) = CONST 
0x97: v97 = EQ v92(0xa829c3d1) v12
0x1ab6: v1ab6(0x1af4) = CONST 
0x1ab7: JUMPI v1ab6(0x1af4) v97
----------------------------------

Begin block 0x9c
prev = {'0x91'}, next = {'0x1140x0'}
----------------------------------
Block 0x9c
0x9c: v9c(0x114) = CONST 
0x9f: JUMP v9c(0x114)
----------------------------------

Begin block 0xa0
prev = {'0xd'}, next = {'0xe7', '0xac'}
----------------------------------
Block 0xa0
0xa2: va2(0x4df6ca2a) = CONST 
0xa7: va7 = GT va2(0x4df6ca2a) v12
0xa8: va8(0xe7) = CONST 
0xab: JUMPI va8(0xe7) va7
----------------------------------

Begin block 0xac
prev = {'0xa0'}, next = {'0x1ad9', '0xb7'}
----------------------------------
Block 0xac
0xad: vad(0x4df6ca2a) = CONST 
0xb2: vb2 = EQ vad(0x4df6ca2a) v12
0x1ab8: v1ab8(0x1ad9) = CONST 
0x1ab9: JUMPI v1ab8(0x1ad9) vb2
----------------------------------

Begin block 0xb7
prev = {'0xac'}, next = {'0x1adc', '0xc2'}
----------------------------------
Block 0xb7
0xb8: vb8(0x51cff8d9) = CONST 
0xbd: vbd = EQ vb8(0x51cff8d9) v12
0x1aba: v1aba(0x1adc) = CONST 
0x1abb: JUMPI v1aba(0x1adc) vbd
----------------------------------

Begin block 0xc2
prev = {'0xb7'}, next = {'0xcd', '0x1adf'}
----------------------------------
Block 0xc2
0xc3: vc3(0x715018a6) = CONST 
0xc8: vc8 = EQ vc3(0x715018a6) v12
0x1abc: v1abc(0x1adf) = CONST 
0x1abd: JUMPI v1abc(0x1adf) vc8
----------------------------------

Begin block 0xcd
prev = {'0xc2'}, next = {'0xd8', '0x1ae2'}
----------------------------------
Block 0xcd
0xce: vce(0x79ca21a2) = CONST 
0xd3: vd3 = EQ vce(0x79ca21a2) v12
0x1abe: v1abe(0x1ae2) = CONST 
0x1abf: JUMPI v1abe(0x1ae2) vd3
----------------------------------

Begin block 0xd8
prev = {'0xcd'}, next = {'0xe3', '0x1ae5'}
----------------------------------
Block 0xd8
0xd9: vd9(0x8da5cb5b) = CONST 
0xde: vde = EQ vd9(0x8da5cb5b) v12
0x1ac0: v1ac0(0x1ae5) = CONST 
0x1ac1: JUMPI v1ac0(0x1ae5) vde
----------------------------------

Begin block 0xe3
prev = {'0xd8'}, next = {'0x1140x0'}
----------------------------------
Block 0xe3
0xe3: ve3(0x114) = CONST 
0xe6: JUMP ve3(0x114)
----------------------------------

Begin block 0xe7
prev = {'0xa0'}, next = {'0x1acd', '0xf3'}
----------------------------------
Block 0xe7
0xe9: ve9(0xc2a48e2) = CONST 
0xee: vee = EQ ve9(0xc2a48e2) v12
0x1ac2: v1ac2(0x1acd) = CONST 
0x1ac3: JUMPI v1ac2(0x1acd) vee
----------------------------------

Begin block 0xf3
prev = {'0xe7'}, next = {'0xfe', '0x1ad0'}
----------------------------------
Block 0xf3
0xf4: vf4(0x17299c04) = CONST 
0xf9: vf9 = EQ vf4(0x17299c04) v12
0x1ac4: v1ac4(0x1ad0) = CONST 
0x1ac5: JUMPI v1ac4(0x1ad0) vf9
----------------------------------

Begin block 0xfe
prev = {'0xf3'}, next = {'0x109', '0x1ad3'}
----------------------------------
Block 0xfe
0xff: vff(0x392f37e9) = CONST 
0x104: v104 = EQ vff(0x392f37e9) v12
0x1ac6: v1ac6(0x1ad3) = CONST 
0x1ac7: JUMPI v1ac6(0x1ad3) v104
----------------------------------

Begin block 0x109
prev = {'0xfe'}, next = {'0x1ad6', '0x1aca'}
----------------------------------
Block 0x109
0x10a: v10a(0x4381a07b) = CONST 
0x10f: v10f = EQ v10a(0x4381a07b) v12
0x1ac8: v1ac8(0x1ad6) = CONST 
0x1ac9: JUMPI v1ac8(0x1ad6) v10f
----------------------------------

Begin block 0x114
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x114
0x115: STOP 
----------------------------------

Begin block 0x1140x0
prev = {'0x9c', '0x60', '0xe3', '0x1aca'}, next = {}
----------------------------------
Block 0x1140x0
0x1150x0: STOP 
----------------------------------

Begin block 0x116
prev = {}, next = {'0x11e', '0x122'}
----------------------------------
function realitycheck()()
Block 0x116
0x117: v117 = CALLVALUE 
0x119: v119 = ISZERO v117
0x11a: v11a(0x122) = CONST 
0x11d: JUMPI v11a(0x122) v119
----------------------------------

Begin block 0x11e
prev = {'0x116'}, next = {}
----------------------------------
Block 0x11e
0x11e: v11e(0x0) = CONST 
0x121: REVERT v11e(0x0) v11e(0x0)
----------------------------------

Begin block 0x122
prev = {'0x116'}, next = {'0x700'}
----------------------------------
Block 0x122
0x124: v124(0x12b) = CONST 
0x127: v127(0x700) = CONST 
0x12a: JUMP v127(0x700)
----------------------------------

Begin block 0x12b
prev = {'0x700'}, next = {}
----------------------------------
Block 0x12b
0x12c: v12c(0x40) = CONST 
0x12e: v12e = MLOAD v12c(0x40)
0x131: v131(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x146: v146 = AND v131(0xffffffffffffffffffffffffffffffffffffffff) v725
0x147: v147(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x15c: v15c = AND v147(0xffffffffffffffffffffffffffffffffffffffff) v146
0x15e: MSTORE v12e v15c
0x15f: v15f(0x20) = CONST 
0x161: v161 = ADD v15f(0x20) v12e
0x165: v165(0x40) = CONST 
0x167: v167 = MLOAD v165(0x40)
0x16a: v16a = SUB v161 v167
0x16c: RETURN v167 v16a
----------------------------------

Begin block 0x16d
prev = {}, next = {'0x175', '0x179'}
----------------------------------
function setDisputeFee(uint256)()
Block 0x16d
0x16e: v16e = CALLVALUE 
0x170: v170 = ISZERO v16e
0x171: v171(0x179) = CONST 
0x174: JUMPI v171(0x179) v170
----------------------------------

Begin block 0x175
prev = {'0x16d'}, next = {}
----------------------------------
Block 0x175
0x175: v175(0x0) = CONST 
0x178: REVERT v175(0x0) v175(0x0)
----------------------------------

Begin block 0x179
prev = {'0x16d'}, next = {'0x18c', '0x190'}
----------------------------------
Block 0x179
0x17b: v17b(0x1a6) = CONST 
0x17e: v17e(0x4) = CONST 
0x181: v181 = CALLDATASIZE 
0x182: v182 = SUB v181 v17e(0x4)
0x183: v183(0x20) = CONST 
0x186: v186 = LT v182 v183(0x20)
0x187: v187 = ISZERO v186
0x188: v188(0x190) = CONST 
0x18b: JUMPI v188(0x190) v187
----------------------------------

Begin block 0x18c
prev = {'0x179'}, next = {}
----------------------------------
Block 0x18c
0x18c: v18c(0x0) = CONST 
0x18f: REVERT v18c(0x0) v18c(0x0)
----------------------------------

Begin block 0x190
prev = {'0x179'}, next = {'0x72a'}
----------------------------------
Block 0x190
0x192: v192 = ADD v17e(0x4) v182
0x196: v196 = CALLDATALOAD v17e(0x4)
0x198: v198(0x20) = CONST 
0x19a: v19a = ADD v198(0x20) v17e(0x4)
0x1a2: v1a2(0x72a) = CONST 
0x1a5: JUMP v1a2(0x72a)
----------------------------------

Begin block 0x1a6
prev = {'0x7a4'}, next = {}
----------------------------------
Block 0x1a6
0x1a7: STOP 
----------------------------------

Begin block 0x1a8
prev = {}, next = {'0x1b4', '0x1b0'}
----------------------------------
function metadata()()
Block 0x1a8
0x1a9: v1a9 = CALLVALUE 
0x1ab: v1ab = ISZERO v1a9
0x1ac: v1ac(0x1b4) = CONST 
0x1af: JUMPI v1ac(0x1b4) v1ab
----------------------------------

Begin block 0x1b0
prev = {'0x1a8'}, next = {}
----------------------------------
Block 0x1b0
0x1b0: v1b0(0x0) = CONST 
0x1b3: REVERT v1b0(0x0) v1b0(0x0)
----------------------------------

Begin block 0x1b4
prev = {'0x1a8'}, next = {'0x7e5'}
----------------------------------
Block 0x1b4
0x1b6: v1b6(0x1bd) = CONST 
0x1b9: v1b9(0x7e5) = CONST 
0x1bc: JUMP v1b9(0x7e5)
----------------------------------

Begin block 0x1bd
prev = {'0x87b'}, next = {'0x1e2'}
----------------------------------
Block 0x1bd
0x1be: v1be(0x40) = CONST 
0x1c0: v1c0 = MLOAD v1be(0x40)
0x1c3: v1c3(0x20) = CONST 
0x1c5: v1c5 = ADD v1c3(0x20) v1c0
0x1c8: v1c8 = SUB v1c5 v1c0
0x1ca: MSTORE v1c0 v1c8
0x1ce: v1ce = MLOAD v80a
0x1d0: MSTORE v1c5 v1ce
0x1d1: v1d1(0x20) = CONST 
0x1d3: v1d3 = ADD v1d1(0x20) v1c5
0x1d7: v1d7 = MLOAD v80a
0x1d9: v1d9(0x20) = CONST 
0x1db: v1db = ADD v1d9(0x20) v80a
0x1e0: v1e0(0x0) = CONST 
----------------------------------

Begin block 0x1e2
prev = {'0x1eb', '0x1bd'}, next = {'0x1fd', '0x1eb'}
----------------------------------
Block 0x1e2
0x1e2_0x0: v1e2_0 = PHI v1e0(0x0) v1f6
0x1e5: v1e5 = LT v1e2_0 v1d7
0x1e6: v1e6 = ISZERO v1e5
0x1e7: v1e7(0x1fd) = CONST 
0x1ea: JUMPI v1e7(0x1fd) v1e6
----------------------------------

Begin block 0x1eb
prev = {'0x1e2'}, next = {'0x1e2'}
----------------------------------
Block 0x1eb
0x1eb_0x0: v1eb_0 = PHI v1e0(0x0) v1f6
0x1ed: v1ed = ADD v1db v1eb_0
0x1ee: v1ee = MLOAD v1ed
0x1f1: v1f1 = ADD v1d3 v1eb_0
0x1f2: MSTORE v1f1 v1ee
0x1f3: v1f3(0x20) = CONST 
0x1f6: v1f6 = ADD v1eb_0 v1f3(0x20)
0x1f9: v1f9(0x1e2) = CONST 
0x1fc: JUMP v1f9(0x1e2)
----------------------------------

Begin block 0x1fd
prev = {'0x1e2'}, next = {'0x22a', '0x211'}
----------------------------------
Block 0x1fd
0x206: v206 = ADD v1d7 v1d3
0x208: v208(0x1f) = CONST 
0x20a: v20a = AND v208(0x1f) v1d7
0x20c: v20c = ISZERO v20a
0x20d: v20d(0x22a) = CONST 
0x210: JUMPI v20d(0x22a) v20c
----------------------------------

Begin block 0x211
prev = {'0x1fd'}, next = {'0x22a'}
----------------------------------
Block 0x211
0x213: v213 = SUB v206 v20a
0x215: v215 = MLOAD v213
0x216: v216(0x1) = CONST 
0x219: v219(0x20) = CONST 
0x21b: v21b = SUB v219(0x20) v20a
0x21c: v21c(0x100) = CONST 
0x21f: v21f = EXP v21c(0x100) v21b
0x220: v220 = SUB v21f v216(0x1)
0x221: v221 = NOT v220
0x222: v222 = AND v221 v215
0x224: MSTORE v213 v222
0x225: v225(0x20) = CONST 
0x227: v227 = ADD v225(0x20) v213
----------------------------------

Begin block 0x22a
prev = {'0x1fd', '0x211'}, next = {}
----------------------------------
Block 0x22a
0x22a_0x1: v22a_1 = PHI v206 v227
0x230: v230(0x40) = CONST 
0x232: v232 = MLOAD v230(0x40)
0x235: v235 = SUB v22a_1 v232
0x237: RETURN v232 v235
----------------------------------

Begin block 0x238
prev = {}, next = {'0x244', '0x240'}
----------------------------------
function setCustomDisputeFee(bytes32,uint256)()
Block 0x238
0x239: v239 = CALLVALUE 
0x23b: v23b = ISZERO v239
0x23c: v23c(0x244) = CONST 
0x23f: JUMPI v23c(0x244) v23b
----------------------------------

Begin block 0x240
prev = {'0x238'}, next = {}
----------------------------------
Block 0x240
0x240: v240(0x0) = CONST 
0x243: REVERT v240(0x0) v240(0x0)
----------------------------------

Begin block 0x244
prev = {'0x238'}, next = {'0x25b', '0x257'}
----------------------------------
Block 0x244
0x246: v246(0x27b) = CONST 
0x249: v249(0x4) = CONST 
0x24c: v24c = CALLDATASIZE 
0x24d: v24d = SUB v24c v249(0x4)
0x24e: v24e(0x40) = CONST 
0x251: v251 = LT v24d v24e(0x40)
0x252: v252 = ISZERO v251
0x253: v253(0x25b) = CONST 
0x256: JUMPI v253(0x25b) v252
----------------------------------

Begin block 0x257
prev = {'0x244'}, next = {}
----------------------------------
Block 0x257
0x257: v257(0x0) = CONST 
0x25a: REVERT v257(0x0) v257(0x0)
----------------------------------

Begin block 0x25b
prev = {'0x244'}, next = {'0x883'}
----------------------------------
Block 0x25b
0x25d: v25d = ADD v249(0x4) v24d
0x261: v261 = CALLDATALOAD v249(0x4)
0x263: v263(0x20) = CONST 
0x265: v265 = ADD v263(0x20) v249(0x4)
0x26b: v26b = CALLDATALOAD v265
0x26d: v26d(0x20) = CONST 
0x26f: v26f = ADD v26d(0x20) v265
0x277: v277(0x883) = CONST 
0x27a: JUMP v277(0x883)
----------------------------------

Begin block 0x27b
prev = {'0x8fd'}, next = {}
----------------------------------
Block 0x27b
0x27c: STOP 
----------------------------------

Begin block 0x27d
prev = {}, next = {'0x285', '0x289'}
----------------------------------
function setQuestionFee(uint256)()
Block 0x27d
0x27e: v27e = CALLVALUE 
0x280: v280 = ISZERO v27e
0x281: v281(0x289) = CONST 
0x284: JUMPI v281(0x289) v280
----------------------------------

Begin block 0x285
prev = {'0x27d'}, next = {}
----------------------------------
Block 0x285
0x285: v285(0x0) = CONST 
0x288: REVERT v285(0x0) v285(0x0)
----------------------------------

Begin block 0x289
prev = {'0x27d'}, next = {'0x2a0', '0x29c'}
----------------------------------
Block 0x289
0x28b: v28b(0x2b6) = CONST 
0x28e: v28e(0x4) = CONST 
0x291: v291 = CALLDATASIZE 
0x292: v292 = SUB v291 v28e(0x4)
0x293: v293(0x20) = CONST 
0x296: v296 = LT v292 v293(0x20)
0x297: v297 = ISZERO v296
0x298: v298(0x2a0) = CONST 
0x29b: JUMPI v298(0x2a0) v297
----------------------------------

Begin block 0x29c
prev = {'0x289'}, next = {}
----------------------------------
Block 0x29c
0x29c: v29c(0x0) = CONST 
0x29f: REVERT v29c(0x0) v29c(0x0)
----------------------------------

Begin block 0x2a0
prev = {'0x289'}, next = {'0x951'}
----------------------------------
Block 0x2a0
0x2a2: v2a2 = ADD v28e(0x4) v292
0x2a6: v2a6 = CALLDATALOAD v28e(0x4)
0x2a8: v2a8(0x20) = CONST 
0x2aa: v2aa = ADD v2a8(0x20) v28e(0x4)
0x2b2: v2b2(0x951) = CONST 
0x2b5: JUMP v2b2(0x951)
----------------------------------

Begin block 0x2b6
prev = {'0xa54'}, next = {}
----------------------------------
Block 0x2b6
0x2b7: STOP 
----------------------------------

Begin block 0x2b8
prev = {}, next = {'0x2c4', '0x2c0'}
----------------------------------
function withdraw(address)()
Block 0x2b8
0x2b9: v2b9 = CALLVALUE 
0x2bb: v2bb = ISZERO v2b9
0x2bc: v2bc(0x2c4) = CONST 
0x2bf: JUMPI v2bc(0x2c4) v2bb
----------------------------------

Begin block 0x2c0
prev = {'0x2b8'}, next = {}
----------------------------------
Block 0x2c0
0x2c0: v2c0(0x0) = CONST 
0x2c3: REVERT v2c0(0x0) v2c0(0x0)
----------------------------------

Begin block 0x2c4
prev = {'0x2b8'}, next = {'0x2db', '0x2d7'}
----------------------------------
Block 0x2c4
0x2c6: v2c6(0x307) = CONST 
0x2c9: v2c9(0x4) = CONST 
0x2cc: v2cc = CALLDATASIZE 
0x2cd: v2cd = SUB v2cc v2c9(0x4)
0x2ce: v2ce(0x20) = CONST 
0x2d1: v2d1 = LT v2cd v2ce(0x20)
0x2d2: v2d2 = ISZERO v2d1
0x2d3: v2d3(0x2db) = CONST 
0x2d6: JUMPI v2d3(0x2db) v2d2
----------------------------------

Begin block 0x2d7
prev = {'0x2c4'}, next = {}
----------------------------------
Block 0x2d7
0x2d7: v2d7(0x0) = CONST 
0x2da: REVERT v2d7(0x0) v2d7(0x0)
----------------------------------

Begin block 0x2db
prev = {'0x2c4'}, next = {'0xa92'}
----------------------------------
Block 0x2db
0x2dd: v2dd = ADD v2c9(0x4) v2cd
0x2e1: v2e1 = CALLDATALOAD v2c9(0x4)
0x2e2: v2e2(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x2f7: v2f7 = AND v2e2(0xffffffffffffffffffffffffffffffffffffffff) v2e1
0x2f9: v2f9(0x20) = CONST 
0x2fb: v2fb = ADD v2f9(0x20) v2c9(0x4)
0x303: v303(0xa92) = CONST 
0x306: JUMP v303(0xa92)
----------------------------------

Begin block 0x309
prev = {}, next = {'0x311', '0x315'}
----------------------------------
function renounceOwnership()()
Block 0x309
0x30a: v30a = CALLVALUE 
0x30c: v30c = ISZERO v30a
0x30d: v30d(0x315) = CONST 
0x310: JUMPI v30d(0x315) v30c
----------------------------------

Begin block 0x311
prev = {'0x309'}, next = {}
----------------------------------
Block 0x311
0x311: v311(0x0) = CONST 
0x314: REVERT v311(0x0) v311(0x0)
----------------------------------

Begin block 0x315
prev = {'0x309'}, next = {'0xb56'}
----------------------------------
Block 0x315
0x317: v317(0x31e) = CONST 
0x31a: v31a(0xb56) = CONST 
0x31d: JUMP v31a(0xb56)
----------------------------------

Begin block 0x31e
prev = {'0xbd0'}, next = {}
----------------------------------
Block 0x31e
0x31f: STOP 
----------------------------------

Begin block 0x320
prev = {}, next = {'0x328', '0x32c'}
----------------------------------
function setRealitio(address)()
Block 0x320
0x321: v321 = CALLVALUE 
0x323: v323 = ISZERO v321
0x324: v324(0x32c) = CONST 
0x327: JUMPI v324(0x32c) v323
----------------------------------

Begin block 0x328
prev = {'0x320'}, next = {}
----------------------------------
Block 0x328
0x328: v328(0x0) = CONST 
0x32b: REVERT v328(0x0) v328(0x0)
----------------------------------

Begin block 0x32c
prev = {'0x320'}, next = {'0x33f', '0x343'}
----------------------------------
Block 0x32c
0x32e: v32e(0x36f) = CONST 
0x331: v331(0x4) = CONST 
0x334: v334 = CALLDATASIZE 
0x335: v335 = SUB v334 v331(0x4)
0x336: v336(0x20) = CONST 
0x339: v339 = LT v335 v336(0x20)
0x33a: v33a = ISZERO v339
0x33b: v33b(0x343) = CONST 
0x33e: JUMPI v33b(0x343) v33a
----------------------------------

Begin block 0x33f
prev = {'0x32c'}, next = {}
----------------------------------
Block 0x33f
0x33f: v33f(0x0) = CONST 
0x342: REVERT v33f(0x0) v33f(0x0)
----------------------------------

Begin block 0x343
prev = {'0x32c'}, next = {'0xc8f'}
----------------------------------
Block 0x343
0x345: v345 = ADD v331(0x4) v335
0x349: v349 = CALLDATALOAD v331(0x4)
0x34a: v34a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x35f: v35f = AND v34a(0xffffffffffffffffffffffffffffffffffffffff) v349
0x361: v361(0x20) = CONST 
0x363: v363 = ADD v361(0x20) v331(0x4)
0x36b: v36b(0xc8f) = CONST 
0x36e: JUMP v36b(0xc8f)
----------------------------------

Begin block 0x36f
prev = {'0xd09'}, next = {}
----------------------------------
Block 0x36f
0x370: STOP 
----------------------------------

Begin block 0x371
prev = {}, next = {'0x379', '0x37d'}
----------------------------------
function owner()()
Block 0x371
0x372: v372 = CALLVALUE 
0x374: v374 = ISZERO v372
0x375: v375(0x37d) = CONST 
0x378: JUMPI v375(0x37d) v374
----------------------------------

Begin block 0x379
prev = {'0x371'}, next = {}
----------------------------------
Block 0x379
0x379: v379(0x0) = CONST 
0x37c: REVERT v379(0x0) v379(0x0)
----------------------------------

Begin block 0x37d
prev = {'0x371'}, next = {'0xdb0'}
----------------------------------
Block 0x37d
0x37f: v37f(0x386) = CONST 
0x382: v382(0xdb0) = CONST 
0x385: JUMP v382(0xdb0)
----------------------------------

Begin block 0x386
prev = {'0xdb0'}, next = {}
----------------------------------
Block 0x386
0x387: v387(0x40) = CONST 
0x389: v389 = MLOAD v387(0x40)
0x38c: v38c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x3a1: v3a1 = AND v38c(0xffffffffffffffffffffffffffffffffffffffff) vdd4
0x3a2: v3a2(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x3b7: v3b7 = AND v3a2(0xffffffffffffffffffffffffffffffffffffffff) v3a1
0x3b9: MSTORE v389 v3b7
0x3ba: v3ba(0x20) = CONST 
0x3bc: v3bc = ADD v3ba(0x20) v389
0x3c0: v3c0(0x40) = CONST 
0x3c2: v3c2 = MLOAD v3c0(0x40)
0x3c5: v3c5 = SUB v3bc v3c2
0x3c7: RETURN v3c2 v3c5
----------------------------------

Begin block 0x3c8
prev = {}, next = {'0x3d0', '0x3d4'}
----------------------------------
function isOwner()()
Block 0x3c8
0x3c9: v3c9 = CALLVALUE 
0x3cb: v3cb = ISZERO v3c9
0x3cc: v3cc(0x3d4) = CONST 
0x3cf: JUMPI v3cc(0x3d4) v3cb
----------------------------------

Begin block 0x3d0
prev = {'0x3c8'}, next = {}
----------------------------------
Block 0x3d0
0x3d0: v3d0(0x0) = CONST 
0x3d3: REVERT v3d0(0x0) v3d0(0x0)
----------------------------------

Begin block 0x3d4
prev = {'0x3c8'}, next = {'0x3dd'}
----------------------------------
Block 0x3d4
0x3d6: v3d6(0x3dd) = CONST 
0x3d9: v3d9(0xdd9) = CONST 
0x3dc: v3dc_0 = CALLPRIVATE v3d9(0xdd9) v3d6(0x3dd)
----------------------------------

Begin block 0x3dd
prev = {'0x3d4'}, next = {}
----------------------------------
Block 0x3dd
0x3de: v3de(0x40) = CONST 
0x3e0: v3e0 = MLOAD v3de(0x40)
0x3e3: v3e3 = ISZERO v3dc_0
0x3e4: v3e4 = ISZERO v3e3
0x3e5: v3e5 = ISZERO v3e4
0x3e6: v3e6 = ISZERO v3e5
0x3e8: MSTORE v3e0 v3e6
0x3e9: v3e9(0x20) = CONST 
0x3eb: v3eb = ADD v3e9(0x20) v3e0
0x3ef: v3ef(0x40) = CONST 
0x3f1: v3f1 = MLOAD v3ef(0x40)
0x3f4: v3f4 = SUB v3eb v3f1
0x3f6: RETURN v3f1 v3f4
----------------------------------

Begin block 0x3f7
prev = {}, next = {'0x3ff', '0x403'}
----------------------------------
function withdrawERC20(address,address)()
Block 0x3f7
0x3f8: v3f8 = CALLVALUE 
0x3fa: v3fa = ISZERO v3f8
0x3fb: v3fb(0x403) = CONST 
0x3fe: JUMPI v3fb(0x403) v3fa
----------------------------------

Begin block 0x3ff
prev = {'0x3f7'}, next = {}
----------------------------------
Block 0x3ff
0x3ff: v3ff(0x0) = CONST 
0x402: REVERT v3ff(0x0) v3ff(0x0)
----------------------------------

Begin block 0x403
prev = {'0x3f7'}, next = {'0x416', '0x41a'}
----------------------------------
Block 0x403
0x405: v405(0x466) = CONST 
0x408: v408(0x4) = CONST 
0x40b: v40b = CALLDATASIZE 
0x40c: v40c = SUB v40b v408(0x4)
0x40d: v40d(0x40) = CONST 
0x410: v410 = LT v40c v40d(0x40)
0x411: v411 = ISZERO v410
0x412: v412(0x41a) = CONST 
0x415: JUMPI v412(0x41a) v411
----------------------------------

Begin block 0x416
prev = {'0x403'}, next = {}
----------------------------------
Block 0x416
0x416: v416(0x0) = CONST 
0x419: REVERT v416(0x0) v416(0x0)
----------------------------------

Begin block 0x41a
prev = {'0x403'}, next = {'0xe37'}
----------------------------------
Block 0x41a
0x41c: v41c = ADD v408(0x4) v40c
0x420: v420 = CALLDATALOAD v408(0x4)
0x421: v421(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x436: v436 = AND v421(0xffffffffffffffffffffffffffffffffffffffff) v420
0x438: v438(0x20) = CONST 
0x43a: v43a = ADD v438(0x20) v408(0x4)
0x440: v440 = CALLDATALOAD v43a
0x441: v441(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x456: v456 = AND v441(0xffffffffffffffffffffffffffffffffffffffff) v440
0x458: v458(0x20) = CONST 
0x45a: v45a = ADD v458(0x20) v43a
0x462: v462(0xe37) = CONST 
0x465: JUMP v462(0xe37)
----------------------------------

Begin block 0x466
prev = {'0x109c'}, next = {}
----------------------------------
Block 0x466
0x467: STOP 
----------------------------------

Begin block 0x468
prev = {}, next = {'0x474', '0x470'}
----------------------------------
function arbitration_bounties(bytes32)()
Block 0x468
0x469: v469 = CALLVALUE 
0x46b: v46b = ISZERO v469
0x46c: v46c(0x474) = CONST 
0x46f: JUMPI v46c(0x474) v46b
----------------------------------

Begin block 0x470
prev = {'0x468'}, next = {}
----------------------------------
Block 0x470
0x470: v470(0x0) = CONST 
0x473: REVERT v470(0x0) v470(0x0)
----------------------------------

Begin block 0x474
prev = {'0x468'}, next = {'0x487', '0x48b'}
----------------------------------
Block 0x474
0x476: v476(0x4a1) = CONST 
0x479: v479(0x4) = CONST 
0x47c: v47c = CALLDATASIZE 
0x47d: v47d = SUB v47c v479(0x4)
0x47e: v47e(0x20) = CONST 
0x481: v481 = LT v47d v47e(0x20)
0x482: v482 = ISZERO v481
0x483: v483(0x48b) = CONST 
0x486: JUMPI v483(0x48b) v482
----------------------------------

Begin block 0x487
prev = {'0x474'}, next = {}
----------------------------------
Block 0x487
0x487: v487(0x0) = CONST 
0x48a: REVERT v487(0x0) v487(0x0)
----------------------------------

Begin block 0x48b
prev = {'0x474'}, next = {'0x10a0'}
----------------------------------
Block 0x48b
0x48d: v48d = ADD v479(0x4) v47d
0x491: v491 = CALLDATALOAD v479(0x4)
0x493: v493(0x20) = CONST 
0x495: v495 = ADD v493(0x20) v479(0x4)
0x49d: v49d(0x10a0) = CONST 
0x4a0: JUMP v49d(0x10a0)
----------------------------------

Begin block 0x4a1
prev = {'0x10a0'}, next = {}
----------------------------------
Block 0x4a1
0x4a2: v4a2(0x40) = CONST 
0x4a4: v4a4 = MLOAD v4a2(0x40)
0x4a8: MSTORE v4a4 v10b5
0x4a9: v4a9(0x20) = CONST 
0x4ab: v4ab = ADD v4a9(0x20) v4a4
0x4af: v4af(0x40) = CONST 
0x4b1: v4b1 = MLOAD v4af(0x40)
0x4b4: v4b4 = SUB v4ab v4b1
0x4b6: RETURN v4b1 v4b4
----------------------------------

Begin block 0x4b7
prev = {}, next = {'0x4bf', '0x4c3'}
----------------------------------
function getDisputeFee(bytes32)()
Block 0x4b7
0x4b8: v4b8 = CALLVALUE 
0x4ba: v4ba = ISZERO v4b8
0x4bb: v4bb(0x4c3) = CONST 
0x4be: JUMPI v4bb(0x4c3) v4ba
----------------------------------

Begin block 0x4bf
prev = {'0x4b7'}, next = {}
----------------------------------
Block 0x4bf
0x4bf: v4bf(0x0) = CONST 
0x4c2: REVERT v4bf(0x0) v4bf(0x0)
----------------------------------

Begin block 0x4c3
prev = {'0x4b7'}, next = {'0x4d6', '0x4da'}
----------------------------------
Block 0x4c3
0x4c5: v4c5(0x4f0) = CONST 
0x4c8: v4c8(0x4) = CONST 
0x4cb: v4cb = CALLDATASIZE 
0x4cc: v4cc = SUB v4cb v4c8(0x4)
0x4cd: v4cd(0x20) = CONST 
0x4d0: v4d0 = LT v4cc v4cd(0x20)
0x4d1: v4d1 = ISZERO v4d0
0x4d2: v4d2(0x4da) = CONST 
0x4d5: JUMPI v4d2(0x4da) v4d1
----------------------------------

Begin block 0x4d6
prev = {'0x4c3'}, next = {}
----------------------------------
Block 0x4d6
0x4d6: v4d6(0x0) = CONST 
0x4d9: REVERT v4d6(0x0) v4d6(0x0)
----------------------------------

Begin block 0x4da
prev = {'0x4c3'}, next = {'0x10b80x4b7'}
----------------------------------
Block 0x4da
0x4dc: v4dc = ADD v4c8(0x4) v4cc
0x4e0: v4e0 = CALLDATALOAD v4c8(0x4)
0x4e2: v4e2(0x20) = CONST 
0x4e4: v4e4 = ADD v4e2(0x20) v4c8(0x4)
0x4ec: v4ec(0x10b8) = CONST 
0x4ef: JUMP v4ec(0x10b8)
----------------------------------

Begin block 0x4f0
prev = {'0x10f10x4b7'}, next = {}
----------------------------------
Block 0x4f0
0x4f0_0x0: v4f0_0 = PHI v4b710f0 v4b710d7
0x4f1: v4f1(0x40) = CONST 
0x4f3: v4f3 = MLOAD v4f1(0x40)
0x4f7: MSTORE v4f3 v4f0_0
0x4f8: v4f8(0x20) = CONST 
0x4fa: v4fa = ADD v4f8(0x20) v4f3
0x4fe: v4fe(0x40) = CONST 
0x500: v500 = MLOAD v4fe(0x40)
0x503: v503 = SUB v4fa v500
0x505: RETURN v500 v503
----------------------------------

Begin block 0x506
prev = {}, next = {'0x518', '0x51c'}
----------------------------------
function requestArbitration(bytes32,uint256)()
Block 0x506
0x507: v507(0x53c) = CONST 
0x50a: v50a(0x4) = CONST 
0x50d: v50d = CALLDATASIZE 
0x50e: v50e = SUB v50d v50a(0x4)
0x50f: v50f(0x40) = CONST 
0x512: v512 = LT v50e v50f(0x40)
0x513: v513 = ISZERO v512
0x514: v514(0x51c) = CONST 
0x517: JUMPI v514(0x51c) v513
----------------------------------

Begin block 0x518
prev = {'0x506'}, next = {}
----------------------------------
Block 0x518
0x518: v518(0x0) = CONST 
0x51b: REVERT v518(0x0) v518(0x0)
----------------------------------

Begin block 0x51c
prev = {'0x506'}, next = {'0x10f8'}
----------------------------------
Block 0x51c
0x51e: v51e = ADD v50a(0x4) v50e
0x522: v522 = CALLDATALOAD v50a(0x4)
0x524: v524(0x20) = CONST 
0x526: v526 = ADD v524(0x20) v50a(0x4)
0x52c: v52c = CALLDATALOAD v526
0x52e: v52e(0x20) = CONST 
0x530: v530 = ADD v52e(0x20) v526
0x538: v538(0x10f8) = CONST 
0x53b: JUMP v538(0x10f8)
----------------------------------

Begin block 0x53c
prev = {'0x1469'}, next = {}
----------------------------------
Block 0x53c
0x53c_0x0: v53c_0 = PHI v12de(0x1) v1463(0x0)
0x53d: v53d(0x40) = CONST 
0x53f: v53f = MLOAD v53d(0x40)
0x542: v542 = ISZERO v53c_0
0x543: v543 = ISZERO v542
0x544: v544 = ISZERO v543
0x545: v545 = ISZERO v544
0x547: MSTORE v53f v545
0x548: v548(0x20) = CONST 
0x54a: v54a = ADD v548(0x20) v53f
0x54e: v54e(0x40) = CONST 
0x550: v550 = MLOAD v54e(0x40)
0x553: v553 = SUB v54a v550
0x555: RETURN v550 v553
----------------------------------

Begin block 0x556
prev = {}, next = {'0x55e', '0x562'}
----------------------------------
function realitio()()
Block 0x556
0x557: v557 = CALLVALUE 
0x559: v559 = ISZERO v557
0x55a: v55a(0x562) = CONST 
0x55d: JUMPI v55a(0x562) v559
----------------------------------

Begin block 0x55e
prev = {'0x556'}, next = {}
----------------------------------
Block 0x55e
0x55e: v55e(0x0) = CONST 
0x561: REVERT v55e(0x0) v55e(0x0)
----------------------------------

Begin block 0x562
prev = {'0x556'}, next = {'0x146f'}
----------------------------------
Block 0x562
0x564: v564(0x56b) = CONST 
0x567: v567(0x146f) = CONST 
0x56a: JUMP v567(0x146f)
----------------------------------

Begin block 0x56b
prev = {'0x146f'}, next = {}
----------------------------------
Block 0x56b
0x56c: v56c(0x40) = CONST 
0x56e: v56e = MLOAD v56c(0x40)
0x571: v571(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x586: v586 = AND v571(0xffffffffffffffffffffffffffffffffffffffff) v1492
0x587: v587(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x59c: v59c = AND v587(0xffffffffffffffffffffffffffffffffffffffff) v586
0x59e: MSTORE v56e v59c
0x59f: v59f(0x20) = CONST 
0x5a1: v5a1 = ADD v59f(0x20) v56e
0x5a5: v5a5(0x40) = CONST 
0x5a7: v5a7 = MLOAD v5a5(0x40)
0x5aa: v5aa = SUB v5a1 v5a7
0x5ac: RETURN v5a7 v5aa
----------------------------------

Begin block 0x5ad
prev = {}, next = {'0x5b9', '0x5b5'}
----------------------------------
function setMetaData(string)()
Block 0x5ad
0x5ae: v5ae = CALLVALUE 
0x5b0: v5b0 = ISZERO v5ae
0x5b1: v5b1(0x5b9) = CONST 
0x5b4: JUMPI v5b1(0x5b9) v5b0
----------------------------------

Begin block 0x5b5
prev = {'0x5ad'}, next = {}
----------------------------------
Block 0x5b5
0x5b5: v5b5(0x0) = CONST 
0x5b8: REVERT v5b5(0x0) v5b5(0x0)
----------------------------------

Begin block 0x5b9
prev = {'0x5ad'}, next = {'0x5cc', '0x5d0'}
----------------------------------
Block 0x5b9
0x5bb: v5bb(0x631) = CONST 
0x5be: v5be(0x4) = CONST 
0x5c1: v5c1 = CALLDATASIZE 
0x5c2: v5c2 = SUB v5c1 v5be(0x4)
0x5c3: v5c3(0x20) = CONST 
0x5c6: v5c6 = LT v5c2 v5c3(0x20)
0x5c7: v5c7 = ISZERO v5c6
0x5c8: v5c8(0x5d0) = CONST 
0x5cb: JUMPI v5c8(0x5d0) v5c7
----------------------------------

Begin block 0x5cc
prev = {'0x5b9'}, next = {}
----------------------------------
Block 0x5cc
0x5cc: v5cc(0x0) = CONST 
0x5cf: REVERT v5cc(0x0) v5cc(0x0)
----------------------------------

Begin block 0x5d0
prev = {'0x5b9'}, next = {'0x5ed', '0x5e9'}
----------------------------------
Block 0x5d0
0x5d2: v5d2 = ADD v5be(0x4) v5c2
0x5d6: v5d6 = CALLDATALOAD v5be(0x4)
0x5d8: v5d8(0x20) = CONST 
0x5da: v5da = ADD v5d8(0x20) v5be(0x4)
0x5dc: v5dc(0x100000000) = CONST 
0x5e3: v5e3 = GT v5d6 v5dc(0x100000000)
0x5e4: v5e4 = ISZERO v5e3
0x5e5: v5e5(0x5ed) = CONST 
0x5e8: JUMPI v5e5(0x5ed) v5e4
----------------------------------

Begin block 0x5e9
prev = {'0x5d0'}, next = {}
----------------------------------
Block 0x5e9
0x5e9: v5e9(0x0) = CONST 
0x5ec: REVERT v5e9(0x0) v5e9(0x0)
----------------------------------

Begin block 0x5ed
prev = {'0x5d0'}, next = {'0x5ff', '0x5fb'}
----------------------------------
Block 0x5ed
0x5ef: v5ef = ADD v5be(0x4) v5d6
0x5f1: v5f1(0x20) = CONST 
0x5f4: v5f4 = ADD v5ef v5f1(0x20)
0x5f5: v5f5 = GT v5f4 v5d2
0x5f6: v5f6 = ISZERO v5f5
0x5f7: v5f7(0x5ff) = CONST 
0x5fa: JUMPI v5f7(0x5ff) v5f6
----------------------------------

Begin block 0x5fb
prev = {'0x5ed'}, next = {}
----------------------------------
Block 0x5fb
0x5fb: v5fb(0x0) = CONST 
0x5fe: REVERT v5fb(0x0) v5fb(0x0)
----------------------------------

Begin block 0x5ff
prev = {'0x5ed'}, next = {'0x621', '0x61d'}
----------------------------------
Block 0x5ff
0x601: v601 = CALLDATALOAD v5ef
0x603: v603(0x20) = CONST 
0x605: v605 = ADD v603(0x20) v5ef
0x608: v608(0x1) = CONST 
0x60b: v60b = MUL v601 v608(0x1)
0x60d: v60d = ADD v605 v60b
0x60e: v60e = GT v60d v5d2
0x60f: v60f(0x100000000) = CONST 
0x616: v616 = GT v601 v60f(0x100000000)
0x617: v617 = OR v616 v60e
0x618: v618 = ISZERO v617
0x619: v619(0x621) = CONST 
0x61c: JUMPI v619(0x621) v618
----------------------------------

Begin block 0x61d
prev = {'0x5ff'}, next = {}
----------------------------------
Block 0x61d
0x61d: v61d(0x0) = CONST 
0x620: REVERT v61d(0x0) v61d(0x0)
----------------------------------

Begin block 0x621
prev = {'0x5ff'}, next = {'0x1495'}
----------------------------------
Block 0x621
0x62d: v62d(0x1495) = CONST 
0x630: JUMP v62d(0x1495)
----------------------------------

Begin block 0x631
prev = {'0x1520'}, next = {}
----------------------------------
Block 0x631
0x632: STOP 
----------------------------------

Begin block 0x633
prev = {}, next = {'0x63b', '0x63f'}
----------------------------------
function callWithdraw()()
Block 0x633
0x634: v634 = CALLVALUE 
0x636: v636 = ISZERO v634
0x637: v637(0x63f) = CONST 
0x63a: JUMPI v637(0x63f) v636
----------------------------------

Begin block 0x63b
prev = {'0x633'}, next = {}
----------------------------------
Block 0x63b
0x63b: v63b(0x0) = CONST 
0x63e: REVERT v63b(0x0) v63b(0x0)
----------------------------------

Begin block 0x63f
prev = {'0x633'}, next = {'0x1525'}
----------------------------------
Block 0x63f
0x641: v641(0x648) = CONST 
0x644: v644(0x1525) = CONST 
0x647: JUMP v644(0x1525)
----------------------------------

Begin block 0x648
prev = {'0x161d'}, next = {}
----------------------------------
Block 0x648
0x649: STOP 
----------------------------------

Begin block 0x64a
prev = {}, next = {'0x656', '0x652'}
----------------------------------
function transferOwnership(address)()
Block 0x64a
0x64b: v64b = CALLVALUE 
0x64d: v64d = ISZERO v64b
0x64e: v64e(0x656) = CONST 
0x651: JUMPI v64e(0x656) v64d
----------------------------------

Begin block 0x652
prev = {'0x64a'}, next = {}
----------------------------------
Block 0x652
0x652: v652(0x0) = CONST 
0x655: REVERT v652(0x0) v652(0x0)
----------------------------------

Begin block 0x656
prev = {'0x64a'}, next = {'0x66d', '0x669'}
----------------------------------
Block 0x656
0x658: v658(0x699) = CONST 
0x65b: v65b(0x4) = CONST 
0x65e: v65e = CALLDATASIZE 
0x65f: v65f = SUB v65e v65b(0x4)
0x660: v660(0x20) = CONST 
0x663: v663 = LT v65f v660(0x20)
0x664: v664 = ISZERO v663
0x665: v665(0x66d) = CONST 
0x668: JUMPI v665(0x66d) v664
----------------------------------

Begin block 0x669
prev = {'0x656'}, next = {}
----------------------------------
Block 0x669
0x669: v669(0x0) = CONST 
0x66c: REVERT v669(0x0) v669(0x0)
----------------------------------

Begin block 0x66d
prev = {'0x656'}, next = {'0x1623'}
----------------------------------
Block 0x66d
0x66f: v66f = ADD v65b(0x4) v65f
0x673: v673 = CALLDATALOAD v65b(0x4)
0x674: v674(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x689: v689 = AND v674(0xffffffffffffffffffffffffffffffffffffffff) v673
0x68b: v68b(0x20) = CONST 
0x68d: v68d = ADD v68b(0x20) v65b(0x4)
0x695: v695(0x1623) = CONST 
0x698: JUMP v695(0x1623)
----------------------------------

Begin block 0x699
prev = {'0x16a6'}, next = {}
----------------------------------
Block 0x699
0x69a: STOP 
----------------------------------

Begin block 0x69b
prev = {}, next = {'0x6a3', '0x6a7'}
----------------------------------
function submitAnswerByArbitrator(bytes32,bytes32,address)()
Block 0x69b
0x69c: v69c = CALLVALUE 
0x69e: v69e = ISZERO v69c
0x69f: v69f(0x6a7) = CONST 
0x6a2: JUMPI v69f(0x6a7) v69e
----------------------------------

Begin block 0x6a3
prev = {'0x69b'}, next = {}
----------------------------------
Block 0x6a3
0x6a3: v6a3(0x0) = CONST 
0x6a6: REVERT v6a3(0x0) v6a3(0x0)
----------------------------------

Begin block 0x6a7
prev = {'0x69b'}, next = {'0x6ba', '0x6be'}
----------------------------------
Block 0x6a7
0x6a9: v6a9(0x6fe) = CONST 
0x6ac: v6ac(0x4) = CONST 
0x6af: v6af = CALLDATASIZE 
0x6b0: v6b0 = SUB v6af v6ac(0x4)
0x6b1: v6b1(0x60) = CONST 
0x6b4: v6b4 = LT v6b0 v6b1(0x60)
0x6b5: v6b5 = ISZERO v6b4
0x6b6: v6b6(0x6be) = CONST 
0x6b9: JUMPI v6b6(0x6be) v6b5
----------------------------------

Begin block 0x6ba
prev = {'0x6a7'}, next = {}
----------------------------------
Block 0x6ba
0x6ba: v6ba(0x0) = CONST 
0x6bd: REVERT v6ba(0x0) v6ba(0x0)
----------------------------------

Begin block 0x6be
prev = {'0x6a7'}, next = {'0x16a9'}
----------------------------------
Block 0x6be
0x6c0: v6c0 = ADD v6ac(0x4) v6b0
0x6c4: v6c4 = CALLDATALOAD v6ac(0x4)
0x6c6: v6c6(0x20) = CONST 
0x6c8: v6c8 = ADD v6c6(0x20) v6ac(0x4)
0x6ce: v6ce = CALLDATALOAD v6c8
0x6d0: v6d0(0x20) = CONST 
0x6d2: v6d2 = ADD v6d0(0x20) v6c8
0x6d8: v6d8 = CALLDATALOAD v6d2
0x6d9: v6d9(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x6ee: v6ee = AND v6d9(0xffffffffffffffffffffffffffffffffffffffff) v6d8
0x6f0: v6f0(0x20) = CONST 
0x6f2: v6f2 = ADD v6f0(0x20) v6d2
0x6fa: v6fa(0x16a9) = CONST 
0x6fd: JUMP v6fa(0x16a9)
----------------------------------

Begin block 0x6fe
prev = {'0x17ff'}, next = {}
----------------------------------
Block 0x6fe
0x6ff: STOP 
----------------------------------

Begin block 0x700
prev = {'0x122'}, next = {'0x12b'}
----------------------------------
Block 0x700
0x701: v701(0x0) = CONST 
0x703: v703(0x1) = CONST 
0x705: v705(0x0) = CONST 
0x708: v708 = SLOAD v703(0x1)
0x70a: v70a(0x100) = CONST 
0x70d: v70d(0x1) = EXP v70a(0x100) v705(0x0)
0x70f: v70f = DIV v708 v70d(0x1)
0x710: v710(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x725: v725 = AND v710(0xffffffffffffffffffffffffffffffffffffffff) v70f
0x729: JUMP v124(0x12b)
----------------------------------

Begin block 0x72a
prev = {'0x190'}, next = {'0x732'}
----------------------------------
Block 0x72a
0x72b: v72b(0x732) = CONST 
0x72e: v72e(0xdd9) = CONST 
0x731: v731_0 = CALLPRIVATE v72e(0xdd9) v72b(0x732)
----------------------------------

Begin block 0x732
prev = {'0x72a'}, next = {'0x737', '0x7a4'}
----------------------------------
Block 0x732
0x733: v733(0x7a4) = CONST 
0x736: JUMPI v733(0x7a4) v731_0
----------------------------------

Begin block 0x737
prev = {'0x732'}, next = {}
----------------------------------
Block 0x737
0x737: v737(0x40) = CONST 
0x739: v739 = MLOAD v737(0x40)
0x73a: v73a(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x75c: MSTORE v739 v73a(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x75d: v75d(0x4) = CONST 
0x75f: v75f = ADD v75d(0x4) v739
0x762: v762(0x20) = CONST 
0x764: v764 = ADD v762(0x20) v75f
0x767: v767 = SUB v764 v75f
0x769: MSTORE v75f v767
0x76a: v76a(0x20) = CONST 
0x76d: MSTORE v764 v76a(0x20)
0x76e: v76e(0x20) = CONST 
0x770: v770 = ADD v76e(0x20) v764
0x772: v772(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x794: MSTORE v770 v772(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x796: v796(0x20) = CONST 
0x798: v798 = ADD v796(0x20) v770
0x79c: v79c(0x40) = CONST 
0x79e: v79e = MLOAD v79c(0x40)
0x7a1: v7a1 = SUB v798 v79e
0x7a3: REVERT v79e v7a1
----------------------------------

Begin block 0x7a4
prev = {'0x732'}, next = {'0x1a6'}
----------------------------------
Block 0x7a4
0x7a6: v7a6(0x3) = CONST 
0x7aa: SSTORE v7a6(0x3) v196
0x7ac: v7ac(0xbc1292d8ca346c1397b1176ce2935afd34c4365fece415b14e3a9242eae388f5) = CONST 
0x7ce: v7ce(0x40) = CONST 
0x7d0: v7d0 = MLOAD v7ce(0x40)
0x7d4: MSTORE v7d0 v196
0x7d5: v7d5(0x20) = CONST 
0x7d7: v7d7 = ADD v7d5(0x20) v7d0
0x7db: v7db(0x40) = CONST 
0x7dd: v7dd = MLOAD v7db(0x40)
0x7e0: v7e0 = SUB v7d7 v7dd
0x7e2: LOG1 v7dd v7e0 v7ac(0xbc1292d8ca346c1397b1176ce2935afd34c4365fece415b14e3a9242eae388f5)
0x7e4: JUMP v17b(0x1a6)
----------------------------------

Begin block 0x7e5
prev = {'0x1b4'}, next = {'0x87b', '0x835'}
----------------------------------
Block 0x7e5
0x7e6: v7e6(0x5) = CONST 
0x7e9: v7e9 = SLOAD v7e6(0x5)
0x7ea: v7ea(0x1) = CONST 
0x7ed: v7ed(0x1) = CONST 
0x7ef: v7ef = AND v7ed(0x1) v7e9
0x7f0: v7f0 = ISZERO v7ef
0x7f1: v7f1(0x100) = CONST 
0x7f4: v7f4 = MUL v7f1(0x100) v7f0
0x7f5: v7f5 = SUB v7f4 v7ea(0x1)
0x7f6: v7f6 = AND v7f5 v7e9
0x7f7: v7f7(0x2) = CONST 
0x7fa: v7fa = DIV v7f6 v7f7(0x2)
0x7fc: v7fc(0x1f) = CONST 
0x7fe: v7fe = ADD v7fc(0x1f) v7fa
0x7ff: v7ff(0x20) = CONST 
0x803: v803 = DIV v7fe v7ff(0x20)
0x804: v804 = MUL v803 v7ff(0x20)
0x805: v805(0x20) = CONST 
0x807: v807 = ADD v805(0x20) v804
0x808: v808(0x40) = CONST 
0x80a: v80a = MLOAD v808(0x40)
0x80d: v80d = ADD v80a v807
0x80e: v80e(0x40) = CONST 
0x810: MSTORE v80e(0x40) v80d
0x817: MSTORE v80a v7fa
0x818: v818(0x20) = CONST 
0x81a: v81a = ADD v818(0x20) v80a
0x81d: v81d = SLOAD v7e6(0x5)
0x81e: v81e(0x1) = CONST 
0x821: v821(0x1) = CONST 
0x823: v823 = AND v821(0x1) v81d
0x824: v824 = ISZERO v823
0x825: v825(0x100) = CONST 
0x828: v828 = MUL v825(0x100) v824
0x829: v829 = SUB v828 v81e(0x1)
0x82a: v82a = AND v829 v81d
0x82b: v82b(0x2) = CONST 
0x82e: v82e = DIV v82a v82b(0x2)
0x830: v830 = ISZERO v82e
0x831: v831(0x87b) = CONST 
0x834: JUMPI v831(0x87b) v830
----------------------------------

Begin block 0x835
prev = {'0x7e5'}, next = {'0x850', '0x83d'}
----------------------------------
Block 0x835
0x836: v836(0x1f) = CONST 
0x838: v838 = LT v836(0x1f) v82e
0x839: v839(0x850) = CONST 
0x83c: JUMPI v839(0x850) v838
----------------------------------

Begin block 0x83d
prev = {'0x835'}, next = {'0x87b'}
----------------------------------
Block 0x83d
0x83d: v83d(0x100) = CONST 
0x842: v842 = SLOAD v7e6(0x5)
0x843: v843 = DIV v842 v83d(0x100)
0x844: v844 = MUL v843 v83d(0x100)
0x846: MSTORE v81a v844
0x848: v848(0x20) = CONST 
0x84a: v84a = ADD v848(0x20) v81a
0x84c: v84c(0x87b) = CONST 
0x84f: JUMP v84c(0x87b)
----------------------------------

Begin block 0x850
prev = {'0x835'}, next = {'0x85e'}
----------------------------------
Block 0x850
0x852: v852 = ADD v81a v82e
0x855: v855(0x0) = CONST 
0x857: MSTORE v855(0x0) v7e6(0x5)
0x858: v858(0x20) = CONST 
0x85a: v85a(0x0) = CONST 
0x85c: v85c = SHA3 v85a(0x0) v858(0x20)
----------------------------------

Begin block 0x85e
prev = {'0x850', '0x85e'}, next = {'0x85e', '0x872'}
----------------------------------
Block 0x85e
0x85e_0x0: v85e_0 = PHI v81a v86a
0x85e_0x1: v85e_1 = PHI v85c v866
0x860: v860 = SLOAD v85e_1
0x862: MSTORE v85e_0 v860
0x864: v864(0x1) = CONST 
0x866: v866 = ADD v864(0x1) v85e_1
0x868: v868(0x20) = CONST 
0x86a: v86a = ADD v868(0x20) v85e_0
0x86d: v86d = GT v852 v86a
0x86e: v86e(0x85e) = CONST 
0x871: JUMPI v86e(0x85e) v86d
----------------------------------

Begin block 0x872
prev = {'0x85e'}, next = {'0x87b'}
----------------------------------
Block 0x872
0x874: v874 = SUB v86a v852
0x875: v875(0x1f) = CONST 
0x877: v877 = AND v875(0x1f) v874
0x879: v879 = ADD v852 v877
----------------------------------

Begin block 0x87b
prev = {'0x83d', '0x7e5', '0x872'}, next = {'0x1bd'}
----------------------------------
Block 0x87b
0x882: JUMP v1b6(0x1bd)
----------------------------------

Begin block 0x883
prev = {'0x25b'}, next = {'0x88b'}
----------------------------------
Block 0x883
0x884: v884(0x88b) = CONST 
0x887: v887(0xdd9) = CONST 
0x88a: v88a_0 = CALLPRIVATE v887(0xdd9) v884(0x88b)
----------------------------------

Begin block 0x88b
prev = {'0x883'}, next = {'0x890', '0x8fd'}
----------------------------------
Block 0x88b
0x88c: v88c(0x8fd) = CONST 
0x88f: JUMPI v88c(0x8fd) v88a_0
----------------------------------

Begin block 0x890
prev = {'0x88b'}, next = {}
----------------------------------
Block 0x890
0x890: v890(0x40) = CONST 
0x892: v892 = MLOAD v890(0x40)
0x893: v893(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x8b5: MSTORE v892 v893(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x8b6: v8b6(0x4) = CONST 
0x8b8: v8b8 = ADD v8b6(0x4) v892
0x8bb: v8bb(0x20) = CONST 
0x8bd: v8bd = ADD v8bb(0x20) v8b8
0x8c0: v8c0 = SUB v8bd v8b8
0x8c2: MSTORE v8b8 v8c0
0x8c3: v8c3(0x20) = CONST 
0x8c6: MSTORE v8bd v8c3(0x20)
0x8c7: v8c7(0x20) = CONST 
0x8c9: v8c9 = ADD v8c7(0x20) v8bd
0x8cb: v8cb(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x8ed: MSTORE v8c9 v8cb(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x8ef: v8ef(0x20) = CONST 
0x8f1: v8f1 = ADD v8ef(0x20) v8c9
0x8f5: v8f5(0x40) = CONST 
0x8f7: v8f7 = MLOAD v8f5(0x40)
0x8fa: v8fa = SUB v8f1 v8f7
0x8fc: REVERT v8f7 v8fa
----------------------------------

Begin block 0x8fd
prev = {'0x88b'}, next = {'0x27b'}
----------------------------------
Block 0x8fd
0x8ff: v8ff(0x4) = CONST 
0x901: v901(0x0) = CONST 
0x905: MSTORE v901(0x0) v261
0x906: v906(0x20) = CONST 
0x908: v908(0x20) = ADD v906(0x20) v901(0x0)
0x90b: MSTORE v908(0x20) v8ff(0x4)
0x90c: v90c(0x20) = CONST 
0x90e: v90e(0x40) = ADD v90c(0x20) v908(0x20)
0x90f: v90f(0x0) = CONST 
0x911: v911 = SHA3 v90f(0x0) v90e(0x40)
0x914: SSTORE v911 v26b
0x917: v917(0xe4887440991624b147d2129ab0befa8c1df4cff87b22513c8eea7cb16ed2aaf2) = CONST 
0x939: v939(0x40) = CONST 
0x93b: v93b = MLOAD v939(0x40)
0x93f: MSTORE v93b v26b
0x940: v940(0x20) = CONST 
0x942: v942 = ADD v940(0x20) v93b
0x946: v946(0x40) = CONST 
0x948: v948 = MLOAD v946(0x40)
0x94b: v94b = SUB v942 v948
0x94d: LOG2 v948 v94b v917(0xe4887440991624b147d2129ab0befa8c1df4cff87b22513c8eea7cb16ed2aaf2) v261
0x950: JUMP v246(0x27b)
----------------------------------

Begin block 0x951
prev = {'0x2a0'}, next = {'0x959'}
----------------------------------
Block 0x951
0x952: v952(0x959) = CONST 
0x955: v955(0xdd9) = CONST 
0x958: v958_0 = CALLPRIVATE v955(0xdd9) v952(0x959)
----------------------------------

Begin block 0x959
prev = {'0x951'}, next = {'0x9cb', '0x95e'}
----------------------------------
Block 0x959
0x95a: v95a(0x9cb) = CONST 
0x95d: JUMPI v95a(0x9cb) v958_0
----------------------------------

Begin block 0x95e
prev = {'0x959'}, next = {}
----------------------------------
Block 0x95e
0x95e: v95e(0x40) = CONST 
0x960: v960 = MLOAD v95e(0x40)
0x961: v961(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x983: MSTORE v960 v961(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x984: v984(0x4) = CONST 
0x986: v986 = ADD v984(0x4) v960
0x989: v989(0x20) = CONST 
0x98b: v98b = ADD v989(0x20) v986
0x98e: v98e = SUB v98b v986
0x990: MSTORE v986 v98e
0x991: v991(0x20) = CONST 
0x994: MSTORE v98b v991(0x20)
0x995: v995(0x20) = CONST 
0x997: v997 = ADD v995(0x20) v98b
0x999: v999(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x9bb: MSTORE v997 v999(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x9bd: v9bd(0x20) = CONST 
0x9bf: v9bf = ADD v9bd(0x20) v997
0x9c3: v9c3(0x40) = CONST 
0x9c5: v9c5 = MLOAD v9c3(0x40)
0x9c8: v9c8 = SUB v9bf v9c5
0x9ca: REVERT v9c5 v9c8
----------------------------------

Begin block 0x9cb
prev = {'0x959'}, next = {'0xa40', '0xa3c'}
----------------------------------
Block 0x9cb
0x9cc: v9cc(0x1) = CONST 
0x9ce: v9ce(0x0) = CONST 
0x9d1: v9d1 = SLOAD v9cc(0x1)
0x9d3: v9d3(0x100) = CONST 
0x9d6: v9d6(0x1) = EXP v9d3(0x100) v9ce(0x0)
0x9d8: v9d8 = DIV v9d1 v9d6(0x1)
0x9d9: v9d9(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x9ee: v9ee = AND v9d9(0xffffffffffffffffffffffffffffffffffffffff) v9d8
0x9ef: v9ef(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xa04: va04 = AND v9ef(0xffffffffffffffffffffffffffffffffffffffff) v9ee
0xa05: va05(0x4df6ca2a) = CONST 
0xa0b: va0b(0x40) = CONST 
0xa0d: va0d = MLOAD va0b(0x40)
0xa0f: va0f(0xffffffff) = CONST 
0xa14: va14(0x4df6ca2a) = AND va0f(0xffffffff) va05(0x4df6ca2a)
0xa15: va15(0xe0) = CONST 
0xa17: va17(0x4df6ca2a00000000000000000000000000000000000000000000000000000000) = SHL va15(0xe0) va14(0x4df6ca2a)
0xa19: MSTORE va0d va17(0x4df6ca2a00000000000000000000000000000000000000000000000000000000)
0xa1a: va1a(0x4) = CONST 
0xa1c: va1c = ADD va1a(0x4) va0d
0xa20: MSTORE va1c v2a6
0xa21: va21(0x20) = CONST 
0xa23: va23 = ADD va21(0x20) va1c
0xa27: va27(0x0) = CONST 
0xa29: va29(0x40) = CONST 
0xa2b: va2b = MLOAD va29(0x40)
0xa2e: va2e = SUB va23 va2b
0xa30: va30(0x0) = CONST 
0xa34: va34 = EXTCODESIZE va04
0xa35: va35 = ISZERO va34
0xa37: va37 = ISZERO va35
0xa38: va38(0xa40) = CONST 
0xa3b: JUMPI va38(0xa40) va37
----------------------------------

Begin block 0xa3c
prev = {'0x9cb'}, next = {}
----------------------------------
Block 0xa3c
0xa3c: va3c(0x0) = CONST 
0xa3f: REVERT va3c(0x0) va3c(0x0)
----------------------------------

Begin block 0xa40
prev = {'0x9cb'}, next = {'0xa4b', '0xa54'}
----------------------------------
Block 0xa40
0xa42: va42 = GAS 
0xa43: va43 = CALL va42 va04 va30(0x0) va2b va2e va2b va27(0x0)
0xa44: va44 = ISZERO va43
0xa46: va46 = ISZERO va44
0xa47: va47(0xa54) = CONST 
0xa4a: JUMPI va47(0xa54) va46
----------------------------------

Begin block 0xa4b
prev = {'0xa40'}, next = {}
----------------------------------
Block 0xa4b
0xa4b: va4b = RETURNDATASIZE 
0xa4c: va4c(0x0) = CONST 
0xa4f: RETURNDATACOPY va4c(0x0) va4c(0x0) va4b
0xa50: va50 = RETURNDATASIZE 
0xa51: va51(0x0) = CONST 
0xa53: REVERT va51(0x0) va50
----------------------------------

Begin block 0xa54
prev = {'0xa40'}, next = {'0x2b6'}
----------------------------------
Block 0xa54
0xa59: va59(0x173ec7037500587e8ac3402cac8426c5c2bac605eabd93f790422e621633d711) = CONST 
0xa7b: va7b(0x40) = CONST 
0xa7d: va7d = MLOAD va7b(0x40)
0xa81: MSTORE va7d v2a6
0xa82: va82(0x20) = CONST 
0xa84: va84 = ADD va82(0x20) va7d
0xa88: va88(0x40) = CONST 
0xa8a: va8a = MLOAD va88(0x40)
0xa8d: va8d = SUB va84 va8a
0xa8f: LOG1 va8a va8d va59(0x173ec7037500587e8ac3402cac8426c5c2bac605eabd93f790422e621633d711)
0xa91: JUMP v28b(0x2b6)
----------------------------------

Begin block 0xa92
prev = {'0x2db'}, next = {'0xa9a'}
----------------------------------
Block 0xa92
0xa93: va93(0xa9a) = CONST 
0xa96: va96(0xdd9) = CONST 
0xa99: va99_0 = CALLPRIVATE va96(0xdd9) va93(0xa9a)
----------------------------------

Begin block 0xa9a
prev = {'0xa92'}, next = {'0xa9f', '0xb0c'}
----------------------------------
Block 0xa9a
0xa9b: va9b(0xb0c) = CONST 
0xa9e: JUMPI va9b(0xb0c) va99_0
----------------------------------

Begin block 0xa9f
prev = {'0xa9a'}, next = {}
----------------------------------
Block 0xa9f
0xa9f: va9f(0x40) = CONST 
0xaa1: vaa1 = MLOAD va9f(0x40)
0xaa2: vaa2(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xac4: MSTORE vaa1 vaa2(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xac5: vac5(0x4) = CONST 
0xac7: vac7 = ADD vac5(0x4) vaa1
0xaca: vaca(0x20) = CONST 
0xacc: vacc = ADD vaca(0x20) vac7
0xacf: vacf = SUB vacc vac7
0xad1: MSTORE vac7 vacf
0xad2: vad2(0x20) = CONST 
0xad5: MSTORE vacc vad2(0x20)
0xad6: vad6(0x20) = CONST 
0xad8: vad8 = ADD vad6(0x20) vacc
0xada: vada(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0xafc: MSTORE vad8 vada(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xafe: vafe(0x20) = CONST 
0xb00: vb00 = ADD vafe(0x20) vad8
0xb04: vb04(0x40) = CONST 
0xb06: vb06 = MLOAD vb04(0x40)
0xb09: vb09 = SUB vb00 vb06
0xb0b: REVERT vb06 vb09
----------------------------------

Begin block 0xb0c
prev = {'0xa9a'}, next = {}
----------------------------------
Block 0xb0c
0xb0e: vb0e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xb23: vb23 = AND vb0e(0xffffffffffffffffffffffffffffffffffffffff)
0xb24: vb24(0x8fc) = CONST 
0xb27: MISSING 
----------------------------------

Begin block 0xb56
prev = {'0x315'}, next = {'0xb5e'}
----------------------------------
Block 0xb56
0xb57: vb57(0xb5e) = CONST 
0xb5a: vb5a(0xdd9) = CONST 
0xb5d: vb5d_0 = CALLPRIVATE vb5a(0xdd9) vb57(0xb5e)
----------------------------------

Begin block 0xb5e
prev = {'0xb56'}, next = {'0xbd0', '0xb63'}
----------------------------------
Block 0xb5e
0xb5f: vb5f(0xbd0) = CONST 
0xb62: JUMPI vb5f(0xbd0) vb5d_0
----------------------------------

Begin block 0xb63
prev = {'0xb5e'}, next = {}
----------------------------------
Block 0xb63
0xb63: vb63(0x40) = CONST 
0xb65: vb65 = MLOAD vb63(0x40)
0xb66: vb66(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xb88: MSTORE vb65 vb66(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xb89: vb89(0x4) = CONST 
0xb8b: vb8b = ADD vb89(0x4) vb65
0xb8e: vb8e(0x20) = CONST 
0xb90: vb90 = ADD vb8e(0x20) vb8b
0xb93: vb93 = SUB vb90 vb8b
0xb95: MSTORE vb8b vb93
0xb96: vb96(0x20) = CONST 
0xb99: MSTORE vb90 vb96(0x20)
0xb9a: vb9a(0x20) = CONST 
0xb9c: vb9c = ADD vb9a(0x20) vb90
0xb9e: vb9e(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0xbc0: MSTORE vb9c vb9e(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xbc2: vbc2(0x20) = CONST 
0xbc4: vbc4 = ADD vbc2(0x20) vb9c
0xbc8: vbc8(0x40) = CONST 
0xbca: vbca = MLOAD vbc8(0x40)
0xbcd: vbcd = SUB vbc4 vbca
0xbcf: REVERT vbca vbcd
----------------------------------

Begin block 0xbd0
prev = {'0xb5e'}, next = {'0x31e'}
----------------------------------
Block 0xbd0
0xbd1: vbd1(0x0) = CONST 
0xbd3: vbd3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xbe8: vbe8(0x0) = AND vbd3(0xffffffffffffffffffffffffffffffffffffffff) vbd1(0x0)
0xbe9: vbe9(0x0) = CONST 
0xbed: vbed = SLOAD vbe9(0x0)
0xbef: vbef(0x100) = CONST 
0xbf2: vbf2(0x1) = EXP vbef(0x100) vbe9(0x0)
0xbf4: vbf4 = DIV vbed vbf2(0x1)
0xbf5: vbf5(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xc0a: vc0a = AND vbf5(0xffffffffffffffffffffffffffffffffffffffff) vbf4
0xc0b: vc0b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xc20: vc20 = AND vc0b(0xffffffffffffffffffffffffffffffffffffffff) vc0a
0xc21: vc21(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0xc42: vc42(0x40) = CONST 
0xc44: vc44 = MLOAD vc42(0x40)
0xc45: vc45(0x40) = CONST 
0xc47: vc47 = MLOAD vc45(0x40)
0xc4a: vc4a = SUB vc44 vc47
0xc4c: LOG3 vc47 vc4a vc21(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) vc20 vbe8(0x0)
0xc4d: vc4d(0x0) = CONST 
0xc50: vc50(0x0) = CONST 
0xc52: vc52(0x100) = CONST 
0xc55: vc55(0x1) = EXP vc52(0x100) vc50(0x0)
0xc57: vc57 = SLOAD vc4d(0x0)
0xc59: vc59(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xc6e: vc6e(0xffffffffffffffffffffffffffffffffffffffff) = MUL vc59(0xffffffffffffffffffffffffffffffffffffffff) vc55(0x1)
0xc6f: vc6f(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vc6e(0xffffffffffffffffffffffffffffffffffffffff)
0xc70: vc70 = AND vc6f(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) vc57
0xc73: vc73(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xc88: vc88(0x0) = AND vc73(0xffffffffffffffffffffffffffffffffffffffff) vc4d(0x0)
0xc89: vc89(0x0) = MUL vc88(0x0) vc55(0x1)
0xc8a: vc8a = OR vc89(0x0) vc70
0xc8c: SSTORE vc4d(0x0) vc8a
0xc8e: JUMP v317(0x31e)
----------------------------------

Begin block 0xc8f
prev = {'0x343'}, next = {'0xc97'}
----------------------------------
Block 0xc8f
0xc90: vc90(0xc97) = CONST 
0xc93: vc93(0xdd9) = CONST 
0xc96: vc96_0 = CALLPRIVATE vc93(0xdd9) vc90(0xc97)
----------------------------------

Begin block 0xc97
prev = {'0xc8f'}, next = {'0xd09', '0xc9c'}
----------------------------------
Block 0xc97
0xc98: vc98(0xd09) = CONST 
0xc9b: JUMPI vc98(0xd09) vc96_0
----------------------------------

Begin block 0xc9c
prev = {'0xc97'}, next = {}
----------------------------------
Block 0xc9c
0xc9c: vc9c(0x40) = CONST 
0xc9e: vc9e = MLOAD vc9c(0x40)
0xc9f: vc9f(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xcc1: MSTORE vc9e vc9f(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xcc2: vcc2(0x4) = CONST 
0xcc4: vcc4 = ADD vcc2(0x4) vc9e
0xcc7: vcc7(0x20) = CONST 
0xcc9: vcc9 = ADD vcc7(0x20) vcc4
0xccc: vccc = SUB vcc9 vcc4
0xcce: MSTORE vcc4 vccc
0xccf: vccf(0x20) = CONST 
0xcd2: MSTORE vcc9 vccf(0x20)
0xcd3: vcd3(0x20) = CONST 
0xcd5: vcd5 = ADD vcd3(0x20) vcc9
0xcd7: vcd7(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0xcf9: MSTORE vcd5 vcd7(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xcfb: vcfb(0x20) = CONST 
0xcfd: vcfd = ADD vcfb(0x20) vcd5
0xd01: vd01(0x40) = CONST 
0xd03: vd03 = MLOAD vd01(0x40)
0xd06: vd06 = SUB vcfd vd03
0xd08: REVERT vd03 vd06
----------------------------------

Begin block 0xd09
prev = {'0xc97'}, next = {'0x36f'}
----------------------------------
Block 0xd09
0xd0b: vd0b(0x1) = CONST 
0xd0d: vd0d(0x0) = CONST 
0xd0f: vd0f(0x100) = CONST 
0xd12: vd12(0x1) = EXP vd0f(0x100) vd0d(0x0)
0xd14: vd14 = SLOAD vd0b(0x1)
0xd16: vd16(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xd2b: vd2b(0xffffffffffffffffffffffffffffffffffffffff) = MUL vd16(0xffffffffffffffffffffffffffffffffffffffff) vd12(0x1)
0xd2c: vd2c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT vd2b(0xffffffffffffffffffffffffffffffffffffffff)
0xd2d: vd2d = AND vd2c(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) vd14
0xd30: vd30(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xd45: vd45 = AND vd30(0xffffffffffffffffffffffffffffffffffffffff) v35f
0xd46: vd46 = MUL vd45 vd12(0x1)
0xd47: vd47 = OR vd46 vd2d
0xd49: SSTORE vd0b(0x1) vd47
0xd4b: vd4b(0x568b4ce4fc4d09c939362effe33053025b93088cab521fc476f469966c7efdd5) = CONST 
0xd6d: vd6d(0x40) = CONST 
0xd6f: vd6f = MLOAD vd6d(0x40)
0xd72: vd72(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xd87: vd87 = AND vd72(0xffffffffffffffffffffffffffffffffffffffff) v35f
0xd88: vd88(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xd9d: vd9d = AND vd88(0xffffffffffffffffffffffffffffffffffffffff) vd87
0xd9f: MSTORE vd6f vd9d
0xda0: vda0(0x20) = CONST 
0xda2: vda2 = ADD vda0(0x20) vd6f
0xda6: vda6(0x40) = CONST 
0xda8: vda8 = MLOAD vda6(0x40)
0xdab: vdab = SUB vda2 vda8
0xdad: LOG1 vda8 vdab vd4b(0x568b4ce4fc4d09c939362effe33053025b93088cab521fc476f469966c7efdd5)
0xdaf: JUMP v32e(0x36f)
----------------------------------

Begin block 0xdb0
prev = {'0x37d'}, next = {'0x386'}
----------------------------------
Block 0xdb0
0xdb1: vdb1(0x0) = CONST 
0xdb4: vdb4(0x0) = CONST 
0xdb7: vdb7 = SLOAD vdb1(0x0)
0xdb9: vdb9(0x100) = CONST 
0xdbc: vdbc(0x1) = EXP vdb9(0x100) vdb4(0x0)
0xdbe: vdbe = DIV vdb7 vdbc(0x1)
0xdbf: vdbf(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xdd4: vdd4 = AND vdbf(0xffffffffffffffffffffffffffffffffffffffff) vdbe
0xdd8: JUMP v37f(0x386)
----------------------------------

Begin block 0xdd9
prev = {}, next = {'0x1808'}
----------------------------------
function 0xdd9(vdd9arg0)
Block 0xdd9
0xdda: vdda(0x0) = CONST 
0xddd: vddd(0x0) = CONST 
0xde0: vde0 = SLOAD vdda(0x0)
0xde2: vde2(0x100) = CONST 
0xde5: vde5(0x1) = EXP vde2(0x100) vddd(0x0)
0xde7: vde7 = DIV vde0 vde5(0x1)
0xde8: vde8(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xdfd: vdfd = AND vde8(0xffffffffffffffffffffffffffffffffffffffff) vde7
0xdfe: vdfe(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xe13: ve13 = AND vdfe(0xffffffffffffffffffffffffffffffffffffffff) vdfd
0xe14: ve14(0xe1b) = CONST 
0xe17: ve17(0x1808) = CONST 
0xe1a: JUMP ve17(0x1808)
----------------------------------

Begin block 0xe1b
prev = {'0x1808'}, next = {}
----------------------------------
Block 0xe1b
0xe1c: ve1c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xe31: ve31 = AND ve1c(0xffffffffffffffffffffffffffffffffffffffff) v180b
0xe32: ve32 = EQ ve31 ve13
0xe36: RETURNPRIVATE vdd9arg0 ve32
----------------------------------

Begin block 0xe37
prev = {'0x41a'}, next = {'0xe3f'}
----------------------------------
Block 0xe37
0xe38: ve38(0xe3f) = CONST 
0xe3b: ve3b(0xdd9) = CONST 
0xe3e: ve3e_0 = CALLPRIVATE ve3b(0xdd9) ve38(0xe3f)
----------------------------------

Begin block 0xe3f
prev = {'0xe37'}, next = {'0xe44', '0xeb1'}
----------------------------------
Block 0xe3f
0xe40: ve40(0xeb1) = CONST 
0xe43: JUMPI ve40(0xeb1) ve3e_0
----------------------------------

Begin block 0xe44
prev = {'0xe3f'}, next = {}
----------------------------------
Block 0xe44
0xe44: ve44(0x40) = CONST 
0xe46: ve46 = MLOAD ve44(0x40)
0xe47: ve47(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xe69: MSTORE ve46 ve47(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xe6a: ve6a(0x4) = CONST 
0xe6c: ve6c = ADD ve6a(0x4) ve46
0xe6f: ve6f(0x20) = CONST 
0xe71: ve71 = ADD ve6f(0x20) ve6c
0xe74: ve74 = SUB ve71 ve6c
0xe76: MSTORE ve6c ve74
0xe77: ve77(0x20) = CONST 
0xe7a: MSTORE ve71 ve77(0x20)
0xe7b: ve7b(0x20) = CONST 
0xe7d: ve7d = ADD ve7b(0x20) ve71
0xe7f: ve7f(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0xea1: MSTORE ve7d ve7f(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0xea3: vea3(0x20) = CONST 
0xea5: vea5 = ADD vea3(0x20) ve7d
0xea9: vea9(0x40) = CONST 
0xeab: veab = MLOAD vea9(0x40)
0xeae: veae = SUB vea5 veab
0xeb0: REVERT veab veae
----------------------------------

Begin block 0xeb1
prev = {'0xe3f'}, next = {'0xf4b', '0xf47'}
----------------------------------
Block 0xeb1
0xeb3: veb3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xec8: vec8 = AND veb3(0xffffffffffffffffffffffffffffffffffffffff) v436
0xec9: vec9(0xa9059cbb) = CONST 
0xed0: ved0(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xee5: vee5 = AND ved0(0xffffffffffffffffffffffffffffffffffffffff) v436
0xee6: vee6(0x70a08231) = CONST 
0xeeb: veeb = ADDRESS 
0xeec: veec(0x40) = CONST 
0xeee: veee = MLOAD veec(0x40)
0xef0: vef0(0xffffffff) = CONST 
0xef5: vef5(0x70a08231) = AND vef0(0xffffffff) vee6(0x70a08231)
0xef6: vef6(0xe0) = CONST 
0xef8: vef8(0x70a0823100000000000000000000000000000000000000000000000000000000) = SHL vef6(0xe0) vef5(0x70a08231)
0xefa: MSTORE veee vef8(0x70a0823100000000000000000000000000000000000000000000000000000000)
0xefb: vefb(0x4) = CONST 
0xefd: vefd = ADD vefb(0x4) veee
0xf00: vf00(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xf15: vf15 = AND vf00(0xffffffffffffffffffffffffffffffffffffffff) veeb
0xf16: vf16(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xf2b: vf2b = AND vf16(0xffffffffffffffffffffffffffffffffffffffff) vf15
0xf2d: MSTORE vefd vf2b
0xf2e: vf2e(0x20) = CONST 
0xf30: vf30 = ADD vf2e(0x20) vefd
0xf34: vf34(0x20) = CONST 
0xf36: vf36(0x40) = CONST 
0xf38: vf38 = MLOAD vf36(0x40)
0xf3b: vf3b = SUB vf30 vf38
0xf3f: vf3f = EXTCODESIZE vee5
0xf40: vf40 = ISZERO vf3f
0xf42: vf42 = ISZERO vf40
0xf43: vf43(0xf4b) = CONST 
0xf46: JUMPI vf43(0xf4b) vf42
----------------------------------

Begin block 0xf47
prev = {'0xeb1'}, next = {}
----------------------------------
Block 0xf47
0xf47: vf47(0x0) = CONST 
0xf4a: REVERT vf47(0x0) vf47(0x0)
----------------------------------

Begin block 0xf4b
prev = {'0xeb1'}, next = {'0xf5f', '0xf56'}
----------------------------------
Block 0xf4b
0xf4d: vf4d = GAS 
0xf4e: vf4e = STATICCALL vf4d vee5 vf38 vf3b vf38 vf34(0x20)
0xf4f: vf4f = ISZERO vf4e
0xf51: vf51 = ISZERO vf4f
0xf52: vf52(0xf5f) = CONST 
0xf55: JUMPI vf52(0xf5f) vf51
----------------------------------

Begin block 0xf56
prev = {'0xf4b'}, next = {}
----------------------------------
Block 0xf56
0xf56: vf56 = RETURNDATASIZE 
0xf57: vf57(0x0) = CONST 
0xf5a: RETURNDATACOPY vf57(0x0) vf57(0x0) vf56
0xf5b: vf5b = RETURNDATASIZE 
0xf5c: vf5c(0x0) = CONST 
0xf5e: REVERT vf5c(0x0) vf5b
----------------------------------

Begin block 0xf5f
prev = {'0xf4b'}, next = {'0xf71', '0xf75'}
----------------------------------
Block 0xf5f
0xf64: vf64(0x40) = CONST 
0xf66: vf66 = MLOAD vf64(0x40)
0xf67: vf67 = RETURNDATASIZE 
0xf68: vf68(0x20) = CONST 
0xf6b: vf6b = LT vf67 vf68(0x20)
0xf6c: vf6c = ISZERO vf6b
0xf6d: vf6d(0xf75) = CONST 
0xf70: JUMPI vf6d(0xf75) vf6c
----------------------------------

Begin block 0xf71
prev = {'0xf5f'}, next = {}
----------------------------------
Block 0xf71
0xf71: vf71(0x0) = CONST 
0xf74: REVERT vf71(0x0) vf71(0x0)
----------------------------------

Begin block 0xf75
prev = {'0xf5f'}, next = {'0xfeb', '0xfef'}
----------------------------------
Block 0xf75
0xf77: vf77 = ADD vf66 vf67
0xf7b: vf7b = MLOAD vf66
0xf7d: vf7d(0x20) = CONST 
0xf7f: vf7f = ADD vf7d(0x20) vf66
0xf87: vf87(0x40) = CONST 
0xf89: vf89 = MLOAD vf87(0x40)
0xf8b: vf8b(0xffffffff) = CONST 
0xf90: vf90 = AND vf8b(0xffffffff) vec9(0xa9059cbb)
0xf91: vf91(0xe0) = CONST 
0xf93: vf93 = SHL vf91(0xe0) vf90
0xf95: MSTORE vf89 vf93
0xf96: vf96(0x4) = CONST 
0xf98: vf98 = ADD vf96(0x4) vf89
0xf9b: vf9b(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xfb0: vfb0 = AND vf9b(0xffffffffffffffffffffffffffffffffffffffff) v456
0xfb1: vfb1(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xfc6: vfc6 = AND vfb1(0xffffffffffffffffffffffffffffffffffffffff) vfb0
0xfc8: MSTORE vf98 vfc6
0xfc9: vfc9(0x20) = CONST 
0xfcb: vfcb = ADD vfc9(0x20) vf98
0xfce: MSTORE vfcb vf7b
0xfcf: vfcf(0x20) = CONST 
0xfd1: vfd1 = ADD vfcf(0x20) vfcb
0xfd6: vfd6(0x20) = CONST 
0xfd8: vfd8(0x40) = CONST 
0xfda: vfda = MLOAD vfd8(0x40)
0xfdd: vfdd = SUB vfd1 vfda
0xfdf: vfdf(0x0) = CONST 
0xfe3: vfe3 = EXTCODESIZE vec8
0xfe4: vfe4 = ISZERO vfe3
0xfe6: vfe6 = ISZERO vfe4
0xfe7: vfe7(0xfef) = CONST 
0xfea: JUMPI vfe7(0xfef) vfe6
----------------------------------

Begin block 0xfeb
prev = {'0xf75'}, next = {}
----------------------------------
Block 0xfeb
0xfeb: vfeb(0x0) = CONST 
0xfee: REVERT vfeb(0x0) vfeb(0x0)
----------------------------------

Begin block 0xfef
prev = {'0xf75'}, next = {'0xffa', '0x1003'}
----------------------------------
Block 0xfef
0xff1: vff1 = GAS 
0xff2: vff2 = CALL vff1 vec8 vfdf(0x0) vfda vfdd vfda vfd6(0x20)
0xff3: vff3 = ISZERO vff2
0xff5: vff5 = ISZERO vff3
0xff6: vff6(0x1003) = CONST 
0xff9: JUMPI vff6(0x1003) vff5
----------------------------------

Begin block 0xffa
prev = {'0xfef'}, next = {}
----------------------------------
Block 0xffa
0xffa: vffa = RETURNDATASIZE 
0xffb: vffb(0x0) = CONST 
0xffe: RETURNDATACOPY vffb(0x0) vffb(0x0) vffa
0xfff: vfff = RETURNDATASIZE 
0x1000: v1000(0x0) = CONST 
0x1002: REVERT v1000(0x0) vfff
----------------------------------

Begin block 0x1003
prev = {'0xfef'}, next = {'0x1019', '0x1015'}
----------------------------------
Block 0x1003
0x1008: v1008(0x40) = CONST 
0x100a: v100a = MLOAD v1008(0x40)
0x100b: v100b = RETURNDATASIZE 
0x100c: v100c(0x20) = CONST 
0x100f: v100f = LT v100b v100c(0x20)
0x1010: v1010 = ISZERO v100f
0x1011: v1011(0x1019) = CONST 
0x1014: JUMPI v1011(0x1019) v1010
----------------------------------

Begin block 0x1015
prev = {'0x1003'}, next = {}
----------------------------------
Block 0x1015
0x1015: v1015(0x0) = CONST 
0x1018: REVERT v1015(0x0) v1015(0x0)
----------------------------------

Begin block 0x1019
prev = {'0x1003'}, next = {'0x102f', '0x109c'}
----------------------------------
Block 0x1019
0x101b: v101b = ADD v100a v100b
0x101f: v101f = MLOAD v100a
0x1021: v1021(0x20) = CONST 
0x1023: v1023 = ADD v1021(0x20) v100a
0x102b: v102b(0x109c) = CONST 
0x102e: JUMPI v102b(0x109c) v101f
----------------------------------

Begin block 0x102f
prev = {'0x1019'}, next = {}
----------------------------------
Block 0x102f
0x102f: v102f(0x40) = CONST 
0x1031: v1031 = MLOAD v102f(0x40)
0x1032: v1032(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x1054: MSTORE v1031 v1032(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1055: v1055(0x4) = CONST 
0x1057: v1057 = ADD v1055(0x4) v1031
0x105a: v105a(0x20) = CONST 
0x105c: v105c = ADD v105a(0x20) v1057
0x105f: v105f = SUB v105c v1057
0x1061: MSTORE v1057 v105f
0x1062: v1062(0x19) = CONST 
0x1065: MSTORE v105c v1062(0x19)
0x1066: v1066(0x20) = CONST 
0x1068: v1068 = ADD v1066(0x20) v105c
0x106a: v106a(0x7769746864726177696e67204552432d3230206661696c656400000000000000) = CONST 
0x108c: MSTORE v1068 v106a(0x7769746864726177696e67204552432d3230206661696c656400000000000000)
0x108e: v108e(0x20) = CONST 
0x1090: v1090 = ADD v108e(0x20) v1068
0x1094: v1094(0x40) = CONST 
0x1096: v1096 = MLOAD v1094(0x40)
0x1099: v1099 = SUB v1090 v1096
0x109b: REVERT v1096 v1099
----------------------------------

Begin block 0x109c
prev = {'0x1019'}, next = {'0x466'}
----------------------------------
Block 0x109c
0x109f: JUMP v405(0x466)
----------------------------------

Begin block 0x10a0
prev = {'0x48b'}, next = {'0x4a1'}
----------------------------------
Block 0x10a0
0x10a1: v10a1(0x2) = CONST 
0x10a3: v10a3(0x20) = CONST 
0x10a5: MSTORE v10a3(0x20) v10a1(0x2)
0x10a7: v10a7(0x0) = CONST 
0x10a9: MSTORE v10a7(0x0) v491
0x10aa: v10aa(0x40) = CONST 
0x10ac: v10ac(0x0) = CONST 
0x10ae: v10ae = SHA3 v10ac(0x0) v10aa(0x40)
0x10af: v10af(0x0) = CONST 
0x10b5: v10b5 = SLOAD v10ae
0x10b7: JUMP v476(0x4a1)
----------------------------------

Begin block 0x10b80x4b7
prev = {'0x4da'}, next = {'0x10dc0x4b7', '0x10d50x4b7'}
----------------------------------
Block 0x10b80x4b7
0x10b90x4b7: v4b710b9(0x0) = CONST 
0x10bc0x4b7: v4b710bc(0x4) = CONST 
0x10be0x4b7: v4b710be(0x0) = CONST 
0x10c20x4b7: MSTORE v4b710be(0x0) v4e0
0x10c30x4b7: v4b710c3(0x20) = CONST 
0x10c50x4b7: v4b710c5(0x20) = ADD v4b710c3(0x20) v4b710be(0x0)
0x10c80x4b7: MSTORE v4b710c5(0x20) v4b710bc(0x4)
0x10c90x4b7: v4b710c9(0x20) = CONST 
0x10cb0x4b7: v4b710cb(0x40) = ADD v4b710c9(0x20) v4b710c5(0x20)
0x10cc0x4b7: v4b710cc(0x0) = CONST 
0x10ce0x4b7: v4b710ce = SHA3 v4b710cc(0x0) v4b710cb(0x40)
0x10cf0x4b7: v4b710cf = SLOAD v4b710ce
0x10d00x4b7: v4b710d0 = GT v4b710cf v4b710b9(0x0)
0x10d10x4b7: v4b710d1(0x10dc) = CONST 
0x10d40x4b7: JUMPI v4b710d1(0x10dc) v4b710d0
----------------------------------

Begin block 0x10b80x506
prev = {'0x10f8'}, next = {'0x10dc0x506', '0x10d50x506'}
----------------------------------
Block 0x10b80x506
0x10b90x506: v50610b9(0x0) = CONST 
0x10bc0x506: v50610bc(0x4) = CONST 
0x10be0x506: v50610be(0x0) = CONST 
0x10c20x506: MSTORE v50610be(0x0) v522
0x10c30x506: v50610c3(0x20) = CONST 
0x10c50x506: v50610c5(0x20) = ADD v50610c3(0x20) v50610be(0x0)
0x10c80x506: MSTORE v50610c5(0x20) v50610bc(0x4)
0x10c90x506: v50610c9(0x20) = CONST 
0x10cb0x506: v50610cb(0x40) = ADD v50610c9(0x20) v50610c5(0x20)
0x10cc0x506: v50610cc(0x0) = CONST 
0x10ce0x506: v50610ce = SHA3 v50610cc(0x0) v50610cb(0x40)
0x10cf0x506: v50610cf = SLOAD v50610ce
0x10d00x506: v50610d0 = GT v50610cf v50610b9(0x0)
0x10d10x506: v50610d1(0x10dc) = CONST 
0x10d40x506: JUMPI v50610d1(0x10dc) v50610d0
----------------------------------

Begin block 0x10d50x4b7
prev = {'0x10b80x4b7'}, next = {'0x10f10x4b7'}
----------------------------------
Block 0x10d50x4b7
0x10d50x4b7: v4b710d5(0x3) = CONST 
0x10d70x4b7: v4b710d7 = SLOAD v4b710d5(0x3)
0x10d80x4b7: v4b710d8(0x10f1) = CONST 
0x10db0x4b7: JUMP v4b710d8(0x10f1)
----------------------------------

Begin block 0x10d50x506
prev = {'0x10b80x506'}, next = {'0x10f10x506'}
----------------------------------
Block 0x10d50x506
0x10d50x506: v50610d5(0x3) = CONST 
0x10d70x506: v50610d7 = SLOAD v50610d5(0x3)
0x10d80x506: v50610d8(0x10f1) = CONST 
0x10db0x506: JUMP v50610d8(0x10f1)
----------------------------------

Begin block 0x10dc0x4b7
prev = {'0x10b80x4b7'}, next = {'0x10f10x4b7'}
----------------------------------
Block 0x10dc0x4b7
0x10dd0x4b7: v4b710dd(0x4) = CONST 
0x10df0x4b7: v4b710df(0x0) = CONST 
0x10e30x4b7: MSTORE v4b710df(0x0) v4e0
0x10e40x4b7: v4b710e4(0x20) = CONST 
0x10e60x4b7: v4b710e6(0x20) = ADD v4b710e4(0x20) v4b710df(0x0)
0x10e90x4b7: MSTORE v4b710e6(0x20) v4b710dd(0x4)
0x10ea0x4b7: v4b710ea(0x20) = CONST 
0x10ec0x4b7: v4b710ec(0x40) = ADD v4b710ea(0x20) v4b710e6(0x20)
0x10ed0x4b7: v4b710ed(0x0) = CONST 
0x10ef0x4b7: v4b710ef = SHA3 v4b710ed(0x0) v4b710ec(0x40)
0x10f00x4b7: v4b710f0 = SLOAD v4b710ef
----------------------------------

Begin block 0x10dc0x506
prev = {'0x10b80x506'}, next = {'0x10f10x506'}
----------------------------------
Block 0x10dc0x506
0x10dd0x506: v50610dd(0x4) = CONST 
0x10df0x506: v50610df(0x0) = CONST 
0x10e30x506: MSTORE v50610df(0x0) v522
0x10e40x506: v50610e4(0x20) = CONST 
0x10e60x506: v50610e6(0x20) = ADD v50610e4(0x20) v50610df(0x0)
0x10e90x506: MSTORE v50610e6(0x20) v50610dd(0x4)
0x10ea0x506: v50610ea(0x20) = CONST 
0x10ec0x506: v50610ec(0x40) = ADD v50610ea(0x20) v50610e6(0x20)
0x10ed0x506: v50610ed(0x0) = CONST 
0x10ef0x506: v50610ef = SHA3 v50610ed(0x0) v50610ec(0x40)
0x10f00x506: v50610f0 = SLOAD v50610ef
----------------------------------

Begin block 0x10f10x4b7
prev = {'0x10dc0x4b7', '0x10d50x4b7'}, next = {'0x4f0'}
----------------------------------
Block 0x10f10x4b7
0x10f70x4b7: JUMP v4c5(0x4f0)
----------------------------------

Begin block 0x10f10x506
prev = {'0x10dc0x506', '0x10d50x506'}, next = {'0x1104'}
----------------------------------
Block 0x10f10x506
0x10f70x506: JUMP v10fc(0x1104)
----------------------------------

Begin block 0x10f8
prev = {'0x51c'}, next = {'0x10b80x506'}
----------------------------------
Block 0x10f8
0x10f9: v10f9(0x0) = CONST 
0x10fc: v10fc(0x1104) = CONST 
0x1100: v1100(0x10b8) = CONST 
0x1103: JUMP v1100(0x10b8)
----------------------------------

Begin block 0x1104
prev = {'0x10f10x506'}, next = {'0x115f', '0x110f'}
----------------------------------
Block 0x1104
0x1104_0x0: v1104_0 = PHI v50610f0 v50610d7
0x1107: v1107(0x0) = CONST 
0x110a: v110a = GT v1104_0 v1107(0x0)
0x110b: v110b(0x115f) = CONST 
0x110e: JUMPI v110b(0x115f) v110a
----------------------------------

Begin block 0x110f
prev = {'0x1104'}, next = {}
----------------------------------
Block 0x110f
0x110f: v110f(0x40) = CONST 
0x1111: v1111 = MLOAD v110f(0x40)
0x1112: v1112(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x1134: MSTORE v1111 v1112(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1135: v1135(0x4) = CONST 
0x1137: v1137 = ADD v1135(0x4) v1111
0x113a: v113a(0x20) = CONST 
0x113c: v113c = ADD v113a(0x20) v1137
0x113f: v113f = SUB v113c v1137
0x1141: MSTORE v1137 v113f
0x1142: v1142(0x3c) = CONST 
0x1145: MSTORE v113c v1142(0x3c)
0x1146: v1146(0x20) = CONST 
0x1148: v1148 = ADD v1146(0x20) v113c
0x114a: v114a(0x1a20) = CONST 
0x114d: v114d(0x3c) = CONST 
0x1150: CODECOPY v1148 v114a(0x1a20) v114d(0x3c)
0x1151: v1151(0x40) = CONST 
0x1153: v1153 = ADD v1151(0x40) v1148
0x1157: v1157(0x40) = CONST 
0x1159: v1159 = MLOAD v1157(0x40)
0x115c: v115c = SUB v1153 v1159
0x115e: REVERT v1159 v115c
----------------------------------

Begin block 0x115f
prev = {'0x1104'}, next = {'0x11a0', '0x12e8'}
----------------------------------
Block 0x115f
0x115f_0x0: v115f_0 = PHI v50610f0 v50610d7
0x1160: v1160 = CALLVALUE 
0x1161: v1161(0x2) = CONST 
0x1163: v1163(0x0) = CONST 
0x1167: MSTORE v1163(0x0) v522
0x1168: v1168(0x20) = CONST 
0x116a: v116a(0x20) = ADD v1168(0x20) v1163(0x0)
0x116d: MSTORE v116a(0x20) v1161(0x2)
0x116e: v116e(0x20) = CONST 
0x1170: v1170(0x40) = ADD v116e(0x20) v116a(0x20)
0x1171: v1171(0x0) = CONST 
0x1173: v1173 = SHA3 v1171(0x0) v1170(0x40)
0x1174: v1174(0x0) = CONST 
0x1178: v1178 = SLOAD v1173
0x1179: v1179 = ADD v1178 v1160
0x117f: SSTORE v1173 v1179
0x1181: v1181(0x0) = CONST 
0x1183: v1183(0x2) = CONST 
0x1185: v1185(0x0) = CONST 
0x1189: MSTORE v1185(0x0) v522
0x118a: v118a(0x20) = CONST 
0x118c: v118c(0x20) = ADD v118a(0x20) v1185(0x0)
0x118f: MSTORE v118c(0x20) v1183(0x2)
0x1190: v1190(0x20) = CONST 
0x1192: v1192(0x40) = ADD v1190(0x20) v118c(0x20)
0x1193: v1193(0x0) = CONST 
0x1195: v1195 = SHA3 v1193(0x0) v1192(0x40)
0x1196: v1196 = SLOAD v1195
0x119b: v119b = LT v1196 v115f_0
0x119c: v119c(0x12e8) = CONST 
0x119f: JUMPI v119c(0x12e8) v119b
----------------------------------

Begin block 0x11a0
prev = {'0x115f'}, next = {'0x124c', '0x1250'}
----------------------------------
Block 0x11a0
0x11a0: v11a0(0x1) = CONST 
0x11a2: v11a2(0x0) = CONST 
0x11a5: v11a5 = SLOAD v11a0(0x1)
0x11a7: v11a7(0x100) = CONST 
0x11aa: v11aa(0x1) = EXP v11a7(0x100) v11a2(0x0)
0x11ac: v11ac = DIV v11a5 v11aa(0x1)
0x11ad: v11ad(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x11c2: v11c2 = AND v11ad(0xffffffffffffffffffffffffffffffffffffffff) v11ac
0x11c3: v11c3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x11d8: v11d8 = AND v11c3(0xffffffffffffffffffffffffffffffffffffffff) v11c2
0x11d9: v11d9(0xf6a94ecb) = CONST 
0x11df: v11df = CALLER 
0x11e1: v11e1(0x40) = CONST 
0x11e3: v11e3 = MLOAD v11e1(0x40)
0x11e5: v11e5(0xffffffff) = CONST 
0x11ea: v11ea(0xf6a94ecb) = AND v11e5(0xffffffff) v11d9(0xf6a94ecb)
0x11eb: v11eb(0xe0) = CONST 
0x11ed: v11ed(0xf6a94ecb00000000000000000000000000000000000000000000000000000000) = SHL v11eb(0xe0) v11ea(0xf6a94ecb)
0x11ef: MSTORE v11e3 v11ed(0xf6a94ecb00000000000000000000000000000000000000000000000000000000)
0x11f0: v11f0(0x4) = CONST 
0x11f2: v11f2 = ADD v11f0(0x4) v11e3
0x11f6: MSTORE v11f2 v522
0x11f7: v11f7(0x20) = CONST 
0x11f9: v11f9 = ADD v11f7(0x20) v11f2
0x11fb: v11fb(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x1210: v1210 = AND v11fb(0xffffffffffffffffffffffffffffffffffffffff) v11df
0x1211: v1211(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x1226: v1226 = AND v1211(0xffffffffffffffffffffffffffffffffffffffff) v1210
0x1228: MSTORE v11f9 v1226
0x1229: v1229(0x20) = CONST 
0x122b: v122b = ADD v1229(0x20) v11f9
0x122e: MSTORE v122b v52c
0x122f: v122f(0x20) = CONST 
0x1231: v1231 = ADD v122f(0x20) v122b
0x1237: v1237(0x0) = CONST 
0x1239: v1239(0x40) = CONST 
0x123b: v123b = MLOAD v1239(0x40)
0x123e: v123e = SUB v1231 v123b
0x1240: v1240(0x0) = CONST 
0x1244: v1244 = EXTCODESIZE v11d8
0x1245: v1245 = ISZERO v1244
0x1247: v1247 = ISZERO v1245
0x1248: v1248(0x1250) = CONST 
0x124b: JUMPI v1248(0x1250) v1247
----------------------------------

Begin block 0x124c
prev = {'0x11a0'}, next = {}
----------------------------------
Block 0x124c
0x124c: v124c(0x0) = CONST 
0x124f: REVERT v124c(0x0) v124c(0x0)
----------------------------------

Begin block 0x1250
prev = {'0x11a0'}, next = {'0x125b', '0x1264'}
----------------------------------
Block 0x1250
0x1252: v1252 = GAS 
0x1253: v1253 = CALL v1252 v11d8 v1240(0x0) v123b v123e v123b v1237(0x0)
0x1254: v1254 = ISZERO v1253
0x1256: v1256 = ISZERO v1254
0x1257: v1257(0x1264) = CONST 
0x125a: JUMPI v1257(0x1264) v1256
----------------------------------

Begin block 0x125b
prev = {'0x1250'}, next = {}
----------------------------------
Block 0x125b
0x125b: v125b = RETURNDATASIZE 
0x125c: v125c(0x0) = CONST 
0x125f: RETURNDATACOPY v125c(0x0) v125c(0x0) v125b
0x1260: v1260 = RETURNDATASIZE 
0x1261: v1261(0x0) = CONST 
0x1263: REVERT v1261(0x0) v1260
----------------------------------

Begin block 0x1264
prev = {'0x1250'}, next = {'0x1469'}
----------------------------------
Block 0x1264
0x126a: v126a(0xdf8a830581aa05b0b824a0c184007c33a1ad9100a41751c9ded9f2b4fefb16ba) = CONST 
0x128b: v128b = CALLVALUE 
0x128c: v128c = CALLER 
0x128d: v128d(0x0) = CONST 
0x128f: v128f(0x40) = CONST 
0x1291: v1291 = MLOAD v128f(0x40)
0x1295: MSTORE v1291 v128b
0x1296: v1296(0x20) = CONST 
0x1298: v1298 = ADD v1296(0x20) v1291
0x129a: v129a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x12af: v12af = AND v129a(0xffffffffffffffffffffffffffffffffffffffff) v128c
0x12b0: v12b0(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x12c5: v12c5 = AND v12b0(0xffffffffffffffffffffffffffffffffffffffff) v12af
0x12c7: MSTORE v1298 v12c5
0x12c8: v12c8(0x20) = CONST 
0x12ca: v12ca = ADD v12c8(0x20) v1298
0x12cd: MSTORE v12ca v128d(0x0)
0x12ce: v12ce(0x20) = CONST 
0x12d0: v12d0 = ADD v12ce(0x20) v12ca
0x12d6: v12d6(0x40) = CONST 
0x12d8: v12d8 = MLOAD v12d6(0x40)
0x12db: v12db = SUB v12d0 v12d8
0x12dd: LOG2 v12d8 v12db v126a(0xdf8a830581aa05b0b824a0c184007c33a1ad9100a41751c9ded9f2b4fefb16ba) v522
0x12de: v12de(0x1) = CONST 
0x12e4: v12e4(0x1469) = CONST 
0x12e7: JUMP v12e4(0x1469)
----------------------------------

Begin block 0x12e8
prev = {'0x115f'}, next = {'0x135b', '0x1357'}
----------------------------------
Block 0x12e8
0x12e9: v12e9(0x1) = CONST 
0x12eb: v12eb(0x0) = CONST 
0x12ee: v12ee = SLOAD v12e9(0x1)
0x12f0: v12f0(0x100) = CONST 
0x12f3: v12f3(0x1) = EXP v12f0(0x100) v12eb(0x0)
0x12f5: v12f5 = DIV v12ee v12f3(0x1)
0x12f6: v12f6(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x130b: v130b = AND v12f6(0xffffffffffffffffffffffffffffffffffffffff) v12f5
0x130c: v130c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x1321: v1321 = AND v130c(0xffffffffffffffffffffffffffffffffffffffff) v130b
0x1322: v1322(0x7f8d429e) = CONST 
0x1328: v1328(0x40) = CONST 
0x132a: v132a = MLOAD v1328(0x40)
0x132c: v132c(0xffffffff) = CONST 
0x1331: v1331(0x7f8d429e) = AND v132c(0xffffffff) v1322(0x7f8d429e)
0x1332: v1332(0xe0) = CONST 
0x1334: v1334(0x7f8d429e00000000000000000000000000000000000000000000000000000000) = SHL v1332(0xe0) v1331(0x7f8d429e)
0x1336: MSTORE v132a v1334(0x7f8d429e00000000000000000000000000000000000000000000000000000000)
0x1337: v1337(0x4) = CONST 
0x1339: v1339 = ADD v1337(0x4) v132a
0x133d: MSTORE v1339 v522
0x133e: v133e(0x20) = CONST 
0x1340: v1340 = ADD v133e(0x20) v1339
0x1344: v1344(0x20) = CONST 
0x1346: v1346(0x40) = CONST 
0x1348: v1348 = MLOAD v1346(0x40)
0x134b: v134b = SUB v1340 v1348
0x134f: v134f = EXTCODESIZE v1321
0x1350: v1350 = ISZERO v134f
0x1352: v1352 = ISZERO v1350
0x1353: v1353(0x135b) = CONST 
0x1356: JUMPI v1353(0x135b) v1352
----------------------------------

Begin block 0x1357
prev = {'0x12e8'}, next = {}
----------------------------------
Block 0x1357
0x1357: v1357(0x0) = CONST 
0x135a: REVERT v1357(0x0) v1357(0x0)
----------------------------------

Begin block 0x135b
prev = {'0x12e8'}, next = {'0x1366', '0x136f'}
----------------------------------
Block 0x135b
0x135d: v135d = GAS 
0x135e: v135e = STATICCALL v135d v1321 v1348 v134b v1348 v1344(0x20)
0x135f: v135f = ISZERO v135e
0x1361: v1361 = ISZERO v135f
0x1362: v1362(0x136f) = CONST 
0x1365: JUMPI v1362(0x136f) v1361
----------------------------------

Begin block 0x1366
prev = {'0x135b'}, next = {}
----------------------------------
Block 0x1366
0x1366: v1366 = RETURNDATASIZE 
0x1367: v1367(0x0) = CONST 
0x136a: RETURNDATACOPY v1367(0x0) v1367(0x0) v1366
0x136b: v136b = RETURNDATASIZE 
0x136c: v136c(0x0) = CONST 
0x136e: REVERT v136c(0x0) v136b
----------------------------------

Begin block 0x136f
prev = {'0x135b'}, next = {'0x1381', '0x1385'}
----------------------------------
Block 0x136f
0x1374: v1374(0x40) = CONST 
0x1376: v1376 = MLOAD v1374(0x40)
0x1377: v1377 = RETURNDATASIZE 
0x1378: v1378(0x20) = CONST 
0x137b: v137b = LT v1377 v1378(0x20)
0x137c: v137c = ISZERO v137b
0x137d: v137d(0x1385) = CONST 
0x1380: JUMPI v137d(0x1385) v137c
----------------------------------

Begin block 0x1381
prev = {'0x136f'}, next = {}
----------------------------------
Block 0x1381
0x1381: v1381(0x0) = CONST 
0x1384: REVERT v1381(0x0) v1381(0x0)
----------------------------------

Begin block 0x1385
prev = {'0x136f'}, next = {'0x139c', '0x13ec'}
----------------------------------
Block 0x1385
0x1387: v1387 = ADD v1376 v1377
0x138b: v138b = MLOAD v1376
0x138d: v138d(0x20) = CONST 
0x138f: v138f = ADD v138d(0x20) v1376
0x1397: v1397 = ISZERO v138b
0x1398: v1398(0x13ec) = CONST 
0x139b: JUMPI v1398(0x13ec) v1397
----------------------------------

Begin block 0x139c
prev = {'0x1385'}, next = {}
----------------------------------
Block 0x139c
0x139c: v139c(0x40) = CONST 
0x139e: v139e = MLOAD v139c(0x40)
0x139f: v139f(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x13c1: MSTORE v139e v139f(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x13c2: v13c2(0x4) = CONST 
0x13c4: v13c4 = ADD v13c2(0x4) v139e
0x13c7: v13c7(0x20) = CONST 
0x13c9: v13c9 = ADD v13c7(0x20) v13c4
0x13cc: v13cc = SUB v13c9 v13c4
0x13ce: MSTORE v13c4 v13cc
0x13cf: v13cf(0x29) = CONST 
0x13d2: MSTORE v13c9 v13cf(0x29)
0x13d3: v13d3(0x20) = CONST 
0x13d5: v13d5 = ADD v13d3(0x20) v13c9
0x13d7: v13d7(0x1a5c) = CONST 
0x13da: v13da(0x29) = CONST 
0x13dd: CODECOPY v13d5 v13d7(0x1a5c) v13da(0x29)
0x13de: v13de(0x40) = CONST 
0x13e0: v13e0 = ADD v13de(0x40) v13d5
0x13e4: v13e4(0x40) = CONST 
0x13e6: v13e6 = MLOAD v13e4(0x40)
0x13e9: v13e9 = SUB v13e0 v13e6
0x13eb: REVERT v13e6 v13e9
----------------------------------

Begin block 0x13ec
prev = {'0x1385'}, next = {'0x1469'}
----------------------------------
Block 0x13ec
0x13ec_0x1: v13ec_1 = PHI v50610f0 v50610d7
0x13ee: v13ee(0xdf8a830581aa05b0b824a0c184007c33a1ad9100a41751c9ded9f2b4fefb16ba) = CONST 
0x140f: v140f = CALLVALUE 
0x1410: v1410 = CALLER 
0x1413: v1413 = SUB v13ec_1 v1196
0x1414: v1414(0x40) = CONST 
0x1416: v1416 = MLOAD v1414(0x40)
0x141a: MSTORE v1416 v140f
0x141b: v141b(0x20) = CONST 
0x141d: v141d = ADD v141b(0x20) v1416
0x141f: v141f(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x1434: v1434 = AND v141f(0xffffffffffffffffffffffffffffffffffffffff) v1410
0x1435: v1435(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x144a: v144a = AND v1435(0xffffffffffffffffffffffffffffffffffffffff) v1434
0x144c: MSTORE v141d v144a
0x144d: v144d(0x20) = CONST 
0x144f: v144f = ADD v144d(0x20) v141d
0x1452: MSTORE v144f v1413
0x1453: v1453(0x20) = CONST 
0x1455: v1455 = ADD v1453(0x20) v144f
0x145b: v145b(0x40) = CONST 
0x145d: v145d = MLOAD v145b(0x40)
0x1460: v1460 = SUB v1455 v145d
0x1462: LOG2 v145d v1460 v13ee(0xdf8a830581aa05b0b824a0c184007c33a1ad9100a41751c9ded9f2b4fefb16ba) v522
0x1463: v1463(0x0) = CONST 
----------------------------------

Begin block 0x1469
prev = {'0x1264', '0x13ec'}, next = {'0x53c'}
----------------------------------
Block 0x1469
0x146e: JUMP v507(0x53c)
----------------------------------

Begin block 0x146f
prev = {'0x562'}, next = {'0x56b'}
----------------------------------
Block 0x146f
0x1470: v1470(0x1) = CONST 
0x1472: v1472(0x0) = CONST 
0x1475: v1475 = SLOAD v1470(0x1)
0x1477: v1477(0x100) = CONST 
0x147a: v147a(0x1) = EXP v1477(0x100) v1472(0x0)
0x147c: v147c = DIV v1475 v147a(0x1)
0x147d: v147d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x1492: v1492 = AND v147d(0xffffffffffffffffffffffffffffffffffffffff) v147c
0x1494: JUMP v564(0x56b)
----------------------------------

Begin block 0x1495
prev = {'0x621'}, next = {'0x149d'}
----------------------------------
Block 0x1495
0x1496: v1496(0x149d) = CONST 
0x1499: v1499(0xdd9) = CONST 
0x149c: v149c_0 = CALLPRIVATE v1499(0xdd9) v1496(0x149d)
----------------------------------

Begin block 0x149d
prev = {'0x1495'}, next = {'0x14a2', '0x150f'}
----------------------------------
Block 0x149d
0x149e: v149e(0x150f) = CONST 
0x14a1: JUMPI v149e(0x150f) v149c_0
----------------------------------

Begin block 0x14a2
prev = {'0x149d'}, next = {}
----------------------------------
Block 0x14a2
0x14a2: v14a2(0x40) = CONST 
0x14a4: v14a4 = MLOAD v14a2(0x40)
0x14a5: v14a5(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x14c7: MSTORE v14a4 v14a5(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x14c8: v14c8(0x4) = CONST 
0x14ca: v14ca = ADD v14c8(0x4) v14a4
0x14cd: v14cd(0x20) = CONST 
0x14cf: v14cf = ADD v14cd(0x20) v14ca
0x14d2: v14d2 = SUB v14cf v14ca
0x14d4: MSTORE v14ca v14d2
0x14d5: v14d5(0x20) = CONST 
0x14d8: MSTORE v14cf v14d5(0x20)
0x14d9: v14d9(0x20) = CONST 
0x14db: v14db = ADD v14d9(0x20) v14cf
0x14dd: v14dd(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x14ff: MSTORE v14db v14dd(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x1501: v1501(0x20) = CONST 
0x1503: v1503 = ADD v1501(0x20) v14db
0x1507: v1507(0x40) = CONST 
0x1509: v1509 = MLOAD v1507(0x40)
0x150c: v150c = SUB v1503 v1509
0x150e: REVERT v1509 v150c
----------------------------------

Begin block 0x150f
prev = {'0x149d'}, next = {'0x1954'}
----------------------------------
Block 0x150f
0x1512: v1512(0x5) = CONST 
0x1516: v1516(0x1520) = CONST 
0x151c: v151c(0x1954) = CONST 
0x151f: JUMP v151c(0x1954)
----------------------------------

Begin block 0x1520
prev = {'0x19d0'}, next = {'0x631'}
----------------------------------
Block 0x1520
0x1524: JUMP v5bb(0x631)
----------------------------------

Begin block 0x1525
prev = {'0x63f'}, next = {'0x152d'}
----------------------------------
Block 0x1525
0x1526: v1526(0x152d) = CONST 
0x1529: v1529(0xdd9) = CONST 
0x152c: v152c_0 = CALLPRIVATE v1529(0xdd9) v1526(0x152d)
----------------------------------

Begin block 0x152d
prev = {'0x1525'}, next = {'0x1532', '0x159f'}
----------------------------------
Block 0x152d
0x152e: v152e(0x159f) = CONST 
0x1531: JUMPI v152e(0x159f) v152c_0
----------------------------------

Begin block 0x1532
prev = {'0x152d'}, next = {}
----------------------------------
Block 0x1532
0x1532: v1532(0x40) = CONST 
0x1534: v1534 = MLOAD v1532(0x40)
0x1535: v1535(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x1557: MSTORE v1534 v1535(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1558: v1558(0x4) = CONST 
0x155a: v155a = ADD v1558(0x4) v1534
0x155d: v155d(0x20) = CONST 
0x155f: v155f = ADD v155d(0x20) v155a
0x1562: v1562 = SUB v155f v155a
0x1564: MSTORE v155a v1562
0x1565: v1565(0x20) = CONST 
0x1568: MSTORE v155f v1565(0x20)
0x1569: v1569(0x20) = CONST 
0x156b: v156b = ADD v1569(0x20) v155f
0x156d: v156d(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x158f: MSTORE v156b v156d(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x1591: v1591(0x20) = CONST 
0x1593: v1593 = ADD v1591(0x20) v156b
0x1597: v1597(0x40) = CONST 
0x1599: v1599 = MLOAD v1597(0x40)
0x159c: v159c = SUB v1593 v1599
0x159e: REVERT v1599 v159c
----------------------------------

Begin block 0x159f
prev = {'0x152d'}, next = {'0x1605', '0x1609'}
----------------------------------
Block 0x159f
0x15a0: v15a0(0x1) = CONST 
0x15a2: v15a2(0x0) = CONST 
0x15a5: v15a5 = SLOAD v15a0(0x1)
0x15a7: v15a7(0x100) = CONST 
0x15aa: v15aa(0x1) = EXP v15a7(0x100) v15a2(0x0)
0x15ac: v15ac = DIV v15a5 v15aa(0x1)
0x15ad: v15ad(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x15c2: v15c2 = AND v15ad(0xffffffffffffffffffffffffffffffffffffffff) v15ac
0x15c3: v15c3(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x15d8: v15d8 = AND v15c3(0xffffffffffffffffffffffffffffffffffffffff) v15c2
0x15d9: v15d9(0x3ccfd60b) = CONST 
0x15de: v15de(0x40) = CONST 
0x15e0: v15e0 = MLOAD v15de(0x40)
0x15e2: v15e2(0xffffffff) = CONST 
0x15e7: v15e7(0x3ccfd60b) = AND v15e2(0xffffffff) v15d9(0x3ccfd60b)
0x15e8: v15e8(0xe0) = CONST 
0x15ea: v15ea(0x3ccfd60b00000000000000000000000000000000000000000000000000000000) = SHL v15e8(0xe0) v15e7(0x3ccfd60b)
0x15ec: MSTORE v15e0 v15ea(0x3ccfd60b00000000000000000000000000000000000000000000000000000000)
0x15ed: v15ed(0x4) = CONST 
0x15ef: v15ef = ADD v15ed(0x4) v15e0
0x15f0: v15f0(0x0) = CONST 
0x15f2: v15f2(0x40) = CONST 
0x15f4: v15f4 = MLOAD v15f2(0x40)
0x15f7: v15f7 = SUB v15ef v15f4
0x15f9: v15f9(0x0) = CONST 
0x15fd: v15fd = EXTCODESIZE v15d8
0x15fe: v15fe = ISZERO v15fd
0x1600: v1600 = ISZERO v15fe
0x1601: v1601(0x1609) = CONST 
0x1604: JUMPI v1601(0x1609) v1600
----------------------------------

Begin block 0x1605
prev = {'0x159f'}, next = {}
----------------------------------
Block 0x1605
0x1605: v1605(0x0) = CONST 
0x1608: REVERT v1605(0x0) v1605(0x0)
----------------------------------

Begin block 0x1609
prev = {'0x159f'}, next = {'0x161d', '0x1614'}
----------------------------------
Block 0x1609
0x160b: v160b = GAS 
0x160c: v160c = CALL v160b v15d8 v15f9(0x0) v15f4 v15f7 v15f4 v15f0(0x0)
0x160d: v160d = ISZERO v160c
0x160f: v160f = ISZERO v160d
0x1610: v1610(0x161d) = CONST 
0x1613: JUMPI v1610(0x161d) v160f
----------------------------------

Begin block 0x1614
prev = {'0x1609'}, next = {}
----------------------------------
Block 0x1614
0x1614: v1614 = RETURNDATASIZE 
0x1615: v1615(0x0) = CONST 
0x1618: RETURNDATACOPY v1615(0x0) v1615(0x0) v1614
0x1619: v1619 = RETURNDATASIZE 
0x161a: v161a(0x0) = CONST 
0x161c: REVERT v161a(0x0) v1619
----------------------------------

Begin block 0x161d
prev = {'0x1609'}, next = {'0x648'}
----------------------------------
Block 0x161d
0x1622: JUMP v641(0x648)
----------------------------------

Begin block 0x1623
prev = {'0x66d'}, next = {'0x162b'}
----------------------------------
Block 0x1623
0x1624: v1624(0x162b) = CONST 
0x1627: v1627(0xdd9) = CONST 
0x162a: v162a_0 = CALLPRIVATE v1627(0xdd9) v1624(0x162b)
----------------------------------

Begin block 0x162b
prev = {'0x1623'}, next = {'0x1630', '0x169d'}
----------------------------------
Block 0x162b
0x162c: v162c(0x169d) = CONST 
0x162f: JUMPI v162c(0x169d) v162a_0
----------------------------------

Begin block 0x1630
prev = {'0x162b'}, next = {}
----------------------------------
Block 0x1630
0x1630: v1630(0x40) = CONST 
0x1632: v1632 = MLOAD v1630(0x40)
0x1633: v1633(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x1655: MSTORE v1632 v1633(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1656: v1656(0x4) = CONST 
0x1658: v1658 = ADD v1656(0x4) v1632
0x165b: v165b(0x20) = CONST 
0x165d: v165d = ADD v165b(0x20) v1658
0x1660: v1660 = SUB v165d v1658
0x1662: MSTORE v1658 v1660
0x1663: v1663(0x20) = CONST 
0x1666: MSTORE v165d v1663(0x20)
0x1667: v1667(0x20) = CONST 
0x1669: v1669 = ADD v1667(0x20) v165d
0x166b: v166b(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x168d: MSTORE v1669 v166b(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x168f: v168f(0x20) = CONST 
0x1691: v1691 = ADD v168f(0x20) v1669
0x1695: v1695(0x40) = CONST 
0x1697: v1697 = MLOAD v1695(0x40)
0x169a: v169a = SUB v1691 v1697
0x169c: REVERT v1697 v169a
----------------------------------

Begin block 0x169d
prev = {'0x162b'}, next = {'0x1810'}
----------------------------------
Block 0x169d
0x169e: v169e(0x16a6) = CONST 
0x16a2: v16a2(0x1810) = CONST 
0x16a5: JUMP v16a2(0x1810)
----------------------------------

Begin block 0x16a6
prev = {'0x1896'}, next = {'0x699'}
----------------------------------
Block 0x16a6
0x16a8: JUMP v658(0x699)
----------------------------------

Begin block 0x16a9
prev = {'0x6be'}, next = {'0x16b1'}
----------------------------------
Block 0x16a9
0x16aa: v16aa(0x16b1) = CONST 
0x16ad: v16ad(0xdd9) = CONST 
0x16b0: v16b0_0 = CALLPRIVATE v16ad(0xdd9) v16aa(0x16b1)
----------------------------------

Begin block 0x16b1
prev = {'0x16a9'}, next = {'0x16b6', '0x1723'}
----------------------------------
Block 0x16b1
0x16b2: v16b2(0x1723) = CONST 
0x16b5: JUMPI v16b2(0x1723) v16b0_0
----------------------------------

Begin block 0x16b6
prev = {'0x16b1'}, next = {}
----------------------------------
Block 0x16b6
0x16b6: v16b6(0x40) = CONST 
0x16b8: v16b8 = MLOAD v16b6(0x40)
0x16b9: v16b9(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x16db: MSTORE v16b8 v16b9(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x16dc: v16dc(0x4) = CONST 
0x16de: v16de = ADD v16dc(0x4) v16b8
0x16e1: v16e1(0x20) = CONST 
0x16e3: v16e3 = ADD v16e1(0x20) v16de
0x16e6: v16e6 = SUB v16e3 v16de
0x16e8: MSTORE v16de v16e6
0x16e9: v16e9(0x20) = CONST 
0x16ec: MSTORE v16e3 v16e9(0x20)
0x16ed: v16ed(0x20) = CONST 
0x16ef: v16ef = ADD v16ed(0x20) v16e3
0x16f1: v16f1(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x1713: MSTORE v16ef v16f1(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x1715: v1715(0x20) = CONST 
0x1717: v1717 = ADD v1715(0x20) v16ef
0x171b: v171b(0x40) = CONST 
0x171d: v171d = MLOAD v171b(0x40)
0x1720: v1720 = SUB v1717 v171d
0x1722: REVERT v171d v1720
----------------------------------

Begin block 0x1723
prev = {'0x16b1'}, next = {'0x17e7', '0x17eb'}
----------------------------------
Block 0x1723
0x1724: v1724(0x2) = CONST 
0x1726: v1726(0x0) = CONST 
0x172a: MSTORE v1726(0x0) v6c4
0x172b: v172b(0x20) = CONST 
0x172d: v172d(0x20) = ADD v172b(0x20) v1726(0x0)
0x1730: MSTORE v172d(0x20) v1724(0x2)
0x1731: v1731(0x20) = CONST 
0x1733: v1733(0x40) = ADD v1731(0x20) v172d(0x20)
0x1734: v1734(0x0) = CONST 
0x1736: v1736 = SHA3 v1734(0x0) v1733(0x40)
0x1737: v1737(0x0) = CONST 
0x173a: SSTORE v1736 v1737(0x0)
0x173b: v173b(0x1) = CONST 
0x173d: v173d(0x0) = CONST 
0x1740: v1740 = SLOAD v173b(0x1)
0x1742: v1742(0x100) = CONST 
0x1745: v1745(0x1) = EXP v1742(0x100) v173d(0x0)
0x1747: v1747 = DIV v1740 v1745(0x1)
0x1748: v1748(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x175d: v175d = AND v1748(0xffffffffffffffffffffffffffffffffffffffff) v1747
0x175e: v175e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x1773: v1773 = AND v175e(0xffffffffffffffffffffffffffffffffffffffff) v175d
0x1774: v1774(0xfe92049d) = CONST 
0x177c: v177c(0x40) = CONST 
0x177e: v177e = MLOAD v177c(0x40)
0x1780: v1780(0xffffffff) = CONST 
0x1785: v1785(0xfe92049d) = AND v1780(0xffffffff) v1774(0xfe92049d)
0x1786: v1786(0xe0) = CONST 
0x1788: v1788(0xfe92049d00000000000000000000000000000000000000000000000000000000) = SHL v1786(0xe0) v1785(0xfe92049d)
0x178a: MSTORE v177e v1788(0xfe92049d00000000000000000000000000000000000000000000000000000000)
0x178b: v178b(0x4) = CONST 
0x178d: v178d = ADD v178b(0x4) v177e
0x1791: MSTORE v178d v6c4
0x1792: v1792(0x20) = CONST 
0x1794: v1794 = ADD v1792(0x20) v178d
0x1797: MSTORE v1794 v6ce
0x1798: v1798(0x20) = CONST 
0x179a: v179a = ADD v1798(0x20) v1794
0x179c: v179c(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x17b1: v17b1 = AND v179c(0xffffffffffffffffffffffffffffffffffffffff) v6ee
0x17b2: v17b2(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x17c7: v17c7 = AND v17b2(0xffffffffffffffffffffffffffffffffffffffff) v17b1
0x17c9: MSTORE v179a v17c7
0x17ca: v17ca(0x20) = CONST 
0x17cc: v17cc = ADD v17ca(0x20) v179a
0x17d2: v17d2(0x0) = CONST 
0x17d4: v17d4(0x40) = CONST 
0x17d6: v17d6 = MLOAD v17d4(0x40)
0x17d9: v17d9 = SUB v17cc v17d6
0x17db: v17db(0x0) = CONST 
0x17df: v17df = EXTCODESIZE v1773
0x17e0: v17e0 = ISZERO v17df
0x17e2: v17e2 = ISZERO v17e0
0x17e3: v17e3(0x17eb) = CONST 
0x17e6: JUMPI v17e3(0x17eb) v17e2
----------------------------------

Begin block 0x17e7
prev = {'0x1723'}, next = {}
----------------------------------
Block 0x17e7
0x17e7: v17e7(0x0) = CONST 
0x17ea: REVERT v17e7(0x0) v17e7(0x0)
----------------------------------

Begin block 0x17eb
prev = {'0x1723'}, next = {'0x17f6', '0x17ff'}
----------------------------------
Block 0x17eb
0x17ed: v17ed = GAS 
0x17ee: v17ee = CALL v17ed v1773 v17db(0x0) v17d6 v17d9 v17d6 v17d2(0x0)
0x17ef: v17ef = ISZERO v17ee
0x17f1: v17f1 = ISZERO v17ef
0x17f2: v17f2(0x17ff) = CONST 
0x17f5: JUMPI v17f2(0x17ff) v17f1
----------------------------------

Begin block 0x17f6
prev = {'0x17eb'}, next = {}
----------------------------------
Block 0x17f6
0x17f6: v17f6 = RETURNDATASIZE 
0x17f7: v17f7(0x0) = CONST 
0x17fa: RETURNDATACOPY v17f7(0x0) v17f7(0x0) v17f6
0x17fb: v17fb = RETURNDATASIZE 
0x17fc: v17fc(0x0) = CONST 
0x17fe: REVERT v17fc(0x0) v17fb
----------------------------------

Begin block 0x17ff
prev = {'0x17eb'}, next = {'0x6fe'}
----------------------------------
Block 0x17ff
0x1807: JUMP v6a9(0x6fe)
----------------------------------

Begin block 0x1808
prev = {'0xdd9'}, next = {'0xe1b'}
----------------------------------
Block 0x1808
0x1809: v1809(0x0) = CONST 
0x180b: v180b = CALLER 
0x180f: JUMP ve14(0xe1b)
----------------------------------

Begin block 0x1810
prev = {'0x169d'}, next = {'0x1896', '0x1846'}
----------------------------------
Block 0x1810
0x1811: v1811(0x0) = CONST 
0x1813: v1813(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x1828: v1828(0x0) = AND v1813(0xffffffffffffffffffffffffffffffffffffffff) v1811(0x0)
0x182a: v182a(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x183f: v183f = AND v182a(0xffffffffffffffffffffffffffffffffffffffff) v689
0x1840: v1840 = EQ v183f v1828(0x0)
0x1841: v1841 = ISZERO v1840
0x1842: v1842(0x1896) = CONST 
0x1845: JUMPI v1842(0x1896) v1841
----------------------------------

Begin block 0x1846
prev = {'0x1810'}, next = {}
----------------------------------
Block 0x1846
0x1846: v1846(0x40) = CONST 
0x1848: v1848 = MLOAD v1846(0x40)
0x1849: v1849(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x186b: MSTORE v1848 v1849(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x186c: v186c(0x4) = CONST 
0x186e: v186e = ADD v186c(0x4) v1848
0x1871: v1871(0x20) = CONST 
0x1873: v1873 = ADD v1871(0x20) v186e
0x1876: v1876 = SUB v1873 v186e
0x1878: MSTORE v186e v1876
0x1879: v1879(0x26) = CONST 
0x187c: MSTORE v1873 v1879(0x26)
0x187d: v187d(0x20) = CONST 
0x187f: v187f = ADD v187d(0x20) v1873
0x1881: v1881(0x19fa) = CONST 
0x1884: v1884(0x26) = CONST 
0x1887: CODECOPY v187f v1881(0x19fa) v1884(0x26)
0x1888: v1888(0x40) = CONST 
0x188a: v188a = ADD v1888(0x40) v187f
0x188e: v188e(0x40) = CONST 
0x1890: v1890 = MLOAD v188e(0x40)
0x1893: v1893 = SUB v188a v1890
0x1895: REVERT v1890 v1893
----------------------------------

Begin block 0x1896
prev = {'0x1810'}, next = {'0x16a6'}
----------------------------------
Block 0x1896
0x1898: v1898(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x18ad: v18ad = AND v1898(0xffffffffffffffffffffffffffffffffffffffff) v689
0x18ae: v18ae(0x0) = CONST 
0x18b2: v18b2 = SLOAD v18ae(0x0)
0x18b4: v18b4(0x100) = CONST 
0x18b7: v18b7(0x1) = EXP v18b4(0x100) v18ae(0x0)
0x18b9: v18b9 = DIV v18b2 v18b7(0x1)
0x18ba: v18ba(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x18cf: v18cf = AND v18ba(0xffffffffffffffffffffffffffffffffffffffff) v18b9
0x18d0: v18d0(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x18e5: v18e5 = AND v18d0(0xffffffffffffffffffffffffffffffffffffffff) v18cf
0x18e6: v18e6(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x1907: v1907(0x40) = CONST 
0x1909: v1909 = MLOAD v1907(0x40)
0x190a: v190a(0x40) = CONST 
0x190c: v190c = MLOAD v190a(0x40)
0x190f: v190f = SUB v1909 v190c
0x1911: LOG3 v190c v190f v18e6(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v18e5 v18ad
0x1913: v1913(0x0) = CONST 
0x1916: v1916(0x100) = CONST 
0x1919: v1919(0x1) = EXP v1916(0x100) v1913(0x0)
0x191b: v191b = SLOAD v1913(0x0)
0x191d: v191d(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x1932: v1932(0xffffffffffffffffffffffffffffffffffffffff) = MUL v191d(0xffffffffffffffffffffffffffffffffffffffff) v1919(0x1)
0x1933: v1933(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v1932(0xffffffffffffffffffffffffffffffffffffffff)
0x1934: v1934 = AND v1933(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v191b
0x1937: v1937(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x194c: v194c = AND v1937(0xffffffffffffffffffffffffffffffffffffffff) v689
0x194d: v194d = MUL v194c v1919(0x1)
0x194e: v194e = OR v194d v1934
0x1950: SSTORE v1913(0x0) v194e
0x1953: JUMP v169e(0x16a6)
----------------------------------

Begin block 0x1954
prev = {'0x150f'}, next = {'0x1995', '0x1985'}
----------------------------------
Block 0x1954
0x1957: v1957 = SLOAD v1512(0x5)
0x1958: v1958(0x1) = CONST 
0x195b: v195b(0x1) = CONST 
0x195d: v195d = AND v195b(0x1) v1957
0x195e: v195e = ISZERO v195d
0x195f: v195f(0x100) = CONST 
0x1962: v1962 = MUL v195f(0x100) v195e
0x1963: v1963 = SUB v1962 v1958(0x1)
0x1964: v1964 = AND v1963 v1957
0x1965: v1965(0x2) = CONST 
0x1968: v1968 = DIV v1964 v1965(0x2)
0x196a: v196a(0x0) = CONST 
0x196c: MSTORE v196a(0x0) v1512(0x5)
0x196d: v196d(0x20) = CONST 
0x196f: v196f(0x0) = CONST 
0x1971: v1971 = SHA3 v196f(0x0) v196d(0x20)
0x1973: v1973(0x1f) = CONST 
0x1975: v1975 = ADD v1973(0x1f) v1968
0x1976: v1976(0x20) = CONST 
0x1979: v1979 = DIV v1975 v1976(0x20)
0x197b: v197b = ADD v1971 v1979
0x197e: v197e(0x1f) = CONST 
0x1980: v1980 = LT v197e(0x1f) v601
0x1981: v1981(0x1995) = CONST 
0x1984: JUMPI v1981(0x1995) v1980
----------------------------------

Begin block 0x1985
prev = {'0x1954'}, next = {'0x19c3'}
----------------------------------
Block 0x1985
0x1986: v1986 = CALLDATALOAD v605
0x1987: v1987(0xff) = CONST 
0x1989: v1989(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) = NOT v1987(0xff)
0x198a: v198a = AND v1989(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00) v1986
0x198d: v198d = ADD v601 v601
0x198e: v198e = OR v198d v198a
0x1990: SSTORE v1512(0x5) v198e
0x1991: v1991(0x19c3) = CONST 
0x1994: JUMP v1991(0x19c3)
----------------------------------

Begin block 0x1995
prev = {'0x1954'}, next = {'0x19a4', '0x19c3'}
----------------------------------
Block 0x1995
0x1998: v1998 = ADD v601 v601
0x1999: v1999(0x1) = CONST 
0x199b: v199b = ADD v1999(0x1) v1998
0x199d: SSTORE v1512(0x5) v199b
0x199f: v199f = ISZERO v601
0x19a0: v19a0(0x19c3) = CONST 
0x19a3: JUMPI v19a0(0x19c3) v199f
----------------------------------

Begin block 0x19a4
prev = {'0x1995'}, next = {'0x19a7'}
----------------------------------
Block 0x19a4
0x19a6: v19a6 = ADD v605 v601
----------------------------------

Begin block 0x19a7
prev = {'0x19a4', '0x19b0'}, next = {'0x19b0', '0x19c2'}
----------------------------------
Block 0x19a7
0x19a7_0x2: v19a7_2 = PHI v605 v19b7
0x19aa: v19aa = GT v19a6 v19a7_2
0x19ab: v19ab = ISZERO v19aa
0x19ac: v19ac(0x19c2) = CONST 
0x19af: JUMPI v19ac(0x19c2) v19ab
----------------------------------

Begin block 0x19b0
prev = {'0x19a7'}, next = {'0x19a7'}
----------------------------------
Block 0x19b0
0x19b0_0x1: v19b0_1 = PHI v1971 v19bc
0x19b0_0x2: v19b0_2 = PHI v605 v19b7
0x19b1: v19b1 = CALLDATALOAD v19b0_2
0x19b3: SSTORE v19b0_1 v19b1
0x19b5: v19b5(0x20) = CONST 
0x19b7: v19b7 = ADD v19b5(0x20) v19b0_2
0x19ba: v19ba(0x1) = CONST 
0x19bc: v19bc = ADD v19ba(0x1) v19b0_1
0x19be: v19be(0x19a7) = CONST 
0x19c1: JUMP v19be(0x19a7)
----------------------------------

Begin block 0x19c2
prev = {'0x19a7'}, next = {'0x19c3'}
----------------------------------
Block 0x19c2
----------------------------------

Begin block 0x19c3
prev = {'0x19c2', '0x1995', '0x1985'}, next = {'0x19d4'}
----------------------------------
Block 0x19c3
0x19c7: v19c7(0x19d0) = CONST 
0x19cc: v19cc(0x19d4) = CONST 
0x19cf: JUMP v19cc(0x19d4)
----------------------------------

Begin block 0x19d0
prev = {'0x19f6'}, next = {'0x1520'}
----------------------------------
Block 0x19d0
0x19d3: JUMP v1516(0x1520)
----------------------------------

Begin block 0x19d4
prev = {'0x19c3'}, next = {'0x19da'}
----------------------------------
Block 0x19d4
0x19d5: v19d5(0x19f6) = CONST 
----------------------------------

Begin block 0x19da
prev = {'0x19d4', '0x19e3'}, next = {'0x19e3', '0x19f2'}
----------------------------------
Block 0x19da
0x19da_0x0: v19da_0 = PHI v1971 v19bc v19ed
0x19dd: v19dd = GT v197b v19da_0
0x19de: v19de = ISZERO v19dd
0x19df: v19df(0x19f2) = CONST 
0x19e2: JUMPI v19df(0x19f2) v19de
----------------------------------

Begin block 0x19e3
prev = {'0x19da'}, next = {'0x19da'}
----------------------------------
Block 0x19e3
0x19e3_0x0: v19e3_0 = PHI v1971 v19bc v19ed
0x19e3: v19e3(0x0) = CONST 
0x19e6: v19e6(0x0) = CONST 
0x19e9: SSTORE v19e3_0 v19e6(0x0)
0x19eb: v19eb(0x1) = CONST 
0x19ed: v19ed = ADD v19eb(0x1) v19e3_0
0x19ee: v19ee(0x19da) = CONST 
0x19f1: JUMP v19ee(0x19da)
----------------------------------

Begin block 0x19f2
prev = {'0x19da'}, next = {'0x19f6'}
----------------------------------
Block 0x19f2
0x19f5: JUMP v19d5(0x19f6)
----------------------------------

Begin block 0x19f6
prev = {'0x19f2'}, next = {'0x19d0'}
----------------------------------
Block 0x19f6
0x19f8: JUMP v19c7(0x19d0)
----------------------------------

Begin block 0x1aca
prev = {'0x109', '0x0'}, next = {'0x1140x0'}
----------------------------------
Block 0x1aca
0x1acb: v1acb(0x114) = CONST 
0x1acc: CALLPRIVATE v1acb(0x114)
----------------------------------

Begin block 0x1acd
prev = {'0xe7'}, next = {}
----------------------------------
Block 0x1acd
0x1ace: v1ace(0x116) = CONST 
0x1acf: CALLPRIVATE v1ace(0x116)
----------------------------------

Begin block 0x1ad0
prev = {'0xf3'}, next = {}
----------------------------------
Block 0x1ad0
0x1ad1: v1ad1(0x16d) = CONST 
0x1ad2: CALLPRIVATE v1ad1(0x16d)
----------------------------------

Begin block 0x1ad3
prev = {'0xfe'}, next = {}
----------------------------------
Block 0x1ad3
0x1ad4: v1ad4(0x1a8) = CONST 
0x1ad5: CALLPRIVATE v1ad4(0x1a8)
----------------------------------

Begin block 0x1ad6
prev = {'0x109'}, next = {}
----------------------------------
Block 0x1ad6
0x1ad7: v1ad7(0x238) = CONST 
0x1ad8: CALLPRIVATE v1ad7(0x238)
----------------------------------

Begin block 0x1ad9
prev = {'0xac'}, next = {}
----------------------------------
Block 0x1ad9
0x1ada: v1ada(0x27d) = CONST 
0x1adb: CALLPRIVATE v1ada(0x27d)
----------------------------------

Begin block 0x1adc
prev = {'0xb7'}, next = {}
----------------------------------
Block 0x1adc
0x1add: v1add(0x2b8) = CONST 
0x1ade: CALLPRIVATE v1add(0x2b8)
----------------------------------

Begin block 0x1adf
prev = {'0xc2'}, next = {}
----------------------------------
Block 0x1adf
0x1ae0: v1ae0(0x309) = CONST 
0x1ae1: CALLPRIVATE v1ae0(0x309)
----------------------------------

Begin block 0x1ae2
prev = {'0xcd'}, next = {}
----------------------------------
Block 0x1ae2
0x1ae3: v1ae3(0x320) = CONST 
0x1ae4: CALLPRIVATE v1ae3(0x320)
----------------------------------

Begin block 0x1ae5
prev = {'0xd8'}, next = {}
----------------------------------
Block 0x1ae5
0x1ae6: v1ae6(0x371) = CONST 
0x1ae7: CALLPRIVATE v1ae6(0x371)
----------------------------------

Begin block 0x1ae8
prev = {'0x64'}, next = {}
----------------------------------
Block 0x1ae8
0x1ae9: v1ae9(0x3c8) = CONST 
0x1aea: CALLPRIVATE v1ae9(0x3c8)
----------------------------------

Begin block 0x1aeb
prev = {'0x70'}, next = {}
----------------------------------
Block 0x1aeb
0x1aec: v1aec(0x3f7) = CONST 
0x1aed: CALLPRIVATE v1aec(0x3f7)
----------------------------------

Begin block 0x1aee
prev = {'0x7b'}, next = {}
----------------------------------
Block 0x1aee
0x1aef: v1aef(0x468) = CONST 
0x1af0: CALLPRIVATE v1aef(0x468)
----------------------------------

Begin block 0x1af1
prev = {'0x86'}, next = {}
----------------------------------
Block 0x1af1
0x1af2: v1af2(0x4b7) = CONST 
0x1af3: CALLPRIVATE v1af2(0x4b7)
----------------------------------

Begin block 0x1af4
prev = {'0x91'}, next = {}
----------------------------------
Block 0x1af4
0x1af5: v1af5(0x506) = CONST 
0x1af6: CALLPRIVATE v1af5(0x506)
----------------------------------

Begin block 0x1af7
prev = {'0x29'}, next = {}
----------------------------------
Block 0x1af7
0x1af8: v1af8(0x556) = CONST 
0x1af9: CALLPRIVATE v1af8(0x556)
----------------------------------

Begin block 0x1afa
prev = {'0x34'}, next = {}
----------------------------------
Block 0x1afa
0x1afb: v1afb(0x5ad) = CONST 
0x1afc: CALLPRIVATE v1afb(0x5ad)
----------------------------------

Begin block 0x1afd
prev = {'0x3f'}, next = {}
----------------------------------
Block 0x1afd
0x1afe: v1afe(0x633) = CONST 
0x1aff: CALLPRIVATE v1afe(0x633)
----------------------------------

Begin block 0x1b00
prev = {'0x4a'}, next = {}
----------------------------------
Block 0x1b00
0x1b01: v1b01(0x64a) = CONST 
0x1b02: CALLPRIVATE v1b01(0x64a)
----------------------------------

Begin block 0x1b03
prev = {'0x55'}, next = {}
----------------------------------
Block 0x1b03
0x1b04: v1b04(0x69b) = CONST 
0x1b05: CALLPRIVATE v1b04(0x69b)
----------------------------------
