
Begin block 0x0
prev = {}, next = {'0x10', '0xc'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x62f', '0x1a'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x625: v625(0x62f) = CONST 
0x626: JUMPI v625(0x62f) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x632', '0x2b'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x38af3eed) = CONST 
0x26: v26 = EQ v21(0x38af3eed) v1f
0x627: v627(0x632) = CONST 
0x628: JUMPI v627(0x632) v26
----------------------------------

Begin block 0x2b
prev = {'0x1a'}, next = {'0x36', '0x635'}
----------------------------------
Block 0x2b
0x2c: v2c(0x86d1a69f) = CONST 
0x31: v31 = EQ v2c(0x86d1a69f) v1f
0x629: v629(0x635) = CONST 
0x62a: JUMPI v629(0x635) v31
----------------------------------

Begin block 0x36
prev = {'0x2b'}, next = {'0x41', '0x638'}
----------------------------------
Block 0x36
0x37: v37(0xb91d4001) = CONST 
0x3c: v3c = EQ v37(0xb91d4001) v1f
0x62b: v62b(0x638) = CONST 
0x62c: JUMPI v62b(0x638) v3c
----------------------------------

Begin block 0x41
prev = {'0x36'}, next = {'0x63b', '0x62f'}
----------------------------------
Block 0x41
0x42: v42(0xfc0c546a) = CONST 
0x47: v47 = EQ v42(0xfc0c546a) v1f
0x62d: v62d(0x63b) = CONST 
0x62e: JUMPI v62d(0x63b) v47
----------------------------------

Begin block 0x4c
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x4c
0x4d: v4d(0x0) = CONST 
0x50: REVERT v4d(0x0) v4d(0x0)
----------------------------------

Begin block 0x51
prev = {}, next = {'0xae'}
----------------------------------
function beneficiary()()
Block 0x51
0x52: v52(0x59) = CONST 
0x55: v55(0xae) = CONST 
0x58: JUMP v55(0xae)
----------------------------------

Begin block 0x590x51
prev = {'0xae'}, next = {}
----------------------------------
Block 0x590x51
0x5a0x51: v515a(0x40) = CONST 
0x5d0x51: v515d = MLOAD v515a(0x40)
0x5e0x51: v515e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x750x51: v5175 = AND vc7 v515e(0xffffffffffffffffffffffffffffffffffffffff)
0x770x51: MSTORE v515d v5175
0x780x51: v5178 = MLOAD v515a(0x40)
0x7c0x51: v517c = SUB v515d v5178
0x7d0x51: v517d(0x20) = CONST 
0x7f0x51: v517f = ADD v517d(0x20) v517c
0x810x51: RETURN v5178 v517f
----------------------------------

Begin block 0x590xa6
prev = {'0x254'}, next = {}
----------------------------------
Block 0x590xa6
0x5a0xa6: va65a(0x40) = CONST 
0x5d0xa6: va65d = MLOAD va65a(0x40)
0x5e0xa6: va65e(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x750xa6: va675 = AND v26d va65e(0xffffffffffffffffffffffffffffffffffffffff)
0x770xa6: MSTORE va65d va675
0x780xa6: va678 = MLOAD va65a(0x40)
0x7c0xa6: va67c = SUB va65d va678
0x7d0xa6: va67d(0x20) = CONST 
0x7f0xa6: va67f = ADD va67d(0x20) va67c
0x810xa6: RETURN va678 va67f
----------------------------------

Begin block 0x82
prev = {}, next = {'0xca'}
----------------------------------
function release()()
Block 0x82
0x83: v83(0x8a) = CONST 
0x86: v86(0xca) = CONST 
0x89: JUMP v86(0xca)
----------------------------------

Begin block 0x8a
prev = {'0x24b'}, next = {}
----------------------------------
Block 0x8a
0x8b: STOP 
----------------------------------

Begin block 0x8c
prev = {}, next = {'0x24e'}
----------------------------------
function releaseTime()()
Block 0x8c
0x8d: v8d(0x94) = CONST 
0x90: v90(0x24e) = CONST 
0x93: JUMP v90(0x24e)
----------------------------------

Begin block 0x94
prev = {'0x24e'}, next = {}
----------------------------------
Block 0x94
0x95: v95(0x40) = CONST 
0x98: v98 = MLOAD v95(0x40)
0x9b: MSTORE v98 v251
0x9c: v9c = MLOAD v95(0x40)
0xa0: va0 = SUB v98 v9c
0xa1: va1(0x20) = CONST 
0xa3: va3 = ADD va1(0x20) va0
0xa5: RETURN v9c va3
----------------------------------

Begin block 0xa6
prev = {}, next = {'0x254'}
----------------------------------
function token()()
Block 0xa6
0xa7: va7(0x59) = CONST 
0xaa: vaa(0x254) = CONST 
0xad: JUMP vaa(0x254)
----------------------------------

Begin block 0xae
prev = {'0x51'}, next = {'0x590x51'}
----------------------------------
Block 0xae
0xaf: vaf(0x1) = CONST 
0xb1: vb1 = SLOAD vaf(0x1)
0xb2: vb2(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0xc7: vc7 = AND vb2(0xffffffffffffffffffffffffffffffffffffffff) vb1
0xc9: JUMP v52(0x59)
----------------------------------

Begin block 0xca
prev = {'0x82'}, next = {'0x125', '0xd5'}
----------------------------------
Block 0xca
0xcb: vcb(0x2) = CONST 
0xcd: vcd = SLOAD vcb(0x2)
0xce: vce = TIMESTAMP 
0xcf: vcf = LT vce vcd
0xd0: vd0 = ISZERO vcf
0xd1: vd1(0x125) = CONST 
0xd4: JUMPI vd1(0x125) vd0
----------------------------------

Begin block 0xd5
prev = {'0xca'}, next = {}
----------------------------------
Block 0xd5
0xd5: vd5(0x40) = CONST 
0xd7: vd7 = MLOAD vd5(0x40)
0xd8: vd8(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0xfa: MSTORE vd7 vd8(0x8c379a000000000000000000000000000000000000000000000000000000000)
0xfb: vfb(0x4) = CONST 
0xfd: vfd = ADD vfb(0x4) vd7
0x100: v100(0x20) = CONST 
0x102: v102 = ADD v100(0x20) vfd
0x105: v105 = SUB v102 vfd
0x107: MSTORE vfd v105
0x108: v108(0x32) = CONST 
0x10b: MSTORE v102 v108(0x32)
0x10c: v10c(0x20) = CONST 
0x10e: v10e = ADD v10c(0x20) v102
0x110: v110(0x583) = CONST 
0x113: v113(0x32) = CONST 
0x116: CODECOPY v10e v110(0x583) v113(0x32)
0x117: v117(0x40) = CONST 
0x119: v119 = ADD v117(0x40) v10e
0x11d: v11d(0x40) = CONST 
0x11f: v11f = MLOAD v11d(0x40)
0x122: v122 = SUB v119 v11f
0x124: REVERT v11f v122
----------------------------------

Begin block 0x125
prev = {'0xca'}, next = {'0x193', '0x197'}
----------------------------------
Block 0x125
0x126: v126(0x0) = CONST 
0x129: v129 = SLOAD v126(0x0)
0x12a: v12a(0x40) = CONST 
0x12d: v12d = MLOAD v12a(0x40)
0x12e: v12e(0x70a0823100000000000000000000000000000000000000000000000000000000) = CONST 
0x150: MSTORE v12d v12e(0x70a0823100000000000000000000000000000000000000000000000000000000)
0x151: v151 = ADDRESS 
0x152: v152(0x4) = CONST 
0x155: v155 = ADD v12d v152(0x4)
0x156: MSTORE v155 v151
0x158: v158 = MLOAD v12a(0x40)
0x159: v159(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x170: v170 = AND v129 v159(0xffffffffffffffffffffffffffffffffffffffff)
0x172: v172(0x70a08231) = CONST 
0x178: v178(0x24) = CONST 
0x17c: v17c = ADD v12d v178(0x24)
0x17e: v17e(0x20) = CONST 
0x186: v186 = SUB v12d v158
0x187: v187 = ADD v186 v178(0x24)
0x18b: v18b = EXTCODESIZE v170
0x18c: v18c = ISZERO v18b
0x18e: v18e = ISZERO v18c
0x18f: v18f(0x197) = CONST 
0x192: JUMPI v18f(0x197) v18e
----------------------------------

Begin block 0x193
prev = {'0x125'}, next = {}
----------------------------------
Block 0x193
0x193: v193(0x0) = CONST 
0x196: REVERT v193(0x0) v193(0x0)
----------------------------------

Begin block 0x197
prev = {'0x125'}, next = {'0x1ab', '0x1a2'}
----------------------------------
Block 0x197
0x199: v199 = GAS 
0x19a: v19a = STATICCALL v199 v170 v158 v187 v158 v17e(0x20)
0x19b: v19b = ISZERO v19a
0x19d: v19d = ISZERO v19b
0x19e: v19e(0x1ab) = CONST 
0x1a1: JUMPI v19e(0x1ab) v19d
----------------------------------

Begin block 0x1a2
prev = {'0x197'}, next = {}
----------------------------------
Block 0x1a2
0x1a2: v1a2 = RETURNDATASIZE 
0x1a3: v1a3(0x0) = CONST 
0x1a6: RETURNDATACOPY v1a3(0x0) v1a3(0x0) v1a2
0x1a7: v1a7 = RETURNDATASIZE 
0x1a8: v1a8(0x0) = CONST 
0x1aa: REVERT v1a8(0x0) v1a7
----------------------------------

Begin block 0x1ab
prev = {'0x197'}, next = {'0x1bd', '0x1c1'}
----------------------------------
Block 0x1ab
0x1b0: v1b0(0x40) = CONST 
0x1b2: v1b2 = MLOAD v1b0(0x40)
0x1b3: v1b3 = RETURNDATASIZE 
0x1b4: v1b4(0x20) = CONST 
0x1b7: v1b7 = LT v1b3 v1b4(0x20)
0x1b8: v1b8 = ISZERO v1b7
0x1b9: v1b9(0x1c1) = CONST 
0x1bc: JUMPI v1b9(0x1c1) v1b8
----------------------------------

Begin block 0x1bd
prev = {'0x1ab'}, next = {}
----------------------------------
Block 0x1bd
0x1bd: v1bd(0x0) = CONST 
0x1c0: REVERT v1bd(0x0) v1bd(0x0)
----------------------------------

Begin block 0x1c1
prev = {'0x1ab'}, next = {'0x21b', '0x1cb'}
----------------------------------
Block 0x1c1
0x1c3: v1c3 = MLOAD v1b2
0x1c7: v1c7(0x21b) = CONST 
0x1ca: JUMPI v1c7(0x21b) v1c3
----------------------------------

Begin block 0x1cb
prev = {'0x1c1'}, next = {}
----------------------------------
Block 0x1cb
0x1cb: v1cb(0x40) = CONST 
0x1cd: v1cd = MLOAD v1cb(0x40)
0x1ce: v1ce(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x1f0: MSTORE v1cd v1ce(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x1f1: v1f1(0x4) = CONST 
0x1f3: v1f3 = ADD v1f1(0x4) v1cd
0x1f6: v1f6(0x20) = CONST 
0x1f8: v1f8 = ADD v1f6(0x20) v1f3
0x1fb: v1fb = SUB v1f8 v1f3
0x1fd: MSTORE v1f3 v1fb
0x1fe: v1fe(0x23) = CONST 
0x201: MSTORE v1f8 v1fe(0x23)
0x202: v202(0x20) = CONST 
0x204: v204 = ADD v202(0x20) v1f8
0x206: v206(0x5df) = CONST 
0x209: v209(0x23) = CONST 
0x20c: CODECOPY v204 v206(0x5df) v209(0x23)
0x20d: v20d(0x40) = CONST 
0x20f: v20f = ADD v20d(0x40) v204
0x213: v213(0x40) = CONST 
0x215: v215 = MLOAD v213(0x40)
0x218: v218 = SUB v20f v215
0x21a: REVERT v215 v218
----------------------------------

Begin block 0x21b
prev = {'0x1c1'}, next = {'0x270'}
----------------------------------
Block 0x21b
0x21c: v21c(0x1) = CONST 
0x21e: v21e = SLOAD v21c(0x1)
0x21f: v21f(0x0) = CONST 
0x221: v221 = SLOAD v21f(0x0)
0x222: v222(0x24b) = CONST 
0x226: v226(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x23d: v23d = AND v226(0xffffffffffffffffffffffffffffffffffffffff) v221
0x23f: v23f = AND v226(0xffffffffffffffffffffffffffffffffffffffff) v21e
0x241: v241(0xffffffff) = CONST 
0x246: v246(0x270) = CONST 
0x249: v249(0x270) = AND v246(0x270) v241(0xffffffff)
0x24a: JUMP v249(0x270)
----------------------------------

Begin block 0x24b
prev = {'0x2fd'}, next = {'0x8a'}
----------------------------------
Block 0x24b
0x24d: JUMP v83(0x8a)
----------------------------------

Begin block 0x24e
prev = {'0x8c'}, next = {'0x94'}
----------------------------------
Block 0x24e
0x24f: v24f(0x2) = CONST 
0x251: v251 = SLOAD v24f(0x2)
0x253: JUMP v8d(0x94)
----------------------------------

Begin block 0x254
prev = {'0xa6'}, next = {'0x590xa6'}
----------------------------------
Block 0x254
0x255: v255(0x0) = CONST 
0x257: v257 = SLOAD v255(0x0)
0x258: v258(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x26d: v26d = AND v258(0xffffffffffffffffffffffffffffffffffffffff) v257
0x26f: JUMP va7(0x59)
----------------------------------

Begin block 0x270
prev = {'0x21b'}, next = {'0x302'}
----------------------------------
Block 0x270
0x271: v271(0x40) = CONST 
0x274: v274 = MLOAD v271(0x40)
0x275: v275(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x28b: v28b = AND v23f v275(0xffffffffffffffffffffffffffffffffffffffff)
0x28c: v28c(0x24) = CONST 
0x28f: v28f = ADD v274 v28c(0x24)
0x290: MSTORE v28f v28b
0x291: v291(0x44) = CONST 
0x295: v295 = ADD v274 v291(0x44)
0x298: MSTORE v295 v1c3
0x29a: v29a = MLOAD v271(0x40)
0x29d: v29d = SUB v274 v29a
0x2a0: v2a0 = ADD v291(0x44) v29d
0x2a2: MSTORE v29a v2a0
0x2a3: v2a3(0x64) = CONST 
0x2a7: v2a7 = ADD v274 v2a3(0x64)
0x2aa: MSTORE v271(0x40) v2a7
0x2ab: v2ab(0x20) = CONST 
0x2ae: v2ae = ADD v29a v2ab(0x20)
0x2b0: v2b0 = MLOAD v2ae
0x2b1: v2b1(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = CONST 
0x2ce: v2ce = AND v2b1(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff) v2b0
0x2cf: v2cf(0xa9059cbb00000000000000000000000000000000000000000000000000000000) = CONST 
0x2f0: v2f0 = OR v2cf(0xa9059cbb00000000000000000000000000000000000000000000000000000000) v2ce
0x2f2: MSTORE v2ae v2f0
0x2f3: v2f3(0x2fd) = CONST 
0x2f9: v2f9(0x302) = CONST 
0x2fc: JUMP v2f9(0x302)
----------------------------------

Begin block 0x2fd
prev = {'0x540'}, next = {'0x24b'}
----------------------------------
Block 0x2fd
0x301: JUMP v222(0x24b)
----------------------------------

Begin block 0x302
prev = {'0x270'}, next = {'0x546'}
----------------------------------
Block 0x302
0x303: v303(0x321) = CONST 
0x307: v307(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x31c: v31c = AND v307(0xffffffffffffffffffffffffffffffffffffffff) v23d
0x31d: v31d(0x546) = CONST 
0x320: JUMP v31d(0x546)
----------------------------------

Begin block 0x321
prev = {'0x57a'}, next = {'0x326', '0x38c'}
----------------------------------
Block 0x321
0x321_0x0: v321_0 = PHI v56f v579
0x322: v322(0x38c) = CONST 
0x325: JUMPI v322(0x38c) v321_0
----------------------------------

Begin block 0x326
prev = {'0x321'}, next = {}
----------------------------------
Block 0x326
0x326: v326(0x40) = CONST 
0x329: v329 = MLOAD v326(0x40)
0x32a: v32a(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x34c: MSTORE v329 v32a(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x34d: v34d(0x20) = CONST 
0x34f: v34f(0x4) = CONST 
0x352: v352 = ADD v329 v34f(0x4)
0x353: MSTORE v352 v34d(0x20)
0x354: v354(0x1f) = CONST 
0x356: v356(0x24) = CONST 
0x359: v359 = ADD v329 v356(0x24)
0x35a: MSTORE v359 v354(0x1f)
0x35b: v35b(0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400) = CONST 
0x37c: v37c(0x44) = CONST 
0x37f: v37f = ADD v329 v37c(0x44)
0x380: MSTORE v37f v35b(0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400)
0x382: v382 = MLOAD v326(0x40)
0x386: v386 = SUB v329 v382
0x387: v387(0x64) = CONST 
0x389: v389 = ADD v387(0x64) v386
0x38b: REVERT v382 v389
----------------------------------

Begin block 0x38c
prev = {'0x321'}, next = {'0x3b8'}
----------------------------------
Block 0x38c
0x38d: v38d(0x0) = CONST 
0x38f: v38f(0x60) = CONST 
0x392: v392(0xffffffffffffffffffffffffffffffffffffffff) = CONST 
0x3a7: v3a7 = AND v392(0xffffffffffffffffffffffffffffffffffffffff) v23d
0x3a9: v3a9(0x40) = CONST 
0x3ab: v3ab = MLOAD v3a9(0x40)
0x3af: v3af = MLOAD v29a
0x3b1: v3b1(0x20) = CONST 
0x3b3: v3b3 = ADD v3b1(0x20) v29a
----------------------------------

Begin block 0x3b8
prev = {'0x3c1', '0x38c'}, next = {'0x3c1', '0x3f5'}
----------------------------------
Block 0x3b8
0x3b8_0x2: v3b8_2 = PHI v3af v3e8
0x3b9: v3b9(0x20) = CONST 
0x3bc: v3bc = LT v3b8_2 v3b9(0x20)
0x3bd: v3bd(0x3f5) = CONST 
0x3c0: JUMPI v3bd(0x3f5) v3bc
----------------------------------

Begin block 0x3c1
prev = {'0x3b8'}, next = {'0x3b8'}
----------------------------------
Block 0x3c1
0x3c1_0x0: v3c1_0 = PHI v3b3 v3f0
0x3c1_0x1: v3c1_1 = PHI v3ab v3ee
0x3c1_0x2: v3c1_2 = PHI v3af v3e8
0x3c2: v3c2 = MLOAD v3c1_0
0x3c4: MSTORE v3c1_1 v3c2
0x3c5: v3c5(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = CONST 
0x3e8: v3e8 = ADD v3c1_2 v3c5(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
0x3ea: v3ea(0x20) = CONST 
0x3ee: v3ee = ADD v3ea(0x20) v3c1_1
0x3f0: v3f0 = ADD v3ea(0x20) v3c1_0
0x3f1: v3f1(0x3b8) = CONST 
0x3f4: JUMP v3f1(0x3b8)
----------------------------------

Begin block 0x3f5
prev = {'0x3b8'}, next = {'0x436', '0x457'}
----------------------------------
Block 0x3f5
0x3f5_0x0: v3f5_0 = PHI v3b3 v3f0
0x3f5_0x1: v3f5_1 = PHI v3ab v3ee
0x3f5_0x2: v3f5_2 = PHI v3af v3e8
0x3f6: v3f6(0x1) = CONST 
0x3f9: v3f9(0x20) = CONST 
0x3fb: v3fb = SUB v3f9(0x20) v3f5_2
0x3fc: v3fc(0x100) = CONST 
0x3ff: v3ff = EXP v3fc(0x100) v3fb
0x400: v400 = SUB v3ff v3f6(0x1)
0x402: v402 = NOT v400
0x404: v404 = MLOAD v3f5_0
0x405: v405 = AND v404 v402
0x408: v408 = MLOAD v3f5_1
0x409: v409 = AND v408 v400
0x40c: v40c = OR v405 v409
0x40e: MSTORE v3f5_1 v40c
0x417: v417 = ADD v3af v3ab
0x41b: v41b(0x0) = CONST 
0x41d: v41d(0x40) = CONST 
0x41f: v41f = MLOAD v41d(0x40)
0x422: v422 = SUB v417 v41f
0x424: v424(0x0) = CONST 
0x427: v427 = GAS 
0x428: v428 = CALL v427 v3a7 v424(0x0) v41f v422 v41f v41b(0x0)
0x42c: v42c = RETURNDATASIZE 
0x42e: v42e(0x0) = CONST 
0x431: v431 = EQ v42c v42e(0x0)
0x432: v432(0x457) = CONST 
0x435: JUMPI v432(0x457) v431
----------------------------------

Begin block 0x436
prev = {'0x3f5'}, next = {'0x45c'}
----------------------------------
Block 0x436
0x436: v436(0x40) = CONST 
0x438: v438 = MLOAD v436(0x40)
0x43b: v43b(0x1f) = CONST 
0x43d: v43d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0) = NOT v43b(0x1f)
0x43e: v43e(0x3f) = CONST 
0x440: v440 = RETURNDATASIZE 
0x441: v441 = ADD v440 v43e(0x3f)
0x442: v442 = AND v441 v43d(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)
0x444: v444 = ADD v438 v442
0x445: v445(0x40) = CONST 
0x447: MSTORE v445(0x40) v444
0x448: v448 = RETURNDATASIZE 
0x44a: MSTORE v438 v448
0x44b: v44b = RETURNDATASIZE 
0x44c: v44c(0x0) = CONST 
0x44e: v44e(0x20) = CONST 
0x451: v451 = ADD v438 v44e(0x20)
0x452: RETURNDATACOPY v451 v44c(0x0) v44b
0x453: v453(0x45c) = CONST 
0x456: JUMP v453(0x45c)
----------------------------------

Begin block 0x457
prev = {'0x3f5'}, next = {'0x45c'}
----------------------------------
Block 0x457
0x458: v458(0x60) = CONST 
----------------------------------

Begin block 0x45c
prev = {'0x436', '0x457'}, next = {'0x467', '0x4cd'}
----------------------------------
Block 0x45c
0x463: v463(0x4cd) = CONST 
0x466: JUMPI v463(0x4cd) v428
----------------------------------

Begin block 0x467
prev = {'0x45c'}, next = {}
----------------------------------
Block 0x467
0x467: v467(0x40) = CONST 
0x46a: v46a = MLOAD v467(0x40)
0x46b: v46b(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x48d: MSTORE v46a v46b(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x48e: v48e(0x20) = CONST 
0x490: v490(0x4) = CONST 
0x493: v493 = ADD v46a v490(0x4)
0x496: MSTORE v493 v48e(0x20)
0x497: v497(0x24) = CONST 
0x49a: v49a = ADD v46a v497(0x24)
0x49b: MSTORE v49a v48e(0x20)
0x49c: v49c(0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564) = CONST 
0x4bd: v4bd(0x44) = CONST 
0x4c0: v4c0 = ADD v46a v4bd(0x44)
0x4c1: MSTORE v4c0 v49c(0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564)
0x4c3: v4c3 = MLOAD v467(0x40)
0x4c7: v4c7 = SUB v46a v4c3
0x4c8: v4c8(0x64) = CONST 
0x4ca: v4ca = ADD v4c8(0x64) v4c7
0x4cc: REVERT v4c3 v4ca
----------------------------------

Begin block 0x4cd
prev = {'0x45c'}, next = {'0x4d5', '0x540'}
----------------------------------
Block 0x4cd
0x4cd_0x0: v4cd_0 = PHI v438 v458(0x60)
0x4cf: v4cf = MLOAD v4cd_0
0x4d0: v4d0 = ISZERO v4cf
0x4d1: v4d1(0x540) = CONST 
0x4d4: JUMPI v4d1(0x540) v4d0
----------------------------------

Begin block 0x4d5
prev = {'0x4cd'}, next = {'0x4e9', '0x4e5'}
----------------------------------
Block 0x4d5
0x4d5_0x0: v4d5_0 = PHI v438 v458(0x60)
0x4d7: v4d7(0x20) = CONST 
0x4d9: v4d9 = ADD v4d7(0x20) v4d5_0
0x4db: v4db = MLOAD v4d5_0
0x4dc: v4dc(0x20) = CONST 
0x4df: v4df = LT v4db v4dc(0x20)
0x4e0: v4e0 = ISZERO v4df
0x4e1: v4e1(0x4e9) = CONST 
0x4e4: JUMPI v4e1(0x4e9) v4e0
----------------------------------

Begin block 0x4e5
prev = {'0x4d5'}, next = {}
----------------------------------
Block 0x4e5
0x4e5: v4e5(0x0) = CONST 
0x4e8: REVERT v4e5(0x0) v4e5(0x0)
----------------------------------

Begin block 0x4e9
prev = {'0x4d5'}, next = {'0x4f0', '0x540'}
----------------------------------
Block 0x4e9
0x4eb: v4eb = MLOAD v4d9
0x4ec: v4ec(0x540) = CONST 
0x4ef: JUMPI v4ec(0x540) v4eb
----------------------------------

Begin block 0x4f0
prev = {'0x4e9'}, next = {}
----------------------------------
Block 0x4f0
0x4f0: v4f0(0x40) = CONST 
0x4f2: v4f2 = MLOAD v4f0(0x40)
0x4f3: v4f3(0x8c379a000000000000000000000000000000000000000000000000000000000) = CONST 
0x515: MSTORE v4f2 v4f3(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x516: v516(0x4) = CONST 
0x518: v518 = ADD v516(0x4) v4f2
0x51b: v51b(0x20) = CONST 
0x51d: v51d = ADD v51b(0x20) v518
0x520: v520 = SUB v51d v518
0x522: MSTORE v518 v520
0x523: v523(0x2a) = CONST 
0x526: MSTORE v51d v523(0x2a)
0x527: v527(0x20) = CONST 
0x529: v529 = ADD v527(0x20) v51d
0x52b: v52b(0x5b5) = CONST 
0x52e: v52e(0x2a) = CONST 
0x531: CODECOPY v529 v52b(0x5b5) v52e(0x2a)
0x532: v532(0x40) = CONST 
0x534: v534 = ADD v532(0x40) v529
0x538: v538(0x40) = CONST 
0x53a: v53a = MLOAD v538(0x40)
0x53d: v53d = SUB v534 v53a
0x53f: REVERT v53a v53d
----------------------------------

Begin block 0x540
prev = {'0x4e9', '0x4cd'}, next = {'0x2fd'}
----------------------------------
Block 0x540
0x545: JUMP v2f3(0x2fd)
----------------------------------

Begin block 0x546
prev = {'0x302'}, next = {'0x575', '0x57a'}
----------------------------------
Block 0x546
0x547: v547(0x0) = CONST 
0x54a: v54a = EXTCODEHASH v31c
0x54b: v54b(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470) = CONST 
0x56d: v56d = ISZERO v54a
0x56f: v56f = ISZERO v56d
0x571: v571(0x57a) = CONST 
0x574: JUMPI v571(0x57a) v56d
----------------------------------

Begin block 0x575
prev = {'0x546'}, next = {'0x57a'}
----------------------------------
Block 0x575
0x578: v578 = EQ v54a v54b(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470)
0x579: v579 = ISZERO v578
----------------------------------

Begin block 0x57a
prev = {'0x575', '0x546'}, next = {'0x321'}
----------------------------------
Block 0x57a
0x581: JUMP v303(0x321)
----------------------------------

Begin block 0x62f
prev = {'0x10', '0x41'}, next = {}
----------------------------------
Block 0x62f
0x630: v630(0x4c) = CONST 
0x631: CALLPRIVATE v630(0x4c)
----------------------------------

Begin block 0x632
prev = {'0x1a'}, next = {}
----------------------------------
Block 0x632
0x633: v633(0x51) = CONST 
0x634: CALLPRIVATE v633(0x51)
----------------------------------

Begin block 0x635
prev = {'0x2b'}, next = {}
----------------------------------
Block 0x635
0x636: v636(0x82) = CONST 
0x637: CALLPRIVATE v636(0x82)
----------------------------------

Begin block 0x638
prev = {'0x36'}, next = {}
----------------------------------
Block 0x638
0x639: v639(0x8c) = CONST 
0x63a: CALLPRIVATE v639(0x8c)
----------------------------------

Begin block 0x63b
prev = {'0x41'}, next = {}
----------------------------------
Block 0x63b
0x63c: v63c(0xa6) = CONST 
0x63d: CALLPRIVATE v63c(0xa6)
----------------------------------
