
Begin block 0x0
prev = {}, next = {'0x10', '0xc'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x80) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x80)
0x5: v5 = CALLVALUE 
0x7: v7 = ISZERO v5
0x8: v8(0x10) = CONST 
0xb: JUMPI v8(0x10) v7
----------------------------------

Begin block 0xc
prev = {'0x0'}, next = {}
----------------------------------
Block 0xc
0xc: vc(0x0) = CONST 
0xf: REVERT vc(0x0) vc(0x0)
----------------------------------

Begin block 0x10
prev = {'0x0'}, next = {'0x1a', '0x871'}
----------------------------------
Block 0x10
0x12: v12(0x4) = CONST 
0x14: v14 = CALLDATASIZE 
0x15: v15 = LT v14 v12(0x4)
0x85b: v85b(0x871) = CONST 
0x85c: JUMPI v85b(0x871) v15
----------------------------------

Begin block 0x1a
prev = {'0x10'}, next = {'0x2b', '0x66'}
----------------------------------
Block 0x1a
0x1a: v1a(0x0) = CONST 
0x1c: v1c = CALLDATALOAD v1a(0x0)
0x1d: v1d(0xe0) = CONST 
0x1f: v1f = SHR v1d(0xe0) v1c
0x21: v21(0x97ee1144) = CONST 
0x26: v26 = GT v21(0x97ee1144) v1f
0x27: v27(0x66) = CONST 
0x2a: JUMPI v27(0x66) v26
----------------------------------

Begin block 0x2b
prev = {'0x1a'}, next = {'0x36', '0x883'}
----------------------------------
Block 0x2b
0x2c: v2c(0x97ee1144) = CONST 
0x31: v31 = EQ v2c(0x97ee1144) v1f
0x85d: v85d(0x883) = CONST 
0x85e: JUMPI v85d(0x883) v31
----------------------------------

Begin block 0x36
prev = {'0x2b'}, next = {'0x886', '0x41'}
----------------------------------
Block 0x36
0x37: v37(0xa5a9504e) = CONST 
0x3c: v3c = EQ v37(0xa5a9504e) v1f
0x85f: v85f(0x886) = CONST 
0x860: JUMPI v85f(0x886) v3c
----------------------------------

Begin block 0x41
prev = {'0x36'}, next = {'0x889', '0x4c'}
----------------------------------
Block 0x41
0x42: v42(0xb46b8396) = CONST 
0x47: v47 = EQ v42(0xb46b8396) v1f
0x861: v861(0x889) = CONST 
0x862: JUMPI v861(0x889) v47
----------------------------------

Begin block 0x4c
prev = {'0x41'}, next = {'0x57', '0x88c'}
----------------------------------
Block 0x4c
0x4d: v4d(0xd95393eb) = CONST 
0x52: v52 = EQ v4d(0xd95393eb) v1f
0x863: v863(0x88c) = CONST 
0x864: JUMPI v863(0x88c) v52
----------------------------------

Begin block 0x57
prev = {'0x4c'}, next = {'0x62', '0x88f'}
----------------------------------
Block 0x57
0x58: v58(0xf2fde38b) = CONST 
0x5d: v5d = EQ v58(0xf2fde38b) v1f
0x865: v865(0x88f) = CONST 
0x866: JUMPI v865(0x88f) v5d
----------------------------------

Begin block 0x62
prev = {'0x57'}, next = {'0x9e0x0'}
----------------------------------
Block 0x62
0x62: v62(0x9e) = CONST 
0x65: JUMP v62(0x9e)
----------------------------------

Begin block 0x66
prev = {'0x1a'}, next = {'0x874', '0x72'}
----------------------------------
Block 0x66
0x68: v68(0x18b8e787) = CONST 
0x6d: v6d = EQ v68(0x18b8e787) v1f
0x867: v867(0x874) = CONST 
0x868: JUMPI v867(0x874) v6d
----------------------------------

Begin block 0x72
prev = {'0x66'}, next = {'0x7d', '0x877'}
----------------------------------
Block 0x72
0x73: v73(0x715018a6) = CONST 
0x78: v78 = EQ v73(0x715018a6) v1f
0x869: v869(0x877) = CONST 
0x86a: JUMPI v869(0x877) v78
----------------------------------

Begin block 0x7d
prev = {'0x72'}, next = {'0x87a', '0x88'}
----------------------------------
Block 0x7d
0x7e: v7e(0x75f7a36e) = CONST 
0x83: v83 = EQ v7e(0x75f7a36e) v1f
0x86b: v86b(0x87a) = CONST 
0x86c: JUMPI v86b(0x87a) v83
----------------------------------

Begin block 0x88
prev = {'0x7d'}, next = {'0x87d', '0x93'}
----------------------------------
Block 0x88
0x89: v89(0x8da5cb5b) = CONST 
0x8e: v8e = EQ v89(0x8da5cb5b) v1f
0x86d: v86d(0x87d) = CONST 
0x86e: JUMPI v86d(0x87d) v8e
----------------------------------

Begin block 0x93
prev = {'0x88'}, next = {'0x880', '0x871'}
----------------------------------
Block 0x93
0x94: v94(0x8f32d59b) = CONST 
0x99: v99 = EQ v94(0x8f32d59b) v1f
0x86f: v86f(0x880) = CONST 
0x870: JUMPI v86f(0x880) v99
----------------------------------

Begin block 0x9e
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x9e
0x9f: v9f(0x0) = CONST 
0xa2: REVERT v9f(0x0) v9f(0x0)
----------------------------------

Begin block 0x9e0x0
prev = {'0x62', '0x871'}, next = {}
----------------------------------
Block 0x9e0x0
0x9f0x0: v09f(0x0) = CONST 
0xa20x0: REVERT v09f(0x0) v09f(0x0)
----------------------------------

Begin block 0xa3
prev = {}, next = {'0x29e'}
----------------------------------
function 0x18b8e787()
Block 0xa3
0xa4: va4(0xab) = CONST 
0xa7: va7(0x29e) = CONST 
0xaa: JUMP va7(0x29e)
----------------------------------

Begin block 0xab0xa3
prev = {'0x29e'}, next = {}
----------------------------------
Block 0xab0xa3
0xac0xa3: va3ac(0x40) = CONST 
0xaf0xa3: va3af = MLOAD va3ac(0x40)
0xb00xa3: va3b0(0x1) = CONST 
0xb20xa3: va3b2(0x1) = CONST 
0xb40xa3: va3b4(0xa0) = CONST 
0xb60xa3: va3b6(0x10000000000000000000000000000000000000000) = SHL va3b4(0xa0) va3b2(0x1)
0xb70xa3: va3b7(0xffffffffffffffffffffffffffffffffffffffff) = SUB va3b6(0x10000000000000000000000000000000000000000) va3b0(0x1)
0xba0xa3: va3ba = AND v2aa va3b7(0xffffffffffffffffffffffffffffffffffffffff)
0xbc0xa3: MSTORE va3af va3ba
0xbd0xa3: va3bd = MLOAD va3ac(0x40)
0xc10xa3: va3c1 = SUB va3af va3bd
0xc20xa3: va3c2(0x20) = CONST 
0xc40xa3: va3c4 = ADD va3c2(0x20) va3c1
0xc60xa3: RETURN va3bd va3c4
----------------------------------

Begin block 0xab0xd1
prev = {'0x350'}, next = {}
----------------------------------
Block 0xab0xd1
0xac0xd1: vd1ac(0x40) = CONST 
0xaf0xd1: vd1af = MLOAD vd1ac(0x40)
0xb00xd1: vd1b0(0x1) = CONST 
0xb20xd1: vd1b2(0x1) = CONST 
0xb40xd1: vd1b4(0xa0) = CONST 
0xb60xd1: vd1b6(0x10000000000000000000000000000000000000000) = SHL vd1b4(0xa0) vd1b2(0x1)
0xb70xd1: vd1b7(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd1b6(0x10000000000000000000000000000000000000000) vd1b0(0x1)
0xba0xd1: vd1ba = AND v35c vd1b7(0xffffffffffffffffffffffffffffffffffffffff)
0xbc0xd1: MSTORE vd1af vd1ba
0xbd0xd1: vd1bd = MLOAD vd1ac(0x40)
0xc10xd1: vd1c1 = SUB vd1af vd1bd
0xc20xd1: vd1c2(0x20) = CONST 
0xc40xd1: vd1c4 = ADD vd1c2(0x20) vd1c1
0xc60xd1: RETURN vd1bd vd1c4
----------------------------------

Begin block 0xab0xd9
prev = {'0x35f'}, next = {}
----------------------------------
Block 0xab0xd9
0xac0xd9: vd9ac(0x40) = CONST 
0xaf0xd9: vd9af = MLOAD vd9ac(0x40)
0xb00xd9: vd9b0(0x1) = CONST 
0xb20xd9: vd9b2(0x1) = CONST 
0xb40xd9: vd9b4(0xa0) = CONST 
0xb60xd9: vd9b6(0x10000000000000000000000000000000000000000) = SHL vd9b4(0xa0) vd9b2(0x1)
0xb70xd9: vd9b7(0xffffffffffffffffffffffffffffffffffffffff) = SUB vd9b6(0x10000000000000000000000000000000000000000) vd9b0(0x1)
0xba0xd9: vd9ba = AND v36b vd9b7(0xffffffffffffffffffffffffffffffffffffffff)
0xbc0xd9: MSTORE vd9af vd9ba
0xbd0xd9: vd9bd = MLOAD vd9ac(0x40)
0xc10xd9: vd9c1 = SUB vd9af vd9bd
0xc20xd9: vd9c2(0x20) = CONST 
0xc40xd9: vd9c4 = ADD vd9c2(0x20) vd9c1
0xc60xd9: RETURN vd9bd vd9c4
----------------------------------

Begin block 0xab0xfd
prev = {'0x392'}, next = {}
----------------------------------
Block 0xab0xfd
0xac0xfd: vfdac(0x40) = CONST 
0xaf0xfd: vfdaf = MLOAD vfdac(0x40)
0xb00xfd: vfdb0(0x1) = CONST 
0xb20xfd: vfdb2(0x1) = CONST 
0xb40xfd: vfdb4(0xa0) = CONST 
0xb60xfd: vfdb6(0x10000000000000000000000000000000000000000) = SHL vfdb4(0xa0) vfdb2(0x1)
0xb70xfd: vfdb7(0xffffffffffffffffffffffffffffffffffffffff) = SUB vfdb6(0x10000000000000000000000000000000000000000) vfdb0(0x1)
0xba0xfd: vfdba = AND v39e vfdb7(0xffffffffffffffffffffffffffffffffffffffff)
0xbc0xfd: MSTORE vfdaf vfdba
0xbd0xfd: vfdbd = MLOAD vfdac(0x40)
0xc10xfd: vfdc1 = SUB vfdaf vfdbd
0xc20xfd: vfdc2(0x20) = CONST 
0xc40xfd: vfdc4 = ADD vfdc2(0x20) vfdc1
0xc60xfd: RETURN vfdbd vfdc4
----------------------------------

Begin block 0xab0x12b
prev = {'0x63b'}, next = {}
----------------------------------
Block 0xab0x12b
0xac0x12b: v12bac(0x40) = CONST 
0xaf0x12b: v12baf = MLOAD v12bac(0x40)
0xb00x12b: v12bb0(0x1) = CONST 
0xb20x12b: v12bb2(0x1) = CONST 
0xb40x12b: v12bb4(0xa0) = CONST 
0xb60x12b: v12bb6(0x10000000000000000000000000000000000000000) = SHL v12bb4(0xa0) v12bb2(0x1)
0xb70x12b: v12bb7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v12bb6(0x10000000000000000000000000000000000000000) v12bb0(0x1)
0xba0x12b: v12bba = AND v451_0 v12bb7(0xffffffffffffffffffffffffffffffffffffffff)
0xbc0x12b: MSTORE v12baf v12bba
0xbd0x12b: v12bbd = MLOAD v12bac(0x40)
0xc10x12b: v12bc1 = SUB v12baf v12bbd
0xc20x12b: v12bc2(0x20) = CONST 
0xc40x12b: v12bc4 = ADD v12bc2(0x20) v12bc1
0xc60x12b: RETURN v12bbd v12bc4
----------------------------------

Begin block 0xab0x270
prev = {'0x68a'}, next = {}
----------------------------------
Block 0xab0x270
0xac0x270: v270ac(0x40) = CONST 
0xaf0x270: v270af = MLOAD v270ac(0x40)
0xb00x270: v270b0(0x1) = CONST 
0xb20x270: v270b2(0x1) = CONST 
0xb40x270: v270b4(0xa0) = CONST 
0xb60x270: v270b6(0x10000000000000000000000000000000000000000) = SHL v270b4(0xa0) v270b2(0x1)
0xb70x270: v270b7(0xffffffffffffffffffffffffffffffffffffffff) = SUB v270b6(0x10000000000000000000000000000000000000000) v270b0(0x1)
0xba0x270: v270ba = AND v68b(0x6b175474e89094c44da98b954eedeac495271d0f) v270b7(0xffffffffffffffffffffffffffffffffffffffff)
0xbc0x270: MSTORE v270af v270ba
0xbd0x270: v270bd = MLOAD v270ac(0x40)
0xc10x270: v270c1 = SUB v270af v270bd
0xc20x270: v270c2(0x20) = CONST 
0xc40x270: v270c4 = ADD v270c2(0x20) v270c1
0xc60x270: RETURN v270bd v270c4
----------------------------------

Begin block 0xc7
prev = {}, next = {'0x2ad'}
----------------------------------
function renounceOwnership()()
Block 0xc7
0xc8: vc8(0xcf) = CONST 
0xcb: vcb(0x2ad) = CONST 
0xce: JUMP vcb(0x2ad)
----------------------------------

Begin block 0xcf0xc7
prev = {'0x306'}, next = {}
----------------------------------
Block 0xcf0xc7
0xd00xc7: STOP 
----------------------------------

Begin block 0xcf0x105
prev = {'0x3fa'}, next = {}
----------------------------------
Block 0xcf0x105
0xd00x105: STOP 
----------------------------------

Begin block 0xcf0x278
prev = {'0x704'}, next = {}
----------------------------------
Block 0xcf0x278
0xd00x278: STOP 
----------------------------------

Begin block 0xd1
prev = {}, next = {'0x350'}
----------------------------------
function 0x75f7a36e()
Block 0xd1
0xd2: vd2(0xab) = CONST 
0xd5: vd5(0x350) = CONST 
0xd8: JUMP vd5(0x350)
----------------------------------

Begin block 0xd9
prev = {}, next = {'0x35f'}
----------------------------------
function owner()()
Block 0xd9
0xda: vda(0xab) = CONST 
0xdd: vdd(0x35f) = CONST 
0xe0: JUMP vdd(0x35f)
----------------------------------

Begin block 0xe1
prev = {}, next = {'0xe9'}
----------------------------------
function isOwner()()
Block 0xe1
0xe2: ve2(0xe9) = CONST 
0xe5: ve5(0x36e) = CONST 
0xe8: ve8_0 = CALLPRIVATE ve5(0x36e) ve2(0xe9)
----------------------------------

Begin block 0xe9
prev = {'0xe1'}, next = {}
----------------------------------
Block 0xe9
0xea: vea(0x40) = CONST 
0xed: ved = MLOAD vea(0x40)
0xef: vef = ISZERO ve8_0
0xf0: vf0 = ISZERO vef
0xf2: MSTORE ved vf0
0xf3: vf3 = MLOAD vea(0x40)
0xf7: vf7 = SUB ved vf3
0xf8: vf8(0x20) = CONST 
0xfa: vfa = ADD vf8(0x20) vf7
0xfc: RETURN vf3 vfa
----------------------------------

Begin block 0xfd
prev = {}, next = {'0x392'}
----------------------------------
function 0x97ee1144()
Block 0xfd
0xfe: vfe(0xab) = CONST 
0x101: v101(0x392) = CONST 
0x104: JUMP v101(0x392)
----------------------------------

Begin block 0x105
prev = {}, next = {'0x11b', '0x117'}
----------------------------------
function 0xa5a9504e()
Block 0x105
0x106: v106(0xcf) = CONST 
0x109: v109(0x4) = CONST 
0x10c: v10c = CALLDATASIZE 
0x10d: v10d = SUB v10c v109(0x4)
0x10e: v10e(0x20) = CONST 
0x111: v111 = LT v10d v10e(0x20)
0x112: v112 = ISZERO v111
0x113: v113(0x11b) = CONST 
0x116: JUMPI v113(0x11b) v112
----------------------------------

Begin block 0x117
prev = {'0x105'}, next = {}
----------------------------------
Block 0x117
0x117: v117(0x0) = CONST 
0x11a: REVERT v117(0x0) v117(0x0)
----------------------------------

Begin block 0x11b
prev = {'0x105'}, next = {'0x3a1'}
----------------------------------
Block 0x11b
0x11d: v11d = CALLDATALOAD v109(0x4)
0x11e: v11e(0x1) = CONST 
0x120: v120(0x1) = CONST 
0x122: v122(0xa0) = CONST 
0x124: v124(0x10000000000000000000000000000000000000000) = SHL v122(0xa0) v120(0x1)
0x125: v125(0xffffffffffffffffffffffffffffffffffffffff) = SUB v124(0x10000000000000000000000000000000000000000) v11e(0x1)
0x126: v126 = AND v125(0xffffffffffffffffffffffffffffffffffffffff) v11d
0x127: v127(0x3a1) = CONST 
0x12a: JUMP v127(0x3a1)
----------------------------------

Begin block 0x12b
prev = {}, next = {'0x13d', '0x141'}
----------------------------------
function 0xb46b8396()
Block 0x12b
0x12c: v12c(0xab) = CONST 
0x12f: v12f(0x4) = CONST 
0x132: v132 = CALLDATASIZE 
0x133: v133 = SUB v132 v12f(0x4)
0x134: v134(0xa0) = CONST 
0x137: v137 = LT v133 v134(0xa0)
0x138: v138 = ISZERO v137
0x139: v139(0x141) = CONST 
0x13c: JUMPI v139(0x141) v138
----------------------------------

Begin block 0x13d
prev = {'0x12b'}, next = {}
----------------------------------
Block 0x13d
0x13d: v13d(0x0) = CONST 
0x140: REVERT v13d(0x0) v13d(0x0)
----------------------------------

Begin block 0x141
prev = {'0x12b'}, next = {'0x168', '0x16c'}
----------------------------------
Block 0x141
0x142: v142(0x1) = CONST 
0x144: v144(0x1) = CONST 
0x146: v146(0xa0) = CONST 
0x148: v148(0x10000000000000000000000000000000000000000) = SHL v146(0xa0) v144(0x1)
0x149: v149(0xffffffffffffffffffffffffffffffffffffffff) = SUB v148(0x10000000000000000000000000000000000000000) v142(0x1)
0x14b: v14b = CALLDATALOAD v12f(0x4)
0x14c: v14c = AND v14b v149(0xffffffffffffffffffffffffffffffffffffffff)
0x150: v150 = ADD v12f(0x4) v133
0x152: v152(0x40) = CONST 
0x155: v155 = ADD v12f(0x4) v152(0x40)
0x156: v156(0x20) = CONST 
0x159: v159 = ADD v12f(0x4) v156(0x20)
0x15a: v15a = CALLDATALOAD v159
0x15b: v15b(0x100000000) = CONST 
0x162: v162 = GT v15a v15b(0x100000000)
0x163: v163 = ISZERO v162
0x164: v164(0x16c) = CONST 
0x167: JUMPI v164(0x16c) v163
----------------------------------

Begin block 0x168
prev = {'0x141'}, next = {}
----------------------------------
Block 0x168
0x168: v168(0x0) = CONST 
0x16b: REVERT v168(0x0) v168(0x0)
----------------------------------

Begin block 0x16c
prev = {'0x141'}, next = {'0x17a', '0x17e'}
----------------------------------
Block 0x16c
0x16e: v16e = ADD v12f(0x4) v15a
0x170: v170(0x20) = CONST 
0x173: v173 = ADD v16e v170(0x20)
0x174: v174 = GT v173 v150
0x175: v175 = ISZERO v174
0x176: v176(0x17e) = CONST 
0x179: JUMPI v176(0x17e) v175
----------------------------------

Begin block 0x17a
prev = {'0x16c'}, next = {}
----------------------------------
Block 0x17a
0x17a: v17a(0x0) = CONST 
0x17d: REVERT v17a(0x0) v17a(0x0)
----------------------------------

Begin block 0x17e
prev = {'0x16c'}, next = {'0x19c', '0x1a0'}
----------------------------------
Block 0x17e
0x180: v180 = CALLDATALOAD v16e
0x182: v182(0x20) = CONST 
0x184: v184 = ADD v182(0x20) v16e
0x187: v187(0x1) = CONST 
0x18a: v18a = MUL v180 v187(0x1)
0x18c: v18c = ADD v184 v18a
0x18d: v18d = GT v18c v150
0x18e: v18e(0x100000000) = CONST 
0x195: v195 = GT v180 v18e(0x100000000)
0x196: v196 = OR v195 v18d
0x197: v197 = ISZERO v196
0x198: v198(0x1a0) = CONST 
0x19b: JUMPI v198(0x1a0) v197
----------------------------------

Begin block 0x19c
prev = {'0x17e'}, next = {}
----------------------------------
Block 0x19c
0x19c: v19c(0x0) = CONST 
0x19f: REVERT v19c(0x0) v19c(0x0)
----------------------------------

Begin block 0x1a0
prev = {'0x17e'}, next = {'0x1ef', '0x1f3'}
----------------------------------
Block 0x1a0
0x1a5: v1a5(0x1f) = CONST 
0x1a7: v1a7 = ADD v1a5(0x1f) v180
0x1a8: v1a8(0x20) = CONST 
0x1ac: v1ac = DIV v1a7 v1a8(0x20)
0x1ad: v1ad = MUL v1ac v1a8(0x20)
0x1ae: v1ae(0x20) = CONST 
0x1b0: v1b0 = ADD v1ae(0x20) v1ad
0x1b1: v1b1(0x40) = CONST 
0x1b3: v1b3 = MLOAD v1b1(0x40)
0x1b6: v1b6 = ADD v1b3 v1b0
0x1b7: v1b7(0x40) = CONST 
0x1b9: MSTORE v1b7(0x40) v1b6
0x1c1: MSTORE v1b3 v180
0x1c2: v1c2(0x20) = CONST 
0x1c4: v1c4 = ADD v1c2(0x20) v1b3
0x1ca: CALLDATACOPY v1c4 v184 v180
0x1cb: v1cb(0x0) = CONST 
0x1ce: v1ce = ADD v1c4 v180
0x1d2: MSTORE v1ce v1cb(0x0)
0x1d8: v1d8(0x20) = CONST 
0x1db: v1db = ADD v155 v1d8(0x20)
0x1de: v1de = CALLDATALOAD v155
0x1e2: v1e2(0x100000000) = CONST 
0x1e9: v1e9 = GT v1de v1e2(0x100000000)
0x1ea: v1ea = ISZERO v1e9
0x1eb: v1eb(0x1f3) = CONST 
0x1ee: JUMPI v1eb(0x1f3) v1ea
----------------------------------

Begin block 0x1ef
prev = {'0x1a0'}, next = {}
----------------------------------
Block 0x1ef
0x1ef: v1ef(0x0) = CONST 
0x1f2: REVERT v1ef(0x0) v1ef(0x0)
----------------------------------

Begin block 0x1f3
prev = {'0x1a0'}, next = {'0x201', '0x205'}
----------------------------------
Block 0x1f3
0x1f5: v1f5 = ADD v12f(0x4) v1de
0x1f7: v1f7(0x20) = CONST 
0x1fa: v1fa = ADD v1f5 v1f7(0x20)
0x1fb: v1fb = GT v1fa v150
0x1fc: v1fc = ISZERO v1fb
0x1fd: v1fd(0x205) = CONST 
0x200: JUMPI v1fd(0x205) v1fc
----------------------------------

Begin block 0x201
prev = {'0x1f3'}, next = {}
----------------------------------
Block 0x201
0x201: v201(0x0) = CONST 
0x204: REVERT v201(0x0) v201(0x0)
----------------------------------

Begin block 0x205
prev = {'0x1f3'}, next = {'0x227', '0x223'}
----------------------------------
Block 0x205
0x207: v207 = CALLDATALOAD v1f5
0x209: v209(0x20) = CONST 
0x20b: v20b = ADD v209(0x20) v1f5
0x20e: v20e(0x1) = CONST 
0x211: v211 = MUL v207 v20e(0x1)
0x213: v213 = ADD v20b v211
0x214: v214 = GT v213 v150
0x215: v215(0x100000000) = CONST 
0x21c: v21c = GT v207 v215(0x100000000)
0x21d: v21d = OR v21c v214
0x21e: v21e = ISZERO v21d
0x21f: v21f(0x227) = CONST 
0x222: JUMPI v21f(0x227) v21e
----------------------------------

Begin block 0x223
prev = {'0x205'}, next = {}
----------------------------------
Block 0x223
0x223: v223(0x0) = CONST 
0x226: REVERT v223(0x0) v223(0x0)
----------------------------------

Begin block 0x227
prev = {'0x205'}, next = {'0x41c'}
----------------------------------
Block 0x227
0x22c: v22c(0x1f) = CONST 
0x22e: v22e = ADD v22c(0x1f) v207
0x22f: v22f(0x20) = CONST 
0x233: v233 = DIV v22e v22f(0x20)
0x234: v234 = MUL v233 v22f(0x20)
0x235: v235(0x20) = CONST 
0x237: v237 = ADD v235(0x20) v234
0x238: v238(0x40) = CONST 
0x23a: v23a = MLOAD v238(0x40)
0x23d: v23d = ADD v23a v237
0x23e: v23e(0x40) = CONST 
0x240: MSTORE v23e(0x40) v23d
0x248: MSTORE v23a v207
0x249: v249(0x20) = CONST 
0x24b: v24b = ADD v249(0x20) v23a
0x251: CALLDATACOPY v24b v20b v207
0x252: v252(0x0) = CONST 
0x255: v255 = ADD v24b v207
0x259: MSTORE v255 v252(0x0)
0x25f: v25f(0xff) = CONST 
0x262: v262 = CALLDATALOAD v1db
0x263: v263 = AND v262 v25f(0xff)
0x268: v268(0x20) = CONST 
0x26a: v26a = ADD v268(0x20) v1db
0x26b: v26b = CALLDATALOAD v26a
0x26c: v26c(0x41c) = CONST 
0x26f: JUMP v26c(0x41c)
----------------------------------

Begin block 0x270
prev = {}, next = {'0x68a'}
----------------------------------
function DAI_ADDR()()
Block 0x270
0x271: v271(0xab) = CONST 
0x274: v274(0x68a) = CONST 
0x277: JUMP v274(0x68a)
----------------------------------

Begin block 0x278
prev = {}, next = {'0x28a', '0x28e'}
----------------------------------
function transferOwnership(address)()
Block 0x278
0x279: v279(0xcf) = CONST 
0x27c: v27c(0x4) = CONST 
0x27f: v27f = CALLDATASIZE 
0x280: v280 = SUB v27f v27c(0x4)
0x281: v281(0x20) = CONST 
0x284: v284 = LT v280 v281(0x20)
0x285: v285 = ISZERO v284
0x286: v286(0x28e) = CONST 
0x289: JUMPI v286(0x28e) v285
----------------------------------

Begin block 0x28a
prev = {'0x278'}, next = {}
----------------------------------
Block 0x28a
0x28a: v28a(0x0) = CONST 
0x28d: REVERT v28a(0x0) v28a(0x0)
----------------------------------

Begin block 0x28e
prev = {'0x278'}, next = {'0x6a2'}
----------------------------------
Block 0x28e
0x290: v290 = CALLDATALOAD v27c(0x4)
0x291: v291(0x1) = CONST 
0x293: v293(0x1) = CONST 
0x295: v295(0xa0) = CONST 
0x297: v297(0x10000000000000000000000000000000000000000) = SHL v295(0xa0) v293(0x1)
0x298: v298(0xffffffffffffffffffffffffffffffffffffffff) = SUB v297(0x10000000000000000000000000000000000000000) v291(0x1)
0x299: v299 = AND v298(0xffffffffffffffffffffffffffffffffffffffff) v290
0x29a: v29a(0x6a2) = CONST 
0x29d: JUMP v29a(0x6a2)
----------------------------------

Begin block 0x29e
prev = {'0xa3'}, next = {'0xab0xa3'}
----------------------------------
Block 0x29e
0x29f: v29f(0x1) = CONST 
0x2a1: v2a1 = SLOAD v29f(0x1)
0x2a2: v2a2(0x1) = CONST 
0x2a4: v2a4(0x1) = CONST 
0x2a6: v2a6(0xa0) = CONST 
0x2a8: v2a8(0x10000000000000000000000000000000000000000) = SHL v2a6(0xa0) v2a4(0x1)
0x2a9: v2a9(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2a8(0x10000000000000000000000000000000000000000) v2a2(0x1)
0x2aa: v2aa = AND v2a9(0xffffffffffffffffffffffffffffffffffffffff) v2a1
0x2ac: JUMP va4(0xab)
----------------------------------

Begin block 0x2ad
prev = {'0xc7'}, next = {'0x2b5'}
----------------------------------
Block 0x2ad
0x2ae: v2ae(0x2b5) = CONST 
0x2b1: v2b1(0x36e) = CONST 
0x2b4: v2b4_0 = CALLPRIVATE v2b1(0x36e) v2ae(0x2b5)
----------------------------------

Begin block 0x2b5
prev = {'0x2ad'}, next = {'0x2ba', '0x306'}
----------------------------------
Block 0x2b5
0x2b6: v2b6(0x306) = CONST 
0x2b9: JUMPI v2b6(0x306) v2b4_0
----------------------------------

Begin block 0x2ba
prev = {'0x2b5'}, next = {}
----------------------------------
Block 0x2ba
0x2ba: v2ba(0x40) = CONST 
0x2bd: v2bd = MLOAD v2ba(0x40)
0x2be: v2be(0x461bcd) = CONST 
0x2c2: v2c2(0xe5) = CONST 
0x2c4: v2c4(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v2c2(0xe5) v2be(0x461bcd)
0x2c6: MSTORE v2bd v2c4(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x2c7: v2c7(0x20) = CONST 
0x2c9: v2c9(0x4) = CONST 
0x2cc: v2cc = ADD v2bd v2c9(0x4)
0x2cf: MSTORE v2cc v2c7(0x20)
0x2d0: v2d0(0x24) = CONST 
0x2d3: v2d3 = ADD v2bd v2d0(0x24)
0x2d4: MSTORE v2d3 v2c7(0x20)
0x2d5: v2d5(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x2f6: v2f6(0x44) = CONST 
0x2f9: v2f9 = ADD v2bd v2f6(0x44)
0x2fa: MSTORE v2f9 v2d5(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x2fc: v2fc = MLOAD v2ba(0x40)
0x300: v300 = SUB v2bd v2fc
0x301: v301(0x64) = CONST 
0x303: v303 = ADD v301(0x64) v300
0x305: REVERT v2fc v303
----------------------------------

Begin block 0x306
prev = {'0x2b5'}, next = {'0xcf0xc7'}
----------------------------------
Block 0x306
0x307: v307(0x0) = CONST 
0x30a: v30a = SLOAD v307(0x0)
0x30b: v30b(0x40) = CONST 
0x30d: v30d = MLOAD v30b(0x40)
0x30e: v30e(0x1) = CONST 
0x310: v310(0x1) = CONST 
0x312: v312(0xa0) = CONST 
0x314: v314(0x10000000000000000000000000000000000000000) = SHL v312(0xa0) v310(0x1)
0x315: v315(0xffffffffffffffffffffffffffffffffffffffff) = SUB v314(0x10000000000000000000000000000000000000000) v30e(0x1)
0x318: v318 = AND v30a v315(0xffffffffffffffffffffffffffffffffffffffff)
0x31a: v31a(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x33e: LOG3 v30d v307(0x0) v31a(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v318 v307(0x0)
0x33f: v33f(0x0) = CONST 
0x342: v342 = SLOAD v33f(0x0)
0x343: v343(0x1) = CONST 
0x345: v345(0x1) = CONST 
0x347: v347(0xa0) = CONST 
0x349: v349(0x10000000000000000000000000000000000000000) = SHL v347(0xa0) v345(0x1)
0x34a: v34a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v349(0x10000000000000000000000000000000000000000) v343(0x1)
0x34b: v34b(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v34a(0xffffffffffffffffffffffffffffffffffffffff)
0x34c: v34c = AND v34b(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v342
0x34e: SSTORE v33f(0x0) v34c
0x34f: JUMP vc8(0xcf)
----------------------------------

Begin block 0x350
prev = {'0xd1'}, next = {'0xab0xd1'}
----------------------------------
Block 0x350
0x351: v351(0x2) = CONST 
0x353: v353 = SLOAD v351(0x2)
0x354: v354(0x1) = CONST 
0x356: v356(0x1) = CONST 
0x358: v358(0xa0) = CONST 
0x35a: v35a(0x10000000000000000000000000000000000000000) = SHL v358(0xa0) v356(0x1)
0x35b: v35b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v35a(0x10000000000000000000000000000000000000000) v354(0x1)
0x35c: v35c = AND v35b(0xffffffffffffffffffffffffffffffffffffffff) v353
0x35e: JUMP vd2(0xab)
----------------------------------

Begin block 0x35f
prev = {'0xd9'}, next = {'0xab0xd9'}
----------------------------------
Block 0x35f
0x360: v360(0x0) = CONST 
0x362: v362 = SLOAD v360(0x0)
0x363: v363(0x1) = CONST 
0x365: v365(0x1) = CONST 
0x367: v367(0xa0) = CONST 
0x369: v369(0x10000000000000000000000000000000000000000) = SHL v367(0xa0) v365(0x1)
0x36a: v36a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v369(0x10000000000000000000000000000000000000000) v363(0x1)
0x36b: v36b = AND v36a(0xffffffffffffffffffffffffffffffffffffffff) v362
0x36d: JUMP vda(0xab)
----------------------------------

Begin block 0x36e
prev = {}, next = {'0x707'}
----------------------------------
function 0x36e(v36earg0)
Block 0x36e
0x36f: v36f(0x0) = CONST 
0x372: v372 = SLOAD v36f(0x0)
0x373: v373(0x1) = CONST 
0x375: v375(0x1) = CONST 
0x377: v377(0xa0) = CONST 
0x379: v379(0x10000000000000000000000000000000000000000) = SHL v377(0xa0) v375(0x1)
0x37a: v37a(0xffffffffffffffffffffffffffffffffffffffff) = SUB v379(0x10000000000000000000000000000000000000000) v373(0x1)
0x37b: v37b = AND v37a(0xffffffffffffffffffffffffffffffffffffffff) v372
0x37c: v37c(0x383) = CONST 
0x37f: v37f(0x707) = CONST 
0x382: JUMP v37f(0x707)
----------------------------------

Begin block 0x383
prev = {'0x707'}, next = {}
----------------------------------
Block 0x383
0x384: v384(0x1) = CONST 
0x386: v386(0x1) = CONST 
0x388: v388(0xa0) = CONST 
0x38a: v38a(0x10000000000000000000000000000000000000000) = SHL v388(0xa0) v386(0x1)
0x38b: v38b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v38a(0x10000000000000000000000000000000000000000) v384(0x1)
0x38c: v38c = AND v38b(0xffffffffffffffffffffffffffffffffffffffff) v708
0x38d: v38d = EQ v38c v37b
0x391: RETURNPRIVATE v36earg0 v38d
----------------------------------

Begin block 0x392
prev = {'0xfd'}, next = {'0xab0xfd'}
----------------------------------
Block 0x392
0x393: v393(0x3) = CONST 
0x395: v395 = SLOAD v393(0x3)
0x396: v396(0x1) = CONST 
0x398: v398(0x1) = CONST 
0x39a: v39a(0xa0) = CONST 
0x39c: v39c(0x10000000000000000000000000000000000000000) = SHL v39a(0xa0) v398(0x1)
0x39d: v39d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v39c(0x10000000000000000000000000000000000000000) v396(0x1)
0x39e: v39e = AND v39d(0xffffffffffffffffffffffffffffffffffffffff) v395
0x3a0: JUMP vfe(0xab)
----------------------------------

Begin block 0x3a1
prev = {'0x11b'}, next = {'0x3a9'}
----------------------------------
Block 0x3a1
0x3a2: v3a2(0x3a9) = CONST 
0x3a5: v3a5(0x36e) = CONST 
0x3a8: v3a8_0 = CALLPRIVATE v3a5(0x36e) v3a2(0x3a9)
----------------------------------

Begin block 0x3a9
prev = {'0x3a1'}, next = {'0x3ae', '0x3fa'}
----------------------------------
Block 0x3a9
0x3aa: v3aa(0x3fa) = CONST 
0x3ad: JUMPI v3aa(0x3fa) v3a8_0
----------------------------------

Begin block 0x3ae
prev = {'0x3a9'}, next = {}
----------------------------------
Block 0x3ae
0x3ae: v3ae(0x40) = CONST 
0x3b1: v3b1 = MLOAD v3ae(0x40)
0x3b2: v3b2(0x461bcd) = CONST 
0x3b6: v3b6(0xe5) = CONST 
0x3b8: v3b8(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v3b6(0xe5) v3b2(0x461bcd)
0x3ba: MSTORE v3b1 v3b8(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x3bb: v3bb(0x20) = CONST 
0x3bd: v3bd(0x4) = CONST 
0x3c0: v3c0 = ADD v3b1 v3bd(0x4)
0x3c3: MSTORE v3c0 v3bb(0x20)
0x3c4: v3c4(0x24) = CONST 
0x3c7: v3c7 = ADD v3b1 v3c4(0x24)
0x3c8: MSTORE v3c7 v3bb(0x20)
0x3c9: v3c9(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x3ea: v3ea(0x44) = CONST 
0x3ed: v3ed = ADD v3b1 v3ea(0x44)
0x3ee: MSTORE v3ed v3c9(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x3f0: v3f0 = MLOAD v3ae(0x40)
0x3f4: v3f4 = SUB v3b1 v3f0
0x3f5: v3f5(0x64) = CONST 
0x3f7: v3f7 = ADD v3f5(0x64) v3f4
0x3f9: REVERT v3f0 v3f7
----------------------------------

Begin block 0x3fa
prev = {'0x3a9'}, next = {'0xcf0x105'}
----------------------------------
Block 0x3fa
0x3fb: v3fb(0x3) = CONST 
0x3fe: v3fe = SLOAD v3fb(0x3)
0x3ff: v3ff(0x1) = CONST 
0x401: v401(0x1) = CONST 
0x403: v403(0xa0) = CONST 
0x405: v405(0x10000000000000000000000000000000000000000) = SHL v403(0xa0) v401(0x1)
0x406: v406(0xffffffffffffffffffffffffffffffffffffffff) = SUB v405(0x10000000000000000000000000000000000000000) v3ff(0x1)
0x407: v407(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v406(0xffffffffffffffffffffffffffffffffffffffff)
0x408: v408 = AND v407(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v3fe
0x409: v409(0x1) = CONST 
0x40b: v40b(0x1) = CONST 
0x40d: v40d(0xa0) = CONST 
0x40f: v40f(0x10000000000000000000000000000000000000000) = SHL v40d(0xa0) v40b(0x1)
0x410: v410(0xffffffffffffffffffffffffffffffffffffffff) = SUB v40f(0x10000000000000000000000000000000000000000) v409(0x1)
0x414: v414 = AND v410(0xffffffffffffffffffffffffffffffffffffffff) v126
0x418: v418 = OR v414 v408
0x41a: SSTORE v3fb(0x3) v418
0x41b: JUMP v106(0xcf)
----------------------------------

Begin block 0x41c
prev = {'0x227'}, next = {'0x436'}
----------------------------------
Block 0x41c
0x41d: v41d(0x2) = CONST 
0x41f: v41f = SLOAD v41d(0x2)
0x420: v420(0x0) = CONST 
0x425: v425(0x436) = CONST 
0x429: v429(0x1) = CONST 
0x42b: v42b(0x1) = CONST 
0x42d: v42d(0xa0) = CONST 
0x42f: v42f(0x10000000000000000000000000000000000000000) = SHL v42d(0xa0) v42b(0x1)
0x430: v430(0xffffffffffffffffffffffffffffffffffffffff) = SUB v42f(0x10000000000000000000000000000000000000000) v429(0x1)
0x431: v431 = AND v430(0xffffffffffffffffffffffffffffffffffffffff) v41f
0x432: v432(0x70b) = CONST 
0x435: v435_0 = CALLPRIVATE v432(0x70b) v431 v425(0x436)
----------------------------------

Begin block 0x436
prev = {'0x41c'}, next = {'0x452'}
----------------------------------
Block 0x436
0x437: v437(0x1) = CONST 
0x439: v439 = SLOAD v437(0x1)
0x43d: v43d(0x457) = CONST 
0x441: v441(0x452) = CONST 
0x445: v445(0x1) = CONST 
0x447: v447(0x1) = CONST 
0x449: v449(0xa0) = CONST 
0x44b: v44b(0x10000000000000000000000000000000000000000) = SHL v449(0xa0) v447(0x1)
0x44c: v44c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v44b(0x10000000000000000000000000000000000000000) v445(0x1)
0x44d: v44d = AND v44c(0xffffffffffffffffffffffffffffffffffffffff) v439
0x44e: v44e(0x70b) = CONST 
0x451: v451_0 = CALLPRIVATE v44e(0x70b) v44d v441(0x452)
----------------------------------

Begin block 0x452
prev = {'0x436'}, next = {'0x75d'}
----------------------------------
Block 0x452
0x453: v453(0x75d) = CONST 
0x456: JUMP v453(0x75d)
----------------------------------

Begin block 0x457
prev = {'0x75d'}, next = {'0x4c8'}
----------------------------------
Block 0x457
0x45b: v45b(0x1) = CONST 
0x45d: v45d(0x1) = CONST 
0x45f: v45f(0xa0) = CONST 
0x461: v461(0x10000000000000000000000000000000000000000) = SHL v45f(0xa0) v45d(0x1)
0x462: v462(0xffffffffffffffffffffffffffffffffffffffff) = SUB v461(0x10000000000000000000000000000000000000000) v45b(0x1)
0x463: v463 = AND v462(0xffffffffffffffffffffffffffffffffffffffff) v435_0
0x464: v464(0x3bf73798) = CONST 
0x46d: v46d(0x40) = CONST 
0x46f: v46f = MLOAD v46d(0x40)
0x471: v471(0xffffffff) = CONST 
0x476: v476(0x3bf73798) = AND v471(0xffffffff) v464(0x3bf73798)
0x477: v477(0xe0) = CONST 
0x479: v479(0x3bf7379800000000000000000000000000000000000000000000000000000000) = SHL v477(0xe0) v476(0x3bf73798)
0x47b: MSTORE v46f v479(0x3bf7379800000000000000000000000000000000000000000000000000000000)
0x47c: v47c(0x4) = CONST 
0x47e: v47e = ADD v47c(0x4) v46f
0x481: v481(0x1) = CONST 
0x483: v483(0x1) = CONST 
0x485: v485(0xa0) = CONST 
0x487: v487(0x10000000000000000000000000000000000000000) = SHL v485(0xa0) v483(0x1)
0x488: v488(0xffffffffffffffffffffffffffffffffffffffff) = SUB v487(0x10000000000000000000000000000000000000000) v481(0x1)
0x489: v489 = AND v488(0xffffffffffffffffffffffffffffffffffffffff) v451_0
0x48a: v48a(0x1) = CONST 
0x48c: v48c(0x1) = CONST 
0x48e: v48e(0xa0) = CONST 
0x490: v490(0x10000000000000000000000000000000000000000) = SHL v48e(0xa0) v48c(0x1)
0x491: v491(0xffffffffffffffffffffffffffffffffffffffff) = SUB v490(0x10000000000000000000000000000000000000000) v48a(0x1)
0x492: v492 = AND v491(0xffffffffffffffffffffffffffffffffffffffff) v489
0x494: MSTORE v47e v492
0x495: v495(0x20) = CONST 
0x497: v497 = ADD v495(0x20) v47e
0x499: v499(0x20) = CONST 
0x49b: v49b = ADD v499(0x20) v497
0x49d: v49d(0x20) = CONST 
0x49f: v49f = ADD v49d(0x20) v49b
0x4a1: v4a1(0xff) = CONST 
0x4a3: v4a3 = AND v4a1(0xff) v263
0x4a4: v4a4(0xff) = CONST 
0x4a6: v4a6 = AND v4a4(0xff) v4a3
0x4a8: MSTORE v49f v4a6
0x4a9: v4a9(0x20) = CONST 
0x4ab: v4ab = ADD v4a9(0x20) v49f
0x4ae: v4ae = SUB v4ab v47e
0x4b0: MSTORE v497 v4ae
0x4b4: v4b4 = MLOAD v1b3
0x4b6: MSTORE v4ab v4b4
0x4b7: v4b7(0x20) = CONST 
0x4b9: v4b9 = ADD v4b7(0x20) v4ab
0x4bd: v4bd = MLOAD v1b3
0x4bf: v4bf(0x20) = CONST 
0x4c1: v4c1 = ADD v4bf(0x20) v1b3
0x4c6: v4c6(0x0) = CONST 
----------------------------------

Begin block 0x4c8
prev = {'0x4d1', '0x457'}, next = {'0x4d1', '0x4e0'}
----------------------------------
Block 0x4c8
0x4c8_0x0: v4c8_0 = PHI v4c6(0x0) v4db
0x4cb: v4cb = LT v4c8_0 v4bd
0x4cc: v4cc = ISZERO v4cb
0x4cd: v4cd(0x4e0) = CONST 
0x4d0: JUMPI v4cd(0x4e0) v4cc
----------------------------------

Begin block 0x4d1
prev = {'0x4c8'}, next = {'0x4c8'}
----------------------------------
Block 0x4d1
0x4d1_0x0: v4d1_0 = PHI v4c6(0x0) v4db
0x4d3: v4d3 = ADD v4d1_0 v4c1
0x4d4: v4d4 = MLOAD v4d3
0x4d7: v4d7 = ADD v4d1_0 v4b9
0x4d8: MSTORE v4d7 v4d4
0x4d9: v4d9(0x20) = CONST 
0x4db: v4db = ADD v4d9(0x20) v4d1_0
0x4dc: v4dc(0x4c8) = CONST 
0x4df: JUMP v4dc(0x4c8)
----------------------------------

Begin block 0x4e0
prev = {'0x4c8'}, next = {'0x50d', '0x4f4'}
----------------------------------
Block 0x4e0
0x4e9: v4e9 = ADD v4bd v4b9
0x4eb: v4eb(0x1f) = CONST 
0x4ed: v4ed = AND v4eb(0x1f) v4bd
0x4ef: v4ef = ISZERO v4ed
0x4f0: v4f0(0x50d) = CONST 
0x4f3: JUMPI v4f0(0x50d) v4ef
----------------------------------

Begin block 0x4f4
prev = {'0x4e0'}, next = {'0x50d'}
----------------------------------
Block 0x4f4
0x4f6: v4f6 = SUB v4e9 v4ed
0x4f8: v4f8 = MLOAD v4f6
0x4f9: v4f9(0x1) = CONST 
0x4fc: v4fc(0x20) = CONST 
0x4fe: v4fe = SUB v4fc(0x20) v4ed
0x4ff: v4ff(0x100) = CONST 
0x502: v502 = EXP v4ff(0x100) v4fe
0x503: v503 = SUB v502 v4f9(0x1)
0x504: v504 = NOT v503
0x505: v505 = AND v504 v4f8
0x507: MSTORE v4f6 v505
0x508: v508(0x20) = CONST 
0x50a: v50a = ADD v508(0x20) v4f6
----------------------------------

Begin block 0x50d
prev = {'0x4f4', '0x4e0'}, next = {'0x528'}
----------------------------------
Block 0x50d
0x50d_0x1: v50d_1 = PHI v4e9 v50a
0x511: v511 = SUB v50d_1 v47e
0x513: MSTORE v49b v511
0x515: v515 = MLOAD v23a
0x517: MSTORE v50d_1 v515
0x519: v519 = MLOAD v23a
0x51a: v51a(0x20) = CONST 
0x51e: v51e = ADD v51a(0x20) v50d_1
0x521: v521 = ADD v23a v51a(0x20)
0x526: v526(0x0) = CONST 
----------------------------------

Begin block 0x528
prev = {'0x50d', '0x531'}, next = {'0x540', '0x531'}
----------------------------------
Block 0x528
0x528_0x0: v528_0 = PHI v526(0x0) v53b
0x52b: v52b = LT v528_0 v519
0x52c: v52c = ISZERO v52b
0x52d: v52d(0x540) = CONST 
0x530: JUMPI v52d(0x540) v52c
----------------------------------

Begin block 0x531
prev = {'0x528'}, next = {'0x528'}
----------------------------------
Block 0x531
0x531_0x0: v531_0 = PHI v526(0x0) v53b
0x533: v533 = ADD v531_0 v521
0x534: v534 = MLOAD v533
0x537: v537 = ADD v531_0 v51e
0x538: MSTORE v537 v534
0x539: v539(0x20) = CONST 
0x53b: v53b = ADD v539(0x20) v531_0
0x53c: v53c(0x528) = CONST 
0x53f: JUMP v53c(0x528)
----------------------------------

Begin block 0x540
prev = {'0x528'}, next = {'0x56d', '0x554'}
----------------------------------
Block 0x540
0x549: v549 = ADD v519 v51e
0x54b: v54b(0x1f) = CONST 
0x54d: v54d = AND v54b(0x1f) v519
0x54f: v54f = ISZERO v54d
0x550: v550(0x56d) = CONST 
0x553: JUMPI v550(0x56d) v54f
----------------------------------

Begin block 0x554
prev = {'0x540'}, next = {'0x56d'}
----------------------------------
Block 0x554
0x556: v556 = SUB v549 v54d
0x558: v558 = MLOAD v556
0x559: v559(0x1) = CONST 
0x55c: v55c(0x20) = CONST 
0x55e: v55e = SUB v55c(0x20) v54d
0x55f: v55f(0x100) = CONST 
0x562: v562 = EXP v55f(0x100) v55e
0x563: v563 = SUB v562 v559(0x1)
0x564: v564 = NOT v563
0x565: v565 = AND v564 v558
0x567: MSTORE v556 v565
0x568: v568(0x20) = CONST 
0x56a: v56a = ADD v568(0x20) v556
----------------------------------

Begin block 0x56d
prev = {'0x554', '0x540'}, next = {'0x590', '0x58c'}
----------------------------------
Block 0x56d
0x56d_0x1: v56d_1 = PHI v549 v56a
0x577: v577(0x0) = CONST 
0x579: v579(0x40) = CONST 
0x57b: v57b = MLOAD v579(0x40)
0x57e: v57e = SUB v56d_1 v57b
0x580: v580(0x0) = CONST 
0x584: v584 = EXTCODESIZE v463
0x585: v585 = ISZERO v584
0x587: v587 = ISZERO v585
0x588: v588(0x590) = CONST 
0x58b: JUMPI v588(0x590) v587
----------------------------------

Begin block 0x58c
prev = {'0x56d'}, next = {}
----------------------------------
Block 0x58c
0x58c: v58c(0x0) = CONST 
0x58f: REVERT v58c(0x0) v58c(0x0)
----------------------------------

Begin block 0x590
prev = {'0x56d'}, next = {'0x5a4', '0x59b'}
----------------------------------
Block 0x590
0x592: v592 = GAS 
0x593: v593 = CALL v592 v463 v580(0x0) v57b v57e v57b v577(0x0)
0x594: v594 = ISZERO v593
0x596: v596 = ISZERO v594
0x597: v597(0x5a4) = CONST 
0x59a: JUMPI v597(0x5a4) v596
----------------------------------

Begin block 0x59b
prev = {'0x590'}, next = {}
----------------------------------
Block 0x59b
0x59b: v59b = RETURNDATASIZE 
0x59c: v59c(0x0) = CONST 
0x59f: RETURNDATACOPY v59c(0x0) v59c(0x0) v59b
0x5a0: v5a0 = RETURNDATASIZE 
0x5a1: v5a1(0x0) = CONST 
0x5a3: REVERT v5a1(0x0) v5a0
----------------------------------

Begin block 0x5a4
prev = {'0x590'}, next = {'0x623', '0x627'}
----------------------------------
Block 0x5a4
0x5a7: v5a7(0x3) = CONST 
0x5a9: v5a9 = SLOAD v5a7(0x3)
0x5aa: v5aa(0x40) = CONST 
0x5ad: v5ad = MLOAD v5aa(0x40)
0x5ae: v5ae(0x5e9ab149) = CONST 
0x5b3: v5b3(0xe0) = CONST 
0x5b5: v5b5(0x5e9ab14900000000000000000000000000000000000000000000000000000000) = SHL v5b3(0xe0) v5ae(0x5e9ab149)
0x5b7: MSTORE v5ad v5b5(0x5e9ab14900000000000000000000000000000000000000000000000000000000)
0x5b8: v5b8(0x1) = CONST 
0x5ba: v5ba(0x1) = CONST 
0x5bc: v5bc(0xa0) = CONST 
0x5be: v5be(0x10000000000000000000000000000000000000000) = SHL v5bc(0xa0) v5ba(0x1)
0x5bf: v5bf(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5be(0x10000000000000000000000000000000000000000) v5b8(0x1)
0x5c2: v5c2 = AND v5bf(0xffffffffffffffffffffffffffffffffffffffff) v14c
0x5c3: v5c3(0x4) = CONST 
0x5c6: v5c6 = ADD v5ad v5c3(0x4)
0x5c7: MSTORE v5c6 v5c2
0x5c8: v5c8(0x6b175474e89094c44da98b954eedeac495271d0f) = CONST 
0x5dd: v5dd(0x24) = CONST 
0x5e0: v5e0 = ADD v5ad v5dd(0x24)
0x5e1: MSTORE v5e0 v5c8(0x6b175474e89094c44da98b954eedeac495271d0f)
0x5e4: v5e4 = AND v5bf(0xffffffffffffffffffffffffffffffffffffffff) v435_0
0x5e5: v5e5(0x44) = CONST 
0x5e8: v5e8 = ADD v5ad v5e5(0x44)
0x5e9: MSTORE v5e8 v5e4
0x5ec: v5ec = AND v5bf(0xffffffffffffffffffffffffffffffffffffffff) v5a9
0x5ed: v5ed(0x64) = CONST 
0x5f0: v5f0 = ADD v5ad v5ed(0x64)
0x5f1: MSTORE v5f0 v5ec
0x5f2: v5f2(0x84) = CONST 
0x5f5: v5f5 = ADD v5ad v5f2(0x84)
0x5f8: MSTORE v5f5 v26b
0x5fa: v5fa = MLOAD v5aa(0x40)
0x5fd: v5fd = AND v451_0 v5bf(0xffffffffffffffffffffffffffffffffffffffff)
0x600: v600(0x5e9ab149) = CONST 
0x607: v607(0xa4) = CONST 
0x60b: v60b = ADD v5ad v607(0xa4)
0x60d: v60d(0x0) = CONST 
0x615: v615 = SUB v5ad v5fa
0x616: v616 = ADD v615 v607(0xa4)
0x61b: v61b = EXTCODESIZE v5fd
0x61c: v61c = ISZERO v61b
0x61e: v61e = ISZERO v61c
0x61f: v61f(0x627) = CONST 
0x622: JUMPI v61f(0x627) v61e
----------------------------------

Begin block 0x623
prev = {'0x5a4'}, next = {}
----------------------------------
Block 0x623
0x623: v623(0x0) = CONST 
0x626: REVERT v623(0x0) v623(0x0)
----------------------------------

Begin block 0x627
prev = {'0x5a4'}, next = {'0x632', '0x63b'}
----------------------------------
Block 0x627
0x629: v629 = GAS 
0x62a: v62a = CALL v629 v5fd v60d(0x0) v5fa v616 v5fa v60d(0x0)
0x62b: v62b = ISZERO v62a
0x62d: v62d = ISZERO v62b
0x62e: v62e(0x63b) = CONST 
0x631: JUMPI v62e(0x63b) v62d
----------------------------------

Begin block 0x632
prev = {'0x627'}, next = {}
----------------------------------
Block 0x632
0x632: v632 = RETURNDATASIZE 
0x633: v633(0x0) = CONST 
0x636: RETURNDATACOPY v633(0x0) v633(0x0) v632
0x637: v637 = RETURNDATASIZE 
0x638: v638(0x0) = CONST 
0x63a: REVERT v638(0x0) v637
----------------------------------

Begin block 0x63b
prev = {'0x627'}, next = {'0xab0x12b'}
----------------------------------
Block 0x63b
0x63e: v63e(0x40) = CONST 
0x641: v641 = MLOAD v63e(0x40)
0x642: v642(0x1) = CONST 
0x644: v644(0x1) = CONST 
0x646: v646(0xa0) = CONST 
0x648: v648(0x10000000000000000000000000000000000000000) = SHL v646(0xa0) v644(0x1)
0x649: v649(0xffffffffffffffffffffffffffffffffffffffff) = SUB v648(0x10000000000000000000000000000000000000000) v642(0x1)
0x64c: v64c = AND v649(0xffffffffffffffffffffffffffffffffffffffff) v451_0
0x64e: MSTORE v641 v64c
0x650: v650 = MLOAD v63e(0x40)
0x653: v653 = AND v14c v649(0xffffffffffffffffffffffffffffffffffffffff)
0x656: v656(0xf93364663af25a207cb353ebda51278e556ea31036a651b535a9415b35734b6b) = CONST 
0x67b: v67b = SUB v641 v650
0x67c: v67c(0x20) = CONST 
0x67e: v67e = ADD v67c(0x20) v67b
0x680: LOG2 v650 v67e v656(0xf93364663af25a207cb353ebda51278e556ea31036a651b535a9415b35734b6b) v653
0x689: JUMP v12c(0xab)
----------------------------------

Begin block 0x68a
prev = {'0x270'}, next = {'0xab0x270'}
----------------------------------
Block 0x68a
0x68b: v68b(0x6b175474e89094c44da98b954eedeac495271d0f) = CONST 
0x6a1: JUMP v271(0xab)
----------------------------------

Begin block 0x6a2
prev = {'0x28e'}, next = {'0x6aa'}
----------------------------------
Block 0x6a2
0x6a3: v6a3(0x6aa) = CONST 
0x6a6: v6a6(0x36e) = CONST 
0x6a9: v6a9_0 = CALLPRIVATE v6a6(0x36e) v6a3(0x6aa)
----------------------------------

Begin block 0x6aa
prev = {'0x6a2'}, next = {'0x6fb', '0x6af'}
----------------------------------
Block 0x6aa
0x6ab: v6ab(0x6fb) = CONST 
0x6ae: JUMPI v6ab(0x6fb) v6a9_0
----------------------------------

Begin block 0x6af
prev = {'0x6aa'}, next = {}
----------------------------------
Block 0x6af
0x6af: v6af(0x40) = CONST 
0x6b2: v6b2 = MLOAD v6af(0x40)
0x6b3: v6b3(0x461bcd) = CONST 
0x6b7: v6b7(0xe5) = CONST 
0x6b9: v6b9(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v6b7(0xe5) v6b3(0x461bcd)
0x6bb: MSTORE v6b2 v6b9(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x6bc: v6bc(0x20) = CONST 
0x6be: v6be(0x4) = CONST 
0x6c1: v6c1 = ADD v6b2 v6be(0x4)
0x6c4: MSTORE v6c1 v6bc(0x20)
0x6c5: v6c5(0x24) = CONST 
0x6c8: v6c8 = ADD v6b2 v6c5(0x24)
0x6c9: MSTORE v6c8 v6bc(0x20)
0x6ca: v6ca(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572) = CONST 
0x6eb: v6eb(0x44) = CONST 
0x6ee: v6ee = ADD v6b2 v6eb(0x44)
0x6ef: MSTORE v6ee v6ca(0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572)
0x6f1: v6f1 = MLOAD v6af(0x40)
0x6f5: v6f5 = SUB v6b2 v6f1
0x6f6: v6f6(0x64) = CONST 
0x6f8: v6f8 = ADD v6f6(0x64) v6f5
0x6fa: REVERT v6f1 v6f8
----------------------------------

Begin block 0x6fb
prev = {'0x6aa'}, next = {'0x760'}
----------------------------------
Block 0x6fb
0x6fc: v6fc(0x704) = CONST 
0x700: v700(0x760) = CONST 
0x703: JUMP v700(0x760)
----------------------------------

Begin block 0x704
prev = {'0x7a5'}, next = {'0xcf0x278'}
----------------------------------
Block 0x704
0x706: JUMP v279(0xcf)
----------------------------------

Begin block 0x707
prev = {'0x36e'}, next = {'0x383'}
----------------------------------
Block 0x707
0x708: v708 = CALLER 
0x70a: JUMP v37c(0x383)
----------------------------------

Begin block 0x70b
prev = {}, next = {}
----------------------------------
function 0x70b(v70barg0, v70barg1)
Block 0x70b
0x70c: v70c(0x0) = CONST 
0x710: v710(0x60) = CONST 
0x712: v712 = SHL v710(0x60) v70barg0
0x715: v715(0x40) = CONST 
0x717: v717 = MLOAD v715(0x40)
0x718: v718(0x3d602d80600a3d3981f3363d3d373d3d3d363d73) = CONST 
0x72d: v72d(0x60) = CONST 
0x72f: v72f(0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) = SHL v72d(0x60) v718(0x3d602d80600a3d3981f3363d3d373d3d3d363d73)
0x731: MSTORE v717 v72f(0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)
0x733: v733(0x14) = CONST 
0x736: v736 = ADD v717 v733(0x14)
0x737: MSTORE v736 v712
0x738: v738(0x5af43d82803e903d91602b57fd5bf3) = CONST 
0x748: v748(0x88) = CONST 
0x74a: v74a(0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) = SHL v748(0x88) v738(0x5af43d82803e903d91602b57fd5bf3)
0x74b: v74b(0x28) = CONST 
0x74e: v74e = ADD v717 v74b(0x28)
0x74f: MSTORE v74e v74a(0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)
0x750: v750(0x37) = CONST 
0x753: v753(0x0) = CONST 
0x755: v755 = CREATE v753(0x0) v717 v750(0x37)
0x75c: RETURNPRIVATE v70barg1 v755
----------------------------------

Begin block 0x75d
prev = {'0x452'}, next = {'0x457'}
----------------------------------
Block 0x75d
0x75f: JUMP v43d(0x457)
----------------------------------

Begin block 0x760
prev = {'0x6fb'}, next = {'0x76f', '0x7a5'}
----------------------------------
Block 0x760
0x761: v761(0x1) = CONST 
0x763: v763(0x1) = CONST 
0x765: v765(0xa0) = CONST 
0x767: v767(0x10000000000000000000000000000000000000000) = SHL v765(0xa0) v763(0x1)
0x768: v768(0xffffffffffffffffffffffffffffffffffffffff) = SUB v767(0x10000000000000000000000000000000000000000) v761(0x1)
0x76a: v76a = AND v299 v768(0xffffffffffffffffffffffffffffffffffffffff)
0x76b: v76b(0x7a5) = CONST 
0x76e: JUMPI v76b(0x7a5) v76a
----------------------------------

Begin block 0x76f
prev = {'0x760'}, next = {}
----------------------------------
Block 0x76f
0x76f: v76f(0x40) = CONST 
0x771: v771 = MLOAD v76f(0x40)
0x772: v772(0x461bcd) = CONST 
0x776: v776(0xe5) = CONST 
0x778: v778(0x8c379a000000000000000000000000000000000000000000000000000000000) = SHL v776(0xe5) v772(0x461bcd)
0x77a: MSTORE v771 v778(0x8c379a000000000000000000000000000000000000000000000000000000000)
0x77b: v77b(0x4) = CONST 
0x77d: v77d = ADD v77b(0x4) v771
0x780: v780(0x20) = CONST 
0x782: v782 = ADD v780(0x20) v77d
0x785: v785 = SUB v782 v77d
0x787: MSTORE v77d v785
0x788: v788(0x26) = CONST 
0x78b: MSTORE v782 v788(0x26)
0x78c: v78c(0x20) = CONST 
0x78e: v78e = ADD v78c(0x20) v782
0x790: v790(0x801) = CONST 
0x793: v793(0x26) = CONST 
0x796: CODECOPY v78e v790(0x801) v793(0x26)
0x797: v797(0x40) = CONST 
0x799: v799 = ADD v797(0x40) v78e
0x79d: v79d(0x40) = CONST 
0x79f: v79f = MLOAD v79d(0x40)
0x7a2: v7a2 = SUB v799 v79f
0x7a4: REVERT v79f v7a2
----------------------------------

Begin block 0x7a5
prev = {'0x760'}, next = {'0x704'}
----------------------------------
Block 0x7a5
0x7a6: v7a6(0x0) = CONST 
0x7a9: v7a9 = SLOAD v7a6(0x0)
0x7aa: v7aa(0x40) = CONST 
0x7ac: v7ac = MLOAD v7aa(0x40)
0x7ad: v7ad(0x1) = CONST 
0x7af: v7af(0x1) = CONST 
0x7b1: v7b1(0xa0) = CONST 
0x7b3: v7b3(0x10000000000000000000000000000000000000000) = SHL v7b1(0xa0) v7af(0x1)
0x7b4: v7b4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7b3(0x10000000000000000000000000000000000000000) v7ad(0x1)
0x7b7: v7b7 = AND v299 v7b4(0xffffffffffffffffffffffffffffffffffffffff)
0x7ba: v7ba = AND v7a9 v7b4(0xffffffffffffffffffffffffffffffffffffffff)
0x7bc: v7bc(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) = CONST 
0x7de: LOG3 v7ac v7a6(0x0) v7bc(0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0) v7ba v7b7
0x7df: v7df(0x0) = CONST 
0x7e2: v7e2 = SLOAD v7df(0x0)
0x7e3: v7e3(0x1) = CONST 
0x7e5: v7e5(0x1) = CONST 
0x7e7: v7e7(0xa0) = CONST 
0x7e9: v7e9(0x10000000000000000000000000000000000000000) = SHL v7e7(0xa0) v7e5(0x1)
0x7ea: v7ea(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7e9(0x10000000000000000000000000000000000000000) v7e3(0x1)
0x7eb: v7eb(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) = NOT v7ea(0xffffffffffffffffffffffffffffffffffffffff)
0x7ec: v7ec = AND v7eb(0xffffffffffffffffffffffff0000000000000000000000000000000000000000) v7e2
0x7ed: v7ed(0x1) = CONST 
0x7ef: v7ef(0x1) = CONST 
0x7f1: v7f1(0xa0) = CONST 
0x7f3: v7f3(0x10000000000000000000000000000000000000000) = SHL v7f1(0xa0) v7ef(0x1)
0x7f4: v7f4(0xffffffffffffffffffffffffffffffffffffffff) = SUB v7f3(0x10000000000000000000000000000000000000000) v7ed(0x1)
0x7f8: v7f8 = AND v7f4(0xffffffffffffffffffffffffffffffffffffffff) v299
0x7fc: v7fc = OR v7f8 v7ec
0x7fe: SSTORE v7df(0x0) v7fc
0x7ff: JUMP v6fc(0x704)
----------------------------------

Begin block 0x871
prev = {'0x10', '0x93'}, next = {'0x9e0x0'}
----------------------------------
Block 0x871
0x872: v872(0x9e) = CONST 
0x873: CALLPRIVATE v872(0x9e)
----------------------------------

Begin block 0x874
prev = {'0x66'}, next = {}
----------------------------------
Block 0x874
0x875: v875(0xa3) = CONST 
0x876: CALLPRIVATE v875(0xa3)
----------------------------------

Begin block 0x877
prev = {'0x72'}, next = {}
----------------------------------
Block 0x877
0x878: v878(0xc7) = CONST 
0x879: CALLPRIVATE v878(0xc7)
----------------------------------

Begin block 0x87a
prev = {'0x7d'}, next = {}
----------------------------------
Block 0x87a
0x87b: v87b(0xd1) = CONST 
0x87c: CALLPRIVATE v87b(0xd1)
----------------------------------

Begin block 0x87d
prev = {'0x88'}, next = {}
----------------------------------
Block 0x87d
0x87e: v87e(0xd9) = CONST 
0x87f: CALLPRIVATE v87e(0xd9)
----------------------------------

Begin block 0x880
prev = {'0x93'}, next = {}
----------------------------------
Block 0x880
0x881: v881(0xe1) = CONST 
0x882: CALLPRIVATE v881(0xe1)
----------------------------------

Begin block 0x883
prev = {'0x2b'}, next = {}
----------------------------------
Block 0x883
0x884: v884(0xfd) = CONST 
0x885: CALLPRIVATE v884(0xfd)
----------------------------------

Begin block 0x886
prev = {'0x36'}, next = {}
----------------------------------
Block 0x886
0x887: v887(0x105) = CONST 
0x888: CALLPRIVATE v887(0x105)
----------------------------------

Begin block 0x889
prev = {'0x41'}, next = {}
----------------------------------
Block 0x889
0x88a: v88a(0x12b) = CONST 
0x88b: CALLPRIVATE v88a(0x12b)
----------------------------------

Begin block 0x88c
prev = {'0x4c'}, next = {}
----------------------------------
Block 0x88c
0x88d: v88d(0x270) = CONST 
0x88e: CALLPRIVATE v88d(0x270)
----------------------------------

Begin block 0x88f
prev = {'0x57'}, next = {}
----------------------------------
Block 0x88f
0x890: v890(0x278) = CONST 
0x891: CALLPRIVATE v890(0x278)
----------------------------------
