
Begin block 0x0
prev = {}, next = {'0xd', '0x66d'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x60) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x60)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x655: v655(0x66d) = CONST 
0x656: JUMPI v655(0x66d) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x670', '0x40'}
----------------------------------
Block 0xd
0xd: vd(0xffffffff) = CONST 
0x12: v12(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x30: v30(0x0) = CONST 
0x32: v32 = CALLDATALOAD v30(0x0)
0x33: v33 = DIV v32 v12(0x100000000000000000000000000000000000000000000000000000000)
0x34: v34 = AND v33 vd(0xffffffff)
0x35: v35(0x6fdde03) = CONST 
0x3b: v3b = EQ v34 v35(0x6fdde03)
0x657: v657(0x670) = CONST 
0x658: JUMPI v657(0x670) v3b
----------------------------------

Begin block 0x40
prev = {'0xd'}, next = {'0x4b', '0x673'}
----------------------------------
Block 0x40
0x41: v41(0x95ea7b3) = CONST 
0x46: v46 = EQ v41(0x95ea7b3) v34
0x659: v659(0x673) = CONST 
0x65a: JUMPI v659(0x673) v46
----------------------------------

Begin block 0x4b
prev = {'0x40'}, next = {'0x676', '0x56'}
----------------------------------
Block 0x4b
0x4c: v4c(0x18160ddd) = CONST 
0x51: v51 = EQ v4c(0x18160ddd) v34
0x65b: v65b(0x676) = CONST 
0x65c: JUMPI v65b(0x676) v51
----------------------------------

Begin block 0x56
prev = {'0x4b'}, next = {'0x679', '0x61'}
----------------------------------
Block 0x56
0x57: v57(0x23b872dd) = CONST 
0x5c: v5c = EQ v57(0x23b872dd) v34
0x65d: v65d(0x679) = CONST 
0x65e: JUMPI v65d(0x679) v5c
----------------------------------

Begin block 0x61
prev = {'0x56'}, next = {'0x6c', '0x67c'}
----------------------------------
Block 0x61
0x62: v62(0x27e235e3) = CONST 
0x67: v67 = EQ v62(0x27e235e3) v34
0x65f: v65f(0x67c) = CONST 
0x660: JUMPI v65f(0x67c) v67
----------------------------------

Begin block 0x6c
prev = {'0x61'}, next = {'0x77', '0x67f'}
----------------------------------
Block 0x6c
0x6d: v6d(0x313ce567) = CONST 
0x72: v72 = EQ v6d(0x313ce567) v34
0x661: v661(0x67f) = CONST 
0x662: JUMPI v661(0x67f) v72
----------------------------------

Begin block 0x77
prev = {'0x6c'}, next = {'0x682', '0x82'}
----------------------------------
Block 0x77
0x78: v78(0x5c658165) = CONST 
0x7d: v7d = EQ v78(0x5c658165) v34
0x663: v663(0x682) = CONST 
0x664: JUMPI v663(0x682) v7d
----------------------------------

Begin block 0x82
prev = {'0x77'}, next = {'0x685', '0x8d'}
----------------------------------
Block 0x82
0x83: v83(0x70a08231) = CONST 
0x88: v88 = EQ v83(0x70a08231) v34
0x665: v665(0x685) = CONST 
0x666: JUMPI v665(0x685) v88
----------------------------------

Begin block 0x8d
prev = {'0x82'}, next = {'0x688', '0x98'}
----------------------------------
Block 0x8d
0x8e: v8e(0x95d89b41) = CONST 
0x93: v93 = EQ v8e(0x95d89b41) v34
0x667: v667(0x688) = CONST 
0x668: JUMPI v667(0x688) v93
----------------------------------

Begin block 0x98
prev = {'0x8d'}, next = {'0xa3', '0x68b'}
----------------------------------
Block 0x98
0x99: v99(0xa9059cbb) = CONST 
0x9e: v9e = EQ v99(0xa9059cbb) v34
0x669: v669(0x68b) = CONST 
0x66a: JUMPI v669(0x68b) v9e
----------------------------------

Begin block 0xa3
prev = {'0x98'}, next = {'0x66d', '0x68e'}
----------------------------------
Block 0xa3
0xa4: va4(0xdd62ed3e) = CONST 
0xa9: va9 = EQ va4(0xdd62ed3e) v34
0x66b: v66b(0x68e) = CONST 
0x66c: JUMPI v66b(0x68e) va9
----------------------------------

Begin block 0xae
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0xae
0xaf: vaf(0x0) = CONST 
0xb2: REVERT vaf(0x0) vaf(0x0)
----------------------------------

Begin block 0xb3
prev = {}, next = {'0xbe', '0xba'}
----------------------------------
function name()()
Block 0xb3
0xb4: vb4 = CALLVALUE 
0xb5: vb5 = ISZERO vb4
0xb6: vb6(0xbe) = CONST 
0xb9: JUMPI vb6(0xbe) vb5
----------------------------------

Begin block 0xba
prev = {'0xb3'}, next = {}
----------------------------------
Block 0xba
0xba: vba(0x0) = CONST 
0xbd: REVERT vba(0x0) vba(0x0)
----------------------------------

Begin block 0xbe
prev = {'0xb3'}, next = {'0xc60xb3'}
----------------------------------
Block 0xbe
0xbf: vbf(0xc6) = CONST 
0xc2: vc2(0x2a6) = CONST 
0xc5: vc5_0, vc5_1 = CALLPRIVATE vc2(0x2a6) vbf(0xc6)
----------------------------------

Begin block 0xc60xb3
prev = {'0xbe'}, next = {'0xea0xb3'}
----------------------------------
Block 0xc60xb3
0xc70xb3: vb3c7(0x40) = CONST 
0xc90xb3: vb3c9 = MLOAD vb3c7(0x40)
0xca0xb3: vb3ca(0x20) = CONST 
0xce0xb3: MSTORE vb3c9 vb3ca(0x20)
0xd20xb3: vb3d2 = ADD vb3c9 vb3ca(0x20)
0xd60xb3: vb3d6 = MLOAD vc5_0
0xd80xb3: MSTORE vb3d2 vb3d6
0xd90xb3: vb3d9(0x20) = CONST 
0xdb0xb3: vb3db = ADD vb3d9(0x20) vb3d2
0xdf0xb3: vb3df = MLOAD vc5_0
0xe10xb3: vb3e1(0x20) = CONST 
0xe30xb3: vb3e3 = ADD vb3e1(0x20) vc5_0
0xe80xb3: vb3e8(0x0) = CONST 
----------------------------------

Begin block 0xc60x24c
prev = {'0x257'}, next = {'0xea0x24c'}
----------------------------------
Block 0xc60x24c
0xc70x24c: v24cc7(0x40) = CONST 
0xc90x24c: v24cc9 = MLOAD v24cc7(0x40)
0xca0x24c: v24cca(0x20) = CONST 
0xce0x24c: MSTORE v24cc9 v24cca(0x20)
0xd20x24c: v24cd2 = ADD v24cc9 v24cca(0x20)
0xd60x24c: v24cd6 = MLOAD v25e_0
0xd80x24c: MSTORE v24cd2 v24cd6
0xd90x24c: v24cd9(0x20) = CONST 
0xdb0x24c: v24cdb = ADD v24cd9(0x20) v24cd2
0xdf0x24c: v24cdf = MLOAD v25e_0
0xe10x24c: v24ce1(0x20) = CONST 
0xe30x24c: v24ce3 = ADD v24ce1(0x20) v25e_0
0xe80x24c: v24ce8(0x0) = CONST 
----------------------------------

Begin block 0xea0xb3
prev = {'0xf30xb3', '0xc60xb3'}, next = {'0xf30xb3', '0x1020xb3'}
----------------------------------
Block 0xea0xb3
0xea0xb3_0x0: veab3_0 = PHI vb3e8(0x0) vb3fd
0xed0xb3: vb3ed = LT veab3_0 vb3df
0xee0xb3: vb3ee = ISZERO vb3ed
0xef0xb3: vb3ef(0x102) = CONST 
0xf20xb3: JUMPI vb3ef(0x102) vb3ee
----------------------------------

Begin block 0xea0x24c
prev = {'0xc60x24c', '0xf30x24c'}, next = {'0xf30x24c', '0x1020x24c'}
----------------------------------
Block 0xea0x24c
0xea0x24c_0x0: vea24c_0 = PHI v24ce8(0x0) v24cfd
0xed0x24c: v24ced = LT vea24c_0 v24cdf
0xee0x24c: v24cee = ISZERO v24ced
0xef0x24c: v24cef(0x102) = CONST 
0xf20x24c: JUMPI v24cef(0x102) v24cee
----------------------------------

Begin block 0xf30xb3
prev = {'0xea0xb3'}, next = {'0xea0xb3'}
----------------------------------
Block 0xf30xb3
0xf30xb3_0x0: vf3b3_0 = PHI vb3e8(0x0) vb3fd
0xf50xb3: vb3f5 = ADD vb3e3 vf3b3_0
0xf60xb3: vb3f6 = MLOAD vb3f5
0xf90xb3: vb3f9 = ADD vf3b3_0 vb3db
0xfa0xb3: MSTORE vb3f9 vb3f6
0xfb0xb3: vb3fb(0x20) = CONST 
0xfd0xb3: vb3fd = ADD vb3fb(0x20) vf3b3_0
0xfe0xb3: vb3fe(0xea) = CONST 
0x1010xb3: JUMP vb3fe(0xea)
----------------------------------

Begin block 0xf30x24c
prev = {'0xea0x24c'}, next = {'0xea0x24c'}
----------------------------------
Block 0xf30x24c
0xf30x24c_0x0: vf324c_0 = PHI v24ce8(0x0) v24cfd
0xf50x24c: v24cf5 = ADD v24ce3 vf324c_0
0xf60x24c: v24cf6 = MLOAD v24cf5
0xf90x24c: v24cf9 = ADD vf324c_0 v24cdb
0xfa0x24c: MSTORE v24cf9 v24cf6
0xfb0x24c: v24cfb(0x20) = CONST 
0xfd0x24c: v24cfd = ADD v24cfb(0x20) vf324c_0
0xfe0x24c: v24cfe(0xea) = CONST 
0x1010x24c: JUMP v24cfe(0xea)
----------------------------------

Begin block 0x1020xb3
prev = {'0xea0xb3'}, next = {'0x12f0xb3', '0x1160xb3'}
----------------------------------
Block 0x1020xb3
0x10b0xb3: vb310b = ADD vb3df vb3db
0x10d0xb3: vb310d(0x1f) = CONST 
0x10f0xb3: vb310f = AND vb310d(0x1f) vb3df
0x1110xb3: vb3111 = ISZERO vb310f
0x1120xb3: vb3112(0x12f) = CONST 
0x1150xb3: JUMPI vb3112(0x12f) vb3111
----------------------------------

Begin block 0x1020x24c
prev = {'0xea0x24c'}, next = {'0x12f0x24c', '0x1160x24c'}
----------------------------------
Block 0x1020x24c
0x10b0x24c: v24c10b = ADD v24cdf v24cdb
0x10d0x24c: v24c10d(0x1f) = CONST 
0x10f0x24c: v24c10f = AND v24c10d(0x1f) v24cdf
0x1110x24c: v24c111 = ISZERO v24c10f
0x1120x24c: v24c112(0x12f) = CONST 
0x1150x24c: JUMPI v24c112(0x12f) v24c111
----------------------------------

Begin block 0x1160xb3
prev = {'0x1020xb3'}, next = {'0x12f0xb3'}
----------------------------------
Block 0x1160xb3
0x1180xb3: vb3118 = SUB vb310b vb310f
0x11a0xb3: vb311a = MLOAD vb3118
0x11b0xb3: vb311b(0x1) = CONST 
0x11e0xb3: vb311e(0x20) = CONST 
0x1200xb3: vb3120 = SUB vb311e(0x20) vb310f
0x1210xb3: vb3121(0x100) = CONST 
0x1240xb3: vb3124 = EXP vb3121(0x100) vb3120
0x1250xb3: vb3125 = SUB vb3124 vb311b(0x1)
0x1260xb3: vb3126 = NOT vb3125
0x1270xb3: vb3127 = AND vb3126 vb311a
0x1290xb3: MSTORE vb3118 vb3127
0x12a0xb3: vb312a(0x20) = CONST 
0x12c0xb3: vb312c = ADD vb312a(0x20) vb3118
----------------------------------

Begin block 0x1160x24c
prev = {'0x1020x24c'}, next = {'0x12f0x24c'}
----------------------------------
Block 0x1160x24c
0x1180x24c: v24c118 = SUB v24c10b v24c10f
0x11a0x24c: v24c11a = MLOAD v24c118
0x11b0x24c: v24c11b(0x1) = CONST 
0x11e0x24c: v24c11e(0x20) = CONST 
0x1200x24c: v24c120 = SUB v24c11e(0x20) v24c10f
0x1210x24c: v24c121(0x100) = CONST 
0x1240x24c: v24c124 = EXP v24c121(0x100) v24c120
0x1250x24c: v24c125 = SUB v24c124 v24c11b(0x1)
0x1260x24c: v24c126 = NOT v24c125
0x1270x24c: v24c127 = AND v24c126 v24c11a
0x1290x24c: MSTORE v24c118 v24c127
0x12a0x24c: v24c12a(0x20) = CONST 
0x12c0x24c: v24c12c = ADD v24c12a(0x20) v24c118
----------------------------------

Begin block 0x12f0xb3
prev = {'0x1020xb3', '0x1160xb3'}, next = {}
----------------------------------
Block 0x12f0xb3
0x12f0xb3_0x1: v12fb3_1 = PHI vb310b vb312c
0x1350xb3: vb3135(0x40) = CONST 
0x1370xb3: vb3137 = MLOAD vb3135(0x40)
0x13a0xb3: vb313a = SUB v12fb3_1 vb3137
0x13c0xb3: RETURN vb3137 vb313a
----------------------------------

Begin block 0x12f0x24c
prev = {'0x1020x24c', '0x1160x24c'}, next = {}
----------------------------------
Block 0x12f0x24c
0x12f0x24c_0x1: v12f24c_1 = PHI v24c10b v24c12c
0x1350x24c: v24c135(0x40) = CONST 
0x1370x24c: v24c137 = MLOAD v24c135(0x40)
0x13a0x24c: v24c13a = SUB v12f24c_1 v24c137
0x13c0x24c: RETURN v24c137 v24c13a
----------------------------------

Begin block 0x13d
prev = {}, next = {'0x144', '0x148'}
----------------------------------
function approve(address,uint256)()
Block 0x13d
0x13e: v13e = CALLVALUE 
0x13f: v13f = ISZERO v13e
0x140: v140(0x148) = CONST 
0x143: JUMPI v140(0x148) v13f
----------------------------------

Begin block 0x144
prev = {'0x13d'}, next = {}
----------------------------------
Block 0x144
0x144: v144(0x0) = CONST 
0x147: REVERT v144(0x0) v144(0x0)
----------------------------------

Begin block 0x148
prev = {'0x13d'}, next = {'0x344'}
----------------------------------
Block 0x148
0x149: v149(0x15f) = CONST 
0x14c: v14c(0x1) = CONST 
0x14e: v14e(0xa0) = CONST 
0x150: v150(0x2) = CONST 
0x152: v152(0x10000000000000000000000000000000000000000) = EXP v150(0x2) v14e(0xa0)
0x153: v153(0xffffffffffffffffffffffffffffffffffffffff) = SUB v152(0x10000000000000000000000000000000000000000) v14c(0x1)
0x154: v154(0x4) = CONST 
0x156: v156 = CALLDATALOAD v154(0x4)
0x157: v157 = AND v156 v153(0xffffffffffffffffffffffffffffffffffffffff)
0x158: v158(0x24) = CONST 
0x15a: v15a = CALLDATALOAD v158(0x24)
0x15b: v15b(0x344) = CONST 
0x15e: JUMP v15b(0x344)
----------------------------------

Begin block 0x15f0x13d
prev = {'0x344'}, next = {}
----------------------------------
Block 0x15f0x13d
0x1600x13d: v13d160(0x40) = CONST 
0x1620x13d: v13d162 = MLOAD v13d160(0x40)
0x1640x13d: v13d164 = ISZERO v3a9(0x1)
0x1650x13d: v13d165 = ISZERO v13d164
0x1670x13d: MSTORE v13d162 v13d165
0x1680x13d: v13d168(0x20) = CONST 
0x16a0x13d: v13d16a = ADD v13d168(0x20) v13d162
0x16b0x13d: v13d16b(0x40) = CONST 
0x16d0x13d: v13d16d = MLOAD v13d16b(0x40)
0x1700x13d: v13d170 = SUB v13d16a v13d16d
0x1720x13d: RETURN v13d16d v13d170
----------------------------------

Begin block 0x15f0x198
prev = {'0x46a'}, next = {}
----------------------------------
Block 0x15f0x198
0x1600x198: v198160(0x40) = CONST 
0x1620x198: v198162 = MLOAD v198160(0x40)
0x1640x198: v198164 = ISZERO v4b3(0x1)
0x1650x198: v198165 = ISZERO v198164
0x1670x198: MSTORE v198162 v198165
0x1680x198: v198168(0x20) = CONST 
0x16a0x198: v19816a = ADD v198168(0x20) v198162
0x16b0x198: v19816b(0x40) = CONST 
0x16d0x198: v19816d = MLOAD v19816b(0x40)
0x1700x198: v198170 = SUB v19816a v19816d
0x1720x198: RETURN v19816d v198170
----------------------------------

Begin block 0x15f0x25f
prev = {'0x5a0'}, next = {}
----------------------------------
Block 0x15f0x25f
0x1600x25f: v25f160(0x40) = CONST 
0x1620x25f: v25f162 = MLOAD v25f160(0x40)
0x1640x25f: v25f164 = ISZERO v607(0x1)
0x1650x25f: v25f165 = ISZERO v25f164
0x1670x25f: MSTORE v25f162 v25f165
0x1680x25f: v25f168(0x20) = CONST 
0x16a0x25f: v25f16a = ADD v25f168(0x20) v25f162
0x16b0x25f: v25f16b(0x40) = CONST 
0x16d0x25f: v25f16d = MLOAD v25f16b(0x40)
0x1700x25f: v25f170 = SUB v25f16a v25f16d
0x1720x25f: RETURN v25f16d v25f170
----------------------------------

Begin block 0x173
prev = {}, next = {'0x17e', '0x17a'}
----------------------------------
function totalSupply()()
Block 0x173
0x174: v174 = CALLVALUE 
0x175: v175 = ISZERO v174
0x176: v176(0x17e) = CONST 
0x179: JUMPI v176(0x17e) v175
----------------------------------

Begin block 0x17a
prev = {'0x173'}, next = {}
----------------------------------
Block 0x17a
0x17a: v17a(0x0) = CONST 
0x17d: REVERT v17a(0x0) v17a(0x0)
----------------------------------

Begin block 0x17e
prev = {'0x173'}, next = {'0x3b0'}
----------------------------------
Block 0x17e
0x17f: v17f(0x186) = CONST 
0x182: v182(0x3b0) = CONST 
0x185: JUMP v182(0x3b0)
----------------------------------

Begin block 0x1860x173
prev = {'0x3b0'}, next = {}
----------------------------------
Block 0x1860x173
0x1870x173: v173187(0x40) = CONST 
0x1890x173: v173189 = MLOAD v173187(0x40)
0x18c0x173: MSTORE v173189 v3b3
0x18d0x173: v17318d(0x20) = CONST 
0x18f0x173: v17318f = ADD v17318d(0x20) v173189
0x1900x173: v173190(0x40) = CONST 
0x1920x173: v173192 = MLOAD v173190(0x40)
0x1950x173: v173195 = SUB v17318f v173192
0x1970x173: RETURN v173192 v173195
----------------------------------

Begin block 0x1860x1c0
prev = {'0x4bc'}, next = {}
----------------------------------
Block 0x1860x1c0
0x1870x1c0: v1c0187(0x40) = CONST 
0x1890x1c0: v1c0189 = MLOAD v1c0187(0x40)
0x18c0x1c0: MSTORE v1c0189 v4cb
0x18d0x1c0: v1c018d(0x20) = CONST 
0x18f0x1c0: v1c018f = ADD v1c018d(0x20) v1c0189
0x1900x1c0: v1c0190(0x40) = CONST 
0x1920x1c0: v1c0192 = MLOAD v1c0190(0x40)
0x1950x1c0: v1c0195 = SUB v1c018f v1c0192
0x1970x1c0: RETURN v1c0192 v1c0195
----------------------------------

Begin block 0x1860x208
prev = {'0x4d7'}, next = {}
----------------------------------
Block 0x1860x208
0x1870x208: v208187(0x40) = CONST 
0x1890x208: v208189 = MLOAD v208187(0x40)
0x18c0x208: MSTORE v208189 v4f1
0x18d0x208: v20818d(0x20) = CONST 
0x18f0x208: v20818f = ADD v20818d(0x20) v208189
0x1900x208: v208190(0x40) = CONST 
0x1920x208: v208192 = MLOAD v208190(0x40)
0x1950x208: v208195 = SUB v20818f v208192
0x1970x208: RETURN v208192 v208195
----------------------------------

Begin block 0x1860x22d
prev = {'0x4f4'}, next = {}
----------------------------------
Block 0x1860x22d
0x1870x22d: v22d187(0x40) = CONST 
0x1890x22d: v22d189 = MLOAD v22d187(0x40)
0x18c0x22d: MSTORE v22d189 v50c
0x18d0x22d: v22d18d(0x20) = CONST 
0x18f0x22d: v22d18f = ADD v22d18d(0x20) v22d189
0x1900x22d: v22d190(0x40) = CONST 
0x1920x22d: v22d192 = MLOAD v22d190(0x40)
0x1950x22d: v22d195 = SUB v22d18f v22d192
0x1970x22d: RETURN v22d192 v22d195
----------------------------------

Begin block 0x1860x281
prev = {'0x60e'}, next = {}
----------------------------------
Block 0x1860x281
0x1870x281: v281187(0x40) = CONST 
0x1890x281: v281189 = MLOAD v281187(0x40)
0x18c0x281: MSTORE v281189 v636
0x18d0x281: v28118d(0x20) = CONST 
0x18f0x281: v28118f = ADD v28118d(0x20) v281189
0x1900x281: v281190(0x40) = CONST 
0x1920x281: v281192 = MLOAD v281190(0x40)
0x1950x281: v281195 = SUB v28118f v281192
0x1970x281: RETURN v281192 v281195
----------------------------------

Begin block 0x198
prev = {}, next = {'0x1a3', '0x19f'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x198
0x199: v199 = CALLVALUE 
0x19a: v19a = ISZERO v199
0x19b: v19b(0x1a3) = CONST 
0x19e: JUMPI v19b(0x1a3) v19a
----------------------------------

Begin block 0x19f
prev = {'0x198'}, next = {}
----------------------------------
Block 0x19f
0x19f: v19f(0x0) = CONST 
0x1a2: REVERT v19f(0x0) v19f(0x0)
----------------------------------

Begin block 0x1a3
prev = {'0x198'}, next = {'0x3b6'}
----------------------------------
Block 0x1a3
0x1a4: v1a4(0x15f) = CONST 
0x1a7: v1a7(0x1) = CONST 
0x1a9: v1a9(0xa0) = CONST 
0x1ab: v1ab(0x2) = CONST 
0x1ad: v1ad(0x10000000000000000000000000000000000000000) = EXP v1ab(0x2) v1a9(0xa0)
0x1ae: v1ae(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1ad(0x10000000000000000000000000000000000000000) v1a7(0x1)
0x1af: v1af(0x4) = CONST 
0x1b1: v1b1 = CALLDATALOAD v1af(0x4)
0x1b3: v1b3 = AND v1ae(0xffffffffffffffffffffffffffffffffffffffff) v1b1
0x1b5: v1b5(0x24) = CONST 
0x1b7: v1b7 = CALLDATALOAD v1b5(0x24)
0x1b8: v1b8 = AND v1b7 v1ae(0xffffffffffffffffffffffffffffffffffffffff)
0x1b9: v1b9(0x44) = CONST 
0x1bb: v1bb = CALLDATALOAD v1b9(0x44)
0x1bc: v1bc(0x3b6) = CONST 
0x1bf: JUMP v1bc(0x3b6)
----------------------------------

Begin block 0x1c0
prev = {}, next = {'0x1cb', '0x1c7'}
----------------------------------
function balances(address)()
Block 0x1c0
0x1c1: v1c1 = CALLVALUE 
0x1c2: v1c2 = ISZERO v1c1
0x1c3: v1c3(0x1cb) = CONST 
0x1c6: JUMPI v1c3(0x1cb) v1c2
----------------------------------

Begin block 0x1c7
prev = {'0x1c0'}, next = {}
----------------------------------
Block 0x1c7
0x1c7: v1c7(0x0) = CONST 
0x1ca: REVERT v1c7(0x0) v1c7(0x0)
----------------------------------

Begin block 0x1cb
prev = {'0x1c0'}, next = {'0x4bc'}
----------------------------------
Block 0x1cb
0x1cc: v1cc(0x186) = CONST 
0x1cf: v1cf(0x1) = CONST 
0x1d1: v1d1(0xa0) = CONST 
0x1d3: v1d3(0x2) = CONST 
0x1d5: v1d5(0x10000000000000000000000000000000000000000) = EXP v1d3(0x2) v1d1(0xa0)
0x1d6: v1d6(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1d5(0x10000000000000000000000000000000000000000) v1cf(0x1)
0x1d7: v1d7(0x4) = CONST 
0x1d9: v1d9 = CALLDATALOAD v1d7(0x4)
0x1da: v1da = AND v1d9 v1d6(0xffffffffffffffffffffffffffffffffffffffff)
0x1db: v1db(0x4bc) = CONST 
0x1de: JUMP v1db(0x4bc)
----------------------------------

Begin block 0x1df
prev = {}, next = {'0x1e6', '0x1ea'}
----------------------------------
function decimals()()
Block 0x1df
0x1e0: v1e0 = CALLVALUE 
0x1e1: v1e1 = ISZERO v1e0
0x1e2: v1e2(0x1ea) = CONST 
0x1e5: JUMPI v1e2(0x1ea) v1e1
----------------------------------

Begin block 0x1e6
prev = {'0x1df'}, next = {}
----------------------------------
Block 0x1e6
0x1e6: v1e6(0x0) = CONST 
0x1e9: REVERT v1e6(0x0) v1e6(0x0)
----------------------------------

Begin block 0x1ea
prev = {'0x1df'}, next = {'0x4ce'}
----------------------------------
Block 0x1ea
0x1eb: v1eb(0x1f2) = CONST 
0x1ee: v1ee(0x4ce) = CONST 
0x1f1: JUMP v1ee(0x4ce)
----------------------------------

Begin block 0x1f2
prev = {'0x4ce'}, next = {}
----------------------------------
Block 0x1f2
0x1f3: v1f3(0x40) = CONST 
0x1f5: v1f5 = MLOAD v1f3(0x40)
0x1f6: v1f6(0xff) = CONST 
0x1fa: v1fa = AND v4d4 v1f6(0xff)
0x1fc: MSTORE v1f5 v1fa
0x1fd: v1fd(0x20) = CONST 
0x1ff: v1ff = ADD v1fd(0x20) v1f5
0x200: v200(0x40) = CONST 
0x202: v202 = MLOAD v200(0x40)
0x205: v205 = SUB v1ff v202
0x207: RETURN v202 v205
----------------------------------

Begin block 0x208
prev = {}, next = {'0x213', '0x20f'}
----------------------------------
function allowed(address,address)()
Block 0x208
0x209: v209 = CALLVALUE 
0x20a: v20a = ISZERO v209
0x20b: v20b(0x213) = CONST 
0x20e: JUMPI v20b(0x213) v20a
----------------------------------

Begin block 0x20f
prev = {'0x208'}, next = {}
----------------------------------
Block 0x20f
0x20f: v20f(0x0) = CONST 
0x212: REVERT v20f(0x0) v20f(0x0)
----------------------------------

Begin block 0x213
prev = {'0x208'}, next = {'0x4d7'}
----------------------------------
Block 0x213
0x214: v214(0x186) = CONST 
0x217: v217(0x1) = CONST 
0x219: v219(0xa0) = CONST 
0x21b: v21b(0x2) = CONST 
0x21d: v21d(0x10000000000000000000000000000000000000000) = EXP v21b(0x2) v219(0xa0)
0x21e: v21e(0xffffffffffffffffffffffffffffffffffffffff) = SUB v21d(0x10000000000000000000000000000000000000000) v217(0x1)
0x21f: v21f(0x4) = CONST 
0x221: v221 = CALLDATALOAD v21f(0x4)
0x223: v223 = AND v21e(0xffffffffffffffffffffffffffffffffffffffff) v221
0x225: v225(0x24) = CONST 
0x227: v227 = CALLDATALOAD v225(0x24)
0x228: v228 = AND v227 v21e(0xffffffffffffffffffffffffffffffffffffffff)
0x229: v229(0x4d7) = CONST 
0x22c: JUMP v229(0x4d7)
----------------------------------

Begin block 0x22d
prev = {}, next = {'0x234', '0x238'}
----------------------------------
function balanceOf(address)()
Block 0x22d
0x22e: v22e = CALLVALUE 
0x22f: v22f = ISZERO v22e
0x230: v230(0x238) = CONST 
0x233: JUMPI v230(0x238) v22f
----------------------------------

Begin block 0x234
prev = {'0x22d'}, next = {}
----------------------------------
Block 0x234
0x234: v234(0x0) = CONST 
0x237: REVERT v234(0x0) v234(0x0)
----------------------------------

Begin block 0x238
prev = {'0x22d'}, next = {'0x4f4'}
----------------------------------
Block 0x238
0x239: v239(0x186) = CONST 
0x23c: v23c(0x1) = CONST 
0x23e: v23e(0xa0) = CONST 
0x240: v240(0x2) = CONST 
0x242: v242(0x10000000000000000000000000000000000000000) = EXP v240(0x2) v23e(0xa0)
0x243: v243(0xffffffffffffffffffffffffffffffffffffffff) = SUB v242(0x10000000000000000000000000000000000000000) v23c(0x1)
0x244: v244(0x4) = CONST 
0x246: v246 = CALLDATALOAD v244(0x4)
0x247: v247 = AND v246 v243(0xffffffffffffffffffffffffffffffffffffffff)
0x248: v248(0x4f4) = CONST 
0x24b: JUMP v248(0x4f4)
----------------------------------

Begin block 0x24c
prev = {}, next = {'0x257', '0x253'}
----------------------------------
function symbol()()
Block 0x24c
0x24d: v24d = CALLVALUE 
0x24e: v24e = ISZERO v24d
0x24f: v24f(0x257) = CONST 
0x252: JUMPI v24f(0x257) v24e
----------------------------------

Begin block 0x253
prev = {'0x24c'}, next = {}
----------------------------------
Block 0x253
0x253: v253(0x0) = CONST 
0x256: REVERT v253(0x0) v253(0x0)
----------------------------------

Begin block 0x257
prev = {'0x24c'}, next = {'0xc60x24c'}
----------------------------------
Block 0x257
0x258: v258(0xc6) = CONST 
0x25b: v25b(0x50f) = CONST 
0x25e: v25e_0, v25e_1 = CALLPRIVATE v25b(0x50f) v258(0xc6)
----------------------------------

Begin block 0x25f
prev = {}, next = {'0x266', '0x26a'}
----------------------------------
function transfer(address,uint256)()
Block 0x25f
0x260: v260 = CALLVALUE 
0x261: v261 = ISZERO v260
0x262: v262(0x26a) = CONST 
0x265: JUMPI v262(0x26a) v261
----------------------------------

Begin block 0x266
prev = {'0x25f'}, next = {}
----------------------------------
Block 0x266
0x266: v266(0x0) = CONST 
0x269: REVERT v266(0x0) v266(0x0)
----------------------------------

Begin block 0x26a
prev = {'0x25f'}, next = {'0x57a'}
----------------------------------
Block 0x26a
0x26b: v26b(0x15f) = CONST 
0x26e: v26e(0x1) = CONST 
0x270: v270(0xa0) = CONST 
0x272: v272(0x2) = CONST 
0x274: v274(0x10000000000000000000000000000000000000000) = EXP v272(0x2) v270(0xa0)
0x275: v275(0xffffffffffffffffffffffffffffffffffffffff) = SUB v274(0x10000000000000000000000000000000000000000) v26e(0x1)
0x276: v276(0x4) = CONST 
0x278: v278 = CALLDATALOAD v276(0x4)
0x279: v279 = AND v278 v275(0xffffffffffffffffffffffffffffffffffffffff)
0x27a: v27a(0x24) = CONST 
0x27c: v27c = CALLDATALOAD v27a(0x24)
0x27d: v27d(0x57a) = CONST 
0x280: JUMP v27d(0x57a)
----------------------------------

Begin block 0x281
prev = {}, next = {'0x28c', '0x288'}
----------------------------------
function allowance(address,address)()
Block 0x281
0x282: v282 = CALLVALUE 
0x283: v283 = ISZERO v282
0x284: v284(0x28c) = CONST 
0x287: JUMPI v284(0x28c) v283
----------------------------------

Begin block 0x288
prev = {'0x281'}, next = {}
----------------------------------
Block 0x288
0x288: v288(0x0) = CONST 
0x28b: REVERT v288(0x0) v288(0x0)
----------------------------------

Begin block 0x28c
prev = {'0x281'}, next = {'0x60e'}
----------------------------------
Block 0x28c
0x28d: v28d(0x186) = CONST 
0x290: v290(0x1) = CONST 
0x292: v292(0xa0) = CONST 
0x294: v294(0x2) = CONST 
0x296: v296(0x10000000000000000000000000000000000000000) = EXP v294(0x2) v292(0xa0)
0x297: v297(0xffffffffffffffffffffffffffffffffffffffff) = SUB v296(0x10000000000000000000000000000000000000000) v290(0x1)
0x298: v298(0x4) = CONST 
0x29a: v29a = CALLDATALOAD v298(0x4)
0x29c: v29c = AND v297(0xffffffffffffffffffffffffffffffffffffffff) v29a
0x29e: v29e(0x24) = CONST 
0x2a0: v2a0 = CALLDATALOAD v29e(0x24)
0x2a1: v2a1 = AND v2a0 v297(0xffffffffffffffffffffffffffffffffffffffff)
0x2a2: v2a2(0x60e) = CONST 
0x2a5: JUMP v2a2(0x60e)
----------------------------------

Begin block 0x2a6
prev = {}, next = {'0x2f6', '0x33c0x2a6'}
----------------------------------
function 0x2a6(v2a6arg0)
Block 0x2a6
0x2a7: v2a7(0x3) = CONST 
0x2aa: v2aa = SLOAD v2a7(0x3)
0x2ab: v2ab(0x1) = CONST 
0x2ae: v2ae(0x1) = CONST 
0x2b0: v2b0 = AND v2ae(0x1) v2aa
0x2b1: v2b1 = ISZERO v2b0
0x2b2: v2b2(0x100) = CONST 
0x2b5: v2b5 = MUL v2b2(0x100) v2b1
0x2b6: v2b6 = SUB v2b5 v2ab(0x1)
0x2b7: v2b7 = AND v2b6 v2aa
0x2b8: v2b8(0x2) = CONST 
0x2bb: v2bb = DIV v2b7 v2b8(0x2)
0x2bd: v2bd(0x1f) = CONST 
0x2bf: v2bf = ADD v2bd(0x1f) v2bb
0x2c0: v2c0(0x20) = CONST 
0x2c4: v2c4 = DIV v2bf v2c0(0x20)
0x2c5: v2c5 = MUL v2c4 v2c0(0x20)
0x2c6: v2c6(0x20) = CONST 
0x2c8: v2c8 = ADD v2c6(0x20) v2c5
0x2c9: v2c9(0x40) = CONST 
0x2cb: v2cb = MLOAD v2c9(0x40)
0x2ce: v2ce = ADD v2cb v2c8
0x2cf: v2cf(0x40) = CONST 
0x2d1: MSTORE v2cf(0x40) v2ce
0x2d8: MSTORE v2cb v2bb
0x2d9: v2d9(0x20) = CONST 
0x2db: v2db = ADD v2d9(0x20) v2cb
0x2de: v2de = SLOAD v2a7(0x3)
0x2df: v2df(0x1) = CONST 
0x2e2: v2e2(0x1) = CONST 
0x2e4: v2e4 = AND v2e2(0x1) v2de
0x2e5: v2e5 = ISZERO v2e4
0x2e6: v2e6(0x100) = CONST 
0x2e9: v2e9 = MUL v2e6(0x100) v2e5
0x2ea: v2ea = SUB v2e9 v2df(0x1)
0x2eb: v2eb = AND v2ea v2de
0x2ec: v2ec(0x2) = CONST 
0x2ef: v2ef = DIV v2eb v2ec(0x2)
0x2f1: v2f1 = ISZERO v2ef
0x2f2: v2f2(0x33c) = CONST 
0x2f5: JUMPI v2f2(0x33c) v2f1
----------------------------------

Begin block 0x2f6
prev = {'0x2a6'}, next = {'0x3110x2a6', '0x2fe'}
----------------------------------
Block 0x2f6
0x2f7: v2f7(0x1f) = CONST 
0x2f9: v2f9 = LT v2f7(0x1f) v2ef
0x2fa: v2fa(0x311) = CONST 
0x2fd: JUMPI v2fa(0x311) v2f9
----------------------------------

Begin block 0x2fe
prev = {'0x2f6'}, next = {'0x33c0x2a6'}
----------------------------------
Block 0x2fe
0x2fe: v2fe(0x100) = CONST 
0x303: v303 = SLOAD v2a7(0x3)
0x304: v304 = DIV v303 v2fe(0x100)
0x305: v305 = MUL v304 v2fe(0x100)
0x307: MSTORE v2db v305
0x309: v309(0x20) = CONST 
0x30b: v30b = ADD v309(0x20) v2db
0x30d: v30d(0x33c) = CONST 
0x310: JUMP v30d(0x33c)
----------------------------------

Begin block 0x3110x2a6
prev = {'0x2f6'}, next = {'0x31f0x2a6'}
----------------------------------
Block 0x3110x2a6
0x3130x2a6: v2a6313 = ADD v2db v2ef
0x3160x2a6: v2a6316(0x0) = CONST 
0x3180x2a6: MSTORE v2a6316(0x0) v2a7(0x3)
0x3190x2a6: v2a6319(0x20) = CONST 
0x31b0x2a6: v2a631b(0x0) = CONST 
0x31d0x2a6: v2a631d = SHA3 v2a631b(0x0) v2a6319(0x20)
----------------------------------

Begin block 0x3110x50f
prev = {'0x55f'}, next = {'0x31f0x50f'}
----------------------------------
Block 0x3110x50f
0x3130x50f: v50f313 = ADD v544 v558
0x3160x50f: v50f316(0x0) = CONST 
0x3180x50f: MSTORE v50f316(0x0) v510(0x5)
0x3190x50f: v50f319(0x20) = CONST 
0x31b0x50f: v50f31b(0x0) = CONST 
0x31d0x50f: v50f31d = SHA3 v50f31b(0x0) v50f319(0x20)
----------------------------------

Begin block 0x31f0x2a6
prev = {'0x3110x2a6', '0x31f0x2a6'}, next = {'0x31f0x2a6', '0x3330x2a6'}
----------------------------------
Block 0x31f0x2a6
0x31f0x2a6_0x0: v31f2a6_0 = PHI v2db v2a632b
0x31f0x2a6_0x1: v31f2a6_1 = PHI v2a6327 v2a631d
0x3210x2a6: v2a6321 = SLOAD v31f2a6_1
0x3230x2a6: MSTORE v31f2a6_0 v2a6321
0x3250x2a6: v2a6325(0x1) = CONST 
0x3270x2a6: v2a6327 = ADD v2a6325(0x1) v31f2a6_1
0x3290x2a6: v2a6329(0x20) = CONST 
0x32b0x2a6: v2a632b = ADD v2a6329(0x20) v31f2a6_0
0x32e0x2a6: v2a632e = GT v2a6313 v2a632b
0x32f0x2a6: v2a632f(0x31f) = CONST 
0x3320x2a6: JUMPI v2a632f(0x31f) v2a632e
----------------------------------

Begin block 0x31f0x50f
prev = {'0x31f0x50f', '0x3110x50f'}, next = {'0x31f0x50f', '0x3330x50f'}
----------------------------------
Block 0x31f0x50f
0x31f0x50f_0x0: v31f50f_0 = PHI v544 v50f32b
0x31f0x50f_0x1: v31f50f_1 = PHI v50f327 v50f31d
0x3210x50f: v50f321 = SLOAD v31f50f_1
0x3230x50f: MSTORE v31f50f_0 v50f321
0x3250x50f: v50f325(0x1) = CONST 
0x3270x50f: v50f327 = ADD v50f325(0x1) v31f50f_1
0x3290x50f: v50f329(0x20) = CONST 
0x32b0x50f: v50f32b = ADD v50f329(0x20) v31f50f_0
0x32e0x50f: v50f32e = GT v50f313 v50f32b
0x32f0x50f: v50f32f(0x31f) = CONST 
0x3320x50f: JUMPI v50f32f(0x31f) v50f32e
----------------------------------

Begin block 0x3330x2a6
prev = {'0x31f0x2a6'}, next = {'0x33c0x2a6'}
----------------------------------
Block 0x3330x2a6
0x3350x2a6: v2a6335 = SUB v2a632b v2a6313
0x3360x2a6: v2a6336(0x1f) = CONST 
0x3380x2a6: v2a6338 = AND v2a6336(0x1f) v2a6335
0x33a0x2a6: v2a633a = ADD v2a6313 v2a6338
----------------------------------

Begin block 0x3330x50f
prev = {'0x31f0x50f'}, next = {'0x33c0x50f'}
----------------------------------
Block 0x3330x50f
0x3350x50f: v50f335 = SUB v50f32b v50f313
0x3360x50f: v50f336(0x1f) = CONST 
0x3380x50f: v50f338 = AND v50f336(0x1f) v50f335
0x33a0x50f: v50f33a = ADD v50f313 v50f338
----------------------------------

Begin block 0x33c0x2a6
prev = {'0x3330x2a6', '0x2fe', '0x2a6'}, next = {}
----------------------------------
Block 0x33c0x2a6
0x3430x2a6: RETURNPRIVATE v2a6arg0 v2cb v2a6arg0
----------------------------------

Begin block 0x33c0x50f
prev = {'0x50f', '0x3330x50f', '0x567'}, next = {}
----------------------------------
Block 0x33c0x50f
0x3430x50f: RETURNPRIVATE v50farg0 v534 v50farg0
----------------------------------

Begin block 0x344
prev = {'0x148'}, next = {'0x15f0x13d'}
----------------------------------
Block 0x344
0x345: v345(0x1) = CONST 
0x347: v347(0xa0) = CONST 
0x349: v349(0x2) = CONST 
0x34b: v34b(0x10000000000000000000000000000000000000000) = EXP v349(0x2) v347(0xa0)
0x34c: v34c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v34b(0x10000000000000000000000000000000000000000) v345(0x1)
0x34d: v34d = CALLER 
0x34f: v34f = AND v34c(0xffffffffffffffffffffffffffffffffffffffff) v34d
0x350: v350(0x0) = CONST 
0x354: MSTORE v350(0x0) v34f
0x355: v355(0x2) = CONST 
0x357: v357(0x20) = CONST 
0x35b: MSTORE v357(0x20) v355(0x2)
0x35c: v35c(0x40) = CONST 
0x360: v360 = SHA3 v350(0x0) v35c(0x40)
0x363: v363 = AND v157 v34c(0xffffffffffffffffffffffffffffffffffffffff)
0x366: MSTORE v350(0x0) v363
0x36a: MSTORE v357(0x20) v360
0x36d: v36d = SHA3 v350(0x0) v35c(0x40)
0x370: SSTORE v36d v15a
0x375: v375(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0x399: v399 = MLOAD v35c(0x40)
0x39c: MSTORE v399 v15a
0x39d: v39d(0x20) = CONST 
0x39f: v39f = ADD v39d(0x20) v399
0x3a0: v3a0(0x40) = CONST 
0x3a2: v3a2 = MLOAD v3a0(0x40)
0x3a5: v3a5 = SUB v39f v3a2
0x3a7: LOG3 v3a2 v3a5 v375(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) v34f v363
0x3a9: v3a9(0x1) = CONST 
0x3af: JUMP v149(0x15f)
----------------------------------

Begin block 0x3b0
prev = {'0x17e'}, next = {'0x1860x173'}
----------------------------------
Block 0x3b0
0x3b1: v3b1(0x0) = CONST 
0x3b3: v3b3 = SLOAD v3b1(0x0)
0x3b5: JUMP v17f(0x186)
----------------------------------

Begin block 0x3b6
prev = {'0x1a3'}, next = {'0x3f5', '0x3fa'}
----------------------------------
Block 0x3b6
0x3b7: v3b7(0x1) = CONST 
0x3b9: v3b9(0xa0) = CONST 
0x3bb: v3bb(0x2) = CONST 
0x3bd: v3bd(0x10000000000000000000000000000000000000000) = EXP v3bb(0x2) v3b9(0xa0)
0x3be: v3be(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3bd(0x10000000000000000000000000000000000000000) v3b7(0x1)
0x3c1: v3c1 = AND v1b3 v3be(0xffffffffffffffffffffffffffffffffffffffff)
0x3c2: v3c2(0x0) = CONST 
0x3c6: MSTORE v3c2(0x0) v3c1
0x3c7: v3c7(0x2) = CONST 
0x3c9: v3c9(0x20) = CONST 
0x3cd: MSTORE v3c9(0x20) v3c7(0x2)
0x3ce: v3ce(0x40) = CONST 
0x3d2: v3d2 = SHA3 v3c2(0x0) v3ce(0x40)
0x3d3: v3d3 = CALLER 
0x3d6: v3d6 = AND v3be(0xffffffffffffffffffffffffffffffffffffffff) v3d3
0x3d8: MSTORE v3c2(0x0) v3d6
0x3db: MSTORE v3c9(0x20) v3d2
0x3de: v3de = SHA3 v3c2(0x0) v3ce(0x40)
0x3df: v3df = SLOAD v3de
0x3e2: MSTORE v3c2(0x0) v3c1
0x3e3: v3e3(0x1) = CONST 
0x3e6: MSTORE v3c9(0x20) v3e3(0x1)
0x3e9: v3e9 = SHA3 v3c2(0x0) v3ce(0x40)
0x3ea: v3ea = SLOAD v3e9
0x3ed: v3ed = LT v3ea v1bb
0x3ef: v3ef = ISZERO v3ed
0x3f1: v3f1(0x3fa) = CONST 
0x3f4: JUMPI v3f1(0x3fa) v3ed
----------------------------------

Begin block 0x3f5
prev = {'0x3b6'}, next = {'0x3fa'}
----------------------------------
Block 0x3f5
0x3f8: v3f8 = LT v3df v1bb
0x3f9: v3f9 = ISZERO v3f8
----------------------------------

Begin block 0x3fa
prev = {'0x3b6', '0x3f5'}, next = {'0x401', '0x405'}
----------------------------------
Block 0x3fa
0x3fa_0x0: v3fa_0 = PHI v3ef v3f9
0x3fb: v3fb = ISZERO v3fa_0
0x3fc: v3fc = ISZERO v3fb
0x3fd: v3fd(0x405) = CONST 
0x400: JUMPI v3fd(0x405) v3fc
----------------------------------

Begin block 0x401
prev = {'0x3fa'}, next = {}
----------------------------------
Block 0x401
0x401: v401(0x0) = CONST 
0x404: REVERT v401(0x0) v401(0x0)
----------------------------------

Begin block 0x405
prev = {'0x3fa'}, next = {'0x46a', '0x43d'}
----------------------------------
Block 0x405
0x406: v406(0x1) = CONST 
0x408: v408(0xa0) = CONST 
0x40a: v40a(0x2) = CONST 
0x40c: v40c(0x10000000000000000000000000000000000000000) = EXP v40a(0x2) v408(0xa0)
0x40d: v40d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v40c(0x10000000000000000000000000000000000000000) v406(0x1)
0x410: v410 = AND v1b8 v40d(0xffffffffffffffffffffffffffffffffffffffff)
0x411: v411(0x0) = CONST 
0x415: MSTORE v411(0x0) v410
0x416: v416(0x1) = CONST 
0x418: v418(0x20) = CONST 
0x41a: MSTORE v418(0x20) v416(0x1)
0x41b: v41b(0x40) = CONST 
0x41f: v41f = SHA3 v411(0x0) v41b(0x40)
0x421: v421 = SLOAD v41f
0x423: v423 = ADD v1bb v421
0x425: SSTORE v41f v423
0x428: v428 = AND v1b3 v40d(0xffffffffffffffffffffffffffffffffffffffff)
0x42a: MSTORE v411(0x0) v428
0x42b: v42b = SHA3 v411(0x0) v41b(0x40)
0x42d: v42d = SLOAD v42b
0x430: v430 = SUB v42d v1bb
0x432: SSTORE v42b v430
0x433: v433(0x0) = CONST 
0x435: v435(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v433(0x0)
0x437: v437 = LT v3df v435(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x438: v438 = ISZERO v437
0x439: v439(0x46a) = CONST 
0x43c: JUMPI v439(0x46a) v438
----------------------------------

Begin block 0x43d
prev = {'0x405'}, next = {'0x46a'}
----------------------------------
Block 0x43d
0x43d: v43d(0x1) = CONST 
0x43f: v43f(0xa0) = CONST 
0x441: v441(0x2) = CONST 
0x443: v443(0x10000000000000000000000000000000000000000) = EXP v441(0x2) v43f(0xa0)
0x444: v444(0xffffffffffffffffffffffffffffffffffffffff) = SUB v443(0x10000000000000000000000000000000000000000) v43d(0x1)
0x447: v447 = AND v1b3 v444(0xffffffffffffffffffffffffffffffffffffffff)
0x448: v448(0x0) = CONST 
0x44c: MSTORE v448(0x0) v447
0x44d: v44d(0x2) = CONST 
0x44f: v44f(0x20) = CONST 
0x453: MSTORE v44f(0x20) v44d(0x2)
0x454: v454(0x40) = CONST 
0x458: v458 = SHA3 v448(0x0) v454(0x40)
0x459: v459 = CALLER 
0x45c: v45c = AND v444(0xffffffffffffffffffffffffffffffffffffffff) v459
0x45e: MSTORE v448(0x0) v45c
0x461: MSTORE v44f(0x20) v458
0x462: v462 = SHA3 v448(0x0) v454(0x40)
0x464: v464 = SLOAD v462
0x467: v467 = SUB v464 v1bb
0x469: SSTORE v462 v467
----------------------------------

Begin block 0x46a
prev = {'0x405', '0x43d'}, next = {'0x15f0x198'}
----------------------------------
Block 0x46a
0x46c: v46c(0x1) = CONST 
0x46e: v46e(0xa0) = CONST 
0x470: v470(0x2) = CONST 
0x472: v472(0x10000000000000000000000000000000000000000) = EXP v470(0x2) v46e(0xa0)
0x473: v473(0xffffffffffffffffffffffffffffffffffffffff) = SUB v472(0x10000000000000000000000000000000000000000) v46c(0x1)
0x474: v474 = AND v473(0xffffffffffffffffffffffffffffffffffffffff) v1b8
0x476: v476(0x1) = CONST 
0x478: v478(0xa0) = CONST 
0x47a: v47a(0x2) = CONST 
0x47c: v47c(0x10000000000000000000000000000000000000000) = EXP v47a(0x2) v478(0xa0)
0x47d: v47d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v47c(0x10000000000000000000000000000000000000000) v476(0x1)
0x47e: v47e = AND v47d(0xffffffffffffffffffffffffffffffffffffffff) v1b3
0x47f: v47f(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x4a1: v4a1(0x40) = CONST 
0x4a3: v4a3 = MLOAD v4a1(0x40)
0x4a6: MSTORE v4a3 v1bb
0x4a7: v4a7(0x20) = CONST 
0x4a9: v4a9 = ADD v4a7(0x20) v4a3
0x4aa: v4aa(0x40) = CONST 
0x4ac: v4ac = MLOAD v4aa(0x40)
0x4af: v4af = SUB v4a9 v4ac
0x4b1: LOG3 v4ac v4af v47f(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v47e v474
0x4b3: v4b3(0x1) = CONST 
0x4bb: JUMP v1a4(0x15f)
----------------------------------

Begin block 0x4bc
prev = {'0x1cb'}, next = {'0x1860x1c0'}
----------------------------------
Block 0x4bc
0x4bd: v4bd(0x1) = CONST 
0x4bf: v4bf(0x20) = CONST 
0x4c1: MSTORE v4bf(0x20) v4bd(0x1)
0x4c2: v4c2(0x0) = CONST 
0x4c6: MSTORE v4c2(0x0) v1da
0x4c7: v4c7(0x40) = CONST 
0x4ca: v4ca = SHA3 v4c2(0x0) v4c7(0x40)
0x4cb: v4cb = SLOAD v4ca
0x4cd: JUMP v1cc(0x186)
----------------------------------

Begin block 0x4ce
prev = {'0x1ea'}, next = {'0x1f2'}
----------------------------------
Block 0x4ce
0x4cf: v4cf(0x4) = CONST 
0x4d1: v4d1 = SLOAD v4cf(0x4)
0x4d2: v4d2(0xff) = CONST 
0x4d4: v4d4 = AND v4d2(0xff) v4d1
0x4d6: JUMP v1eb(0x1f2)
----------------------------------

Begin block 0x4d7
prev = {'0x213'}, next = {'0x1860x208'}
----------------------------------
Block 0x4d7
0x4d8: v4d8(0x2) = CONST 
0x4da: v4da(0x20) = CONST 
0x4de: MSTORE v4da(0x20) v4d8(0x2)
0x4df: v4df(0x0) = CONST 
0x4e3: MSTORE v4df(0x0) v223
0x4e4: v4e4(0x40) = CONST 
0x4e8: v4e8 = SHA3 v4df(0x0) v4e4(0x40)
0x4eb: MSTORE v4da(0x20) v4e8
0x4ee: MSTORE v4df(0x0) v228
0x4f0: v4f0 = SHA3 v4df(0x0) v4e4(0x40)
0x4f1: v4f1 = SLOAD v4f0
0x4f3: JUMP v214(0x186)
----------------------------------

Begin block 0x4f4
prev = {'0x238'}, next = {'0x1860x22d'}
----------------------------------
Block 0x4f4
0x4f5: v4f5(0x1) = CONST 
0x4f7: v4f7(0xa0) = CONST 
0x4f9: v4f9(0x2) = CONST 
0x4fb: v4fb(0x10000000000000000000000000000000000000000) = EXP v4f9(0x2) v4f7(0xa0)
0x4fc: v4fc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4fb(0x10000000000000000000000000000000000000000) v4f5(0x1)
0x4fd: v4fd = AND v4fc(0xffffffffffffffffffffffffffffffffffffffff) v247
0x4fe: v4fe(0x0) = CONST 
0x502: MSTORE v4fe(0x0) v4fd
0x503: v503(0x1) = CONST 
0x505: v505(0x20) = CONST 
0x507: MSTORE v505(0x20) v503(0x1)
0x508: v508(0x40) = CONST 
0x50b: v50b = SHA3 v4fe(0x0) v508(0x40)
0x50c: v50c = SLOAD v50b
0x50e: JUMP v239(0x186)
----------------------------------

Begin block 0x50f
prev = {}, next = {'0x33c0x50f', '0x55f'}
----------------------------------
function 0x50f(v50farg0)
Block 0x50f
0x510: v510(0x5) = CONST 
0x513: v513 = SLOAD v510(0x5)
0x514: v514(0x1) = CONST 
0x517: v517(0x1) = CONST 
0x519: v519 = AND v517(0x1) v513
0x51a: v51a = ISZERO v519
0x51b: v51b(0x100) = CONST 
0x51e: v51e = MUL v51b(0x100) v51a
0x51f: v51f = SUB v51e v514(0x1)
0x520: v520 = AND v51f v513
0x521: v521(0x2) = CONST 
0x524: v524 = DIV v520 v521(0x2)
0x526: v526(0x1f) = CONST 
0x528: v528 = ADD v526(0x1f) v524
0x529: v529(0x20) = CONST 
0x52d: v52d = DIV v528 v529(0x20)
0x52e: v52e = MUL v52d v529(0x20)
0x52f: v52f(0x20) = CONST 
0x531: v531 = ADD v52f(0x20) v52e
0x532: v532(0x40) = CONST 
0x534: v534 = MLOAD v532(0x40)
0x537: v537 = ADD v534 v531
0x538: v538(0x40) = CONST 
0x53a: MSTORE v538(0x40) v537
0x541: MSTORE v534 v524
0x542: v542(0x20) = CONST 
0x544: v544 = ADD v542(0x20) v534
0x547: v547 = SLOAD v510(0x5)
0x548: v548(0x1) = CONST 
0x54b: v54b(0x1) = CONST 
0x54d: v54d = AND v54b(0x1) v547
0x54e: v54e = ISZERO v54d
0x54f: v54f(0x100) = CONST 
0x552: v552 = MUL v54f(0x100) v54e
0x553: v553 = SUB v552 v548(0x1)
0x554: v554 = AND v553 v547
0x555: v555(0x2) = CONST 
0x558: v558 = DIV v554 v555(0x2)
0x55a: v55a = ISZERO v558
0x55b: v55b(0x33c) = CONST 
0x55e: JUMPI v55b(0x33c) v55a
----------------------------------

Begin block 0x55f
prev = {'0x50f'}, next = {'0x3110x50f', '0x567'}
----------------------------------
Block 0x55f
0x560: v560(0x1f) = CONST 
0x562: v562 = LT v560(0x1f) v558
0x563: v563(0x311) = CONST 
0x566: JUMPI v563(0x311) v562
----------------------------------

Begin block 0x567
prev = {'0x55f'}, next = {'0x33c0x50f'}
----------------------------------
Block 0x567
0x567: v567(0x100) = CONST 
0x56c: v56c = SLOAD v510(0x5)
0x56d: v56d = DIV v56c v567(0x100)
0x56e: v56e = MUL v56d v567(0x100)
0x570: MSTORE v544 v56e
0x572: v572(0x20) = CONST 
0x574: v574 = ADD v572(0x20) v544
0x576: v576(0x33c) = CONST 
0x579: JUMP v576(0x33c)
----------------------------------

Begin block 0x57a
prev = {'0x26a'}, next = {'0x5a0', '0x59c'}
----------------------------------
Block 0x57a
0x57b: v57b(0x1) = CONST 
0x57d: v57d(0xa0) = CONST 
0x57f: v57f(0x2) = CONST 
0x581: v581(0x10000000000000000000000000000000000000000) = EXP v57f(0x2) v57d(0xa0)
0x582: v582(0xffffffffffffffffffffffffffffffffffffffff) = SUB v581(0x10000000000000000000000000000000000000000) v57b(0x1)
0x583: v583 = CALLER 
0x584: v584 = AND v583 v582(0xffffffffffffffffffffffffffffffffffffffff)
0x585: v585(0x0) = CONST 
0x589: MSTORE v585(0x0) v584
0x58a: v58a(0x1) = CONST 
0x58c: v58c(0x20) = CONST 
0x58e: MSTORE v58c(0x20) v58a(0x1)
0x58f: v58f(0x40) = CONST 
0x592: v592 = SHA3 v585(0x0) v58f(0x40)
0x593: v593 = SLOAD v592
0x596: v596 = LT v593 v27c
0x597: v597 = ISZERO v596
0x598: v598(0x5a0) = CONST 
0x59b: JUMPI v598(0x5a0) v597
----------------------------------

Begin block 0x59c
prev = {'0x57a'}, next = {}
----------------------------------
Block 0x59c
0x59c: v59c(0x0) = CONST 
0x59f: REVERT v59c(0x0) v59c(0x0)
----------------------------------

Begin block 0x5a0
prev = {'0x57a'}, next = {'0x15f0x25f'}
----------------------------------
Block 0x5a0
0x5a1: v5a1(0x1) = CONST 
0x5a3: v5a3(0xa0) = CONST 
0x5a5: v5a5(0x2) = CONST 
0x5a7: v5a7(0x10000000000000000000000000000000000000000) = EXP v5a5(0x2) v5a3(0xa0)
0x5a8: v5a8(0xffffffffffffffffffffffffffffffffffffffff) = SUB v5a7(0x10000000000000000000000000000000000000000) v5a1(0x1)
0x5a9: v5a9 = CALLER 
0x5ab: v5ab = AND v5a8(0xffffffffffffffffffffffffffffffffffffffff) v5a9
0x5ac: v5ac(0x0) = CONST 
0x5b0: MSTORE v5ac(0x0) v5ab
0x5b1: v5b1(0x1) = CONST 
0x5b3: v5b3(0x20) = CONST 
0x5b5: MSTORE v5b3(0x20) v5b1(0x1)
0x5b6: v5b6(0x40) = CONST 
0x5ba: v5ba = SHA3 v5ac(0x0) v5b6(0x40)
0x5bc: v5bc = SLOAD v5ba
0x5bf: v5bf = SUB v5bc v27c
0x5c1: SSTORE v5ba v5bf
0x5c4: v5c4 = AND v279 v5a8(0xffffffffffffffffffffffffffffffffffffffff)
0x5c7: MSTORE v5ac(0x0) v5c4
0x5cb: v5cb = SHA3 v5ac(0x0) v5b6(0x40)
0x5cd: v5cd = SLOAD v5cb
0x5cf: v5cf = ADD v27c v5cd
0x5d1: SSTORE v5cb v5cf
0x5d3: v5d3(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x5f7: v5f7 = MLOAD v5b6(0x40)
0x5fa: MSTORE v5f7 v27c
0x5fb: v5fb(0x20) = CONST 
0x5fd: v5fd = ADD v5fb(0x20) v5f7
0x5fe: v5fe(0x40) = CONST 
0x600: v600 = MLOAD v5fe(0x40)
0x603: v603 = SUB v5fd v600
0x605: LOG3 v600 v603 v5d3(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v5ab v5c4
0x607: v607(0x1) = CONST 
0x60d: JUMP v26b(0x15f)
----------------------------------

Begin block 0x60e
prev = {'0x28c'}, next = {'0x1860x281'}
----------------------------------
Block 0x60e
0x60f: v60f(0x1) = CONST 
0x611: v611(0xa0) = CONST 
0x613: v613(0x2) = CONST 
0x615: v615(0x10000000000000000000000000000000000000000) = EXP v613(0x2) v611(0xa0)
0x616: v616(0xffffffffffffffffffffffffffffffffffffffff) = SUB v615(0x10000000000000000000000000000000000000000) v60f(0x1)
0x619: v619 = AND v616(0xffffffffffffffffffffffffffffffffffffffff) v29c
0x61a: v61a(0x0) = CONST 
0x61e: MSTORE v61a(0x0) v619
0x61f: v61f(0x2) = CONST 
0x621: v621(0x20) = CONST 
0x625: MSTORE v621(0x20) v61f(0x2)
0x626: v626(0x40) = CONST 
0x62a: v62a = SHA3 v61a(0x0) v626(0x40)
0x62e: v62e = AND v616(0xffffffffffffffffffffffffffffffffffffffff) v2a1
0x630: MSTORE v61a(0x0) v62e
0x634: MSTORE v621(0x20) v62a
0x635: v635 = SHA3 v61a(0x0) v626(0x40)
0x636: v636 = SLOAD v635
0x638: JUMP v28d(0x186)
----------------------------------

Begin block 0x66d
prev = {'0x0', '0xa3'}, next = {}
----------------------------------
Block 0x66d
0x66e: v66e(0xae) = CONST 
0x66f: CALLPRIVATE v66e(0xae)
----------------------------------

Begin block 0x670
prev = {'0xd'}, next = {}
----------------------------------
Block 0x670
0x671: v671(0xb3) = CONST 
0x672: CALLPRIVATE v671(0xb3)
----------------------------------

Begin block 0x673
prev = {'0x40'}, next = {}
----------------------------------
Block 0x673
0x674: v674(0x13d) = CONST 
0x675: CALLPRIVATE v674(0x13d)
----------------------------------

Begin block 0x676
prev = {'0x4b'}, next = {}
----------------------------------
Block 0x676
0x677: v677(0x173) = CONST 
0x678: CALLPRIVATE v677(0x173)
----------------------------------

Begin block 0x679
prev = {'0x56'}, next = {}
----------------------------------
Block 0x679
0x67a: v67a(0x198) = CONST 
0x67b: CALLPRIVATE v67a(0x198)
----------------------------------

Begin block 0x67c
prev = {'0x61'}, next = {}
----------------------------------
Block 0x67c
0x67d: v67d(0x1c0) = CONST 
0x67e: CALLPRIVATE v67d(0x1c0)
----------------------------------

Begin block 0x67f
prev = {'0x6c'}, next = {}
----------------------------------
Block 0x67f
0x680: v680(0x1df) = CONST 
0x681: CALLPRIVATE v680(0x1df)
----------------------------------

Begin block 0x682
prev = {'0x77'}, next = {}
----------------------------------
Block 0x682
0x683: v683(0x208) = CONST 
0x684: CALLPRIVATE v683(0x208)
----------------------------------

Begin block 0x685
prev = {'0x82'}, next = {}
----------------------------------
Block 0x685
0x686: v686(0x22d) = CONST 
0x687: CALLPRIVATE v686(0x22d)
----------------------------------

Begin block 0x688
prev = {'0x8d'}, next = {}
----------------------------------
Block 0x688
0x689: v689(0x24c) = CONST 
0x68a: CALLPRIVATE v689(0x24c)
----------------------------------

Begin block 0x68b
prev = {'0x98'}, next = {}
----------------------------------
Block 0x68b
0x68c: v68c(0x25f) = CONST 
0x68d: CALLPRIVATE v68c(0x25f)
----------------------------------

Begin block 0x68e
prev = {'0xa3'}, next = {}
----------------------------------
Block 0x68e
0x68f: v68f(0x281) = CONST 
0x690: CALLPRIVATE v68f(0x281)
----------------------------------
