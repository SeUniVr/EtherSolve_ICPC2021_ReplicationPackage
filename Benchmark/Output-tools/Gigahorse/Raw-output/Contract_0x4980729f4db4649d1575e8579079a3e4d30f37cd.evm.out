
Begin block 0x0
prev = {}, next = {'0x5a5', '0xd'}
----------------------------------
function __function_selector__()
Block 0x0
0x0: v0(0x60) = CONST 
0x2: v2(0x40) = CONST 
0x4: MSTORE v2(0x40) v0(0x60)
0x5: v5(0x4) = CONST 
0x7: v7 = CALLDATASIZE 
0x8: v8 = LT v7 v5(0x4)
0x591: v591(0x5a5) = CONST 
0x592: JUMPI v591(0x5a5) v8
----------------------------------

Begin block 0xd
prev = {'0x0'}, next = {'0x40', '0x5a8'}
----------------------------------
Block 0xd
0xd: vd(0xffffffff) = CONST 
0x12: v12(0x100000000000000000000000000000000000000000000000000000000) = CONST 
0x30: v30(0x0) = CONST 
0x32: v32 = CALLDATALOAD v30(0x0)
0x33: v33 = DIV v32 v12(0x100000000000000000000000000000000000000000000000000000000)
0x34: v34 = AND v33 vd(0xffffffff)
0x35: v35(0x6fdde03) = CONST 
0x3b: v3b = EQ v34 v35(0x6fdde03)
0x593: v593(0x5a8) = CONST 
0x594: JUMPI v593(0x5a8) v3b
----------------------------------

Begin block 0x40
prev = {'0xd'}, next = {'0x5ab', '0x4b'}
----------------------------------
Block 0x40
0x41: v41(0x95ea7b3) = CONST 
0x46: v46 = EQ v41(0x95ea7b3) v34
0x595: v595(0x5ab) = CONST 
0x596: JUMPI v595(0x5ab) v46
----------------------------------

Begin block 0x4b
prev = {'0x40'}, next = {'0x56', '0x5ae'}
----------------------------------
Block 0x4b
0x4c: v4c(0x18160ddd) = CONST 
0x51: v51 = EQ v4c(0x18160ddd) v34
0x597: v597(0x5ae) = CONST 
0x598: JUMPI v597(0x5ae) v51
----------------------------------

Begin block 0x56
prev = {'0x4b'}, next = {'0x61', '0x5b1'}
----------------------------------
Block 0x56
0x57: v57(0x23b872dd) = CONST 
0x5c: v5c = EQ v57(0x23b872dd) v34
0x599: v599(0x5b1) = CONST 
0x59a: JUMPI v599(0x5b1) v5c
----------------------------------

Begin block 0x61
prev = {'0x56'}, next = {'0x6c', '0x5b4'}
----------------------------------
Block 0x61
0x62: v62(0x313ce567) = CONST 
0x67: v67 = EQ v62(0x313ce567) v34
0x59b: v59b(0x5b4) = CONST 
0x59c: JUMPI v59b(0x5b4) v67
----------------------------------

Begin block 0x6c
prev = {'0x61'}, next = {'0x77', '0x5b7'}
----------------------------------
Block 0x6c
0x6d: v6d(0x70a08231) = CONST 
0x72: v72 = EQ v6d(0x70a08231) v34
0x59d: v59d(0x5b7) = CONST 
0x59e: JUMPI v59d(0x5b7) v72
----------------------------------

Begin block 0x77
prev = {'0x6c'}, next = {'0x5ba', '0x82'}
----------------------------------
Block 0x77
0x78: v78(0x95d89b41) = CONST 
0x7d: v7d = EQ v78(0x95d89b41) v34
0x59f: v59f(0x5ba) = CONST 
0x5a0: JUMPI v59f(0x5ba) v7d
----------------------------------

Begin block 0x82
prev = {'0x77'}, next = {'0x5bd', '0x8d'}
----------------------------------
Block 0x82
0x83: v83(0xa9059cbb) = CONST 
0x88: v88 = EQ v83(0xa9059cbb) v34
0x5a1: v5a1(0x5bd) = CONST 
0x5a2: JUMPI v5a1(0x5bd) v88
----------------------------------

Begin block 0x8d
prev = {'0x82'}, next = {'0x5a5', '0x5c0'}
----------------------------------
Block 0x8d
0x8e: v8e(0xdd62ed3e) = CONST 
0x93: v93 = EQ v8e(0xdd62ed3e) v34
0x5a3: v5a3(0x5c0) = CONST 
0x5a4: JUMPI v5a3(0x5c0) v93
----------------------------------

Begin block 0x98
prev = {}, next = {}
----------------------------------
function batchLock_63efZf()()
Block 0x98
0x99: v99(0x0) = CONST 
0x9c: REVERT v99(0x0) v99(0x0)
----------------------------------

Begin block 0x9d
prev = {}, next = {'0xa8', '0xa4'}
----------------------------------
function name()()
Block 0x9d
0x9e: v9e = CALLVALUE 
0x9f: v9f = ISZERO v9e
0xa0: va0(0xa8) = CONST 
0xa3: JUMPI va0(0xa8) v9f
----------------------------------

Begin block 0xa4
prev = {'0x9d'}, next = {}
----------------------------------
Block 0xa4
0xa4: va4(0x0) = CONST 
0xa7: REVERT va4(0x0) va4(0x0)
----------------------------------

Begin block 0xa8
prev = {'0x9d'}, next = {'0x24c'}
----------------------------------
Block 0xa8
0xa9: va9(0xb0) = CONST 
0xac: vac(0x24c) = CONST 
0xaf: JUMP vac(0x24c)
----------------------------------

Begin block 0xb00x9d
prev = {'0x24c'}, next = {'0xd40x9d'}
----------------------------------
Block 0xb00x9d
0xb10x9d: v9db1(0x40) = CONST 
0xb30x9d: v9db3 = MLOAD v9db1(0x40)
0xb40x9d: v9db4(0x20) = CONST 
0xb80x9d: MSTORE v9db3 v9db4(0x20)
0xbc0x9d: v9dbc = ADD v9db3 v9db4(0x20)
0xc00x9d: v9dc0 = MLOAD v250
0xc20x9d: MSTORE v9dbc v9dc0
0xc30x9d: v9dc3(0x20) = CONST 
0xc50x9d: v9dc5 = ADD v9dc3(0x20) v9dbc
0xc90x9d: v9dc9 = MLOAD v250
0xcb0x9d: v9dcb(0x20) = CONST 
0xcd0x9d: v9dcd = ADD v9dcb(0x20) v250
0xd20x9d: v9dd2(0x0) = CONST 
----------------------------------

Begin block 0xb00x1f2
prev = {'0x446'}, next = {'0xd40x1f2'}
----------------------------------
Block 0xb00x1f2
0xb10x1f2: v1f2b1(0x40) = CONST 
0xb30x1f2: v1f2b3 = MLOAD v1f2b1(0x40)
0xb40x1f2: v1f2b4(0x20) = CONST 
0xb80x1f2: MSTORE v1f2b3 v1f2b4(0x20)
0xbc0x1f2: v1f2bc = ADD v1f2b3 v1f2b4(0x20)
0xc00x1f2: v1f2c0 = MLOAD v44a
0xc20x1f2: MSTORE v1f2bc v1f2c0
0xc30x1f2: v1f2c3(0x20) = CONST 
0xc50x1f2: v1f2c5 = ADD v1f2c3(0x20) v1f2bc
0xc90x1f2: v1f2c9 = MLOAD v44a
0xcb0x1f2: v1f2cb(0x20) = CONST 
0xcd0x1f2: v1f2cd = ADD v1f2cb(0x20) v44a
0xd20x1f2: v1f2d2(0x0) = CONST 
----------------------------------

Begin block 0xd40x9d
prev = {'0xdd0x9d', '0xb00x9d'}, next = {'0xdd0x9d', '0xec0x9d'}
----------------------------------
Block 0xd40x9d
0xd40x9d_0x0: vd49d_0 = PHI v9dd2(0x0) v9de7
0xd70x9d: v9dd7 = LT vd49d_0 v9dc9
0xd80x9d: v9dd8 = ISZERO v9dd7
0xd90x9d: v9dd9(0xec) = CONST 
0xdc0x9d: JUMPI v9dd9(0xec) v9dd8
----------------------------------

Begin block 0xd40x1f2
prev = {'0xb00x1f2', '0xdd0x1f2'}, next = {'0xdd0x1f2', '0xec0x1f2'}
----------------------------------
Block 0xd40x1f2
0xd40x1f2_0x0: vd41f2_0 = PHI v1f2d2(0x0) v1f2e7
0xd70x1f2: v1f2d7 = LT vd41f2_0 v1f2c9
0xd80x1f2: v1f2d8 = ISZERO v1f2d7
0xd90x1f2: v1f2d9(0xec) = CONST 
0xdc0x1f2: JUMPI v1f2d9(0xec) v1f2d8
----------------------------------

Begin block 0xdd0x9d
prev = {'0xd40x9d'}, next = {'0xd40x9d'}
----------------------------------
Block 0xdd0x9d
0xdd0x9d_0x0: vdd9d_0 = PHI v9dd2(0x0) v9de7
0xdf0x9d: v9ddf = ADD v9dcd vdd9d_0
0xe00x9d: v9de0 = MLOAD v9ddf
0xe30x9d: v9de3 = ADD vdd9d_0 v9dc5
0xe40x9d: MSTORE v9de3 v9de0
0xe50x9d: v9de5(0x20) = CONST 
0xe70x9d: v9de7 = ADD v9de5(0x20) vdd9d_0
0xe80x9d: v9de8(0xd4) = CONST 
0xeb0x9d: JUMP v9de8(0xd4)
----------------------------------

Begin block 0xdd0x1f2
prev = {'0xd40x1f2'}, next = {'0xd40x1f2'}
----------------------------------
Block 0xdd0x1f2
0xdd0x1f2_0x0: vdd1f2_0 = PHI v1f2d2(0x0) v1f2e7
0xdf0x1f2: v1f2df = ADD v1f2cd vdd1f2_0
0xe00x1f2: v1f2e0 = MLOAD v1f2df
0xe30x1f2: v1f2e3 = ADD vdd1f2_0 v1f2c5
0xe40x1f2: MSTORE v1f2e3 v1f2e0
0xe50x1f2: v1f2e5(0x20) = CONST 
0xe70x1f2: v1f2e7 = ADD v1f2e5(0x20) vdd1f2_0
0xe80x1f2: v1f2e8(0xd4) = CONST 
0xeb0x1f2: JUMP v1f2e8(0xd4)
----------------------------------

Begin block 0xec0x9d
prev = {'0xd40x9d'}, next = {'0x1000x9d', '0x1190x9d'}
----------------------------------
Block 0xec0x9d
0xf50x9d: v9df5 = ADD v9dc9 v9dc5
0xf70x9d: v9df7(0x1f) = CONST 
0xf90x9d: v9df9 = AND v9df7(0x1f) v9dc9
0xfb0x9d: v9dfb = ISZERO v9df9
0xfc0x9d: v9dfc(0x119) = CONST 
0xff0x9d: JUMPI v9dfc(0x119) v9dfb
----------------------------------

Begin block 0xec0x1f2
prev = {'0xd40x1f2'}, next = {'0x1000x1f2', '0x1190x1f2'}
----------------------------------
Block 0xec0x1f2
0xf50x1f2: v1f2f5 = ADD v1f2c9 v1f2c5
0xf70x1f2: v1f2f7(0x1f) = CONST 
0xf90x1f2: v1f2f9 = AND v1f2f7(0x1f) v1f2c9
0xfb0x1f2: v1f2fb = ISZERO v1f2f9
0xfc0x1f2: v1f2fc(0x119) = CONST 
0xff0x1f2: JUMPI v1f2fc(0x119) v1f2fb
----------------------------------

Begin block 0x1000x9d
prev = {'0xec0x9d'}, next = {'0x1190x9d'}
----------------------------------
Block 0x1000x9d
0x1020x9d: v9d102 = SUB v9df5 v9df9
0x1040x9d: v9d104 = MLOAD v9d102
0x1050x9d: v9d105(0x1) = CONST 
0x1080x9d: v9d108(0x20) = CONST 
0x10a0x9d: v9d10a = SUB v9d108(0x20) v9df9
0x10b0x9d: v9d10b(0x100) = CONST 
0x10e0x9d: v9d10e = EXP v9d10b(0x100) v9d10a
0x10f0x9d: v9d10f = SUB v9d10e v9d105(0x1)
0x1100x9d: v9d110 = NOT v9d10f
0x1110x9d: v9d111 = AND v9d110 v9d104
0x1130x9d: MSTORE v9d102 v9d111
0x1140x9d: v9d114(0x20) = CONST 
0x1160x9d: v9d116 = ADD v9d114(0x20) v9d102
----------------------------------

Begin block 0x1000x1f2
prev = {'0xec0x1f2'}, next = {'0x1190x1f2'}
----------------------------------
Block 0x1000x1f2
0x1020x1f2: v1f2102 = SUB v1f2f5 v1f2f9
0x1040x1f2: v1f2104 = MLOAD v1f2102
0x1050x1f2: v1f2105(0x1) = CONST 
0x1080x1f2: v1f2108(0x20) = CONST 
0x10a0x1f2: v1f210a = SUB v1f2108(0x20) v1f2f9
0x10b0x1f2: v1f210b(0x100) = CONST 
0x10e0x1f2: v1f210e = EXP v1f210b(0x100) v1f210a
0x10f0x1f2: v1f210f = SUB v1f210e v1f2105(0x1)
0x1100x1f2: v1f2110 = NOT v1f210f
0x1110x1f2: v1f2111 = AND v1f2110 v1f2104
0x1130x1f2: MSTORE v1f2102 v1f2111
0x1140x1f2: v1f2114(0x20) = CONST 
0x1160x1f2: v1f2116 = ADD v1f2114(0x20) v1f2102
----------------------------------

Begin block 0x1190x9d
prev = {'0x1000x9d', '0xec0x9d'}, next = {}
----------------------------------
Block 0x1190x9d
0x1190x9d_0x1: v1199d_1 = PHI v9df5 v9d116
0x11f0x9d: v9d11f(0x40) = CONST 
0x1210x9d: v9d121 = MLOAD v9d11f(0x40)
0x1240x9d: v9d124 = SUB v1199d_1 v9d121
0x1260x9d: RETURN v9d121 v9d124
----------------------------------

Begin block 0x1190x1f2
prev = {'0x1000x1f2', '0xec0x1f2'}, next = {}
----------------------------------
Block 0x1190x1f2
0x1190x1f2_0x1: v1191f2_1 = PHI v1f2f5 v1f2116
0x11f0x1f2: v1f211f(0x40) = CONST 
0x1210x1f2: v1f2121 = MLOAD v1f211f(0x40)
0x1240x1f2: v1f2124 = SUB v1191f2_1 v1f2121
0x1260x1f2: RETURN v1f2121 v1f2124
----------------------------------

Begin block 0x127
prev = {}, next = {'0x132', '0x12e'}
----------------------------------
function approve(address,uint256)()
Block 0x127
0x128: v128 = CALLVALUE 
0x129: v129 = ISZERO v128
0x12a: v12a(0x132) = CONST 
0x12d: JUMPI v12a(0x132) v129
----------------------------------

Begin block 0x12e
prev = {'0x127'}, next = {}
----------------------------------
Block 0x12e
0x12e: v12e(0x0) = CONST 
0x131: REVERT v12e(0x0) v12e(0x0)
----------------------------------

Begin block 0x132
prev = {'0x127'}, next = {'0x1490x127'}
----------------------------------
Block 0x132
0x133: v133(0x149) = CONST 
0x136: v136(0x1) = CONST 
0x138: v138(0xa0) = CONST 
0x13a: v13a(0x2) = CONST 
0x13c: v13c(0x10000000000000000000000000000000000000000) = EXP v13a(0x2) v138(0xa0)
0x13d: v13d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v13c(0x10000000000000000000000000000000000000000) v136(0x1)
0x13e: v13e(0x4) = CONST 
0x140: v140 = CALLDATALOAD v13e(0x4)
0x141: v141 = AND v140 v13d(0xffffffffffffffffffffffffffffffffffffffff)
0x142: v142(0x24) = CONST 
0x144: v144 = CALLDATALOAD v142(0x24)
0x145: v145(0x283) = CONST 
0x148: v148_0 = CALLPRIVATE v145(0x283) v144 v141 v133(0x149)
----------------------------------

Begin block 0x1490x127
prev = {'0x132'}, next = {}
----------------------------------
Block 0x1490x127
0x14a0x127: v12714a(0x40) = CONST 
0x14c0x127: v12714c = MLOAD v12714a(0x40)
0x14e0x127: v12714e = ISZERO v148_0
0x14f0x127: v12714f = ISZERO v12714e
0x1510x127: MSTORE v12714c v12714f
0x1520x127: v127152(0x20) = CONST 
0x1540x127: v127154 = ADD v127152(0x20) v12714c
0x1550x127: v127155(0x40) = CONST 
0x1570x127: v127157 = MLOAD v127155(0x40)
0x15a0x127: v12715a = SUB v127154 v127157
0x15c0x127: RETURN v127157 v12715a
----------------------------------

Begin block 0x1490x182
prev = {'0x41e'}, next = {}
----------------------------------
Block 0x1490x182
0x1490x182_0x0: v149182_0 = PHI v411(0x1) v41a(0x0)
0x14a0x182: v18214a(0x40) = CONST 
0x14c0x182: v18214c = MLOAD v18214a(0x40)
0x14e0x182: v18214e = ISZERO v149182_0
0x14f0x182: v18214f = ISZERO v18214e
0x1510x182: MSTORE v18214c v18214f
0x1520x182: v182152(0x20) = CONST 
0x1540x182: v182154 = ADD v182152(0x20) v18214c
0x1550x182: v182155(0x40) = CONST 
0x1570x182: v182157 = MLOAD v182155(0x40)
0x15a0x182: v18215a = SUB v182154 v182157
0x15c0x182: RETURN v182157 v18215a
----------------------------------

Begin block 0x1490x205
prev = {'0x210'}, next = {}
----------------------------------
Block 0x1490x205
0x14a0x205: v20514a(0x40) = CONST 
0x14c0x205: v20514c = MLOAD v20514a(0x40)
0x14e0x205: v20514e = ISZERO v226_0
0x14f0x205: v20514f = ISZERO v20514e
0x1510x205: MSTORE v20514c v20514f
0x1520x205: v205152(0x20) = CONST 
0x1540x205: v205154 = ADD v205152(0x20) v20514c
0x1550x205: v205155(0x40) = CONST 
0x1570x205: v205157 = MLOAD v205155(0x40)
0x15a0x205: v20515a = SUB v205154 v205157
0x15c0x205: RETURN v205157 v20515a
----------------------------------

Begin block 0x15d
prev = {}, next = {'0x168', '0x164'}
----------------------------------
function totalSupply()()
Block 0x15d
0x15e: v15e = CALLVALUE 
0x15f: v15f = ISZERO v15e
0x160: v160(0x168) = CONST 
0x163: JUMPI v160(0x168) v15f
----------------------------------

Begin block 0x164
prev = {'0x15d'}, next = {}
----------------------------------
Block 0x164
0x164: v164(0x0) = CONST 
0x167: REVERT v164(0x0) v164(0x0)
----------------------------------

Begin block 0x168
prev = {'0x15d'}, next = {'0x2f0'}
----------------------------------
Block 0x168
0x169: v169(0x170) = CONST 
0x16c: v16c(0x2f0) = CONST 
0x16f: JUMP v16c(0x2f0)
----------------------------------

Begin block 0x1700x15d
prev = {'0x2f0'}, next = {}
----------------------------------
Block 0x1700x15d
0x1710x15d: v15d171(0x40) = CONST 
0x1730x15d: v15d173 = MLOAD v15d171(0x40)
0x1760x15d: MSTORE v15d173 v2f3
0x1770x15d: v15d177(0x20) = CONST 
0x1790x15d: v15d179 = ADD v15d177(0x20) v15d173
0x17a0x15d: v15d17a(0x40) = CONST 
0x17c0x15d: v15d17c = MLOAD v15d17a(0x40)
0x17f0x15d: v15d17f = SUB v15d179 v15d17c
0x1810x15d: RETURN v15d17c v15d17f
----------------------------------

Begin block 0x1700x1d3
prev = {'0x42b'}, next = {}
----------------------------------
Block 0x1700x1d3
0x1710x1d3: v1d3171(0x40) = CONST 
0x1730x1d3: v1d3173 = MLOAD v1d3171(0x40)
0x1760x1d3: MSTORE v1d3173 v443
0x1770x1d3: v1d3177(0x20) = CONST 
0x1790x1d3: v1d3179 = ADD v1d3177(0x20) v1d3173
0x17a0x1d3: v1d317a(0x40) = CONST 
0x17c0x1d3: v1d317c = MLOAD v1d317a(0x40)
0x17f0x1d3: v1d317f = SUB v1d3179 v1d317c
0x1810x1d3: RETURN v1d317c v1d317f
----------------------------------

Begin block 0x1700x227
prev = {'0x53a'}, next = {}
----------------------------------
Block 0x1700x227
0x1710x227: v227171(0x40) = CONST 
0x1730x227: v227173 = MLOAD v227171(0x40)
0x1760x227: MSTORE v227173 v562
0x1770x227: v227177(0x20) = CONST 
0x1790x227: v227179 = ADD v227177(0x20) v227173
0x17a0x227: v22717a(0x40) = CONST 
0x17c0x227: v22717c = MLOAD v22717a(0x40)
0x17f0x227: v22717f = SUB v227179 v22717c
0x1810x227: RETURN v22717c v22717f
----------------------------------

Begin block 0x182
prev = {}, next = {'0x189', '0x18d'}
----------------------------------
function transferFrom(address,address,uint256)()
Block 0x182
0x183: v183 = CALLVALUE 
0x184: v184 = ISZERO v183
0x185: v185(0x18d) = CONST 
0x188: JUMPI v185(0x18d) v184
----------------------------------

Begin block 0x189
prev = {'0x182'}, next = {}
----------------------------------
Block 0x189
0x189: v189(0x0) = CONST 
0x18c: REVERT v189(0x0) v189(0x0)
----------------------------------

Begin block 0x18d
prev = {'0x182'}, next = {'0x2f6'}
----------------------------------
Block 0x18d
0x18e: v18e(0x149) = CONST 
0x191: v191(0x1) = CONST 
0x193: v193(0xa0) = CONST 
0x195: v195(0x2) = CONST 
0x197: v197(0x10000000000000000000000000000000000000000) = EXP v195(0x2) v193(0xa0)
0x198: v198(0xffffffffffffffffffffffffffffffffffffffff) = SUB v197(0x10000000000000000000000000000000000000000) v191(0x1)
0x199: v199(0x4) = CONST 
0x19b: v19b = CALLDATALOAD v199(0x4)
0x19d: v19d = AND v198(0xffffffffffffffffffffffffffffffffffffffff) v19b
0x19f: v19f(0x24) = CONST 
0x1a1: v1a1 = CALLDATALOAD v19f(0x24)
0x1a2: v1a2 = AND v1a1 v198(0xffffffffffffffffffffffffffffffffffffffff)
0x1a3: v1a3(0x44) = CONST 
0x1a5: v1a5 = CALLDATALOAD v1a3(0x44)
0x1a6: v1a6(0x2f6) = CONST 
0x1a9: JUMP v1a6(0x2f6)
----------------------------------

Begin block 0x1aa
prev = {}, next = {'0x1b5', '0x1b1'}
----------------------------------
function decimals()()
Block 0x1aa
0x1ab: v1ab = CALLVALUE 
0x1ac: v1ac = ISZERO v1ab
0x1ad: v1ad(0x1b5) = CONST 
0x1b0: JUMPI v1ad(0x1b5) v1ac
----------------------------------

Begin block 0x1b1
prev = {'0x1aa'}, next = {}
----------------------------------
Block 0x1b1
0x1b1: v1b1(0x0) = CONST 
0x1b4: REVERT v1b1(0x0) v1b1(0x0)
----------------------------------

Begin block 0x1b5
prev = {'0x1aa'}, next = {'0x426'}
----------------------------------
Block 0x1b5
0x1b6: v1b6(0x1bd) = CONST 
0x1b9: v1b9(0x426) = CONST 
0x1bc: JUMP v1b9(0x426)
----------------------------------

Begin block 0x1bd
prev = {'0x426'}, next = {}
----------------------------------
Block 0x1bd
0x1be: v1be(0x40) = CONST 
0x1c0: v1c0 = MLOAD v1be(0x40)
0x1c1: v1c1(0xff) = CONST 
0x1c5: v1c5 = AND v427(0x8) v1c1(0xff)
0x1c7: MSTORE v1c0 v1c5
0x1c8: v1c8(0x20) = CONST 
0x1ca: v1ca = ADD v1c8(0x20) v1c0
0x1cb: v1cb(0x40) = CONST 
0x1cd: v1cd = MLOAD v1cb(0x40)
0x1d0: v1d0 = SUB v1ca v1cd
0x1d2: RETURN v1cd v1d0
----------------------------------

Begin block 0x1d3
prev = {}, next = {'0x1de', '0x1da'}
----------------------------------
function balanceOf(address)()
Block 0x1d3
0x1d4: v1d4 = CALLVALUE 
0x1d5: v1d5 = ISZERO v1d4
0x1d6: v1d6(0x1de) = CONST 
0x1d9: JUMPI v1d6(0x1de) v1d5
----------------------------------

Begin block 0x1da
prev = {'0x1d3'}, next = {}
----------------------------------
Block 0x1da
0x1da: v1da(0x0) = CONST 
0x1dd: REVERT v1da(0x0) v1da(0x0)
----------------------------------

Begin block 0x1de
prev = {'0x1d3'}, next = {'0x42b'}
----------------------------------
Block 0x1de
0x1df: v1df(0x170) = CONST 
0x1e2: v1e2(0x1) = CONST 
0x1e4: v1e4(0xa0) = CONST 
0x1e6: v1e6(0x2) = CONST 
0x1e8: v1e8(0x10000000000000000000000000000000000000000) = EXP v1e6(0x2) v1e4(0xa0)
0x1e9: v1e9(0xffffffffffffffffffffffffffffffffffffffff) = SUB v1e8(0x10000000000000000000000000000000000000000) v1e2(0x1)
0x1ea: v1ea(0x4) = CONST 
0x1ec: v1ec = CALLDATALOAD v1ea(0x4)
0x1ed: v1ed = AND v1ec v1e9(0xffffffffffffffffffffffffffffffffffffffff)
0x1ee: v1ee(0x42b) = CONST 
0x1f1: JUMP v1ee(0x42b)
----------------------------------

Begin block 0x1f2
prev = {}, next = {'0x1fd', '0x1f9'}
----------------------------------
function symbol()()
Block 0x1f2
0x1f3: v1f3 = CALLVALUE 
0x1f4: v1f4 = ISZERO v1f3
0x1f5: v1f5(0x1fd) = CONST 
0x1f8: JUMPI v1f5(0x1fd) v1f4
----------------------------------

Begin block 0x1f9
prev = {'0x1f2'}, next = {}
----------------------------------
Block 0x1f9
0x1f9: v1f9(0x0) = CONST 
0x1fc: REVERT v1f9(0x0) v1f9(0x0)
----------------------------------

Begin block 0x1fd
prev = {'0x1f2'}, next = {'0x446'}
----------------------------------
Block 0x1fd
0x1fe: v1fe(0xb0) = CONST 
0x201: v201(0x446) = CONST 
0x204: JUMP v201(0x446)
----------------------------------

Begin block 0x205
prev = {}, next = {'0x20c', '0x210'}
----------------------------------
function transfer(address,uint256)()
Block 0x205
0x206: v206 = CALLVALUE 
0x207: v207 = ISZERO v206
0x208: v208(0x210) = CONST 
0x20b: JUMPI v208(0x210) v207
----------------------------------

Begin block 0x20c
prev = {'0x205'}, next = {}
----------------------------------
Block 0x20c
0x20c: v20c(0x0) = CONST 
0x20f: REVERT v20c(0x0) v20c(0x0)
----------------------------------

Begin block 0x210
prev = {'0x205'}, next = {'0x1490x205'}
----------------------------------
Block 0x210
0x211: v211(0x149) = CONST 
0x214: v214(0x1) = CONST 
0x216: v216(0xa0) = CONST 
0x218: v218(0x2) = CONST 
0x21a: v21a(0x10000000000000000000000000000000000000000) = EXP v218(0x2) v216(0xa0)
0x21b: v21b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v21a(0x10000000000000000000000000000000000000000) v214(0x1)
0x21c: v21c(0x4) = CONST 
0x21e: v21e = CALLDATALOAD v21c(0x4)
0x21f: v21f = AND v21e v21b(0xffffffffffffffffffffffffffffffffffffffff)
0x220: v220(0x24) = CONST 
0x222: v222 = CALLDATALOAD v220(0x24)
0x223: v223(0x47d) = CONST 
0x226: v226_0 = CALLPRIVATE v223(0x47d) v222 v21f v211(0x149)
----------------------------------

Begin block 0x227
prev = {}, next = {'0x22e', '0x232'}
----------------------------------
function allowance(address,address)()
Block 0x227
0x228: v228 = CALLVALUE 
0x229: v229 = ISZERO v228
0x22a: v22a(0x232) = CONST 
0x22d: JUMPI v22a(0x232) v229
----------------------------------

Begin block 0x22e
prev = {'0x227'}, next = {}
----------------------------------
Block 0x22e
0x22e: v22e(0x0) = CONST 
0x231: REVERT v22e(0x0) v22e(0x0)
----------------------------------

Begin block 0x232
prev = {'0x227'}, next = {'0x53a'}
----------------------------------
Block 0x232
0x233: v233(0x170) = CONST 
0x236: v236(0x1) = CONST 
0x238: v238(0xa0) = CONST 
0x23a: v23a(0x2) = CONST 
0x23c: v23c(0x10000000000000000000000000000000000000000) = EXP v23a(0x2) v238(0xa0)
0x23d: v23d(0xffffffffffffffffffffffffffffffffffffffff) = SUB v23c(0x10000000000000000000000000000000000000000) v236(0x1)
0x23e: v23e(0x4) = CONST 
0x240: v240 = CALLDATALOAD v23e(0x4)
0x242: v242 = AND v23d(0xffffffffffffffffffffffffffffffffffffffff) v240
0x244: v244(0x24) = CONST 
0x246: v246 = CALLDATALOAD v244(0x24)
0x247: v247 = AND v246 v23d(0xffffffffffffffffffffffffffffffffffffffff)
0x248: v248(0x53a) = CONST 
0x24b: JUMP v248(0x53a)
----------------------------------

Begin block 0x24c
prev = {'0xa8'}, next = {'0xb00x9d'}
----------------------------------
Block 0x24c
0x24d: v24d(0x40) = CONST 
0x250: v250 = MLOAD v24d(0x40)
0x253: v253 = ADD v250 v24d(0x40)
0x254: v254(0x40) = CONST 
0x256: MSTORE v254(0x40) v253
0x257: v257(0xf) = CONST 
0x25a: MSTORE v250 v257(0xf)
0x25b: v25b(0x436f6c6f72426c6f636b436861696e0000000000000000000000000000000000) = CONST 
0x27c: v27c(0x20) = CONST 
0x27f: v27f = ADD v250 v27c(0x20)
0x280: MSTORE v27f v25b(0x436f6c6f72426c6f636b436861696e0000000000000000000000000000000000)
0x282: JUMP va9(0xb0)
----------------------------------

Begin block 0x283
prev = {}, next = {'0x2ea0x283'}
----------------------------------
function 0x283(v283arg0, v283arg1, v283arg2)
Block 0x283
0x284: v284(0x1) = CONST 
0x286: v286(0xa0) = CONST 
0x288: v288(0x2) = CONST 
0x28a: v28a(0x10000000000000000000000000000000000000000) = EXP v288(0x2) v286(0xa0)
0x28b: v28b(0xffffffffffffffffffffffffffffffffffffffff) = SUB v28a(0x10000000000000000000000000000000000000000) v284(0x1)
0x28c: v28c = CALLER 
0x28e: v28e = AND v28b(0xffffffffffffffffffffffffffffffffffffffff) v28c
0x28f: v28f(0x0) = CONST 
0x293: MSTORE v28f(0x0) v28e
0x294: v294(0x1) = CONST 
0x296: v296(0x20) = CONST 
0x29a: MSTORE v296(0x20) v294(0x1)
0x29b: v29b(0x40) = CONST 
0x29f: v29f = SHA3 v28f(0x0) v29b(0x40)
0x2a2: v2a2 = AND v283arg1 v28b(0xffffffffffffffffffffffffffffffffffffffff)
0x2a5: MSTORE v28f(0x0) v2a2
0x2a9: MSTORE v296(0x20) v29f
0x2ac: v2ac = SHA3 v28f(0x0) v29b(0x40)
0x2af: SSTORE v2ac v283arg0
0x2b4: v2b4(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) = CONST 
0x2d8: v2d8 = MLOAD v29b(0x40)
0x2db: MSTORE v2d8 v283arg0
0x2dc: v2dc(0x20) = CONST 
0x2de: v2de = ADD v2dc(0x20) v2d8
0x2df: v2df(0x40) = CONST 
0x2e1: v2e1 = MLOAD v2df(0x40)
0x2e4: v2e4 = SUB v2de v2e1
0x2e6: LOG3 v2e1 v2e4 v2b4(0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925) v28e v2a2
0x2e8: v2e8(0x1) = CONST 
----------------------------------

Begin block 0x2ea0x283
prev = {'0x283'}, next = {}
----------------------------------
Block 0x2ea0x283
0x2ef0x283: RETURNPRIVATE v283arg2 v2e8(0x1)
----------------------------------

Begin block 0x2ea0x47d
prev = {'0x532', '0x4c6'}, next = {}
----------------------------------
Block 0x2ea0x47d
0x2ea0x47d_0x0: v2ea47d_0 = PHI v52c(0x1) v534(0x0)
0x2ef0x47d: RETURNPRIVATE v47darg2 v2ea47d_0
----------------------------------

Begin block 0x2f0
prev = {'0x168'}, next = {'0x1700x15d'}
----------------------------------
Block 0x2f0
0x2f1: v2f1(0x3) = CONST 
0x2f3: v2f3 = SLOAD v2f1(0x3)
0x2f5: JUMP v169(0x170)
----------------------------------

Begin block 0x2f6
prev = {'0x18d'}, next = {'0x339', '0x334'}
----------------------------------
Block 0x2f6
0x2f7: v2f7(0x1) = CONST 
0x2f9: v2f9(0xa0) = CONST 
0x2fb: v2fb(0x2) = CONST 
0x2fd: v2fd(0x10000000000000000000000000000000000000000) = EXP v2fb(0x2) v2f9(0xa0)
0x2fe: v2fe(0xffffffffffffffffffffffffffffffffffffffff) = SUB v2fd(0x10000000000000000000000000000000000000000) v2f7(0x1)
0x301: v301 = AND v19d v2fe(0xffffffffffffffffffffffffffffffffffffffff)
0x302: v302(0x0) = CONST 
0x306: MSTORE v302(0x0) v301
0x307: v307(0x1) = CONST 
0x309: v309(0x20) = CONST 
0x30d: MSTORE v309(0x20) v307(0x1)
0x30e: v30e(0x40) = CONST 
0x312: v312 = SHA3 v302(0x0) v30e(0x40)
0x313: v313 = CALLER 
0x316: v316 = AND v2fe(0xffffffffffffffffffffffffffffffffffffffff) v313
0x318: MSTORE v302(0x0) v316
0x31b: MSTORE v309(0x20) v312
0x31e: v31e = SHA3 v302(0x0) v30e(0x40)
0x31f: v31f = SLOAD v31e
0x322: MSTORE v302(0x0) v301
0x325: MSTORE v309(0x20) v302(0x0)
0x328: v328 = SHA3 v302(0x0) v30e(0x40)
0x329: v329 = SLOAD v328
0x32c: v32c = LT v329 v1a5
0x32e: v32e = ISZERO v32c
0x330: v330(0x339) = CONST 
0x333: JUMPI v330(0x339) v32c
----------------------------------

Begin block 0x334
prev = {'0x2f6'}, next = {'0x339'}
----------------------------------
Block 0x334
0x337: v337 = LT v31f v1a5
0x338: v338 = ISZERO v337
----------------------------------

Begin block 0x339
prev = {'0x2f6', '0x334'}, next = {'0x35f', '0x340'}
----------------------------------
Block 0x339
0x339_0x0: v339_0 = PHI v32e v338
0x33b: v33b = ISZERO v339_0
0x33c: v33c(0x35f) = CONST 
0x33f: JUMPI v33c(0x35f) v33b
----------------------------------

Begin block 0x340
prev = {'0x339'}, next = {'0x35f'}
----------------------------------
Block 0x340
0x341: v341(0x1) = CONST 
0x343: v343(0xa0) = CONST 
0x345: v345(0x2) = CONST 
0x347: v347(0x10000000000000000000000000000000000000000) = EXP v345(0x2) v343(0xa0)
0x348: v348(0xffffffffffffffffffffffffffffffffffffffff) = SUB v347(0x10000000000000000000000000000000000000000) v341(0x1)
0x34a: v34a = AND v1a2 v348(0xffffffffffffffffffffffffffffffffffffffff)
0x34b: v34b(0x0) = CONST 
0x34f: MSTORE v34b(0x0) v34a
0x350: v350(0x20) = CONST 
0x354: MSTORE v350(0x20) v34b(0x0)
0x355: v355(0x40) = CONST 
0x358: v358 = SHA3 v34b(0x0) v355(0x40)
0x359: v359 = SLOAD v358
0x35c: v35c = ADD v359 v1a5
0x35d: v35d = LT v35c v359
0x35e: v35e = ISZERO v35d
----------------------------------

Begin block 0x35f
prev = {'0x339', '0x340'}, next = {'0x419', '0x365'}
----------------------------------
Block 0x35f
0x35f_0x0: v35f_0 = PHI v32e v338 v35e
0x360: v360 = ISZERO v35f_0
0x361: v361(0x419) = CONST 
0x364: JUMPI v361(0x419) v360
----------------------------------

Begin block 0x365
prev = {'0x35f'}, next = {'0x3c9', '0x39c'}
----------------------------------
Block 0x365
0x365: v365(0x1) = CONST 
0x367: v367(0xa0) = CONST 
0x369: v369(0x2) = CONST 
0x36b: v36b(0x10000000000000000000000000000000000000000) = EXP v369(0x2) v367(0xa0)
0x36c: v36c(0xffffffffffffffffffffffffffffffffffffffff) = SUB v36b(0x10000000000000000000000000000000000000000) v365(0x1)
0x36f: v36f = AND v1a2 v36c(0xffffffffffffffffffffffffffffffffffffffff)
0x370: v370(0x0) = CONST 
0x374: MSTORE v370(0x0) v36f
0x375: v375(0x20) = CONST 
0x379: MSTORE v375(0x20) v370(0x0)
0x37a: v37a(0x40) = CONST 
0x37e: v37e = SHA3 v370(0x0) v37a(0x40)
0x380: v380 = SLOAD v37e
0x382: v382 = ADD v1a5 v380
0x384: SSTORE v37e v382
0x387: v387 = AND v19d v36c(0xffffffffffffffffffffffffffffffffffffffff)
0x389: MSTORE v370(0x0) v387
0x38a: v38a = SHA3 v370(0x0) v37a(0x40)
0x38c: v38c = SLOAD v38a
0x38f: v38f = SUB v38c v1a5
0x391: SSTORE v38a v38f
0x392: v392(0x0) = CONST 
0x394: v394(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = NOT v392(0x0)
0x396: v396 = LT v31f v394(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
0x397: v397 = ISZERO v396
0x398: v398(0x3c9) = CONST 
0x39b: JUMPI v398(0x3c9) v397
----------------------------------

Begin block 0x39c
prev = {'0x365'}, next = {'0x3c9'}
----------------------------------
Block 0x39c
0x39c: v39c(0x1) = CONST 
0x39e: v39e(0xa0) = CONST 
0x3a0: v3a0(0x2) = CONST 
0x3a2: v3a2(0x10000000000000000000000000000000000000000) = EXP v3a0(0x2) v39e(0xa0)
0x3a3: v3a3(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3a2(0x10000000000000000000000000000000000000000) v39c(0x1)
0x3a6: v3a6 = AND v19d v3a3(0xffffffffffffffffffffffffffffffffffffffff)
0x3a7: v3a7(0x0) = CONST 
0x3ab: MSTORE v3a7(0x0) v3a6
0x3ac: v3ac(0x1) = CONST 
0x3ae: v3ae(0x20) = CONST 
0x3b2: MSTORE v3ae(0x20) v3ac(0x1)
0x3b3: v3b3(0x40) = CONST 
0x3b7: v3b7 = SHA3 v3a7(0x0) v3b3(0x40)
0x3b8: v3b8 = CALLER 
0x3bb: v3bb = AND v3a3(0xffffffffffffffffffffffffffffffffffffffff) v3b8
0x3bd: MSTORE v3a7(0x0) v3bb
0x3c0: MSTORE v3ae(0x20) v3b7
0x3c1: v3c1 = SHA3 v3a7(0x0) v3b3(0x40)
0x3c3: v3c3 = SLOAD v3c1
0x3c6: v3c6 = SUB v3c3 v1a5
0x3c8: SSTORE v3c1 v3c6
----------------------------------

Begin block 0x3c9
prev = {'0x365', '0x39c'}, next = {'0x41e'}
----------------------------------
Block 0x3c9
0x3cb: v3cb(0x1) = CONST 
0x3cd: v3cd(0xa0) = CONST 
0x3cf: v3cf(0x2) = CONST 
0x3d1: v3d1(0x10000000000000000000000000000000000000000) = EXP v3cf(0x2) v3cd(0xa0)
0x3d2: v3d2(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3d1(0x10000000000000000000000000000000000000000) v3cb(0x1)
0x3d3: v3d3 = AND v3d2(0xffffffffffffffffffffffffffffffffffffffff) v1a2
0x3d5: v3d5(0x1) = CONST 
0x3d7: v3d7(0xa0) = CONST 
0x3d9: v3d9(0x2) = CONST 
0x3db: v3db(0x10000000000000000000000000000000000000000) = EXP v3d9(0x2) v3d7(0xa0)
0x3dc: v3dc(0xffffffffffffffffffffffffffffffffffffffff) = SUB v3db(0x10000000000000000000000000000000000000000) v3d5(0x1)
0x3dd: v3dd = AND v3dc(0xffffffffffffffffffffffffffffffffffffffff) v19d
0x3de: v3de(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x400: v400(0x40) = CONST 
0x402: v402 = MLOAD v400(0x40)
0x405: MSTORE v402 v1a5
0x406: v406(0x20) = CONST 
0x408: v408 = ADD v406(0x20) v402
0x409: v409(0x40) = CONST 
0x40b: v40b = MLOAD v409(0x40)
0x40e: v40e = SUB v408 v40b
0x410: LOG3 v40b v40e v3de(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v3dd v3d3
0x411: v411(0x1) = CONST 
0x415: v415(0x41e) = CONST 
0x418: JUMP v415(0x41e)
----------------------------------

Begin block 0x419
prev = {'0x35f'}, next = {'0x41e'}
----------------------------------
Block 0x419
0x41a: v41a(0x0) = CONST 
----------------------------------

Begin block 0x41e
prev = {'0x3c9', '0x419'}, next = {'0x1490x182'}
----------------------------------
Block 0x41e
0x425: JUMP v18e(0x149)
----------------------------------

Begin block 0x426
prev = {'0x1b5'}, next = {'0x1bd'}
----------------------------------
Block 0x426
0x427: v427(0x8) = CONST 
0x42a: JUMP v1b6(0x1bd)
----------------------------------

Begin block 0x42b
prev = {'0x1de'}, next = {'0x1700x1d3'}
----------------------------------
Block 0x42b
0x42c: v42c(0x1) = CONST 
0x42e: v42e(0xa0) = CONST 
0x430: v430(0x2) = CONST 
0x432: v432(0x10000000000000000000000000000000000000000) = EXP v430(0x2) v42e(0xa0)
0x433: v433(0xffffffffffffffffffffffffffffffffffffffff) = SUB v432(0x10000000000000000000000000000000000000000) v42c(0x1)
0x434: v434 = AND v433(0xffffffffffffffffffffffffffffffffffffffff) v1ed
0x435: v435(0x0) = CONST 
0x439: MSTORE v435(0x0) v434
0x43a: v43a(0x20) = CONST 
0x43e: MSTORE v43a(0x20) v435(0x0)
0x43f: v43f(0x40) = CONST 
0x442: v442 = SHA3 v435(0x0) v43f(0x40)
0x443: v443 = SLOAD v442
0x445: JUMP v1df(0x170)
----------------------------------

Begin block 0x446
prev = {'0x1fd'}, next = {'0xb00x1f2'}
----------------------------------
Block 0x446
0x447: v447(0x40) = CONST 
0x44a: v44a = MLOAD v447(0x40)
0x44d: v44d = ADD v44a v447(0x40)
0x44e: v44e(0x40) = CONST 
0x450: MSTORE v44e(0x40) v44d
0x451: v451(0x3) = CONST 
0x454: MSTORE v44a v451(0x3)
0x455: v455(0x4342430000000000000000000000000000000000000000000000000000000000) = CONST 
0x476: v476(0x20) = CONST 
0x479: v479 = ADD v44a v476(0x20)
0x47a: MSTORE v479 v455(0x4342430000000000000000000000000000000000000000000000000000000000)
0x47c: JUMP v1fe(0xb0)
----------------------------------

Begin block 0x47d
prev = {}, next = {'0x4c0', '0x4a1'}
----------------------------------
function 0x47d(v47darg0, v47darg1, v47darg2)
Block 0x47d
0x47e: v47e(0x1) = CONST 
0x480: v480(0xa0) = CONST 
0x482: v482(0x2) = CONST 
0x484: v484(0x10000000000000000000000000000000000000000) = EXP v482(0x2) v480(0xa0)
0x485: v485(0xffffffffffffffffffffffffffffffffffffffff) = SUB v484(0x10000000000000000000000000000000000000000) v47e(0x1)
0x486: v486 = CALLER 
0x487: v487 = AND v486 v485(0xffffffffffffffffffffffffffffffffffffffff)
0x488: v488(0x0) = CONST 
0x48c: MSTORE v488(0x0) v487
0x48d: v48d(0x20) = CONST 
0x491: MSTORE v48d(0x20) v488(0x0)
0x492: v492(0x40) = CONST 
0x495: v495 = SHA3 v488(0x0) v492(0x40)
0x496: v496 = SLOAD v495
0x499: v499 = LT v496 v47darg0
0x49b: v49b = ISZERO v499
0x49d: v49d(0x4c0) = CONST 
0x4a0: JUMPI v49d(0x4c0) v499
----------------------------------

Begin block 0x4a1
prev = {'0x47d'}, next = {'0x4c0'}
----------------------------------
Block 0x4a1
0x4a2: v4a2(0x1) = CONST 
0x4a4: v4a4(0xa0) = CONST 
0x4a6: v4a6(0x2) = CONST 
0x4a8: v4a8(0x10000000000000000000000000000000000000000) = EXP v4a6(0x2) v4a4(0xa0)
0x4a9: v4a9(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4a8(0x10000000000000000000000000000000000000000) v4a2(0x1)
0x4ab: v4ab = AND v47darg1 v4a9(0xffffffffffffffffffffffffffffffffffffffff)
0x4ac: v4ac(0x0) = CONST 
0x4b0: MSTORE v4ac(0x0) v4ab
0x4b1: v4b1(0x20) = CONST 
0x4b5: MSTORE v4b1(0x20) v4ac(0x0)
0x4b6: v4b6(0x40) = CONST 
0x4b9: v4b9 = SHA3 v4ac(0x0) v4b6(0x40)
0x4ba: v4ba = SLOAD v4b9
0x4bd: v4bd = ADD v4ba v47darg0
0x4be: v4be = LT v4bd v4ba
0x4bf: v4bf = ISZERO v4be
----------------------------------

Begin block 0x4c0
prev = {'0x47d', '0x4a1'}, next = {'0x532', '0x4c6'}
----------------------------------
Block 0x4c0
0x4c0_0x0: v4c0_0 = PHI v49b v4bf
0x4c1: v4c1 = ISZERO v4c0_0
0x4c2: v4c2(0x532) = CONST 
0x4c5: JUMPI v4c2(0x532) v4c1
----------------------------------

Begin block 0x4c6
prev = {'0x4c0'}, next = {'0x2ea0x47d'}
----------------------------------
Block 0x4c6
0x4c6: v4c6(0x1) = CONST 
0x4c8: v4c8(0xa0) = CONST 
0x4ca: v4ca(0x2) = CONST 
0x4cc: v4cc(0x10000000000000000000000000000000000000000) = EXP v4ca(0x2) v4c8(0xa0)
0x4cd: v4cd(0xffffffffffffffffffffffffffffffffffffffff) = SUB v4cc(0x10000000000000000000000000000000000000000) v4c6(0x1)
0x4ce: v4ce = CALLER 
0x4d0: v4d0 = AND v4cd(0xffffffffffffffffffffffffffffffffffffffff) v4ce
0x4d1: v4d1(0x0) = CONST 
0x4d5: MSTORE v4d1(0x0) v4d0
0x4d6: v4d6(0x20) = CONST 
0x4da: MSTORE v4d6(0x20) v4d1(0x0)
0x4db: v4db(0x40) = CONST 
0x4df: v4df = SHA3 v4d1(0x0) v4db(0x40)
0x4e1: v4e1 = SLOAD v4df
0x4e4: v4e4 = SUB v4e1 v47darg0
0x4e6: SSTORE v4df v4e4
0x4e9: v4e9 = AND v47darg1 v4cd(0xffffffffffffffffffffffffffffffffffffffff)
0x4ec: MSTORE v4d1(0x0) v4e9
0x4f0: v4f0 = SHA3 v4d1(0x0) v4db(0x40)
0x4f2: v4f2 = SLOAD v4f0
0x4f4: v4f4 = ADD v47darg0 v4f2
0x4f6: SSTORE v4f0 v4f4
0x4f8: v4f8(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) = CONST 
0x51c: v51c = MLOAD v4db(0x40)
0x51f: MSTORE v51c v47darg0
0x520: v520(0x20) = CONST 
0x522: v522 = ADD v520(0x20) v51c
0x523: v523(0x40) = CONST 
0x525: v525 = MLOAD v523(0x40)
0x528: v528 = SUB v522 v525
0x52a: LOG3 v525 v528 v4f8(0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef) v4d0 v4e9
0x52c: v52c(0x1) = CONST 
0x52e: v52e(0x2ea) = CONST 
0x531: JUMP v52e(0x2ea)
----------------------------------

Begin block 0x532
prev = {'0x4c0'}, next = {'0x2ea0x47d'}
----------------------------------
Block 0x532
0x534: v534(0x0) = CONST 
0x536: v536(0x2ea) = CONST 
0x539: JUMP v536(0x2ea)
----------------------------------

Begin block 0x53a
prev = {'0x232'}, next = {'0x1700x227'}
----------------------------------
Block 0x53a
0x53b: v53b(0x1) = CONST 
0x53d: v53d(0xa0) = CONST 
0x53f: v53f(0x2) = CONST 
0x541: v541(0x10000000000000000000000000000000000000000) = EXP v53f(0x2) v53d(0xa0)
0x542: v542(0xffffffffffffffffffffffffffffffffffffffff) = SUB v541(0x10000000000000000000000000000000000000000) v53b(0x1)
0x545: v545 = AND v542(0xffffffffffffffffffffffffffffffffffffffff) v242
0x546: v546(0x0) = CONST 
0x54a: MSTORE v546(0x0) v545
0x54b: v54b(0x1) = CONST 
0x54d: v54d(0x20) = CONST 
0x551: MSTORE v54d(0x20) v54b(0x1)
0x552: v552(0x40) = CONST 
0x556: v556 = SHA3 v546(0x0) v552(0x40)
0x55a: v55a = AND v542(0xffffffffffffffffffffffffffffffffffffffff) v247
0x55c: MSTORE v546(0x0) v55a
0x560: MSTORE v54d(0x20) v556
0x561: v561 = SHA3 v546(0x0) v552(0x40)
0x562: v562 = SLOAD v561
0x564: JUMP v233(0x170)
----------------------------------

Begin block 0x5a5
prev = {'0x0', '0x8d'}, next = {}
----------------------------------
Block 0x5a5
0x5a6: v5a6(0x98) = CONST 
0x5a7: CALLPRIVATE v5a6(0x98)
----------------------------------

Begin block 0x5a8
prev = {'0xd'}, next = {}
----------------------------------
Block 0x5a8
0x5a9: v5a9(0x9d) = CONST 
0x5aa: CALLPRIVATE v5a9(0x9d)
----------------------------------

Begin block 0x5ab
prev = {'0x40'}, next = {}
----------------------------------
Block 0x5ab
0x5ac: v5ac(0x127) = CONST 
0x5ad: CALLPRIVATE v5ac(0x127)
----------------------------------

Begin block 0x5ae
prev = {'0x4b'}, next = {}
----------------------------------
Block 0x5ae
0x5af: v5af(0x15d) = CONST 
0x5b0: CALLPRIVATE v5af(0x15d)
----------------------------------

Begin block 0x5b1
prev = {'0x56'}, next = {}
----------------------------------
Block 0x5b1
0x5b2: v5b2(0x182) = CONST 
0x5b3: CALLPRIVATE v5b2(0x182)
----------------------------------

Begin block 0x5b4
prev = {'0x61'}, next = {}
----------------------------------
Block 0x5b4
0x5b5: v5b5(0x1aa) = CONST 
0x5b6: CALLPRIVATE v5b5(0x1aa)
----------------------------------

Begin block 0x5b7
prev = {'0x6c'}, next = {}
----------------------------------
Block 0x5b7
0x5b8: v5b8(0x1d3) = CONST 
0x5b9: CALLPRIVATE v5b8(0x1d3)
----------------------------------

Begin block 0x5ba
prev = {'0x77'}, next = {}
----------------------------------
Block 0x5ba
0x5bb: v5bb(0x1f2) = CONST 
0x5bc: CALLPRIVATE v5bb(0x1f2)
----------------------------------

Begin block 0x5bd
prev = {'0x82'}, next = {}
----------------------------------
Block 0x5bd
0x5be: v5be(0x205) = CONST 
0x5bf: CALLPRIVATE v5be(0x205)
----------------------------------

Begin block 0x5c0
prev = {'0x8d'}, next = {}
----------------------------------
Block 0x5c0
0x5c1: v5c1(0x227) = CONST 
0x5c2: CALLPRIVATE v5c1(0x227)
----------------------------------
